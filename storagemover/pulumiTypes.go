// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagemover

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type AgentPropertiesResponseErrorDetails struct {
	// Error code reported by Agent
	Code *string `pulumi:"code"`
	// Expanded description of reported error code
	Message *string `pulumi:"message"`
}

type AgentPropertiesResponseErrorDetailsOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponseErrorDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponseErrorDetails)(nil)).Elem()
}

func (o AgentPropertiesResponseErrorDetailsOutput) ToAgentPropertiesResponseErrorDetailsOutput() AgentPropertiesResponseErrorDetailsOutput {
	return o
}

func (o AgentPropertiesResponseErrorDetailsOutput) ToAgentPropertiesResponseErrorDetailsOutputWithContext(ctx context.Context) AgentPropertiesResponseErrorDetailsOutput {
	return o
}

// Error code reported by Agent
func (o AgentPropertiesResponseErrorDetailsOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponseErrorDetails) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Expanded description of reported error code
func (o AgentPropertiesResponseErrorDetailsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponseErrorDetails) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The Azure Key Vault secret URIs which store the credentials.
type AzureKeyVaultSmbCredentials struct {
	// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
	PasswordUri *string `pulumi:"passwordUri"`
	// The Credentials type.
	// Expected value is 'AzureKeyVaultSmb'.
	Type string `pulumi:"type"`
	// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
	UsernameUri *string `pulumi:"usernameUri"`
}

// AzureKeyVaultSmbCredentialsInput is an input type that accepts AzureKeyVaultSmbCredentialsArgs and AzureKeyVaultSmbCredentialsOutput values.
// You can construct a concrete instance of `AzureKeyVaultSmbCredentialsInput` via:
//
//	AzureKeyVaultSmbCredentialsArgs{...}
type AzureKeyVaultSmbCredentialsInput interface {
	pulumi.Input

	ToAzureKeyVaultSmbCredentialsOutput() AzureKeyVaultSmbCredentialsOutput
	ToAzureKeyVaultSmbCredentialsOutputWithContext(context.Context) AzureKeyVaultSmbCredentialsOutput
}

// The Azure Key Vault secret URIs which store the credentials.
type AzureKeyVaultSmbCredentialsArgs struct {
	// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
	PasswordUri pulumi.StringPtrInput `pulumi:"passwordUri"`
	// The Credentials type.
	// Expected value is 'AzureKeyVaultSmb'.
	Type pulumi.StringInput `pulumi:"type"`
	// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
	UsernameUri pulumi.StringPtrInput `pulumi:"usernameUri"`
}

func (AzureKeyVaultSmbCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSmbCredentials)(nil)).Elem()
}

func (i AzureKeyVaultSmbCredentialsArgs) ToAzureKeyVaultSmbCredentialsOutput() AzureKeyVaultSmbCredentialsOutput {
	return i.ToAzureKeyVaultSmbCredentialsOutputWithContext(context.Background())
}

func (i AzureKeyVaultSmbCredentialsArgs) ToAzureKeyVaultSmbCredentialsOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSmbCredentialsOutput)
}

func (i AzureKeyVaultSmbCredentialsArgs) ToAzureKeyVaultSmbCredentialsPtrOutput() AzureKeyVaultSmbCredentialsPtrOutput {
	return i.ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(context.Background())
}

func (i AzureKeyVaultSmbCredentialsArgs) ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSmbCredentialsOutput).ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(ctx)
}

// AzureKeyVaultSmbCredentialsPtrInput is an input type that accepts AzureKeyVaultSmbCredentialsArgs, AzureKeyVaultSmbCredentialsPtr and AzureKeyVaultSmbCredentialsPtrOutput values.
// You can construct a concrete instance of `AzureKeyVaultSmbCredentialsPtrInput` via:
//
//	        AzureKeyVaultSmbCredentialsArgs{...}
//
//	or:
//
//	        nil
type AzureKeyVaultSmbCredentialsPtrInput interface {
	pulumi.Input

	ToAzureKeyVaultSmbCredentialsPtrOutput() AzureKeyVaultSmbCredentialsPtrOutput
	ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(context.Context) AzureKeyVaultSmbCredentialsPtrOutput
}

type azureKeyVaultSmbCredentialsPtrType AzureKeyVaultSmbCredentialsArgs

func AzureKeyVaultSmbCredentialsPtr(v *AzureKeyVaultSmbCredentialsArgs) AzureKeyVaultSmbCredentialsPtrInput {
	return (*azureKeyVaultSmbCredentialsPtrType)(v)
}

func (*azureKeyVaultSmbCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSmbCredentials)(nil)).Elem()
}

func (i *azureKeyVaultSmbCredentialsPtrType) ToAzureKeyVaultSmbCredentialsPtrOutput() AzureKeyVaultSmbCredentialsPtrOutput {
	return i.ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(context.Background())
}

func (i *azureKeyVaultSmbCredentialsPtrType) ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSmbCredentialsPtrOutput)
}

// The Azure Key Vault secret URIs which store the credentials.
type AzureKeyVaultSmbCredentialsOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSmbCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSmbCredentials)(nil)).Elem()
}

func (o AzureKeyVaultSmbCredentialsOutput) ToAzureKeyVaultSmbCredentialsOutput() AzureKeyVaultSmbCredentialsOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsOutput) ToAzureKeyVaultSmbCredentialsOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsOutput) ToAzureKeyVaultSmbCredentialsPtrOutput() AzureKeyVaultSmbCredentialsPtrOutput {
	return o.ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(context.Background())
}

func (o AzureKeyVaultSmbCredentialsOutput) ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureKeyVaultSmbCredentials) *AzureKeyVaultSmbCredentials {
		return &v
	}).(AzureKeyVaultSmbCredentialsPtrOutput)
}

// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsOutput) PasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultSmbCredentials) *string { return v.PasswordUri }).(pulumi.StringPtrOutput)
}

// The Credentials type.
// Expected value is 'AzureKeyVaultSmb'.
func (o AzureKeyVaultSmbCredentialsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureKeyVaultSmbCredentials) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsOutput) UsernameUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultSmbCredentials) *string { return v.UsernameUri }).(pulumi.StringPtrOutput)
}

type AzureKeyVaultSmbCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSmbCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSmbCredentials)(nil)).Elem()
}

func (o AzureKeyVaultSmbCredentialsPtrOutput) ToAzureKeyVaultSmbCredentialsPtrOutput() AzureKeyVaultSmbCredentialsPtrOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsPtrOutput) ToAzureKeyVaultSmbCredentialsPtrOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsPtrOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsPtrOutput) Elem() AzureKeyVaultSmbCredentialsOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentials) AzureKeyVaultSmbCredentials {
		if v != nil {
			return *v
		}
		var ret AzureKeyVaultSmbCredentials
		return ret
	}).(AzureKeyVaultSmbCredentialsOutput)
}

// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsPtrOutput) PasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PasswordUri
	}).(pulumi.StringPtrOutput)
}

// The Credentials type.
// Expected value is 'AzureKeyVaultSmb'.
func (o AzureKeyVaultSmbCredentialsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsPtrOutput) UsernameUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameUri
	}).(pulumi.StringPtrOutput)
}

// The Azure Key Vault secret URIs which store the credentials.
type AzureKeyVaultSmbCredentialsResponse struct {
	// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
	PasswordUri *string `pulumi:"passwordUri"`
	// The Credentials type.
	// Expected value is 'AzureKeyVaultSmb'.
	Type string `pulumi:"type"`
	// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
	UsernameUri *string `pulumi:"usernameUri"`
}

// The Azure Key Vault secret URIs which store the credentials.
type AzureKeyVaultSmbCredentialsResponseOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSmbCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSmbCredentialsResponse)(nil)).Elem()
}

func (o AzureKeyVaultSmbCredentialsResponseOutput) ToAzureKeyVaultSmbCredentialsResponseOutput() AzureKeyVaultSmbCredentialsResponseOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsResponseOutput) ToAzureKeyVaultSmbCredentialsResponseOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsResponseOutput {
	return o
}

// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsResponseOutput) PasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultSmbCredentialsResponse) *string { return v.PasswordUri }).(pulumi.StringPtrOutput)
}

// The Credentials type.
// Expected value is 'AzureKeyVaultSmb'.
func (o AzureKeyVaultSmbCredentialsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureKeyVaultSmbCredentialsResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsResponseOutput) UsernameUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultSmbCredentialsResponse) *string { return v.UsernameUri }).(pulumi.StringPtrOutput)
}

type AzureKeyVaultSmbCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSmbCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSmbCredentialsResponse)(nil)).Elem()
}

func (o AzureKeyVaultSmbCredentialsResponsePtrOutput) ToAzureKeyVaultSmbCredentialsResponsePtrOutput() AzureKeyVaultSmbCredentialsResponsePtrOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsResponsePtrOutput) ToAzureKeyVaultSmbCredentialsResponsePtrOutputWithContext(ctx context.Context) AzureKeyVaultSmbCredentialsResponsePtrOutput {
	return o
}

func (o AzureKeyVaultSmbCredentialsResponsePtrOutput) Elem() AzureKeyVaultSmbCredentialsResponseOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentialsResponse) AzureKeyVaultSmbCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret AzureKeyVaultSmbCredentialsResponse
		return ret
	}).(AzureKeyVaultSmbCredentialsResponseOutput)
}

// The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsResponsePtrOutput) PasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PasswordUri
	}).(pulumi.StringPtrOutput)
}

// The Credentials type.
// Expected value is 'AzureKeyVaultSmb'.
func (o AzureKeyVaultSmbCredentialsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
func (o AzureKeyVaultSmbCredentialsResponsePtrOutput) UsernameUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSmbCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UsernameUri
	}).(pulumi.StringPtrOutput)
}

// The properties of Azure Storage blob container endpoint.
type AzureStorageBlobContainerEndpointProperties struct {
	// The name of the Storage blob container that is the target destination.
	BlobContainerName string `pulumi:"blobContainerName"`
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'AzureStorageBlobContainer'.
	EndpointType string `pulumi:"endpointType"`
	// The Azure Resource ID of the storage account that is the target destination.
	StorageAccountResourceId string `pulumi:"storageAccountResourceId"`
}

// AzureStorageBlobContainerEndpointPropertiesInput is an input type that accepts AzureStorageBlobContainerEndpointPropertiesArgs and AzureStorageBlobContainerEndpointPropertiesOutput values.
// You can construct a concrete instance of `AzureStorageBlobContainerEndpointPropertiesInput` via:
//
//	AzureStorageBlobContainerEndpointPropertiesArgs{...}
type AzureStorageBlobContainerEndpointPropertiesInput interface {
	pulumi.Input

	ToAzureStorageBlobContainerEndpointPropertiesOutput() AzureStorageBlobContainerEndpointPropertiesOutput
	ToAzureStorageBlobContainerEndpointPropertiesOutputWithContext(context.Context) AzureStorageBlobContainerEndpointPropertiesOutput
}

// The properties of Azure Storage blob container endpoint.
type AzureStorageBlobContainerEndpointPropertiesArgs struct {
	// The name of the Storage blob container that is the target destination.
	BlobContainerName pulumi.StringInput `pulumi:"blobContainerName"`
	// A description for the Endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'AzureStorageBlobContainer'.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The Azure Resource ID of the storage account that is the target destination.
	StorageAccountResourceId pulumi.StringInput `pulumi:"storageAccountResourceId"`
}

func (AzureStorageBlobContainerEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageBlobContainerEndpointProperties)(nil)).Elem()
}

func (i AzureStorageBlobContainerEndpointPropertiesArgs) ToAzureStorageBlobContainerEndpointPropertiesOutput() AzureStorageBlobContainerEndpointPropertiesOutput {
	return i.ToAzureStorageBlobContainerEndpointPropertiesOutputWithContext(context.Background())
}

func (i AzureStorageBlobContainerEndpointPropertiesArgs) ToAzureStorageBlobContainerEndpointPropertiesOutputWithContext(ctx context.Context) AzureStorageBlobContainerEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageBlobContainerEndpointPropertiesOutput)
}

// The properties of Azure Storage blob container endpoint.
type AzureStorageBlobContainerEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (AzureStorageBlobContainerEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageBlobContainerEndpointProperties)(nil)).Elem()
}

func (o AzureStorageBlobContainerEndpointPropertiesOutput) ToAzureStorageBlobContainerEndpointPropertiesOutput() AzureStorageBlobContainerEndpointPropertiesOutput {
	return o
}

func (o AzureStorageBlobContainerEndpointPropertiesOutput) ToAzureStorageBlobContainerEndpointPropertiesOutputWithContext(ctx context.Context) AzureStorageBlobContainerEndpointPropertiesOutput {
	return o
}

// The name of the Storage blob container that is the target destination.
func (o AzureStorageBlobContainerEndpointPropertiesOutput) BlobContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointProperties) string { return v.BlobContainerName }).(pulumi.StringOutput)
}

// A description for the Endpoint.
func (o AzureStorageBlobContainerEndpointPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'AzureStorageBlobContainer'.
func (o AzureStorageBlobContainerEndpointPropertiesOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointProperties) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The Azure Resource ID of the storage account that is the target destination.
func (o AzureStorageBlobContainerEndpointPropertiesOutput) StorageAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointProperties) string { return v.StorageAccountResourceId }).(pulumi.StringOutput)
}

// The properties of Azure Storage blob container endpoint.
type AzureStorageBlobContainerEndpointPropertiesResponse struct {
	// The name of the Storage blob container that is the target destination.
	BlobContainerName string `pulumi:"blobContainerName"`
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'AzureStorageBlobContainer'.
	EndpointType string `pulumi:"endpointType"`
	// The provisioning state of this resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Azure Resource ID of the storage account that is the target destination.
	StorageAccountResourceId string `pulumi:"storageAccountResourceId"`
}

// The properties of Azure Storage blob container endpoint.
type AzureStorageBlobContainerEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageBlobContainerEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageBlobContainerEndpointPropertiesResponse)(nil)).Elem()
}

func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) ToAzureStorageBlobContainerEndpointPropertiesResponseOutput() AzureStorageBlobContainerEndpointPropertiesResponseOutput {
	return o
}

func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) ToAzureStorageBlobContainerEndpointPropertiesResponseOutputWithContext(ctx context.Context) AzureStorageBlobContainerEndpointPropertiesResponseOutput {
	return o
}

// The name of the Storage blob container that is the target destination.
func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) BlobContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointPropertiesResponse) string { return v.BlobContainerName }).(pulumi.StringOutput)
}

// A description for the Endpoint.
func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'AzureStorageBlobContainer'.
func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointPropertiesResponse) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The provisioning state of this resource.
func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Azure Resource ID of the storage account that is the target destination.
func (o AzureStorageBlobContainerEndpointPropertiesResponseOutput) StorageAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageBlobContainerEndpointPropertiesResponse) string { return v.StorageAccountResourceId }).(pulumi.StringOutput)
}

// The properties of Azure Storage SMB file share endpoint.
type AzureStorageSmbFileShareEndpointProperties struct {
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'AzureStorageSmbFileShare'.
	EndpointType string `pulumi:"endpointType"`
	// The name of the Azure Storage file share.
	FileShareName string `pulumi:"fileShareName"`
	// The Azure Resource ID of the storage account.
	StorageAccountResourceId string `pulumi:"storageAccountResourceId"`
}

// AzureStorageSmbFileShareEndpointPropertiesInput is an input type that accepts AzureStorageSmbFileShareEndpointPropertiesArgs and AzureStorageSmbFileShareEndpointPropertiesOutput values.
// You can construct a concrete instance of `AzureStorageSmbFileShareEndpointPropertiesInput` via:
//
//	AzureStorageSmbFileShareEndpointPropertiesArgs{...}
type AzureStorageSmbFileShareEndpointPropertiesInput interface {
	pulumi.Input

	ToAzureStorageSmbFileShareEndpointPropertiesOutput() AzureStorageSmbFileShareEndpointPropertiesOutput
	ToAzureStorageSmbFileShareEndpointPropertiesOutputWithContext(context.Context) AzureStorageSmbFileShareEndpointPropertiesOutput
}

// The properties of Azure Storage SMB file share endpoint.
type AzureStorageSmbFileShareEndpointPropertiesArgs struct {
	// A description for the Endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'AzureStorageSmbFileShare'.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The name of the Azure Storage file share.
	FileShareName pulumi.StringInput `pulumi:"fileShareName"`
	// The Azure Resource ID of the storage account.
	StorageAccountResourceId pulumi.StringInput `pulumi:"storageAccountResourceId"`
}

func (AzureStorageSmbFileShareEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageSmbFileShareEndpointProperties)(nil)).Elem()
}

func (i AzureStorageSmbFileShareEndpointPropertiesArgs) ToAzureStorageSmbFileShareEndpointPropertiesOutput() AzureStorageSmbFileShareEndpointPropertiesOutput {
	return i.ToAzureStorageSmbFileShareEndpointPropertiesOutputWithContext(context.Background())
}

func (i AzureStorageSmbFileShareEndpointPropertiesArgs) ToAzureStorageSmbFileShareEndpointPropertiesOutputWithContext(ctx context.Context) AzureStorageSmbFileShareEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageSmbFileShareEndpointPropertiesOutput)
}

// The properties of Azure Storage SMB file share endpoint.
type AzureStorageSmbFileShareEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (AzureStorageSmbFileShareEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageSmbFileShareEndpointProperties)(nil)).Elem()
}

func (o AzureStorageSmbFileShareEndpointPropertiesOutput) ToAzureStorageSmbFileShareEndpointPropertiesOutput() AzureStorageSmbFileShareEndpointPropertiesOutput {
	return o
}

func (o AzureStorageSmbFileShareEndpointPropertiesOutput) ToAzureStorageSmbFileShareEndpointPropertiesOutputWithContext(ctx context.Context) AzureStorageSmbFileShareEndpointPropertiesOutput {
	return o
}

// A description for the Endpoint.
func (o AzureStorageSmbFileShareEndpointPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'AzureStorageSmbFileShare'.
func (o AzureStorageSmbFileShareEndpointPropertiesOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointProperties) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The name of the Azure Storage file share.
func (o AzureStorageSmbFileShareEndpointPropertiesOutput) FileShareName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointProperties) string { return v.FileShareName }).(pulumi.StringOutput)
}

// The Azure Resource ID of the storage account.
func (o AzureStorageSmbFileShareEndpointPropertiesOutput) StorageAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointProperties) string { return v.StorageAccountResourceId }).(pulumi.StringOutput)
}

// The properties of Azure Storage SMB file share endpoint.
type AzureStorageSmbFileShareEndpointPropertiesResponse struct {
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'AzureStorageSmbFileShare'.
	EndpointType string `pulumi:"endpointType"`
	// The name of the Azure Storage file share.
	FileShareName string `pulumi:"fileShareName"`
	// The provisioning state of this resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Azure Resource ID of the storage account.
	StorageAccountResourceId string `pulumi:"storageAccountResourceId"`
}

// The properties of Azure Storage SMB file share endpoint.
type AzureStorageSmbFileShareEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageSmbFileShareEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageSmbFileShareEndpointPropertiesResponse)(nil)).Elem()
}

func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) ToAzureStorageSmbFileShareEndpointPropertiesResponseOutput() AzureStorageSmbFileShareEndpointPropertiesResponseOutput {
	return o
}

func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) ToAzureStorageSmbFileShareEndpointPropertiesResponseOutputWithContext(ctx context.Context) AzureStorageSmbFileShareEndpointPropertiesResponseOutput {
	return o
}

// A description for the Endpoint.
func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'AzureStorageSmbFileShare'.
func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointPropertiesResponse) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The name of the Azure Storage file share.
func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) FileShareName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointPropertiesResponse) string { return v.FileShareName }).(pulumi.StringOutput)
}

// The provisioning state of this resource.
func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Azure Resource ID of the storage account.
func (o AzureStorageSmbFileShareEndpointPropertiesResponseOutput) StorageAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageSmbFileShareEndpointPropertiesResponse) string { return v.StorageAccountResourceId }).(pulumi.StringOutput)
}

// The properties of NFS share endpoint.
type NfsMountEndpointProperties struct {
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'NfsMount'.
	EndpointType string `pulumi:"endpointType"`
	// The directory being exported from the server.
	Export string `pulumi:"export"`
	// The host name or IP address of the server exporting the file system.
	Host string `pulumi:"host"`
	// The NFS protocol version.
	NfsVersion *string `pulumi:"nfsVersion"`
}

// NfsMountEndpointPropertiesInput is an input type that accepts NfsMountEndpointPropertiesArgs and NfsMountEndpointPropertiesOutput values.
// You can construct a concrete instance of `NfsMountEndpointPropertiesInput` via:
//
//	NfsMountEndpointPropertiesArgs{...}
type NfsMountEndpointPropertiesInput interface {
	pulumi.Input

	ToNfsMountEndpointPropertiesOutput() NfsMountEndpointPropertiesOutput
	ToNfsMountEndpointPropertiesOutputWithContext(context.Context) NfsMountEndpointPropertiesOutput
}

// The properties of NFS share endpoint.
type NfsMountEndpointPropertiesArgs struct {
	// A description for the Endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'NfsMount'.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The directory being exported from the server.
	Export pulumi.StringInput `pulumi:"export"`
	// The host name or IP address of the server exporting the file system.
	Host pulumi.StringInput `pulumi:"host"`
	// The NFS protocol version.
	NfsVersion pulumi.StringPtrInput `pulumi:"nfsVersion"`
}

func (NfsMountEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsMountEndpointProperties)(nil)).Elem()
}

func (i NfsMountEndpointPropertiesArgs) ToNfsMountEndpointPropertiesOutput() NfsMountEndpointPropertiesOutput {
	return i.ToNfsMountEndpointPropertiesOutputWithContext(context.Background())
}

func (i NfsMountEndpointPropertiesArgs) ToNfsMountEndpointPropertiesOutputWithContext(ctx context.Context) NfsMountEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsMountEndpointPropertiesOutput)
}

// The properties of NFS share endpoint.
type NfsMountEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (NfsMountEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsMountEndpointProperties)(nil)).Elem()
}

func (o NfsMountEndpointPropertiesOutput) ToNfsMountEndpointPropertiesOutput() NfsMountEndpointPropertiesOutput {
	return o
}

func (o NfsMountEndpointPropertiesOutput) ToNfsMountEndpointPropertiesOutputWithContext(ctx context.Context) NfsMountEndpointPropertiesOutput {
	return o
}

// A description for the Endpoint.
func (o NfsMountEndpointPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsMountEndpointProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'NfsMount'.
func (o NfsMountEndpointPropertiesOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointProperties) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The directory being exported from the server.
func (o NfsMountEndpointPropertiesOutput) Export() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointProperties) string { return v.Export }).(pulumi.StringOutput)
}

// The host name or IP address of the server exporting the file system.
func (o NfsMountEndpointPropertiesOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointProperties) string { return v.Host }).(pulumi.StringOutput)
}

// The NFS protocol version.
func (o NfsMountEndpointPropertiesOutput) NfsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsMountEndpointProperties) *string { return v.NfsVersion }).(pulumi.StringPtrOutput)
}

// The properties of NFS share endpoint.
type NfsMountEndpointPropertiesResponse struct {
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'NfsMount'.
	EndpointType string `pulumi:"endpointType"`
	// The directory being exported from the server.
	Export string `pulumi:"export"`
	// The host name or IP address of the server exporting the file system.
	Host string `pulumi:"host"`
	// The NFS protocol version.
	NfsVersion *string `pulumi:"nfsVersion"`
	// The provisioning state of this resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of NFS share endpoint.
type NfsMountEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NfsMountEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsMountEndpointPropertiesResponse)(nil)).Elem()
}

func (o NfsMountEndpointPropertiesResponseOutput) ToNfsMountEndpointPropertiesResponseOutput() NfsMountEndpointPropertiesResponseOutput {
	return o
}

func (o NfsMountEndpointPropertiesResponseOutput) ToNfsMountEndpointPropertiesResponseOutputWithContext(ctx context.Context) NfsMountEndpointPropertiesResponseOutput {
	return o
}

// A description for the Endpoint.
func (o NfsMountEndpointPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsMountEndpointPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'NfsMount'.
func (o NfsMountEndpointPropertiesResponseOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointPropertiesResponse) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The directory being exported from the server.
func (o NfsMountEndpointPropertiesResponseOutput) Export() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointPropertiesResponse) string { return v.Export }).(pulumi.StringOutput)
}

// The host name or IP address of the server exporting the file system.
func (o NfsMountEndpointPropertiesResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointPropertiesResponse) string { return v.Host }).(pulumi.StringOutput)
}

// The NFS protocol version.
func (o NfsMountEndpointPropertiesResponseOutput) NfsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsMountEndpointPropertiesResponse) *string { return v.NfsVersion }).(pulumi.StringPtrOutput)
}

// The provisioning state of this resource.
func (o NfsMountEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NfsMountEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties of SMB share endpoint.
type SmbMountEndpointProperties struct {
	// The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
	Credentials *AzureKeyVaultSmbCredentials `pulumi:"credentials"`
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'SmbMount'.
	EndpointType string `pulumi:"endpointType"`
	// The host name or IP address of the server exporting the file system.
	Host string `pulumi:"host"`
	// The name of the SMB share being exported from the server.
	ShareName string `pulumi:"shareName"`
}

// SmbMountEndpointPropertiesInput is an input type that accepts SmbMountEndpointPropertiesArgs and SmbMountEndpointPropertiesOutput values.
// You can construct a concrete instance of `SmbMountEndpointPropertiesInput` via:
//
//	SmbMountEndpointPropertiesArgs{...}
type SmbMountEndpointPropertiesInput interface {
	pulumi.Input

	ToSmbMountEndpointPropertiesOutput() SmbMountEndpointPropertiesOutput
	ToSmbMountEndpointPropertiesOutputWithContext(context.Context) SmbMountEndpointPropertiesOutput
}

// The properties of SMB share endpoint.
type SmbMountEndpointPropertiesArgs struct {
	// The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
	Credentials AzureKeyVaultSmbCredentialsPtrInput `pulumi:"credentials"`
	// A description for the Endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'SmbMount'.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The host name or IP address of the server exporting the file system.
	Host pulumi.StringInput `pulumi:"host"`
	// The name of the SMB share being exported from the server.
	ShareName pulumi.StringInput `pulumi:"shareName"`
}

func (SmbMountEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbMountEndpointProperties)(nil)).Elem()
}

func (i SmbMountEndpointPropertiesArgs) ToSmbMountEndpointPropertiesOutput() SmbMountEndpointPropertiesOutput {
	return i.ToSmbMountEndpointPropertiesOutputWithContext(context.Background())
}

func (i SmbMountEndpointPropertiesArgs) ToSmbMountEndpointPropertiesOutputWithContext(ctx context.Context) SmbMountEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbMountEndpointPropertiesOutput)
}

// The properties of SMB share endpoint.
type SmbMountEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (SmbMountEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbMountEndpointProperties)(nil)).Elem()
}

func (o SmbMountEndpointPropertiesOutput) ToSmbMountEndpointPropertiesOutput() SmbMountEndpointPropertiesOutput {
	return o
}

func (o SmbMountEndpointPropertiesOutput) ToSmbMountEndpointPropertiesOutputWithContext(ctx context.Context) SmbMountEndpointPropertiesOutput {
	return o
}

// The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
func (o SmbMountEndpointPropertiesOutput) Credentials() AzureKeyVaultSmbCredentialsPtrOutput {
	return o.ApplyT(func(v SmbMountEndpointProperties) *AzureKeyVaultSmbCredentials { return v.Credentials }).(AzureKeyVaultSmbCredentialsPtrOutput)
}

// A description for the Endpoint.
func (o SmbMountEndpointPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbMountEndpointProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'SmbMount'.
func (o SmbMountEndpointPropertiesOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointProperties) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The host name or IP address of the server exporting the file system.
func (o SmbMountEndpointPropertiesOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointProperties) string { return v.Host }).(pulumi.StringOutput)
}

// The name of the SMB share being exported from the server.
func (o SmbMountEndpointPropertiesOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointProperties) string { return v.ShareName }).(pulumi.StringOutput)
}

// The properties of SMB share endpoint.
type SmbMountEndpointPropertiesResponse struct {
	// The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
	Credentials *AzureKeyVaultSmbCredentialsResponse `pulumi:"credentials"`
	// A description for the Endpoint.
	Description *string `pulumi:"description"`
	// The Endpoint resource type.
	// Expected value is 'SmbMount'.
	EndpointType string `pulumi:"endpointType"`
	// The host name or IP address of the server exporting the file system.
	Host string `pulumi:"host"`
	// The provisioning state of this resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the SMB share being exported from the server.
	ShareName string `pulumi:"shareName"`
}

// The properties of SMB share endpoint.
type SmbMountEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SmbMountEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbMountEndpointPropertiesResponse)(nil)).Elem()
}

func (o SmbMountEndpointPropertiesResponseOutput) ToSmbMountEndpointPropertiesResponseOutput() SmbMountEndpointPropertiesResponseOutput {
	return o
}

func (o SmbMountEndpointPropertiesResponseOutput) ToSmbMountEndpointPropertiesResponseOutputWithContext(ctx context.Context) SmbMountEndpointPropertiesResponseOutput {
	return o
}

// The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
func (o SmbMountEndpointPropertiesResponseOutput) Credentials() AzureKeyVaultSmbCredentialsResponsePtrOutput {
	return o.ApplyT(func(v SmbMountEndpointPropertiesResponse) *AzureKeyVaultSmbCredentialsResponse { return v.Credentials }).(AzureKeyVaultSmbCredentialsResponsePtrOutput)
}

// A description for the Endpoint.
func (o SmbMountEndpointPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbMountEndpointPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Endpoint resource type.
// Expected value is 'SmbMount'.
func (o SmbMountEndpointPropertiesResponseOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointPropertiesResponse) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The host name or IP address of the server exporting the file system.
func (o SmbMountEndpointPropertiesResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointPropertiesResponse) string { return v.Host }).(pulumi.StringOutput)
}

// The provisioning state of this resource.
func (o SmbMountEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the SMB share being exported from the server.
func (o SmbMountEndpointPropertiesResponseOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v SmbMountEndpointPropertiesResponse) string { return v.ShareName }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The time of day.
type Time struct {
	// The hour element of the time. Allowed values range from 0 (start of the selected day) to 24 (end of the selected day). Hour value 24 cannot be combined with any other minute value but 0.
	Hour int `pulumi:"hour"`
	// The minute element of the time. Allowed values are 0 and 30. If not specified, its value defaults to 0.
	Minute *int `pulumi:"minute"`
}

// Defaults sets the appropriate defaults for Time
func (val *Time) Defaults() *Time {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Minute == nil {
		minute_ := 0
		tmp.Minute = &minute_
	}
	return &tmp
}

// TimeInput is an input type that accepts TimeArgs and TimeOutput values.
// You can construct a concrete instance of `TimeInput` via:
//
//	TimeArgs{...}
type TimeInput interface {
	pulumi.Input

	ToTimeOutput() TimeOutput
	ToTimeOutputWithContext(context.Context) TimeOutput
}

// The time of day.
type TimeArgs struct {
	// The hour element of the time. Allowed values range from 0 (start of the selected day) to 24 (end of the selected day). Hour value 24 cannot be combined with any other minute value but 0.
	Hour pulumi.IntInput `pulumi:"hour"`
	// The minute element of the time. Allowed values are 0 and 30. If not specified, its value defaults to 0.
	Minute pulumi.IntPtrInput `pulumi:"minute"`
}

// Defaults sets the appropriate defaults for TimeArgs
func (val *TimeArgs) Defaults() *TimeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Minute == nil {
		tmp.Minute = pulumi.IntPtr(0)
	}
	return &tmp
}
func (TimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (i TimeArgs) ToTimeOutput() TimeOutput {
	return i.ToTimeOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput)
}

// The time of day.
type TimeOutput struct{ *pulumi.OutputState }

func (TimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (o TimeOutput) ToTimeOutput() TimeOutput {
	return o
}

func (o TimeOutput) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return o
}

// The hour element of the time. Allowed values range from 0 (start of the selected day) to 24 (end of the selected day). Hour value 24 cannot be combined with any other minute value but 0.
func (o TimeOutput) Hour() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Hour }).(pulumi.IntOutput)
}

// The minute element of the time. Allowed values are 0 and 30. If not specified, its value defaults to 0.
func (o TimeOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Time) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

// The time of day.
type TimeResponse struct {
	// The hour element of the time. Allowed values range from 0 (start of the selected day) to 24 (end of the selected day). Hour value 24 cannot be combined with any other minute value but 0.
	Hour int `pulumi:"hour"`
	// The minute element of the time. Allowed values are 0 and 30. If not specified, its value defaults to 0.
	Minute *int `pulumi:"minute"`
}

// Defaults sets the appropriate defaults for TimeResponse
func (val *TimeResponse) Defaults() *TimeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Minute == nil {
		minute_ := 0
		tmp.Minute = &minute_
	}
	return &tmp
}

// The time of day.
type TimeResponseOutput struct{ *pulumi.OutputState }

func (TimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (o TimeResponseOutput) ToTimeResponseOutput() TimeResponseOutput {
	return o
}

func (o TimeResponseOutput) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return o
}

// The hour element of the time. Allowed values range from 0 (start of the selected day) to 24 (end of the selected day). Hour value 24 cannot be combined with any other minute value but 0.
func (o TimeResponseOutput) Hour() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Hour }).(pulumi.IntOutput)
}

// The minute element of the time. Allowed values are 0 and 30. If not specified, its value defaults to 0.
func (o TimeResponseOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeResponse) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

// The WAN-link upload limit schedule. Overlapping recurrences are not allowed.
type UploadLimitSchedule struct {
	// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
	WeeklyRecurrences []UploadLimitWeeklyRecurrence `pulumi:"weeklyRecurrences"`
}

// UploadLimitScheduleInput is an input type that accepts UploadLimitScheduleArgs and UploadLimitScheduleOutput values.
// You can construct a concrete instance of `UploadLimitScheduleInput` via:
//
//	UploadLimitScheduleArgs{...}
type UploadLimitScheduleInput interface {
	pulumi.Input

	ToUploadLimitScheduleOutput() UploadLimitScheduleOutput
	ToUploadLimitScheduleOutputWithContext(context.Context) UploadLimitScheduleOutput
}

// The WAN-link upload limit schedule. Overlapping recurrences are not allowed.
type UploadLimitScheduleArgs struct {
	// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
	WeeklyRecurrences UploadLimitWeeklyRecurrenceArrayInput `pulumi:"weeklyRecurrences"`
}

func (UploadLimitScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadLimitSchedule)(nil)).Elem()
}

func (i UploadLimitScheduleArgs) ToUploadLimitScheduleOutput() UploadLimitScheduleOutput {
	return i.ToUploadLimitScheduleOutputWithContext(context.Background())
}

func (i UploadLimitScheduleArgs) ToUploadLimitScheduleOutputWithContext(ctx context.Context) UploadLimitScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadLimitScheduleOutput)
}

func (i UploadLimitScheduleArgs) ToUploadLimitSchedulePtrOutput() UploadLimitSchedulePtrOutput {
	return i.ToUploadLimitSchedulePtrOutputWithContext(context.Background())
}

func (i UploadLimitScheduleArgs) ToUploadLimitSchedulePtrOutputWithContext(ctx context.Context) UploadLimitSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadLimitScheduleOutput).ToUploadLimitSchedulePtrOutputWithContext(ctx)
}

// UploadLimitSchedulePtrInput is an input type that accepts UploadLimitScheduleArgs, UploadLimitSchedulePtr and UploadLimitSchedulePtrOutput values.
// You can construct a concrete instance of `UploadLimitSchedulePtrInput` via:
//
//	        UploadLimitScheduleArgs{...}
//
//	or:
//
//	        nil
type UploadLimitSchedulePtrInput interface {
	pulumi.Input

	ToUploadLimitSchedulePtrOutput() UploadLimitSchedulePtrOutput
	ToUploadLimitSchedulePtrOutputWithContext(context.Context) UploadLimitSchedulePtrOutput
}

type uploadLimitSchedulePtrType UploadLimitScheduleArgs

func UploadLimitSchedulePtr(v *UploadLimitScheduleArgs) UploadLimitSchedulePtrInput {
	return (*uploadLimitSchedulePtrType)(v)
}

func (*uploadLimitSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadLimitSchedule)(nil)).Elem()
}

func (i *uploadLimitSchedulePtrType) ToUploadLimitSchedulePtrOutput() UploadLimitSchedulePtrOutput {
	return i.ToUploadLimitSchedulePtrOutputWithContext(context.Background())
}

func (i *uploadLimitSchedulePtrType) ToUploadLimitSchedulePtrOutputWithContext(ctx context.Context) UploadLimitSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadLimitSchedulePtrOutput)
}

// The WAN-link upload limit schedule. Overlapping recurrences are not allowed.
type UploadLimitScheduleOutput struct{ *pulumi.OutputState }

func (UploadLimitScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadLimitSchedule)(nil)).Elem()
}

func (o UploadLimitScheduleOutput) ToUploadLimitScheduleOutput() UploadLimitScheduleOutput {
	return o
}

func (o UploadLimitScheduleOutput) ToUploadLimitScheduleOutputWithContext(ctx context.Context) UploadLimitScheduleOutput {
	return o
}

func (o UploadLimitScheduleOutput) ToUploadLimitSchedulePtrOutput() UploadLimitSchedulePtrOutput {
	return o.ToUploadLimitSchedulePtrOutputWithContext(context.Background())
}

func (o UploadLimitScheduleOutput) ToUploadLimitSchedulePtrOutputWithContext(ctx context.Context) UploadLimitSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UploadLimitSchedule) *UploadLimitSchedule {
		return &v
	}).(UploadLimitSchedulePtrOutput)
}

// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
func (o UploadLimitScheduleOutput) WeeklyRecurrences() UploadLimitWeeklyRecurrenceArrayOutput {
	return o.ApplyT(func(v UploadLimitSchedule) []UploadLimitWeeklyRecurrence { return v.WeeklyRecurrences }).(UploadLimitWeeklyRecurrenceArrayOutput)
}

type UploadLimitSchedulePtrOutput struct{ *pulumi.OutputState }

func (UploadLimitSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadLimitSchedule)(nil)).Elem()
}

func (o UploadLimitSchedulePtrOutput) ToUploadLimitSchedulePtrOutput() UploadLimitSchedulePtrOutput {
	return o
}

func (o UploadLimitSchedulePtrOutput) ToUploadLimitSchedulePtrOutputWithContext(ctx context.Context) UploadLimitSchedulePtrOutput {
	return o
}

func (o UploadLimitSchedulePtrOutput) Elem() UploadLimitScheduleOutput {
	return o.ApplyT(func(v *UploadLimitSchedule) UploadLimitSchedule {
		if v != nil {
			return *v
		}
		var ret UploadLimitSchedule
		return ret
	}).(UploadLimitScheduleOutput)
}

// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
func (o UploadLimitSchedulePtrOutput) WeeklyRecurrences() UploadLimitWeeklyRecurrenceArrayOutput {
	return o.ApplyT(func(v *UploadLimitSchedule) []UploadLimitWeeklyRecurrence {
		if v == nil {
			return nil
		}
		return v.WeeklyRecurrences
	}).(UploadLimitWeeklyRecurrenceArrayOutput)
}

// The WAN-link upload limit schedule. Overlapping recurrences are not allowed.
type UploadLimitScheduleResponse struct {
	// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
	WeeklyRecurrences []UploadLimitWeeklyRecurrenceResponse `pulumi:"weeklyRecurrences"`
}

// The WAN-link upload limit schedule. Overlapping recurrences are not allowed.
type UploadLimitScheduleResponseOutput struct{ *pulumi.OutputState }

func (UploadLimitScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadLimitScheduleResponse)(nil)).Elem()
}

func (o UploadLimitScheduleResponseOutput) ToUploadLimitScheduleResponseOutput() UploadLimitScheduleResponseOutput {
	return o
}

func (o UploadLimitScheduleResponseOutput) ToUploadLimitScheduleResponseOutputWithContext(ctx context.Context) UploadLimitScheduleResponseOutput {
	return o
}

// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
func (o UploadLimitScheduleResponseOutput) WeeklyRecurrences() UploadLimitWeeklyRecurrenceResponseArrayOutput {
	return o.ApplyT(func(v UploadLimitScheduleResponse) []UploadLimitWeeklyRecurrenceResponse { return v.WeeklyRecurrences }).(UploadLimitWeeklyRecurrenceResponseArrayOutput)
}

type UploadLimitScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (UploadLimitScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadLimitScheduleResponse)(nil)).Elem()
}

func (o UploadLimitScheduleResponsePtrOutput) ToUploadLimitScheduleResponsePtrOutput() UploadLimitScheduleResponsePtrOutput {
	return o
}

func (o UploadLimitScheduleResponsePtrOutput) ToUploadLimitScheduleResponsePtrOutputWithContext(ctx context.Context) UploadLimitScheduleResponsePtrOutput {
	return o
}

func (o UploadLimitScheduleResponsePtrOutput) Elem() UploadLimitScheduleResponseOutput {
	return o.ApplyT(func(v *UploadLimitScheduleResponse) UploadLimitScheduleResponse {
		if v != nil {
			return *v
		}
		var ret UploadLimitScheduleResponse
		return ret
	}).(UploadLimitScheduleResponseOutput)
}

// The set of weekly repeating recurrences of the WAN-link upload limit schedule.
func (o UploadLimitScheduleResponsePtrOutput) WeeklyRecurrences() UploadLimitWeeklyRecurrenceResponseArrayOutput {
	return o.ApplyT(func(v *UploadLimitScheduleResponse) []UploadLimitWeeklyRecurrenceResponse {
		if v == nil {
			return nil
		}
		return v.WeeklyRecurrences
	}).(UploadLimitWeeklyRecurrenceResponseArrayOutput)
}

// The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
type UploadLimitWeeklyRecurrence struct {
	// The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
	Days []DayOfWeek `pulumi:"days"`
	// The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
	EndTime Time `pulumi:"endTime"`
	// The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
	LimitInMbps int `pulumi:"limitInMbps"`
	// The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
	StartTime Time `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for UploadLimitWeeklyRecurrence
func (val *UploadLimitWeeklyRecurrence) Defaults() *UploadLimitWeeklyRecurrence {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EndTime = *tmp.EndTime.Defaults()

	tmp.StartTime = *tmp.StartTime.Defaults()

	return &tmp
}

// UploadLimitWeeklyRecurrenceInput is an input type that accepts UploadLimitWeeklyRecurrenceArgs and UploadLimitWeeklyRecurrenceOutput values.
// You can construct a concrete instance of `UploadLimitWeeklyRecurrenceInput` via:
//
//	UploadLimitWeeklyRecurrenceArgs{...}
type UploadLimitWeeklyRecurrenceInput interface {
	pulumi.Input

	ToUploadLimitWeeklyRecurrenceOutput() UploadLimitWeeklyRecurrenceOutput
	ToUploadLimitWeeklyRecurrenceOutputWithContext(context.Context) UploadLimitWeeklyRecurrenceOutput
}

// The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
type UploadLimitWeeklyRecurrenceArgs struct {
	// The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
	Days DayOfWeekArrayInput `pulumi:"days"`
	// The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
	EndTime TimeInput `pulumi:"endTime"`
	// The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
	LimitInMbps pulumi.IntInput `pulumi:"limitInMbps"`
	// The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
	StartTime TimeInput `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for UploadLimitWeeklyRecurrenceArgs
func (val *UploadLimitWeeklyRecurrenceArgs) Defaults() *UploadLimitWeeklyRecurrenceArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (UploadLimitWeeklyRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadLimitWeeklyRecurrence)(nil)).Elem()
}

func (i UploadLimitWeeklyRecurrenceArgs) ToUploadLimitWeeklyRecurrenceOutput() UploadLimitWeeklyRecurrenceOutput {
	return i.ToUploadLimitWeeklyRecurrenceOutputWithContext(context.Background())
}

func (i UploadLimitWeeklyRecurrenceArgs) ToUploadLimitWeeklyRecurrenceOutputWithContext(ctx context.Context) UploadLimitWeeklyRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadLimitWeeklyRecurrenceOutput)
}

// UploadLimitWeeklyRecurrenceArrayInput is an input type that accepts UploadLimitWeeklyRecurrenceArray and UploadLimitWeeklyRecurrenceArrayOutput values.
// You can construct a concrete instance of `UploadLimitWeeklyRecurrenceArrayInput` via:
//
//	UploadLimitWeeklyRecurrenceArray{ UploadLimitWeeklyRecurrenceArgs{...} }
type UploadLimitWeeklyRecurrenceArrayInput interface {
	pulumi.Input

	ToUploadLimitWeeklyRecurrenceArrayOutput() UploadLimitWeeklyRecurrenceArrayOutput
	ToUploadLimitWeeklyRecurrenceArrayOutputWithContext(context.Context) UploadLimitWeeklyRecurrenceArrayOutput
}

type UploadLimitWeeklyRecurrenceArray []UploadLimitWeeklyRecurrenceInput

func (UploadLimitWeeklyRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UploadLimitWeeklyRecurrence)(nil)).Elem()
}

func (i UploadLimitWeeklyRecurrenceArray) ToUploadLimitWeeklyRecurrenceArrayOutput() UploadLimitWeeklyRecurrenceArrayOutput {
	return i.ToUploadLimitWeeklyRecurrenceArrayOutputWithContext(context.Background())
}

func (i UploadLimitWeeklyRecurrenceArray) ToUploadLimitWeeklyRecurrenceArrayOutputWithContext(ctx context.Context) UploadLimitWeeklyRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadLimitWeeklyRecurrenceArrayOutput)
}

// The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
type UploadLimitWeeklyRecurrenceOutput struct{ *pulumi.OutputState }

func (UploadLimitWeeklyRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadLimitWeeklyRecurrence)(nil)).Elem()
}

func (o UploadLimitWeeklyRecurrenceOutput) ToUploadLimitWeeklyRecurrenceOutput() UploadLimitWeeklyRecurrenceOutput {
	return o
}

func (o UploadLimitWeeklyRecurrenceOutput) ToUploadLimitWeeklyRecurrenceOutputWithContext(ctx context.Context) UploadLimitWeeklyRecurrenceOutput {
	return o
}

// The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
func (o UploadLimitWeeklyRecurrenceOutput) Days() DayOfWeekArrayOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrence) []DayOfWeek { return v.Days }).(DayOfWeekArrayOutput)
}

// The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
func (o UploadLimitWeeklyRecurrenceOutput) EndTime() TimeOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrence) Time { return v.EndTime }).(TimeOutput)
}

// The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
func (o UploadLimitWeeklyRecurrenceOutput) LimitInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrence) int { return v.LimitInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
func (o UploadLimitWeeklyRecurrenceOutput) StartTime() TimeOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrence) Time { return v.StartTime }).(TimeOutput)
}

type UploadLimitWeeklyRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (UploadLimitWeeklyRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UploadLimitWeeklyRecurrence)(nil)).Elem()
}

func (o UploadLimitWeeklyRecurrenceArrayOutput) ToUploadLimitWeeklyRecurrenceArrayOutput() UploadLimitWeeklyRecurrenceArrayOutput {
	return o
}

func (o UploadLimitWeeklyRecurrenceArrayOutput) ToUploadLimitWeeklyRecurrenceArrayOutputWithContext(ctx context.Context) UploadLimitWeeklyRecurrenceArrayOutput {
	return o
}

func (o UploadLimitWeeklyRecurrenceArrayOutput) Index(i pulumi.IntInput) UploadLimitWeeklyRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UploadLimitWeeklyRecurrence {
		return vs[0].([]UploadLimitWeeklyRecurrence)[vs[1].(int)]
	}).(UploadLimitWeeklyRecurrenceOutput)
}

// The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
type UploadLimitWeeklyRecurrenceResponse struct {
	// The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
	Days []string `pulumi:"days"`
	// The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
	EndTime TimeResponse `pulumi:"endTime"`
	// The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
	LimitInMbps int `pulumi:"limitInMbps"`
	// The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
	StartTime TimeResponse `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for UploadLimitWeeklyRecurrenceResponse
func (val *UploadLimitWeeklyRecurrenceResponse) Defaults() *UploadLimitWeeklyRecurrenceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EndTime = *tmp.EndTime.Defaults()

	tmp.StartTime = *tmp.StartTime.Defaults()

	return &tmp
}

// The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
type UploadLimitWeeklyRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (UploadLimitWeeklyRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadLimitWeeklyRecurrenceResponse)(nil)).Elem()
}

func (o UploadLimitWeeklyRecurrenceResponseOutput) ToUploadLimitWeeklyRecurrenceResponseOutput() UploadLimitWeeklyRecurrenceResponseOutput {
	return o
}

func (o UploadLimitWeeklyRecurrenceResponseOutput) ToUploadLimitWeeklyRecurrenceResponseOutputWithContext(ctx context.Context) UploadLimitWeeklyRecurrenceResponseOutput {
	return o
}

// The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
func (o UploadLimitWeeklyRecurrenceResponseOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrenceResponse) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
func (o UploadLimitWeeklyRecurrenceResponseOutput) EndTime() TimeResponseOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrenceResponse) TimeResponse { return v.EndTime }).(TimeResponseOutput)
}

// The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
func (o UploadLimitWeeklyRecurrenceResponseOutput) LimitInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrenceResponse) int { return v.LimitInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
func (o UploadLimitWeeklyRecurrenceResponseOutput) StartTime() TimeResponseOutput {
	return o.ApplyT(func(v UploadLimitWeeklyRecurrenceResponse) TimeResponse { return v.StartTime }).(TimeResponseOutput)
}

type UploadLimitWeeklyRecurrenceResponseArrayOutput struct{ *pulumi.OutputState }

func (UploadLimitWeeklyRecurrenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UploadLimitWeeklyRecurrenceResponse)(nil)).Elem()
}

func (o UploadLimitWeeklyRecurrenceResponseArrayOutput) ToUploadLimitWeeklyRecurrenceResponseArrayOutput() UploadLimitWeeklyRecurrenceResponseArrayOutput {
	return o
}

func (o UploadLimitWeeklyRecurrenceResponseArrayOutput) ToUploadLimitWeeklyRecurrenceResponseArrayOutputWithContext(ctx context.Context) UploadLimitWeeklyRecurrenceResponseArrayOutput {
	return o
}

func (o UploadLimitWeeklyRecurrenceResponseArrayOutput) Index(i pulumi.IntInput) UploadLimitWeeklyRecurrenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UploadLimitWeeklyRecurrenceResponse {
		return vs[0].([]UploadLimitWeeklyRecurrenceResponse)[vs[1].(int)]
	}).(UploadLimitWeeklyRecurrenceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentPropertiesResponseErrorDetailsOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSmbCredentialsOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSmbCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSmbCredentialsResponseOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSmbCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageBlobContainerEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(AzureStorageBlobContainerEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageSmbFileShareEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(AzureStorageSmbFileShareEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NfsMountEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(NfsMountEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SmbMountEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(SmbMountEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TimeOutput{})
	pulumi.RegisterOutputType(TimeResponseOutput{})
	pulumi.RegisterOutputType(UploadLimitScheduleOutput{})
	pulumi.RegisterOutputType(UploadLimitSchedulePtrOutput{})
	pulumi.RegisterOutputType(UploadLimitScheduleResponseOutput{})
	pulumi.RegisterOutputType(UploadLimitScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(UploadLimitWeeklyRecurrenceOutput{})
	pulumi.RegisterOutputType(UploadLimitWeeklyRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(UploadLimitWeeklyRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(UploadLimitWeeklyRecurrenceResponseArrayOutput{})
}
