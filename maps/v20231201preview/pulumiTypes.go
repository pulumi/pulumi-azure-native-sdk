// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Specifies a CORS rule for the Maps Account.
type CorsRule struct {
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins []string `pulumi:"allowedOrigins"`
}

// CorsRuleInput is an input type that accepts CorsRuleArgs and CorsRuleOutput values.
// You can construct a concrete instance of `CorsRuleInput` via:
//
//	CorsRuleArgs{...}
type CorsRuleInput interface {
	pulumi.Input

	ToCorsRuleOutput() CorsRuleOutput
	ToCorsRuleOutputWithContext(context.Context) CorsRuleOutput
}

// Specifies a CORS rule for the Maps Account.
type CorsRuleArgs struct {
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
}

func (CorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRule)(nil)).Elem()
}

func (i CorsRuleArgs) ToCorsRuleOutput() CorsRuleOutput {
	return i.ToCorsRuleOutputWithContext(context.Background())
}

func (i CorsRuleArgs) ToCorsRuleOutputWithContext(ctx context.Context) CorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleOutput)
}

// CorsRuleArrayInput is an input type that accepts CorsRuleArray and CorsRuleArrayOutput values.
// You can construct a concrete instance of `CorsRuleArrayInput` via:
//
//	CorsRuleArray{ CorsRuleArgs{...} }
type CorsRuleArrayInput interface {
	pulumi.Input

	ToCorsRuleArrayOutput() CorsRuleArrayOutput
	ToCorsRuleArrayOutputWithContext(context.Context) CorsRuleArrayOutput
}

type CorsRuleArray []CorsRuleInput

func (CorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRule)(nil)).Elem()
}

func (i CorsRuleArray) ToCorsRuleArrayOutput() CorsRuleArrayOutput {
	return i.ToCorsRuleArrayOutputWithContext(context.Background())
}

func (i CorsRuleArray) ToCorsRuleArrayOutputWithContext(ctx context.Context) CorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleArrayOutput)
}

// Specifies a CORS rule for the Maps Account.
type CorsRuleOutput struct{ *pulumi.OutputState }

func (CorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRule)(nil)).Elem()
}

func (o CorsRuleOutput) ToCorsRuleOutput() CorsRuleOutput {
	return o
}

func (o CorsRuleOutput) ToCorsRuleOutputWithContext(ctx context.Context) CorsRuleOutput {
	return o
}

// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
func (o CorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

type CorsRuleArrayOutput struct{ *pulumi.OutputState }

func (CorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRule)(nil)).Elem()
}

func (o CorsRuleArrayOutput) ToCorsRuleArrayOutput() CorsRuleArrayOutput {
	return o
}

func (o CorsRuleArrayOutput) ToCorsRuleArrayOutputWithContext(ctx context.Context) CorsRuleArrayOutput {
	return o
}

func (o CorsRuleArrayOutput) Index(i pulumi.IntInput) CorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsRule {
		return vs[0].([]CorsRule)[vs[1].(int)]
	}).(CorsRuleOutput)
}

// Specifies a CORS rule for the Maps Account.
type CorsRuleResponse struct {
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins []string `pulumi:"allowedOrigins"`
}

// Specifies a CORS rule for the Maps Account.
type CorsRuleResponseOutput struct{ *pulumi.OutputState }

func (CorsRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRuleResponse)(nil)).Elem()
}

func (o CorsRuleResponseOutput) ToCorsRuleResponseOutput() CorsRuleResponseOutput {
	return o
}

func (o CorsRuleResponseOutput) ToCorsRuleResponseOutputWithContext(ctx context.Context) CorsRuleResponseOutput {
	return o
}

// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
func (o CorsRuleResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

type CorsRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CorsRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRuleResponse)(nil)).Elem()
}

func (o CorsRuleResponseArrayOutput) ToCorsRuleResponseArrayOutput() CorsRuleResponseArrayOutput {
	return o
}

func (o CorsRuleResponseArrayOutput) ToCorsRuleResponseArrayOutputWithContext(ctx context.Context) CorsRuleResponseArrayOutput {
	return o
}

func (o CorsRuleResponseArrayOutput) Index(i pulumi.IntInput) CorsRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsRuleResponse {
		return vs[0].([]CorsRuleResponse)[vs[1].(int)]
	}).(CorsRuleResponseOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRules struct {
	// The list of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRule `pulumi:"corsRules"`
}

// CorsRulesInput is an input type that accepts CorsRulesArgs and CorsRulesOutput values.
// You can construct a concrete instance of `CorsRulesInput` via:
//
//	CorsRulesArgs{...}
type CorsRulesInput interface {
	pulumi.Input

	ToCorsRulesOutput() CorsRulesOutput
	ToCorsRulesOutputWithContext(context.Context) CorsRulesOutput
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesArgs struct {
	// The list of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules CorsRuleArrayInput `pulumi:"corsRules"`
}

func (CorsRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRules)(nil)).Elem()
}

func (i CorsRulesArgs) ToCorsRulesOutput() CorsRulesOutput {
	return i.ToCorsRulesOutputWithContext(context.Background())
}

func (i CorsRulesArgs) ToCorsRulesOutputWithContext(ctx context.Context) CorsRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesOutput)
}

func (i CorsRulesArgs) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return i.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (i CorsRulesArgs) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesOutput).ToCorsRulesPtrOutputWithContext(ctx)
}

// CorsRulesPtrInput is an input type that accepts CorsRulesArgs, CorsRulesPtr and CorsRulesPtrOutput values.
// You can construct a concrete instance of `CorsRulesPtrInput` via:
//
//	        CorsRulesArgs{...}
//
//	or:
//
//	        nil
type CorsRulesPtrInput interface {
	pulumi.Input

	ToCorsRulesPtrOutput() CorsRulesPtrOutput
	ToCorsRulesPtrOutputWithContext(context.Context) CorsRulesPtrOutput
}

type corsRulesPtrType CorsRulesArgs

func CorsRulesPtr(v *CorsRulesArgs) CorsRulesPtrInput {
	return (*corsRulesPtrType)(v)
}

func (*corsRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRules)(nil)).Elem()
}

func (i *corsRulesPtrType) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return i.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (i *corsRulesPtrType) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesPtrOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesOutput struct{ *pulumi.OutputState }

func (CorsRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRules)(nil)).Elem()
}

func (o CorsRulesOutput) ToCorsRulesOutput() CorsRulesOutput {
	return o
}

func (o CorsRulesOutput) ToCorsRulesOutputWithContext(ctx context.Context) CorsRulesOutput {
	return o
}

func (o CorsRulesOutput) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return o.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (o CorsRulesOutput) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CorsRules) *CorsRules {
		return &v
	}).(CorsRulesPtrOutput)
}

// The list of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesOutput) CorsRules() CorsRuleArrayOutput {
	return o.ApplyT(func(v CorsRules) []CorsRule { return v.CorsRules }).(CorsRuleArrayOutput)
}

type CorsRulesPtrOutput struct{ *pulumi.OutputState }

func (CorsRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRules)(nil)).Elem()
}

func (o CorsRulesPtrOutput) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return o
}

func (o CorsRulesPtrOutput) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return o
}

func (o CorsRulesPtrOutput) Elem() CorsRulesOutput {
	return o.ApplyT(func(v *CorsRules) CorsRules {
		if v != nil {
			return *v
		}
		var ret CorsRules
		return ret
	}).(CorsRulesOutput)
}

// The list of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesPtrOutput) CorsRules() CorsRuleArrayOutput {
	return o.ApplyT(func(v *CorsRules) []CorsRule {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(CorsRuleArrayOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponse struct {
	// The list of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRuleResponse `pulumi:"corsRules"`
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponseOutput struct{ *pulumi.OutputState }

func (CorsRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRulesResponse)(nil)).Elem()
}

func (o CorsRulesResponseOutput) ToCorsRulesResponseOutput() CorsRulesResponseOutput {
	return o
}

func (o CorsRulesResponseOutput) ToCorsRulesResponseOutputWithContext(ctx context.Context) CorsRulesResponseOutput {
	return o
}

// The list of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesResponseOutput) CorsRules() CorsRuleResponseArrayOutput {
	return o.ApplyT(func(v CorsRulesResponse) []CorsRuleResponse { return v.CorsRules }).(CorsRuleResponseArrayOutput)
}

type CorsRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRulesResponse)(nil)).Elem()
}

func (o CorsRulesResponsePtrOutput) ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput {
	return o
}

func (o CorsRulesResponsePtrOutput) ToCorsRulesResponsePtrOutputWithContext(ctx context.Context) CorsRulesResponsePtrOutput {
	return o
}

func (o CorsRulesResponsePtrOutput) Elem() CorsRulesResponseOutput {
	return o.ApplyT(func(v *CorsRulesResponse) CorsRulesResponse {
		if v != nil {
			return *v
		}
		var ret CorsRulesResponse
		return ret
	}).(CorsRulesResponseOutput)
}

// The list of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesResponsePtrOutput) CorsRules() CorsRuleResponseArrayOutput {
	return o.ApplyT(func(v *CorsRulesResponse) []CorsRuleResponse {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(CorsRuleResponseArrayOutput)
}

// Creator resource properties
type CreatorProperties struct {
	// The consumed storage unit size in bytes for the creator resource.
	ConsumedStorageUnitSizeInBytes *int `pulumi:"consumedStorageUnitSizeInBytes"`
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits int `pulumi:"storageUnits"`
	// The total allocated storage unit size in bytes for the creator resource.
	TotalStorageUnitSizeInBytes *int `pulumi:"totalStorageUnitSizeInBytes"`
}

// CreatorPropertiesInput is an input type that accepts CreatorPropertiesArgs and CreatorPropertiesOutput values.
// You can construct a concrete instance of `CreatorPropertiesInput` via:
//
//	CreatorPropertiesArgs{...}
type CreatorPropertiesInput interface {
	pulumi.Input

	ToCreatorPropertiesOutput() CreatorPropertiesOutput
	ToCreatorPropertiesOutputWithContext(context.Context) CreatorPropertiesOutput
}

// Creator resource properties
type CreatorPropertiesArgs struct {
	// The consumed storage unit size in bytes for the creator resource.
	ConsumedStorageUnitSizeInBytes pulumi.IntPtrInput `pulumi:"consumedStorageUnitSizeInBytes"`
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits pulumi.IntInput `pulumi:"storageUnits"`
	// The total allocated storage unit size in bytes for the creator resource.
	TotalStorageUnitSizeInBytes pulumi.IntPtrInput `pulumi:"totalStorageUnitSizeInBytes"`
}

func (CreatorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatorProperties)(nil)).Elem()
}

func (i CreatorPropertiesArgs) ToCreatorPropertiesOutput() CreatorPropertiesOutput {
	return i.ToCreatorPropertiesOutputWithContext(context.Background())
}

func (i CreatorPropertiesArgs) ToCreatorPropertiesOutputWithContext(ctx context.Context) CreatorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatorPropertiesOutput)
}

// Creator resource properties
type CreatorPropertiesOutput struct{ *pulumi.OutputState }

func (CreatorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatorProperties)(nil)).Elem()
}

func (o CreatorPropertiesOutput) ToCreatorPropertiesOutput() CreatorPropertiesOutput {
	return o
}

func (o CreatorPropertiesOutput) ToCreatorPropertiesOutputWithContext(ctx context.Context) CreatorPropertiesOutput {
	return o
}

// The consumed storage unit size in bytes for the creator resource.
func (o CreatorPropertiesOutput) ConsumedStorageUnitSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreatorProperties) *int { return v.ConsumedStorageUnitSizeInBytes }).(pulumi.IntPtrOutput)
}

// The storage units to be allocated. Integer values from 1 to 100, inclusive.
func (o CreatorPropertiesOutput) StorageUnits() pulumi.IntOutput {
	return o.ApplyT(func(v CreatorProperties) int { return v.StorageUnits }).(pulumi.IntOutput)
}

// The total allocated storage unit size in bytes for the creator resource.
func (o CreatorPropertiesOutput) TotalStorageUnitSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreatorProperties) *int { return v.TotalStorageUnitSizeInBytes }).(pulumi.IntPtrOutput)
}

// Creator resource properties
type CreatorPropertiesResponse struct {
	// The consumed storage unit size in bytes for the creator resource.
	ConsumedStorageUnitSizeInBytes *int `pulumi:"consumedStorageUnitSizeInBytes"`
	// The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled
	ProvisioningState string `pulumi:"provisioningState"`
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits int `pulumi:"storageUnits"`
	// The total allocated storage unit size in bytes for the creator resource.
	TotalStorageUnitSizeInBytes *int `pulumi:"totalStorageUnitSizeInBytes"`
}

// Creator resource properties
type CreatorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CreatorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatorPropertiesResponse)(nil)).Elem()
}

func (o CreatorPropertiesResponseOutput) ToCreatorPropertiesResponseOutput() CreatorPropertiesResponseOutput {
	return o
}

func (o CreatorPropertiesResponseOutput) ToCreatorPropertiesResponseOutputWithContext(ctx context.Context) CreatorPropertiesResponseOutput {
	return o
}

// The consumed storage unit size in bytes for the creator resource.
func (o CreatorPropertiesResponseOutput) ConsumedStorageUnitSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreatorPropertiesResponse) *int { return v.ConsumedStorageUnitSizeInBytes }).(pulumi.IntPtrOutput)
}

// The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled
func (o CreatorPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CreatorPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The storage units to be allocated. Integer values from 1 to 100, inclusive.
func (o CreatorPropertiesResponseOutput) StorageUnits() pulumi.IntOutput {
	return o.ApplyT(func(v CreatorPropertiesResponse) int { return v.StorageUnits }).(pulumi.IntOutput)
}

// The total allocated storage unit size in bytes for the creator resource.
func (o CreatorPropertiesResponseOutput) TotalStorageUnitSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreatorPropertiesResponse) *int { return v.TotalStorageUnitSizeInBytes }).(pulumi.IntPtrOutput)
}

// All encryption configuration for a resource.
type Encryption struct {
	// All Customer-managed key encryption properties for the resource.
	CustomerManagedKeyEncryption *EncryptionCustomerManagedKeyEncryption `pulumi:"customerManagedKeyEncryption"`
	// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//	EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// All encryption configuration for a resource.
type EncryptionArgs struct {
	// All Customer-managed key encryption properties for the resource.
	CustomerManagedKeyEncryption EncryptionCustomerManagedKeyEncryptionPtrInput `pulumi:"customerManagedKeyEncryption"`
	// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
}

func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//	        EncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// All encryption configuration for a resource.
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionOutput) CustomerManagedKeyEncryption() EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionCustomerManagedKeyEncryption { return v.CustomerManagedKeyEncryption }).(EncryptionCustomerManagedKeyEncryptionPtrOutput)
}

// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
func (o EncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Encryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption {
		if v != nil {
			return *v
		}
		var ret Encryption
		return ret
	}).(EncryptionOutput)
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionPtrOutput) CustomerManagedKeyEncryption() EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionCustomerManagedKeyEncryption {
		if v == nil {
			return nil
		}
		return v.CustomerManagedKeyEncryption
	}).(EncryptionCustomerManagedKeyEncryptionPtrOutput)
}

// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
func (o EncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
type EncryptionCustomerManagedKeyEncryption struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity *EncryptionKeyEncryptionKeyIdentity `pulumi:"keyEncryptionKeyIdentity"`
	// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
	KeyEncryptionKeyUrl *string `pulumi:"keyEncryptionKeyUrl"`
}

// EncryptionCustomerManagedKeyEncryptionInput is an input type that accepts EncryptionCustomerManagedKeyEncryptionArgs and EncryptionCustomerManagedKeyEncryptionOutput values.
// You can construct a concrete instance of `EncryptionCustomerManagedKeyEncryptionInput` via:
//
//	EncryptionCustomerManagedKeyEncryptionArgs{...}
type EncryptionCustomerManagedKeyEncryptionInput interface {
	pulumi.Input

	ToEncryptionCustomerManagedKeyEncryptionOutput() EncryptionCustomerManagedKeyEncryptionOutput
	ToEncryptionCustomerManagedKeyEncryptionOutputWithContext(context.Context) EncryptionCustomerManagedKeyEncryptionOutput
}

// All Customer-managed key encryption properties for the resource.
type EncryptionCustomerManagedKeyEncryptionArgs struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity EncryptionKeyEncryptionKeyIdentityPtrInput `pulumi:"keyEncryptionKeyIdentity"`
	// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
	KeyEncryptionKeyUrl pulumi.StringPtrInput `pulumi:"keyEncryptionKeyUrl"`
}

func (EncryptionCustomerManagedKeyEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionCustomerManagedKeyEncryption)(nil)).Elem()
}

func (i EncryptionCustomerManagedKeyEncryptionArgs) ToEncryptionCustomerManagedKeyEncryptionOutput() EncryptionCustomerManagedKeyEncryptionOutput {
	return i.ToEncryptionCustomerManagedKeyEncryptionOutputWithContext(context.Background())
}

func (i EncryptionCustomerManagedKeyEncryptionArgs) ToEncryptionCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) EncryptionCustomerManagedKeyEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionCustomerManagedKeyEncryptionOutput)
}

func (i EncryptionCustomerManagedKeyEncryptionArgs) ToEncryptionCustomerManagedKeyEncryptionPtrOutput() EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return i.ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionCustomerManagedKeyEncryptionArgs) ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionCustomerManagedKeyEncryptionOutput).ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(ctx)
}

// EncryptionCustomerManagedKeyEncryptionPtrInput is an input type that accepts EncryptionCustomerManagedKeyEncryptionArgs, EncryptionCustomerManagedKeyEncryptionPtr and EncryptionCustomerManagedKeyEncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionCustomerManagedKeyEncryptionPtrInput` via:
//
//	        EncryptionCustomerManagedKeyEncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionCustomerManagedKeyEncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionCustomerManagedKeyEncryptionPtrOutput() EncryptionCustomerManagedKeyEncryptionPtrOutput
	ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(context.Context) EncryptionCustomerManagedKeyEncryptionPtrOutput
}

type encryptionCustomerManagedKeyEncryptionPtrType EncryptionCustomerManagedKeyEncryptionArgs

func EncryptionCustomerManagedKeyEncryptionPtr(v *EncryptionCustomerManagedKeyEncryptionArgs) EncryptionCustomerManagedKeyEncryptionPtrInput {
	return (*encryptionCustomerManagedKeyEncryptionPtrType)(v)
}

func (*encryptionCustomerManagedKeyEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionCustomerManagedKeyEncryption)(nil)).Elem()
}

func (i *encryptionCustomerManagedKeyEncryptionPtrType) ToEncryptionCustomerManagedKeyEncryptionPtrOutput() EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return i.ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionCustomerManagedKeyEncryptionPtrType) ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionCustomerManagedKeyEncryptionPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
type EncryptionCustomerManagedKeyEncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionCustomerManagedKeyEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o EncryptionCustomerManagedKeyEncryptionOutput) ToEncryptionCustomerManagedKeyEncryptionOutput() EncryptionCustomerManagedKeyEncryptionOutput {
	return o
}

func (o EncryptionCustomerManagedKeyEncryptionOutput) ToEncryptionCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) EncryptionCustomerManagedKeyEncryptionOutput {
	return o
}

func (o EncryptionCustomerManagedKeyEncryptionOutput) ToEncryptionCustomerManagedKeyEncryptionPtrOutput() EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return o.ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionCustomerManagedKeyEncryptionOutput) ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionCustomerManagedKeyEncryption) *EncryptionCustomerManagedKeyEncryption {
		return &v
	}).(EncryptionCustomerManagedKeyEncryptionPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o EncryptionCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyIdentity() EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v EncryptionCustomerManagedKeyEncryption) *EncryptionKeyEncryptionKeyIdentity {
		return v.KeyEncryptionKeyIdentity
	}).(EncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o EncryptionCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionCustomerManagedKeyEncryption) *string { return v.KeyEncryptionKeyUrl }).(pulumi.StringPtrOutput)
}

type EncryptionCustomerManagedKeyEncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionCustomerManagedKeyEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o EncryptionCustomerManagedKeyEncryptionPtrOutput) ToEncryptionCustomerManagedKeyEncryptionPtrOutput() EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o EncryptionCustomerManagedKeyEncryptionPtrOutput) ToEncryptionCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) EncryptionCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o EncryptionCustomerManagedKeyEncryptionPtrOutput) Elem() EncryptionCustomerManagedKeyEncryptionOutput {
	return o.ApplyT(func(v *EncryptionCustomerManagedKeyEncryption) EncryptionCustomerManagedKeyEncryption {
		if v != nil {
			return *v
		}
		var ret EncryptionCustomerManagedKeyEncryption
		return ret
	}).(EncryptionCustomerManagedKeyEncryptionOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o EncryptionCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyIdentity() EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *EncryptionCustomerManagedKeyEncryption) *EncryptionKeyEncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyIdentity
	}).(EncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o EncryptionCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionCustomerManagedKeyEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyUrl
	}).(pulumi.StringPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type EncryptionKeyEncryptionKeyIdentity struct {
	// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
	DelegatedIdentityClientId *string `pulumi:"delegatedIdentityClientId"`
	// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
	FederatedClientId *string `pulumi:"federatedClientId"`
	// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
	IdentityType *string `pulumi:"identityType"`
	// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// EncryptionKeyEncryptionKeyIdentityInput is an input type that accepts EncryptionKeyEncryptionKeyIdentityArgs and EncryptionKeyEncryptionKeyIdentityOutput values.
// You can construct a concrete instance of `EncryptionKeyEncryptionKeyIdentityInput` via:
//
//	EncryptionKeyEncryptionKeyIdentityArgs{...}
type EncryptionKeyEncryptionKeyIdentityInput interface {
	pulumi.Input

	ToEncryptionKeyEncryptionKeyIdentityOutput() EncryptionKeyEncryptionKeyIdentityOutput
	ToEncryptionKeyEncryptionKeyIdentityOutputWithContext(context.Context) EncryptionKeyEncryptionKeyIdentityOutput
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type EncryptionKeyEncryptionKeyIdentityArgs struct {
	// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
	DelegatedIdentityClientId pulumi.StringPtrInput `pulumi:"delegatedIdentityClientId"`
	// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
	FederatedClientId pulumi.StringPtrInput `pulumi:"federatedClientId"`
	// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
	IdentityType pulumi.StringPtrInput `pulumi:"identityType"`
	// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (EncryptionKeyEncryptionKeyIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (i EncryptionKeyEncryptionKeyIdentityArgs) ToEncryptionKeyEncryptionKeyIdentityOutput() EncryptionKeyEncryptionKeyIdentityOutput {
	return i.ToEncryptionKeyEncryptionKeyIdentityOutputWithContext(context.Background())
}

func (i EncryptionKeyEncryptionKeyIdentityArgs) ToEncryptionKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) EncryptionKeyEncryptionKeyIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyEncryptionKeyIdentityOutput)
}

func (i EncryptionKeyEncryptionKeyIdentityArgs) ToEncryptionKeyEncryptionKeyIdentityPtrOutput() EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return i.ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i EncryptionKeyEncryptionKeyIdentityArgs) ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyEncryptionKeyIdentityOutput).ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx)
}

// EncryptionKeyEncryptionKeyIdentityPtrInput is an input type that accepts EncryptionKeyEncryptionKeyIdentityArgs, EncryptionKeyEncryptionKeyIdentityPtr and EncryptionKeyEncryptionKeyIdentityPtrOutput values.
// You can construct a concrete instance of `EncryptionKeyEncryptionKeyIdentityPtrInput` via:
//
//	        EncryptionKeyEncryptionKeyIdentityArgs{...}
//
//	or:
//
//	        nil
type EncryptionKeyEncryptionKeyIdentityPtrInput interface {
	pulumi.Input

	ToEncryptionKeyEncryptionKeyIdentityPtrOutput() EncryptionKeyEncryptionKeyIdentityPtrOutput
	ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Context) EncryptionKeyEncryptionKeyIdentityPtrOutput
}

type encryptionKeyEncryptionKeyIdentityPtrType EncryptionKeyEncryptionKeyIdentityArgs

func EncryptionKeyEncryptionKeyIdentityPtr(v *EncryptionKeyEncryptionKeyIdentityArgs) EncryptionKeyEncryptionKeyIdentityPtrInput {
	return (*encryptionKeyEncryptionKeyIdentityPtrType)(v)
}

func (*encryptionKeyEncryptionKeyIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (i *encryptionKeyEncryptionKeyIdentityPtrType) ToEncryptionKeyEncryptionKeyIdentityPtrOutput() EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return i.ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i *encryptionKeyEncryptionKeyIdentityPtrType) ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type EncryptionKeyEncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (EncryptionKeyEncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o EncryptionKeyEncryptionKeyIdentityOutput) ToEncryptionKeyEncryptionKeyIdentityOutput() EncryptionKeyEncryptionKeyIdentityOutput {
	return o
}

func (o EncryptionKeyEncryptionKeyIdentityOutput) ToEncryptionKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) EncryptionKeyEncryptionKeyIdentityOutput {
	return o
}

func (o EncryptionKeyEncryptionKeyIdentityOutput) ToEncryptionKeyEncryptionKeyIdentityPtrOutput() EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyEncryptionKeyIdentityOutput) ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKeyEncryptionKeyIdentity) *EncryptionKeyEncryptionKeyIdentity {
		return &v
	}).(EncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o EncryptionKeyEncryptionKeyIdentityOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyEncryptionKeyIdentity) *string { return v.DelegatedIdentityClientId }).(pulumi.StringPtrOutput)
}

// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
func (o EncryptionKeyEncryptionKeyIdentityOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyEncryptionKeyIdentity) *string { return v.FederatedClientId }).(pulumi.StringPtrOutput)
}

// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
func (o EncryptionKeyEncryptionKeyIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyEncryptionKeyIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
func (o EncryptionKeyEncryptionKeyIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyEncryptionKeyIdentity) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type EncryptionKeyEncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyEncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) ToEncryptionKeyEncryptionKeyIdentityPtrOutput() EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) ToEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) Elem() EncryptionKeyEncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *EncryptionKeyEncryptionKeyIdentity) EncryptionKeyEncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyEncryptionKeyIdentity
		return ret
	}).(EncryptionKeyEncryptionKeyIdentityOutput)
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.FederatedClientId
	}).(pulumi.StringPtrOutput)
}

// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
func (o EncryptionKeyEncryptionKeyIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// All encryption configuration for a resource.
type EncryptionResponse struct {
	// All Customer-managed key encryption properties for the resource.
	CustomerManagedKeyEncryption *EncryptionResponseCustomerManagedKeyEncryption `pulumi:"customerManagedKeyEncryption"`
	// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
}

// All encryption configuration for a resource.
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionResponseOutput) CustomerManagedKeyEncryption() EncryptionResponseCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionResponseCustomerManagedKeyEncryption {
		return v.CustomerManagedKeyEncryption
	}).(EncryptionResponseCustomerManagedKeyEncryptionPtrOutput)
}

// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
func (o EncryptionResponseOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionResponse
		return ret
	}).(EncryptionResponseOutput)
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionResponsePtrOutput) CustomerManagedKeyEncryption() EncryptionResponseCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *EncryptionResponseCustomerManagedKeyEncryption {
		if v == nil {
			return nil
		}
		return v.CustomerManagedKeyEncryption
	}).(EncryptionResponseCustomerManagedKeyEncryptionPtrOutput)
}

// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
func (o EncryptionResponsePtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
type EncryptionResponseCustomerManagedKeyEncryption struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity *EncryptionResponseKeyEncryptionKeyIdentity `pulumi:"keyEncryptionKeyIdentity"`
	// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
	KeyEncryptionKeyUrl *string `pulumi:"keyEncryptionKeyUrl"`
}

// All Customer-managed key encryption properties for the resource.
type EncryptionResponseCustomerManagedKeyEncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionResponseCustomerManagedKeyEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponseCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o EncryptionResponseCustomerManagedKeyEncryptionOutput) ToEncryptionResponseCustomerManagedKeyEncryptionOutput() EncryptionResponseCustomerManagedKeyEncryptionOutput {
	return o
}

func (o EncryptionResponseCustomerManagedKeyEncryptionOutput) ToEncryptionResponseCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) EncryptionResponseCustomerManagedKeyEncryptionOutput {
	return o
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o EncryptionResponseCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyIdentity() EncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v EncryptionResponseCustomerManagedKeyEncryption) *EncryptionResponseKeyEncryptionKeyIdentity {
		return v.KeyEncryptionKeyIdentity
	}).(EncryptionResponseKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o EncryptionResponseCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponseCustomerManagedKeyEncryption) *string { return v.KeyEncryptionKeyUrl }).(pulumi.StringPtrOutput)
}

type EncryptionResponseCustomerManagedKeyEncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponseCustomerManagedKeyEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponseCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o EncryptionResponseCustomerManagedKeyEncryptionPtrOutput) ToEncryptionResponseCustomerManagedKeyEncryptionPtrOutput() EncryptionResponseCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o EncryptionResponseCustomerManagedKeyEncryptionPtrOutput) ToEncryptionResponseCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) EncryptionResponseCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o EncryptionResponseCustomerManagedKeyEncryptionPtrOutput) Elem() EncryptionResponseCustomerManagedKeyEncryptionOutput {
	return o.ApplyT(func(v *EncryptionResponseCustomerManagedKeyEncryption) EncryptionResponseCustomerManagedKeyEncryption {
		if v != nil {
			return *v
		}
		var ret EncryptionResponseCustomerManagedKeyEncryption
		return ret
	}).(EncryptionResponseCustomerManagedKeyEncryptionOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o EncryptionResponseCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyIdentity() EncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *EncryptionResponseCustomerManagedKeyEncryption) *EncryptionResponseKeyEncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyIdentity
	}).(EncryptionResponseKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o EncryptionResponseCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponseCustomerManagedKeyEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyUrl
	}).(pulumi.StringPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type EncryptionResponseKeyEncryptionKeyIdentity struct {
	// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
	DelegatedIdentityClientId *string `pulumi:"delegatedIdentityClientId"`
	// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
	FederatedClientId *string `pulumi:"federatedClientId"`
	// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
	IdentityType *string `pulumi:"identityType"`
	// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type EncryptionResponseKeyEncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (EncryptionResponseKeyEncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponseKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o EncryptionResponseKeyEncryptionKeyIdentityOutput) ToEncryptionResponseKeyEncryptionKeyIdentityOutput() EncryptionResponseKeyEncryptionKeyIdentityOutput {
	return o
}

func (o EncryptionResponseKeyEncryptionKeyIdentityOutput) ToEncryptionResponseKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) EncryptionResponseKeyEncryptionKeyIdentityOutput {
	return o
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o EncryptionResponseKeyEncryptionKeyIdentityOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponseKeyEncryptionKeyIdentity) *string { return v.DelegatedIdentityClientId }).(pulumi.StringPtrOutput)
}

// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
func (o EncryptionResponseKeyEncryptionKeyIdentityOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponseKeyEncryptionKeyIdentity) *string { return v.FederatedClientId }).(pulumi.StringPtrOutput)
}

// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
func (o EncryptionResponseKeyEncryptionKeyIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponseKeyEncryptionKeyIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
func (o EncryptionResponseKeyEncryptionKeyIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponseKeyEncryptionKeyIdentity) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type EncryptionResponseKeyEncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponseKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) ToEncryptionResponseKeyEncryptionKeyIdentityPtrOutput() EncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) ToEncryptionResponseKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) Elem() EncryptionResponseKeyEncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *EncryptionResponseKeyEncryptionKeyIdentity) EncryptionResponseKeyEncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret EncryptionResponseKeyEncryptionKeyIdentity
		return ret
	}).(EncryptionResponseKeyEncryptionKeyIdentityOutput)
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.FederatedClientId
	}).(pulumi.StringPtrOutput)
}

// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
func (o EncryptionResponseKeyEncryptionKeyIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.
type LinkedResource struct {
	// ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.
	Id string `pulumi:"id"`
	// A provided name which uniquely identifies the linked resource.
	UniqueName string `pulumi:"uniqueName"`
}

// LinkedResourceInput is an input type that accepts LinkedResourceArgs and LinkedResourceOutput values.
// You can construct a concrete instance of `LinkedResourceInput` via:
//
//	LinkedResourceArgs{...}
type LinkedResourceInput interface {
	pulumi.Input

	ToLinkedResourceOutput() LinkedResourceOutput
	ToLinkedResourceOutputWithContext(context.Context) LinkedResourceOutput
}

// Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.
type LinkedResourceArgs struct {
	// ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.
	Id pulumi.StringInput `pulumi:"id"`
	// A provided name which uniquely identifies the linked resource.
	UniqueName pulumi.StringInput `pulumi:"uniqueName"`
}

func (LinkedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedResource)(nil)).Elem()
}

func (i LinkedResourceArgs) ToLinkedResourceOutput() LinkedResourceOutput {
	return i.ToLinkedResourceOutputWithContext(context.Background())
}

func (i LinkedResourceArgs) ToLinkedResourceOutputWithContext(ctx context.Context) LinkedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedResourceOutput)
}

// LinkedResourceArrayInput is an input type that accepts LinkedResourceArray and LinkedResourceArrayOutput values.
// You can construct a concrete instance of `LinkedResourceArrayInput` via:
//
//	LinkedResourceArray{ LinkedResourceArgs{...} }
type LinkedResourceArrayInput interface {
	pulumi.Input

	ToLinkedResourceArrayOutput() LinkedResourceArrayOutput
	ToLinkedResourceArrayOutputWithContext(context.Context) LinkedResourceArrayOutput
}

type LinkedResourceArray []LinkedResourceInput

func (LinkedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedResource)(nil)).Elem()
}

func (i LinkedResourceArray) ToLinkedResourceArrayOutput() LinkedResourceArrayOutput {
	return i.ToLinkedResourceArrayOutputWithContext(context.Background())
}

func (i LinkedResourceArray) ToLinkedResourceArrayOutputWithContext(ctx context.Context) LinkedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedResourceArrayOutput)
}

// Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.
type LinkedResourceOutput struct{ *pulumi.OutputState }

func (LinkedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedResource)(nil)).Elem()
}

func (o LinkedResourceOutput) ToLinkedResourceOutput() LinkedResourceOutput {
	return o
}

func (o LinkedResourceOutput) ToLinkedResourceOutputWithContext(ctx context.Context) LinkedResourceOutput {
	return o
}

// ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.
func (o LinkedResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedResource) string { return v.Id }).(pulumi.StringOutput)
}

// A provided name which uniquely identifies the linked resource.
func (o LinkedResourceOutput) UniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedResource) string { return v.UniqueName }).(pulumi.StringOutput)
}

type LinkedResourceArrayOutput struct{ *pulumi.OutputState }

func (LinkedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedResource)(nil)).Elem()
}

func (o LinkedResourceArrayOutput) ToLinkedResourceArrayOutput() LinkedResourceArrayOutput {
	return o
}

func (o LinkedResourceArrayOutput) ToLinkedResourceArrayOutputWithContext(ctx context.Context) LinkedResourceArrayOutput {
	return o
}

func (o LinkedResourceArrayOutput) Index(i pulumi.IntInput) LinkedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedResource {
		return vs[0].([]LinkedResource)[vs[1].(int)]
	}).(LinkedResourceOutput)
}

// Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.
type LinkedResourceResponse struct {
	// ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.
	Id string `pulumi:"id"`
	// A provided name which uniquely identifies the linked resource.
	UniqueName string `pulumi:"uniqueName"`
}

// Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.
type LinkedResourceResponseOutput struct{ *pulumi.OutputState }

func (LinkedResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedResourceResponse)(nil)).Elem()
}

func (o LinkedResourceResponseOutput) ToLinkedResourceResponseOutput() LinkedResourceResponseOutput {
	return o
}

func (o LinkedResourceResponseOutput) ToLinkedResourceResponseOutputWithContext(ctx context.Context) LinkedResourceResponseOutput {
	return o
}

// ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'.
func (o LinkedResourceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedResourceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// A provided name which uniquely identifies the linked resource.
func (o LinkedResourceResponseOutput) UniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedResourceResponse) string { return v.UniqueName }).(pulumi.StringOutput)
}

type LinkedResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (LinkedResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedResourceResponse)(nil)).Elem()
}

func (o LinkedResourceResponseArrayOutput) ToLinkedResourceResponseArrayOutput() LinkedResourceResponseArrayOutput {
	return o
}

func (o LinkedResourceResponseArrayOutput) ToLinkedResourceResponseArrayOutputWithContext(ctx context.Context) LinkedResourceResponseArrayOutput {
	return o
}

func (o LinkedResourceResponseArrayOutput) Index(i pulumi.IntInput) LinkedResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedResourceResponse {
		return vs[0].([]LinkedResourceResponse)[vs[1].(int)]
	}).(LinkedResourceResponseOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Additional Maps account properties
type MapsAccountProperties struct {
	// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
	Cors *CorsRules `pulumi:"cors"`
	// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// All encryption configuration for a resource.
	Encryption *Encryption `pulumi:"encryption"`
	// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
	LinkedResources []LinkedResource `pulumi:"linkedResources"`
	// Property to specify whether the Maps Account will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// Defaults sets the appropriate defaults for MapsAccountProperties
func (val *MapsAccountProperties) Defaults() *MapsAccountProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DisableLocalAuth == nil {
		disableLocalAuth_ := false
		tmp.DisableLocalAuth = &disableLocalAuth_
	}
	if tmp.PublicNetworkAccess == nil {
		publicNetworkAccess_ := "enabled"
		tmp.PublicNetworkAccess = &publicNetworkAccess_
	}
	return &tmp
}

// MapsAccountPropertiesInput is an input type that accepts MapsAccountPropertiesArgs and MapsAccountPropertiesOutput values.
// You can construct a concrete instance of `MapsAccountPropertiesInput` via:
//
//	MapsAccountPropertiesArgs{...}
type MapsAccountPropertiesInput interface {
	pulumi.Input

	ToMapsAccountPropertiesOutput() MapsAccountPropertiesOutput
	ToMapsAccountPropertiesOutputWithContext(context.Context) MapsAccountPropertiesOutput
}

// Additional Maps account properties
type MapsAccountPropertiesArgs struct {
	// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
	Cors CorsRulesPtrInput `pulumi:"cors"`
	// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// All encryption configuration for a resource.
	Encryption EncryptionPtrInput `pulumi:"encryption"`
	// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
	LinkedResources LinkedResourceArrayInput `pulumi:"linkedResources"`
	// Property to specify whether the Maps Account will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked.
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

// Defaults sets the appropriate defaults for MapsAccountPropertiesArgs
func (val *MapsAccountPropertiesArgs) Defaults() *MapsAccountPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DisableLocalAuth == nil {
		tmp.DisableLocalAuth = pulumi.BoolPtr(false)
	}
	if tmp.PublicNetworkAccess == nil {
		tmp.PublicNetworkAccess = pulumi.StringPtr("enabled")
	}
	return &tmp
}
func (MapsAccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapsAccountProperties)(nil)).Elem()
}

func (i MapsAccountPropertiesArgs) ToMapsAccountPropertiesOutput() MapsAccountPropertiesOutput {
	return i.ToMapsAccountPropertiesOutputWithContext(context.Background())
}

func (i MapsAccountPropertiesArgs) ToMapsAccountPropertiesOutputWithContext(ctx context.Context) MapsAccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapsAccountPropertiesOutput)
}

func (i MapsAccountPropertiesArgs) ToMapsAccountPropertiesPtrOutput() MapsAccountPropertiesPtrOutput {
	return i.ToMapsAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i MapsAccountPropertiesArgs) ToMapsAccountPropertiesPtrOutputWithContext(ctx context.Context) MapsAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapsAccountPropertiesOutput).ToMapsAccountPropertiesPtrOutputWithContext(ctx)
}

// MapsAccountPropertiesPtrInput is an input type that accepts MapsAccountPropertiesArgs, MapsAccountPropertiesPtr and MapsAccountPropertiesPtrOutput values.
// You can construct a concrete instance of `MapsAccountPropertiesPtrInput` via:
//
//	        MapsAccountPropertiesArgs{...}
//
//	or:
//
//	        nil
type MapsAccountPropertiesPtrInput interface {
	pulumi.Input

	ToMapsAccountPropertiesPtrOutput() MapsAccountPropertiesPtrOutput
	ToMapsAccountPropertiesPtrOutputWithContext(context.Context) MapsAccountPropertiesPtrOutput
}

type mapsAccountPropertiesPtrType MapsAccountPropertiesArgs

func MapsAccountPropertiesPtr(v *MapsAccountPropertiesArgs) MapsAccountPropertiesPtrInput {
	return (*mapsAccountPropertiesPtrType)(v)
}

func (*mapsAccountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapsAccountProperties)(nil)).Elem()
}

func (i *mapsAccountPropertiesPtrType) ToMapsAccountPropertiesPtrOutput() MapsAccountPropertiesPtrOutput {
	return i.ToMapsAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *mapsAccountPropertiesPtrType) ToMapsAccountPropertiesPtrOutputWithContext(ctx context.Context) MapsAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapsAccountPropertiesPtrOutput)
}

// Additional Maps account properties
type MapsAccountPropertiesOutput struct{ *pulumi.OutputState }

func (MapsAccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapsAccountProperties)(nil)).Elem()
}

func (o MapsAccountPropertiesOutput) ToMapsAccountPropertiesOutput() MapsAccountPropertiesOutput {
	return o
}

func (o MapsAccountPropertiesOutput) ToMapsAccountPropertiesOutputWithContext(ctx context.Context) MapsAccountPropertiesOutput {
	return o
}

func (o MapsAccountPropertiesOutput) ToMapsAccountPropertiesPtrOutput() MapsAccountPropertiesPtrOutput {
	return o.ToMapsAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o MapsAccountPropertiesOutput) ToMapsAccountPropertiesPtrOutputWithContext(ctx context.Context) MapsAccountPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapsAccountProperties) *MapsAccountProperties {
		return &v
	}).(MapsAccountPropertiesPtrOutput)
}

// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
func (o MapsAccountPropertiesOutput) Cors() CorsRulesPtrOutput {
	return o.ApplyT(func(v MapsAccountProperties) *CorsRules { return v.Cors }).(CorsRulesPtrOutput)
}

// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
func (o MapsAccountPropertiesOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MapsAccountProperties) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// All encryption configuration for a resource.
func (o MapsAccountPropertiesOutput) Encryption() EncryptionPtrOutput {
	return o.ApplyT(func(v MapsAccountProperties) *Encryption { return v.Encryption }).(EncryptionPtrOutput)
}

// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
func (o MapsAccountPropertiesOutput) LinkedResources() LinkedResourceArrayOutput {
	return o.ApplyT(func(v MapsAccountProperties) []LinkedResource { return v.LinkedResources }).(LinkedResourceArrayOutput)
}

// Property to specify whether the Maps Account will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked.
func (o MapsAccountPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapsAccountProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type MapsAccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MapsAccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapsAccountProperties)(nil)).Elem()
}

func (o MapsAccountPropertiesPtrOutput) ToMapsAccountPropertiesPtrOutput() MapsAccountPropertiesPtrOutput {
	return o
}

func (o MapsAccountPropertiesPtrOutput) ToMapsAccountPropertiesPtrOutputWithContext(ctx context.Context) MapsAccountPropertiesPtrOutput {
	return o
}

func (o MapsAccountPropertiesPtrOutput) Elem() MapsAccountPropertiesOutput {
	return o.ApplyT(func(v *MapsAccountProperties) MapsAccountProperties {
		if v != nil {
			return *v
		}
		var ret MapsAccountProperties
		return ret
	}).(MapsAccountPropertiesOutput)
}

// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
func (o MapsAccountPropertiesPtrOutput) Cors() CorsRulesPtrOutput {
	return o.ApplyT(func(v *MapsAccountProperties) *CorsRules {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsRulesPtrOutput)
}

// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
func (o MapsAccountPropertiesPtrOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MapsAccountProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableLocalAuth
	}).(pulumi.BoolPtrOutput)
}

// All encryption configuration for a resource.
func (o MapsAccountPropertiesPtrOutput) Encryption() EncryptionPtrOutput {
	return o.ApplyT(func(v *MapsAccountProperties) *Encryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(EncryptionPtrOutput)
}

// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
func (o MapsAccountPropertiesPtrOutput) LinkedResources() LinkedResourceArrayOutput {
	return o.ApplyT(func(v *MapsAccountProperties) []LinkedResource {
		if v == nil {
			return nil
		}
		return v.LinkedResources
	}).(LinkedResourceArrayOutput)
}

// Property to specify whether the Maps Account will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked.
func (o MapsAccountPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Additional Maps account properties
type MapsAccountPropertiesResponse struct {
	// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
	Cors *CorsRulesResponse `pulumi:"cors"`
	// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// All encryption configuration for a resource.
	Encryption *EncryptionResponse `pulumi:"encryption"`
	// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
	LinkedResources []LinkedResourceResponse `pulumi:"linkedResources"`
	// List of private endpoint connections associated with the Maps Account.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal states: `Succeeded` and `Failed`
	ProvisioningState string `pulumi:"provisioningState"`
	// Property to specify whether the Maps Account will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// A unique identifier for the Maps Account
	UniqueId string `pulumi:"uniqueId"`
}

// Defaults sets the appropriate defaults for MapsAccountPropertiesResponse
func (val *MapsAccountPropertiesResponse) Defaults() *MapsAccountPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DisableLocalAuth == nil {
		disableLocalAuth_ := false
		tmp.DisableLocalAuth = &disableLocalAuth_
	}
	if tmp.PublicNetworkAccess == nil {
		publicNetworkAccess_ := "enabled"
		tmp.PublicNetworkAccess = &publicNetworkAccess_
	}
	return &tmp
}

// Additional Maps account properties
type MapsAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MapsAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapsAccountPropertiesResponse)(nil)).Elem()
}

func (o MapsAccountPropertiesResponseOutput) ToMapsAccountPropertiesResponseOutput() MapsAccountPropertiesResponseOutput {
	return o
}

func (o MapsAccountPropertiesResponseOutput) ToMapsAccountPropertiesResponseOutputWithContext(ctx context.Context) MapsAccountPropertiesResponseOutput {
	return o
}

// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
func (o MapsAccountPropertiesResponseOutput) Cors() CorsRulesResponsePtrOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) *CorsRulesResponse { return v.Cors }).(CorsRulesResponsePtrOutput)
}

// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
func (o MapsAccountPropertiesResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// All encryption configuration for a resource.
func (o MapsAccountPropertiesResponseOutput) Encryption() EncryptionResponsePtrOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) *EncryptionResponse { return v.Encryption }).(EncryptionResponsePtrOutput)
}

// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
func (o MapsAccountPropertiesResponseOutput) LinkedResources() LinkedResourceResponseArrayOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) []LinkedResourceResponse { return v.LinkedResources }).(LinkedResourceResponseArrayOutput)
}

// List of private endpoint connections associated with the Maps Account.
func (o MapsAccountPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal states: `Succeeded` and `Failed`
func (o MapsAccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Property to specify whether the Maps Account will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked.
func (o MapsAccountPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// A unique identifier for the Maps Account
func (o MapsAccountPropertiesResponseOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v MapsAccountPropertiesResponse) string { return v.UniqueId }).(pulumi.StringOutput)
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponse struct {
	// The group ids for the private endpoint resource.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The private endpoint resource.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The group ids for the private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for private endpoint.
	Id string `pulumi:"id"`
}

// The private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The SKU of the Maps Account.
type Sku struct {
	// The name of the SKU, in standard format (such as G2).
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the Maps Account.
type SkuArgs struct {
	// The name of the SKU, in standard format (such as G2).
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The SKU of the Maps Account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The name of the SKU, in standard format (such as G2).
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU of the Maps Account.
type SkuResponse struct {
	// The name of the SKU, in standard format (such as G2).
	Name string `pulumi:"name"`
	// Gets the sku tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the Maps Account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The name of the SKU, in standard format (such as G2).
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CorsRuleOutput{})
	pulumi.RegisterOutputType(CorsRuleArrayOutput{})
	pulumi.RegisterOutputType(CorsRuleResponseOutput{})
	pulumi.RegisterOutputType(CorsRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(CorsRulesOutput{})
	pulumi.RegisterOutputType(CorsRulesPtrOutput{})
	pulumi.RegisterOutputType(CorsRulesResponseOutput{})
	pulumi.RegisterOutputType(CorsRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(CreatorPropertiesOutput{})
	pulumi.RegisterOutputType(CreatorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionCustomerManagedKeyEncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionCustomerManagedKeyEncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyEncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(EncryptionKeyEncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseCustomerManagedKeyEncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionResponseCustomerManagedKeyEncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseKeyEncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(EncryptionResponseKeyEncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(LinkedResourceOutput{})
	pulumi.RegisterOutputType(LinkedResourceArrayOutput{})
	pulumi.RegisterOutputType(LinkedResourceResponseOutput{})
	pulumi.RegisterOutputType(LinkedResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MapsAccountPropertiesOutput{})
	pulumi.RegisterOutputType(MapsAccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MapsAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
