// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redisenterprise

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about access policy assignment for database.
// Azure REST API version: 2024-09-01-preview.
func LookupEnterpriseAccessPolicyAssignment(ctx *pulumi.Context, args *LookupEnterpriseAccessPolicyAssignmentArgs, opts ...pulumi.InvokeOption) (*LookupEnterpriseAccessPolicyAssignmentResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEnterpriseAccessPolicyAssignmentResult
	err := ctx.Invoke("azure-native:redisenterprise:getEnterpriseAccessPolicyAssignment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnterpriseAccessPolicyAssignmentArgs struct {
	// The name of the Redis Enterprise database access policy assignment.
	AccessPolicyAssignmentName string `pulumi:"accessPolicyAssignmentName"`
	// The name of the Redis Enterprise cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the Redis Enterprise database.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Describes the access policy assignment of Redis Enterprise database
type LookupEnterpriseAccessPolicyAssignmentResult struct {
	// Name of access policy under specific access policy assignment. Only "default" policy is supported for now.
	AccessPolicyName string `pulumi:"accessPolicyName"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Current provisioning status of the access policy assignment.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The user associated with the access policy.
	User AccessPolicyAssignmentPropertiesResponseUser `pulumi:"user"`
}

func LookupEnterpriseAccessPolicyAssignmentOutput(ctx *pulumi.Context, args LookupEnterpriseAccessPolicyAssignmentOutputArgs, opts ...pulumi.InvokeOption) LookupEnterpriseAccessPolicyAssignmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEnterpriseAccessPolicyAssignmentResultOutput, error) {
			args := v.(LookupEnterpriseAccessPolicyAssignmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:redisenterprise:getEnterpriseAccessPolicyAssignment", args, LookupEnterpriseAccessPolicyAssignmentResultOutput{}, options).(LookupEnterpriseAccessPolicyAssignmentResultOutput), nil
		}).(LookupEnterpriseAccessPolicyAssignmentResultOutput)
}

type LookupEnterpriseAccessPolicyAssignmentOutputArgs struct {
	// The name of the Redis Enterprise database access policy assignment.
	AccessPolicyAssignmentName pulumi.StringInput `pulumi:"accessPolicyAssignmentName"`
	// The name of the Redis Enterprise cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the Redis Enterprise database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupEnterpriseAccessPolicyAssignmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnterpriseAccessPolicyAssignmentArgs)(nil)).Elem()
}

// Describes the access policy assignment of Redis Enterprise database
type LookupEnterpriseAccessPolicyAssignmentResultOutput struct{ *pulumi.OutputState }

func (LookupEnterpriseAccessPolicyAssignmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnterpriseAccessPolicyAssignmentResult)(nil)).Elem()
}

func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) ToLookupEnterpriseAccessPolicyAssignmentResultOutput() LookupEnterpriseAccessPolicyAssignmentResultOutput {
	return o
}

func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) ToLookupEnterpriseAccessPolicyAssignmentResultOutputWithContext(ctx context.Context) LookupEnterpriseAccessPolicyAssignmentResultOutput {
	return o
}

// Name of access policy under specific access policy assignment. Only "default" policy is supported for now.
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) AccessPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) string { return v.AccessPolicyName }).(pulumi.StringOutput)
}

// The Azure API version of the resource.
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Current provisioning status of the access policy assignment.
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) string { return v.Type }).(pulumi.StringOutput)
}

// The user associated with the access policy.
func (o LookupEnterpriseAccessPolicyAssignmentResultOutput) User() AccessPolicyAssignmentPropertiesResponseUserOutput {
	return o.ApplyT(func(v LookupEnterpriseAccessPolicyAssignmentResult) AccessPolicyAssignmentPropertiesResponseUser {
		return v.User
	}).(AccessPolicyAssignmentPropertiesResponseUserOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnterpriseAccessPolicyAssignmentResultOutput{})
}
