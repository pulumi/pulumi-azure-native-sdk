// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redisenterprise

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the access keys for the RedisEnterprise database.
// Azure REST API version: 2024-03-01-preview.
func ListEnterpriseDatabaseKeys(ctx *pulumi.Context, args *ListEnterpriseDatabaseKeysArgs, opts ...pulumi.InvokeOption) (*ListEnterpriseDatabaseKeysResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListEnterpriseDatabaseKeysResult
	err := ctx.Invoke("azure-native:redisenterprise:listEnterpriseDatabaseKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEnterpriseDatabaseKeysArgs struct {
	// The name of the Redis Enterprise cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the Redis Enterprise database.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The secret access keys used for authenticating connections to redis
type ListEnterpriseDatabaseKeysResult struct {
	// The current primary key that clients can use to authenticate
	PrimaryKey string `pulumi:"primaryKey"`
	// The current secondary key that clients can use to authenticate
	SecondaryKey string `pulumi:"secondaryKey"`
}

func ListEnterpriseDatabaseKeysOutput(ctx *pulumi.Context, args ListEnterpriseDatabaseKeysOutputArgs, opts ...pulumi.InvokeOption) ListEnterpriseDatabaseKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListEnterpriseDatabaseKeysResultOutput, error) {
			args := v.(ListEnterpriseDatabaseKeysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:redisenterprise:listEnterpriseDatabaseKeys", args, ListEnterpriseDatabaseKeysResultOutput{}, options).(ListEnterpriseDatabaseKeysResultOutput), nil
		}).(ListEnterpriseDatabaseKeysResultOutput)
}

type ListEnterpriseDatabaseKeysOutputArgs struct {
	// The name of the Redis Enterprise cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the Redis Enterprise database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListEnterpriseDatabaseKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEnterpriseDatabaseKeysArgs)(nil)).Elem()
}

// The secret access keys used for authenticating connections to redis
type ListEnterpriseDatabaseKeysResultOutput struct{ *pulumi.OutputState }

func (ListEnterpriseDatabaseKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEnterpriseDatabaseKeysResult)(nil)).Elem()
}

func (o ListEnterpriseDatabaseKeysResultOutput) ToListEnterpriseDatabaseKeysResultOutput() ListEnterpriseDatabaseKeysResultOutput {
	return o
}

func (o ListEnterpriseDatabaseKeysResultOutput) ToListEnterpriseDatabaseKeysResultOutputWithContext(ctx context.Context) ListEnterpriseDatabaseKeysResultOutput {
	return o
}

// The current primary key that clients can use to authenticate
func (o ListEnterpriseDatabaseKeysResultOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListEnterpriseDatabaseKeysResult) string { return v.PrimaryKey }).(pulumi.StringOutput)
}

// The current secondary key that clients can use to authenticate
func (o ListEnterpriseDatabaseKeysResultOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListEnterpriseDatabaseKeysResult) string { return v.SecondaryKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEnterpriseDatabaseKeysResultOutput{})
}
