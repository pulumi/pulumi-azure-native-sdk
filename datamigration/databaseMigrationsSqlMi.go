// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datamigration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Database Migration Resource for SQL Managed Instance.
//
// Uses Azure REST API version 2025-06-30.
//
// Other available API versions: 2025-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native datamigration [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type DatabaseMigrationsSqlMi struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Database Migration Resource properties for SQL Managed Instance.
	Properties DatabaseMigrationPropertiesSqlMiResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDatabaseMigrationsSqlMi registers a new resource with the given unique name, arguments, and options.
func NewDatabaseMigrationsSqlMi(ctx *pulumi.Context,
	name string, args *DatabaseMigrationsSqlMiArgs, opts ...pulumi.ResourceOption) (*DatabaseMigrationsSqlMi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceName == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datamigration/v20250630:DatabaseMigrationsSqlMi"),
		},
		{
			Type: pulumi.String("azure-native:datamigration/v20250901preview:DatabaseMigrationsSqlMi"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DatabaseMigrationsSqlMi
	err := ctx.RegisterResource("azure-native:datamigration:DatabaseMigrationsSqlMi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseMigrationsSqlMi gets an existing DatabaseMigrationsSqlMi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseMigrationsSqlMi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseMigrationsSqlMiState, opts ...pulumi.ResourceOption) (*DatabaseMigrationsSqlMi, error) {
	var resource DatabaseMigrationsSqlMi
	err := ctx.ReadResource("azure-native:datamigration:DatabaseMigrationsSqlMi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseMigrationsSqlMi resources.
type databaseMigrationsSqlMiState struct {
}

type DatabaseMigrationsSqlMiState struct {
}

func (DatabaseMigrationsSqlMiState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationsSqlMiState)(nil)).Elem()
}

type databaseMigrationsSqlMiArgs struct {
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// Database Migration Resource properties for SQL Managed Instance.
	Properties *DatabaseMigrationPropertiesSqlMi `pulumi:"properties"`
	// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the target database.
	TargetDbName *string `pulumi:"targetDbName"`
}

// The set of arguments for constructing a DatabaseMigrationsSqlMi resource.
type DatabaseMigrationsSqlMiArgs struct {
	ManagedInstanceName pulumi.StringInput
	// Database Migration Resource properties for SQL Managed Instance.
	Properties DatabaseMigrationPropertiesSqlMiPtrInput
	// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// The name of the target database.
	TargetDbName pulumi.StringPtrInput
}

func (DatabaseMigrationsSqlMiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationsSqlMiArgs)(nil)).Elem()
}

type DatabaseMigrationsSqlMiInput interface {
	pulumi.Input

	ToDatabaseMigrationsSqlMiOutput() DatabaseMigrationsSqlMiOutput
	ToDatabaseMigrationsSqlMiOutputWithContext(ctx context.Context) DatabaseMigrationsSqlMiOutput
}

func (*DatabaseMigrationsSqlMi) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationsSqlMi)(nil)).Elem()
}

func (i *DatabaseMigrationsSqlMi) ToDatabaseMigrationsSqlMiOutput() DatabaseMigrationsSqlMiOutput {
	return i.ToDatabaseMigrationsSqlMiOutputWithContext(context.Background())
}

func (i *DatabaseMigrationsSqlMi) ToDatabaseMigrationsSqlMiOutputWithContext(ctx context.Context) DatabaseMigrationsSqlMiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationsSqlMiOutput)
}

type DatabaseMigrationsSqlMiOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationsSqlMiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationsSqlMi)(nil)).Elem()
}

func (o DatabaseMigrationsSqlMiOutput) ToDatabaseMigrationsSqlMiOutput() DatabaseMigrationsSqlMiOutput {
	return o
}

func (o DatabaseMigrationsSqlMiOutput) ToDatabaseMigrationsSqlMiOutputWithContext(ctx context.Context) DatabaseMigrationsSqlMiOutput {
	return o
}

// The Azure API version of the resource.
func (o DatabaseMigrationsSqlMiOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlMi) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o DatabaseMigrationsSqlMiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlMi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Database Migration Resource properties for SQL Managed Instance.
func (o DatabaseMigrationsSqlMiOutput) Properties() DatabaseMigrationPropertiesSqlMiResponseOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlMi) DatabaseMigrationPropertiesSqlMiResponseOutput { return v.Properties }).(DatabaseMigrationPropertiesSqlMiResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DatabaseMigrationsSqlMiOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlMi) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DatabaseMigrationsSqlMiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlMi) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseMigrationsSqlMiOutput{})
}
