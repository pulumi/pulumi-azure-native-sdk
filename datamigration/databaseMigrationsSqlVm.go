// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datamigration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Database Migration Resource for SQL Virtual Machine.
//
// Uses Azure REST API version 2025-06-30.
//
// Other available API versions: 2025-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native datamigration [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type DatabaseMigrationsSqlVm struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Database Migration Resource properties for SQL Virtual Machine.
	Properties DatabaseMigrationPropertiesSqlVmResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDatabaseMigrationsSqlVm registers a new resource with the given unique name, arguments, and options.
func NewDatabaseMigrationsSqlVm(ctx *pulumi.Context,
	name string, args *DatabaseMigrationsSqlVmArgs, opts ...pulumi.ResourceOption) (*DatabaseMigrationsSqlVm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SqlVirtualMachineName == nil {
		return nil, errors.New("invalid value for required argument 'SqlVirtualMachineName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datamigration/v20250630:DatabaseMigrationsSqlVm"),
		},
		{
			Type: pulumi.String("azure-native:datamigration/v20250901preview:DatabaseMigrationsSqlVm"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DatabaseMigrationsSqlVm
	err := ctx.RegisterResource("azure-native:datamigration:DatabaseMigrationsSqlVm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseMigrationsSqlVm gets an existing DatabaseMigrationsSqlVm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseMigrationsSqlVm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseMigrationsSqlVmState, opts ...pulumi.ResourceOption) (*DatabaseMigrationsSqlVm, error) {
	var resource DatabaseMigrationsSqlVm
	err := ctx.ReadResource("azure-native:datamigration:DatabaseMigrationsSqlVm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseMigrationsSqlVm resources.
type databaseMigrationsSqlVmState struct {
}

type DatabaseMigrationsSqlVmState struct {
}

func (DatabaseMigrationsSqlVmState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationsSqlVmState)(nil)).Elem()
}

type databaseMigrationsSqlVmArgs struct {
	// Database Migration Resource properties for SQL Virtual Machine.
	Properties *DatabaseMigrationPropertiesSqlVm `pulumi:"properties"`
	// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName     string `pulumi:"resourceGroupName"`
	SqlVirtualMachineName string `pulumi:"sqlVirtualMachineName"`
	// The name of the target database.
	TargetDbName *string `pulumi:"targetDbName"`
}

// The set of arguments for constructing a DatabaseMigrationsSqlVm resource.
type DatabaseMigrationsSqlVmArgs struct {
	// Database Migration Resource properties for SQL Virtual Machine.
	Properties DatabaseMigrationPropertiesSqlVmPtrInput
	// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName     pulumi.StringInput
	SqlVirtualMachineName pulumi.StringInput
	// The name of the target database.
	TargetDbName pulumi.StringPtrInput
}

func (DatabaseMigrationsSqlVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationsSqlVmArgs)(nil)).Elem()
}

type DatabaseMigrationsSqlVmInput interface {
	pulumi.Input

	ToDatabaseMigrationsSqlVmOutput() DatabaseMigrationsSqlVmOutput
	ToDatabaseMigrationsSqlVmOutputWithContext(ctx context.Context) DatabaseMigrationsSqlVmOutput
}

func (*DatabaseMigrationsSqlVm) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationsSqlVm)(nil)).Elem()
}

func (i *DatabaseMigrationsSqlVm) ToDatabaseMigrationsSqlVmOutput() DatabaseMigrationsSqlVmOutput {
	return i.ToDatabaseMigrationsSqlVmOutputWithContext(context.Background())
}

func (i *DatabaseMigrationsSqlVm) ToDatabaseMigrationsSqlVmOutputWithContext(ctx context.Context) DatabaseMigrationsSqlVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationsSqlVmOutput)
}

type DatabaseMigrationsSqlVmOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationsSqlVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationsSqlVm)(nil)).Elem()
}

func (o DatabaseMigrationsSqlVmOutput) ToDatabaseMigrationsSqlVmOutput() DatabaseMigrationsSqlVmOutput {
	return o
}

func (o DatabaseMigrationsSqlVmOutput) ToDatabaseMigrationsSqlVmOutputWithContext(ctx context.Context) DatabaseMigrationsSqlVmOutput {
	return o
}

// The Azure API version of the resource.
func (o DatabaseMigrationsSqlVmOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlVm) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o DatabaseMigrationsSqlVmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlVm) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Database Migration Resource properties for SQL Virtual Machine.
func (o DatabaseMigrationsSqlVmOutput) Properties() DatabaseMigrationPropertiesSqlVmResponseOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlVm) DatabaseMigrationPropertiesSqlVmResponseOutput { return v.Properties }).(DatabaseMigrationPropertiesSqlVmResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DatabaseMigrationsSqlVmOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlVm) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DatabaseMigrationsSqlVmOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationsSqlVm) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseMigrationsSqlVmOutput{})
}
