// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220130preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NodeMonitoringDataResponse struct {
	//  Unmatched properties from the message are deserialized in this collection.
	AdditionalProperties map[string]interface{} `pulumi:"additionalProperties"`
	// Available memory (MB) on the integration runtime node.
	AvailableMemoryInMB int `pulumi:"availableMemoryInMB"`
	// Maximum concurrent jobs on the integration runtime node.
	ConcurrentJobsLimit int `pulumi:"concurrentJobsLimit"`
	// The number of jobs currently running on the integration runtime node.
	ConcurrentJobsRunning int `pulumi:"concurrentJobsRunning"`
	// CPU percentage on the integration runtime node.
	CpuUtilization int `pulumi:"cpuUtilization"`
	// The maximum concurrent jobs in this integration runtime.
	MaxConcurrentJobs int `pulumi:"maxConcurrentJobs"`
	// Name of the integration runtime node.
	NodeName string `pulumi:"nodeName"`
	// Received bytes on the integration runtime node.
	ReceivedBytes float64 `pulumi:"receivedBytes"`
	// Sent bytes on the integration runtime node.
	SentBytes float64 `pulumi:"sentBytes"`
}

type NodeMonitoringDataResponseOutput struct{ *pulumi.OutputState }

func (NodeMonitoringDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeMonitoringDataResponse)(nil)).Elem()
}

func (o NodeMonitoringDataResponseOutput) ToNodeMonitoringDataResponseOutput() NodeMonitoringDataResponseOutput {
	return o
}

func (o NodeMonitoringDataResponseOutput) ToNodeMonitoringDataResponseOutputWithContext(ctx context.Context) NodeMonitoringDataResponseOutput {
	return o
}

// Unmatched properties from the message are deserialized in this collection.
func (o NodeMonitoringDataResponseOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) map[string]interface{} { return v.AdditionalProperties }).(pulumi.MapOutput)
}

// Available memory (MB) on the integration runtime node.
func (o NodeMonitoringDataResponseOutput) AvailableMemoryInMB() pulumi.IntOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) int { return v.AvailableMemoryInMB }).(pulumi.IntOutput)
}

// Maximum concurrent jobs on the integration runtime node.
func (o NodeMonitoringDataResponseOutput) ConcurrentJobsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) int { return v.ConcurrentJobsLimit }).(pulumi.IntOutput)
}

// The number of jobs currently running on the integration runtime node.
func (o NodeMonitoringDataResponseOutput) ConcurrentJobsRunning() pulumi.IntOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) int { return v.ConcurrentJobsRunning }).(pulumi.IntOutput)
}

// CPU percentage on the integration runtime node.
func (o NodeMonitoringDataResponseOutput) CpuUtilization() pulumi.IntOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) int { return v.CpuUtilization }).(pulumi.IntOutput)
}

// The maximum concurrent jobs in this integration runtime.
func (o NodeMonitoringDataResponseOutput) MaxConcurrentJobs() pulumi.IntOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) int { return v.MaxConcurrentJobs }).(pulumi.IntOutput)
}

// Name of the integration runtime node.
func (o NodeMonitoringDataResponseOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeMonitoringDataResponse) string { return v.NodeName }).(pulumi.StringOutput)
}

// Received bytes on the integration runtime node.
func (o NodeMonitoringDataResponseOutput) ReceivedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v NodeMonitoringDataResponse) float64 { return v.ReceivedBytes }).(pulumi.Float64Output)
}

// Sent bytes on the integration runtime node.
func (o NodeMonitoringDataResponseOutput) SentBytes() pulumi.Float64Output {
	return o.ApplyT(func(v NodeMonitoringDataResponse) float64 { return v.SentBytes }).(pulumi.Float64Output)
}

type NodeMonitoringDataResponseArrayOutput struct{ *pulumi.OutputState }

func (NodeMonitoringDataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeMonitoringDataResponse)(nil)).Elem()
}

func (o NodeMonitoringDataResponseArrayOutput) ToNodeMonitoringDataResponseArrayOutput() NodeMonitoringDataResponseArrayOutput {
	return o
}

func (o NodeMonitoringDataResponseArrayOutput) ToNodeMonitoringDataResponseArrayOutputWithContext(ctx context.Context) NodeMonitoringDataResponseArrayOutput {
	return o
}

func (o NodeMonitoringDataResponseArrayOutput) Index(i pulumi.IntInput) NodeMonitoringDataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeMonitoringDataResponse {
		return vs[0].([]NodeMonitoringDataResponse)[vs[1].(int)]
	}).(NodeMonitoringDataResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(NodeMonitoringDataResponseOutput{})
	pulumi.RegisterOutputType(NodeMonitoringDataResponseArrayOutput{})
}
