// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Catalog
func LookupCatalog(ctx *pulumi.Context, args *LookupCatalogArgs, opts ...pulumi.InvokeOption) (*LookupCatalogResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCatalogResult
	err := ctx.Invoke("azure-native:azuresphere/v20220901preview:getCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCatalogArgs struct {
	// Name of catalog
	CatalogName string `pulumi:"catalogName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An Azure Sphere catalog
type LookupCatalogResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupCatalogOutput(ctx *pulumi.Context, args LookupCatalogOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCatalogResult, error) {
			args := v.(LookupCatalogArgs)
			r, err := LookupCatalog(ctx, &args, opts...)
			var s LookupCatalogResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCatalogResultOutput)
}

type LookupCatalogOutputArgs struct {
	// Name of catalog
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogArgs)(nil)).Elem()
}

// An Azure Sphere catalog
type LookupCatalogResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogResult)(nil)).Elem()
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutput() LookupCatalogResultOutput {
	return o
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutputWithContext(ctx context.Context) LookupCatalogResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupCatalogResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCatalogResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupCatalogResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCatalogResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCatalogResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupCatalogResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCatalogResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogResultOutput{})
}
