// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211120preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The action of virtual network rule.
type Action string

const (
	ActionAllow = Action("Allow")
)

func (Action) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (e Action) ToActionOutput() ActionOutput {
	return pulumi.ToOutput(e).(ActionOutput)
}

func (e Action) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActionOutput)
}

func (e Action) ToActionPtrOutput() ActionPtrOutput {
	return e.ToActionPtrOutputWithContext(context.Background())
}

func (e Action) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return Action(e).ToActionOutputWithContext(ctx).ToActionPtrOutputWithContext(ctx)
}

func (e Action) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Action) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActionOutput struct{ *pulumi.OutputState }

func (ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (o ActionOutput) ToActionOutput() ActionOutput {
	return o
}

func (o ActionOutput) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return o
}

func (o ActionOutput) ToActionPtrOutput() ActionPtrOutput {
	return o.ToActionPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Action) *Action {
		return &v
	}).(ActionPtrOutput)
}

func (o ActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionPtrOutput struct{ *pulumi.OutputState }

func (ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Action)(nil)).Elem()
}

func (o ActionPtrOutput) ToActionPtrOutput() ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) Elem() ActionOutput {
	return o.ApplyT(func(v *Action) Action {
		if v != nil {
			return *v
		}
		var ret Action
		return ret
	}).(ActionOutput)
}

func (o ActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Action) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActionInput is an input type that accepts values of the Action enum
// A concrete instance of `ActionInput` can be one of the following:
//
//	ActionAllow
type ActionInput interface {
	pulumi.Input

	ToActionOutput() ActionOutput
	ToActionOutputWithContext(context.Context) ActionOutput
}

var actionPtrType = reflect.TypeOf((**Action)(nil)).Elem()

type ActionPtrInput interface {
	pulumi.Input

	ToActionPtrOutput() ActionPtrOutput
	ToActionPtrOutputWithContext(context.Context) ActionPtrOutput
}

type actionPtr string

func ActionPtr(v string) ActionPtrInput {
	return (*actionPtr)(&v)
}

func (*actionPtr) ElementType() reflect.Type {
	return actionPtrType
}

func (in *actionPtr) ToActionPtrOutput() ActionPtrOutput {
	return pulumi.ToOutput(in).(ActionPtrOutput)
}

func (in *actionPtr) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActionPtrOutput)
}

// Type of encryption
type EncryptionType string

const (
	// Volume is encrypted at rest with Platform managed key. It is the default encryption type.
	EncryptionTypeEncryptionAtRestWithPlatformKey = EncryptionType("EncryptionAtRestWithPlatformKey")
)

func (EncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionType)(nil)).Elem()
}

func (e EncryptionType) ToEncryptionTypeOutput() EncryptionTypeOutput {
	return pulumi.ToOutput(e).(EncryptionTypeOutput)
}

func (e EncryptionType) ToEncryptionTypeOutputWithContext(ctx context.Context) EncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionTypeOutput)
}

func (e EncryptionType) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return e.ToEncryptionTypePtrOutputWithContext(context.Background())
}

func (e EncryptionType) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return EncryptionType(e).ToEncryptionTypeOutputWithContext(ctx).ToEncryptionTypePtrOutputWithContext(ctx)
}

func (e EncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionTypeOutput struct{ *pulumi.OutputState }

func (EncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionType)(nil)).Elem()
}

func (o EncryptionTypeOutput) ToEncryptionTypeOutput() EncryptionTypeOutput {
	return o
}

func (o EncryptionTypeOutput) ToEncryptionTypeOutputWithContext(ctx context.Context) EncryptionTypeOutput {
	return o
}

func (o EncryptionTypeOutput) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return o.ToEncryptionTypePtrOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionType) *EncryptionType {
		return &v
	}).(EncryptionTypePtrOutput)
}

func (o EncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionType)(nil)).Elem()
}

func (o EncryptionTypePtrOutput) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return o
}

func (o EncryptionTypePtrOutput) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return o
}

func (o EncryptionTypePtrOutput) Elem() EncryptionTypeOutput {
	return o.ApplyT(func(v *EncryptionType) EncryptionType {
		if v != nil {
			return *v
		}
		var ret EncryptionType
		return ret
	}).(EncryptionTypeOutput)
}

func (o EncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionTypeInput is an input type that accepts values of the EncryptionType enum
// A concrete instance of `EncryptionTypeInput` can be one of the following:
//
//	EncryptionTypeEncryptionAtRestWithPlatformKey
type EncryptionTypeInput interface {
	pulumi.Input

	ToEncryptionTypeOutput() EncryptionTypeOutput
	ToEncryptionTypeOutputWithContext(context.Context) EncryptionTypeOutput
}

var encryptionTypePtrType = reflect.TypeOf((**EncryptionType)(nil)).Elem()

type EncryptionTypePtrInput interface {
	pulumi.Input

	ToEncryptionTypePtrOutput() EncryptionTypePtrOutput
	ToEncryptionTypePtrOutputWithContext(context.Context) EncryptionTypePtrOutput
}

type encryptionTypePtr string

func EncryptionTypePtr(v string) EncryptionTypePtrInput {
	return (*encryptionTypePtr)(&v)
}

func (*encryptionTypePtr) ElementType() reflect.Type {
	return encryptionTypePtrType
}

func (in *encryptionTypePtr) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionTypePtrOutput)
}

func (in *encryptionTypePtr) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionTypePtrOutput)
}

// The sku name.
type SkuName string

const (
	// Premium locally redundant storage
	SkuName_Premium_LRS = SkuName("Premium_LRS")
	// Premium zone redundant storage
	SkuName_Premium_ZRS = SkuName("Premium_ZRS")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuName_Premium_LRS
//	SkuName_Premium_ZRS
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

// The sku tier.
type SkuTier string

const (
	// Premium Tier
	SkuTierPremium = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

// Type of storage target
type StorageTargetType string

const (
	StorageTargetTypeIscsi = StorageTargetType("Iscsi")
	StorageTargetTypeNone  = StorageTargetType("None")
)

func (StorageTargetType) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetType)(nil)).Elem()
}

func (e StorageTargetType) ToStorageTargetTypeOutput() StorageTargetTypeOutput {
	return pulumi.ToOutput(e).(StorageTargetTypeOutput)
}

func (e StorageTargetType) ToStorageTargetTypeOutputWithContext(ctx context.Context) StorageTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageTargetTypeOutput)
}

func (e StorageTargetType) ToStorageTargetTypePtrOutput() StorageTargetTypePtrOutput {
	return e.ToStorageTargetTypePtrOutputWithContext(context.Background())
}

func (e StorageTargetType) ToStorageTargetTypePtrOutputWithContext(ctx context.Context) StorageTargetTypePtrOutput {
	return StorageTargetType(e).ToStorageTargetTypeOutputWithContext(ctx).ToStorageTargetTypePtrOutputWithContext(ctx)
}

func (e StorageTargetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageTargetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageTargetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageTargetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageTargetTypeOutput struct{ *pulumi.OutputState }

func (StorageTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetType)(nil)).Elem()
}

func (o StorageTargetTypeOutput) ToStorageTargetTypeOutput() StorageTargetTypeOutput {
	return o
}

func (o StorageTargetTypeOutput) ToStorageTargetTypeOutputWithContext(ctx context.Context) StorageTargetTypeOutput {
	return o
}

func (o StorageTargetTypeOutput) ToStorageTargetTypePtrOutput() StorageTargetTypePtrOutput {
	return o.ToStorageTargetTypePtrOutputWithContext(context.Background())
}

func (o StorageTargetTypeOutput) ToStorageTargetTypePtrOutputWithContext(ctx context.Context) StorageTargetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageTargetType) *StorageTargetType {
		return &v
	}).(StorageTargetTypePtrOutput)
}

func (o StorageTargetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageTargetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageTargetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageTargetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageTargetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageTargetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageTargetTypePtrOutput struct{ *pulumi.OutputState }

func (StorageTargetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTargetType)(nil)).Elem()
}

func (o StorageTargetTypePtrOutput) ToStorageTargetTypePtrOutput() StorageTargetTypePtrOutput {
	return o
}

func (o StorageTargetTypePtrOutput) ToStorageTargetTypePtrOutputWithContext(ctx context.Context) StorageTargetTypePtrOutput {
	return o
}

func (o StorageTargetTypePtrOutput) Elem() StorageTargetTypeOutput {
	return o.ApplyT(func(v *StorageTargetType) StorageTargetType {
		if v != nil {
			return *v
		}
		var ret StorageTargetType
		return ret
	}).(StorageTargetTypeOutput)
}

func (o StorageTargetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageTargetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageTargetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageTargetTypeInput is an input type that accepts values of the StorageTargetType enum
// A concrete instance of `StorageTargetTypeInput` can be one of the following:
//
//	StorageTargetTypeIscsi
//	StorageTargetTypeNone
type StorageTargetTypeInput interface {
	pulumi.Input

	ToStorageTargetTypeOutput() StorageTargetTypeOutput
	ToStorageTargetTypeOutputWithContext(context.Context) StorageTargetTypeOutput
}

var storageTargetTypePtrType = reflect.TypeOf((**StorageTargetType)(nil)).Elem()

type StorageTargetTypePtrInput interface {
	pulumi.Input

	ToStorageTargetTypePtrOutput() StorageTargetTypePtrOutput
	ToStorageTargetTypePtrOutputWithContext(context.Context) StorageTargetTypePtrOutput
}

type storageTargetTypePtr string

func StorageTargetTypePtr(v string) StorageTargetTypePtrInput {
	return (*storageTargetTypePtr)(&v)
}

func (*storageTargetTypePtr) ElementType() reflect.Type {
	return storageTargetTypePtrType
}

func (in *storageTargetTypePtr) ToStorageTargetTypePtrOutput() StorageTargetTypePtrOutput {
	return pulumi.ToOutput(in).(StorageTargetTypePtrOutput)
}

func (in *storageTargetTypePtr) ToStorageTargetTypePtrOutputWithContext(ctx context.Context) StorageTargetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageTargetTypePtrOutput)
}

// This enumerates the possible sources of a volume creation.
type VolumeCreateOption string

const (
	VolumeCreateOptionNone = VolumeCreateOption("None")
)

func (VolumeCreateOption) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeCreateOption)(nil)).Elem()
}

func (e VolumeCreateOption) ToVolumeCreateOptionOutput() VolumeCreateOptionOutput {
	return pulumi.ToOutput(e).(VolumeCreateOptionOutput)
}

func (e VolumeCreateOption) ToVolumeCreateOptionOutputWithContext(ctx context.Context) VolumeCreateOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeCreateOptionOutput)
}

func (e VolumeCreateOption) ToVolumeCreateOptionPtrOutput() VolumeCreateOptionPtrOutput {
	return e.ToVolumeCreateOptionPtrOutputWithContext(context.Background())
}

func (e VolumeCreateOption) ToVolumeCreateOptionPtrOutputWithContext(ctx context.Context) VolumeCreateOptionPtrOutput {
	return VolumeCreateOption(e).ToVolumeCreateOptionOutputWithContext(ctx).ToVolumeCreateOptionPtrOutputWithContext(ctx)
}

func (e VolumeCreateOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeCreateOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeCreateOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeCreateOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeCreateOptionOutput struct{ *pulumi.OutputState }

func (VolumeCreateOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeCreateOption)(nil)).Elem()
}

func (o VolumeCreateOptionOutput) ToVolumeCreateOptionOutput() VolumeCreateOptionOutput {
	return o
}

func (o VolumeCreateOptionOutput) ToVolumeCreateOptionOutputWithContext(ctx context.Context) VolumeCreateOptionOutput {
	return o
}

func (o VolumeCreateOptionOutput) ToVolumeCreateOptionPtrOutput() VolumeCreateOptionPtrOutput {
	return o.ToVolumeCreateOptionPtrOutputWithContext(context.Background())
}

func (o VolumeCreateOptionOutput) ToVolumeCreateOptionPtrOutputWithContext(ctx context.Context) VolumeCreateOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeCreateOption) *VolumeCreateOption {
		return &v
	}).(VolumeCreateOptionPtrOutput)
}

func (o VolumeCreateOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeCreateOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeCreateOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeCreateOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeCreateOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeCreateOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeCreateOptionPtrOutput struct{ *pulumi.OutputState }

func (VolumeCreateOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeCreateOption)(nil)).Elem()
}

func (o VolumeCreateOptionPtrOutput) ToVolumeCreateOptionPtrOutput() VolumeCreateOptionPtrOutput {
	return o
}

func (o VolumeCreateOptionPtrOutput) ToVolumeCreateOptionPtrOutputWithContext(ctx context.Context) VolumeCreateOptionPtrOutput {
	return o
}

func (o VolumeCreateOptionPtrOutput) Elem() VolumeCreateOptionOutput {
	return o.ApplyT(func(v *VolumeCreateOption) VolumeCreateOption {
		if v != nil {
			return *v
		}
		var ret VolumeCreateOption
		return ret
	}).(VolumeCreateOptionOutput)
}

func (o VolumeCreateOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeCreateOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeCreateOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeCreateOptionInput is an input type that accepts values of the VolumeCreateOption enum
// A concrete instance of `VolumeCreateOptionInput` can be one of the following:
//
//	VolumeCreateOptionNone
type VolumeCreateOptionInput interface {
	pulumi.Input

	ToVolumeCreateOptionOutput() VolumeCreateOptionOutput
	ToVolumeCreateOptionOutputWithContext(context.Context) VolumeCreateOptionOutput
}

var volumeCreateOptionPtrType = reflect.TypeOf((**VolumeCreateOption)(nil)).Elem()

type VolumeCreateOptionPtrInput interface {
	pulumi.Input

	ToVolumeCreateOptionPtrOutput() VolumeCreateOptionPtrOutput
	ToVolumeCreateOptionPtrOutputWithContext(context.Context) VolumeCreateOptionPtrOutput
}

type volumeCreateOptionPtr string

func VolumeCreateOptionPtr(v string) VolumeCreateOptionPtrInput {
	return (*volumeCreateOptionPtr)(&v)
}

func (*volumeCreateOptionPtr) ElementType() reflect.Type {
	return volumeCreateOptionPtrType
}

func (in *volumeCreateOptionPtr) ToVolumeCreateOptionPtrOutput() VolumeCreateOptionPtrOutput {
	return pulumi.ToOutput(in).(VolumeCreateOptionPtrOutput)
}

func (in *volumeCreateOptionPtr) ToVolumeCreateOptionPtrOutputWithContext(ctx context.Context) VolumeCreateOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeCreateOptionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionOutput{})
	pulumi.RegisterOutputType(ActionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionTypeOutput{})
	pulumi.RegisterOutputType(EncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(StorageTargetTypeOutput{})
	pulumi.RegisterOutputType(StorageTargetTypePtrOutput{})
	pulumi.RegisterOutputType(VolumeCreateOptionOutput{})
	pulumi.RegisterOutputType(VolumeCreateOptionPtrOutput{})
}
