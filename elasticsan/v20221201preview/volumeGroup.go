// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221201preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Response for Volume Group request.
type VolumeGroup struct {
	pulumi.CustomResourceState

	// Type of encryption
	Encryption pulumi.StringPtrOutput `pulumi:"encryption"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// A collection of rules governing the accessibility from specific network locations.
	NetworkAcls NetworkRuleSetResponsePtrOutput `pulumi:"networkAcls"`
	// The list of Private Endpoint Connections.
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayOutput `pulumi:"privateEndpointConnections"`
	// Type of storage target
	ProtocolType pulumi.StringPtrOutput `pulumi:"protocolType"`
	// State of the operation on the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVolumeGroup registers a new resource with the given unique name, arguments, and options.
func NewVolumeGroup(ctx *pulumi.Context,
	name string, args *VolumeGroupArgs, opts ...pulumi.ResourceOption) (*VolumeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ElasticSanName == nil {
		return nil, errors.New("invalid value for required argument 'ElasticSanName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:elasticsan:VolumeGroup"),
		},
		{
			Type: pulumi.String("azure-native:elasticsan/v20211120preview:VolumeGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VolumeGroup
	err := ctx.RegisterResource("azure-native:elasticsan/v20221201preview:VolumeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVolumeGroup gets an existing VolumeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVolumeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VolumeGroupState, opts ...pulumi.ResourceOption) (*VolumeGroup, error) {
	var resource VolumeGroup
	err := ctx.ReadResource("azure-native:elasticsan/v20221201preview:VolumeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VolumeGroup resources.
type volumeGroupState struct {
}

type VolumeGroupState struct {
}

func (VolumeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeGroupState)(nil)).Elem()
}

type volumeGroupArgs struct {
	// The name of the ElasticSan.
	ElasticSanName string `pulumi:"elasticSanName"`
	// Type of encryption
	Encryption *string `pulumi:"encryption"`
	// A collection of rules governing the accessibility from specific network locations.
	NetworkAcls *NetworkRuleSet `pulumi:"networkAcls"`
	// Type of storage target
	ProtocolType *string `pulumi:"protocolType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the VolumeGroup.
	VolumeGroupName *string `pulumi:"volumeGroupName"`
}

// The set of arguments for constructing a VolumeGroup resource.
type VolumeGroupArgs struct {
	// The name of the ElasticSan.
	ElasticSanName pulumi.StringInput
	// Type of encryption
	Encryption pulumi.StringPtrInput
	// A collection of rules governing the accessibility from specific network locations.
	NetworkAcls NetworkRuleSetPtrInput
	// Type of storage target
	ProtocolType pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the VolumeGroup.
	VolumeGroupName pulumi.StringPtrInput
}

func (VolumeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeGroupArgs)(nil)).Elem()
}

type VolumeGroupInput interface {
	pulumi.Input

	ToVolumeGroupOutput() VolumeGroupOutput
	ToVolumeGroupOutputWithContext(ctx context.Context) VolumeGroupOutput
}

func (*VolumeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeGroup)(nil)).Elem()
}

func (i *VolumeGroup) ToVolumeGroupOutput() VolumeGroupOutput {
	return i.ToVolumeGroupOutputWithContext(context.Background())
}

func (i *VolumeGroup) ToVolumeGroupOutputWithContext(ctx context.Context) VolumeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupOutput)
}

type VolumeGroupOutput struct{ *pulumi.OutputState }

func (VolumeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeGroup)(nil)).Elem()
}

func (o VolumeGroupOutput) ToVolumeGroupOutput() VolumeGroupOutput {
	return o
}

func (o VolumeGroupOutput) ToVolumeGroupOutputWithContext(ctx context.Context) VolumeGroupOutput {
	return o
}

// Type of encryption
func (o VolumeGroupOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringPtrOutput { return v.Encryption }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o VolumeGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A collection of rules governing the accessibility from specific network locations.
func (o VolumeGroupOutput) NetworkAcls() NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v *VolumeGroup) NetworkRuleSetResponsePtrOutput { return v.NetworkAcls }).(NetworkRuleSetResponsePtrOutput)
}

// The list of Private Endpoint Connections.
func (o VolumeGroupOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *VolumeGroup) PrivateEndpointConnectionResponseArrayOutput { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionResponseArrayOutput)
}

// Type of storage target
func (o VolumeGroupOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringPtrOutput { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

// State of the operation on the resource.
func (o VolumeGroupOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o VolumeGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VolumeGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VolumeGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VolumeGroupOutput{})
}
