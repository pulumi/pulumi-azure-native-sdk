// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a DiscoveredAssetEndpointProfile
// Azure REST API version: 2024-09-01-preview.
func LookupDiscoveredAssetEndpointProfile(ctx *pulumi.Context, args *LookupDiscoveredAssetEndpointProfileArgs, opts ...pulumi.InvokeOption) (*LookupDiscoveredAssetEndpointProfileResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDiscoveredAssetEndpointProfileResult
	err := ctx.Invoke("azure-native:deviceregistry:getDiscoveredAssetEndpointProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDiscoveredAssetEndpointProfileArgs struct {
	// Discovered Asset Endpoint Profile name parameter.
	DiscoveredAssetEndpointProfileName string `pulumi:"discoveredAssetEndpointProfileName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Discovered Asset Endpoint Profile definition.
type LookupDiscoveredAssetEndpointProfileResult struct {
	// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
	AdditionalConfiguration *string `pulumi:"additionalConfiguration"`
	// Identifier used to detect changes in the asset endpoint profile.
	DiscoveryId string `pulumi:"discoveryId"`
	// Defines the configuration for the connector type that is being used with the endpoint profile.
	EndpointProfileType string `pulumi:"endpointProfileType"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of supported authentication methods supported by the target server.
	SupportedAuthenticationMethods []string `pulumi:"supportedAuthenticationMethods"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
	TargetAddress string `pulumi:"targetAddress"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// An integer that is incremented each time the resource is modified.
	Version float64 `pulumi:"version"`
}

func LookupDiscoveredAssetEndpointProfileOutput(ctx *pulumi.Context, args LookupDiscoveredAssetEndpointProfileOutputArgs, opts ...pulumi.InvokeOption) LookupDiscoveredAssetEndpointProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDiscoveredAssetEndpointProfileResultOutput, error) {
			args := v.(LookupDiscoveredAssetEndpointProfileArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupDiscoveredAssetEndpointProfileResult
			secret, err := ctx.InvokePackageRaw("azure-native:deviceregistry:getDiscoveredAssetEndpointProfile", args, &rv, "", opts...)
			if err != nil {
				return LookupDiscoveredAssetEndpointProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDiscoveredAssetEndpointProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDiscoveredAssetEndpointProfileResultOutput), nil
			}
			return output, nil
		}).(LookupDiscoveredAssetEndpointProfileResultOutput)
}

type LookupDiscoveredAssetEndpointProfileOutputArgs struct {
	// Discovered Asset Endpoint Profile name parameter.
	DiscoveredAssetEndpointProfileName pulumi.StringInput `pulumi:"discoveredAssetEndpointProfileName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDiscoveredAssetEndpointProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveredAssetEndpointProfileArgs)(nil)).Elem()
}

// Discovered Asset Endpoint Profile definition.
type LookupDiscoveredAssetEndpointProfileResultOutput struct{ *pulumi.OutputState }

func (LookupDiscoveredAssetEndpointProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveredAssetEndpointProfileResult)(nil)).Elem()
}

func (o LookupDiscoveredAssetEndpointProfileResultOutput) ToLookupDiscoveredAssetEndpointProfileResultOutput() LookupDiscoveredAssetEndpointProfileResultOutput {
	return o
}

func (o LookupDiscoveredAssetEndpointProfileResultOutput) ToLookupDiscoveredAssetEndpointProfileResultOutputWithContext(ctx context.Context) LookupDiscoveredAssetEndpointProfileResultOutput {
	return o
}

// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
func (o LookupDiscoveredAssetEndpointProfileResultOutput) AdditionalConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) *string { return v.AdditionalConfiguration }).(pulumi.StringPtrOutput)
}

// Identifier used to detect changes in the asset endpoint profile.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) DiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.DiscoveryId }).(pulumi.StringOutput)
}

// Defines the configuration for the connector type that is being used with the endpoint profile.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) EndpointProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.EndpointProfileType }).(pulumi.StringOutput)
}

// The extended location.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupDiscoveredAssetEndpointProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupDiscoveredAssetEndpointProfileResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupDiscoveredAssetEndpointProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of supported authentication methods supported by the target server.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) SupportedAuthenticationMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) []string { return v.SupportedAuthenticationMethods }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) TargetAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.TargetAddress }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDiscoveredAssetEndpointProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

// An integer that is incremented each time the resource is modified.
func (o LookupDiscoveredAssetEndpointProfileResultOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDiscoveredAssetEndpointProfileResult) float64 { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(LookupDiscoveredAssetEndpointProfileResultOutput{})
}
