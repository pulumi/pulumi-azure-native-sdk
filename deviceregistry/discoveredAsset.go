// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Discovered Asset definition.
// Azure REST API version: 2024-09-01-preview.
type DiscoveredAsset struct {
	pulumi.CustomResourceState

	// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
	AssetEndpointProfileRef pulumi.StringOutput `pulumi:"assetEndpointProfileRef"`
	// Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
	Datasets DiscoveredDatasetResponseArrayOutput `pulumi:"datasets"`
	// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
	DefaultDatasetsConfiguration pulumi.StringPtrOutput `pulumi:"defaultDatasetsConfiguration"`
	// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
	DefaultEventsConfiguration pulumi.StringPtrOutput `pulumi:"defaultEventsConfiguration"`
	// Object that describes the default topic information for the asset.
	DefaultTopic TopicResponsePtrOutput `pulumi:"defaultTopic"`
	// Identifier used to detect changes in the asset.
	DiscoveryId pulumi.StringOutput `pulumi:"discoveryId"`
	// Reference to the documentation.
	DocumentationUri pulumi.StringPtrOutput `pulumi:"documentationUri"`
	// Array of events that are part of the asset. Each event can have per-event configuration.
	Events DiscoveredEventResponseArrayOutput `pulumi:"events"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// Revision number of the hardware.
	HardwareRevision pulumi.StringPtrOutput `pulumi:"hardwareRevision"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Asset manufacturer name.
	Manufacturer pulumi.StringPtrOutput `pulumi:"manufacturer"`
	// Asset manufacturer URI.
	ManufacturerUri pulumi.StringPtrOutput `pulumi:"manufacturerUri"`
	// Asset model name.
	Model pulumi.StringPtrOutput `pulumi:"model"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Asset product code.
	ProductCode pulumi.StringPtrOutput `pulumi:"productCode"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Asset serial number.
	SerialNumber pulumi.StringPtrOutput `pulumi:"serialNumber"`
	// Revision number of the software.
	SoftwareRevision pulumi.StringPtrOutput `pulumi:"softwareRevision"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// An integer that is incremented each time the resource is modified.
	Version pulumi.Float64Output `pulumi:"version"`
}

// NewDiscoveredAsset registers a new resource with the given unique name, arguments, and options.
func NewDiscoveredAsset(ctx *pulumi.Context,
	name string, args *DiscoveredAssetArgs, opts ...pulumi.ResourceOption) (*DiscoveredAsset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssetEndpointProfileRef == nil {
		return nil, errors.New("invalid value for required argument 'AssetEndpointProfileRef'")
	}
	if args.DiscoveryId == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveryId'")
	}
	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	if args.DefaultTopic != nil {
		args.DefaultTopic = args.DefaultTopic.ToTopicPtrOutput().ApplyT(func(v *Topic) *Topic { return v.Defaults() }).(TopicPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:deviceregistry/v20240901preview:DiscoveredAsset"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DiscoveredAsset
	err := ctx.RegisterResource("azure-native:deviceregistry:DiscoveredAsset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoveredAsset gets an existing DiscoveredAsset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoveredAsset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoveredAssetState, opts ...pulumi.ResourceOption) (*DiscoveredAsset, error) {
	var resource DiscoveredAsset
	err := ctx.ReadResource("azure-native:deviceregistry:DiscoveredAsset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoveredAsset resources.
type discoveredAssetState struct {
}

type DiscoveredAssetState struct {
}

func (DiscoveredAssetState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveredAssetState)(nil)).Elem()
}

type discoveredAssetArgs struct {
	// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
	AssetEndpointProfileRef string `pulumi:"assetEndpointProfileRef"`
	// Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
	Datasets []DiscoveredDataset `pulumi:"datasets"`
	// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
	DefaultDatasetsConfiguration *string `pulumi:"defaultDatasetsConfiguration"`
	// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
	DefaultEventsConfiguration *string `pulumi:"defaultEventsConfiguration"`
	// Object that describes the default topic information for the asset.
	DefaultTopic *Topic `pulumi:"defaultTopic"`
	// Discovered Asset name parameter.
	DiscoveredAssetName *string `pulumi:"discoveredAssetName"`
	// Identifier used to detect changes in the asset.
	DiscoveryId string `pulumi:"discoveryId"`
	// Reference to the documentation.
	DocumentationUri *string `pulumi:"documentationUri"`
	// Array of events that are part of the asset. Each event can have per-event configuration.
	Events []DiscoveredEvent `pulumi:"events"`
	// The extended location.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// Revision number of the hardware.
	HardwareRevision *string `pulumi:"hardwareRevision"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Asset manufacturer name.
	Manufacturer *string `pulumi:"manufacturer"`
	// Asset manufacturer URI.
	ManufacturerUri *string `pulumi:"manufacturerUri"`
	// Asset model name.
	Model *string `pulumi:"model"`
	// Asset product code.
	ProductCode *string `pulumi:"productCode"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Asset serial number.
	SerialNumber *string `pulumi:"serialNumber"`
	// Revision number of the software.
	SoftwareRevision *string `pulumi:"softwareRevision"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// An integer that is incremented each time the resource is modified.
	Version float64 `pulumi:"version"`
}

// The set of arguments for constructing a DiscoveredAsset resource.
type DiscoveredAssetArgs struct {
	// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
	AssetEndpointProfileRef pulumi.StringInput
	// Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
	Datasets DiscoveredDatasetArrayInput
	// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
	DefaultDatasetsConfiguration pulumi.StringPtrInput
	// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
	DefaultEventsConfiguration pulumi.StringPtrInput
	// Object that describes the default topic information for the asset.
	DefaultTopic TopicPtrInput
	// Discovered Asset name parameter.
	DiscoveredAssetName pulumi.StringPtrInput
	// Identifier used to detect changes in the asset.
	DiscoveryId pulumi.StringInput
	// Reference to the documentation.
	DocumentationUri pulumi.StringPtrInput
	// Array of events that are part of the asset. Each event can have per-event configuration.
	Events DiscoveredEventArrayInput
	// The extended location.
	ExtendedLocation ExtendedLocationInput
	// Revision number of the hardware.
	HardwareRevision pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Asset manufacturer name.
	Manufacturer pulumi.StringPtrInput
	// Asset manufacturer URI.
	ManufacturerUri pulumi.StringPtrInput
	// Asset model name.
	Model pulumi.StringPtrInput
	// Asset product code.
	ProductCode pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Asset serial number.
	SerialNumber pulumi.StringPtrInput
	// Revision number of the software.
	SoftwareRevision pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// An integer that is incremented each time the resource is modified.
	Version pulumi.Float64Input
}

func (DiscoveredAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveredAssetArgs)(nil)).Elem()
}

type DiscoveredAssetInput interface {
	pulumi.Input

	ToDiscoveredAssetOutput() DiscoveredAssetOutput
	ToDiscoveredAssetOutputWithContext(ctx context.Context) DiscoveredAssetOutput
}

func (*DiscoveredAsset) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveredAsset)(nil)).Elem()
}

func (i *DiscoveredAsset) ToDiscoveredAssetOutput() DiscoveredAssetOutput {
	return i.ToDiscoveredAssetOutputWithContext(context.Background())
}

func (i *DiscoveredAsset) ToDiscoveredAssetOutputWithContext(ctx context.Context) DiscoveredAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveredAssetOutput)
}

type DiscoveredAssetOutput struct{ *pulumi.OutputState }

func (DiscoveredAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveredAsset)(nil)).Elem()
}

func (o DiscoveredAssetOutput) ToDiscoveredAssetOutput() DiscoveredAssetOutput {
	return o
}

func (o DiscoveredAssetOutput) ToDiscoveredAssetOutputWithContext(ctx context.Context) DiscoveredAssetOutput {
	return o
}

// A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.
func (o DiscoveredAssetOutput) AssetEndpointProfileRef() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringOutput { return v.AssetEndpointProfileRef }).(pulumi.StringOutput)
}

// Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.
func (o DiscoveredAssetOutput) Datasets() DiscoveredDatasetResponseArrayOutput {
	return o.ApplyT(func(v *DiscoveredAsset) DiscoveredDatasetResponseArrayOutput { return v.Datasets }).(DiscoveredDatasetResponseArrayOutput)
}

// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
func (o DiscoveredAssetOutput) DefaultDatasetsConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.DefaultDatasetsConfiguration }).(pulumi.StringPtrOutput)
}

// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
func (o DiscoveredAssetOutput) DefaultEventsConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.DefaultEventsConfiguration }).(pulumi.StringPtrOutput)
}

// Object that describes the default topic information for the asset.
func (o DiscoveredAssetOutput) DefaultTopic() TopicResponsePtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) TopicResponsePtrOutput { return v.DefaultTopic }).(TopicResponsePtrOutput)
}

// Identifier used to detect changes in the asset.
func (o DiscoveredAssetOutput) DiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringOutput { return v.DiscoveryId }).(pulumi.StringOutput)
}

// Reference to the documentation.
func (o DiscoveredAssetOutput) DocumentationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.DocumentationUri }).(pulumi.StringPtrOutput)
}

// Array of events that are part of the asset. Each event can have per-event configuration.
func (o DiscoveredAssetOutput) Events() DiscoveredEventResponseArrayOutput {
	return o.ApplyT(func(v *DiscoveredAsset) DiscoveredEventResponseArrayOutput { return v.Events }).(DiscoveredEventResponseArrayOutput)
}

// The extended location.
func (o DiscoveredAssetOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *DiscoveredAsset) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Revision number of the hardware.
func (o DiscoveredAssetOutput) HardwareRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.HardwareRevision }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o DiscoveredAssetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Asset manufacturer name.
func (o DiscoveredAssetOutput) Manufacturer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.Manufacturer }).(pulumi.StringPtrOutput)
}

// Asset manufacturer URI.
func (o DiscoveredAssetOutput) ManufacturerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.ManufacturerUri }).(pulumi.StringPtrOutput)
}

// Asset model name.
func (o DiscoveredAssetOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.Model }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o DiscoveredAssetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Asset product code.
func (o DiscoveredAssetOutput) ProductCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.ProductCode }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource.
func (o DiscoveredAssetOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Asset serial number.
func (o DiscoveredAssetOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Revision number of the software.
func (o DiscoveredAssetOutput) SoftwareRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringPtrOutput { return v.SoftwareRevision }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DiscoveredAssetOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DiscoveredAsset) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DiscoveredAssetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DiscoveredAssetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// An integer that is incremented each time the resource is modified.
func (o DiscoveredAssetOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v *DiscoveredAsset) pulumi.Float64Output { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(DiscoveredAssetOutput{})
}
