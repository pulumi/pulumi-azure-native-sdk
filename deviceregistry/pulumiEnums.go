// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The method to authenticate the user of the client at the server.
type AuthenticationMethod string

const (
	// The user authentication method is anonymous.
	AuthenticationMethodAnonymous = AuthenticationMethod("Anonymous")
	// The user authentication method is an x509 certificate.
	AuthenticationMethodCertificate = AuthenticationMethod("Certificate")
	// The user authentication method is a username and password.
	AuthenticationMethodUsernamePassword = AuthenticationMethod("UsernamePassword")
)

func (AuthenticationMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethod)(nil)).Elem()
}

func (e AuthenticationMethod) ToAuthenticationMethodOutput() AuthenticationMethodOutput {
	return pulumi.ToOutput(e).(AuthenticationMethodOutput)
}

func (e AuthenticationMethod) ToAuthenticationMethodOutputWithContext(ctx context.Context) AuthenticationMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthenticationMethodOutput)
}

func (e AuthenticationMethod) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return e.ToAuthenticationMethodPtrOutputWithContext(context.Background())
}

func (e AuthenticationMethod) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return AuthenticationMethod(e).ToAuthenticationMethodOutputWithContext(ctx).ToAuthenticationMethodPtrOutputWithContext(ctx)
}

func (e AuthenticationMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthenticationMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthenticationMethodOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethod)(nil)).Elem()
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodOutput() AuthenticationMethodOutput {
	return o
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodOutputWithContext(ctx context.Context) AuthenticationMethodOutput {
	return o
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return o.ToAuthenticationMethodPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationMethod) *AuthenticationMethod {
		return &v
	}).(AuthenticationMethodPtrOutput)
}

func (o AuthenticationMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthenticationMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthenticationMethodPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationMethod)(nil)).Elem()
}

func (o AuthenticationMethodPtrOutput) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return o
}

func (o AuthenticationMethodPtrOutput) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return o
}

func (o AuthenticationMethodPtrOutput) Elem() AuthenticationMethodOutput {
	return o.ApplyT(func(v *AuthenticationMethod) AuthenticationMethod {
		if v != nil {
			return *v
		}
		var ret AuthenticationMethod
		return ret
	}).(AuthenticationMethodOutput)
}

func (o AuthenticationMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthenticationMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthenticationMethodInput is an input type that accepts values of the AuthenticationMethod enum
// A concrete instance of `AuthenticationMethodInput` can be one of the following:
//
//	AuthenticationMethodAnonymous
//	AuthenticationMethodCertificate
//	AuthenticationMethodUsernamePassword
type AuthenticationMethodInput interface {
	pulumi.Input

	ToAuthenticationMethodOutput() AuthenticationMethodOutput
	ToAuthenticationMethodOutputWithContext(context.Context) AuthenticationMethodOutput
}

var authenticationMethodPtrType = reflect.TypeOf((**AuthenticationMethod)(nil)).Elem()

type AuthenticationMethodPtrInput interface {
	pulumi.Input

	ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput
	ToAuthenticationMethodPtrOutputWithContext(context.Context) AuthenticationMethodPtrOutput
}

type authenticationMethodPtr string

func AuthenticationMethodPtr(v string) AuthenticationMethodPtrInput {
	return (*authenticationMethodPtr)(&v)
}

func (*authenticationMethodPtr) ElementType() reflect.Type {
	return authenticationMethodPtrType
}

func (in *authenticationMethodPtr) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return pulumi.ToOutput(in).(AuthenticationMethodPtrOutput)
}

func (in *authenticationMethodPtr) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthenticationMethodPtrOutput)
}

// An indication of how the data point should be mapped to OpenTelemetry.
type DataPointObservabilityMode string

const (
	// No mapping to OpenTelemetry.
	DataPointObservabilityModeNone = DataPointObservabilityMode("None")
	// Map as counter to OpenTelemetry.
	DataPointObservabilityModeCounter = DataPointObservabilityMode("Counter")
	// Map as gauge to OpenTelemetry.
	DataPointObservabilityModeGauge = DataPointObservabilityMode("Gauge")
	// Map as histogram to OpenTelemetry.
	DataPointObservabilityModeHistogram = DataPointObservabilityMode("Histogram")
	// Map as log to OpenTelemetry.
	DataPointObservabilityModeLog = DataPointObservabilityMode("Log")
)

func (DataPointObservabilityMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPointObservabilityMode)(nil)).Elem()
}

func (e DataPointObservabilityMode) ToDataPointObservabilityModeOutput() DataPointObservabilityModeOutput {
	return pulumi.ToOutput(e).(DataPointObservabilityModeOutput)
}

func (e DataPointObservabilityMode) ToDataPointObservabilityModeOutputWithContext(ctx context.Context) DataPointObservabilityModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataPointObservabilityModeOutput)
}

func (e DataPointObservabilityMode) ToDataPointObservabilityModePtrOutput() DataPointObservabilityModePtrOutput {
	return e.ToDataPointObservabilityModePtrOutputWithContext(context.Background())
}

func (e DataPointObservabilityMode) ToDataPointObservabilityModePtrOutputWithContext(ctx context.Context) DataPointObservabilityModePtrOutput {
	return DataPointObservabilityMode(e).ToDataPointObservabilityModeOutputWithContext(ctx).ToDataPointObservabilityModePtrOutputWithContext(ctx)
}

func (e DataPointObservabilityMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataPointObservabilityMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataPointObservabilityMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataPointObservabilityMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataPointObservabilityModeOutput struct{ *pulumi.OutputState }

func (DataPointObservabilityModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPointObservabilityMode)(nil)).Elem()
}

func (o DataPointObservabilityModeOutput) ToDataPointObservabilityModeOutput() DataPointObservabilityModeOutput {
	return o
}

func (o DataPointObservabilityModeOutput) ToDataPointObservabilityModeOutputWithContext(ctx context.Context) DataPointObservabilityModeOutput {
	return o
}

func (o DataPointObservabilityModeOutput) ToDataPointObservabilityModePtrOutput() DataPointObservabilityModePtrOutput {
	return o.ToDataPointObservabilityModePtrOutputWithContext(context.Background())
}

func (o DataPointObservabilityModeOutput) ToDataPointObservabilityModePtrOutputWithContext(ctx context.Context) DataPointObservabilityModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPointObservabilityMode) *DataPointObservabilityMode {
		return &v
	}).(DataPointObservabilityModePtrOutput)
}

func (o DataPointObservabilityModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataPointObservabilityModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataPointObservabilityMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataPointObservabilityModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataPointObservabilityModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataPointObservabilityMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataPointObservabilityModePtrOutput struct{ *pulumi.OutputState }

func (DataPointObservabilityModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPointObservabilityMode)(nil)).Elem()
}

func (o DataPointObservabilityModePtrOutput) ToDataPointObservabilityModePtrOutput() DataPointObservabilityModePtrOutput {
	return o
}

func (o DataPointObservabilityModePtrOutput) ToDataPointObservabilityModePtrOutputWithContext(ctx context.Context) DataPointObservabilityModePtrOutput {
	return o
}

func (o DataPointObservabilityModePtrOutput) Elem() DataPointObservabilityModeOutput {
	return o.ApplyT(func(v *DataPointObservabilityMode) DataPointObservabilityMode {
		if v != nil {
			return *v
		}
		var ret DataPointObservabilityMode
		return ret
	}).(DataPointObservabilityModeOutput)
}

func (o DataPointObservabilityModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataPointObservabilityModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataPointObservabilityMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataPointObservabilityModeInput is an input type that accepts values of the DataPointObservabilityMode enum
// A concrete instance of `DataPointObservabilityModeInput` can be one of the following:
//
//	DataPointObservabilityModeNone
//	DataPointObservabilityModeCounter
//	DataPointObservabilityModeGauge
//	DataPointObservabilityModeHistogram
//	DataPointObservabilityModeLog
type DataPointObservabilityModeInput interface {
	pulumi.Input

	ToDataPointObservabilityModeOutput() DataPointObservabilityModeOutput
	ToDataPointObservabilityModeOutputWithContext(context.Context) DataPointObservabilityModeOutput
}

var dataPointObservabilityModePtrType = reflect.TypeOf((**DataPointObservabilityMode)(nil)).Elem()

type DataPointObservabilityModePtrInput interface {
	pulumi.Input

	ToDataPointObservabilityModePtrOutput() DataPointObservabilityModePtrOutput
	ToDataPointObservabilityModePtrOutputWithContext(context.Context) DataPointObservabilityModePtrOutput
}

type dataPointObservabilityModePtr string

func DataPointObservabilityModePtr(v string) DataPointObservabilityModePtrInput {
	return (*dataPointObservabilityModePtr)(&v)
}

func (*dataPointObservabilityModePtr) ElementType() reflect.Type {
	return dataPointObservabilityModePtrType
}

func (in *dataPointObservabilityModePtr) ToDataPointObservabilityModePtrOutput() DataPointObservabilityModePtrOutput {
	return pulumi.ToOutput(in).(DataPointObservabilityModePtrOutput)
}

func (in *dataPointObservabilityModePtr) ToDataPointObservabilityModePtrOutputWithContext(ctx context.Context) DataPointObservabilityModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataPointObservabilityModePtrOutput)
}

// Target destination.
type DatasetDestinationTarget string

const (
	// MQTT target.
	DatasetDestinationTargetMqtt = DatasetDestinationTarget("Mqtt")
	// Broker State Store target.
	DatasetDestinationTargetBrokerStateStore = DatasetDestinationTarget("BrokerStateStore")
	// Storage target.
	DatasetDestinationTargetStorage = DatasetDestinationTarget("Storage")
)

// Target destination.
type EventDestinationTarget string

const (
	// MQTT target.
	EventDestinationTargetMqtt = EventDestinationTarget("Mqtt")
	// Storage target.
	EventDestinationTargetStorage = EventDestinationTarget("Storage")
)

// An indication of how the event should be mapped to OpenTelemetry.
type EventObservabilityMode string

const (
	// No mapping to OpenTelemetry.
	EventObservabilityModeNone = EventObservabilityMode("None")
	// Map as log to OpenTelemetry.
	EventObservabilityModeLog = EventObservabilityMode("Log")
)

func (EventObservabilityMode) ElementType() reflect.Type {
	return reflect.TypeOf((*EventObservabilityMode)(nil)).Elem()
}

func (e EventObservabilityMode) ToEventObservabilityModeOutput() EventObservabilityModeOutput {
	return pulumi.ToOutput(e).(EventObservabilityModeOutput)
}

func (e EventObservabilityMode) ToEventObservabilityModeOutputWithContext(ctx context.Context) EventObservabilityModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventObservabilityModeOutput)
}

func (e EventObservabilityMode) ToEventObservabilityModePtrOutput() EventObservabilityModePtrOutput {
	return e.ToEventObservabilityModePtrOutputWithContext(context.Background())
}

func (e EventObservabilityMode) ToEventObservabilityModePtrOutputWithContext(ctx context.Context) EventObservabilityModePtrOutput {
	return EventObservabilityMode(e).ToEventObservabilityModeOutputWithContext(ctx).ToEventObservabilityModePtrOutputWithContext(ctx)
}

func (e EventObservabilityMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventObservabilityMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventObservabilityMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventObservabilityMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventObservabilityModeOutput struct{ *pulumi.OutputState }

func (EventObservabilityModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventObservabilityMode)(nil)).Elem()
}

func (o EventObservabilityModeOutput) ToEventObservabilityModeOutput() EventObservabilityModeOutput {
	return o
}

func (o EventObservabilityModeOutput) ToEventObservabilityModeOutputWithContext(ctx context.Context) EventObservabilityModeOutput {
	return o
}

func (o EventObservabilityModeOutput) ToEventObservabilityModePtrOutput() EventObservabilityModePtrOutput {
	return o.ToEventObservabilityModePtrOutputWithContext(context.Background())
}

func (o EventObservabilityModeOutput) ToEventObservabilityModePtrOutputWithContext(ctx context.Context) EventObservabilityModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventObservabilityMode) *EventObservabilityMode {
		return &v
	}).(EventObservabilityModePtrOutput)
}

func (o EventObservabilityModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventObservabilityModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventObservabilityMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventObservabilityModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventObservabilityModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventObservabilityMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventObservabilityModePtrOutput struct{ *pulumi.OutputState }

func (EventObservabilityModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventObservabilityMode)(nil)).Elem()
}

func (o EventObservabilityModePtrOutput) ToEventObservabilityModePtrOutput() EventObservabilityModePtrOutput {
	return o
}

func (o EventObservabilityModePtrOutput) ToEventObservabilityModePtrOutputWithContext(ctx context.Context) EventObservabilityModePtrOutput {
	return o
}

func (o EventObservabilityModePtrOutput) Elem() EventObservabilityModeOutput {
	return o.ApplyT(func(v *EventObservabilityMode) EventObservabilityMode {
		if v != nil {
			return *v
		}
		var ret EventObservabilityMode
		return ret
	}).(EventObservabilityModeOutput)
}

func (o EventObservabilityModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventObservabilityModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventObservabilityMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventObservabilityModeInput is an input type that accepts values of the EventObservabilityMode enum
// A concrete instance of `EventObservabilityModeInput` can be one of the following:
//
//	EventObservabilityModeNone
//	EventObservabilityModeLog
type EventObservabilityModeInput interface {
	pulumi.Input

	ToEventObservabilityModeOutput() EventObservabilityModeOutput
	ToEventObservabilityModeOutputWithContext(context.Context) EventObservabilityModeOutput
}

var eventObservabilityModePtrType = reflect.TypeOf((**EventObservabilityMode)(nil)).Elem()

type EventObservabilityModePtrInput interface {
	pulumi.Input

	ToEventObservabilityModePtrOutput() EventObservabilityModePtrOutput
	ToEventObservabilityModePtrOutputWithContext(context.Context) EventObservabilityModePtrOutput
}

type eventObservabilityModePtr string

func EventObservabilityModePtr(v string) EventObservabilityModePtrInput {
	return (*eventObservabilityModePtr)(&v)
}

func (*eventObservabilityModePtr) ElementType() reflect.Type {
	return eventObservabilityModePtrType
}

func (in *eventObservabilityModePtr) ToEventObservabilityModePtrOutput() EventObservabilityModePtrOutput {
	return pulumi.ToOutput(in).(EventObservabilityModePtrOutput)
}

func (in *eventObservabilityModePtr) ToEventObservabilityModePtrOutputWithContext(ctx context.Context) EventObservabilityModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventObservabilityModePtrOutput)
}

// Format of the schema.
type Format string

const (
	// JSON Schema version draft 7 format
	Format_JsonSchema_draft7 = Format("JsonSchema/draft-07")
	// Delta format
	Format_Delta_1_0 = Format("Delta/1.0")
)

func (Format) ElementType() reflect.Type {
	return reflect.TypeOf((*Format)(nil)).Elem()
}

func (e Format) ToFormatOutput() FormatOutput {
	return pulumi.ToOutput(e).(FormatOutput)
}

func (e Format) ToFormatOutputWithContext(ctx context.Context) FormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FormatOutput)
}

func (e Format) ToFormatPtrOutput() FormatPtrOutput {
	return e.ToFormatPtrOutputWithContext(context.Background())
}

func (e Format) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return Format(e).ToFormatOutputWithContext(ctx).ToFormatPtrOutputWithContext(ctx)
}

func (e Format) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Format) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Format) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Format) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FormatOutput struct{ *pulumi.OutputState }

func (FormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Format)(nil)).Elem()
}

func (o FormatOutput) ToFormatOutput() FormatOutput {
	return o
}

func (o FormatOutput) ToFormatOutputWithContext(ctx context.Context) FormatOutput {
	return o
}

func (o FormatOutput) ToFormatPtrOutput() FormatPtrOutput {
	return o.ToFormatPtrOutputWithContext(context.Background())
}

func (o FormatOutput) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Format) *Format {
		return &v
	}).(FormatPtrOutput)
}

func (o FormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Format) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Format) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FormatPtrOutput struct{ *pulumi.OutputState }

func (FormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Format)(nil)).Elem()
}

func (o FormatPtrOutput) ToFormatPtrOutput() FormatPtrOutput {
	return o
}

func (o FormatPtrOutput) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return o
}

func (o FormatPtrOutput) Elem() FormatOutput {
	return o.ApplyT(func(v *Format) Format {
		if v != nil {
			return *v
		}
		var ret Format
		return ret
	}).(FormatOutput)
}

func (o FormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Format) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FormatInput is an input type that accepts values of the Format enum
// A concrete instance of `FormatInput` can be one of the following:
//
//	Format_JsonSchema_draft7
//	Format_Delta_1_0
type FormatInput interface {
	pulumi.Input

	ToFormatOutput() FormatOutput
	ToFormatOutputWithContext(context.Context) FormatOutput
}

var formatPtrType = reflect.TypeOf((**Format)(nil)).Elem()

type FormatPtrInput interface {
	pulumi.Input

	ToFormatPtrOutput() FormatPtrOutput
	ToFormatPtrOutputWithContext(context.Context) FormatPtrOutput
}

type formatPtr string

func FormatPtr(v string) FormatPtrInput {
	return (*formatPtr)(&v)
}

func (*formatPtr) ElementType() reflect.Type {
	return formatPtrType
}

func (in *formatPtr) ToFormatPtrOutput() FormatPtrOutput {
	return pulumi.ToOutput(in).(FormatPtrOutput)
}

func (in *formatPtr) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FormatPtrOutput)
}

// The type of the action.
type ManagementActionType string

const (
	// Call action type.
	ManagementActionTypeCall = ManagementActionType("Call")
	// Read action type.
	ManagementActionTypeRead = ManagementActionType("Read")
	// Write action type.
	ManagementActionTypeWrite = ManagementActionType("Write")
)

func (ManagementActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementActionType)(nil)).Elem()
}

func (e ManagementActionType) ToManagementActionTypeOutput() ManagementActionTypeOutput {
	return pulumi.ToOutput(e).(ManagementActionTypeOutput)
}

func (e ManagementActionType) ToManagementActionTypeOutputWithContext(ctx context.Context) ManagementActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagementActionTypeOutput)
}

func (e ManagementActionType) ToManagementActionTypePtrOutput() ManagementActionTypePtrOutput {
	return e.ToManagementActionTypePtrOutputWithContext(context.Background())
}

func (e ManagementActionType) ToManagementActionTypePtrOutputWithContext(ctx context.Context) ManagementActionTypePtrOutput {
	return ManagementActionType(e).ToManagementActionTypeOutputWithContext(ctx).ToManagementActionTypePtrOutputWithContext(ctx)
}

func (e ManagementActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagementActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagementActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagementActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagementActionTypeOutput struct{ *pulumi.OutputState }

func (ManagementActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementActionType)(nil)).Elem()
}

func (o ManagementActionTypeOutput) ToManagementActionTypeOutput() ManagementActionTypeOutput {
	return o
}

func (o ManagementActionTypeOutput) ToManagementActionTypeOutputWithContext(ctx context.Context) ManagementActionTypeOutput {
	return o
}

func (o ManagementActionTypeOutput) ToManagementActionTypePtrOutput() ManagementActionTypePtrOutput {
	return o.ToManagementActionTypePtrOutputWithContext(context.Background())
}

func (o ManagementActionTypeOutput) ToManagementActionTypePtrOutputWithContext(ctx context.Context) ManagementActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementActionType) *ManagementActionType {
		return &v
	}).(ManagementActionTypePtrOutput)
}

func (o ManagementActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagementActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagementActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagementActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagementActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagementActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagementActionTypePtrOutput struct{ *pulumi.OutputState }

func (ManagementActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementActionType)(nil)).Elem()
}

func (o ManagementActionTypePtrOutput) ToManagementActionTypePtrOutput() ManagementActionTypePtrOutput {
	return o
}

func (o ManagementActionTypePtrOutput) ToManagementActionTypePtrOutputWithContext(ctx context.Context) ManagementActionTypePtrOutput {
	return o
}

func (o ManagementActionTypePtrOutput) Elem() ManagementActionTypeOutput {
	return o.ApplyT(func(v *ManagementActionType) ManagementActionType {
		if v != nil {
			return *v
		}
		var ret ManagementActionType
		return ret
	}).(ManagementActionTypeOutput)
}

func (o ManagementActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagementActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagementActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagementActionTypeInput is an input type that accepts values of the ManagementActionType enum
// A concrete instance of `ManagementActionTypeInput` can be one of the following:
//
//	ManagementActionTypeCall
//	ManagementActionTypeRead
//	ManagementActionTypeWrite
type ManagementActionTypeInput interface {
	pulumi.Input

	ToManagementActionTypeOutput() ManagementActionTypeOutput
	ToManagementActionTypeOutputWithContext(context.Context) ManagementActionTypeOutput
}

var managementActionTypePtrType = reflect.TypeOf((**ManagementActionType)(nil)).Elem()

type ManagementActionTypePtrInput interface {
	pulumi.Input

	ToManagementActionTypePtrOutput() ManagementActionTypePtrOutput
	ToManagementActionTypePtrOutputWithContext(context.Context) ManagementActionTypePtrOutput
}

type managementActionTypePtr string

func ManagementActionTypePtr(v string) ManagementActionTypePtrInput {
	return (*managementActionTypePtr)(&v)
}

func (*managementActionTypePtr) ElementType() reflect.Type {
	return managementActionTypePtrType
}

func (in *managementActionTypePtr) ToManagementActionTypePtrOutput() ManagementActionTypePtrOutput {
	return pulumi.ToOutput(in).(ManagementActionTypePtrOutput)
}

func (in *managementActionTypePtr) ToManagementActionTypePtrOutputWithContext(ctx context.Context) ManagementActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagementActionTypePtrOutput)
}

// The MQTT QoS setting. Defaults to QoS 1.
type MqttDestinationQos string

const (
	// QoS 0.
	MqttDestinationQosQos0 = MqttDestinationQos("Qos0")
	// QoS 1.
	MqttDestinationQosQos1 = MqttDestinationQos("Qos1")
)

func (MqttDestinationQos) ElementType() reflect.Type {
	return reflect.TypeOf((*MqttDestinationQos)(nil)).Elem()
}

func (e MqttDestinationQos) ToMqttDestinationQosOutput() MqttDestinationQosOutput {
	return pulumi.ToOutput(e).(MqttDestinationQosOutput)
}

func (e MqttDestinationQos) ToMqttDestinationQosOutputWithContext(ctx context.Context) MqttDestinationQosOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MqttDestinationQosOutput)
}

func (e MqttDestinationQos) ToMqttDestinationQosPtrOutput() MqttDestinationQosPtrOutput {
	return e.ToMqttDestinationQosPtrOutputWithContext(context.Background())
}

func (e MqttDestinationQos) ToMqttDestinationQosPtrOutputWithContext(ctx context.Context) MqttDestinationQosPtrOutput {
	return MqttDestinationQos(e).ToMqttDestinationQosOutputWithContext(ctx).ToMqttDestinationQosPtrOutputWithContext(ctx)
}

func (e MqttDestinationQos) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MqttDestinationQos) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MqttDestinationQos) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MqttDestinationQos) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MqttDestinationQosOutput struct{ *pulumi.OutputState }

func (MqttDestinationQosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MqttDestinationQos)(nil)).Elem()
}

func (o MqttDestinationQosOutput) ToMqttDestinationQosOutput() MqttDestinationQosOutput {
	return o
}

func (o MqttDestinationQosOutput) ToMqttDestinationQosOutputWithContext(ctx context.Context) MqttDestinationQosOutput {
	return o
}

func (o MqttDestinationQosOutput) ToMqttDestinationQosPtrOutput() MqttDestinationQosPtrOutput {
	return o.ToMqttDestinationQosPtrOutputWithContext(context.Background())
}

func (o MqttDestinationQosOutput) ToMqttDestinationQosPtrOutputWithContext(ctx context.Context) MqttDestinationQosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MqttDestinationQos) *MqttDestinationQos {
		return &v
	}).(MqttDestinationQosPtrOutput)
}

func (o MqttDestinationQosOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MqttDestinationQosOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MqttDestinationQos) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MqttDestinationQosOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MqttDestinationQosOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MqttDestinationQos) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MqttDestinationQosPtrOutput struct{ *pulumi.OutputState }

func (MqttDestinationQosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MqttDestinationQos)(nil)).Elem()
}

func (o MqttDestinationQosPtrOutput) ToMqttDestinationQosPtrOutput() MqttDestinationQosPtrOutput {
	return o
}

func (o MqttDestinationQosPtrOutput) ToMqttDestinationQosPtrOutputWithContext(ctx context.Context) MqttDestinationQosPtrOutput {
	return o
}

func (o MqttDestinationQosPtrOutput) Elem() MqttDestinationQosOutput {
	return o.ApplyT(func(v *MqttDestinationQos) MqttDestinationQos {
		if v != nil {
			return *v
		}
		var ret MqttDestinationQos
		return ret
	}).(MqttDestinationQosOutput)
}

func (o MqttDestinationQosPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MqttDestinationQosPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MqttDestinationQos) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MqttDestinationQosInput is an input type that accepts values of the MqttDestinationQos enum
// A concrete instance of `MqttDestinationQosInput` can be one of the following:
//
//	MqttDestinationQosQos0
//	MqttDestinationQosQos1
type MqttDestinationQosInput interface {
	pulumi.Input

	ToMqttDestinationQosOutput() MqttDestinationQosOutput
	ToMqttDestinationQosOutputWithContext(context.Context) MqttDestinationQosOutput
}

var mqttDestinationQosPtrType = reflect.TypeOf((**MqttDestinationQos)(nil)).Elem()

type MqttDestinationQosPtrInput interface {
	pulumi.Input

	ToMqttDestinationQosPtrOutput() MqttDestinationQosPtrOutput
	ToMqttDestinationQosPtrOutputWithContext(context.Context) MqttDestinationQosPtrOutput
}

type mqttDestinationQosPtr string

func MqttDestinationQosPtr(v string) MqttDestinationQosPtrInput {
	return (*mqttDestinationQosPtr)(&v)
}

func (*mqttDestinationQosPtr) ElementType() reflect.Type {
	return mqttDestinationQosPtrType
}

func (in *mqttDestinationQosPtr) ToMqttDestinationQosPtrOutput() MqttDestinationQosPtrOutput {
	return pulumi.ToOutput(in).(MqttDestinationQosPtrOutput)
}

func (in *mqttDestinationQosPtr) ToMqttDestinationQosPtrOutputWithContext(ctx context.Context) MqttDestinationQosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MqttDestinationQosPtrOutput)
}

// The type of the action.
type NamespaceDiscoveredManagementActionType string

const (
	// Call action type.
	NamespaceDiscoveredManagementActionTypeCall = NamespaceDiscoveredManagementActionType("Call")
	// Read action type.
	NamespaceDiscoveredManagementActionTypeRead = NamespaceDiscoveredManagementActionType("Read")
	// Write action type.
	NamespaceDiscoveredManagementActionTypeWrite = NamespaceDiscoveredManagementActionType("Write")
)

func (NamespaceDiscoveredManagementActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceDiscoveredManagementActionType)(nil)).Elem()
}

func (e NamespaceDiscoveredManagementActionType) ToNamespaceDiscoveredManagementActionTypeOutput() NamespaceDiscoveredManagementActionTypeOutput {
	return pulumi.ToOutput(e).(NamespaceDiscoveredManagementActionTypeOutput)
}

func (e NamespaceDiscoveredManagementActionType) ToNamespaceDiscoveredManagementActionTypeOutputWithContext(ctx context.Context) NamespaceDiscoveredManagementActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NamespaceDiscoveredManagementActionTypeOutput)
}

func (e NamespaceDiscoveredManagementActionType) ToNamespaceDiscoveredManagementActionTypePtrOutput() NamespaceDiscoveredManagementActionTypePtrOutput {
	return e.ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(context.Background())
}

func (e NamespaceDiscoveredManagementActionType) ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(ctx context.Context) NamespaceDiscoveredManagementActionTypePtrOutput {
	return NamespaceDiscoveredManagementActionType(e).ToNamespaceDiscoveredManagementActionTypeOutputWithContext(ctx).ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(ctx)
}

func (e NamespaceDiscoveredManagementActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NamespaceDiscoveredManagementActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NamespaceDiscoveredManagementActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NamespaceDiscoveredManagementActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NamespaceDiscoveredManagementActionTypeOutput struct{ *pulumi.OutputState }

func (NamespaceDiscoveredManagementActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceDiscoveredManagementActionType)(nil)).Elem()
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToNamespaceDiscoveredManagementActionTypeOutput() NamespaceDiscoveredManagementActionTypeOutput {
	return o
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToNamespaceDiscoveredManagementActionTypeOutputWithContext(ctx context.Context) NamespaceDiscoveredManagementActionTypeOutput {
	return o
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToNamespaceDiscoveredManagementActionTypePtrOutput() NamespaceDiscoveredManagementActionTypePtrOutput {
	return o.ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(context.Background())
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(ctx context.Context) NamespaceDiscoveredManagementActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamespaceDiscoveredManagementActionType) *NamespaceDiscoveredManagementActionType {
		return &v
	}).(NamespaceDiscoveredManagementActionTypePtrOutput)
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NamespaceDiscoveredManagementActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NamespaceDiscoveredManagementActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NamespaceDiscoveredManagementActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NamespaceDiscoveredManagementActionTypePtrOutput struct{ *pulumi.OutputState }

func (NamespaceDiscoveredManagementActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceDiscoveredManagementActionType)(nil)).Elem()
}

func (o NamespaceDiscoveredManagementActionTypePtrOutput) ToNamespaceDiscoveredManagementActionTypePtrOutput() NamespaceDiscoveredManagementActionTypePtrOutput {
	return o
}

func (o NamespaceDiscoveredManagementActionTypePtrOutput) ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(ctx context.Context) NamespaceDiscoveredManagementActionTypePtrOutput {
	return o
}

func (o NamespaceDiscoveredManagementActionTypePtrOutput) Elem() NamespaceDiscoveredManagementActionTypeOutput {
	return o.ApplyT(func(v *NamespaceDiscoveredManagementActionType) NamespaceDiscoveredManagementActionType {
		if v != nil {
			return *v
		}
		var ret NamespaceDiscoveredManagementActionType
		return ret
	}).(NamespaceDiscoveredManagementActionTypeOutput)
}

func (o NamespaceDiscoveredManagementActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NamespaceDiscoveredManagementActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NamespaceDiscoveredManagementActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NamespaceDiscoveredManagementActionTypeInput is an input type that accepts values of the NamespaceDiscoveredManagementActionType enum
// A concrete instance of `NamespaceDiscoveredManagementActionTypeInput` can be one of the following:
//
//	NamespaceDiscoveredManagementActionTypeCall
//	NamespaceDiscoveredManagementActionTypeRead
//	NamespaceDiscoveredManagementActionTypeWrite
type NamespaceDiscoveredManagementActionTypeInput interface {
	pulumi.Input

	ToNamespaceDiscoveredManagementActionTypeOutput() NamespaceDiscoveredManagementActionTypeOutput
	ToNamespaceDiscoveredManagementActionTypeOutputWithContext(context.Context) NamespaceDiscoveredManagementActionTypeOutput
}

var namespaceDiscoveredManagementActionTypePtrType = reflect.TypeOf((**NamespaceDiscoveredManagementActionType)(nil)).Elem()

type NamespaceDiscoveredManagementActionTypePtrInput interface {
	pulumi.Input

	ToNamespaceDiscoveredManagementActionTypePtrOutput() NamespaceDiscoveredManagementActionTypePtrOutput
	ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(context.Context) NamespaceDiscoveredManagementActionTypePtrOutput
}

type namespaceDiscoveredManagementActionTypePtr string

func NamespaceDiscoveredManagementActionTypePtr(v string) NamespaceDiscoveredManagementActionTypePtrInput {
	return (*namespaceDiscoveredManagementActionTypePtr)(&v)
}

func (*namespaceDiscoveredManagementActionTypePtr) ElementType() reflect.Type {
	return namespaceDiscoveredManagementActionTypePtrType
}

func (in *namespaceDiscoveredManagementActionTypePtr) ToNamespaceDiscoveredManagementActionTypePtrOutput() NamespaceDiscoveredManagementActionTypePtrOutput {
	return pulumi.ToOutput(in).(NamespaceDiscoveredManagementActionTypePtrOutput)
}

func (in *namespaceDiscoveredManagementActionTypePtr) ToNamespaceDiscoveredManagementActionTypePtrOutputWithContext(ctx context.Context) NamespaceDiscoveredManagementActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NamespaceDiscoveredManagementActionTypePtrOutput)
}

// Type of the schema.
type SchemaType string

const (
	// Message Schema schema type
	SchemaTypeMessageSchema = SchemaType("MessageSchema")
)

func (SchemaType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaType)(nil)).Elem()
}

func (e SchemaType) ToSchemaTypeOutput() SchemaTypeOutput {
	return pulumi.ToOutput(e).(SchemaTypeOutput)
}

func (e SchemaType) ToSchemaTypeOutputWithContext(ctx context.Context) SchemaTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaTypeOutput)
}

func (e SchemaType) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return e.ToSchemaTypePtrOutputWithContext(context.Background())
}

func (e SchemaType) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return SchemaType(e).ToSchemaTypeOutputWithContext(ctx).ToSchemaTypePtrOutputWithContext(ctx)
}

func (e SchemaType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaTypeOutput struct{ *pulumi.OutputState }

func (SchemaTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaType)(nil)).Elem()
}

func (o SchemaTypeOutput) ToSchemaTypeOutput() SchemaTypeOutput {
	return o
}

func (o SchemaTypeOutput) ToSchemaTypeOutputWithContext(ctx context.Context) SchemaTypeOutput {
	return o
}

func (o SchemaTypeOutput) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return o.ToSchemaTypePtrOutputWithContext(context.Background())
}

func (o SchemaTypeOutput) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaType) *SchemaType {
		return &v
	}).(SchemaTypePtrOutput)
}

func (o SchemaTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaType)(nil)).Elem()
}

func (o SchemaTypePtrOutput) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return o
}

func (o SchemaTypePtrOutput) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return o
}

func (o SchemaTypePtrOutput) Elem() SchemaTypeOutput {
	return o.ApplyT(func(v *SchemaType) SchemaType {
		if v != nil {
			return *v
		}
		var ret SchemaType
		return ret
	}).(SchemaTypeOutput)
}

func (o SchemaTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaTypeInput is an input type that accepts values of the SchemaType enum
// A concrete instance of `SchemaTypeInput` can be one of the following:
//
//	SchemaTypeMessageSchema
type SchemaTypeInput interface {
	pulumi.Input

	ToSchemaTypeOutput() SchemaTypeOutput
	ToSchemaTypeOutputWithContext(context.Context) SchemaTypeOutput
}

var schemaTypePtrType = reflect.TypeOf((**SchemaType)(nil)).Elem()

type SchemaTypePtrInput interface {
	pulumi.Input

	ToSchemaTypePtrOutput() SchemaTypePtrOutput
	ToSchemaTypePtrOutputWithContext(context.Context) SchemaTypePtrOutput
}

type schemaTypePtr string

func SchemaTypePtr(v string) SchemaTypePtrInput {
	return (*schemaTypePtr)(&v)
}

func (*schemaTypePtr) ElementType() reflect.Type {
	return schemaTypePtrType
}

func (in *schemaTypePtr) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaTypePtrOutput)
}

func (in *schemaTypePtr) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaTypePtrOutput)
}

// Target destination.
type StreamDestinationTarget string

const (
	// MQTT target.
	StreamDestinationTargetMqtt = StreamDestinationTarget("Mqtt")
	// Storage target.
	StreamDestinationTargetStorage = StreamDestinationTarget("Storage")
)

// Type of managed service identity (either system assigned, or none).
type SystemAssignedServiceIdentityType string

const (
	SystemAssignedServiceIdentityTypeNone           = SystemAssignedServiceIdentityType("None")
	SystemAssignedServiceIdentityTypeSystemAssigned = SystemAssignedServiceIdentityType("SystemAssigned")
)

func (SystemAssignedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(SystemAssignedServiceIdentityTypeOutput)
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SystemAssignedServiceIdentityTypeOutput)
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return e.ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return SystemAssignedServiceIdentityType(e).ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx).ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e SystemAssignedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemAssignedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemAssignedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SystemAssignedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SystemAssignedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypeOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return o.ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAssignedServiceIdentityType) *SystemAssignedServiceIdentityType {
		return &v
	}).(SystemAssignedServiceIdentityTypePtrOutput)
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemAssignedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemAssignedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SystemAssignedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypePtrOutput) Elem() SystemAssignedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityType) SystemAssignedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret SystemAssignedServiceIdentityType
		return ret
	}).(SystemAssignedServiceIdentityTypeOutput)
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SystemAssignedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SystemAssignedServiceIdentityTypeInput is an input type that accepts values of the SystemAssignedServiceIdentityType enum
// A concrete instance of `SystemAssignedServiceIdentityTypeInput` can be one of the following:
//
//	SystemAssignedServiceIdentityTypeNone
//	SystemAssignedServiceIdentityTypeSystemAssigned
type SystemAssignedServiceIdentityTypeInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput
	ToSystemAssignedServiceIdentityTypeOutputWithContext(context.Context) SystemAssignedServiceIdentityTypeOutput
}

var systemAssignedServiceIdentityTypePtrType = reflect.TypeOf((**SystemAssignedServiceIdentityType)(nil)).Elem()

type SystemAssignedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput
	ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Context) SystemAssignedServiceIdentityTypePtrOutput
}

type systemAssignedServiceIdentityTypePtr string

func SystemAssignedServiceIdentityTypePtr(v string) SystemAssignedServiceIdentityTypePtrInput {
	return (*systemAssignedServiceIdentityTypePtr)(&v)
}

func (*systemAssignedServiceIdentityTypePtr) ElementType() reflect.Type {
	return systemAssignedServiceIdentityTypePtrType
}

func (in *systemAssignedServiceIdentityTypePtr) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(SystemAssignedServiceIdentityTypePtrOutput)
}

func (in *systemAssignedServiceIdentityTypePtr) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SystemAssignedServiceIdentityTypePtrOutput)
}

// When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.
type TopicRetainType string

const (
	// Retain the messages.
	TopicRetainTypeKeep = TopicRetainType("Keep")
	// Never retain messages.
	TopicRetainTypeNever = TopicRetainType("Never")
)

func (TopicRetainType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRetainType)(nil)).Elem()
}

func (e TopicRetainType) ToTopicRetainTypeOutput() TopicRetainTypeOutput {
	return pulumi.ToOutput(e).(TopicRetainTypeOutput)
}

func (e TopicRetainType) ToTopicRetainTypeOutputWithContext(ctx context.Context) TopicRetainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicRetainTypeOutput)
}

func (e TopicRetainType) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return e.ToTopicRetainTypePtrOutputWithContext(context.Background())
}

func (e TopicRetainType) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return TopicRetainType(e).ToTopicRetainTypeOutputWithContext(ctx).ToTopicRetainTypePtrOutputWithContext(ctx)
}

func (e TopicRetainType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicRetainType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicRetainType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicRetainType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicRetainTypeOutput struct{ *pulumi.OutputState }

func (TopicRetainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRetainType)(nil)).Elem()
}

func (o TopicRetainTypeOutput) ToTopicRetainTypeOutput() TopicRetainTypeOutput {
	return o
}

func (o TopicRetainTypeOutput) ToTopicRetainTypeOutputWithContext(ctx context.Context) TopicRetainTypeOutput {
	return o
}

func (o TopicRetainTypeOutput) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return o.ToTopicRetainTypePtrOutputWithContext(context.Background())
}

func (o TopicRetainTypeOutput) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRetainType) *TopicRetainType {
		return &v
	}).(TopicRetainTypePtrOutput)
}

func (o TopicRetainTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicRetainTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicRetainType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicRetainTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicRetainTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicRetainType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicRetainTypePtrOutput struct{ *pulumi.OutputState }

func (TopicRetainTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRetainType)(nil)).Elem()
}

func (o TopicRetainTypePtrOutput) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return o
}

func (o TopicRetainTypePtrOutput) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return o
}

func (o TopicRetainTypePtrOutput) Elem() TopicRetainTypeOutput {
	return o.ApplyT(func(v *TopicRetainType) TopicRetainType {
		if v != nil {
			return *v
		}
		var ret TopicRetainType
		return ret
	}).(TopicRetainTypeOutput)
}

func (o TopicRetainTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicRetainTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicRetainType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicRetainTypeInput is an input type that accepts values of the TopicRetainType enum
// A concrete instance of `TopicRetainTypeInput` can be one of the following:
//
//	TopicRetainTypeKeep
//	TopicRetainTypeNever
type TopicRetainTypeInput interface {
	pulumi.Input

	ToTopicRetainTypeOutput() TopicRetainTypeOutput
	ToTopicRetainTypeOutputWithContext(context.Context) TopicRetainTypeOutput
}

var topicRetainTypePtrType = reflect.TypeOf((**TopicRetainType)(nil)).Elem()

type TopicRetainTypePtrInput interface {
	pulumi.Input

	ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput
	ToTopicRetainTypePtrOutputWithContext(context.Context) TopicRetainTypePtrOutput
}

type topicRetainTypePtr string

func TopicRetainTypePtr(v string) TopicRetainTypePtrInput {
	return (*topicRetainTypePtr)(&v)
}

func (*topicRetainTypePtr) ElementType() reflect.Type {
	return topicRetainTypePtrType
}

func (in *topicRetainTypePtr) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return pulumi.ToOutput(in).(TopicRetainTypePtrOutput)
}

func (in *topicRetainTypePtr) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicRetainTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationMethodOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodPtrOutput{})
	pulumi.RegisterOutputType(DataPointObservabilityModeOutput{})
	pulumi.RegisterOutputType(DataPointObservabilityModePtrOutput{})
	pulumi.RegisterOutputType(EventObservabilityModeOutput{})
	pulumi.RegisterOutputType(EventObservabilityModePtrOutput{})
	pulumi.RegisterOutputType(FormatOutput{})
	pulumi.RegisterOutputType(FormatPtrOutput{})
	pulumi.RegisterOutputType(ManagementActionTypeOutput{})
	pulumi.RegisterOutputType(ManagementActionTypePtrOutput{})
	pulumi.RegisterOutputType(MqttDestinationQosOutput{})
	pulumi.RegisterOutputType(MqttDestinationQosPtrOutput{})
	pulumi.RegisterOutputType(NamespaceDiscoveredManagementActionTypeOutput{})
	pulumi.RegisterOutputType(NamespaceDiscoveredManagementActionTypePtrOutput{})
	pulumi.RegisterOutputType(SchemaTypeOutput{})
	pulumi.RegisterOutputType(SchemaTypePtrOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(TopicRetainTypeOutput{})
	pulumi.RegisterOutputType(TopicRetainTypePtrOutput{})
}
