// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The method to authenticate the user of the client at the server.
type AuthenticationMethod string

const (
	// The user authentication method is anonymous.
	AuthenticationMethodAnonymous = AuthenticationMethod("Anonymous")
	// The user authentication method is an x509 certificate.
	AuthenticationMethodCertificate = AuthenticationMethod("Certificate")
	// The user authentication method is a username and password.
	AuthenticationMethodUsernamePassword = AuthenticationMethod("UsernamePassword")
)

func (AuthenticationMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethod)(nil)).Elem()
}

func (e AuthenticationMethod) ToAuthenticationMethodOutput() AuthenticationMethodOutput {
	return pulumi.ToOutput(e).(AuthenticationMethodOutput)
}

func (e AuthenticationMethod) ToAuthenticationMethodOutputWithContext(ctx context.Context) AuthenticationMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthenticationMethodOutput)
}

func (e AuthenticationMethod) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return e.ToAuthenticationMethodPtrOutputWithContext(context.Background())
}

func (e AuthenticationMethod) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return AuthenticationMethod(e).ToAuthenticationMethodOutputWithContext(ctx).ToAuthenticationMethodPtrOutputWithContext(ctx)
}

func (e AuthenticationMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthenticationMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthenticationMethodOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethod)(nil)).Elem()
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodOutput() AuthenticationMethodOutput {
	return o
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodOutputWithContext(ctx context.Context) AuthenticationMethodOutput {
	return o
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return o.ToAuthenticationMethodPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationMethod) *AuthenticationMethod {
		return &v
	}).(AuthenticationMethodPtrOutput)
}

func (o AuthenticationMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthenticationMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthenticationMethodPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationMethod)(nil)).Elem()
}

func (o AuthenticationMethodPtrOutput) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return o
}

func (o AuthenticationMethodPtrOutput) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return o
}

func (o AuthenticationMethodPtrOutput) Elem() AuthenticationMethodOutput {
	return o.ApplyT(func(v *AuthenticationMethod) AuthenticationMethod {
		if v != nil {
			return *v
		}
		var ret AuthenticationMethod
		return ret
	}).(AuthenticationMethodOutput)
}

func (o AuthenticationMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthenticationMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthenticationMethodInput is an input type that accepts values of the AuthenticationMethod enum
// A concrete instance of `AuthenticationMethodInput` can be one of the following:
//
//	AuthenticationMethodAnonymous
//	AuthenticationMethodCertificate
//	AuthenticationMethodUsernamePassword
type AuthenticationMethodInput interface {
	pulumi.Input

	ToAuthenticationMethodOutput() AuthenticationMethodOutput
	ToAuthenticationMethodOutputWithContext(context.Context) AuthenticationMethodOutput
}

var authenticationMethodPtrType = reflect.TypeOf((**AuthenticationMethod)(nil)).Elem()

type AuthenticationMethodPtrInput interface {
	pulumi.Input

	ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput
	ToAuthenticationMethodPtrOutputWithContext(context.Context) AuthenticationMethodPtrOutput
}

type authenticationMethodPtr string

func AuthenticationMethodPtr(v string) AuthenticationMethodPtrInput {
	return (*authenticationMethodPtr)(&v)
}

func (*authenticationMethodPtr) ElementType() reflect.Type {
	return authenticationMethodPtrType
}

func (in *authenticationMethodPtr) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return pulumi.ToOutput(in).(AuthenticationMethodPtrOutput)
}

func (in *authenticationMethodPtr) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthenticationMethodPtrOutput)
}

// An indication of how the data point should be mapped to OpenTelemetry.
type DataPointsObservabilityMode string

const (
	// No mapping to OpenTelemetry.
	DataPointsObservabilityModeNone = DataPointsObservabilityMode("none")
	// Map as counter to OpenTelemetry.
	DataPointsObservabilityModeCounter = DataPointsObservabilityMode("counter")
	// Map as gauge to OpenTelemetry.
	DataPointsObservabilityModeGauge = DataPointsObservabilityMode("gauge")
	// Map as histogram to OpenTelemetry.
	DataPointsObservabilityModeHistogram = DataPointsObservabilityMode("histogram")
	// Map as log to OpenTelemetry.
	DataPointsObservabilityModeLog = DataPointsObservabilityMode("log")
)

func (DataPointsObservabilityMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPointsObservabilityMode)(nil)).Elem()
}

func (e DataPointsObservabilityMode) ToDataPointsObservabilityModeOutput() DataPointsObservabilityModeOutput {
	return pulumi.ToOutput(e).(DataPointsObservabilityModeOutput)
}

func (e DataPointsObservabilityMode) ToDataPointsObservabilityModeOutputWithContext(ctx context.Context) DataPointsObservabilityModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataPointsObservabilityModeOutput)
}

func (e DataPointsObservabilityMode) ToDataPointsObservabilityModePtrOutput() DataPointsObservabilityModePtrOutput {
	return e.ToDataPointsObservabilityModePtrOutputWithContext(context.Background())
}

func (e DataPointsObservabilityMode) ToDataPointsObservabilityModePtrOutputWithContext(ctx context.Context) DataPointsObservabilityModePtrOutput {
	return DataPointsObservabilityMode(e).ToDataPointsObservabilityModeOutputWithContext(ctx).ToDataPointsObservabilityModePtrOutputWithContext(ctx)
}

func (e DataPointsObservabilityMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataPointsObservabilityMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataPointsObservabilityMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataPointsObservabilityMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataPointsObservabilityModeOutput struct{ *pulumi.OutputState }

func (DataPointsObservabilityModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPointsObservabilityMode)(nil)).Elem()
}

func (o DataPointsObservabilityModeOutput) ToDataPointsObservabilityModeOutput() DataPointsObservabilityModeOutput {
	return o
}

func (o DataPointsObservabilityModeOutput) ToDataPointsObservabilityModeOutputWithContext(ctx context.Context) DataPointsObservabilityModeOutput {
	return o
}

func (o DataPointsObservabilityModeOutput) ToDataPointsObservabilityModePtrOutput() DataPointsObservabilityModePtrOutput {
	return o.ToDataPointsObservabilityModePtrOutputWithContext(context.Background())
}

func (o DataPointsObservabilityModeOutput) ToDataPointsObservabilityModePtrOutputWithContext(ctx context.Context) DataPointsObservabilityModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPointsObservabilityMode) *DataPointsObservabilityMode {
		return &v
	}).(DataPointsObservabilityModePtrOutput)
}

func (o DataPointsObservabilityModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataPointsObservabilityModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataPointsObservabilityMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataPointsObservabilityModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataPointsObservabilityModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataPointsObservabilityMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataPointsObservabilityModePtrOutput struct{ *pulumi.OutputState }

func (DataPointsObservabilityModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPointsObservabilityMode)(nil)).Elem()
}

func (o DataPointsObservabilityModePtrOutput) ToDataPointsObservabilityModePtrOutput() DataPointsObservabilityModePtrOutput {
	return o
}

func (o DataPointsObservabilityModePtrOutput) ToDataPointsObservabilityModePtrOutputWithContext(ctx context.Context) DataPointsObservabilityModePtrOutput {
	return o
}

func (o DataPointsObservabilityModePtrOutput) Elem() DataPointsObservabilityModeOutput {
	return o.ApplyT(func(v *DataPointsObservabilityMode) DataPointsObservabilityMode {
		if v != nil {
			return *v
		}
		var ret DataPointsObservabilityMode
		return ret
	}).(DataPointsObservabilityModeOutput)
}

func (o DataPointsObservabilityModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataPointsObservabilityModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataPointsObservabilityMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataPointsObservabilityModeInput is an input type that accepts values of the DataPointsObservabilityMode enum
// A concrete instance of `DataPointsObservabilityModeInput` can be one of the following:
//
//	DataPointsObservabilityModeNone
//	DataPointsObservabilityModeCounter
//	DataPointsObservabilityModeGauge
//	DataPointsObservabilityModeHistogram
//	DataPointsObservabilityModeLog
type DataPointsObservabilityModeInput interface {
	pulumi.Input

	ToDataPointsObservabilityModeOutput() DataPointsObservabilityModeOutput
	ToDataPointsObservabilityModeOutputWithContext(context.Context) DataPointsObservabilityModeOutput
}

var dataPointsObservabilityModePtrType = reflect.TypeOf((**DataPointsObservabilityMode)(nil)).Elem()

type DataPointsObservabilityModePtrInput interface {
	pulumi.Input

	ToDataPointsObservabilityModePtrOutput() DataPointsObservabilityModePtrOutput
	ToDataPointsObservabilityModePtrOutputWithContext(context.Context) DataPointsObservabilityModePtrOutput
}

type dataPointsObservabilityModePtr string

func DataPointsObservabilityModePtr(v string) DataPointsObservabilityModePtrInput {
	return (*dataPointsObservabilityModePtr)(&v)
}

func (*dataPointsObservabilityModePtr) ElementType() reflect.Type {
	return dataPointsObservabilityModePtrType
}

func (in *dataPointsObservabilityModePtr) ToDataPointsObservabilityModePtrOutput() DataPointsObservabilityModePtrOutput {
	return pulumi.ToOutput(in).(DataPointsObservabilityModePtrOutput)
}

func (in *dataPointsObservabilityModePtr) ToDataPointsObservabilityModePtrOutputWithContext(ctx context.Context) DataPointsObservabilityModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataPointsObservabilityModePtrOutput)
}

// An indication of how the event should be mapped to OpenTelemetry.
type EventsObservabilityMode string

const (
	// No mapping to OpenTelemetry.
	EventsObservabilityModeNone = EventsObservabilityMode("none")
	// Map as log to OpenTelemetry.
	EventsObservabilityModeLog = EventsObservabilityMode("log")
)

func (EventsObservabilityMode) ElementType() reflect.Type {
	return reflect.TypeOf((*EventsObservabilityMode)(nil)).Elem()
}

func (e EventsObservabilityMode) ToEventsObservabilityModeOutput() EventsObservabilityModeOutput {
	return pulumi.ToOutput(e).(EventsObservabilityModeOutput)
}

func (e EventsObservabilityMode) ToEventsObservabilityModeOutputWithContext(ctx context.Context) EventsObservabilityModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventsObservabilityModeOutput)
}

func (e EventsObservabilityMode) ToEventsObservabilityModePtrOutput() EventsObservabilityModePtrOutput {
	return e.ToEventsObservabilityModePtrOutputWithContext(context.Background())
}

func (e EventsObservabilityMode) ToEventsObservabilityModePtrOutputWithContext(ctx context.Context) EventsObservabilityModePtrOutput {
	return EventsObservabilityMode(e).ToEventsObservabilityModeOutputWithContext(ctx).ToEventsObservabilityModePtrOutputWithContext(ctx)
}

func (e EventsObservabilityMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventsObservabilityMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventsObservabilityMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventsObservabilityMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventsObservabilityModeOutput struct{ *pulumi.OutputState }

func (EventsObservabilityModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventsObservabilityMode)(nil)).Elem()
}

func (o EventsObservabilityModeOutput) ToEventsObservabilityModeOutput() EventsObservabilityModeOutput {
	return o
}

func (o EventsObservabilityModeOutput) ToEventsObservabilityModeOutputWithContext(ctx context.Context) EventsObservabilityModeOutput {
	return o
}

func (o EventsObservabilityModeOutput) ToEventsObservabilityModePtrOutput() EventsObservabilityModePtrOutput {
	return o.ToEventsObservabilityModePtrOutputWithContext(context.Background())
}

func (o EventsObservabilityModeOutput) ToEventsObservabilityModePtrOutputWithContext(ctx context.Context) EventsObservabilityModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventsObservabilityMode) *EventsObservabilityMode {
		return &v
	}).(EventsObservabilityModePtrOutput)
}

func (o EventsObservabilityModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventsObservabilityModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventsObservabilityMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventsObservabilityModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventsObservabilityModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventsObservabilityMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventsObservabilityModePtrOutput struct{ *pulumi.OutputState }

func (EventsObservabilityModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventsObservabilityMode)(nil)).Elem()
}

func (o EventsObservabilityModePtrOutput) ToEventsObservabilityModePtrOutput() EventsObservabilityModePtrOutput {
	return o
}

func (o EventsObservabilityModePtrOutput) ToEventsObservabilityModePtrOutputWithContext(ctx context.Context) EventsObservabilityModePtrOutput {
	return o
}

func (o EventsObservabilityModePtrOutput) Elem() EventsObservabilityModeOutput {
	return o.ApplyT(func(v *EventsObservabilityMode) EventsObservabilityMode {
		if v != nil {
			return *v
		}
		var ret EventsObservabilityMode
		return ret
	}).(EventsObservabilityModeOutput)
}

func (o EventsObservabilityModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventsObservabilityModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventsObservabilityMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventsObservabilityModeInput is an input type that accepts values of the EventsObservabilityMode enum
// A concrete instance of `EventsObservabilityModeInput` can be one of the following:
//
//	EventsObservabilityModeNone
//	EventsObservabilityModeLog
type EventsObservabilityModeInput interface {
	pulumi.Input

	ToEventsObservabilityModeOutput() EventsObservabilityModeOutput
	ToEventsObservabilityModeOutputWithContext(context.Context) EventsObservabilityModeOutput
}

var eventsObservabilityModePtrType = reflect.TypeOf((**EventsObservabilityMode)(nil)).Elem()

type EventsObservabilityModePtrInput interface {
	pulumi.Input

	ToEventsObservabilityModePtrOutput() EventsObservabilityModePtrOutput
	ToEventsObservabilityModePtrOutputWithContext(context.Context) EventsObservabilityModePtrOutput
}

type eventsObservabilityModePtr string

func EventsObservabilityModePtr(v string) EventsObservabilityModePtrInput {
	return (*eventsObservabilityModePtr)(&v)
}

func (*eventsObservabilityModePtr) ElementType() reflect.Type {
	return eventsObservabilityModePtrType
}

func (in *eventsObservabilityModePtr) ToEventsObservabilityModePtrOutput() EventsObservabilityModePtrOutput {
	return pulumi.ToOutput(in).(EventsObservabilityModePtrOutput)
}

func (in *eventsObservabilityModePtr) ToEventsObservabilityModePtrOutputWithContext(ctx context.Context) EventsObservabilityModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventsObservabilityModePtrOutput)
}

// Format of the schema.
type Format string

const (
	// JSON Schema version draft 7 format
	Format_JsonSchema_draft7 = Format("JsonSchema/draft-07")
	// Delta format
	Format_Delta_1_0 = Format("Delta/1.0")
)

func (Format) ElementType() reflect.Type {
	return reflect.TypeOf((*Format)(nil)).Elem()
}

func (e Format) ToFormatOutput() FormatOutput {
	return pulumi.ToOutput(e).(FormatOutput)
}

func (e Format) ToFormatOutputWithContext(ctx context.Context) FormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FormatOutput)
}

func (e Format) ToFormatPtrOutput() FormatPtrOutput {
	return e.ToFormatPtrOutputWithContext(context.Background())
}

func (e Format) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return Format(e).ToFormatOutputWithContext(ctx).ToFormatPtrOutputWithContext(ctx)
}

func (e Format) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Format) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Format) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Format) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FormatOutput struct{ *pulumi.OutputState }

func (FormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Format)(nil)).Elem()
}

func (o FormatOutput) ToFormatOutput() FormatOutput {
	return o
}

func (o FormatOutput) ToFormatOutputWithContext(ctx context.Context) FormatOutput {
	return o
}

func (o FormatOutput) ToFormatPtrOutput() FormatPtrOutput {
	return o.ToFormatPtrOutputWithContext(context.Background())
}

func (o FormatOutput) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Format) *Format {
		return &v
	}).(FormatPtrOutput)
}

func (o FormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Format) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Format) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FormatPtrOutput struct{ *pulumi.OutputState }

func (FormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Format)(nil)).Elem()
}

func (o FormatPtrOutput) ToFormatPtrOutput() FormatPtrOutput {
	return o
}

func (o FormatPtrOutput) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return o
}

func (o FormatPtrOutput) Elem() FormatOutput {
	return o.ApplyT(func(v *Format) Format {
		if v != nil {
			return *v
		}
		var ret Format
		return ret
	}).(FormatOutput)
}

func (o FormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Format) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FormatInput is an input type that accepts values of the Format enum
// A concrete instance of `FormatInput` can be one of the following:
//
//	Format_JsonSchema_draft7
//	Format_Delta_1_0
type FormatInput interface {
	pulumi.Input

	ToFormatOutput() FormatOutput
	ToFormatOutputWithContext(context.Context) FormatOutput
}

var formatPtrType = reflect.TypeOf((**Format)(nil)).Elem()

type FormatPtrInput interface {
	pulumi.Input

	ToFormatPtrOutput() FormatPtrOutput
	ToFormatPtrOutputWithContext(context.Context) FormatPtrOutput
}

type formatPtr string

func FormatPtr(v string) FormatPtrInput {
	return (*formatPtr)(&v)
}

func (*formatPtr) ElementType() reflect.Type {
	return formatPtrType
}

func (in *formatPtr) ToFormatPtrOutput() FormatPtrOutput {
	return pulumi.ToOutput(in).(FormatPtrOutput)
}

func (in *formatPtr) ToFormatPtrOutputWithContext(ctx context.Context) FormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FormatPtrOutput)
}

// Type of the schema.
type SchemaType string

const (
	// Message Schema schema type
	SchemaTypeMessageSchema = SchemaType("MessageSchema")
)

func (SchemaType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaType)(nil)).Elem()
}

func (e SchemaType) ToSchemaTypeOutput() SchemaTypeOutput {
	return pulumi.ToOutput(e).(SchemaTypeOutput)
}

func (e SchemaType) ToSchemaTypeOutputWithContext(ctx context.Context) SchemaTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaTypeOutput)
}

func (e SchemaType) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return e.ToSchemaTypePtrOutputWithContext(context.Background())
}

func (e SchemaType) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return SchemaType(e).ToSchemaTypeOutputWithContext(ctx).ToSchemaTypePtrOutputWithContext(ctx)
}

func (e SchemaType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaTypeOutput struct{ *pulumi.OutputState }

func (SchemaTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaType)(nil)).Elem()
}

func (o SchemaTypeOutput) ToSchemaTypeOutput() SchemaTypeOutput {
	return o
}

func (o SchemaTypeOutput) ToSchemaTypeOutputWithContext(ctx context.Context) SchemaTypeOutput {
	return o
}

func (o SchemaTypeOutput) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return o.ToSchemaTypePtrOutputWithContext(context.Background())
}

func (o SchemaTypeOutput) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaType) *SchemaType {
		return &v
	}).(SchemaTypePtrOutput)
}

func (o SchemaTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaType)(nil)).Elem()
}

func (o SchemaTypePtrOutput) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return o
}

func (o SchemaTypePtrOutput) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return o
}

func (o SchemaTypePtrOutput) Elem() SchemaTypeOutput {
	return o.ApplyT(func(v *SchemaType) SchemaType {
		if v != nil {
			return *v
		}
		var ret SchemaType
		return ret
	}).(SchemaTypeOutput)
}

func (o SchemaTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaTypeInput is an input type that accepts values of the SchemaType enum
// A concrete instance of `SchemaTypeInput` can be one of the following:
//
//	SchemaTypeMessageSchema
type SchemaTypeInput interface {
	pulumi.Input

	ToSchemaTypeOutput() SchemaTypeOutput
	ToSchemaTypeOutputWithContext(context.Context) SchemaTypeOutput
}

var schemaTypePtrType = reflect.TypeOf((**SchemaType)(nil)).Elem()

type SchemaTypePtrInput interface {
	pulumi.Input

	ToSchemaTypePtrOutput() SchemaTypePtrOutput
	ToSchemaTypePtrOutputWithContext(context.Context) SchemaTypePtrOutput
}

type schemaTypePtr string

func SchemaTypePtr(v string) SchemaTypePtrInput {
	return (*schemaTypePtr)(&v)
}

func (*schemaTypePtr) ElementType() reflect.Type {
	return schemaTypePtrType
}

func (in *schemaTypePtr) ToSchemaTypePtrOutput() SchemaTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaTypePtrOutput)
}

func (in *schemaTypePtr) ToSchemaTypePtrOutputWithContext(ctx context.Context) SchemaTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaTypePtrOutput)
}

// Type of managed service identity (either system assigned, or none).
type SystemAssignedServiceIdentityType string

const (
	SystemAssignedServiceIdentityTypeNone           = SystemAssignedServiceIdentityType("None")
	SystemAssignedServiceIdentityTypeSystemAssigned = SystemAssignedServiceIdentityType("SystemAssigned")
)

func (SystemAssignedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(SystemAssignedServiceIdentityTypeOutput)
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SystemAssignedServiceIdentityTypeOutput)
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return e.ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return SystemAssignedServiceIdentityType(e).ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx).ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e SystemAssignedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemAssignedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemAssignedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SystemAssignedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SystemAssignedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypeOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return o.ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAssignedServiceIdentityType) *SystemAssignedServiceIdentityType {
		return &v
	}).(SystemAssignedServiceIdentityTypePtrOutput)
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemAssignedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemAssignedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SystemAssignedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypePtrOutput) Elem() SystemAssignedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityType) SystemAssignedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret SystemAssignedServiceIdentityType
		return ret
	}).(SystemAssignedServiceIdentityTypeOutput)
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SystemAssignedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SystemAssignedServiceIdentityTypeInput is an input type that accepts values of the SystemAssignedServiceIdentityType enum
// A concrete instance of `SystemAssignedServiceIdentityTypeInput` can be one of the following:
//
//	SystemAssignedServiceIdentityTypeNone
//	SystemAssignedServiceIdentityTypeSystemAssigned
type SystemAssignedServiceIdentityTypeInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput
	ToSystemAssignedServiceIdentityTypeOutputWithContext(context.Context) SystemAssignedServiceIdentityTypeOutput
}

var systemAssignedServiceIdentityTypePtrType = reflect.TypeOf((**SystemAssignedServiceIdentityType)(nil)).Elem()

type SystemAssignedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput
	ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Context) SystemAssignedServiceIdentityTypePtrOutput
}

type systemAssignedServiceIdentityTypePtr string

func SystemAssignedServiceIdentityTypePtr(v string) SystemAssignedServiceIdentityTypePtrInput {
	return (*systemAssignedServiceIdentityTypePtr)(&v)
}

func (*systemAssignedServiceIdentityTypePtr) ElementType() reflect.Type {
	return systemAssignedServiceIdentityTypePtrType
}

func (in *systemAssignedServiceIdentityTypePtr) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(SystemAssignedServiceIdentityTypePtrOutput)
}

func (in *systemAssignedServiceIdentityTypePtr) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SystemAssignedServiceIdentityTypePtrOutput)
}

// When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.
type TopicRetainType string

const (
	// Retain the messages.
	TopicRetainTypeKeep = TopicRetainType("Keep")
	// Never retain messages.
	TopicRetainTypeNever = TopicRetainType("Never")
)

func (TopicRetainType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRetainType)(nil)).Elem()
}

func (e TopicRetainType) ToTopicRetainTypeOutput() TopicRetainTypeOutput {
	return pulumi.ToOutput(e).(TopicRetainTypeOutput)
}

func (e TopicRetainType) ToTopicRetainTypeOutputWithContext(ctx context.Context) TopicRetainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicRetainTypeOutput)
}

func (e TopicRetainType) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return e.ToTopicRetainTypePtrOutputWithContext(context.Background())
}

func (e TopicRetainType) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return TopicRetainType(e).ToTopicRetainTypeOutputWithContext(ctx).ToTopicRetainTypePtrOutputWithContext(ctx)
}

func (e TopicRetainType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicRetainType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicRetainType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicRetainType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicRetainTypeOutput struct{ *pulumi.OutputState }

func (TopicRetainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRetainType)(nil)).Elem()
}

func (o TopicRetainTypeOutput) ToTopicRetainTypeOutput() TopicRetainTypeOutput {
	return o
}

func (o TopicRetainTypeOutput) ToTopicRetainTypeOutputWithContext(ctx context.Context) TopicRetainTypeOutput {
	return o
}

func (o TopicRetainTypeOutput) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return o.ToTopicRetainTypePtrOutputWithContext(context.Background())
}

func (o TopicRetainTypeOutput) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRetainType) *TopicRetainType {
		return &v
	}).(TopicRetainTypePtrOutput)
}

func (o TopicRetainTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicRetainTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicRetainType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicRetainTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicRetainTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicRetainType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicRetainTypePtrOutput struct{ *pulumi.OutputState }

func (TopicRetainTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRetainType)(nil)).Elem()
}

func (o TopicRetainTypePtrOutput) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return o
}

func (o TopicRetainTypePtrOutput) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return o
}

func (o TopicRetainTypePtrOutput) Elem() TopicRetainTypeOutput {
	return o.ApplyT(func(v *TopicRetainType) TopicRetainType {
		if v != nil {
			return *v
		}
		var ret TopicRetainType
		return ret
	}).(TopicRetainTypeOutput)
}

func (o TopicRetainTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicRetainTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicRetainType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicRetainTypeInput is an input type that accepts values of the TopicRetainType enum
// A concrete instance of `TopicRetainTypeInput` can be one of the following:
//
//	TopicRetainTypeKeep
//	TopicRetainTypeNever
type TopicRetainTypeInput interface {
	pulumi.Input

	ToTopicRetainTypeOutput() TopicRetainTypeOutput
	ToTopicRetainTypeOutputWithContext(context.Context) TopicRetainTypeOutput
}

var topicRetainTypePtrType = reflect.TypeOf((**TopicRetainType)(nil)).Elem()

type TopicRetainTypePtrInput interface {
	pulumi.Input

	ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput
	ToTopicRetainTypePtrOutputWithContext(context.Context) TopicRetainTypePtrOutput
}

type topicRetainTypePtr string

func TopicRetainTypePtr(v string) TopicRetainTypePtrInput {
	return (*topicRetainTypePtr)(&v)
}

func (*topicRetainTypePtr) ElementType() reflect.Type {
	return topicRetainTypePtrType
}

func (in *topicRetainTypePtr) ToTopicRetainTypePtrOutput() TopicRetainTypePtrOutput {
	return pulumi.ToOutput(in).(TopicRetainTypePtrOutput)
}

func (in *topicRetainTypePtr) ToTopicRetainTypePtrOutputWithContext(ctx context.Context) TopicRetainTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicRetainTypePtrOutput)
}

// Defines the method to authenticate the user of the client at the server.
type UserAuthenticationMode string

const (
	// The user authentication method is anonymous.
	UserAuthenticationModeAnonymous = UserAuthenticationMode("Anonymous")
	// The user authentication method is an x509 certificate.
	UserAuthenticationModeCertificate = UserAuthenticationMode("Certificate")
	// The user authentication method is a username and password.
	UserAuthenticationModeUsernamePassword = UserAuthenticationMode("UsernamePassword")
)

func (UserAuthenticationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAuthenticationMode)(nil)).Elem()
}

func (e UserAuthenticationMode) ToUserAuthenticationModeOutput() UserAuthenticationModeOutput {
	return pulumi.ToOutput(e).(UserAuthenticationModeOutput)
}

func (e UserAuthenticationMode) ToUserAuthenticationModeOutputWithContext(ctx context.Context) UserAuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserAuthenticationModeOutput)
}

func (e UserAuthenticationMode) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return e.ToUserAuthenticationModePtrOutputWithContext(context.Background())
}

func (e UserAuthenticationMode) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return UserAuthenticationMode(e).ToUserAuthenticationModeOutputWithContext(ctx).ToUserAuthenticationModePtrOutputWithContext(ctx)
}

func (e UserAuthenticationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserAuthenticationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserAuthenticationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserAuthenticationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserAuthenticationModeOutput struct{ *pulumi.OutputState }

func (UserAuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAuthenticationMode)(nil)).Elem()
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModeOutput() UserAuthenticationModeOutput {
	return o
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModeOutputWithContext(ctx context.Context) UserAuthenticationModeOutput {
	return o
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return o.ToUserAuthenticationModePtrOutputWithContext(context.Background())
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAuthenticationMode) *UserAuthenticationMode {
		return &v
	}).(UserAuthenticationModePtrOutput)
}

func (o UserAuthenticationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserAuthenticationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserAuthenticationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserAuthenticationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserAuthenticationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserAuthenticationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserAuthenticationModePtrOutput struct{ *pulumi.OutputState }

func (UserAuthenticationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAuthenticationMode)(nil)).Elem()
}

func (o UserAuthenticationModePtrOutput) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return o
}

func (o UserAuthenticationModePtrOutput) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return o
}

func (o UserAuthenticationModePtrOutput) Elem() UserAuthenticationModeOutput {
	return o.ApplyT(func(v *UserAuthenticationMode) UserAuthenticationMode {
		if v != nil {
			return *v
		}
		var ret UserAuthenticationMode
		return ret
	}).(UserAuthenticationModeOutput)
}

func (o UserAuthenticationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserAuthenticationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserAuthenticationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserAuthenticationModeInput is an input type that accepts values of the UserAuthenticationMode enum
// A concrete instance of `UserAuthenticationModeInput` can be one of the following:
//
//	UserAuthenticationModeAnonymous
//	UserAuthenticationModeCertificate
//	UserAuthenticationModeUsernamePassword
type UserAuthenticationModeInput interface {
	pulumi.Input

	ToUserAuthenticationModeOutput() UserAuthenticationModeOutput
	ToUserAuthenticationModeOutputWithContext(context.Context) UserAuthenticationModeOutput
}

var userAuthenticationModePtrType = reflect.TypeOf((**UserAuthenticationMode)(nil)).Elem()

type UserAuthenticationModePtrInput interface {
	pulumi.Input

	ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput
	ToUserAuthenticationModePtrOutputWithContext(context.Context) UserAuthenticationModePtrOutput
}

type userAuthenticationModePtr string

func UserAuthenticationModePtr(v string) UserAuthenticationModePtrInput {
	return (*userAuthenticationModePtr)(&v)
}

func (*userAuthenticationModePtr) ElementType() reflect.Type {
	return userAuthenticationModePtrType
}

func (in *userAuthenticationModePtr) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return pulumi.ToOutput(in).(UserAuthenticationModePtrOutput)
}

func (in *userAuthenticationModePtr) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserAuthenticationModePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationMethodOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodPtrOutput{})
	pulumi.RegisterOutputType(DataPointsObservabilityModeOutput{})
	pulumi.RegisterOutputType(DataPointsObservabilityModePtrOutput{})
	pulumi.RegisterOutputType(EventsObservabilityModeOutput{})
	pulumi.RegisterOutputType(EventsObservabilityModePtrOutput{})
	pulumi.RegisterOutputType(FormatOutput{})
	pulumi.RegisterOutputType(FormatPtrOutput{})
	pulumi.RegisterOutputType(SchemaTypeOutput{})
	pulumi.RegisterOutputType(SchemaTypePtrOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(TopicRetainTypeOutput{})
	pulumi.RegisterOutputType(TopicRetainTypePtrOutput{})
	pulumi.RegisterOutputType(UserAuthenticationModeOutput{})
	pulumi.RegisterOutputType(UserAuthenticationModePtrOutput{})
}
