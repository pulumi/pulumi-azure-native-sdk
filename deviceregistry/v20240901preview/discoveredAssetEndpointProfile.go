// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Discovered Asset Endpoint Profile definition.
type DiscoveredAssetEndpointProfile struct {
	pulumi.CustomResourceState

	// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
	AdditionalConfiguration pulumi.StringPtrOutput `pulumi:"additionalConfiguration"`
	// Identifier used to detect changes in the asset endpoint profile.
	DiscoveryId pulumi.StringOutput `pulumi:"discoveryId"`
	// Defines the configuration for the connector type that is being used with the endpoint profile.
	EndpointProfileType pulumi.StringOutput `pulumi:"endpointProfileType"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// List of supported authentication methods supported by the target server.
	SupportedAuthenticationMethods pulumi.StringArrayOutput `pulumi:"supportedAuthenticationMethods"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
	TargetAddress pulumi.StringOutput `pulumi:"targetAddress"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// An integer that is incremented each time the resource is modified.
	Version pulumi.Float64Output `pulumi:"version"`
}

// NewDiscoveredAssetEndpointProfile registers a new resource with the given unique name, arguments, and options.
func NewDiscoveredAssetEndpointProfile(ctx *pulumi.Context,
	name string, args *DiscoveredAssetEndpointProfileArgs, opts ...pulumi.ResourceOption) (*DiscoveredAssetEndpointProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiscoveryId == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveryId'")
	}
	if args.EndpointProfileType == nil {
		return nil, errors.New("invalid value for required argument 'EndpointProfileType'")
	}
	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TargetAddress == nil {
		return nil, errors.New("invalid value for required argument 'TargetAddress'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:deviceregistry:DiscoveredAssetEndpointProfile"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DiscoveredAssetEndpointProfile
	err := ctx.RegisterResource("azure-native:deviceregistry/v20240901preview:DiscoveredAssetEndpointProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoveredAssetEndpointProfile gets an existing DiscoveredAssetEndpointProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoveredAssetEndpointProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoveredAssetEndpointProfileState, opts ...pulumi.ResourceOption) (*DiscoveredAssetEndpointProfile, error) {
	var resource DiscoveredAssetEndpointProfile
	err := ctx.ReadResource("azure-native:deviceregistry/v20240901preview:DiscoveredAssetEndpointProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoveredAssetEndpointProfile resources.
type discoveredAssetEndpointProfileState struct {
}

type DiscoveredAssetEndpointProfileState struct {
}

func (DiscoveredAssetEndpointProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveredAssetEndpointProfileState)(nil)).Elem()
}

type discoveredAssetEndpointProfileArgs struct {
	// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
	AdditionalConfiguration *string `pulumi:"additionalConfiguration"`
	// Discovered Asset Endpoint Profile name parameter.
	DiscoveredAssetEndpointProfileName *string `pulumi:"discoveredAssetEndpointProfileName"`
	// Identifier used to detect changes in the asset endpoint profile.
	DiscoveryId string `pulumi:"discoveryId"`
	// Defines the configuration for the connector type that is being used with the endpoint profile.
	EndpointProfileType string `pulumi:"endpointProfileType"`
	// The extended location.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// List of supported authentication methods supported by the target server.
	SupportedAuthenticationMethods []string `pulumi:"supportedAuthenticationMethods"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
	TargetAddress string `pulumi:"targetAddress"`
	// An integer that is incremented each time the resource is modified.
	Version float64 `pulumi:"version"`
}

// The set of arguments for constructing a DiscoveredAssetEndpointProfile resource.
type DiscoveredAssetEndpointProfileArgs struct {
	// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
	AdditionalConfiguration pulumi.StringPtrInput
	// Discovered Asset Endpoint Profile name parameter.
	DiscoveredAssetEndpointProfileName pulumi.StringPtrInput
	// Identifier used to detect changes in the asset endpoint profile.
	DiscoveryId pulumi.StringInput
	// Defines the configuration for the connector type that is being used with the endpoint profile.
	EndpointProfileType pulumi.StringInput
	// The extended location.
	ExtendedLocation ExtendedLocationInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// List of supported authentication methods supported by the target server.
	SupportedAuthenticationMethods pulumi.StringArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
	TargetAddress pulumi.StringInput
	// An integer that is incremented each time the resource is modified.
	Version pulumi.Float64Input
}

func (DiscoveredAssetEndpointProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveredAssetEndpointProfileArgs)(nil)).Elem()
}

type DiscoveredAssetEndpointProfileInput interface {
	pulumi.Input

	ToDiscoveredAssetEndpointProfileOutput() DiscoveredAssetEndpointProfileOutput
	ToDiscoveredAssetEndpointProfileOutputWithContext(ctx context.Context) DiscoveredAssetEndpointProfileOutput
}

func (*DiscoveredAssetEndpointProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveredAssetEndpointProfile)(nil)).Elem()
}

func (i *DiscoveredAssetEndpointProfile) ToDiscoveredAssetEndpointProfileOutput() DiscoveredAssetEndpointProfileOutput {
	return i.ToDiscoveredAssetEndpointProfileOutputWithContext(context.Background())
}

func (i *DiscoveredAssetEndpointProfile) ToDiscoveredAssetEndpointProfileOutputWithContext(ctx context.Context) DiscoveredAssetEndpointProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveredAssetEndpointProfileOutput)
}

type DiscoveredAssetEndpointProfileOutput struct{ *pulumi.OutputState }

func (DiscoveredAssetEndpointProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveredAssetEndpointProfile)(nil)).Elem()
}

func (o DiscoveredAssetEndpointProfileOutput) ToDiscoveredAssetEndpointProfileOutput() DiscoveredAssetEndpointProfileOutput {
	return o
}

func (o DiscoveredAssetEndpointProfileOutput) ToDiscoveredAssetEndpointProfileOutputWithContext(ctx context.Context) DiscoveredAssetEndpointProfileOutput {
	return o
}

// Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).
func (o DiscoveredAssetEndpointProfileOutput) AdditionalConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringPtrOutput { return v.AdditionalConfiguration }).(pulumi.StringPtrOutput)
}

// Identifier used to detect changes in the asset endpoint profile.
func (o DiscoveredAssetEndpointProfileOutput) DiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.DiscoveryId }).(pulumi.StringOutput)
}

// Defines the configuration for the connector type that is being used with the endpoint profile.
func (o DiscoveredAssetEndpointProfileOutput) EndpointProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.EndpointProfileType }).(pulumi.StringOutput)
}

// The extended location.
func (o DiscoveredAssetEndpointProfileOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// The geo-location where the resource lives
func (o DiscoveredAssetEndpointProfileOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o DiscoveredAssetEndpointProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o DiscoveredAssetEndpointProfileOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of supported authentication methods supported by the target server.
func (o DiscoveredAssetEndpointProfileOutput) SupportedAuthenticationMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringArrayOutput {
		return v.SupportedAuthenticationMethods
	}).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DiscoveredAssetEndpointProfileOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DiscoveredAssetEndpointProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
func (o DiscoveredAssetEndpointProfileOutput) TargetAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.TargetAddress }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DiscoveredAssetEndpointProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// An integer that is incremented each time the resource is modified.
func (o DiscoveredAssetEndpointProfileOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v *DiscoveredAssetEndpointProfile) pulumi.Float64Output { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(DiscoveredAssetEndpointProfileOutput{})
}
