// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Device definition.
//
// Uses Azure REST API version 2025-07-01-preview.
//
// Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type NamespaceDevice struct {
	pulumi.CustomResourceState

	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes pulumi.AnyOutput `pulumi:"attributes"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
	DiscoveredDeviceRef pulumi.StringPtrOutput `pulumi:"discoveredDeviceRef"`
	// Indicates if the resource is enabled or not.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Property bag containing the device's unassigned and assigned endpoints.
	Endpoints MessagingEndpointsResponsePtrOutput `pulumi:"endpoints"`
	// Resource Tag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// The Device ID provided by the customer.
	ExternalDeviceId pulumi.StringPtrOutput `pulumi:"externalDeviceId"`
	// A timestamp (in UTC) that is updated each time the resource is modified.
	LastTransitionTime pulumi.StringOutput `pulumi:"lastTransitionTime"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Device manufacturer.
	Manufacturer pulumi.StringPtrOutput `pulumi:"manufacturer"`
	// Device model.
	Model pulumi.StringPtrOutput `pulumi:"model"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Device operating system.
	OperatingSystem pulumi.StringPtrOutput `pulumi:"operatingSystem"`
	// Device operating system version.
	OperatingSystemVersion pulumi.StringPtrOutput `pulumi:"operatingSystemVersion"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Device status updates.
	Status DeviceStatusResponseOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// A unique identifier for the device.
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// An integer that is incremented each time the resource is modified.
	Version pulumi.Float64Output `pulumi:"version"`
}

// NewNamespaceDevice registers a new resource with the given unique name, arguments, and options.
func NewNamespaceDevice(ctx *pulumi.Context,
	name string, args *NamespaceDeviceArgs, opts ...pulumi.ResourceOption) (*NamespaceDevice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Enabled == nil {
		args.Enabled = pulumi.BoolPtr(true)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:deviceregistry/v20250701preview:NamespaceDevice"),
		},
		{
			Type: pulumi.String("azure-native:deviceregistry/v20251001:NamespaceDevice"),
		},
		{
			Type: pulumi.String("azure-native:deviceregistry/v20251101preview:NamespaceDevice"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NamespaceDevice
	err := ctx.RegisterResource("azure-native:deviceregistry:NamespaceDevice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceDevice gets an existing NamespaceDevice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceDeviceState, opts ...pulumi.ResourceOption) (*NamespaceDevice, error) {
	var resource NamespaceDevice
	err := ctx.ReadResource("azure-native:deviceregistry:NamespaceDevice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceDevice resources.
type namespaceDeviceState struct {
}

type NamespaceDeviceState struct {
}

func (NamespaceDeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceDeviceState)(nil)).Elem()
}

type namespaceDeviceArgs struct {
	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes interface{} `pulumi:"attributes"`
	// The name of the device.
	DeviceName *string `pulumi:"deviceName"`
	// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
	DiscoveredDeviceRef *string `pulumi:"discoveredDeviceRef"`
	// Indicates if the resource is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// Property bag containing the device's unassigned and assigned endpoints.
	Endpoints *MessagingEndpoints `pulumi:"endpoints"`
	// The extended location.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// The Device ID provided by the customer.
	ExternalDeviceId *string `pulumi:"externalDeviceId"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Device manufacturer.
	Manufacturer *string `pulumi:"manufacturer"`
	// Device model.
	Model *string `pulumi:"model"`
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// Device operating system.
	OperatingSystem *string `pulumi:"operatingSystem"`
	// Device operating system version.
	OperatingSystemVersion *string `pulumi:"operatingSystemVersion"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NamespaceDevice resource.
type NamespaceDeviceArgs struct {
	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes pulumi.Input
	// The name of the device.
	DeviceName pulumi.StringPtrInput
	// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
	DiscoveredDeviceRef pulumi.StringPtrInput
	// Indicates if the resource is enabled or not.
	Enabled pulumi.BoolPtrInput
	// Property bag containing the device's unassigned and assigned endpoints.
	Endpoints MessagingEndpointsPtrInput
	// The extended location.
	ExtendedLocation ExtendedLocationPtrInput
	// The Device ID provided by the customer.
	ExternalDeviceId pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Device manufacturer.
	Manufacturer pulumi.StringPtrInput
	// Device model.
	Model pulumi.StringPtrInput
	// The name of the namespace.
	NamespaceName pulumi.StringInput
	// Device operating system.
	OperatingSystem pulumi.StringPtrInput
	// Device operating system version.
	OperatingSystemVersion pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (NamespaceDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceDeviceArgs)(nil)).Elem()
}

type NamespaceDeviceInput interface {
	pulumi.Input

	ToNamespaceDeviceOutput() NamespaceDeviceOutput
	ToNamespaceDeviceOutputWithContext(ctx context.Context) NamespaceDeviceOutput
}

func (*NamespaceDevice) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceDevice)(nil)).Elem()
}

func (i *NamespaceDevice) ToNamespaceDeviceOutput() NamespaceDeviceOutput {
	return i.ToNamespaceDeviceOutputWithContext(context.Background())
}

func (i *NamespaceDevice) ToNamespaceDeviceOutputWithContext(ctx context.Context) NamespaceDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceDeviceOutput)
}

type NamespaceDeviceOutput struct{ *pulumi.OutputState }

func (NamespaceDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceDevice)(nil)).Elem()
}

func (o NamespaceDeviceOutput) ToNamespaceDeviceOutput() NamespaceDeviceOutput {
	return o
}

func (o NamespaceDeviceOutput) ToNamespaceDeviceOutputWithContext(ctx context.Context) NamespaceDeviceOutput {
	return o
}

// A set of key-value pairs that contain custom attributes set by the customer.
func (o NamespaceDeviceOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.AnyOutput { return v.Attributes }).(pulumi.AnyOutput)
}

// The Azure API version of the resource.
func (o NamespaceDeviceOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
func (o NamespaceDeviceOutput) DiscoveredDeviceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringPtrOutput { return v.DiscoveredDeviceRef }).(pulumi.StringPtrOutput)
}

// Indicates if the resource is enabled or not.
func (o NamespaceDeviceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Property bag containing the device's unassigned and assigned endpoints.
func (o NamespaceDeviceOutput) Endpoints() MessagingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) MessagingEndpointsResponsePtrOutput { return v.Endpoints }).(MessagingEndpointsResponsePtrOutput)
}

// Resource Tag.
func (o NamespaceDeviceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The extended location.
func (o NamespaceDeviceOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) ExtendedLocationResponsePtrOutput { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The Device ID provided by the customer.
func (o NamespaceDeviceOutput) ExternalDeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringPtrOutput { return v.ExternalDeviceId }).(pulumi.StringPtrOutput)
}

// A timestamp (in UTC) that is updated each time the resource is modified.
func (o NamespaceDeviceOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o NamespaceDeviceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Device manufacturer.
func (o NamespaceDeviceOutput) Manufacturer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringPtrOutput { return v.Manufacturer }).(pulumi.StringPtrOutput)
}

// Device model.
func (o NamespaceDeviceOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringPtrOutput { return v.Model }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o NamespaceDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Device operating system.
func (o NamespaceDeviceOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringPtrOutput { return v.OperatingSystem }).(pulumi.StringPtrOutput)
}

// Device operating system version.
func (o NamespaceDeviceOutput) OperatingSystemVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringPtrOutput { return v.OperatingSystemVersion }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource.
func (o NamespaceDeviceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Device status updates.
func (o NamespaceDeviceOutput) Status() DeviceStatusResponseOutput {
	return o.ApplyT(func(v *NamespaceDevice) DeviceStatusResponseOutput { return v.Status }).(DeviceStatusResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o NamespaceDeviceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *NamespaceDevice) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o NamespaceDeviceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o NamespaceDeviceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// A unique identifier for the device.
func (o NamespaceDeviceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// An integer that is incremented each time the resource is modified.
func (o NamespaceDeviceOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v *NamespaceDevice) pulumi.Float64Output { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(NamespaceDeviceOutput{})
}
