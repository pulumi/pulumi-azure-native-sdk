// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a SchemaRegistry
// Azure REST API version: 2024-09-01-preview.
func LookupSchemaRegistry(ctx *pulumi.Context, args *LookupSchemaRegistryArgs, opts ...pulumi.InvokeOption) (*LookupSchemaRegistryResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSchemaRegistryResult
	err := ctx.Invoke("azure-native:deviceregistry:getSchemaRegistry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSchemaRegistryArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Schema registry name parameter.
	SchemaRegistryName string `pulumi:"schemaRegistryName"`
}

// Schema registry definition.
type LookupSchemaRegistryResult struct {
	// Human-readable description of the schema registry.
	Description *string `pulumi:"description"`
	// Human-readable display name.
	DisplayName *string `pulumi:"displayName"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed service identities assigned to this resource.
	Identity *SystemAssignedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Schema registry namespace. Uniquely identifies a schema registry within a tenant.
	Namespace string `pulumi:"namespace"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Storage Account's Container URL where schemas will be stored.
	StorageAccountContainerUrl string `pulumi:"storageAccountContainerUrl"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Globally unique, immutable, non-reusable id.
	Uuid string `pulumi:"uuid"`
}

func LookupSchemaRegistryOutput(ctx *pulumi.Context, args LookupSchemaRegistryOutputArgs, opts ...pulumi.InvokeOption) LookupSchemaRegistryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSchemaRegistryResultOutput, error) {
			args := v.(LookupSchemaRegistryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:deviceregistry:getSchemaRegistry", args, LookupSchemaRegistryResultOutput{}, options).(LookupSchemaRegistryResultOutput), nil
		}).(LookupSchemaRegistryResultOutput)
}

type LookupSchemaRegistryOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Schema registry name parameter.
	SchemaRegistryName pulumi.StringInput `pulumi:"schemaRegistryName"`
}

func (LookupSchemaRegistryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaRegistryArgs)(nil)).Elem()
}

// Schema registry definition.
type LookupSchemaRegistryResultOutput struct{ *pulumi.OutputState }

func (LookupSchemaRegistryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaRegistryResult)(nil)).Elem()
}

func (o LookupSchemaRegistryResultOutput) ToLookupSchemaRegistryResultOutput() LookupSchemaRegistryResultOutput {
	return o
}

func (o LookupSchemaRegistryResultOutput) ToLookupSchemaRegistryResultOutputWithContext(ctx context.Context) LookupSchemaRegistryResultOutput {
	return o
}

// Human-readable description of the schema registry.
func (o LookupSchemaRegistryResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Human-readable display name.
func (o LookupSchemaRegistryResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSchemaRegistryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o LookupSchemaRegistryResultOutput) Identity() SystemAssignedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) *SystemAssignedServiceIdentityResponse { return v.Identity }).(SystemAssignedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupSchemaRegistryResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSchemaRegistryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.Name }).(pulumi.StringOutput)
}

// Schema registry namespace. Uniquely identifies a schema registry within a tenant.
func (o LookupSchemaRegistryResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupSchemaRegistryResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Storage Account's Container URL where schemas will be stored.
func (o LookupSchemaRegistryResultOutput) StorageAccountContainerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.StorageAccountContainerUrl }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSchemaRegistryResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSchemaRegistryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSchemaRegistryResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.Type }).(pulumi.StringOutput)
}

// Globally unique, immutable, non-reusable id.
func (o LookupSchemaRegistryResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchemaRegistryResultOutput{})
}
