// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a NamespaceDevice
//
// Uses Azure REST API version 2025-07-01-preview.
//
// Other available API versions: 2025-10-01, 2025-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native deviceregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupNamespaceDevice(ctx *pulumi.Context, args *LookupNamespaceDeviceArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceDeviceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNamespaceDeviceResult
	err := ctx.Invoke("azure-native:deviceregistry:getNamespaceDevice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupNamespaceDeviceArgs struct {
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Device definition.
type LookupNamespaceDeviceResult struct {
	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes interface{} `pulumi:"attributes"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
	DiscoveredDeviceRef *string `pulumi:"discoveredDeviceRef"`
	// Indicates if the resource is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// Property bag containing the device's unassigned and assigned endpoints.
	Endpoints *MessagingEndpointsResponse `pulumi:"endpoints"`
	// Resource Tag.
	Etag string `pulumi:"etag"`
	// The extended location.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The Device ID provided by the customer.
	ExternalDeviceId *string `pulumi:"externalDeviceId"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// A timestamp (in UTC) that is updated each time the resource is modified.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Device manufacturer.
	Manufacturer *string `pulumi:"manufacturer"`
	// Device model.
	Model *string `pulumi:"model"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Device operating system.
	OperatingSystem *string `pulumi:"operatingSystem"`
	// Device operating system version.
	OperatingSystemVersion *string `pulumi:"operatingSystemVersion"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Device status updates.
	Status DeviceStatusResponse `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// A unique identifier for the device.
	Uuid string `pulumi:"uuid"`
	// An integer that is incremented each time the resource is modified.
	Version float64 `pulumi:"version"`
}

// Defaults sets the appropriate defaults for LookupNamespaceDeviceResult
func (val *LookupNamespaceDeviceResult) Defaults() *LookupNamespaceDeviceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enabled == nil {
		enabled_ := true
		tmp.Enabled = &enabled_
	}
	return &tmp
}
func LookupNamespaceDeviceOutput(ctx *pulumi.Context, args LookupNamespaceDeviceOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceDeviceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNamespaceDeviceResultOutput, error) {
			args := v.(LookupNamespaceDeviceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:deviceregistry:getNamespaceDevice", args, LookupNamespaceDeviceResultOutput{}, options).(LookupNamespaceDeviceResultOutput), nil
		}).(LookupNamespaceDeviceResultOutput)
}

type LookupNamespaceDeviceOutputArgs struct {
	// The name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNamespaceDeviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceDeviceArgs)(nil)).Elem()
}

// Device definition.
type LookupNamespaceDeviceResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceDeviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceDeviceResult)(nil)).Elem()
}

func (o LookupNamespaceDeviceResultOutput) ToLookupNamespaceDeviceResultOutput() LookupNamespaceDeviceResultOutput {
	return o
}

func (o LookupNamespaceDeviceResultOutput) ToLookupNamespaceDeviceResultOutputWithContext(ctx context.Context) LookupNamespaceDeviceResultOutput {
	return o
}

// A set of key-value pairs that contain custom attributes set by the customer.
func (o LookupNamespaceDeviceResultOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) interface{} { return v.Attributes }).(pulumi.AnyOutput)
}

// The Azure API version of the resource.
func (o LookupNamespaceDeviceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.
func (o LookupNamespaceDeviceResultOutput) DiscoveredDeviceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *string { return v.DiscoveredDeviceRef }).(pulumi.StringPtrOutput)
}

// Indicates if the resource is enabled or not.
func (o LookupNamespaceDeviceResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Property bag containing the device's unassigned and assigned endpoints.
func (o LookupNamespaceDeviceResultOutput) Endpoints() MessagingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *MessagingEndpointsResponse { return v.Endpoints }).(MessagingEndpointsResponsePtrOutput)
}

// Resource Tag.
func (o LookupNamespaceDeviceResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location.
func (o LookupNamespaceDeviceResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The Device ID provided by the customer.
func (o LookupNamespaceDeviceResultOutput) ExternalDeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *string { return v.ExternalDeviceId }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupNamespaceDeviceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.Id }).(pulumi.StringOutput)
}

// A timestamp (in UTC) that is updated each time the resource is modified.
func (o LookupNamespaceDeviceResultOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupNamespaceDeviceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.Location }).(pulumi.StringOutput)
}

// Device manufacturer.
func (o LookupNamespaceDeviceResultOutput) Manufacturer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *string { return v.Manufacturer }).(pulumi.StringPtrOutput)
}

// Device model.
func (o LookupNamespaceDeviceResultOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupNamespaceDeviceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Device operating system.
func (o LookupNamespaceDeviceResultOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *string { return v.OperatingSystem }).(pulumi.StringPtrOutput)
}

// Device operating system version.
func (o LookupNamespaceDeviceResultOutput) OperatingSystemVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) *string { return v.OperatingSystemVersion }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource.
func (o LookupNamespaceDeviceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Device status updates.
func (o LookupNamespaceDeviceResultOutput) Status() DeviceStatusResponseOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) DeviceStatusResponse { return v.Status }).(DeviceStatusResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupNamespaceDeviceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupNamespaceDeviceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupNamespaceDeviceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.Type }).(pulumi.StringOutput)
}

// A unique identifier for the device.
func (o LookupNamespaceDeviceResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) string { return v.Uuid }).(pulumi.StringOutput)
}

// An integer that is incremented each time the resource is modified.
func (o LookupNamespaceDeviceResultOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v LookupNamespaceDeviceResult) float64 { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceDeviceResultOutput{})
}
