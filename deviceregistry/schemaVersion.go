// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema version's definition.
// Azure REST API version: 2024-09-01-preview.
type SchemaVersion struct {
	pulumi.CustomResourceState

	// Human-readable description of the schema.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Hash of the schema content.
	Hash pulumi.StringOutput `pulumi:"hash"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Schema content.
	SchemaContent pulumi.StringOutput `pulumi:"schemaContent"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Globally unique, immutable, non-reusable id.
	Uuid pulumi.StringOutput `pulumi:"uuid"`
}

// NewSchemaVersion registers a new resource with the given unique name, arguments, and options.
func NewSchemaVersion(ctx *pulumi.Context,
	name string, args *SchemaVersionArgs, opts ...pulumi.ResourceOption) (*SchemaVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SchemaContent == nil {
		return nil, errors.New("invalid value for required argument 'SchemaContent'")
	}
	if args.SchemaName == nil {
		return nil, errors.New("invalid value for required argument 'SchemaName'")
	}
	if args.SchemaRegistryName == nil {
		return nil, errors.New("invalid value for required argument 'SchemaRegistryName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:deviceregistry/v20240901preview:SchemaVersion"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SchemaVersion
	err := ctx.RegisterResource("azure-native:deviceregistry:SchemaVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSchemaVersion gets an existing SchemaVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSchemaVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SchemaVersionState, opts ...pulumi.ResourceOption) (*SchemaVersion, error) {
	var resource SchemaVersion
	err := ctx.ReadResource("azure-native:deviceregistry:SchemaVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SchemaVersion resources.
type schemaVersionState struct {
}

type SchemaVersionState struct {
}

func (SchemaVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*schemaVersionState)(nil)).Elem()
}

type schemaVersionArgs struct {
	// Human-readable description of the schema.
	Description *string `pulumi:"description"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Schema content.
	SchemaContent string `pulumi:"schemaContent"`
	// Schema name parameter.
	SchemaName string `pulumi:"schemaName"`
	// Schema registry name parameter.
	SchemaRegistryName string `pulumi:"schemaRegistryName"`
	// Schema version name parameter.
	SchemaVersionName *string `pulumi:"schemaVersionName"`
}

// The set of arguments for constructing a SchemaVersion resource.
type SchemaVersionArgs struct {
	// Human-readable description of the schema.
	Description pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Schema content.
	SchemaContent pulumi.StringInput
	// Schema name parameter.
	SchemaName pulumi.StringInput
	// Schema registry name parameter.
	SchemaRegistryName pulumi.StringInput
	// Schema version name parameter.
	SchemaVersionName pulumi.StringPtrInput
}

func (SchemaVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*schemaVersionArgs)(nil)).Elem()
}

type SchemaVersionInput interface {
	pulumi.Input

	ToSchemaVersionOutput() SchemaVersionOutput
	ToSchemaVersionOutputWithContext(ctx context.Context) SchemaVersionOutput
}

func (*SchemaVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaVersion)(nil)).Elem()
}

func (i *SchemaVersion) ToSchemaVersionOutput() SchemaVersionOutput {
	return i.ToSchemaVersionOutputWithContext(context.Background())
}

func (i *SchemaVersion) ToSchemaVersionOutputWithContext(ctx context.Context) SchemaVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaVersionOutput)
}

type SchemaVersionOutput struct{ *pulumi.OutputState }

func (SchemaVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaVersion)(nil)).Elem()
}

func (o SchemaVersionOutput) ToSchemaVersionOutput() SchemaVersionOutput {
	return o
}

func (o SchemaVersionOutput) ToSchemaVersionOutputWithContext(ctx context.Context) SchemaVersionOutput {
	return o
}

// Human-readable description of the schema.
func (o SchemaVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Hash of the schema content.
func (o SchemaVersionOutput) Hash() pulumi.StringOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringOutput { return v.Hash }).(pulumi.StringOutput)
}

// The name of the resource
func (o SchemaVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o SchemaVersionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Schema content.
func (o SchemaVersionOutput) SchemaContent() pulumi.StringOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringOutput { return v.SchemaContent }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SchemaVersionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SchemaVersion) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SchemaVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Globally unique, immutable, non-reusable id.
func (o SchemaVersionOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *SchemaVersion) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SchemaVersionOutput{})
}
