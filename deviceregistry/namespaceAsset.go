// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deviceregistry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Asset definition.
//
// Uses Azure REST API version 2025-07-01-preview.
type NamespaceAsset struct {
	pulumi.CustomResourceState

	// URIs or type definition IDs.
	AssetTypeRefs pulumi.StringArrayOutput `pulumi:"assetTypeRefs"`
	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes pulumi.AnyOutput `pulumi:"attributes"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
	Datasets NamespaceDatasetResponseArrayOutput `pulumi:"datasets"`
	// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
	DefaultDatasetsConfiguration pulumi.StringPtrOutput `pulumi:"defaultDatasetsConfiguration"`
	// Default destinations for a dataset.
	DefaultDatasetsDestinations pulumi.ArrayOutput `pulumi:"defaultDatasetsDestinations"`
	// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
	DefaultEventsConfiguration pulumi.StringPtrOutput `pulumi:"defaultEventsConfiguration"`
	// Default destinations for an event.
	DefaultEventsDestinations pulumi.ArrayOutput `pulumi:"defaultEventsDestinations"`
	// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
	DefaultManagementGroupsConfiguration pulumi.StringPtrOutput `pulumi:"defaultManagementGroupsConfiguration"`
	// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
	DefaultStreamsConfiguration pulumi.StringPtrOutput `pulumi:"defaultStreamsConfiguration"`
	// Default destinations for a stream.
	DefaultStreamsDestinations pulumi.ArrayOutput `pulumi:"defaultStreamsDestinations"`
	// Human-readable description of the asset.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
	DeviceRef DeviceRefResponseOutput `pulumi:"deviceRef"`
	// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
	DiscoveredAssetRefs pulumi.StringArrayOutput `pulumi:"discoveredAssetRefs"`
	// Human-readable display name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Asset documentation reference.
	DocumentationUri pulumi.StringPtrOutput `pulumi:"documentationUri"`
	// Enabled/disabled status of the asset.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Array of events that are part of the asset. Each event can have per-event configuration.
	Events NamespaceEventResponseArrayOutput `pulumi:"events"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// Asset ID provided by the customer.
	ExternalAssetId pulumi.StringPtrOutput `pulumi:"externalAssetId"`
	// Asset hardware revision number.
	HardwareRevision pulumi.StringPtrOutput `pulumi:"hardwareRevision"`
	// A timestamp (in UTC) that is updated each time the resource is modified.
	LastTransitionTime pulumi.StringOutput `pulumi:"lastTransitionTime"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
	ManagementGroups ManagementGroupResponseArrayOutput `pulumi:"managementGroups"`
	// Asset manufacturer.
	Manufacturer pulumi.StringPtrOutput `pulumi:"manufacturer"`
	// Asset manufacturer URI.
	ManufacturerUri pulumi.StringPtrOutput `pulumi:"manufacturerUri"`
	// Asset model.
	Model pulumi.StringPtrOutput `pulumi:"model"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Asset product code.
	ProductCode pulumi.StringPtrOutput `pulumi:"productCode"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Asset serial number.
	SerialNumber pulumi.StringPtrOutput `pulumi:"serialNumber"`
	// Asset software revision number.
	SoftwareRevision pulumi.StringPtrOutput `pulumi:"softwareRevision"`
	// Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
	Status NamespaceAssetStatusResponseOutput `pulumi:"status"`
	// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
	Streams NamespaceStreamResponseArrayOutput `pulumi:"streams"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Globally unique, immutable, non-reusable ID.
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// An integer that is incremented each time the resource is modified.
	Version pulumi.Float64Output `pulumi:"version"`
}

// NewNamespaceAsset registers a new resource with the given unique name, arguments, and options.
func NewNamespaceAsset(ctx *pulumi.Context,
	name string, args *NamespaceAssetArgs, opts ...pulumi.ResourceOption) (*NamespaceAsset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeviceRef == nil {
		return nil, errors.New("invalid value for required argument 'DeviceRef'")
	}
	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:deviceregistry/v20250701preview:NamespaceAsset"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NamespaceAsset
	err := ctx.RegisterResource("azure-native:deviceregistry:NamespaceAsset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceAsset gets an existing NamespaceAsset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceAsset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceAssetState, opts ...pulumi.ResourceOption) (*NamespaceAsset, error) {
	var resource NamespaceAsset
	err := ctx.ReadResource("azure-native:deviceregistry:NamespaceAsset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceAsset resources.
type namespaceAssetState struct {
}

type NamespaceAssetState struct {
}

func (NamespaceAssetState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceAssetState)(nil)).Elem()
}

type namespaceAssetArgs struct {
	// The name of the asset.
	AssetName *string `pulumi:"assetName"`
	// URIs or type definition IDs.
	AssetTypeRefs []string `pulumi:"assetTypeRefs"`
	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes interface{} `pulumi:"attributes"`
	// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
	Datasets []NamespaceDataset `pulumi:"datasets"`
	// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
	DefaultDatasetsConfiguration *string `pulumi:"defaultDatasetsConfiguration"`
	// Default destinations for a dataset.
	DefaultDatasetsDestinations []interface{} `pulumi:"defaultDatasetsDestinations"`
	// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
	DefaultEventsConfiguration *string `pulumi:"defaultEventsConfiguration"`
	// Default destinations for an event.
	DefaultEventsDestinations []interface{} `pulumi:"defaultEventsDestinations"`
	// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
	DefaultManagementGroupsConfiguration *string `pulumi:"defaultManagementGroupsConfiguration"`
	// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
	DefaultStreamsConfiguration *string `pulumi:"defaultStreamsConfiguration"`
	// Default destinations for a stream.
	DefaultStreamsDestinations []interface{} `pulumi:"defaultStreamsDestinations"`
	// Human-readable description of the asset.
	Description *string `pulumi:"description"`
	// Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
	DeviceRef DeviceRef `pulumi:"deviceRef"`
	// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
	DiscoveredAssetRefs []string `pulumi:"discoveredAssetRefs"`
	// Human-readable display name.
	DisplayName *string `pulumi:"displayName"`
	// Asset documentation reference.
	DocumentationUri *string `pulumi:"documentationUri"`
	// Enabled/disabled status of the asset.
	Enabled *bool `pulumi:"enabled"`
	// Array of events that are part of the asset. Each event can have per-event configuration.
	Events []NamespaceEvent `pulumi:"events"`
	// The extended location.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// Asset ID provided by the customer.
	ExternalAssetId *string `pulumi:"externalAssetId"`
	// Asset hardware revision number.
	HardwareRevision *string `pulumi:"hardwareRevision"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
	ManagementGroups []ManagementGroup `pulumi:"managementGroups"`
	// Asset manufacturer.
	Manufacturer *string `pulumi:"manufacturer"`
	// Asset manufacturer URI.
	ManufacturerUri *string `pulumi:"manufacturerUri"`
	// Asset model.
	Model *string `pulumi:"model"`
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// Asset product code.
	ProductCode *string `pulumi:"productCode"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Asset serial number.
	SerialNumber *string `pulumi:"serialNumber"`
	// Asset software revision number.
	SoftwareRevision *string `pulumi:"softwareRevision"`
	// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
	Streams []NamespaceStream `pulumi:"streams"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NamespaceAsset resource.
type NamespaceAssetArgs struct {
	// The name of the asset.
	AssetName pulumi.StringPtrInput
	// URIs or type definition IDs.
	AssetTypeRefs pulumi.StringArrayInput
	// A set of key-value pairs that contain custom attributes set by the customer.
	Attributes pulumi.Input
	// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
	Datasets NamespaceDatasetArrayInput
	// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
	DefaultDatasetsConfiguration pulumi.StringPtrInput
	// Default destinations for a dataset.
	DefaultDatasetsDestinations pulumi.ArrayInput
	// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
	DefaultEventsConfiguration pulumi.StringPtrInput
	// Default destinations for an event.
	DefaultEventsDestinations pulumi.ArrayInput
	// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
	DefaultManagementGroupsConfiguration pulumi.StringPtrInput
	// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
	DefaultStreamsConfiguration pulumi.StringPtrInput
	// Default destinations for a stream.
	DefaultStreamsDestinations pulumi.ArrayInput
	// Human-readable description of the asset.
	Description pulumi.StringPtrInput
	// Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
	DeviceRef DeviceRefInput
	// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
	DiscoveredAssetRefs pulumi.StringArrayInput
	// Human-readable display name.
	DisplayName pulumi.StringPtrInput
	// Asset documentation reference.
	DocumentationUri pulumi.StringPtrInput
	// Enabled/disabled status of the asset.
	Enabled pulumi.BoolPtrInput
	// Array of events that are part of the asset. Each event can have per-event configuration.
	Events NamespaceEventArrayInput
	// The extended location.
	ExtendedLocation ExtendedLocationInput
	// Asset ID provided by the customer.
	ExternalAssetId pulumi.StringPtrInput
	// Asset hardware revision number.
	HardwareRevision pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
	ManagementGroups ManagementGroupArrayInput
	// Asset manufacturer.
	Manufacturer pulumi.StringPtrInput
	// Asset manufacturer URI.
	ManufacturerUri pulumi.StringPtrInput
	// Asset model.
	Model pulumi.StringPtrInput
	// The name of the namespace.
	NamespaceName pulumi.StringInput
	// Asset product code.
	ProductCode pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Asset serial number.
	SerialNumber pulumi.StringPtrInput
	// Asset software revision number.
	SoftwareRevision pulumi.StringPtrInput
	// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
	Streams NamespaceStreamArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (NamespaceAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceAssetArgs)(nil)).Elem()
}

type NamespaceAssetInput interface {
	pulumi.Input

	ToNamespaceAssetOutput() NamespaceAssetOutput
	ToNamespaceAssetOutputWithContext(ctx context.Context) NamespaceAssetOutput
}

func (*NamespaceAsset) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceAsset)(nil)).Elem()
}

func (i *NamespaceAsset) ToNamespaceAssetOutput() NamespaceAssetOutput {
	return i.ToNamespaceAssetOutputWithContext(context.Background())
}

func (i *NamespaceAsset) ToNamespaceAssetOutputWithContext(ctx context.Context) NamespaceAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceAssetOutput)
}

type NamespaceAssetOutput struct{ *pulumi.OutputState }

func (NamespaceAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceAsset)(nil)).Elem()
}

func (o NamespaceAssetOutput) ToNamespaceAssetOutput() NamespaceAssetOutput {
	return o
}

func (o NamespaceAssetOutput) ToNamespaceAssetOutputWithContext(ctx context.Context) NamespaceAssetOutput {
	return o
}

// URIs or type definition IDs.
func (o NamespaceAssetOutput) AssetTypeRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringArrayOutput { return v.AssetTypeRefs }).(pulumi.StringArrayOutput)
}

// A set of key-value pairs that contain custom attributes set by the customer.
func (o NamespaceAssetOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.AnyOutput { return v.Attributes }).(pulumi.AnyOutput)
}

// The Azure API version of the resource.
func (o NamespaceAssetOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
func (o NamespaceAssetOutput) Datasets() NamespaceDatasetResponseArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) NamespaceDatasetResponseArrayOutput { return v.Datasets }).(NamespaceDatasetResponseArrayOutput)
}

// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.
func (o NamespaceAssetOutput) DefaultDatasetsConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.DefaultDatasetsConfiguration }).(pulumi.StringPtrOutput)
}

// Default destinations for a dataset.
func (o NamespaceAssetOutput) DefaultDatasetsDestinations() pulumi.ArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.ArrayOutput { return v.DefaultDatasetsDestinations }).(pulumi.ArrayOutput)
}

// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.
func (o NamespaceAssetOutput) DefaultEventsConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.DefaultEventsConfiguration }).(pulumi.StringPtrOutput)
}

// Default destinations for an event.
func (o NamespaceAssetOutput) DefaultEventsDestinations() pulumi.ArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.ArrayOutput { return v.DefaultEventsDestinations }).(pulumi.ArrayOutput)
}

// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.
func (o NamespaceAssetOutput) DefaultManagementGroupsConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.DefaultManagementGroupsConfiguration }).(pulumi.StringPtrOutput)
}

// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.
func (o NamespaceAssetOutput) DefaultStreamsConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.DefaultStreamsConfiguration }).(pulumi.StringPtrOutput)
}

// Default destinations for a stream.
func (o NamespaceAssetOutput) DefaultStreamsDestinations() pulumi.ArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.ArrayOutput { return v.DefaultStreamsDestinations }).(pulumi.ArrayOutput)
}

// Human-readable description of the asset.
func (o NamespaceAssetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
func (o NamespaceAssetOutput) DeviceRef() DeviceRefResponseOutput {
	return o.ApplyT(func(v *NamespaceAsset) DeviceRefResponseOutput { return v.DeviceRef }).(DeviceRefResponseOutput)
}

// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.
func (o NamespaceAssetOutput) DiscoveredAssetRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringArrayOutput { return v.DiscoveredAssetRefs }).(pulumi.StringArrayOutput)
}

// Human-readable display name.
func (o NamespaceAssetOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Asset documentation reference.
func (o NamespaceAssetOutput) DocumentationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.DocumentationUri }).(pulumi.StringPtrOutput)
}

// Enabled/disabled status of the asset.
func (o NamespaceAssetOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of events that are part of the asset. Each event can have per-event configuration.
func (o NamespaceAssetOutput) Events() NamespaceEventResponseArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) NamespaceEventResponseArrayOutput { return v.Events }).(NamespaceEventResponseArrayOutput)
}

// The extended location.
func (o NamespaceAssetOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *NamespaceAsset) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Asset ID provided by the customer.
func (o NamespaceAssetOutput) ExternalAssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.ExternalAssetId }).(pulumi.StringPtrOutput)
}

// Asset hardware revision number.
func (o NamespaceAssetOutput) HardwareRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.HardwareRevision }).(pulumi.StringPtrOutput)
}

// A timestamp (in UTC) that is updated each time the resource is modified.
func (o NamespaceAssetOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o NamespaceAssetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
func (o NamespaceAssetOutput) ManagementGroups() ManagementGroupResponseArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) ManagementGroupResponseArrayOutput { return v.ManagementGroups }).(ManagementGroupResponseArrayOutput)
}

// Asset manufacturer.
func (o NamespaceAssetOutput) Manufacturer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.Manufacturer }).(pulumi.StringPtrOutput)
}

// Asset manufacturer URI.
func (o NamespaceAssetOutput) ManufacturerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.ManufacturerUri }).(pulumi.StringPtrOutput)
}

// Asset model.
func (o NamespaceAssetOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.Model }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o NamespaceAssetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Asset product code.
func (o NamespaceAssetOutput) ProductCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.ProductCode }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource.
func (o NamespaceAssetOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Asset serial number.
func (o NamespaceAssetOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Asset software revision number.
func (o NamespaceAssetOutput) SoftwareRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringPtrOutput { return v.SoftwareRevision }).(pulumi.StringPtrOutput)
}

// Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
func (o NamespaceAssetOutput) Status() NamespaceAssetStatusResponseOutput {
	return o.ApplyT(func(v *NamespaceAsset) NamespaceAssetStatusResponseOutput { return v.Status }).(NamespaceAssetStatusResponseOutput)
}

// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
func (o NamespaceAssetOutput) Streams() NamespaceStreamResponseArrayOutput {
	return o.ApplyT(func(v *NamespaceAsset) NamespaceStreamResponseArrayOutput { return v.Streams }).(NamespaceStreamResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o NamespaceAssetOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *NamespaceAsset) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o NamespaceAssetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o NamespaceAssetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Globally unique, immutable, non-reusable ID.
func (o NamespaceAssetOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// An integer that is incremented each time the resource is modified.
func (o NamespaceAssetOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v *NamespaceAsset) pulumi.Float64Output { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(NamespaceAssetOutput{})
}
