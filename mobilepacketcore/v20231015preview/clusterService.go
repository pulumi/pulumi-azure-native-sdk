// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231015preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure for Operators 5G Core Cluster Service Resource
type ClusterService struct {
	pulumi.CustomResourceState

	// Cluster type specific data.  Contents depend on the cluster type
	ClusterTypeSpecificData pulumi.AnyOutput `pulumi:"clusterTypeSpecificData"`
	// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
	ComponentParameters QualifiedComponentDeploymentParametersResponseArrayOutput `pulumi:"componentParameters"`
	// Cluster type (Lab or Production)
	DeploymentType pulumi.StringOutput `pulumi:"deploymentType"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Operational status
	OperationalStatus OperationalStatusResponseOutput `pulumi:"operationalStatus"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
	ReleaseVersion pulumi.StringOutput `pulumi:"releaseVersion"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewClusterService registers a new resource with the given unique name, arguments, and options.
func NewClusterService(ctx *pulumi.Context,
	name string, args *ClusterServiceArgs, opts ...pulumi.ResourceOption) (*ClusterService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterTypeSpecificData == nil {
		return nil, errors.New("invalid value for required argument 'ClusterTypeSpecificData'")
	}
	if args.ComponentParameters == nil {
		return nil, errors.New("invalid value for required argument 'ComponentParameters'")
	}
	if args.DeploymentType == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentType'")
	}
	if args.ReleaseVersion == nil {
		return nil, errors.New("invalid value for required argument 'ReleaseVersion'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mobilepacketcore:ClusterService"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterService
	err := ctx.RegisterResource("azure-native:mobilepacketcore/v20231015preview:ClusterService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterService gets an existing ClusterService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterServiceState, opts ...pulumi.ResourceOption) (*ClusterService, error) {
	var resource ClusterService
	err := ctx.ReadResource("azure-native:mobilepacketcore/v20231015preview:ClusterService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterService resources.
type clusterServiceState struct {
}

type ClusterServiceState struct {
}

func (ClusterServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterServiceState)(nil)).Elem()
}

type clusterServiceArgs struct {
	// The name of the Cluster Service
	ClusterServiceName *string `pulumi:"clusterServiceName"`
	// Cluster type specific data.  Contents depend on the cluster type
	ClusterTypeSpecificData interface{} `pulumi:"clusterTypeSpecificData"`
	// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
	ComponentParameters []QualifiedComponentDeploymentParameters `pulumi:"componentParameters"`
	// Cluster type (Lab or Production)
	DeploymentType string `pulumi:"deploymentType"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
	ReleaseVersion string `pulumi:"releaseVersion"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterService resource.
type ClusterServiceArgs struct {
	// The name of the Cluster Service
	ClusterServiceName pulumi.StringPtrInput
	// Cluster type specific data.  Contents depend on the cluster type
	ClusterTypeSpecificData pulumi.Input
	// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
	ComponentParameters QualifiedComponentDeploymentParametersArrayInput
	// Cluster type (Lab or Production)
	DeploymentType pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
	ReleaseVersion pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ClusterServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterServiceArgs)(nil)).Elem()
}

type ClusterServiceInput interface {
	pulumi.Input

	ToClusterServiceOutput() ClusterServiceOutput
	ToClusterServiceOutputWithContext(ctx context.Context) ClusterServiceOutput
}

func (*ClusterService) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterService)(nil)).Elem()
}

func (i *ClusterService) ToClusterServiceOutput() ClusterServiceOutput {
	return i.ToClusterServiceOutputWithContext(context.Background())
}

func (i *ClusterService) ToClusterServiceOutputWithContext(ctx context.Context) ClusterServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServiceOutput)
}

type ClusterServiceOutput struct{ *pulumi.OutputState }

func (ClusterServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterService)(nil)).Elem()
}

func (o ClusterServiceOutput) ToClusterServiceOutput() ClusterServiceOutput {
	return o
}

func (o ClusterServiceOutput) ToClusterServiceOutputWithContext(ctx context.Context) ClusterServiceOutput {
	return o
}

// Cluster type specific data.  Contents depend on the cluster type
func (o ClusterServiceOutput) ClusterTypeSpecificData() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.AnyOutput { return v.ClusterTypeSpecificData }).(pulumi.AnyOutput)
}

// Azure for Operators 5G Core Local PaaS component parameters.  One set per component type
func (o ClusterServiceOutput) ComponentParameters() QualifiedComponentDeploymentParametersResponseArrayOutput {
	return o.ApplyT(func(v *ClusterService) QualifiedComponentDeploymentParametersResponseArrayOutput {
		return v.ComponentParameters
	}).(QualifiedComponentDeploymentParametersResponseArrayOutput)
}

// Cluster type (Lab or Production)
func (o ClusterServiceOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringOutput { return v.DeploymentType }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o ClusterServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ClusterServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Operational status
func (o ClusterServiceOutput) OperationalStatus() OperationalStatusResponseOutput {
	return o.ApplyT(func(v *ClusterService) OperationalStatusResponseOutput { return v.OperationalStatus }).(OperationalStatusResponseOutput)
}

// The status of the last operation.
func (o ClusterServiceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure for Operators 5G Core Release Version.  This is applied to all platform as a service (PaaS) components and running workloads in this cluster
func (o ClusterServiceOutput) ReleaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringOutput { return v.ReleaseVersion }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ClusterServiceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ClusterService) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ClusterServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ClusterServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterServiceOutput{})
}
