// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230515preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AO5GC Network Function Resource
type NetworkFunction struct {
	pulumi.CustomResourceState

	// Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
	Capacity pulumi.IntPtrOutput `pulumi:"capacity"`
	// User provided deployment notes.  This is used to optionally provide details about the NF deployment
	DeploymentNotes pulumi.StringPtrOutput `pulumi:"deploymentNotes"`
	// Count of infrastructure elements used by this network function (vCPUs, in units of 8)
	InfrastructureElementCount pulumi.IntOutput `pulumi:"infrastructureElementCount"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Administrative state of the network function
	NetworkFunctionAdministrativeState pulumi.StringOutput `pulumi:"networkFunctionAdministrativeState"`
	// Operational state of the network function
	NetworkFunctionOperationalStatus pulumi.StringOutput `pulumi:"networkFunctionOperationalStatus"`
	// Type of network function
	NetworkFunctionType pulumi.StringOutput `pulumi:"networkFunctionType"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Provisioned SKU Value.
	Sku pulumi.StringOutput `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// User provided description
	UserDescription pulumi.StringPtrOutput `pulumi:"userDescription"`
}

// NewNetworkFunction registers a new resource with the given unique name, arguments, and options.
func NewNetworkFunction(ctx *pulumi.Context,
	name string, args *NetworkFunctionArgs, opts ...pulumi.ResourceOption) (*NetworkFunction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkFunctionAdministrativeState == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFunctionAdministrativeState'")
	}
	if args.NetworkFunctionType == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFunctionType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mobilepacketcore:NetworkFunction"),
		},
	})
	opts = append(opts, aliases)
	var resource NetworkFunction
	err := ctx.RegisterResource("azure-native:mobilepacketcore/v20230515preview:NetworkFunction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFunction gets an existing NetworkFunction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFunctionState, opts ...pulumi.ResourceOption) (*NetworkFunction, error) {
	var resource NetworkFunction
	err := ctx.ReadResource("azure-native:mobilepacketcore/v20230515preview:NetworkFunction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFunction resources.
type networkFunctionState struct {
}

type NetworkFunctionState struct {
}

func (NetworkFunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFunctionState)(nil)).Elem()
}

type networkFunctionArgs struct {
	// Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
	Capacity *int `pulumi:"capacity"`
	// User provided deployment notes.  This is used to optionally provide details about the NF deployment
	DeploymentNotes *string `pulumi:"deploymentNotes"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Administrative state of the network function
	NetworkFunctionAdministrativeState string `pulumi:"networkFunctionAdministrativeState"`
	// The name of the network function
	NetworkFunctionName *string `pulumi:"networkFunctionName"`
	// Type of network function
	NetworkFunctionType string `pulumi:"networkFunctionType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Provisioned SKU Value.
	Sku string `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// User provided description
	UserDescription *string `pulumi:"userDescription"`
}

// The set of arguments for constructing a NetworkFunction resource.
type NetworkFunctionArgs struct {
	// Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
	Capacity pulumi.IntPtrInput
	// User provided deployment notes.  This is used to optionally provide details about the NF deployment
	DeploymentNotes pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Administrative state of the network function
	NetworkFunctionAdministrativeState pulumi.StringInput
	// The name of the network function
	NetworkFunctionName pulumi.StringPtrInput
	// Type of network function
	NetworkFunctionType pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Provisioned SKU Value.
	Sku pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// User provided description
	UserDescription pulumi.StringPtrInput
}

func (NetworkFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFunctionArgs)(nil)).Elem()
}

type NetworkFunctionInput interface {
	pulumi.Input

	ToNetworkFunctionOutput() NetworkFunctionOutput
	ToNetworkFunctionOutputWithContext(ctx context.Context) NetworkFunctionOutput
}

func (*NetworkFunction) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFunction)(nil)).Elem()
}

func (i *NetworkFunction) ToNetworkFunctionOutput() NetworkFunctionOutput {
	return i.ToNetworkFunctionOutputWithContext(context.Background())
}

func (i *NetworkFunction) ToNetworkFunctionOutputWithContext(ctx context.Context) NetworkFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFunctionOutput)
}

type NetworkFunctionOutput struct{ *pulumi.OutputState }

func (NetworkFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFunction)(nil)).Elem()
}

func (o NetworkFunctionOutput) ToNetworkFunctionOutput() NetworkFunctionOutput {
	return o
}

func (o NetworkFunctionOutput) ToNetworkFunctionOutputWithContext(ctx context.Context) NetworkFunctionOutput {
	return o
}

// Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable
func (o NetworkFunctionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.IntPtrOutput { return v.Capacity }).(pulumi.IntPtrOutput)
}

// User provided deployment notes.  This is used to optionally provide details about the NF deployment
func (o NetworkFunctionOutput) DeploymentNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringPtrOutput { return v.DeploymentNotes }).(pulumi.StringPtrOutput)
}

// Count of infrastructure elements used by this network function (vCPUs, in units of 8)
func (o NetworkFunctionOutput) InfrastructureElementCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.IntOutput { return v.InfrastructureElementCount }).(pulumi.IntOutput)
}

// The geo-location where the resource lives
func (o NetworkFunctionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o NetworkFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Administrative state of the network function
func (o NetworkFunctionOutput) NetworkFunctionAdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.NetworkFunctionAdministrativeState }).(pulumi.StringOutput)
}

// Operational state of the network function
func (o NetworkFunctionOutput) NetworkFunctionOperationalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.NetworkFunctionOperationalStatus }).(pulumi.StringOutput)
}

// Type of network function
func (o NetworkFunctionOutput) NetworkFunctionType() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.NetworkFunctionType }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o NetworkFunctionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Provisioned SKU Value.
func (o NetworkFunctionOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Sku }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o NetworkFunctionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *NetworkFunction) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o NetworkFunctionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o NetworkFunctionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// User provided description
func (o NetworkFunctionOutput) UserDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringPtrOutput { return v.UserDescription }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkFunctionOutput{})
}
