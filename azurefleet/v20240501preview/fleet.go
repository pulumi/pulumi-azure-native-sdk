// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240501preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Compute Fleet resource
type Fleet struct {
	pulumi.CustomResourceState

	// Compute Profile to use for running user's workloads.
	ComputeProfile ComputeProfileResponseOutput `pulumi:"computeProfile"`
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Details of the resource plan.
	Plan PlanResponsePtrOutput `pulumi:"plan"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Configuration Options for Regular instances in Compute Fleet.
	RegularPriorityProfile RegularPriorityProfileResponsePtrOutput `pulumi:"regularPriorityProfile"`
	// Configuration Options for Spot instances in Compute Fleet.
	SpotPriorityProfile SpotPriorityProfileResponsePtrOutput `pulumi:"spotPriorityProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the time at which the Compute Fleet is created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the ID which uniquely identifies a Compute Fleet.
	UniqueId pulumi.StringOutput `pulumi:"uniqueId"`
	// List of VM sizes supported for Compute Fleet
	VmSizesProfile VmSizeProfileResponseArrayOutput `pulumi:"vmSizesProfile"`
	// Zones in which the Compute Fleet is available
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewFleet registers a new resource with the given unique name, arguments, and options.
func NewFleet(ctx *pulumi.Context,
	name string, args *FleetArgs, opts ...pulumi.ResourceOption) (*Fleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeProfile == nil {
		return nil, errors.New("invalid value for required argument 'ComputeProfile'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VmSizesProfile == nil {
		return nil, errors.New("invalid value for required argument 'VmSizesProfile'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurefleet:Fleet"),
		},
		{
			Type: pulumi.String("azure-native:azurefleet/v20231101preview:Fleet"),
		},
		{
			Type: pulumi.String("azure-native:azurefleet/v20241101:Fleet"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Fleet
	err := ctx.RegisterResource("azure-native:azurefleet/v20240501preview:Fleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleet gets an existing Fleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetState, opts ...pulumi.ResourceOption) (*Fleet, error) {
	var resource Fleet
	err := ctx.ReadResource("azure-native:azurefleet/v20240501preview:Fleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fleet resources.
type fleetState struct {
}

type FleetState struct {
}

func (FleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetState)(nil)).Elem()
}

type fleetArgs struct {
	// Compute Profile to use for running user's workloads.
	ComputeProfile ComputeProfile `pulumi:"computeProfile"`
	// The name of the Compute Fleet
	FleetName *string `pulumi:"fleetName"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Details of the resource plan.
	Plan *Plan `pulumi:"plan"`
	// Configuration Options for Regular instances in Compute Fleet.
	RegularPriorityProfile *RegularPriorityProfile `pulumi:"regularPriorityProfile"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Configuration Options for Spot instances in Compute Fleet.
	SpotPriorityProfile *SpotPriorityProfile `pulumi:"spotPriorityProfile"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// List of VM sizes supported for Compute Fleet
	VmSizesProfile []VmSizeProfile `pulumi:"vmSizesProfile"`
	// Zones in which the Compute Fleet is available
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a Fleet resource.
type FleetArgs struct {
	// Compute Profile to use for running user's workloads.
	ComputeProfile ComputeProfileInput
	// The name of the Compute Fleet
	FleetName pulumi.StringPtrInput
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Details of the resource plan.
	Plan PlanPtrInput
	// Configuration Options for Regular instances in Compute Fleet.
	RegularPriorityProfile RegularPriorityProfilePtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Configuration Options for Spot instances in Compute Fleet.
	SpotPriorityProfile SpotPriorityProfilePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// List of VM sizes supported for Compute Fleet
	VmSizesProfile VmSizeProfileArrayInput
	// Zones in which the Compute Fleet is available
	Zones pulumi.StringArrayInput
}

func (FleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetArgs)(nil)).Elem()
}

type FleetInput interface {
	pulumi.Input

	ToFleetOutput() FleetOutput
	ToFleetOutputWithContext(ctx context.Context) FleetOutput
}

func (*Fleet) ElementType() reflect.Type {
	return reflect.TypeOf((**Fleet)(nil)).Elem()
}

func (i *Fleet) ToFleetOutput() FleetOutput {
	return i.ToFleetOutputWithContext(context.Background())
}

func (i *Fleet) ToFleetOutputWithContext(ctx context.Context) FleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOutput)
}

type FleetOutput struct{ *pulumi.OutputState }

func (FleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fleet)(nil)).Elem()
}

func (o FleetOutput) ToFleetOutput() FleetOutput {
	return o
}

func (o FleetOutput) ToFleetOutputWithContext(ctx context.Context) FleetOutput {
	return o
}

// Compute Profile to use for running user's workloads.
func (o FleetOutput) ComputeProfile() ComputeProfileResponseOutput {
	return o.ApplyT(func(v *Fleet) ComputeProfileResponseOutput { return v.ComputeProfile }).(ComputeProfileResponseOutput)
}

// The managed service identities assigned to this resource.
func (o FleetOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *Fleet) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o FleetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o FleetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Details of the resource plan.
func (o FleetOutput) Plan() PlanResponsePtrOutput {
	return o.ApplyT(func(v *Fleet) PlanResponsePtrOutput { return v.Plan }).(PlanResponsePtrOutput)
}

// The status of the last operation.
func (o FleetOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Configuration Options for Regular instances in Compute Fleet.
func (o FleetOutput) RegularPriorityProfile() RegularPriorityProfileResponsePtrOutput {
	return o.ApplyT(func(v *Fleet) RegularPriorityProfileResponsePtrOutput { return v.RegularPriorityProfile }).(RegularPriorityProfileResponsePtrOutput)
}

// Configuration Options for Spot instances in Compute Fleet.
func (o FleetOutput) SpotPriorityProfile() SpotPriorityProfileResponsePtrOutput {
	return o.ApplyT(func(v *Fleet) SpotPriorityProfileResponsePtrOutput { return v.SpotPriorityProfile }).(SpotPriorityProfileResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o FleetOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Fleet) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o FleetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the time at which the Compute Fleet is created.
func (o FleetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o FleetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the ID which uniquely identifies a Compute Fleet.
func (o FleetOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.UniqueId }).(pulumi.StringOutput)
}

// List of VM sizes supported for Compute Fleet
func (o FleetOutput) VmSizesProfile() VmSizeProfileResponseArrayOutput {
	return o.ApplyT(func(v *Fleet) VmSizeProfileResponseArrayOutput { return v.VmSizesProfile }).(VmSizeProfileResponseArrayOutput)
}

// Zones in which the Compute Fleet is available
func (o FleetOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(FleetOutput{})
}
