// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurefleet

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Fleet
// Azure REST API version: 2024-05-01-preview.
//
// Other available API versions: 2023-11-01-preview, 2024-11-01.
func LookupFleet(ctx *pulumi.Context, args *LookupFleetArgs, opts ...pulumi.InvokeOption) (*LookupFleetResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetResult
	err := ctx.Invoke("azure-native:azurefleet:getFleet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFleetArgs struct {
	// The name of the Compute Fleet
	FleetName string `pulumi:"fleetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An Compute Fleet resource
type LookupFleetResult struct {
	// Compute Profile to use for running user's workloads.
	ComputeProfile ComputeProfileResponse `pulumi:"computeProfile"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Details of the resource plan.
	Plan *PlanResponse `pulumi:"plan"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Configuration Options for Regular instances in Compute Fleet.
	RegularPriorityProfile *RegularPriorityProfileResponse `pulumi:"regularPriorityProfile"`
	// Configuration Options for Spot instances in Compute Fleet.
	SpotPriorityProfile *SpotPriorityProfileResponse `pulumi:"spotPriorityProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the time at which the Compute Fleet is created.
	TimeCreated string `pulumi:"timeCreated"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Specifies the ID which uniquely identifies a Compute Fleet.
	UniqueId string `pulumi:"uniqueId"`
	// List of VM sizes supported for Compute Fleet
	VmSizesProfile []VmSizeProfileResponse `pulumi:"vmSizesProfile"`
	// Zones in which the Compute Fleet is available
	Zones []string `pulumi:"zones"`
}

func LookupFleetOutput(ctx *pulumi.Context, args LookupFleetOutputArgs, opts ...pulumi.InvokeOption) LookupFleetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFleetResultOutput, error) {
			args := v.(LookupFleetArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupFleetResult
			secret, err := ctx.InvokePackageRaw("azure-native:azurefleet:getFleet", args, &rv, "", opts...)
			if err != nil {
				return LookupFleetResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFleetResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFleetResultOutput), nil
			}
			return output, nil
		}).(LookupFleetResultOutput)
}

type LookupFleetOutputArgs struct {
	// The name of the Compute Fleet
	FleetName pulumi.StringInput `pulumi:"fleetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFleetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetArgs)(nil)).Elem()
}

// An Compute Fleet resource
type LookupFleetResultOutput struct{ *pulumi.OutputState }

func (LookupFleetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetResult)(nil)).Elem()
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutput() LookupFleetResultOutput {
	return o
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutputWithContext(ctx context.Context) LookupFleetResultOutput {
	return o
}

// Compute Profile to use for running user's workloads.
func (o LookupFleetResultOutput) ComputeProfile() ComputeProfileResponseOutput {
	return o.ApplyT(func(v LookupFleetResult) ComputeProfileResponse { return v.ComputeProfile }).(ComputeProfileResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupFleetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o LookupFleetResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupFleetResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupFleetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Details of the resource plan.
func (o LookupFleetResultOutput) Plan() PlanResponsePtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *PlanResponse { return v.Plan }).(PlanResponsePtrOutput)
}

// The status of the last operation.
func (o LookupFleetResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Configuration Options for Regular instances in Compute Fleet.
func (o LookupFleetResultOutput) RegularPriorityProfile() RegularPriorityProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *RegularPriorityProfileResponse { return v.RegularPriorityProfile }).(RegularPriorityProfileResponsePtrOutput)
}

// Configuration Options for Spot instances in Compute Fleet.
func (o LookupFleetResultOutput) SpotPriorityProfile() SpotPriorityProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *SpotPriorityProfileResponse { return v.SpotPriorityProfile }).(SpotPriorityProfileResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupFleetResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupFleetResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupFleetResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFleetResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the time at which the Compute Fleet is created.
func (o LookupFleetResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupFleetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the ID which uniquely identifies a Compute Fleet.
func (o LookupFleetResultOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.UniqueId }).(pulumi.StringOutput)
}

// List of VM sizes supported for Compute Fleet
func (o LookupFleetResultOutput) VmSizesProfile() VmSizeProfileResponseArrayOutput {
	return o.ApplyT(func(v LookupFleetResult) []VmSizeProfileResponse { return v.VmSizesProfile }).(VmSizeProfileResponseArrayOutput)
}

// Zones in which the Compute Fleet is available
func (o LookupFleetResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFleetResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetResultOutput{})
}
