// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
type CachingTypes string

const (
	// 'None' is default for Standard Storage
	CachingTypesNone = CachingTypes("None")
	// 'ReadOnly' is default for Premium Storage
	CachingTypesReadOnly = CachingTypes("ReadOnly")
	// 'ReadWrite' is default for OS Disk
	CachingTypesReadWrite = CachingTypes("ReadWrite")
)

func (CachingTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*CachingTypes)(nil)).Elem()
}

func (e CachingTypes) ToCachingTypesOutput() CachingTypesOutput {
	return pulumi.ToOutput(e).(CachingTypesOutput)
}

func (e CachingTypes) ToCachingTypesOutputWithContext(ctx context.Context) CachingTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CachingTypesOutput)
}

func (e CachingTypes) ToCachingTypesPtrOutput() CachingTypesPtrOutput {
	return e.ToCachingTypesPtrOutputWithContext(context.Background())
}

func (e CachingTypes) ToCachingTypesPtrOutputWithContext(ctx context.Context) CachingTypesPtrOutput {
	return CachingTypes(e).ToCachingTypesOutputWithContext(ctx).ToCachingTypesPtrOutputWithContext(ctx)
}

func (e CachingTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CachingTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CachingTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CachingTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CachingTypesOutput struct{ *pulumi.OutputState }

func (CachingTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachingTypes)(nil)).Elem()
}

func (o CachingTypesOutput) ToCachingTypesOutput() CachingTypesOutput {
	return o
}

func (o CachingTypesOutput) ToCachingTypesOutputWithContext(ctx context.Context) CachingTypesOutput {
	return o
}

func (o CachingTypesOutput) ToCachingTypesPtrOutput() CachingTypesPtrOutput {
	return o.ToCachingTypesPtrOutputWithContext(context.Background())
}

func (o CachingTypesOutput) ToCachingTypesPtrOutputWithContext(ctx context.Context) CachingTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CachingTypes) *CachingTypes {
		return &v
	}).(CachingTypesPtrOutput)
}

func (o CachingTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CachingTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CachingTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CachingTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CachingTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CachingTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CachingTypesPtrOutput struct{ *pulumi.OutputState }

func (CachingTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CachingTypes)(nil)).Elem()
}

func (o CachingTypesPtrOutput) ToCachingTypesPtrOutput() CachingTypesPtrOutput {
	return o
}

func (o CachingTypesPtrOutput) ToCachingTypesPtrOutputWithContext(ctx context.Context) CachingTypesPtrOutput {
	return o
}

func (o CachingTypesPtrOutput) Elem() CachingTypesOutput {
	return o.ApplyT(func(v *CachingTypes) CachingTypes {
		if v != nil {
			return *v
		}
		var ret CachingTypes
		return ret
	}).(CachingTypesOutput)
}

func (o CachingTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CachingTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CachingTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CachingTypesInput is an input type that accepts values of the CachingTypes enum
// A concrete instance of `CachingTypesInput` can be one of the following:
//
//	CachingTypesNone
//	CachingTypesReadOnly
//	CachingTypesReadWrite
type CachingTypesInput interface {
	pulumi.Input

	ToCachingTypesOutput() CachingTypesOutput
	ToCachingTypesOutputWithContext(context.Context) CachingTypesOutput
}

var cachingTypesPtrType = reflect.TypeOf((**CachingTypes)(nil)).Elem()

type CachingTypesPtrInput interface {
	pulumi.Input

	ToCachingTypesPtrOutput() CachingTypesPtrOutput
	ToCachingTypesPtrOutputWithContext(context.Context) CachingTypesPtrOutput
}

type cachingTypesPtr string

func CachingTypesPtr(v string) CachingTypesPtrInput {
	return (*cachingTypesPtr)(&v)
}

func (*cachingTypesPtr) ElementType() reflect.Type {
	return cachingTypesPtrType
}

func (in *cachingTypesPtr) ToCachingTypesPtrOutput() CachingTypesPtrOutput {
	return pulumi.ToOutput(in).(CachingTypesPtrOutput)
}

func (in *cachingTypesPtr) ToCachingTypesPtrOutputWithContext(ctx context.Context) CachingTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CachingTypesPtrOutput)
}

// The component name. Currently, the only allowable value is
// Microsoft-Windows-Shell-Setup.
type ComponentName string

const (
	ComponentName_Microsoft_Windows_Shell_Setup = ComponentName("Microsoft-Windows-Shell-Setup")
)

func (ComponentName) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentName)(nil)).Elem()
}

func (e ComponentName) ToComponentNameOutput() ComponentNameOutput {
	return pulumi.ToOutput(e).(ComponentNameOutput)
}

func (e ComponentName) ToComponentNameOutputWithContext(ctx context.Context) ComponentNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComponentNameOutput)
}

func (e ComponentName) ToComponentNamePtrOutput() ComponentNamePtrOutput {
	return e.ToComponentNamePtrOutputWithContext(context.Background())
}

func (e ComponentName) ToComponentNamePtrOutputWithContext(ctx context.Context) ComponentNamePtrOutput {
	return ComponentName(e).ToComponentNameOutputWithContext(ctx).ToComponentNamePtrOutputWithContext(ctx)
}

func (e ComponentName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComponentName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComponentName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComponentName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComponentNameOutput struct{ *pulumi.OutputState }

func (ComponentNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentName)(nil)).Elem()
}

func (o ComponentNameOutput) ToComponentNameOutput() ComponentNameOutput {
	return o
}

func (o ComponentNameOutput) ToComponentNameOutputWithContext(ctx context.Context) ComponentNameOutput {
	return o
}

func (o ComponentNameOutput) ToComponentNamePtrOutput() ComponentNamePtrOutput {
	return o.ToComponentNamePtrOutputWithContext(context.Background())
}

func (o ComponentNameOutput) ToComponentNamePtrOutputWithContext(ctx context.Context) ComponentNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentName) *ComponentName {
		return &v
	}).(ComponentNamePtrOutput)
}

func (o ComponentNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComponentNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComponentName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComponentNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComponentNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComponentName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComponentNamePtrOutput struct{ *pulumi.OutputState }

func (ComponentNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentName)(nil)).Elem()
}

func (o ComponentNamePtrOutput) ToComponentNamePtrOutput() ComponentNamePtrOutput {
	return o
}

func (o ComponentNamePtrOutput) ToComponentNamePtrOutputWithContext(ctx context.Context) ComponentNamePtrOutput {
	return o
}

func (o ComponentNamePtrOutput) Elem() ComponentNameOutput {
	return o.ApplyT(func(v *ComponentName) ComponentName {
		if v != nil {
			return *v
		}
		var ret ComponentName
		return ret
	}).(ComponentNameOutput)
}

func (o ComponentNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComponentNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComponentName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComponentNameInput is an input type that accepts values of the ComponentName enum
// A concrete instance of `ComponentNameInput` can be one of the following:
//
//	ComponentName_Microsoft_Windows_Shell_Setup
type ComponentNameInput interface {
	pulumi.Input

	ToComponentNameOutput() ComponentNameOutput
	ToComponentNameOutputWithContext(context.Context) ComponentNameOutput
}

var componentNamePtrType = reflect.TypeOf((**ComponentName)(nil)).Elem()

type ComponentNamePtrInput interface {
	pulumi.Input

	ToComponentNamePtrOutput() ComponentNamePtrOutput
	ToComponentNamePtrOutputWithContext(context.Context) ComponentNamePtrOutput
}

type componentNamePtr string

func ComponentNamePtr(v string) ComponentNamePtrInput {
	return (*componentNamePtr)(&v)
}

func (*componentNamePtr) ElementType() reflect.Type {
	return componentNamePtrType
}

func (in *componentNamePtr) ToComponentNamePtrOutput() ComponentNamePtrOutput {
	return pulumi.ToOutput(in).(ComponentNamePtrOutput)
}

func (in *componentNamePtr) ToComponentNamePtrOutputWithContext(ctx context.Context) ComponentNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComponentNamePtrOutput)
}

// Specify what happens to the public IP when the VM is deleted
type DeleteOptions string

const (
	// Delete Option
	DeleteOptionsDelete = DeleteOptions("Delete")
	// Detach Option
	DeleteOptionsDetach = DeleteOptions("Detach")
)

func (DeleteOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteOptions)(nil)).Elem()
}

func (e DeleteOptions) ToDeleteOptionsOutput() DeleteOptionsOutput {
	return pulumi.ToOutput(e).(DeleteOptionsOutput)
}

func (e DeleteOptions) ToDeleteOptionsOutputWithContext(ctx context.Context) DeleteOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeleteOptionsOutput)
}

func (e DeleteOptions) ToDeleteOptionsPtrOutput() DeleteOptionsPtrOutput {
	return e.ToDeleteOptionsPtrOutputWithContext(context.Background())
}

func (e DeleteOptions) ToDeleteOptionsPtrOutputWithContext(ctx context.Context) DeleteOptionsPtrOutput {
	return DeleteOptions(e).ToDeleteOptionsOutputWithContext(ctx).ToDeleteOptionsPtrOutputWithContext(ctx)
}

func (e DeleteOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeleteOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeleteOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeleteOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeleteOptionsOutput struct{ *pulumi.OutputState }

func (DeleteOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteOptions)(nil)).Elem()
}

func (o DeleteOptionsOutput) ToDeleteOptionsOutput() DeleteOptionsOutput {
	return o
}

func (o DeleteOptionsOutput) ToDeleteOptionsOutputWithContext(ctx context.Context) DeleteOptionsOutput {
	return o
}

func (o DeleteOptionsOutput) ToDeleteOptionsPtrOutput() DeleteOptionsPtrOutput {
	return o.ToDeleteOptionsPtrOutputWithContext(context.Background())
}

func (o DeleteOptionsOutput) ToDeleteOptionsPtrOutputWithContext(ctx context.Context) DeleteOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeleteOptions) *DeleteOptions {
		return &v
	}).(DeleteOptionsPtrOutput)
}

func (o DeleteOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeleteOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeleteOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeleteOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeleteOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeleteOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeleteOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeleteOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteOptions)(nil)).Elem()
}

func (o DeleteOptionsPtrOutput) ToDeleteOptionsPtrOutput() DeleteOptionsPtrOutput {
	return o
}

func (o DeleteOptionsPtrOutput) ToDeleteOptionsPtrOutputWithContext(ctx context.Context) DeleteOptionsPtrOutput {
	return o
}

func (o DeleteOptionsPtrOutput) Elem() DeleteOptionsOutput {
	return o.ApplyT(func(v *DeleteOptions) DeleteOptions {
		if v != nil {
			return *v
		}
		var ret DeleteOptions
		return ret
	}).(DeleteOptionsOutput)
}

func (o DeleteOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeleteOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeleteOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeleteOptionsInput is an input type that accepts values of the DeleteOptions enum
// A concrete instance of `DeleteOptionsInput` can be one of the following:
//
//	DeleteOptionsDelete
//	DeleteOptionsDetach
type DeleteOptionsInput interface {
	pulumi.Input

	ToDeleteOptionsOutput() DeleteOptionsOutput
	ToDeleteOptionsOutputWithContext(context.Context) DeleteOptionsOutput
}

var deleteOptionsPtrType = reflect.TypeOf((**DeleteOptions)(nil)).Elem()

type DeleteOptionsPtrInput interface {
	pulumi.Input

	ToDeleteOptionsPtrOutput() DeleteOptionsPtrOutput
	ToDeleteOptionsPtrOutputWithContext(context.Context) DeleteOptionsPtrOutput
}

type deleteOptionsPtr string

func DeleteOptionsPtr(v string) DeleteOptionsPtrInput {
	return (*deleteOptionsPtr)(&v)
}

func (*deleteOptionsPtr) ElementType() reflect.Type {
	return deleteOptionsPtrType
}

func (in *deleteOptionsPtr) ToDeleteOptionsPtrOutput() DeleteOptionsPtrOutput {
	return pulumi.ToOutput(in).(DeleteOptionsPtrOutput)
}

func (in *deleteOptionsPtr) ToDeleteOptionsPtrOutputWithContext(ctx context.Context) DeleteOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeleteOptionsPtrOutput)
}

// Specifies the ephemeral disk settings for operating system disk.
type DiffDiskOptions string

const (
	// Local Option.
	DiffDiskOptionsLocal = DiffDiskOptions("Local")
)

func (DiffDiskOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskOptions)(nil)).Elem()
}

func (e DiffDiskOptions) ToDiffDiskOptionsOutput() DiffDiskOptionsOutput {
	return pulumi.ToOutput(e).(DiffDiskOptionsOutput)
}

func (e DiffDiskOptions) ToDiffDiskOptionsOutputWithContext(ctx context.Context) DiffDiskOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiffDiskOptionsOutput)
}

func (e DiffDiskOptions) ToDiffDiskOptionsPtrOutput() DiffDiskOptionsPtrOutput {
	return e.ToDiffDiskOptionsPtrOutputWithContext(context.Background())
}

func (e DiffDiskOptions) ToDiffDiskOptionsPtrOutputWithContext(ctx context.Context) DiffDiskOptionsPtrOutput {
	return DiffDiskOptions(e).ToDiffDiskOptionsOutputWithContext(ctx).ToDiffDiskOptionsPtrOutputWithContext(ctx)
}

func (e DiffDiskOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiffDiskOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiffDiskOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiffDiskOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiffDiskOptionsOutput struct{ *pulumi.OutputState }

func (DiffDiskOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskOptions)(nil)).Elem()
}

func (o DiffDiskOptionsOutput) ToDiffDiskOptionsOutput() DiffDiskOptionsOutput {
	return o
}

func (o DiffDiskOptionsOutput) ToDiffDiskOptionsOutputWithContext(ctx context.Context) DiffDiskOptionsOutput {
	return o
}

func (o DiffDiskOptionsOutput) ToDiffDiskOptionsPtrOutput() DiffDiskOptionsPtrOutput {
	return o.ToDiffDiskOptionsPtrOutputWithContext(context.Background())
}

func (o DiffDiskOptionsOutput) ToDiffDiskOptionsPtrOutputWithContext(ctx context.Context) DiffDiskOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiffDiskOptions) *DiffDiskOptions {
		return &v
	}).(DiffDiskOptionsPtrOutput)
}

func (o DiffDiskOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiffDiskOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiffDiskOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiffDiskOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiffDiskOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiffDiskOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiffDiskOptionsPtrOutput struct{ *pulumi.OutputState }

func (DiffDiskOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiffDiskOptions)(nil)).Elem()
}

func (o DiffDiskOptionsPtrOutput) ToDiffDiskOptionsPtrOutput() DiffDiskOptionsPtrOutput {
	return o
}

func (o DiffDiskOptionsPtrOutput) ToDiffDiskOptionsPtrOutputWithContext(ctx context.Context) DiffDiskOptionsPtrOutput {
	return o
}

func (o DiffDiskOptionsPtrOutput) Elem() DiffDiskOptionsOutput {
	return o.ApplyT(func(v *DiffDiskOptions) DiffDiskOptions {
		if v != nil {
			return *v
		}
		var ret DiffDiskOptions
		return ret
	}).(DiffDiskOptionsOutput)
}

func (o DiffDiskOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiffDiskOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiffDiskOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiffDiskOptionsInput is an input type that accepts values of the DiffDiskOptions enum
// A concrete instance of `DiffDiskOptionsInput` can be one of the following:
//
//	DiffDiskOptionsLocal
type DiffDiskOptionsInput interface {
	pulumi.Input

	ToDiffDiskOptionsOutput() DiffDiskOptionsOutput
	ToDiffDiskOptionsOutputWithContext(context.Context) DiffDiskOptionsOutput
}

var diffDiskOptionsPtrType = reflect.TypeOf((**DiffDiskOptions)(nil)).Elem()

type DiffDiskOptionsPtrInput interface {
	pulumi.Input

	ToDiffDiskOptionsPtrOutput() DiffDiskOptionsPtrOutput
	ToDiffDiskOptionsPtrOutputWithContext(context.Context) DiffDiskOptionsPtrOutput
}

type diffDiskOptionsPtr string

func DiffDiskOptionsPtr(v string) DiffDiskOptionsPtrInput {
	return (*diffDiskOptionsPtr)(&v)
}

func (*diffDiskOptionsPtr) ElementType() reflect.Type {
	return diffDiskOptionsPtrType
}

func (in *diffDiskOptionsPtr) ToDiffDiskOptionsPtrOutput() DiffDiskOptionsPtrOutput {
	return pulumi.ToOutput(in).(DiffDiskOptionsPtrOutput)
}

func (in *diffDiskOptionsPtr) ToDiffDiskOptionsPtrOutputWithContext(ctx context.Context) DiffDiskOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiffDiskOptionsPtrOutput)
}

// Specifies the ephemeral disk placement for operating system disk. Possible
// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
// is used. Refer to the VM size documentation for Windows VM at
// https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
// https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
// sizes exposes a cache disk.
type DiffDiskPlacement string

const (
	// CacheDisk option.
	DiffDiskPlacementCacheDisk = DiffDiskPlacement("CacheDisk")
	// Resource Disk option.
	DiffDiskPlacementResourceDisk = DiffDiskPlacement("ResourceDisk")
	// NvmeDisk option.
	DiffDiskPlacementNvmeDisk = DiffDiskPlacement("NvmeDisk")
)

func (DiffDiskPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskPlacement)(nil)).Elem()
}

func (e DiffDiskPlacement) ToDiffDiskPlacementOutput() DiffDiskPlacementOutput {
	return pulumi.ToOutput(e).(DiffDiskPlacementOutput)
}

func (e DiffDiskPlacement) ToDiffDiskPlacementOutputWithContext(ctx context.Context) DiffDiskPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiffDiskPlacementOutput)
}

func (e DiffDiskPlacement) ToDiffDiskPlacementPtrOutput() DiffDiskPlacementPtrOutput {
	return e.ToDiffDiskPlacementPtrOutputWithContext(context.Background())
}

func (e DiffDiskPlacement) ToDiffDiskPlacementPtrOutputWithContext(ctx context.Context) DiffDiskPlacementPtrOutput {
	return DiffDiskPlacement(e).ToDiffDiskPlacementOutputWithContext(ctx).ToDiffDiskPlacementPtrOutputWithContext(ctx)
}

func (e DiffDiskPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiffDiskPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiffDiskPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiffDiskPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiffDiskPlacementOutput struct{ *pulumi.OutputState }

func (DiffDiskPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskPlacement)(nil)).Elem()
}

func (o DiffDiskPlacementOutput) ToDiffDiskPlacementOutput() DiffDiskPlacementOutput {
	return o
}

func (o DiffDiskPlacementOutput) ToDiffDiskPlacementOutputWithContext(ctx context.Context) DiffDiskPlacementOutput {
	return o
}

func (o DiffDiskPlacementOutput) ToDiffDiskPlacementPtrOutput() DiffDiskPlacementPtrOutput {
	return o.ToDiffDiskPlacementPtrOutputWithContext(context.Background())
}

func (o DiffDiskPlacementOutput) ToDiffDiskPlacementPtrOutputWithContext(ctx context.Context) DiffDiskPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiffDiskPlacement) *DiffDiskPlacement {
		return &v
	}).(DiffDiskPlacementPtrOutput)
}

func (o DiffDiskPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiffDiskPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiffDiskPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiffDiskPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiffDiskPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiffDiskPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiffDiskPlacementPtrOutput struct{ *pulumi.OutputState }

func (DiffDiskPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiffDiskPlacement)(nil)).Elem()
}

func (o DiffDiskPlacementPtrOutput) ToDiffDiskPlacementPtrOutput() DiffDiskPlacementPtrOutput {
	return o
}

func (o DiffDiskPlacementPtrOutput) ToDiffDiskPlacementPtrOutputWithContext(ctx context.Context) DiffDiskPlacementPtrOutput {
	return o
}

func (o DiffDiskPlacementPtrOutput) Elem() DiffDiskPlacementOutput {
	return o.ApplyT(func(v *DiffDiskPlacement) DiffDiskPlacement {
		if v != nil {
			return *v
		}
		var ret DiffDiskPlacement
		return ret
	}).(DiffDiskPlacementOutput)
}

func (o DiffDiskPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiffDiskPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiffDiskPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiffDiskPlacementInput is an input type that accepts values of the DiffDiskPlacement enum
// A concrete instance of `DiffDiskPlacementInput` can be one of the following:
//
//	DiffDiskPlacementCacheDisk
//	DiffDiskPlacementResourceDisk
//	DiffDiskPlacementNvmeDisk
type DiffDiskPlacementInput interface {
	pulumi.Input

	ToDiffDiskPlacementOutput() DiffDiskPlacementOutput
	ToDiffDiskPlacementOutputWithContext(context.Context) DiffDiskPlacementOutput
}

var diffDiskPlacementPtrType = reflect.TypeOf((**DiffDiskPlacement)(nil)).Elem()

type DiffDiskPlacementPtrInput interface {
	pulumi.Input

	ToDiffDiskPlacementPtrOutput() DiffDiskPlacementPtrOutput
	ToDiffDiskPlacementPtrOutputWithContext(context.Context) DiffDiskPlacementPtrOutput
}

type diffDiskPlacementPtr string

func DiffDiskPlacementPtr(v string) DiffDiskPlacementPtrInput {
	return (*diffDiskPlacementPtr)(&v)
}

func (*diffDiskPlacementPtr) ElementType() reflect.Type {
	return diffDiskPlacementPtrType
}

func (in *diffDiskPlacementPtr) ToDiffDiskPlacementPtrOutput() DiffDiskPlacementPtrOutput {
	return pulumi.ToOutput(in).(DiffDiskPlacementPtrOutput)
}

func (in *diffDiskPlacementPtr) ToDiffDiskPlacementPtrOutputWithContext(ctx context.Context) DiffDiskPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiffDiskPlacementPtrOutput)
}

// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
type DiskControllerTypes string

const (
	// SCSI disk type
	DiskControllerTypesSCSI = DiskControllerTypes("SCSI")
	// NVMe disk type
	DiskControllerTypesNVMe = DiskControllerTypes("NVMe")
)

func (DiskControllerTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskControllerTypes)(nil)).Elem()
}

func (e DiskControllerTypes) ToDiskControllerTypesOutput() DiskControllerTypesOutput {
	return pulumi.ToOutput(e).(DiskControllerTypesOutput)
}

func (e DiskControllerTypes) ToDiskControllerTypesOutputWithContext(ctx context.Context) DiskControllerTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskControllerTypesOutput)
}

func (e DiskControllerTypes) ToDiskControllerTypesPtrOutput() DiskControllerTypesPtrOutput {
	return e.ToDiskControllerTypesPtrOutputWithContext(context.Background())
}

func (e DiskControllerTypes) ToDiskControllerTypesPtrOutputWithContext(ctx context.Context) DiskControllerTypesPtrOutput {
	return DiskControllerTypes(e).ToDiskControllerTypesOutputWithContext(ctx).ToDiskControllerTypesPtrOutputWithContext(ctx)
}

func (e DiskControllerTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskControllerTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskControllerTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskControllerTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskControllerTypesOutput struct{ *pulumi.OutputState }

func (DiskControllerTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskControllerTypes)(nil)).Elem()
}

func (o DiskControllerTypesOutput) ToDiskControllerTypesOutput() DiskControllerTypesOutput {
	return o
}

func (o DiskControllerTypesOutput) ToDiskControllerTypesOutputWithContext(ctx context.Context) DiskControllerTypesOutput {
	return o
}

func (o DiskControllerTypesOutput) ToDiskControllerTypesPtrOutput() DiskControllerTypesPtrOutput {
	return o.ToDiskControllerTypesPtrOutputWithContext(context.Background())
}

func (o DiskControllerTypesOutput) ToDiskControllerTypesPtrOutputWithContext(ctx context.Context) DiskControllerTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskControllerTypes) *DiskControllerTypes {
		return &v
	}).(DiskControllerTypesPtrOutput)
}

func (o DiskControllerTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskControllerTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskControllerTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskControllerTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskControllerTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskControllerTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskControllerTypesPtrOutput struct{ *pulumi.OutputState }

func (DiskControllerTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskControllerTypes)(nil)).Elem()
}

func (o DiskControllerTypesPtrOutput) ToDiskControllerTypesPtrOutput() DiskControllerTypesPtrOutput {
	return o
}

func (o DiskControllerTypesPtrOutput) ToDiskControllerTypesPtrOutputWithContext(ctx context.Context) DiskControllerTypesPtrOutput {
	return o
}

func (o DiskControllerTypesPtrOutput) Elem() DiskControllerTypesOutput {
	return o.ApplyT(func(v *DiskControllerTypes) DiskControllerTypes {
		if v != nil {
			return *v
		}
		var ret DiskControllerTypes
		return ret
	}).(DiskControllerTypesOutput)
}

func (o DiskControllerTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskControllerTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskControllerTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskControllerTypesInput is an input type that accepts values of the DiskControllerTypes enum
// A concrete instance of `DiskControllerTypesInput` can be one of the following:
//
//	DiskControllerTypesSCSI
//	DiskControllerTypesNVMe
type DiskControllerTypesInput interface {
	pulumi.Input

	ToDiskControllerTypesOutput() DiskControllerTypesOutput
	ToDiskControllerTypesOutputWithContext(context.Context) DiskControllerTypesOutput
}

var diskControllerTypesPtrType = reflect.TypeOf((**DiskControllerTypes)(nil)).Elem()

type DiskControllerTypesPtrInput interface {
	pulumi.Input

	ToDiskControllerTypesPtrOutput() DiskControllerTypesPtrOutput
	ToDiskControllerTypesPtrOutputWithContext(context.Context) DiskControllerTypesPtrOutput
}

type diskControllerTypesPtr string

func DiskControllerTypesPtr(v string) DiskControllerTypesPtrInput {
	return (*diskControllerTypesPtr)(&v)
}

func (*diskControllerTypesPtr) ElementType() reflect.Type {
	return diskControllerTypesPtrType
}

func (in *diskControllerTypesPtr) ToDiskControllerTypesPtrOutput() DiskControllerTypesPtrOutput {
	return pulumi.ToOutput(in).(DiskControllerTypesPtrOutput)
}

func (in *diskControllerTypesPtr) ToDiskControllerTypesPtrOutputWithContext(ctx context.Context) DiskControllerTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskControllerTypesPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created. The only
// allowed value is: **FromImage.** This value is used when you are using an image
// to create the virtual machine. If you are using a platform image, you also use
// the imageReference element described above. If you are using a marketplace
// image, you  also use the plan element previously described.
type DiskCreateOptionTypes string

const (
	// This value is used when you are using an image to create the virtual machine.
	// If you are using a platform image, you also use the imageReference element
	// described above. If you are using a marketplace image, you also use the
	// plan element previously described.
	DiskCreateOptionTypesFromImage = DiskCreateOptionTypes("FromImage")
	// This value is used when creating an empty data disk.
	DiskCreateOptionTypesEmpty = DiskCreateOptionTypes("Empty")
	// This value is used when you are using a specialized disk to create the virtual machine.
	DiskCreateOptionTypesAttach = DiskCreateOptionTypes("Attach")
	// This value is used to create a data disk from a snapshot or another disk.
	DiskCreateOptionTypesCopy = DiskCreateOptionTypes("Copy")
	// This value is used to create a data disk from a disk restore point.
	DiskCreateOptionTypesRestore = DiskCreateOptionTypes("Restore")
)

func (DiskCreateOptionTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskCreateOptionTypes)(nil)).Elem()
}

func (e DiskCreateOptionTypes) ToDiskCreateOptionTypesOutput() DiskCreateOptionTypesOutput {
	return pulumi.ToOutput(e).(DiskCreateOptionTypesOutput)
}

func (e DiskCreateOptionTypes) ToDiskCreateOptionTypesOutputWithContext(ctx context.Context) DiskCreateOptionTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskCreateOptionTypesOutput)
}

func (e DiskCreateOptionTypes) ToDiskCreateOptionTypesPtrOutput() DiskCreateOptionTypesPtrOutput {
	return e.ToDiskCreateOptionTypesPtrOutputWithContext(context.Background())
}

func (e DiskCreateOptionTypes) ToDiskCreateOptionTypesPtrOutputWithContext(ctx context.Context) DiskCreateOptionTypesPtrOutput {
	return DiskCreateOptionTypes(e).ToDiskCreateOptionTypesOutputWithContext(ctx).ToDiskCreateOptionTypesPtrOutputWithContext(ctx)
}

func (e DiskCreateOptionTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskCreateOptionTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskCreateOptionTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskCreateOptionTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskCreateOptionTypesOutput struct{ *pulumi.OutputState }

func (DiskCreateOptionTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskCreateOptionTypes)(nil)).Elem()
}

func (o DiskCreateOptionTypesOutput) ToDiskCreateOptionTypesOutput() DiskCreateOptionTypesOutput {
	return o
}

func (o DiskCreateOptionTypesOutput) ToDiskCreateOptionTypesOutputWithContext(ctx context.Context) DiskCreateOptionTypesOutput {
	return o
}

func (o DiskCreateOptionTypesOutput) ToDiskCreateOptionTypesPtrOutput() DiskCreateOptionTypesPtrOutput {
	return o.ToDiskCreateOptionTypesPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionTypesOutput) ToDiskCreateOptionTypesPtrOutputWithContext(ctx context.Context) DiskCreateOptionTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskCreateOptionTypes) *DiskCreateOptionTypes {
		return &v
	}).(DiskCreateOptionTypesPtrOutput)
}

func (o DiskCreateOptionTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskCreateOptionTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskCreateOptionTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskCreateOptionTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskCreateOptionTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskCreateOptionTypesPtrOutput struct{ *pulumi.OutputState }

func (DiskCreateOptionTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskCreateOptionTypes)(nil)).Elem()
}

func (o DiskCreateOptionTypesPtrOutput) ToDiskCreateOptionTypesPtrOutput() DiskCreateOptionTypesPtrOutput {
	return o
}

func (o DiskCreateOptionTypesPtrOutput) ToDiskCreateOptionTypesPtrOutputWithContext(ctx context.Context) DiskCreateOptionTypesPtrOutput {
	return o
}

func (o DiskCreateOptionTypesPtrOutput) Elem() DiskCreateOptionTypesOutput {
	return o.ApplyT(func(v *DiskCreateOptionTypes) DiskCreateOptionTypes {
		if v != nil {
			return *v
		}
		var ret DiskCreateOptionTypes
		return ret
	}).(DiskCreateOptionTypesOutput)
}

func (o DiskCreateOptionTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskCreateOptionTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskCreateOptionTypesInput is an input type that accepts values of the DiskCreateOptionTypes enum
// A concrete instance of `DiskCreateOptionTypesInput` can be one of the following:
//
//	DiskCreateOptionTypesFromImage
//	DiskCreateOptionTypesEmpty
//	DiskCreateOptionTypesAttach
//	DiskCreateOptionTypesCopy
//	DiskCreateOptionTypesRestore
type DiskCreateOptionTypesInput interface {
	pulumi.Input

	ToDiskCreateOptionTypesOutput() DiskCreateOptionTypesOutput
	ToDiskCreateOptionTypesOutputWithContext(context.Context) DiskCreateOptionTypesOutput
}

var diskCreateOptionTypesPtrType = reflect.TypeOf((**DiskCreateOptionTypes)(nil)).Elem()

type DiskCreateOptionTypesPtrInput interface {
	pulumi.Input

	ToDiskCreateOptionTypesPtrOutput() DiskCreateOptionTypesPtrOutput
	ToDiskCreateOptionTypesPtrOutputWithContext(context.Context) DiskCreateOptionTypesPtrOutput
}

type diskCreateOptionTypesPtr string

func DiskCreateOptionTypesPtr(v string) DiskCreateOptionTypesPtrInput {
	return (*diskCreateOptionTypesPtr)(&v)
}

func (*diskCreateOptionTypesPtr) ElementType() reflect.Type {
	return diskCreateOptionTypesPtrType
}

func (in *diskCreateOptionTypesPtr) ToDiskCreateOptionTypesPtrOutput() DiskCreateOptionTypesPtrOutput {
	return pulumi.ToOutput(in).(DiskCreateOptionTypesPtrOutput)
}

func (in *diskCreateOptionTypesPtr) ToDiskCreateOptionTypesPtrOutputWithContext(ctx context.Context) DiskCreateOptionTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskCreateOptionTypesPtrOutput)
}

// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
// (This feature is available for VMSS with Flexible OrchestrationMode only).
// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
// is set to **Delete**. User cannot change the delete option for Ephemeral OS
// Disk.
type DiskDeleteOptionTypes string

const (
	// If this value is used, the managed disk is deleted when VM gets deleted.
	DiskDeleteOptionTypesDelete = DiskDeleteOptionTypes("Delete")
	// If this value is used, the managed disk is retained after VM gets deleted.
	DiskDeleteOptionTypesDetach = DiskDeleteOptionTypes("Detach")
)

func (DiskDeleteOptionTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskDeleteOptionTypes)(nil)).Elem()
}

func (e DiskDeleteOptionTypes) ToDiskDeleteOptionTypesOutput() DiskDeleteOptionTypesOutput {
	return pulumi.ToOutput(e).(DiskDeleteOptionTypesOutput)
}

func (e DiskDeleteOptionTypes) ToDiskDeleteOptionTypesOutputWithContext(ctx context.Context) DiskDeleteOptionTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskDeleteOptionTypesOutput)
}

func (e DiskDeleteOptionTypes) ToDiskDeleteOptionTypesPtrOutput() DiskDeleteOptionTypesPtrOutput {
	return e.ToDiskDeleteOptionTypesPtrOutputWithContext(context.Background())
}

func (e DiskDeleteOptionTypes) ToDiskDeleteOptionTypesPtrOutputWithContext(ctx context.Context) DiskDeleteOptionTypesPtrOutput {
	return DiskDeleteOptionTypes(e).ToDiskDeleteOptionTypesOutputWithContext(ctx).ToDiskDeleteOptionTypesPtrOutputWithContext(ctx)
}

func (e DiskDeleteOptionTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskDeleteOptionTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskDeleteOptionTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskDeleteOptionTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskDeleteOptionTypesOutput struct{ *pulumi.OutputState }

func (DiskDeleteOptionTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskDeleteOptionTypes)(nil)).Elem()
}

func (o DiskDeleteOptionTypesOutput) ToDiskDeleteOptionTypesOutput() DiskDeleteOptionTypesOutput {
	return o
}

func (o DiskDeleteOptionTypesOutput) ToDiskDeleteOptionTypesOutputWithContext(ctx context.Context) DiskDeleteOptionTypesOutput {
	return o
}

func (o DiskDeleteOptionTypesOutput) ToDiskDeleteOptionTypesPtrOutput() DiskDeleteOptionTypesPtrOutput {
	return o.ToDiskDeleteOptionTypesPtrOutputWithContext(context.Background())
}

func (o DiskDeleteOptionTypesOutput) ToDiskDeleteOptionTypesPtrOutputWithContext(ctx context.Context) DiskDeleteOptionTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskDeleteOptionTypes) *DiskDeleteOptionTypes {
		return &v
	}).(DiskDeleteOptionTypesPtrOutput)
}

func (o DiskDeleteOptionTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskDeleteOptionTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskDeleteOptionTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskDeleteOptionTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskDeleteOptionTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskDeleteOptionTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskDeleteOptionTypesPtrOutput struct{ *pulumi.OutputState }

func (DiskDeleteOptionTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskDeleteOptionTypes)(nil)).Elem()
}

func (o DiskDeleteOptionTypesPtrOutput) ToDiskDeleteOptionTypesPtrOutput() DiskDeleteOptionTypesPtrOutput {
	return o
}

func (o DiskDeleteOptionTypesPtrOutput) ToDiskDeleteOptionTypesPtrOutputWithContext(ctx context.Context) DiskDeleteOptionTypesPtrOutput {
	return o
}

func (o DiskDeleteOptionTypesPtrOutput) Elem() DiskDeleteOptionTypesOutput {
	return o.ApplyT(func(v *DiskDeleteOptionTypes) DiskDeleteOptionTypes {
		if v != nil {
			return *v
		}
		var ret DiskDeleteOptionTypes
		return ret
	}).(DiskDeleteOptionTypesOutput)
}

func (o DiskDeleteOptionTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskDeleteOptionTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskDeleteOptionTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskDeleteOptionTypesInput is an input type that accepts values of the DiskDeleteOptionTypes enum
// A concrete instance of `DiskDeleteOptionTypesInput` can be one of the following:
//
//	DiskDeleteOptionTypesDelete
//	DiskDeleteOptionTypesDetach
type DiskDeleteOptionTypesInput interface {
	pulumi.Input

	ToDiskDeleteOptionTypesOutput() DiskDeleteOptionTypesOutput
	ToDiskDeleteOptionTypesOutputWithContext(context.Context) DiskDeleteOptionTypesOutput
}

var diskDeleteOptionTypesPtrType = reflect.TypeOf((**DiskDeleteOptionTypes)(nil)).Elem()

type DiskDeleteOptionTypesPtrInput interface {
	pulumi.Input

	ToDiskDeleteOptionTypesPtrOutput() DiskDeleteOptionTypesPtrOutput
	ToDiskDeleteOptionTypesPtrOutputWithContext(context.Context) DiskDeleteOptionTypesPtrOutput
}

type diskDeleteOptionTypesPtr string

func DiskDeleteOptionTypesPtr(v string) DiskDeleteOptionTypesPtrInput {
	return (*diskDeleteOptionTypesPtr)(&v)
}

func (*diskDeleteOptionTypesPtr) ElementType() reflect.Type {
	return diskDeleteOptionTypesPtrType
}

func (in *diskDeleteOptionTypesPtr) ToDiskDeleteOptionTypesPtrOutput() DiskDeleteOptionTypesPtrOutput {
	return pulumi.ToOutput(in).(DiskDeleteOptionTypesPtrOutput)
}

func (in *diskDeleteOptionTypesPtr) ToDiskDeleteOptionTypesPtrOutputWithContext(ctx context.Context) DiskDeleteOptionTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskDeleteOptionTypesPtrOutput)
}

// The Domain name label scope.The concatenation of the hashed domain name label
// that generated according to the policy from domain name label scope and vm
// index will be the domain name labels of the PublicIPAddress resources that will
// be created
type DomainNameLabelScopeTypes string

const (
	// TenantReuse type
	DomainNameLabelScopeTypesTenantReuse = DomainNameLabelScopeTypes("TenantReuse")
	// SubscriptionReuse type
	DomainNameLabelScopeTypesSubscriptionReuse = DomainNameLabelScopeTypes("SubscriptionReuse")
	// ResourceGroupReuse type
	DomainNameLabelScopeTypesResourceGroupReuse = DomainNameLabelScopeTypes("ResourceGroupReuse")
	// NoReuse type
	DomainNameLabelScopeTypesNoReuse = DomainNameLabelScopeTypes("NoReuse")
)

func (DomainNameLabelScopeTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameLabelScopeTypes)(nil)).Elem()
}

func (e DomainNameLabelScopeTypes) ToDomainNameLabelScopeTypesOutput() DomainNameLabelScopeTypesOutput {
	return pulumi.ToOutput(e).(DomainNameLabelScopeTypesOutput)
}

func (e DomainNameLabelScopeTypes) ToDomainNameLabelScopeTypesOutputWithContext(ctx context.Context) DomainNameLabelScopeTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DomainNameLabelScopeTypesOutput)
}

func (e DomainNameLabelScopeTypes) ToDomainNameLabelScopeTypesPtrOutput() DomainNameLabelScopeTypesPtrOutput {
	return e.ToDomainNameLabelScopeTypesPtrOutputWithContext(context.Background())
}

func (e DomainNameLabelScopeTypes) ToDomainNameLabelScopeTypesPtrOutputWithContext(ctx context.Context) DomainNameLabelScopeTypesPtrOutput {
	return DomainNameLabelScopeTypes(e).ToDomainNameLabelScopeTypesOutputWithContext(ctx).ToDomainNameLabelScopeTypesPtrOutputWithContext(ctx)
}

func (e DomainNameLabelScopeTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainNameLabelScopeTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainNameLabelScopeTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DomainNameLabelScopeTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DomainNameLabelScopeTypesOutput struct{ *pulumi.OutputState }

func (DomainNameLabelScopeTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameLabelScopeTypes)(nil)).Elem()
}

func (o DomainNameLabelScopeTypesOutput) ToDomainNameLabelScopeTypesOutput() DomainNameLabelScopeTypesOutput {
	return o
}

func (o DomainNameLabelScopeTypesOutput) ToDomainNameLabelScopeTypesOutputWithContext(ctx context.Context) DomainNameLabelScopeTypesOutput {
	return o
}

func (o DomainNameLabelScopeTypesOutput) ToDomainNameLabelScopeTypesPtrOutput() DomainNameLabelScopeTypesPtrOutput {
	return o.ToDomainNameLabelScopeTypesPtrOutputWithContext(context.Background())
}

func (o DomainNameLabelScopeTypesOutput) ToDomainNameLabelScopeTypesPtrOutputWithContext(ctx context.Context) DomainNameLabelScopeTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNameLabelScopeTypes) *DomainNameLabelScopeTypes {
		return &v
	}).(DomainNameLabelScopeTypesPtrOutput)
}

func (o DomainNameLabelScopeTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainNameLabelScopeTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainNameLabelScopeTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainNameLabelScopeTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainNameLabelScopeTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainNameLabelScopeTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainNameLabelScopeTypesPtrOutput struct{ *pulumi.OutputState }

func (DomainNameLabelScopeTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameLabelScopeTypes)(nil)).Elem()
}

func (o DomainNameLabelScopeTypesPtrOutput) ToDomainNameLabelScopeTypesPtrOutput() DomainNameLabelScopeTypesPtrOutput {
	return o
}

func (o DomainNameLabelScopeTypesPtrOutput) ToDomainNameLabelScopeTypesPtrOutputWithContext(ctx context.Context) DomainNameLabelScopeTypesPtrOutput {
	return o
}

func (o DomainNameLabelScopeTypesPtrOutput) Elem() DomainNameLabelScopeTypesOutput {
	return o.ApplyT(func(v *DomainNameLabelScopeTypes) DomainNameLabelScopeTypes {
		if v != nil {
			return *v
		}
		var ret DomainNameLabelScopeTypes
		return ret
	}).(DomainNameLabelScopeTypesOutput)
}

func (o DomainNameLabelScopeTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainNameLabelScopeTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainNameLabelScopeTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DomainNameLabelScopeTypesInput is an input type that accepts values of the DomainNameLabelScopeTypes enum
// A concrete instance of `DomainNameLabelScopeTypesInput` can be one of the following:
//
//	DomainNameLabelScopeTypesTenantReuse
//	DomainNameLabelScopeTypesSubscriptionReuse
//	DomainNameLabelScopeTypesResourceGroupReuse
//	DomainNameLabelScopeTypesNoReuse
type DomainNameLabelScopeTypesInput interface {
	pulumi.Input

	ToDomainNameLabelScopeTypesOutput() DomainNameLabelScopeTypesOutput
	ToDomainNameLabelScopeTypesOutputWithContext(context.Context) DomainNameLabelScopeTypesOutput
}

var domainNameLabelScopeTypesPtrType = reflect.TypeOf((**DomainNameLabelScopeTypes)(nil)).Elem()

type DomainNameLabelScopeTypesPtrInput interface {
	pulumi.Input

	ToDomainNameLabelScopeTypesPtrOutput() DomainNameLabelScopeTypesPtrOutput
	ToDomainNameLabelScopeTypesPtrOutputWithContext(context.Context) DomainNameLabelScopeTypesPtrOutput
}

type domainNameLabelScopeTypesPtr string

func DomainNameLabelScopeTypesPtr(v string) DomainNameLabelScopeTypesPtrInput {
	return (*domainNameLabelScopeTypesPtr)(&v)
}

func (*domainNameLabelScopeTypesPtr) ElementType() reflect.Type {
	return domainNameLabelScopeTypesPtrType
}

func (in *domainNameLabelScopeTypesPtr) ToDomainNameLabelScopeTypesPtrOutput() DomainNameLabelScopeTypesPtrOutput {
	return pulumi.ToOutput(in).(DomainNameLabelScopeTypesPtrOutput)
}

func (in *domainNameLabelScopeTypesPtr) ToDomainNameLabelScopeTypesPtrOutputWithContext(ctx context.Context) DomainNameLabelScopeTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DomainNameLabelScopeTypesPtrOutput)
}

// Eviction Policy to follow when evicting Spot VMs.
type EvictionPolicy string

const (
	// When evicted, the Spot VM will be deleted and the corresponding capacity will be updated to reflect this.
	EvictionPolicyDelete = EvictionPolicy("Delete")
	// When evicted, the Spot VM will be deallocated/stopped
	EvictionPolicyDeallocate = EvictionPolicy("Deallocate")
)

func (EvictionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictionPolicy)(nil)).Elem()
}

func (e EvictionPolicy) ToEvictionPolicyOutput() EvictionPolicyOutput {
	return pulumi.ToOutput(e).(EvictionPolicyOutput)
}

func (e EvictionPolicy) ToEvictionPolicyOutputWithContext(ctx context.Context) EvictionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvictionPolicyOutput)
}

func (e EvictionPolicy) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return e.ToEvictionPolicyPtrOutputWithContext(context.Background())
}

func (e EvictionPolicy) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return EvictionPolicy(e).ToEvictionPolicyOutputWithContext(ctx).ToEvictionPolicyPtrOutputWithContext(ctx)
}

func (e EvictionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvictionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvictionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvictionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvictionPolicyOutput struct{ *pulumi.OutputState }

func (EvictionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictionPolicy)(nil)).Elem()
}

func (o EvictionPolicyOutput) ToEvictionPolicyOutput() EvictionPolicyOutput {
	return o
}

func (o EvictionPolicyOutput) ToEvictionPolicyOutputWithContext(ctx context.Context) EvictionPolicyOutput {
	return o
}

func (o EvictionPolicyOutput) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return o.ToEvictionPolicyPtrOutputWithContext(context.Background())
}

func (o EvictionPolicyOutput) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvictionPolicy) *EvictionPolicy {
		return &v
	}).(EvictionPolicyPtrOutput)
}

func (o EvictionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvictionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvictionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvictionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvictionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvictionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvictionPolicyPtrOutput struct{ *pulumi.OutputState }

func (EvictionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvictionPolicy)(nil)).Elem()
}

func (o EvictionPolicyPtrOutput) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return o
}

func (o EvictionPolicyPtrOutput) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return o
}

func (o EvictionPolicyPtrOutput) Elem() EvictionPolicyOutput {
	return o.ApplyT(func(v *EvictionPolicy) EvictionPolicy {
		if v != nil {
			return *v
		}
		var ret EvictionPolicy
		return ret
	}).(EvictionPolicyOutput)
}

func (o EvictionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvictionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvictionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvictionPolicyInput is an input type that accepts values of the EvictionPolicy enum
// A concrete instance of `EvictionPolicyInput` can be one of the following:
//
//	EvictionPolicyDelete
//	EvictionPolicyDeallocate
type EvictionPolicyInput interface {
	pulumi.Input

	ToEvictionPolicyOutput() EvictionPolicyOutput
	ToEvictionPolicyOutputWithContext(context.Context) EvictionPolicyOutput
}

var evictionPolicyPtrType = reflect.TypeOf((**EvictionPolicy)(nil)).Elem()

type EvictionPolicyPtrInput interface {
	pulumi.Input

	ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput
	ToEvictionPolicyPtrOutputWithContext(context.Context) EvictionPolicyPtrOutput
}

type evictionPolicyPtr string

func EvictionPolicyPtr(v string) EvictionPolicyPtrInput {
	return (*evictionPolicyPtr)(&v)
}

func (*evictionPolicyPtr) ElementType() reflect.Type {
	return evictionPolicyPtrType
}

func (in *evictionPolicyPtr) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return pulumi.ToOutput(in).(EvictionPolicyPtrOutput)
}

func (in *evictionPolicyPtr) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvictionPolicyPtrOutput)
}

// Available from Api-Version 2019-07-01 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
// values are: 'IPv4' and 'IPv6'.
type IPVersion string

const (
	// IPv4 version
	IPVersionIPv4 = IPVersion("IPv4")
	// IPv6 version
	IPVersionIPv6 = IPVersion("IPv6")
)

func (IPVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*IPVersion)(nil)).Elem()
}

func (e IPVersion) ToIPVersionOutput() IPVersionOutput {
	return pulumi.ToOutput(e).(IPVersionOutput)
}

func (e IPVersion) ToIPVersionOutputWithContext(ctx context.Context) IPVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IPVersionOutput)
}

func (e IPVersion) ToIPVersionPtrOutput() IPVersionPtrOutput {
	return e.ToIPVersionPtrOutputWithContext(context.Background())
}

func (e IPVersion) ToIPVersionPtrOutputWithContext(ctx context.Context) IPVersionPtrOutput {
	return IPVersion(e).ToIPVersionOutputWithContext(ctx).ToIPVersionPtrOutputWithContext(ctx)
}

func (e IPVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IPVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IPVersionOutput struct{ *pulumi.OutputState }

func (IPVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPVersion)(nil)).Elem()
}

func (o IPVersionOutput) ToIPVersionOutput() IPVersionOutput {
	return o
}

func (o IPVersionOutput) ToIPVersionOutputWithContext(ctx context.Context) IPVersionOutput {
	return o
}

func (o IPVersionOutput) ToIPVersionPtrOutput() IPVersionPtrOutput {
	return o.ToIPVersionPtrOutputWithContext(context.Background())
}

func (o IPVersionOutput) ToIPVersionPtrOutputWithContext(ctx context.Context) IPVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPVersion) *IPVersion {
		return &v
	}).(IPVersionPtrOutput)
}

func (o IPVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IPVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IPVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IPVersionPtrOutput struct{ *pulumi.OutputState }

func (IPVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPVersion)(nil)).Elem()
}

func (o IPVersionPtrOutput) ToIPVersionPtrOutput() IPVersionPtrOutput {
	return o
}

func (o IPVersionPtrOutput) ToIPVersionPtrOutputWithContext(ctx context.Context) IPVersionPtrOutput {
	return o
}

func (o IPVersionPtrOutput) Elem() IPVersionOutput {
	return o.ApplyT(func(v *IPVersion) IPVersion {
		if v != nil {
			return *v
		}
		var ret IPVersion
		return ret
	}).(IPVersionOutput)
}

func (o IPVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IPVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IPVersionInput is an input type that accepts values of the IPVersion enum
// A concrete instance of `IPVersionInput` can be one of the following:
//
//	IPVersionIPv4
//	IPVersionIPv6
type IPVersionInput interface {
	pulumi.Input

	ToIPVersionOutput() IPVersionOutput
	ToIPVersionOutputWithContext(context.Context) IPVersionOutput
}

var ipversionPtrType = reflect.TypeOf((**IPVersion)(nil)).Elem()

type IPVersionPtrInput interface {
	pulumi.Input

	ToIPVersionPtrOutput() IPVersionPtrOutput
	ToIPVersionPtrOutputWithContext(context.Context) IPVersionPtrOutput
}

type ipversionPtr string

func IPVersionPtr(v string) IPVersionPtrInput {
	return (*ipversionPtr)(&v)
}

func (*ipversionPtr) ElementType() reflect.Type {
	return ipversionPtrType
}

func (in *ipversionPtr) ToIPVersionPtrOutput() IPVersionPtrOutput {
	return pulumi.ToOutput(in).(IPVersionPtrOutput)
}

func (in *ipversionPtr) ToIPVersionPtrOutputWithContext(ctx context.Context) IPVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IPVersionPtrOutput)
}

// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine. <br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
type LinuxPatchAssessmentMode string

const (
	// You control the timing of patch assessments on a virtual machine.
	LinuxPatchAssessmentModeImageDefault = LinuxPatchAssessmentMode("ImageDefault")
	// The platform will trigger periodic patch assessments.The property provisionVMAgent must be true.
	LinuxPatchAssessmentModeAutomaticByPlatform = LinuxPatchAssessmentMode("AutomaticByPlatform")
)

func (LinuxPatchAssessmentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxPatchAssessmentMode)(nil)).Elem()
}

func (e LinuxPatchAssessmentMode) ToLinuxPatchAssessmentModeOutput() LinuxPatchAssessmentModeOutput {
	return pulumi.ToOutput(e).(LinuxPatchAssessmentModeOutput)
}

func (e LinuxPatchAssessmentMode) ToLinuxPatchAssessmentModeOutputWithContext(ctx context.Context) LinuxPatchAssessmentModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LinuxPatchAssessmentModeOutput)
}

func (e LinuxPatchAssessmentMode) ToLinuxPatchAssessmentModePtrOutput() LinuxPatchAssessmentModePtrOutput {
	return e.ToLinuxPatchAssessmentModePtrOutputWithContext(context.Background())
}

func (e LinuxPatchAssessmentMode) ToLinuxPatchAssessmentModePtrOutputWithContext(ctx context.Context) LinuxPatchAssessmentModePtrOutput {
	return LinuxPatchAssessmentMode(e).ToLinuxPatchAssessmentModeOutputWithContext(ctx).ToLinuxPatchAssessmentModePtrOutputWithContext(ctx)
}

func (e LinuxPatchAssessmentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxPatchAssessmentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxPatchAssessmentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LinuxPatchAssessmentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LinuxPatchAssessmentModeOutput struct{ *pulumi.OutputState }

func (LinuxPatchAssessmentModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxPatchAssessmentMode)(nil)).Elem()
}

func (o LinuxPatchAssessmentModeOutput) ToLinuxPatchAssessmentModeOutput() LinuxPatchAssessmentModeOutput {
	return o
}

func (o LinuxPatchAssessmentModeOutput) ToLinuxPatchAssessmentModeOutputWithContext(ctx context.Context) LinuxPatchAssessmentModeOutput {
	return o
}

func (o LinuxPatchAssessmentModeOutput) ToLinuxPatchAssessmentModePtrOutput() LinuxPatchAssessmentModePtrOutput {
	return o.ToLinuxPatchAssessmentModePtrOutputWithContext(context.Background())
}

func (o LinuxPatchAssessmentModeOutput) ToLinuxPatchAssessmentModePtrOutputWithContext(ctx context.Context) LinuxPatchAssessmentModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxPatchAssessmentMode) *LinuxPatchAssessmentMode {
		return &v
	}).(LinuxPatchAssessmentModePtrOutput)
}

func (o LinuxPatchAssessmentModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LinuxPatchAssessmentModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxPatchAssessmentMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LinuxPatchAssessmentModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxPatchAssessmentModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxPatchAssessmentMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LinuxPatchAssessmentModePtrOutput struct{ *pulumi.OutputState }

func (LinuxPatchAssessmentModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxPatchAssessmentMode)(nil)).Elem()
}

func (o LinuxPatchAssessmentModePtrOutput) ToLinuxPatchAssessmentModePtrOutput() LinuxPatchAssessmentModePtrOutput {
	return o
}

func (o LinuxPatchAssessmentModePtrOutput) ToLinuxPatchAssessmentModePtrOutputWithContext(ctx context.Context) LinuxPatchAssessmentModePtrOutput {
	return o
}

func (o LinuxPatchAssessmentModePtrOutput) Elem() LinuxPatchAssessmentModeOutput {
	return o.ApplyT(func(v *LinuxPatchAssessmentMode) LinuxPatchAssessmentMode {
		if v != nil {
			return *v
		}
		var ret LinuxPatchAssessmentMode
		return ret
	}).(LinuxPatchAssessmentModeOutput)
}

func (o LinuxPatchAssessmentModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxPatchAssessmentModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LinuxPatchAssessmentMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LinuxPatchAssessmentModeInput is an input type that accepts values of the LinuxPatchAssessmentMode enum
// A concrete instance of `LinuxPatchAssessmentModeInput` can be one of the following:
//
//	LinuxPatchAssessmentModeImageDefault
//	LinuxPatchAssessmentModeAutomaticByPlatform
type LinuxPatchAssessmentModeInput interface {
	pulumi.Input

	ToLinuxPatchAssessmentModeOutput() LinuxPatchAssessmentModeOutput
	ToLinuxPatchAssessmentModeOutputWithContext(context.Context) LinuxPatchAssessmentModeOutput
}

var linuxPatchAssessmentModePtrType = reflect.TypeOf((**LinuxPatchAssessmentMode)(nil)).Elem()

type LinuxPatchAssessmentModePtrInput interface {
	pulumi.Input

	ToLinuxPatchAssessmentModePtrOutput() LinuxPatchAssessmentModePtrOutput
	ToLinuxPatchAssessmentModePtrOutputWithContext(context.Context) LinuxPatchAssessmentModePtrOutput
}

type linuxPatchAssessmentModePtr string

func LinuxPatchAssessmentModePtr(v string) LinuxPatchAssessmentModePtrInput {
	return (*linuxPatchAssessmentModePtr)(&v)
}

func (*linuxPatchAssessmentModePtr) ElementType() reflect.Type {
	return linuxPatchAssessmentModePtrType
}

func (in *linuxPatchAssessmentModePtr) ToLinuxPatchAssessmentModePtrOutput() LinuxPatchAssessmentModePtrOutput {
	return pulumi.ToOutput(in).(LinuxPatchAssessmentModePtrOutput)
}

func (in *linuxPatchAssessmentModePtr) ToLinuxPatchAssessmentModePtrOutputWithContext(ctx context.Context) LinuxPatchAssessmentModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LinuxPatchAssessmentModePtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
type LinuxVMGuestPatchAutomaticByPlatformRebootSetting string

const (
	// Unknown Reboot setting
	LinuxVMGuestPatchAutomaticByPlatformRebootSettingUnknown = LinuxVMGuestPatchAutomaticByPlatformRebootSetting("Unknown")
	// IfRequired Reboot setting
	LinuxVMGuestPatchAutomaticByPlatformRebootSettingIfRequired = LinuxVMGuestPatchAutomaticByPlatformRebootSetting("IfRequired")
	// Never Reboot setting
	LinuxVMGuestPatchAutomaticByPlatformRebootSettingNever = LinuxVMGuestPatchAutomaticByPlatformRebootSetting("Never")
	// Always Reboot setting
	LinuxVMGuestPatchAutomaticByPlatformRebootSettingAlways = LinuxVMGuestPatchAutomaticByPlatformRebootSetting("Always")
)

func (LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return pulumi.ToOutput(e).(LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput)
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput)
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return e.ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(context.Background())
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return LinuxVMGuestPatchAutomaticByPlatformRebootSetting(e).ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(ctx).ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx)
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o.ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxVMGuestPatchAutomaticByPlatformRebootSetting) *LinuxVMGuestPatchAutomaticByPlatformRebootSetting {
		return &v
	}).(LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput)
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxVMGuestPatchAutomaticByPlatformRebootSetting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) Elem() LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformRebootSetting) LinuxVMGuestPatchAutomaticByPlatformRebootSetting {
		if v != nil {
			return *v
		}
		var ret LinuxVMGuestPatchAutomaticByPlatformRebootSetting
		return ret
	}).(LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput)
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LinuxVMGuestPatchAutomaticByPlatformRebootSetting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LinuxVMGuestPatchAutomaticByPlatformRebootSettingInput is an input type that accepts values of the LinuxVMGuestPatchAutomaticByPlatformRebootSetting enum
// A concrete instance of `LinuxVMGuestPatchAutomaticByPlatformRebootSettingInput` can be one of the following:
//
//	LinuxVMGuestPatchAutomaticByPlatformRebootSettingUnknown
//	LinuxVMGuestPatchAutomaticByPlatformRebootSettingIfRequired
//	LinuxVMGuestPatchAutomaticByPlatformRebootSettingNever
//	LinuxVMGuestPatchAutomaticByPlatformRebootSettingAlways
type LinuxVMGuestPatchAutomaticByPlatformRebootSettingInput interface {
	pulumi.Input

	ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput
	ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput
}

var linuxVMGuestPatchAutomaticByPlatformRebootSettingPtrType = reflect.TypeOf((**LinuxVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()

type LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrInput interface {
	pulumi.Input

	ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput
	ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput
}

type linuxVMGuestPatchAutomaticByPlatformRebootSettingPtr string

func LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtr(v string) LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrInput {
	return (*linuxVMGuestPatchAutomaticByPlatformRebootSettingPtr)(&v)
}

func (*linuxVMGuestPatchAutomaticByPlatformRebootSettingPtr) ElementType() reflect.Type {
	return linuxVMGuestPatchAutomaticByPlatformRebootSettingPtrType
}

func (in *linuxVMGuestPatchAutomaticByPlatformRebootSettingPtr) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return pulumi.ToOutput(in).(LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput)
}

func (in *linuxVMGuestPatchAutomaticByPlatformRebootSettingPtr) ToLinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
// virtual machine's default patching configuration is used. <br /><br />
// **AutomaticByPlatform** - The virtual machine will be automatically updated by
// the platform. The property provisionVMAgent must be true
type LinuxVMGuestPatchMode string

const (
	// The virtual machine's default patching configuration is used.
	LinuxVMGuestPatchModeImageDefault = LinuxVMGuestPatchMode("ImageDefault")
	// The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true.
	LinuxVMGuestPatchModeAutomaticByPlatform = LinuxVMGuestPatchMode("AutomaticByPlatform")
)

func (LinuxVMGuestPatchMode) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchMode)(nil)).Elem()
}

func (e LinuxVMGuestPatchMode) ToLinuxVMGuestPatchModeOutput() LinuxVMGuestPatchModeOutput {
	return pulumi.ToOutput(e).(LinuxVMGuestPatchModeOutput)
}

func (e LinuxVMGuestPatchMode) ToLinuxVMGuestPatchModeOutputWithContext(ctx context.Context) LinuxVMGuestPatchModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LinuxVMGuestPatchModeOutput)
}

func (e LinuxVMGuestPatchMode) ToLinuxVMGuestPatchModePtrOutput() LinuxVMGuestPatchModePtrOutput {
	return e.ToLinuxVMGuestPatchModePtrOutputWithContext(context.Background())
}

func (e LinuxVMGuestPatchMode) ToLinuxVMGuestPatchModePtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchModePtrOutput {
	return LinuxVMGuestPatchMode(e).ToLinuxVMGuestPatchModeOutputWithContext(ctx).ToLinuxVMGuestPatchModePtrOutputWithContext(ctx)
}

func (e LinuxVMGuestPatchMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxVMGuestPatchMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxVMGuestPatchMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LinuxVMGuestPatchMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LinuxVMGuestPatchModeOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchMode)(nil)).Elem()
}

func (o LinuxVMGuestPatchModeOutput) ToLinuxVMGuestPatchModeOutput() LinuxVMGuestPatchModeOutput {
	return o
}

func (o LinuxVMGuestPatchModeOutput) ToLinuxVMGuestPatchModeOutputWithContext(ctx context.Context) LinuxVMGuestPatchModeOutput {
	return o
}

func (o LinuxVMGuestPatchModeOutput) ToLinuxVMGuestPatchModePtrOutput() LinuxVMGuestPatchModePtrOutput {
	return o.ToLinuxVMGuestPatchModePtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchModeOutput) ToLinuxVMGuestPatchModePtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxVMGuestPatchMode) *LinuxVMGuestPatchMode {
		return &v
	}).(LinuxVMGuestPatchModePtrOutput)
}

func (o LinuxVMGuestPatchModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxVMGuestPatchMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LinuxVMGuestPatchModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxVMGuestPatchMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LinuxVMGuestPatchModePtrOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVMGuestPatchMode)(nil)).Elem()
}

func (o LinuxVMGuestPatchModePtrOutput) ToLinuxVMGuestPatchModePtrOutput() LinuxVMGuestPatchModePtrOutput {
	return o
}

func (o LinuxVMGuestPatchModePtrOutput) ToLinuxVMGuestPatchModePtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchModePtrOutput {
	return o
}

func (o LinuxVMGuestPatchModePtrOutput) Elem() LinuxVMGuestPatchModeOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchMode) LinuxVMGuestPatchMode {
		if v != nil {
			return *v
		}
		var ret LinuxVMGuestPatchMode
		return ret
	}).(LinuxVMGuestPatchModeOutput)
}

func (o LinuxVMGuestPatchModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LinuxVMGuestPatchMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LinuxVMGuestPatchModeInput is an input type that accepts values of the LinuxVMGuestPatchMode enum
// A concrete instance of `LinuxVMGuestPatchModeInput` can be one of the following:
//
//	LinuxVMGuestPatchModeImageDefault
//	LinuxVMGuestPatchModeAutomaticByPlatform
type LinuxVMGuestPatchModeInput interface {
	pulumi.Input

	ToLinuxVMGuestPatchModeOutput() LinuxVMGuestPatchModeOutput
	ToLinuxVMGuestPatchModeOutputWithContext(context.Context) LinuxVMGuestPatchModeOutput
}

var linuxVMGuestPatchModePtrType = reflect.TypeOf((**LinuxVMGuestPatchMode)(nil)).Elem()

type LinuxVMGuestPatchModePtrInput interface {
	pulumi.Input

	ToLinuxVMGuestPatchModePtrOutput() LinuxVMGuestPatchModePtrOutput
	ToLinuxVMGuestPatchModePtrOutputWithContext(context.Context) LinuxVMGuestPatchModePtrOutput
}

type linuxVMGuestPatchModePtr string

func LinuxVMGuestPatchModePtr(v string) LinuxVMGuestPatchModePtrInput {
	return (*linuxVMGuestPatchModePtr)(&v)
}

func (*linuxVMGuestPatchModePtr) ElementType() reflect.Type {
	return linuxVMGuestPatchModePtrType
}

func (in *linuxVMGuestPatchModePtr) ToLinuxVMGuestPatchModePtrOutput() LinuxVMGuestPatchModePtrOutput {
	return pulumi.ToOutput(in).(LinuxVMGuestPatchModePtrOutput)
}

func (in *linuxVMGuestPatchModePtr) ToLinuxVMGuestPatchModePtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LinuxVMGuestPatchModePtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
// ProxyAgent will start to audit or monitor but not enforce access control over
// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
// access control. The default value is Enforce mode.
type Mode string

const (
	// Audit Mode
	ModeAudit = Mode("Audit")
	// Enforce Mode
	ModeEnforce = Mode("Enforce")
)

func (Mode) ElementType() reflect.Type {
	return reflect.TypeOf((*Mode)(nil)).Elem()
}

func (e Mode) ToModeOutput() ModeOutput {
	return pulumi.ToOutput(e).(ModeOutput)
}

func (e Mode) ToModeOutputWithContext(ctx context.Context) ModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ModeOutput)
}

func (e Mode) ToModePtrOutput() ModePtrOutput {
	return e.ToModePtrOutputWithContext(context.Background())
}

func (e Mode) ToModePtrOutputWithContext(ctx context.Context) ModePtrOutput {
	return Mode(e).ToModeOutputWithContext(ctx).ToModePtrOutputWithContext(ctx)
}

func (e Mode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Mode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Mode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Mode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ModeOutput struct{ *pulumi.OutputState }

func (ModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mode)(nil)).Elem()
}

func (o ModeOutput) ToModeOutput() ModeOutput {
	return o
}

func (o ModeOutput) ToModeOutputWithContext(ctx context.Context) ModeOutput {
	return o
}

func (o ModeOutput) ToModePtrOutput() ModePtrOutput {
	return o.ToModePtrOutputWithContext(context.Background())
}

func (o ModeOutput) ToModePtrOutputWithContext(ctx context.Context) ModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mode) *Mode {
		return &v
	}).(ModePtrOutput)
}

func (o ModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Mode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Mode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ModePtrOutput struct{ *pulumi.OutputState }

func (ModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mode)(nil)).Elem()
}

func (o ModePtrOutput) ToModePtrOutput() ModePtrOutput {
	return o
}

func (o ModePtrOutput) ToModePtrOutputWithContext(ctx context.Context) ModePtrOutput {
	return o
}

func (o ModePtrOutput) Elem() ModeOutput {
	return o.ApplyT(func(v *Mode) Mode {
		if v != nil {
			return *v
		}
		var ret Mode
		return ret
	}).(ModeOutput)
}

func (o ModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Mode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ModeInput is an input type that accepts values of the Mode enum
// A concrete instance of `ModeInput` can be one of the following:
//
//	ModeAudit
//	ModeEnforce
type ModeInput interface {
	pulumi.Input

	ToModeOutput() ModeOutput
	ToModeOutputWithContext(context.Context) ModeOutput
}

var modePtrType = reflect.TypeOf((**Mode)(nil)).Elem()

type ModePtrInput interface {
	pulumi.Input

	ToModePtrOutput() ModePtrOutput
	ToModePtrOutputWithContext(context.Context) ModePtrOutput
}

type modePtr string

func ModePtr(v string) ModePtrInput {
	return (*modePtr)(&v)
}

func (*modePtr) ElementType() reflect.Type {
	return modePtrType
}

func (in *modePtr) ToModePtrOutput() ModePtrOutput {
	return pulumi.ToOutput(in).(ModePtrOutput)
}

func (in *modePtr) ToModePtrOutputWithContext(ctx context.Context) ModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ModePtrOutput)
}

// specifies the Microsoft.Network API version used when creating networking
// resources in the Network Interface Configurations for Virtual Machine Scale Set
// with orchestration mode 'Flexible'
type NetworkApiVersion string

const (
	// Initial version supported. Later versions are supported as well.
	NetworkApiVersion_V2020_11_01 = NetworkApiVersion("2020-11-01")
)

func (NetworkApiVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkApiVersion)(nil)).Elem()
}

func (e NetworkApiVersion) ToNetworkApiVersionOutput() NetworkApiVersionOutput {
	return pulumi.ToOutput(e).(NetworkApiVersionOutput)
}

func (e NetworkApiVersion) ToNetworkApiVersionOutputWithContext(ctx context.Context) NetworkApiVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkApiVersionOutput)
}

func (e NetworkApiVersion) ToNetworkApiVersionPtrOutput() NetworkApiVersionPtrOutput {
	return e.ToNetworkApiVersionPtrOutputWithContext(context.Background())
}

func (e NetworkApiVersion) ToNetworkApiVersionPtrOutputWithContext(ctx context.Context) NetworkApiVersionPtrOutput {
	return NetworkApiVersion(e).ToNetworkApiVersionOutputWithContext(ctx).ToNetworkApiVersionPtrOutputWithContext(ctx)
}

func (e NetworkApiVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkApiVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkApiVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkApiVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkApiVersionOutput struct{ *pulumi.OutputState }

func (NetworkApiVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkApiVersion)(nil)).Elem()
}

func (o NetworkApiVersionOutput) ToNetworkApiVersionOutput() NetworkApiVersionOutput {
	return o
}

func (o NetworkApiVersionOutput) ToNetworkApiVersionOutputWithContext(ctx context.Context) NetworkApiVersionOutput {
	return o
}

func (o NetworkApiVersionOutput) ToNetworkApiVersionPtrOutput() NetworkApiVersionPtrOutput {
	return o.ToNetworkApiVersionPtrOutputWithContext(context.Background())
}

func (o NetworkApiVersionOutput) ToNetworkApiVersionPtrOutputWithContext(ctx context.Context) NetworkApiVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkApiVersion) *NetworkApiVersion {
		return &v
	}).(NetworkApiVersionPtrOutput)
}

func (o NetworkApiVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkApiVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkApiVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkApiVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkApiVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkApiVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkApiVersionPtrOutput struct{ *pulumi.OutputState }

func (NetworkApiVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkApiVersion)(nil)).Elem()
}

func (o NetworkApiVersionPtrOutput) ToNetworkApiVersionPtrOutput() NetworkApiVersionPtrOutput {
	return o
}

func (o NetworkApiVersionPtrOutput) ToNetworkApiVersionPtrOutputWithContext(ctx context.Context) NetworkApiVersionPtrOutput {
	return o
}

func (o NetworkApiVersionPtrOutput) Elem() NetworkApiVersionOutput {
	return o.ApplyT(func(v *NetworkApiVersion) NetworkApiVersion {
		if v != nil {
			return *v
		}
		var ret NetworkApiVersion
		return ret
	}).(NetworkApiVersionOutput)
}

func (o NetworkApiVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkApiVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkApiVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkApiVersionInput is an input type that accepts values of the NetworkApiVersion enum
// A concrete instance of `NetworkApiVersionInput` can be one of the following:
//
//	NetworkApiVersion_V2020_11_01
type NetworkApiVersionInput interface {
	pulumi.Input

	ToNetworkApiVersionOutput() NetworkApiVersionOutput
	ToNetworkApiVersionOutputWithContext(context.Context) NetworkApiVersionOutput
}

var networkApiVersionPtrType = reflect.TypeOf((**NetworkApiVersion)(nil)).Elem()

type NetworkApiVersionPtrInput interface {
	pulumi.Input

	ToNetworkApiVersionPtrOutput() NetworkApiVersionPtrOutput
	ToNetworkApiVersionPtrOutputWithContext(context.Context) NetworkApiVersionPtrOutput
}

type networkApiVersionPtr string

func NetworkApiVersionPtr(v string) NetworkApiVersionPtrInput {
	return (*networkApiVersionPtr)(&v)
}

func (*networkApiVersionPtr) ElementType() reflect.Type {
	return networkApiVersionPtrType
}

func (in *networkApiVersionPtr) ToNetworkApiVersionPtrOutput() NetworkApiVersionPtrOutput {
	return pulumi.ToOutput(in).(NetworkApiVersionPtrOutput)
}

func (in *networkApiVersionPtr) ToNetworkApiVersionPtrOutputWithContext(ctx context.Context) NetworkApiVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkApiVersionPtrOutput)
}

// Specifies whether the Auxiliary mode is enabled for the Network Interface
// resource.
type NetworkInterfaceAuxiliaryMode string

const (
	// None Mode
	NetworkInterfaceAuxiliaryModeNone = NetworkInterfaceAuxiliaryMode("None")
	// AcceleratedConnections Mode
	NetworkInterfaceAuxiliaryModeAcceleratedConnections = NetworkInterfaceAuxiliaryMode("AcceleratedConnections")
	// Floating Mode
	NetworkInterfaceAuxiliaryModeFloating = NetworkInterfaceAuxiliaryMode("Floating")
)

func (NetworkInterfaceAuxiliaryMode) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAuxiliaryMode)(nil)).Elem()
}

func (e NetworkInterfaceAuxiliaryMode) ToNetworkInterfaceAuxiliaryModeOutput() NetworkInterfaceAuxiliaryModeOutput {
	return pulumi.ToOutput(e).(NetworkInterfaceAuxiliaryModeOutput)
}

func (e NetworkInterfaceAuxiliaryMode) ToNetworkInterfaceAuxiliaryModeOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliaryModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkInterfaceAuxiliaryModeOutput)
}

func (e NetworkInterfaceAuxiliaryMode) ToNetworkInterfaceAuxiliaryModePtrOutput() NetworkInterfaceAuxiliaryModePtrOutput {
	return e.ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceAuxiliaryMode) ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliaryModePtrOutput {
	return NetworkInterfaceAuxiliaryMode(e).ToNetworkInterfaceAuxiliaryModeOutputWithContext(ctx).ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(ctx)
}

func (e NetworkInterfaceAuxiliaryMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceAuxiliaryMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceAuxiliaryMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceAuxiliaryMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkInterfaceAuxiliaryModeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAuxiliaryModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAuxiliaryMode)(nil)).Elem()
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToNetworkInterfaceAuxiliaryModeOutput() NetworkInterfaceAuxiliaryModeOutput {
	return o
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToNetworkInterfaceAuxiliaryModeOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliaryModeOutput {
	return o
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToNetworkInterfaceAuxiliaryModePtrOutput() NetworkInterfaceAuxiliaryModePtrOutput {
	return o.ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliaryModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceAuxiliaryMode) *NetworkInterfaceAuxiliaryMode {
		return &v
	}).(NetworkInterfaceAuxiliaryModePtrOutput)
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceAuxiliaryMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliaryModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceAuxiliaryMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkInterfaceAuxiliaryModePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAuxiliaryModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceAuxiliaryMode)(nil)).Elem()
}

func (o NetworkInterfaceAuxiliaryModePtrOutput) ToNetworkInterfaceAuxiliaryModePtrOutput() NetworkInterfaceAuxiliaryModePtrOutput {
	return o
}

func (o NetworkInterfaceAuxiliaryModePtrOutput) ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliaryModePtrOutput {
	return o
}

func (o NetworkInterfaceAuxiliaryModePtrOutput) Elem() NetworkInterfaceAuxiliaryModeOutput {
	return o.ApplyT(func(v *NetworkInterfaceAuxiliaryMode) NetworkInterfaceAuxiliaryMode {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceAuxiliaryMode
		return ret
	}).(NetworkInterfaceAuxiliaryModeOutput)
}

func (o NetworkInterfaceAuxiliaryModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliaryModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkInterfaceAuxiliaryMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkInterfaceAuxiliaryModeInput is an input type that accepts values of the NetworkInterfaceAuxiliaryMode enum
// A concrete instance of `NetworkInterfaceAuxiliaryModeInput` can be one of the following:
//
//	NetworkInterfaceAuxiliaryModeNone
//	NetworkInterfaceAuxiliaryModeAcceleratedConnections
//	NetworkInterfaceAuxiliaryModeFloating
type NetworkInterfaceAuxiliaryModeInput interface {
	pulumi.Input

	ToNetworkInterfaceAuxiliaryModeOutput() NetworkInterfaceAuxiliaryModeOutput
	ToNetworkInterfaceAuxiliaryModeOutputWithContext(context.Context) NetworkInterfaceAuxiliaryModeOutput
}

var networkInterfaceAuxiliaryModePtrType = reflect.TypeOf((**NetworkInterfaceAuxiliaryMode)(nil)).Elem()

type NetworkInterfaceAuxiliaryModePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceAuxiliaryModePtrOutput() NetworkInterfaceAuxiliaryModePtrOutput
	ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(context.Context) NetworkInterfaceAuxiliaryModePtrOutput
}

type networkInterfaceAuxiliaryModePtr string

func NetworkInterfaceAuxiliaryModePtr(v string) NetworkInterfaceAuxiliaryModePtrInput {
	return (*networkInterfaceAuxiliaryModePtr)(&v)
}

func (*networkInterfaceAuxiliaryModePtr) ElementType() reflect.Type {
	return networkInterfaceAuxiliaryModePtrType
}

func (in *networkInterfaceAuxiliaryModePtr) ToNetworkInterfaceAuxiliaryModePtrOutput() NetworkInterfaceAuxiliaryModePtrOutput {
	return pulumi.ToOutput(in).(NetworkInterfaceAuxiliaryModePtrOutput)
}

func (in *networkInterfaceAuxiliaryModePtr) ToNetworkInterfaceAuxiliaryModePtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliaryModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkInterfaceAuxiliaryModePtrOutput)
}

// Specifies whether the Auxiliary sku is enabled for the Network Interface
// resource.
type NetworkInterfaceAuxiliarySku string

const (
	// no sku
	NetworkInterfaceAuxiliarySkuNone = NetworkInterfaceAuxiliarySku("None")
	// A1 sku
	NetworkInterfaceAuxiliarySkuA1 = NetworkInterfaceAuxiliarySku("A1")
	// A2 sku
	NetworkInterfaceAuxiliarySkuA2 = NetworkInterfaceAuxiliarySku("A2")
	// A4 sku
	NetworkInterfaceAuxiliarySkuA4 = NetworkInterfaceAuxiliarySku("A4")
	// A8 sku
	NetworkInterfaceAuxiliarySkuA8 = NetworkInterfaceAuxiliarySku("A8")
)

func (NetworkInterfaceAuxiliarySku) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAuxiliarySku)(nil)).Elem()
}

func (e NetworkInterfaceAuxiliarySku) ToNetworkInterfaceAuxiliarySkuOutput() NetworkInterfaceAuxiliarySkuOutput {
	return pulumi.ToOutput(e).(NetworkInterfaceAuxiliarySkuOutput)
}

func (e NetworkInterfaceAuxiliarySku) ToNetworkInterfaceAuxiliarySkuOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliarySkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkInterfaceAuxiliarySkuOutput)
}

func (e NetworkInterfaceAuxiliarySku) ToNetworkInterfaceAuxiliarySkuPtrOutput() NetworkInterfaceAuxiliarySkuPtrOutput {
	return e.ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceAuxiliarySku) ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliarySkuPtrOutput {
	return NetworkInterfaceAuxiliarySku(e).ToNetworkInterfaceAuxiliarySkuOutputWithContext(ctx).ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(ctx)
}

func (e NetworkInterfaceAuxiliarySku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceAuxiliarySku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceAuxiliarySku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceAuxiliarySku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkInterfaceAuxiliarySkuOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAuxiliarySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAuxiliarySku)(nil)).Elem()
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToNetworkInterfaceAuxiliarySkuOutput() NetworkInterfaceAuxiliarySkuOutput {
	return o
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToNetworkInterfaceAuxiliarySkuOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliarySkuOutput {
	return o
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToNetworkInterfaceAuxiliarySkuPtrOutput() NetworkInterfaceAuxiliarySkuPtrOutput {
	return o.ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliarySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceAuxiliarySku) *NetworkInterfaceAuxiliarySku {
		return &v
	}).(NetworkInterfaceAuxiliarySkuPtrOutput)
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceAuxiliarySku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliarySkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceAuxiliarySku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkInterfaceAuxiliarySkuPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAuxiliarySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceAuxiliarySku)(nil)).Elem()
}

func (o NetworkInterfaceAuxiliarySkuPtrOutput) ToNetworkInterfaceAuxiliarySkuPtrOutput() NetworkInterfaceAuxiliarySkuPtrOutput {
	return o
}

func (o NetworkInterfaceAuxiliarySkuPtrOutput) ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliarySkuPtrOutput {
	return o
}

func (o NetworkInterfaceAuxiliarySkuPtrOutput) Elem() NetworkInterfaceAuxiliarySkuOutput {
	return o.ApplyT(func(v *NetworkInterfaceAuxiliarySku) NetworkInterfaceAuxiliarySku {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceAuxiliarySku
		return ret
	}).(NetworkInterfaceAuxiliarySkuOutput)
}

func (o NetworkInterfaceAuxiliarySkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceAuxiliarySkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkInterfaceAuxiliarySku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkInterfaceAuxiliarySkuInput is an input type that accepts values of the NetworkInterfaceAuxiliarySku enum
// A concrete instance of `NetworkInterfaceAuxiliarySkuInput` can be one of the following:
//
//	NetworkInterfaceAuxiliarySkuNone
//	NetworkInterfaceAuxiliarySkuA1
//	NetworkInterfaceAuxiliarySkuA2
//	NetworkInterfaceAuxiliarySkuA4
//	NetworkInterfaceAuxiliarySkuA8
type NetworkInterfaceAuxiliarySkuInput interface {
	pulumi.Input

	ToNetworkInterfaceAuxiliarySkuOutput() NetworkInterfaceAuxiliarySkuOutput
	ToNetworkInterfaceAuxiliarySkuOutputWithContext(context.Context) NetworkInterfaceAuxiliarySkuOutput
}

var networkInterfaceAuxiliarySkuPtrType = reflect.TypeOf((**NetworkInterfaceAuxiliarySku)(nil)).Elem()

type NetworkInterfaceAuxiliarySkuPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceAuxiliarySkuPtrOutput() NetworkInterfaceAuxiliarySkuPtrOutput
	ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(context.Context) NetworkInterfaceAuxiliarySkuPtrOutput
}

type networkInterfaceAuxiliarySkuPtr string

func NetworkInterfaceAuxiliarySkuPtr(v string) NetworkInterfaceAuxiliarySkuPtrInput {
	return (*networkInterfaceAuxiliarySkuPtr)(&v)
}

func (*networkInterfaceAuxiliarySkuPtr) ElementType() reflect.Type {
	return networkInterfaceAuxiliarySkuPtrType
}

func (in *networkInterfaceAuxiliarySkuPtr) ToNetworkInterfaceAuxiliarySkuPtrOutput() NetworkInterfaceAuxiliarySkuPtrOutput {
	return pulumi.ToOutput(in).(NetworkInterfaceAuxiliarySkuPtrOutput)
}

func (in *networkInterfaceAuxiliarySkuPtr) ToNetworkInterfaceAuxiliarySkuPtrOutputWithContext(ctx context.Context) NetworkInterfaceAuxiliarySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkInterfaceAuxiliarySkuPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the
// disk if creating a VM from user-image or a specialized VHD. Possible values
// are: **Windows,** **Linux.**
type OperatingSystemTypes string

const (
	// Windows OS type
	OperatingSystemTypesWindows = OperatingSystemTypes("Windows")
	// Linux OS type
	OperatingSystemTypesLinux = OperatingSystemTypes("Linux")
)

func (OperatingSystemTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return pulumi.ToOutput(e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return e.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return OperatingSystemTypes(e).ToOperatingSystemTypesOutputWithContext(ctx).ToOperatingSystemTypesPtrOutputWithContext(ctx)
}

func (e OperatingSystemTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatingSystemTypesOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperatingSystemTypes) *OperatingSystemTypes {
		return &v
	}).(OperatingSystemTypesPtrOutput)
}

func (o OperatingSystemTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatingSystemTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatingSystemTypesPtrOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) Elem() OperatingSystemTypesOutput {
	return o.ApplyT(func(v *OperatingSystemTypes) OperatingSystemTypes {
		if v != nil {
			return *v
		}
		var ret OperatingSystemTypes
		return ret
	}).(OperatingSystemTypesOutput)
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperatingSystemTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatingSystemTypesInput is an input type that accepts values of the OperatingSystemTypes enum
// A concrete instance of `OperatingSystemTypesInput` can be one of the following:
//
//	OperatingSystemTypesWindows
//	OperatingSystemTypesLinux
type OperatingSystemTypesInput interface {
	pulumi.Input

	ToOperatingSystemTypesOutput() OperatingSystemTypesOutput
	ToOperatingSystemTypesOutputWithContext(context.Context) OperatingSystemTypesOutput
}

var operatingSystemTypesPtrType = reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()

type OperatingSystemTypesPtrInput interface {
	pulumi.Input

	ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput
	ToOperatingSystemTypesPtrOutputWithContext(context.Context) OperatingSystemTypesPtrOutput
}

type operatingSystemTypesPtr string

func OperatingSystemTypesPtr(v string) OperatingSystemTypesPtrInput {
	return (*operatingSystemTypesPtr)(&v)
}

func (*operatingSystemTypesPtr) ElementType() reflect.Type {
	return operatingSystemTypesPtrType
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return pulumi.ToOutput(in).(OperatingSystemTypesPtrOutput)
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatingSystemTypesPtrOutput)
}

// The pass name. Currently, the only allowable value is OobeSystem.
type PassName string

const (
	PassNameOobeSystem = PassName("OobeSystem")
)

func (PassName) ElementType() reflect.Type {
	return reflect.TypeOf((*PassName)(nil)).Elem()
}

func (e PassName) ToPassNameOutput() PassNameOutput {
	return pulumi.ToOutput(e).(PassNameOutput)
}

func (e PassName) ToPassNameOutputWithContext(ctx context.Context) PassNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PassNameOutput)
}

func (e PassName) ToPassNamePtrOutput() PassNamePtrOutput {
	return e.ToPassNamePtrOutputWithContext(context.Background())
}

func (e PassName) ToPassNamePtrOutputWithContext(ctx context.Context) PassNamePtrOutput {
	return PassName(e).ToPassNameOutputWithContext(ctx).ToPassNamePtrOutputWithContext(ctx)
}

func (e PassName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PassName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PassName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PassName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PassNameOutput struct{ *pulumi.OutputState }

func (PassNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PassName)(nil)).Elem()
}

func (o PassNameOutput) ToPassNameOutput() PassNameOutput {
	return o
}

func (o PassNameOutput) ToPassNameOutputWithContext(ctx context.Context) PassNameOutput {
	return o
}

func (o PassNameOutput) ToPassNamePtrOutput() PassNamePtrOutput {
	return o.ToPassNamePtrOutputWithContext(context.Background())
}

func (o PassNameOutput) ToPassNamePtrOutputWithContext(ctx context.Context) PassNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PassName) *PassName {
		return &v
	}).(PassNamePtrOutput)
}

func (o PassNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PassNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PassName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PassNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PassNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PassName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PassNamePtrOutput struct{ *pulumi.OutputState }

func (PassNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PassName)(nil)).Elem()
}

func (o PassNamePtrOutput) ToPassNamePtrOutput() PassNamePtrOutput {
	return o
}

func (o PassNamePtrOutput) ToPassNamePtrOutputWithContext(ctx context.Context) PassNamePtrOutput {
	return o
}

func (o PassNamePtrOutput) Elem() PassNameOutput {
	return o.ApplyT(func(v *PassName) PassName {
		if v != nil {
			return *v
		}
		var ret PassName
		return ret
	}).(PassNameOutput)
}

func (o PassNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PassNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PassName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PassNameInput is an input type that accepts values of the PassName enum
// A concrete instance of `PassNameInput` can be one of the following:
//
//	PassNameOobeSystem
type PassNameInput interface {
	pulumi.Input

	ToPassNameOutput() PassNameOutput
	ToPassNameOutputWithContext(context.Context) PassNameOutput
}

var passNamePtrType = reflect.TypeOf((**PassName)(nil)).Elem()

type PassNamePtrInput interface {
	pulumi.Input

	ToPassNamePtrOutput() PassNamePtrOutput
	ToPassNamePtrOutputWithContext(context.Context) PassNamePtrOutput
}

type passNamePtr string

func PassNamePtr(v string) PassNamePtrInput {
	return (*passNamePtr)(&v)
}

func (*passNamePtr) ElementType() reflect.Type {
	return passNamePtrType
}

func (in *passNamePtr) ToPassNamePtrOutput() PassNamePtrOutput {
	return pulumi.ToOutput(in).(PassNamePtrOutput)
}

func (in *passNamePtr) ToPassNamePtrOutputWithContext(ctx context.Context) PassNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PassNamePtrOutput)
}

// Specifies the protocol of WinRM listener. Possible values are: **http,**
// **https.**
type ProtocolTypes string

const (
	// Http protocol
	ProtocolTypesHttp = ProtocolTypes("Http")
	// Https protocol
	ProtocolTypesHttps = ProtocolTypes("Https")
)

func (ProtocolTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolTypes)(nil)).Elem()
}

func (e ProtocolTypes) ToProtocolTypesOutput() ProtocolTypesOutput {
	return pulumi.ToOutput(e).(ProtocolTypesOutput)
}

func (e ProtocolTypes) ToProtocolTypesOutputWithContext(ctx context.Context) ProtocolTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolTypesOutput)
}

func (e ProtocolTypes) ToProtocolTypesPtrOutput() ProtocolTypesPtrOutput {
	return e.ToProtocolTypesPtrOutputWithContext(context.Background())
}

func (e ProtocolTypes) ToProtocolTypesPtrOutputWithContext(ctx context.Context) ProtocolTypesPtrOutput {
	return ProtocolTypes(e).ToProtocolTypesOutputWithContext(ctx).ToProtocolTypesPtrOutputWithContext(ctx)
}

func (e ProtocolTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtocolTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtocolTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProtocolTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolTypesOutput struct{ *pulumi.OutputState }

func (ProtocolTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolTypes)(nil)).Elem()
}

func (o ProtocolTypesOutput) ToProtocolTypesOutput() ProtocolTypesOutput {
	return o
}

func (o ProtocolTypesOutput) ToProtocolTypesOutputWithContext(ctx context.Context) ProtocolTypesOutput {
	return o
}

func (o ProtocolTypesOutput) ToProtocolTypesPtrOutput() ProtocolTypesPtrOutput {
	return o.ToProtocolTypesPtrOutputWithContext(context.Background())
}

func (o ProtocolTypesOutput) ToProtocolTypesPtrOutputWithContext(ctx context.Context) ProtocolTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtocolTypes) *ProtocolTypes {
		return &v
	}).(ProtocolTypesPtrOutput)
}

func (o ProtocolTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtocolTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtocolTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolTypesPtrOutput struct{ *pulumi.OutputState }

func (ProtocolTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolTypes)(nil)).Elem()
}

func (o ProtocolTypesPtrOutput) ToProtocolTypesPtrOutput() ProtocolTypesPtrOutput {
	return o
}

func (o ProtocolTypesPtrOutput) ToProtocolTypesPtrOutputWithContext(ctx context.Context) ProtocolTypesPtrOutput {
	return o
}

func (o ProtocolTypesPtrOutput) Elem() ProtocolTypesOutput {
	return o.ApplyT(func(v *ProtocolTypes) ProtocolTypes {
		if v != nil {
			return *v
		}
		var ret ProtocolTypes
		return ret
	}).(ProtocolTypesOutput)
}

func (o ProtocolTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProtocolTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolTypesInput is an input type that accepts values of the ProtocolTypes enum
// A concrete instance of `ProtocolTypesInput` can be one of the following:
//
//	ProtocolTypesHttp
//	ProtocolTypesHttps
type ProtocolTypesInput interface {
	pulumi.Input

	ToProtocolTypesOutput() ProtocolTypesOutput
	ToProtocolTypesOutputWithContext(context.Context) ProtocolTypesOutput
}

var protocolTypesPtrType = reflect.TypeOf((**ProtocolTypes)(nil)).Elem()

type ProtocolTypesPtrInput interface {
	pulumi.Input

	ToProtocolTypesPtrOutput() ProtocolTypesPtrOutput
	ToProtocolTypesPtrOutputWithContext(context.Context) ProtocolTypesPtrOutput
}

type protocolTypesPtr string

func ProtocolTypesPtr(v string) ProtocolTypesPtrInput {
	return (*protocolTypesPtr)(&v)
}

func (*protocolTypesPtr) ElementType() reflect.Type {
	return protocolTypesPtrType
}

func (in *protocolTypesPtr) ToProtocolTypesPtrOutput() ProtocolTypesPtrOutput {
	return pulumi.ToOutput(in).(ProtocolTypesPtrOutput)
}

func (in *protocolTypesPtr) ToProtocolTypesPtrOutputWithContext(ctx context.Context) ProtocolTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolTypesPtrOutput)
}

// Specify public IP sku name
type PublicIPAddressSkuName string

const (
	// Basic sku name
	PublicIPAddressSkuNameBasic = PublicIPAddressSkuName("Basic")
	// Standard sku name
	PublicIPAddressSkuNameStandard = PublicIPAddressSkuName("Standard")
)

func (PublicIPAddressSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuName)(nil)).Elem()
}

func (e PublicIPAddressSkuName) ToPublicIPAddressSkuNameOutput() PublicIPAddressSkuNameOutput {
	return pulumi.ToOutput(e).(PublicIPAddressSkuNameOutput)
}

func (e PublicIPAddressSkuName) ToPublicIPAddressSkuNameOutputWithContext(ctx context.Context) PublicIPAddressSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicIPAddressSkuNameOutput)
}

func (e PublicIPAddressSkuName) ToPublicIPAddressSkuNamePtrOutput() PublicIPAddressSkuNamePtrOutput {
	return e.ToPublicIPAddressSkuNamePtrOutputWithContext(context.Background())
}

func (e PublicIPAddressSkuName) ToPublicIPAddressSkuNamePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuNamePtrOutput {
	return PublicIPAddressSkuName(e).ToPublicIPAddressSkuNameOutputWithContext(ctx).ToPublicIPAddressSkuNamePtrOutputWithContext(ctx)
}

func (e PublicIPAddressSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicIPAddressSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicIPAddressSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicIPAddressSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicIPAddressSkuNameOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuName)(nil)).Elem()
}

func (o PublicIPAddressSkuNameOutput) ToPublicIPAddressSkuNameOutput() PublicIPAddressSkuNameOutput {
	return o
}

func (o PublicIPAddressSkuNameOutput) ToPublicIPAddressSkuNameOutputWithContext(ctx context.Context) PublicIPAddressSkuNameOutput {
	return o
}

func (o PublicIPAddressSkuNameOutput) ToPublicIPAddressSkuNamePtrOutput() PublicIPAddressSkuNamePtrOutput {
	return o.ToPublicIPAddressSkuNamePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuNameOutput) ToPublicIPAddressSkuNamePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressSkuName) *PublicIPAddressSkuName {
		return &v
	}).(PublicIPAddressSkuNamePtrOutput)
}

func (o PublicIPAddressSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicIPAddressSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicIPAddressSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicIPAddressSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuNamePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuName)(nil)).Elem()
}

func (o PublicIPAddressSkuNamePtrOutput) ToPublicIPAddressSkuNamePtrOutput() PublicIPAddressSkuNamePtrOutput {
	return o
}

func (o PublicIPAddressSkuNamePtrOutput) ToPublicIPAddressSkuNamePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuNamePtrOutput {
	return o
}

func (o PublicIPAddressSkuNamePtrOutput) Elem() PublicIPAddressSkuNameOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuName) PublicIPAddressSkuName {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSkuName
		return ret
	}).(PublicIPAddressSkuNameOutput)
}

func (o PublicIPAddressSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicIPAddressSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicIPAddressSkuNameInput is an input type that accepts values of the PublicIPAddressSkuName enum
// A concrete instance of `PublicIPAddressSkuNameInput` can be one of the following:
//
//	PublicIPAddressSkuNameBasic
//	PublicIPAddressSkuNameStandard
type PublicIPAddressSkuNameInput interface {
	pulumi.Input

	ToPublicIPAddressSkuNameOutput() PublicIPAddressSkuNameOutput
	ToPublicIPAddressSkuNameOutputWithContext(context.Context) PublicIPAddressSkuNameOutput
}

var publicIPAddressSkuNamePtrType = reflect.TypeOf((**PublicIPAddressSkuName)(nil)).Elem()

type PublicIPAddressSkuNamePtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuNamePtrOutput() PublicIPAddressSkuNamePtrOutput
	ToPublicIPAddressSkuNamePtrOutputWithContext(context.Context) PublicIPAddressSkuNamePtrOutput
}

type publicIPAddressSkuNamePtr string

func PublicIPAddressSkuNamePtr(v string) PublicIPAddressSkuNamePtrInput {
	return (*publicIPAddressSkuNamePtr)(&v)
}

func (*publicIPAddressSkuNamePtr) ElementType() reflect.Type {
	return publicIPAddressSkuNamePtrType
}

func (in *publicIPAddressSkuNamePtr) ToPublicIPAddressSkuNamePtrOutput() PublicIPAddressSkuNamePtrOutput {
	return pulumi.ToOutput(in).(PublicIPAddressSkuNamePtrOutput)
}

func (in *publicIPAddressSkuNamePtr) ToPublicIPAddressSkuNamePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicIPAddressSkuNamePtrOutput)
}

// Specify public IP sku tier
type PublicIPAddressSkuTier string

const (
	// Regional sku tier
	PublicIPAddressSkuTierRegional = PublicIPAddressSkuTier("Regional")
	// Global sku tier
	PublicIPAddressSkuTierGlobal = PublicIPAddressSkuTier("Global")
)

func (PublicIPAddressSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuTier)(nil)).Elem()
}

func (e PublicIPAddressSkuTier) ToPublicIPAddressSkuTierOutput() PublicIPAddressSkuTierOutput {
	return pulumi.ToOutput(e).(PublicIPAddressSkuTierOutput)
}

func (e PublicIPAddressSkuTier) ToPublicIPAddressSkuTierOutputWithContext(ctx context.Context) PublicIPAddressSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicIPAddressSkuTierOutput)
}

func (e PublicIPAddressSkuTier) ToPublicIPAddressSkuTierPtrOutput() PublicIPAddressSkuTierPtrOutput {
	return e.ToPublicIPAddressSkuTierPtrOutputWithContext(context.Background())
}

func (e PublicIPAddressSkuTier) ToPublicIPAddressSkuTierPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuTierPtrOutput {
	return PublicIPAddressSkuTier(e).ToPublicIPAddressSkuTierOutputWithContext(ctx).ToPublicIPAddressSkuTierPtrOutputWithContext(ctx)
}

func (e PublicIPAddressSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicIPAddressSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicIPAddressSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicIPAddressSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicIPAddressSkuTierOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuTier)(nil)).Elem()
}

func (o PublicIPAddressSkuTierOutput) ToPublicIPAddressSkuTierOutput() PublicIPAddressSkuTierOutput {
	return o
}

func (o PublicIPAddressSkuTierOutput) ToPublicIPAddressSkuTierOutputWithContext(ctx context.Context) PublicIPAddressSkuTierOutput {
	return o
}

func (o PublicIPAddressSkuTierOutput) ToPublicIPAddressSkuTierPtrOutput() PublicIPAddressSkuTierPtrOutput {
	return o.ToPublicIPAddressSkuTierPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuTierOutput) ToPublicIPAddressSkuTierPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressSkuTier) *PublicIPAddressSkuTier {
		return &v
	}).(PublicIPAddressSkuTierPtrOutput)
}

func (o PublicIPAddressSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicIPAddressSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicIPAddressSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicIPAddressSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuTierPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuTier)(nil)).Elem()
}

func (o PublicIPAddressSkuTierPtrOutput) ToPublicIPAddressSkuTierPtrOutput() PublicIPAddressSkuTierPtrOutput {
	return o
}

func (o PublicIPAddressSkuTierPtrOutput) ToPublicIPAddressSkuTierPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuTierPtrOutput {
	return o
}

func (o PublicIPAddressSkuTierPtrOutput) Elem() PublicIPAddressSkuTierOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuTier) PublicIPAddressSkuTier {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSkuTier
		return ret
	}).(PublicIPAddressSkuTierOutput)
}

func (o PublicIPAddressSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicIPAddressSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicIPAddressSkuTierInput is an input type that accepts values of the PublicIPAddressSkuTier enum
// A concrete instance of `PublicIPAddressSkuTierInput` can be one of the following:
//
//	PublicIPAddressSkuTierRegional
//	PublicIPAddressSkuTierGlobal
type PublicIPAddressSkuTierInput interface {
	pulumi.Input

	ToPublicIPAddressSkuTierOutput() PublicIPAddressSkuTierOutput
	ToPublicIPAddressSkuTierOutputWithContext(context.Context) PublicIPAddressSkuTierOutput
}

var publicIPAddressSkuTierPtrType = reflect.TypeOf((**PublicIPAddressSkuTier)(nil)).Elem()

type PublicIPAddressSkuTierPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuTierPtrOutput() PublicIPAddressSkuTierPtrOutput
	ToPublicIPAddressSkuTierPtrOutputWithContext(context.Context) PublicIPAddressSkuTierPtrOutput
}

type publicIPAddressSkuTierPtr string

func PublicIPAddressSkuTierPtr(v string) PublicIPAddressSkuTierPtrInput {
	return (*publicIPAddressSkuTierPtr)(&v)
}

func (*publicIPAddressSkuTierPtr) ElementType() reflect.Type {
	return publicIPAddressSkuTierPtrType
}

func (in *publicIPAddressSkuTierPtr) ToPublicIPAddressSkuTierPtrOutput() PublicIPAddressSkuTierPtrOutput {
	return pulumi.ToOutput(in).(PublicIPAddressSkuTierPtrOutput)
}

func (in *publicIPAddressSkuTierPtr) ToPublicIPAddressSkuTierPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicIPAddressSkuTierPtrOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
type RegularPriorityAllocationStrategy string

const (
	// Default. VM sizes distribution will be determined to optimize for price.
	RegularPriorityAllocationStrategyLowestPrice = RegularPriorityAllocationStrategy("LowestPrice")
)

func (RegularPriorityAllocationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*RegularPriorityAllocationStrategy)(nil)).Elem()
}

func (e RegularPriorityAllocationStrategy) ToRegularPriorityAllocationStrategyOutput() RegularPriorityAllocationStrategyOutput {
	return pulumi.ToOutput(e).(RegularPriorityAllocationStrategyOutput)
}

func (e RegularPriorityAllocationStrategy) ToRegularPriorityAllocationStrategyOutputWithContext(ctx context.Context) RegularPriorityAllocationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegularPriorityAllocationStrategyOutput)
}

func (e RegularPriorityAllocationStrategy) ToRegularPriorityAllocationStrategyPtrOutput() RegularPriorityAllocationStrategyPtrOutput {
	return e.ToRegularPriorityAllocationStrategyPtrOutputWithContext(context.Background())
}

func (e RegularPriorityAllocationStrategy) ToRegularPriorityAllocationStrategyPtrOutputWithContext(ctx context.Context) RegularPriorityAllocationStrategyPtrOutput {
	return RegularPriorityAllocationStrategy(e).ToRegularPriorityAllocationStrategyOutputWithContext(ctx).ToRegularPriorityAllocationStrategyPtrOutputWithContext(ctx)
}

func (e RegularPriorityAllocationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegularPriorityAllocationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegularPriorityAllocationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegularPriorityAllocationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegularPriorityAllocationStrategyOutput struct{ *pulumi.OutputState }

func (RegularPriorityAllocationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegularPriorityAllocationStrategy)(nil)).Elem()
}

func (o RegularPriorityAllocationStrategyOutput) ToRegularPriorityAllocationStrategyOutput() RegularPriorityAllocationStrategyOutput {
	return o
}

func (o RegularPriorityAllocationStrategyOutput) ToRegularPriorityAllocationStrategyOutputWithContext(ctx context.Context) RegularPriorityAllocationStrategyOutput {
	return o
}

func (o RegularPriorityAllocationStrategyOutput) ToRegularPriorityAllocationStrategyPtrOutput() RegularPriorityAllocationStrategyPtrOutput {
	return o.ToRegularPriorityAllocationStrategyPtrOutputWithContext(context.Background())
}

func (o RegularPriorityAllocationStrategyOutput) ToRegularPriorityAllocationStrategyPtrOutputWithContext(ctx context.Context) RegularPriorityAllocationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegularPriorityAllocationStrategy) *RegularPriorityAllocationStrategy {
		return &v
	}).(RegularPriorityAllocationStrategyPtrOutput)
}

func (o RegularPriorityAllocationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegularPriorityAllocationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegularPriorityAllocationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegularPriorityAllocationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegularPriorityAllocationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegularPriorityAllocationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegularPriorityAllocationStrategyPtrOutput struct{ *pulumi.OutputState }

func (RegularPriorityAllocationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegularPriorityAllocationStrategy)(nil)).Elem()
}

func (o RegularPriorityAllocationStrategyPtrOutput) ToRegularPriorityAllocationStrategyPtrOutput() RegularPriorityAllocationStrategyPtrOutput {
	return o
}

func (o RegularPriorityAllocationStrategyPtrOutput) ToRegularPriorityAllocationStrategyPtrOutputWithContext(ctx context.Context) RegularPriorityAllocationStrategyPtrOutput {
	return o
}

func (o RegularPriorityAllocationStrategyPtrOutput) Elem() RegularPriorityAllocationStrategyOutput {
	return o.ApplyT(func(v *RegularPriorityAllocationStrategy) RegularPriorityAllocationStrategy {
		if v != nil {
			return *v
		}
		var ret RegularPriorityAllocationStrategy
		return ret
	}).(RegularPriorityAllocationStrategyOutput)
}

func (o RegularPriorityAllocationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegularPriorityAllocationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegularPriorityAllocationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegularPriorityAllocationStrategyInput is an input type that accepts values of the RegularPriorityAllocationStrategy enum
// A concrete instance of `RegularPriorityAllocationStrategyInput` can be one of the following:
//
//	RegularPriorityAllocationStrategyLowestPrice
type RegularPriorityAllocationStrategyInput interface {
	pulumi.Input

	ToRegularPriorityAllocationStrategyOutput() RegularPriorityAllocationStrategyOutput
	ToRegularPriorityAllocationStrategyOutputWithContext(context.Context) RegularPriorityAllocationStrategyOutput
}

var regularPriorityAllocationStrategyPtrType = reflect.TypeOf((**RegularPriorityAllocationStrategy)(nil)).Elem()

type RegularPriorityAllocationStrategyPtrInput interface {
	pulumi.Input

	ToRegularPriorityAllocationStrategyPtrOutput() RegularPriorityAllocationStrategyPtrOutput
	ToRegularPriorityAllocationStrategyPtrOutputWithContext(context.Context) RegularPriorityAllocationStrategyPtrOutput
}

type regularPriorityAllocationStrategyPtr string

func RegularPriorityAllocationStrategyPtr(v string) RegularPriorityAllocationStrategyPtrInput {
	return (*regularPriorityAllocationStrategyPtr)(&v)
}

func (*regularPriorityAllocationStrategyPtr) ElementType() reflect.Type {
	return regularPriorityAllocationStrategyPtrType
}

func (in *regularPriorityAllocationStrategyPtr) ToRegularPriorityAllocationStrategyPtrOutput() RegularPriorityAllocationStrategyPtrOutput {
	return pulumi.ToOutput(in).(RegularPriorityAllocationStrategyPtrOutput)
}

func (in *regularPriorityAllocationStrategyPtr) ToRegularPriorityAllocationStrategyPtrOutputWithContext(ctx context.Context) RegularPriorityAllocationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegularPriorityAllocationStrategyPtrOutput)
}

// Specifies the EncryptionType of the managed disk. It is set to
// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
// **Note:** It can be set for only Confidential VMs.
type SecurityEncryptionTypes string

const (
	// EncryptionType of the managed disk is set to VMGuestStateOnly for encryption
	// of just the VMGuestState blob.
	SecurityEncryptionTypesVMGuestStateOnly = SecurityEncryptionTypes("VMGuestStateOnly")
	// EncryptionType of the managed disk is set to DiskWithVMGuestState for encryption
	// of the managed disk along with VMGuestState blob.
	SecurityEncryptionTypesDiskWithVMGuestState = SecurityEncryptionTypes("DiskWithVMGuestState")
	// EncryptionType of the managed disk is set to NonPersistedTPM for not persisting
	// firmware state in the VMGuestState blob.
	SecurityEncryptionTypesNonPersistedTPM = SecurityEncryptionTypes("NonPersistedTPM")
)

func (SecurityEncryptionTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityEncryptionTypes)(nil)).Elem()
}

func (e SecurityEncryptionTypes) ToSecurityEncryptionTypesOutput() SecurityEncryptionTypesOutput {
	return pulumi.ToOutput(e).(SecurityEncryptionTypesOutput)
}

func (e SecurityEncryptionTypes) ToSecurityEncryptionTypesOutputWithContext(ctx context.Context) SecurityEncryptionTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityEncryptionTypesOutput)
}

func (e SecurityEncryptionTypes) ToSecurityEncryptionTypesPtrOutput() SecurityEncryptionTypesPtrOutput {
	return e.ToSecurityEncryptionTypesPtrOutputWithContext(context.Background())
}

func (e SecurityEncryptionTypes) ToSecurityEncryptionTypesPtrOutputWithContext(ctx context.Context) SecurityEncryptionTypesPtrOutput {
	return SecurityEncryptionTypes(e).ToSecurityEncryptionTypesOutputWithContext(ctx).ToSecurityEncryptionTypesPtrOutputWithContext(ctx)
}

func (e SecurityEncryptionTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityEncryptionTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityEncryptionTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityEncryptionTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityEncryptionTypesOutput struct{ *pulumi.OutputState }

func (SecurityEncryptionTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityEncryptionTypes)(nil)).Elem()
}

func (o SecurityEncryptionTypesOutput) ToSecurityEncryptionTypesOutput() SecurityEncryptionTypesOutput {
	return o
}

func (o SecurityEncryptionTypesOutput) ToSecurityEncryptionTypesOutputWithContext(ctx context.Context) SecurityEncryptionTypesOutput {
	return o
}

func (o SecurityEncryptionTypesOutput) ToSecurityEncryptionTypesPtrOutput() SecurityEncryptionTypesPtrOutput {
	return o.ToSecurityEncryptionTypesPtrOutputWithContext(context.Background())
}

func (o SecurityEncryptionTypesOutput) ToSecurityEncryptionTypesPtrOutputWithContext(ctx context.Context) SecurityEncryptionTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityEncryptionTypes) *SecurityEncryptionTypes {
		return &v
	}).(SecurityEncryptionTypesPtrOutput)
}

func (o SecurityEncryptionTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityEncryptionTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityEncryptionTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityEncryptionTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityEncryptionTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityEncryptionTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityEncryptionTypesPtrOutput struct{ *pulumi.OutputState }

func (SecurityEncryptionTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityEncryptionTypes)(nil)).Elem()
}

func (o SecurityEncryptionTypesPtrOutput) ToSecurityEncryptionTypesPtrOutput() SecurityEncryptionTypesPtrOutput {
	return o
}

func (o SecurityEncryptionTypesPtrOutput) ToSecurityEncryptionTypesPtrOutputWithContext(ctx context.Context) SecurityEncryptionTypesPtrOutput {
	return o
}

func (o SecurityEncryptionTypesPtrOutput) Elem() SecurityEncryptionTypesOutput {
	return o.ApplyT(func(v *SecurityEncryptionTypes) SecurityEncryptionTypes {
		if v != nil {
			return *v
		}
		var ret SecurityEncryptionTypes
		return ret
	}).(SecurityEncryptionTypesOutput)
}

func (o SecurityEncryptionTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityEncryptionTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityEncryptionTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityEncryptionTypesInput is an input type that accepts values of the SecurityEncryptionTypes enum
// A concrete instance of `SecurityEncryptionTypesInput` can be one of the following:
//
//	SecurityEncryptionTypesVMGuestStateOnly
//	SecurityEncryptionTypesDiskWithVMGuestState
//	SecurityEncryptionTypesNonPersistedTPM
type SecurityEncryptionTypesInput interface {
	pulumi.Input

	ToSecurityEncryptionTypesOutput() SecurityEncryptionTypesOutput
	ToSecurityEncryptionTypesOutputWithContext(context.Context) SecurityEncryptionTypesOutput
}

var securityEncryptionTypesPtrType = reflect.TypeOf((**SecurityEncryptionTypes)(nil)).Elem()

type SecurityEncryptionTypesPtrInput interface {
	pulumi.Input

	ToSecurityEncryptionTypesPtrOutput() SecurityEncryptionTypesPtrOutput
	ToSecurityEncryptionTypesPtrOutputWithContext(context.Context) SecurityEncryptionTypesPtrOutput
}

type securityEncryptionTypesPtr string

func SecurityEncryptionTypesPtr(v string) SecurityEncryptionTypesPtrInput {
	return (*securityEncryptionTypesPtr)(&v)
}

func (*securityEncryptionTypesPtr) ElementType() reflect.Type {
	return securityEncryptionTypesPtrType
}

func (in *securityEncryptionTypesPtr) ToSecurityEncryptionTypesPtrOutput() SecurityEncryptionTypesPtrOutput {
	return pulumi.ToOutput(in).(SecurityEncryptionTypesPtrOutput)
}

func (in *securityEncryptionTypesPtr) ToSecurityEncryptionTypesPtrOutputWithContext(ctx context.Context) SecurityEncryptionTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityEncryptionTypesPtrOutput)
}

// Specifies the SecurityType of the virtual machine. It has to be set to any
// specified value to enable UefiSettings. The default behavior is: UefiSettings
// will not be enabled unless this property is set.
type SecurityTypes string

const (
	// TrustedLaunch security type
	SecurityTypesTrustedLaunch = SecurityTypes("TrustedLaunch")
	// ConfidentialVM security type
	SecurityTypesConfidentialVM = SecurityTypes("ConfidentialVM")
)

func (SecurityTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityTypes)(nil)).Elem()
}

func (e SecurityTypes) ToSecurityTypesOutput() SecurityTypesOutput {
	return pulumi.ToOutput(e).(SecurityTypesOutput)
}

func (e SecurityTypes) ToSecurityTypesOutputWithContext(ctx context.Context) SecurityTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityTypesOutput)
}

func (e SecurityTypes) ToSecurityTypesPtrOutput() SecurityTypesPtrOutput {
	return e.ToSecurityTypesPtrOutputWithContext(context.Background())
}

func (e SecurityTypes) ToSecurityTypesPtrOutputWithContext(ctx context.Context) SecurityTypesPtrOutput {
	return SecurityTypes(e).ToSecurityTypesOutputWithContext(ctx).ToSecurityTypesPtrOutputWithContext(ctx)
}

func (e SecurityTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityTypesOutput struct{ *pulumi.OutputState }

func (SecurityTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityTypes)(nil)).Elem()
}

func (o SecurityTypesOutput) ToSecurityTypesOutput() SecurityTypesOutput {
	return o
}

func (o SecurityTypesOutput) ToSecurityTypesOutputWithContext(ctx context.Context) SecurityTypesOutput {
	return o
}

func (o SecurityTypesOutput) ToSecurityTypesPtrOutput() SecurityTypesPtrOutput {
	return o.ToSecurityTypesPtrOutputWithContext(context.Background())
}

func (o SecurityTypesOutput) ToSecurityTypesPtrOutputWithContext(ctx context.Context) SecurityTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityTypes) *SecurityTypes {
		return &v
	}).(SecurityTypesPtrOutput)
}

func (o SecurityTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityTypesPtrOutput struct{ *pulumi.OutputState }

func (SecurityTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityTypes)(nil)).Elem()
}

func (o SecurityTypesPtrOutput) ToSecurityTypesPtrOutput() SecurityTypesPtrOutput {
	return o
}

func (o SecurityTypesPtrOutput) ToSecurityTypesPtrOutputWithContext(ctx context.Context) SecurityTypesPtrOutput {
	return o
}

func (o SecurityTypesPtrOutput) Elem() SecurityTypesOutput {
	return o.ApplyT(func(v *SecurityTypes) SecurityTypes {
		if v != nil {
			return *v
		}
		var ret SecurityTypes
		return ret
	}).(SecurityTypesOutput)
}

func (o SecurityTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityTypesInput is an input type that accepts values of the SecurityTypes enum
// A concrete instance of `SecurityTypesInput` can be one of the following:
//
//	SecurityTypesTrustedLaunch
//	SecurityTypesConfidentialVM
type SecurityTypesInput interface {
	pulumi.Input

	ToSecurityTypesOutput() SecurityTypesOutput
	ToSecurityTypesOutputWithContext(context.Context) SecurityTypesOutput
}

var securityTypesPtrType = reflect.TypeOf((**SecurityTypes)(nil)).Elem()

type SecurityTypesPtrInput interface {
	pulumi.Input

	ToSecurityTypesPtrOutput() SecurityTypesPtrOutput
	ToSecurityTypesPtrOutputWithContext(context.Context) SecurityTypesPtrOutput
}

type securityTypesPtr string

func SecurityTypesPtr(v string) SecurityTypesPtrInput {
	return (*securityTypesPtr)(&v)
}

func (*securityTypesPtr) ElementType() reflect.Type {
	return securityTypesPtrType
}

func (in *securityTypesPtr) ToSecurityTypesPtrOutput() SecurityTypesPtrOutput {
	return pulumi.ToOutput(in).(SecurityTypesPtrOutput)
}

func (in *securityTypesPtr) ToSecurityTypesPtrOutputWithContext(ctx context.Context) SecurityTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityTypesPtrOutput)
}

// Specifies the name of the setting to which the content applies. Possible values
// are: FirstLogonCommands and AutoLogon.
type SettingNames string

const (
	// AutoLogon setting
	SettingNamesAutoLogon = SettingNames("AutoLogon")
	// FirstLogonCommands setting
	SettingNamesFirstLogonCommands = SettingNames("FirstLogonCommands")
)

func (SettingNames) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingNames)(nil)).Elem()
}

func (e SettingNames) ToSettingNamesOutput() SettingNamesOutput {
	return pulumi.ToOutput(e).(SettingNamesOutput)
}

func (e SettingNames) ToSettingNamesOutputWithContext(ctx context.Context) SettingNamesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingNamesOutput)
}

func (e SettingNames) ToSettingNamesPtrOutput() SettingNamesPtrOutput {
	return e.ToSettingNamesPtrOutputWithContext(context.Background())
}

func (e SettingNames) ToSettingNamesPtrOutputWithContext(ctx context.Context) SettingNamesPtrOutput {
	return SettingNames(e).ToSettingNamesOutputWithContext(ctx).ToSettingNamesPtrOutputWithContext(ctx)
}

func (e SettingNames) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingNames) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingNames) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingNames) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingNamesOutput struct{ *pulumi.OutputState }

func (SettingNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingNames)(nil)).Elem()
}

func (o SettingNamesOutput) ToSettingNamesOutput() SettingNamesOutput {
	return o
}

func (o SettingNamesOutput) ToSettingNamesOutputWithContext(ctx context.Context) SettingNamesOutput {
	return o
}

func (o SettingNamesOutput) ToSettingNamesPtrOutput() SettingNamesPtrOutput {
	return o.ToSettingNamesPtrOutputWithContext(context.Background())
}

func (o SettingNamesOutput) ToSettingNamesPtrOutputWithContext(ctx context.Context) SettingNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingNames) *SettingNames {
		return &v
	}).(SettingNamesPtrOutput)
}

func (o SettingNamesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingNamesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingNames) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingNamesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingNamesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingNames) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingNamesPtrOutput struct{ *pulumi.OutputState }

func (SettingNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingNames)(nil)).Elem()
}

func (o SettingNamesPtrOutput) ToSettingNamesPtrOutput() SettingNamesPtrOutput {
	return o
}

func (o SettingNamesPtrOutput) ToSettingNamesPtrOutputWithContext(ctx context.Context) SettingNamesPtrOutput {
	return o
}

func (o SettingNamesPtrOutput) Elem() SettingNamesOutput {
	return o.ApplyT(func(v *SettingNames) SettingNames {
		if v != nil {
			return *v
		}
		var ret SettingNames
		return ret
	}).(SettingNamesOutput)
}

func (o SettingNamesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingNamesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingNames) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingNamesInput is an input type that accepts values of the SettingNames enum
// A concrete instance of `SettingNamesInput` can be one of the following:
//
//	SettingNamesAutoLogon
//	SettingNamesFirstLogonCommands
type SettingNamesInput interface {
	pulumi.Input

	ToSettingNamesOutput() SettingNamesOutput
	ToSettingNamesOutputWithContext(context.Context) SettingNamesOutput
}

var settingNamesPtrType = reflect.TypeOf((**SettingNames)(nil)).Elem()

type SettingNamesPtrInput interface {
	pulumi.Input

	ToSettingNamesPtrOutput() SettingNamesPtrOutput
	ToSettingNamesPtrOutputWithContext(context.Context) SettingNamesPtrOutput
}

type settingNamesPtr string

func SettingNamesPtr(v string) SettingNamesPtrInput {
	return (*settingNamesPtr)(&v)
}

func (*settingNamesPtr) ElementType() reflect.Type {
	return settingNamesPtrType
}

func (in *settingNamesPtr) ToSettingNamesPtrOutput() SettingNamesPtrOutput {
	return pulumi.ToOutput(in).(SettingNamesPtrOutput)
}

func (in *settingNamesPtr) ToSettingNamesPtrOutputWithContext(ctx context.Context) SettingNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingNamesPtrOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
type SpotAllocationStrategy string

const (
	// Default. VM sizes distribution will be determined to optimize for both price and capacity.
	SpotAllocationStrategyPriceCapacityOptimized = SpotAllocationStrategy("PriceCapacityOptimized")
	// VM sizes distribution will be determined to optimize for price. Note: Capacity will still be considered here but will be given much less weight.
	SpotAllocationStrategyLowestPrice = SpotAllocationStrategy("LowestPrice")
	// VM sizes distribution will be determined to optimize for capacity.
	SpotAllocationStrategyCapacityOptimized = SpotAllocationStrategy("CapacityOptimized")
)

func (SpotAllocationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotAllocationStrategy)(nil)).Elem()
}

func (e SpotAllocationStrategy) ToSpotAllocationStrategyOutput() SpotAllocationStrategyOutput {
	return pulumi.ToOutput(e).(SpotAllocationStrategyOutput)
}

func (e SpotAllocationStrategy) ToSpotAllocationStrategyOutputWithContext(ctx context.Context) SpotAllocationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SpotAllocationStrategyOutput)
}

func (e SpotAllocationStrategy) ToSpotAllocationStrategyPtrOutput() SpotAllocationStrategyPtrOutput {
	return e.ToSpotAllocationStrategyPtrOutputWithContext(context.Background())
}

func (e SpotAllocationStrategy) ToSpotAllocationStrategyPtrOutputWithContext(ctx context.Context) SpotAllocationStrategyPtrOutput {
	return SpotAllocationStrategy(e).ToSpotAllocationStrategyOutputWithContext(ctx).ToSpotAllocationStrategyPtrOutputWithContext(ctx)
}

func (e SpotAllocationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SpotAllocationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SpotAllocationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SpotAllocationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SpotAllocationStrategyOutput struct{ *pulumi.OutputState }

func (SpotAllocationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotAllocationStrategy)(nil)).Elem()
}

func (o SpotAllocationStrategyOutput) ToSpotAllocationStrategyOutput() SpotAllocationStrategyOutput {
	return o
}

func (o SpotAllocationStrategyOutput) ToSpotAllocationStrategyOutputWithContext(ctx context.Context) SpotAllocationStrategyOutput {
	return o
}

func (o SpotAllocationStrategyOutput) ToSpotAllocationStrategyPtrOutput() SpotAllocationStrategyPtrOutput {
	return o.ToSpotAllocationStrategyPtrOutputWithContext(context.Background())
}

func (o SpotAllocationStrategyOutput) ToSpotAllocationStrategyPtrOutputWithContext(ctx context.Context) SpotAllocationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpotAllocationStrategy) *SpotAllocationStrategy {
		return &v
	}).(SpotAllocationStrategyPtrOutput)
}

func (o SpotAllocationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SpotAllocationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SpotAllocationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SpotAllocationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SpotAllocationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SpotAllocationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SpotAllocationStrategyPtrOutput struct{ *pulumi.OutputState }

func (SpotAllocationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotAllocationStrategy)(nil)).Elem()
}

func (o SpotAllocationStrategyPtrOutput) ToSpotAllocationStrategyPtrOutput() SpotAllocationStrategyPtrOutput {
	return o
}

func (o SpotAllocationStrategyPtrOutput) ToSpotAllocationStrategyPtrOutputWithContext(ctx context.Context) SpotAllocationStrategyPtrOutput {
	return o
}

func (o SpotAllocationStrategyPtrOutput) Elem() SpotAllocationStrategyOutput {
	return o.ApplyT(func(v *SpotAllocationStrategy) SpotAllocationStrategy {
		if v != nil {
			return *v
		}
		var ret SpotAllocationStrategy
		return ret
	}).(SpotAllocationStrategyOutput)
}

func (o SpotAllocationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SpotAllocationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SpotAllocationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SpotAllocationStrategyInput is an input type that accepts values of the SpotAllocationStrategy enum
// A concrete instance of `SpotAllocationStrategyInput` can be one of the following:
//
//	SpotAllocationStrategyPriceCapacityOptimized
//	SpotAllocationStrategyLowestPrice
//	SpotAllocationStrategyCapacityOptimized
type SpotAllocationStrategyInput interface {
	pulumi.Input

	ToSpotAllocationStrategyOutput() SpotAllocationStrategyOutput
	ToSpotAllocationStrategyOutputWithContext(context.Context) SpotAllocationStrategyOutput
}

var spotAllocationStrategyPtrType = reflect.TypeOf((**SpotAllocationStrategy)(nil)).Elem()

type SpotAllocationStrategyPtrInput interface {
	pulumi.Input

	ToSpotAllocationStrategyPtrOutput() SpotAllocationStrategyPtrOutput
	ToSpotAllocationStrategyPtrOutputWithContext(context.Context) SpotAllocationStrategyPtrOutput
}

type spotAllocationStrategyPtr string

func SpotAllocationStrategyPtr(v string) SpotAllocationStrategyPtrInput {
	return (*spotAllocationStrategyPtr)(&v)
}

func (*spotAllocationStrategyPtr) ElementType() reflect.Type {
	return spotAllocationStrategyPtrType
}

func (in *spotAllocationStrategyPtr) ToSpotAllocationStrategyPtrOutput() SpotAllocationStrategyPtrOutput {
	return pulumi.ToOutput(in).(SpotAllocationStrategyPtrOutput)
}

func (in *spotAllocationStrategyPtr) ToSpotAllocationStrategyPtrOutputWithContext(ctx context.Context) SpotAllocationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SpotAllocationStrategyPtrOutput)
}

// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
// only be used with data disks, it cannot be used with OS Disk.
type StorageAccountTypes string

const (
	// Standard_LRS option.
	StorageAccountTypes_Standard_LRS = StorageAccountTypes("Standard_LRS")
	// Premium_LRS option.
	StorageAccountTypes_Premium_LRS = StorageAccountTypes("Premium_LRS")
	// StandardSSD_LRS option.
	StorageAccountTypes_StandardSSD_LRS = StorageAccountTypes("StandardSSD_LRS")
	// UltraSSD_LRS option.
	StorageAccountTypes_UltraSSD_LRS = StorageAccountTypes("UltraSSD_LRS")
	// Premium_ZRS option.
	StorageAccountTypes_Premium_ZRS = StorageAccountTypes("Premium_ZRS")
	// StandardSSD_ZRS option.
	StorageAccountTypes_StandardSSD_ZRS = StorageAccountTypes("StandardSSD_ZRS")
	// PremiumV2_LRS option.
	StorageAccountTypes_PremiumV2_LRS = StorageAccountTypes("PremiumV2_LRS")
)

func (StorageAccountTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountTypes)(nil)).Elem()
}

func (e StorageAccountTypes) ToStorageAccountTypesOutput() StorageAccountTypesOutput {
	return pulumi.ToOutput(e).(StorageAccountTypesOutput)
}

func (e StorageAccountTypes) ToStorageAccountTypesOutputWithContext(ctx context.Context) StorageAccountTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageAccountTypesOutput)
}

func (e StorageAccountTypes) ToStorageAccountTypesPtrOutput() StorageAccountTypesPtrOutput {
	return e.ToStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (e StorageAccountTypes) ToStorageAccountTypesPtrOutputWithContext(ctx context.Context) StorageAccountTypesPtrOutput {
	return StorageAccountTypes(e).ToStorageAccountTypesOutputWithContext(ctx).ToStorageAccountTypesPtrOutputWithContext(ctx)
}

func (e StorageAccountTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAccountTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAccountTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageAccountTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageAccountTypesOutput struct{ *pulumi.OutputState }

func (StorageAccountTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountTypes)(nil)).Elem()
}

func (o StorageAccountTypesOutput) ToStorageAccountTypesOutput() StorageAccountTypesOutput {
	return o
}

func (o StorageAccountTypesOutput) ToStorageAccountTypesOutputWithContext(ctx context.Context) StorageAccountTypesOutput {
	return o
}

func (o StorageAccountTypesOutput) ToStorageAccountTypesPtrOutput() StorageAccountTypesPtrOutput {
	return o.ToStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypesOutput) ToStorageAccountTypesPtrOutputWithContext(ctx context.Context) StorageAccountTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageAccountTypes) *StorageAccountTypes {
		return &v
	}).(StorageAccountTypesPtrOutput)
}

func (o StorageAccountTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageAccountTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAccountTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageAccountTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAccountTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageAccountTypesPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountTypes)(nil)).Elem()
}

func (o StorageAccountTypesPtrOutput) ToStorageAccountTypesPtrOutput() StorageAccountTypesPtrOutput {
	return o
}

func (o StorageAccountTypesPtrOutput) ToStorageAccountTypesPtrOutputWithContext(ctx context.Context) StorageAccountTypesPtrOutput {
	return o
}

func (o StorageAccountTypesPtrOutput) Elem() StorageAccountTypesOutput {
	return o.ApplyT(func(v *StorageAccountTypes) StorageAccountTypes {
		if v != nil {
			return *v
		}
		var ret StorageAccountTypes
		return ret
	}).(StorageAccountTypesOutput)
}

func (o StorageAccountTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageAccountTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageAccountTypesInput is an input type that accepts values of the StorageAccountTypes enum
// A concrete instance of `StorageAccountTypesInput` can be one of the following:
//
//	StorageAccountTypes_Standard_LRS
//	StorageAccountTypes_Premium_LRS
//	StorageAccountTypes_StandardSSD_LRS
//	StorageAccountTypes_UltraSSD_LRS
//	StorageAccountTypes_Premium_ZRS
//	StorageAccountTypes_StandardSSD_ZRS
//	StorageAccountTypes_PremiumV2_LRS
type StorageAccountTypesInput interface {
	pulumi.Input

	ToStorageAccountTypesOutput() StorageAccountTypesOutput
	ToStorageAccountTypesOutputWithContext(context.Context) StorageAccountTypesOutput
}

var storageAccountTypesPtrType = reflect.TypeOf((**StorageAccountTypes)(nil)).Elem()

type StorageAccountTypesPtrInput interface {
	pulumi.Input

	ToStorageAccountTypesPtrOutput() StorageAccountTypesPtrOutput
	ToStorageAccountTypesPtrOutputWithContext(context.Context) StorageAccountTypesPtrOutput
}

type storageAccountTypesPtr string

func StorageAccountTypesPtr(v string) StorageAccountTypesPtrInput {
	return (*storageAccountTypesPtr)(&v)
}

func (*storageAccountTypesPtr) ElementType() reflect.Type {
	return storageAccountTypesPtrType
}

func (in *storageAccountTypesPtr) ToStorageAccountTypesPtrOutput() StorageAccountTypesPtrOutput {
	return pulumi.ToOutput(in).(StorageAccountTypesPtrOutput)
}

func (in *storageAccountTypesPtr) ToStorageAccountTypesPtrOutputWithContext(ctx context.Context) StorageAccountTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageAccountTypesPtrOutput)
}

// Specifies the mode of VM Guest patch assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine.<br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
type WindowsPatchAssessmentMode string

const (
	// You control the timing of patch assessments on a virtual machine.
	WindowsPatchAssessmentModeImageDefault = WindowsPatchAssessmentMode("ImageDefault")
	// The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
	WindowsPatchAssessmentModeAutomaticByPlatform = WindowsPatchAssessmentMode("AutomaticByPlatform")
)

func (WindowsPatchAssessmentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsPatchAssessmentMode)(nil)).Elem()
}

func (e WindowsPatchAssessmentMode) ToWindowsPatchAssessmentModeOutput() WindowsPatchAssessmentModeOutput {
	return pulumi.ToOutput(e).(WindowsPatchAssessmentModeOutput)
}

func (e WindowsPatchAssessmentMode) ToWindowsPatchAssessmentModeOutputWithContext(ctx context.Context) WindowsPatchAssessmentModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WindowsPatchAssessmentModeOutput)
}

func (e WindowsPatchAssessmentMode) ToWindowsPatchAssessmentModePtrOutput() WindowsPatchAssessmentModePtrOutput {
	return e.ToWindowsPatchAssessmentModePtrOutputWithContext(context.Background())
}

func (e WindowsPatchAssessmentMode) ToWindowsPatchAssessmentModePtrOutputWithContext(ctx context.Context) WindowsPatchAssessmentModePtrOutput {
	return WindowsPatchAssessmentMode(e).ToWindowsPatchAssessmentModeOutputWithContext(ctx).ToWindowsPatchAssessmentModePtrOutputWithContext(ctx)
}

func (e WindowsPatchAssessmentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsPatchAssessmentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsPatchAssessmentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WindowsPatchAssessmentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WindowsPatchAssessmentModeOutput struct{ *pulumi.OutputState }

func (WindowsPatchAssessmentModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsPatchAssessmentMode)(nil)).Elem()
}

func (o WindowsPatchAssessmentModeOutput) ToWindowsPatchAssessmentModeOutput() WindowsPatchAssessmentModeOutput {
	return o
}

func (o WindowsPatchAssessmentModeOutput) ToWindowsPatchAssessmentModeOutputWithContext(ctx context.Context) WindowsPatchAssessmentModeOutput {
	return o
}

func (o WindowsPatchAssessmentModeOutput) ToWindowsPatchAssessmentModePtrOutput() WindowsPatchAssessmentModePtrOutput {
	return o.ToWindowsPatchAssessmentModePtrOutputWithContext(context.Background())
}

func (o WindowsPatchAssessmentModeOutput) ToWindowsPatchAssessmentModePtrOutputWithContext(ctx context.Context) WindowsPatchAssessmentModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsPatchAssessmentMode) *WindowsPatchAssessmentMode {
		return &v
	}).(WindowsPatchAssessmentModePtrOutput)
}

func (o WindowsPatchAssessmentModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WindowsPatchAssessmentModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsPatchAssessmentMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WindowsPatchAssessmentModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsPatchAssessmentModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsPatchAssessmentMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WindowsPatchAssessmentModePtrOutput struct{ *pulumi.OutputState }

func (WindowsPatchAssessmentModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsPatchAssessmentMode)(nil)).Elem()
}

func (o WindowsPatchAssessmentModePtrOutput) ToWindowsPatchAssessmentModePtrOutput() WindowsPatchAssessmentModePtrOutput {
	return o
}

func (o WindowsPatchAssessmentModePtrOutput) ToWindowsPatchAssessmentModePtrOutputWithContext(ctx context.Context) WindowsPatchAssessmentModePtrOutput {
	return o
}

func (o WindowsPatchAssessmentModePtrOutput) Elem() WindowsPatchAssessmentModeOutput {
	return o.ApplyT(func(v *WindowsPatchAssessmentMode) WindowsPatchAssessmentMode {
		if v != nil {
			return *v
		}
		var ret WindowsPatchAssessmentMode
		return ret
	}).(WindowsPatchAssessmentModeOutput)
}

func (o WindowsPatchAssessmentModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsPatchAssessmentModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WindowsPatchAssessmentMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WindowsPatchAssessmentModeInput is an input type that accepts values of the WindowsPatchAssessmentMode enum
// A concrete instance of `WindowsPatchAssessmentModeInput` can be one of the following:
//
//	WindowsPatchAssessmentModeImageDefault
//	WindowsPatchAssessmentModeAutomaticByPlatform
type WindowsPatchAssessmentModeInput interface {
	pulumi.Input

	ToWindowsPatchAssessmentModeOutput() WindowsPatchAssessmentModeOutput
	ToWindowsPatchAssessmentModeOutputWithContext(context.Context) WindowsPatchAssessmentModeOutput
}

var windowsPatchAssessmentModePtrType = reflect.TypeOf((**WindowsPatchAssessmentMode)(nil)).Elem()

type WindowsPatchAssessmentModePtrInput interface {
	pulumi.Input

	ToWindowsPatchAssessmentModePtrOutput() WindowsPatchAssessmentModePtrOutput
	ToWindowsPatchAssessmentModePtrOutputWithContext(context.Context) WindowsPatchAssessmentModePtrOutput
}

type windowsPatchAssessmentModePtr string

func WindowsPatchAssessmentModePtr(v string) WindowsPatchAssessmentModePtrInput {
	return (*windowsPatchAssessmentModePtr)(&v)
}

func (*windowsPatchAssessmentModePtr) ElementType() reflect.Type {
	return windowsPatchAssessmentModePtrType
}

func (in *windowsPatchAssessmentModePtr) ToWindowsPatchAssessmentModePtrOutput() WindowsPatchAssessmentModePtrOutput {
	return pulumi.ToOutput(in).(WindowsPatchAssessmentModePtrOutput)
}

func (in *windowsPatchAssessmentModePtr) ToWindowsPatchAssessmentModePtrOutputWithContext(ctx context.Context) WindowsPatchAssessmentModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WindowsPatchAssessmentModePtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
type WindowsVMGuestPatchAutomaticByPlatformRebootSetting string

const (
	// Unknown Reboot setting
	WindowsVMGuestPatchAutomaticByPlatformRebootSettingUnknown = WindowsVMGuestPatchAutomaticByPlatformRebootSetting("Unknown")
	// IfRequired Reboot setting
	WindowsVMGuestPatchAutomaticByPlatformRebootSettingIfRequired = WindowsVMGuestPatchAutomaticByPlatformRebootSetting("IfRequired")
	// Never Reboot setting
	WindowsVMGuestPatchAutomaticByPlatformRebootSettingNever = WindowsVMGuestPatchAutomaticByPlatformRebootSetting("Never")
	// Always Reboot setting
	WindowsVMGuestPatchAutomaticByPlatformRebootSettingAlways = WindowsVMGuestPatchAutomaticByPlatformRebootSetting("Always")
)

func (WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return pulumi.ToOutput(e).(WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput)
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput)
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return e.ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(context.Background())
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return WindowsVMGuestPatchAutomaticByPlatformRebootSetting(e).ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(ctx).ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx)
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o.ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsVMGuestPatchAutomaticByPlatformRebootSetting) *WindowsVMGuestPatchAutomaticByPlatformRebootSetting {
		return &v
	}).(WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput)
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsVMGuestPatchAutomaticByPlatformRebootSetting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) Elem() WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformRebootSetting) WindowsVMGuestPatchAutomaticByPlatformRebootSetting {
		if v != nil {
			return *v
		}
		var ret WindowsVMGuestPatchAutomaticByPlatformRebootSetting
		return ret
	}).(WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput)
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WindowsVMGuestPatchAutomaticByPlatformRebootSetting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WindowsVMGuestPatchAutomaticByPlatformRebootSettingInput is an input type that accepts values of the WindowsVMGuestPatchAutomaticByPlatformRebootSetting enum
// A concrete instance of `WindowsVMGuestPatchAutomaticByPlatformRebootSettingInput` can be one of the following:
//
//	WindowsVMGuestPatchAutomaticByPlatformRebootSettingUnknown
//	WindowsVMGuestPatchAutomaticByPlatformRebootSettingIfRequired
//	WindowsVMGuestPatchAutomaticByPlatformRebootSettingNever
//	WindowsVMGuestPatchAutomaticByPlatformRebootSettingAlways
type WindowsVMGuestPatchAutomaticByPlatformRebootSettingInput interface {
	pulumi.Input

	ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput
	ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingOutputWithContext(context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput
}

var windowsVMGuestPatchAutomaticByPlatformRebootSettingPtrType = reflect.TypeOf((**WindowsVMGuestPatchAutomaticByPlatformRebootSetting)(nil)).Elem()

type WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrInput interface {
	pulumi.Input

	ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput
	ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput
}

type windowsVMGuestPatchAutomaticByPlatformRebootSettingPtr string

func WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtr(v string) WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrInput {
	return (*windowsVMGuestPatchAutomaticByPlatformRebootSettingPtr)(&v)
}

func (*windowsVMGuestPatchAutomaticByPlatformRebootSettingPtr) ElementType() reflect.Type {
	return windowsVMGuestPatchAutomaticByPlatformRebootSettingPtrType
}

func (in *windowsVMGuestPatchAutomaticByPlatformRebootSettingPtr) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput() WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return pulumi.ToOutput(in).(WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput)
}

func (in *windowsVMGuestPatchAutomaticByPlatformRebootSettingPtr) ToWindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
// control the application of patches to a virtual machine. You do this by
// applying patches manually inside the VM. In this mode, automatic updates are
// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
// automatically updated by the platform. The properties provisionVMAgent and
// WindowsConfiguration.enableAutomaticUpdates must be true
type WindowsVMGuestPatchMode string

const (
	// You control the application of patches to a virtual machine.
	// You do this by applying patches manually inside the VM. In this mode,
	// automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates
	// must be false
	WindowsVMGuestPatchModeManual = WindowsVMGuestPatchMode("Manual")
	// The virtual machine will automatically be updated by the OS.
	// The property WindowsConfiguration.enableAutomaticUpdates must be true.
	WindowsVMGuestPatchModeAutomaticByOS = WindowsVMGuestPatchMode("AutomaticByOS")
	// The virtual machine will automatically updated by the platform. The properties
	// provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true.
	WindowsVMGuestPatchModeAutomaticByPlatform = WindowsVMGuestPatchMode("AutomaticByPlatform")
)

func (WindowsVMGuestPatchMode) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchMode)(nil)).Elem()
}

func (e WindowsVMGuestPatchMode) ToWindowsVMGuestPatchModeOutput() WindowsVMGuestPatchModeOutput {
	return pulumi.ToOutput(e).(WindowsVMGuestPatchModeOutput)
}

func (e WindowsVMGuestPatchMode) ToWindowsVMGuestPatchModeOutputWithContext(ctx context.Context) WindowsVMGuestPatchModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WindowsVMGuestPatchModeOutput)
}

func (e WindowsVMGuestPatchMode) ToWindowsVMGuestPatchModePtrOutput() WindowsVMGuestPatchModePtrOutput {
	return e.ToWindowsVMGuestPatchModePtrOutputWithContext(context.Background())
}

func (e WindowsVMGuestPatchMode) ToWindowsVMGuestPatchModePtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchModePtrOutput {
	return WindowsVMGuestPatchMode(e).ToWindowsVMGuestPatchModeOutputWithContext(ctx).ToWindowsVMGuestPatchModePtrOutputWithContext(ctx)
}

func (e WindowsVMGuestPatchMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsVMGuestPatchMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsVMGuestPatchMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WindowsVMGuestPatchMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WindowsVMGuestPatchModeOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchMode)(nil)).Elem()
}

func (o WindowsVMGuestPatchModeOutput) ToWindowsVMGuestPatchModeOutput() WindowsVMGuestPatchModeOutput {
	return o
}

func (o WindowsVMGuestPatchModeOutput) ToWindowsVMGuestPatchModeOutputWithContext(ctx context.Context) WindowsVMGuestPatchModeOutput {
	return o
}

func (o WindowsVMGuestPatchModeOutput) ToWindowsVMGuestPatchModePtrOutput() WindowsVMGuestPatchModePtrOutput {
	return o.ToWindowsVMGuestPatchModePtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchModeOutput) ToWindowsVMGuestPatchModePtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsVMGuestPatchMode) *WindowsVMGuestPatchMode {
		return &v
	}).(WindowsVMGuestPatchModePtrOutput)
}

func (o WindowsVMGuestPatchModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsVMGuestPatchMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WindowsVMGuestPatchModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsVMGuestPatchMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WindowsVMGuestPatchModePtrOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVMGuestPatchMode)(nil)).Elem()
}

func (o WindowsVMGuestPatchModePtrOutput) ToWindowsVMGuestPatchModePtrOutput() WindowsVMGuestPatchModePtrOutput {
	return o
}

func (o WindowsVMGuestPatchModePtrOutput) ToWindowsVMGuestPatchModePtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchModePtrOutput {
	return o
}

func (o WindowsVMGuestPatchModePtrOutput) Elem() WindowsVMGuestPatchModeOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchMode) WindowsVMGuestPatchMode {
		if v != nil {
			return *v
		}
		var ret WindowsVMGuestPatchMode
		return ret
	}).(WindowsVMGuestPatchModeOutput)
}

func (o WindowsVMGuestPatchModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WindowsVMGuestPatchMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WindowsVMGuestPatchModeInput is an input type that accepts values of the WindowsVMGuestPatchMode enum
// A concrete instance of `WindowsVMGuestPatchModeInput` can be one of the following:
//
//	WindowsVMGuestPatchModeManual
//	WindowsVMGuestPatchModeAutomaticByOS
//	WindowsVMGuestPatchModeAutomaticByPlatform
type WindowsVMGuestPatchModeInput interface {
	pulumi.Input

	ToWindowsVMGuestPatchModeOutput() WindowsVMGuestPatchModeOutput
	ToWindowsVMGuestPatchModeOutputWithContext(context.Context) WindowsVMGuestPatchModeOutput
}

var windowsVMGuestPatchModePtrType = reflect.TypeOf((**WindowsVMGuestPatchMode)(nil)).Elem()

type WindowsVMGuestPatchModePtrInput interface {
	pulumi.Input

	ToWindowsVMGuestPatchModePtrOutput() WindowsVMGuestPatchModePtrOutput
	ToWindowsVMGuestPatchModePtrOutputWithContext(context.Context) WindowsVMGuestPatchModePtrOutput
}

type windowsVMGuestPatchModePtr string

func WindowsVMGuestPatchModePtr(v string) WindowsVMGuestPatchModePtrInput {
	return (*windowsVMGuestPatchModePtr)(&v)
}

func (*windowsVMGuestPatchModePtr) ElementType() reflect.Type {
	return windowsVMGuestPatchModePtrType
}

func (in *windowsVMGuestPatchModePtr) ToWindowsVMGuestPatchModePtrOutput() WindowsVMGuestPatchModePtrOutput {
	return pulumi.ToOutput(in).(WindowsVMGuestPatchModePtrOutput)
}

func (in *windowsVMGuestPatchModePtr) ToWindowsVMGuestPatchModePtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WindowsVMGuestPatchModePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CachingTypesOutput{})
	pulumi.RegisterOutputType(CachingTypesPtrOutput{})
	pulumi.RegisterOutputType(ComponentNameOutput{})
	pulumi.RegisterOutputType(ComponentNamePtrOutput{})
	pulumi.RegisterOutputType(DeleteOptionsOutput{})
	pulumi.RegisterOutputType(DeleteOptionsPtrOutput{})
	pulumi.RegisterOutputType(DiffDiskOptionsOutput{})
	pulumi.RegisterOutputType(DiffDiskOptionsPtrOutput{})
	pulumi.RegisterOutputType(DiffDiskPlacementOutput{})
	pulumi.RegisterOutputType(DiffDiskPlacementPtrOutput{})
	pulumi.RegisterOutputType(DiskControllerTypesOutput{})
	pulumi.RegisterOutputType(DiskControllerTypesPtrOutput{})
	pulumi.RegisterOutputType(DiskCreateOptionTypesOutput{})
	pulumi.RegisterOutputType(DiskCreateOptionTypesPtrOutput{})
	pulumi.RegisterOutputType(DiskDeleteOptionTypesOutput{})
	pulumi.RegisterOutputType(DiskDeleteOptionTypesPtrOutput{})
	pulumi.RegisterOutputType(DomainNameLabelScopeTypesOutput{})
	pulumi.RegisterOutputType(DomainNameLabelScopeTypesPtrOutput{})
	pulumi.RegisterOutputType(EvictionPolicyOutput{})
	pulumi.RegisterOutputType(EvictionPolicyPtrOutput{})
	pulumi.RegisterOutputType(IPVersionOutput{})
	pulumi.RegisterOutputType(IPVersionPtrOutput{})
	pulumi.RegisterOutputType(LinuxPatchAssessmentModeOutput{})
	pulumi.RegisterOutputType(LinuxPatchAssessmentModePtrOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchAutomaticByPlatformRebootSettingOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchModeOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchModePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ModeOutput{})
	pulumi.RegisterOutputType(ModePtrOutput{})
	pulumi.RegisterOutputType(NetworkApiVersionOutput{})
	pulumi.RegisterOutputType(NetworkApiVersionPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAuxiliaryModeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAuxiliaryModePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAuxiliarySkuOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAuxiliarySkuPtrOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesPtrOutput{})
	pulumi.RegisterOutputType(PassNameOutput{})
	pulumi.RegisterOutputType(PassNamePtrOutput{})
	pulumi.RegisterOutputType(ProtocolTypesOutput{})
	pulumi.RegisterOutputType(ProtocolTypesPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuNameOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuNamePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuTierOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuTierPtrOutput{})
	pulumi.RegisterOutputType(RegularPriorityAllocationStrategyOutput{})
	pulumi.RegisterOutputType(RegularPriorityAllocationStrategyPtrOutput{})
	pulumi.RegisterOutputType(SecurityEncryptionTypesOutput{})
	pulumi.RegisterOutputType(SecurityEncryptionTypesPtrOutput{})
	pulumi.RegisterOutputType(SecurityTypesOutput{})
	pulumi.RegisterOutputType(SecurityTypesPtrOutput{})
	pulumi.RegisterOutputType(SettingNamesOutput{})
	pulumi.RegisterOutputType(SettingNamesPtrOutput{})
	pulumi.RegisterOutputType(SpotAllocationStrategyOutput{})
	pulumi.RegisterOutputType(SpotAllocationStrategyPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountTypesOutput{})
	pulumi.RegisterOutputType(StorageAccountTypesPtrOutput{})
	pulumi.RegisterOutputType(WindowsPatchAssessmentModeOutput{})
	pulumi.RegisterOutputType(WindowsPatchAssessmentModePtrOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchAutomaticByPlatformRebootSettingOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchAutomaticByPlatformRebootSettingPtrOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchModeOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchModePtrOutput{})
}
