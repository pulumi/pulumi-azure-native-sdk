// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Specifies additional XML formatted information that can be included in the
// Unattend.xml file, which is used by Windows Setup. Contents are defined by
// setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContent struct {
	// The component name. Currently, the only allowable value is
	// Microsoft-Windows-Shell-Setup.
	ComponentName *ComponentName `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for
	// the specified path and component. The XML must be less than 4KB and must
	// include the root element for the setting or feature that is being inserted.
	Content *string `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName *PassName `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values
	// are: FirstLogonCommands and AutoLogon.
	SettingName *string `pulumi:"settingName"`
}

// AdditionalUnattendContentInput is an input type that accepts AdditionalUnattendContentArgs and AdditionalUnattendContentOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentInput` via:
//
//	AdditionalUnattendContentArgs{...}
type AdditionalUnattendContentInput interface {
	pulumi.Input

	ToAdditionalUnattendContentOutput() AdditionalUnattendContentOutput
	ToAdditionalUnattendContentOutputWithContext(context.Context) AdditionalUnattendContentOutput
}

// Specifies additional XML formatted information that can be included in the
// Unattend.xml file, which is used by Windows Setup. Contents are defined by
// setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentArgs struct {
	// The component name. Currently, the only allowable value is
	// Microsoft-Windows-Shell-Setup.
	ComponentName ComponentNamePtrInput `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for
	// the specified path and component. The XML must be less than 4KB and must
	// include the root element for the setting or feature that is being inserted.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName PassNamePtrInput `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values
	// are: FirstLogonCommands and AutoLogon.
	SettingName pulumi.StringPtrInput `pulumi:"settingName"`
}

func (AdditionalUnattendContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContent)(nil)).Elem()
}

func (i AdditionalUnattendContentArgs) ToAdditionalUnattendContentOutput() AdditionalUnattendContentOutput {
	return i.ToAdditionalUnattendContentOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentArgs) ToAdditionalUnattendContentOutputWithContext(ctx context.Context) AdditionalUnattendContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentOutput)
}

// AdditionalUnattendContentArrayInput is an input type that accepts AdditionalUnattendContentArray and AdditionalUnattendContentArrayOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentArrayInput` via:
//
//	AdditionalUnattendContentArray{ AdditionalUnattendContentArgs{...} }
type AdditionalUnattendContentArrayInput interface {
	pulumi.Input

	ToAdditionalUnattendContentArrayOutput() AdditionalUnattendContentArrayOutput
	ToAdditionalUnattendContentArrayOutputWithContext(context.Context) AdditionalUnattendContentArrayOutput
}

type AdditionalUnattendContentArray []AdditionalUnattendContentInput

func (AdditionalUnattendContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContent)(nil)).Elem()
}

func (i AdditionalUnattendContentArray) ToAdditionalUnattendContentArrayOutput() AdditionalUnattendContentArrayOutput {
	return i.ToAdditionalUnattendContentArrayOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentArray) ToAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentArrayOutput)
}

// Specifies additional XML formatted information that can be included in the
// Unattend.xml file, which is used by Windows Setup. Contents are defined by
// setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContent)(nil)).Elem()
}

func (o AdditionalUnattendContentOutput) ToAdditionalUnattendContentOutput() AdditionalUnattendContentOutput {
	return o
}

func (o AdditionalUnattendContentOutput) ToAdditionalUnattendContentOutputWithContext(ctx context.Context) AdditionalUnattendContentOutput {
	return o
}

// The component name. Currently, the only allowable value is
// Microsoft-Windows-Shell-Setup.
func (o AdditionalUnattendContentOutput) ComponentName() ComponentNamePtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *ComponentName { return v.ComponentName }).(ComponentNamePtrOutput)
}

// Specifies the XML formatted content that is added to the unattend.xml file for
// the specified path and component. The XML must be less than 4KB and must
// include the root element for the setting or feature that is being inserted.
func (o AdditionalUnattendContentOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The pass name. Currently, the only allowable value is OobeSystem.
func (o AdditionalUnattendContentOutput) PassName() PassNamePtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *PassName { return v.PassName }).(PassNamePtrOutput)
}

// Specifies the name of the setting to which the content applies. Possible values
// are: FirstLogonCommands and AutoLogon.
func (o AdditionalUnattendContentOutput) SettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *string { return v.SettingName }).(pulumi.StringPtrOutput)
}

type AdditionalUnattendContentArrayOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContent)(nil)).Elem()
}

func (o AdditionalUnattendContentArrayOutput) ToAdditionalUnattendContentArrayOutput() AdditionalUnattendContentArrayOutput {
	return o
}

func (o AdditionalUnattendContentArrayOutput) ToAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentArrayOutput {
	return o
}

func (o AdditionalUnattendContentArrayOutput) Index(i pulumi.IntInput) AdditionalUnattendContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalUnattendContent {
		return vs[0].([]AdditionalUnattendContent)[vs[1].(int)]
	}).(AdditionalUnattendContentOutput)
}

// Specifies additional XML formatted information that can be included in the
// Unattend.xml file, which is used by Windows Setup. Contents are defined by
// setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentResponse struct {
	// The component name. Currently, the only allowable value is
	// Microsoft-Windows-Shell-Setup.
	ComponentName *string `pulumi:"componentName"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName *string `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values
	// are: FirstLogonCommands and AutoLogon.
	SettingName *string `pulumi:"settingName"`
}

// Specifies additional XML formatted information that can be included in the
// Unattend.xml file, which is used by Windows Setup. Contents are defined by
// setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentResponseOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContentResponse)(nil)).Elem()
}

func (o AdditionalUnattendContentResponseOutput) ToAdditionalUnattendContentResponseOutput() AdditionalUnattendContentResponseOutput {
	return o
}

func (o AdditionalUnattendContentResponseOutput) ToAdditionalUnattendContentResponseOutputWithContext(ctx context.Context) AdditionalUnattendContentResponseOutput {
	return o
}

// The component name. Currently, the only allowable value is
// Microsoft-Windows-Shell-Setup.
func (o AdditionalUnattendContentResponseOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// The pass name. Currently, the only allowable value is OobeSystem.
func (o AdditionalUnattendContentResponseOutput) PassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.PassName }).(pulumi.StringPtrOutput)
}

// Specifies the name of the setting to which the content applies. Possible values
// are: FirstLogonCommands and AutoLogon.
func (o AdditionalUnattendContentResponseOutput) SettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.SettingName }).(pulumi.StringPtrOutput)
}

type AdditionalUnattendContentResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContentResponse)(nil)).Elem()
}

func (o AdditionalUnattendContentResponseArrayOutput) ToAdditionalUnattendContentResponseArrayOutput() AdditionalUnattendContentResponseArrayOutput {
	return o
}

func (o AdditionalUnattendContentResponseArrayOutput) ToAdditionalUnattendContentResponseArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentResponseArrayOutput {
	return o
}

func (o AdditionalUnattendContentResponseArrayOutput) Index(i pulumi.IntInput) AdditionalUnattendContentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalUnattendContentResponse {
		return vs[0].([]AdditionalUnattendContentResponse)[vs[1].(int)]
	}).(AdditionalUnattendContentResponseOutput)
}

// The API entity reference.
type ApiEntityReference struct {
	// The ARM resource id in the form of
	// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id *string `pulumi:"id"`
}

// ApiEntityReferenceInput is an input type that accepts ApiEntityReferenceArgs and ApiEntityReferenceOutput values.
// You can construct a concrete instance of `ApiEntityReferenceInput` via:
//
//	ApiEntityReferenceArgs{...}
type ApiEntityReferenceInput interface {
	pulumi.Input

	ToApiEntityReferenceOutput() ApiEntityReferenceOutput
	ToApiEntityReferenceOutputWithContext(context.Context) ApiEntityReferenceOutput
}

// The API entity reference.
type ApiEntityReferenceArgs struct {
	// The ARM resource id in the form of
	// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiEntityReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReference)(nil)).Elem()
}

func (i ApiEntityReferenceArgs) ToApiEntityReferenceOutput() ApiEntityReferenceOutput {
	return i.ToApiEntityReferenceOutputWithContext(context.Background())
}

func (i ApiEntityReferenceArgs) ToApiEntityReferenceOutputWithContext(ctx context.Context) ApiEntityReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEntityReferenceOutput)
}

func (i ApiEntityReferenceArgs) ToApiEntityReferencePtrOutput() ApiEntityReferencePtrOutput {
	return i.ToApiEntityReferencePtrOutputWithContext(context.Background())
}

func (i ApiEntityReferenceArgs) ToApiEntityReferencePtrOutputWithContext(ctx context.Context) ApiEntityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEntityReferenceOutput).ToApiEntityReferencePtrOutputWithContext(ctx)
}

// ApiEntityReferencePtrInput is an input type that accepts ApiEntityReferenceArgs, ApiEntityReferencePtr and ApiEntityReferencePtrOutput values.
// You can construct a concrete instance of `ApiEntityReferencePtrInput` via:
//
//	        ApiEntityReferenceArgs{...}
//
//	or:
//
//	        nil
type ApiEntityReferencePtrInput interface {
	pulumi.Input

	ToApiEntityReferencePtrOutput() ApiEntityReferencePtrOutput
	ToApiEntityReferencePtrOutputWithContext(context.Context) ApiEntityReferencePtrOutput
}

type apiEntityReferencePtrType ApiEntityReferenceArgs

func ApiEntityReferencePtr(v *ApiEntityReferenceArgs) ApiEntityReferencePtrInput {
	return (*apiEntityReferencePtrType)(v)
}

func (*apiEntityReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEntityReference)(nil)).Elem()
}

func (i *apiEntityReferencePtrType) ToApiEntityReferencePtrOutput() ApiEntityReferencePtrOutput {
	return i.ToApiEntityReferencePtrOutputWithContext(context.Background())
}

func (i *apiEntityReferencePtrType) ToApiEntityReferencePtrOutputWithContext(ctx context.Context) ApiEntityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEntityReferencePtrOutput)
}

// The API entity reference.
type ApiEntityReferenceOutput struct{ *pulumi.OutputState }

func (ApiEntityReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReference)(nil)).Elem()
}

func (o ApiEntityReferenceOutput) ToApiEntityReferenceOutput() ApiEntityReferenceOutput {
	return o
}

func (o ApiEntityReferenceOutput) ToApiEntityReferenceOutputWithContext(ctx context.Context) ApiEntityReferenceOutput {
	return o
}

func (o ApiEntityReferenceOutput) ToApiEntityReferencePtrOutput() ApiEntityReferencePtrOutput {
	return o.ToApiEntityReferencePtrOutputWithContext(context.Background())
}

func (o ApiEntityReferenceOutput) ToApiEntityReferencePtrOutputWithContext(ctx context.Context) ApiEntityReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEntityReference) *ApiEntityReference {
		return &v
	}).(ApiEntityReferencePtrOutput)
}

// The ARM resource id in the form of
// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEntityReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiEntityReferencePtrOutput struct{ *pulumi.OutputState }

func (ApiEntityReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEntityReference)(nil)).Elem()
}

func (o ApiEntityReferencePtrOutput) ToApiEntityReferencePtrOutput() ApiEntityReferencePtrOutput {
	return o
}

func (o ApiEntityReferencePtrOutput) ToApiEntityReferencePtrOutputWithContext(ctx context.Context) ApiEntityReferencePtrOutput {
	return o
}

func (o ApiEntityReferencePtrOutput) Elem() ApiEntityReferenceOutput {
	return o.ApplyT(func(v *ApiEntityReference) ApiEntityReference {
		if v != nil {
			return *v
		}
		var ret ApiEntityReference
		return ret
	}).(ApiEntityReferenceOutput)
}

// The ARM resource id in the form of
// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEntityReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The API entity reference.
type ApiEntityReferenceResponse struct {
	// The ARM resource id in the form of
	// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id *string `pulumi:"id"`
}

// The API entity reference.
type ApiEntityReferenceResponseOutput struct{ *pulumi.OutputState }

func (ApiEntityReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReferenceResponse)(nil)).Elem()
}

func (o ApiEntityReferenceResponseOutput) ToApiEntityReferenceResponseOutput() ApiEntityReferenceResponseOutput {
	return o
}

func (o ApiEntityReferenceResponseOutput) ToApiEntityReferenceResponseOutputWithContext(ctx context.Context) ApiEntityReferenceResponseOutput {
	return o
}

// The ARM resource id in the form of
// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEntityReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiEntityReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiEntityReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEntityReferenceResponse)(nil)).Elem()
}

func (o ApiEntityReferenceResponsePtrOutput) ToApiEntityReferenceResponsePtrOutput() ApiEntityReferenceResponsePtrOutput {
	return o
}

func (o ApiEntityReferenceResponsePtrOutput) ToApiEntityReferenceResponsePtrOutputWithContext(ctx context.Context) ApiEntityReferenceResponsePtrOutput {
	return o
}

func (o ApiEntityReferenceResponsePtrOutput) Elem() ApiEntityReferenceResponseOutput {
	return o.ApplyT(func(v *ApiEntityReferenceResponse) ApiEntityReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ApiEntityReferenceResponse
		return ret
	}).(ApiEntityReferenceResponseOutput)
}

// The ARM resource id in the form of
// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEntityReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Contains the list of gallery applications that should be made available to the
// VM/VMSS
type ApplicationProfile struct {
	// Specifies the gallery applications that should be made available to the VM/VMSS
	GalleryApplications []VMGalleryApplication `pulumi:"galleryApplications"`
}

// ApplicationProfileInput is an input type that accepts ApplicationProfileArgs and ApplicationProfileOutput values.
// You can construct a concrete instance of `ApplicationProfileInput` via:
//
//	ApplicationProfileArgs{...}
type ApplicationProfileInput interface {
	pulumi.Input

	ToApplicationProfileOutput() ApplicationProfileOutput
	ToApplicationProfileOutputWithContext(context.Context) ApplicationProfileOutput
}

// Contains the list of gallery applications that should be made available to the
// VM/VMSS
type ApplicationProfileArgs struct {
	// Specifies the gallery applications that should be made available to the VM/VMSS
	GalleryApplications VMGalleryApplicationArrayInput `pulumi:"galleryApplications"`
}

func (ApplicationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProfile)(nil)).Elem()
}

func (i ApplicationProfileArgs) ToApplicationProfileOutput() ApplicationProfileOutput {
	return i.ToApplicationProfileOutputWithContext(context.Background())
}

func (i ApplicationProfileArgs) ToApplicationProfileOutputWithContext(ctx context.Context) ApplicationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProfileOutput)
}

func (i ApplicationProfileArgs) ToApplicationProfilePtrOutput() ApplicationProfilePtrOutput {
	return i.ToApplicationProfilePtrOutputWithContext(context.Background())
}

func (i ApplicationProfileArgs) ToApplicationProfilePtrOutputWithContext(ctx context.Context) ApplicationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProfileOutput).ToApplicationProfilePtrOutputWithContext(ctx)
}

// ApplicationProfilePtrInput is an input type that accepts ApplicationProfileArgs, ApplicationProfilePtr and ApplicationProfilePtrOutput values.
// You can construct a concrete instance of `ApplicationProfilePtrInput` via:
//
//	        ApplicationProfileArgs{...}
//
//	or:
//
//	        nil
type ApplicationProfilePtrInput interface {
	pulumi.Input

	ToApplicationProfilePtrOutput() ApplicationProfilePtrOutput
	ToApplicationProfilePtrOutputWithContext(context.Context) ApplicationProfilePtrOutput
}

type applicationProfilePtrType ApplicationProfileArgs

func ApplicationProfilePtr(v *ApplicationProfileArgs) ApplicationProfilePtrInput {
	return (*applicationProfilePtrType)(v)
}

func (*applicationProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProfile)(nil)).Elem()
}

func (i *applicationProfilePtrType) ToApplicationProfilePtrOutput() ApplicationProfilePtrOutput {
	return i.ToApplicationProfilePtrOutputWithContext(context.Background())
}

func (i *applicationProfilePtrType) ToApplicationProfilePtrOutputWithContext(ctx context.Context) ApplicationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProfilePtrOutput)
}

// Contains the list of gallery applications that should be made available to the
// VM/VMSS
type ApplicationProfileOutput struct{ *pulumi.OutputState }

func (ApplicationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProfile)(nil)).Elem()
}

func (o ApplicationProfileOutput) ToApplicationProfileOutput() ApplicationProfileOutput {
	return o
}

func (o ApplicationProfileOutput) ToApplicationProfileOutputWithContext(ctx context.Context) ApplicationProfileOutput {
	return o
}

func (o ApplicationProfileOutput) ToApplicationProfilePtrOutput() ApplicationProfilePtrOutput {
	return o.ToApplicationProfilePtrOutputWithContext(context.Background())
}

func (o ApplicationProfileOutput) ToApplicationProfilePtrOutputWithContext(ctx context.Context) ApplicationProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationProfile) *ApplicationProfile {
		return &v
	}).(ApplicationProfilePtrOutput)
}

// Specifies the gallery applications that should be made available to the VM/VMSS
func (o ApplicationProfileOutput) GalleryApplications() VMGalleryApplicationArrayOutput {
	return o.ApplyT(func(v ApplicationProfile) []VMGalleryApplication { return v.GalleryApplications }).(VMGalleryApplicationArrayOutput)
}

type ApplicationProfilePtrOutput struct{ *pulumi.OutputState }

func (ApplicationProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProfile)(nil)).Elem()
}

func (o ApplicationProfilePtrOutput) ToApplicationProfilePtrOutput() ApplicationProfilePtrOutput {
	return o
}

func (o ApplicationProfilePtrOutput) ToApplicationProfilePtrOutputWithContext(ctx context.Context) ApplicationProfilePtrOutput {
	return o
}

func (o ApplicationProfilePtrOutput) Elem() ApplicationProfileOutput {
	return o.ApplyT(func(v *ApplicationProfile) ApplicationProfile {
		if v != nil {
			return *v
		}
		var ret ApplicationProfile
		return ret
	}).(ApplicationProfileOutput)
}

// Specifies the gallery applications that should be made available to the VM/VMSS
func (o ApplicationProfilePtrOutput) GalleryApplications() VMGalleryApplicationArrayOutput {
	return o.ApplyT(func(v *ApplicationProfile) []VMGalleryApplication {
		if v == nil {
			return nil
		}
		return v.GalleryApplications
	}).(VMGalleryApplicationArrayOutput)
}

// Contains the list of gallery applications that should be made available to the
// VM/VMSS
type ApplicationProfileResponse struct {
	// Specifies the gallery applications that should be made available to the VM/VMSS
	GalleryApplications []VMGalleryApplicationResponse `pulumi:"galleryApplications"`
}

// Contains the list of gallery applications that should be made available to the
// VM/VMSS
type ApplicationProfileResponseOutput struct{ *pulumi.OutputState }

func (ApplicationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProfileResponse)(nil)).Elem()
}

func (o ApplicationProfileResponseOutput) ToApplicationProfileResponseOutput() ApplicationProfileResponseOutput {
	return o
}

func (o ApplicationProfileResponseOutput) ToApplicationProfileResponseOutputWithContext(ctx context.Context) ApplicationProfileResponseOutput {
	return o
}

// Specifies the gallery applications that should be made available to the VM/VMSS
func (o ApplicationProfileResponseOutput) GalleryApplications() VMGalleryApplicationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationProfileResponse) []VMGalleryApplicationResponse { return v.GalleryApplications }).(VMGalleryApplicationResponseArrayOutput)
}

type ApplicationProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProfileResponse)(nil)).Elem()
}

func (o ApplicationProfileResponsePtrOutput) ToApplicationProfileResponsePtrOutput() ApplicationProfileResponsePtrOutput {
	return o
}

func (o ApplicationProfileResponsePtrOutput) ToApplicationProfileResponsePtrOutputWithContext(ctx context.Context) ApplicationProfileResponsePtrOutput {
	return o
}

func (o ApplicationProfileResponsePtrOutput) Elem() ApplicationProfileResponseOutput {
	return o.ApplyT(func(v *ApplicationProfileResponse) ApplicationProfileResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationProfileResponse
		return ret
	}).(ApplicationProfileResponseOutput)
}

// Specifies the gallery applications that should be made available to the VM/VMSS
func (o ApplicationProfileResponsePtrOutput) GalleryApplications() VMGalleryApplicationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationProfileResponse) []VMGalleryApplicationResponse {
		if v == nil {
			return nil
		}
		return v.GalleryApplications
	}).(VMGalleryApplicationResponseArrayOutput)
}

// Describes the base virtual machine profile for fleet
type BaseVirtualMachineProfile struct {
	// Specifies the gallery applications that should be made available to the VM/VMSS
	ApplicationProfile *ApplicationProfile `pulumi:"applicationProfile"`
	// Specifies the capacity reservation related details of a scale set. Minimum
	// api-version: 2021-04-01.
	CapacityReservation *CapacityReservationProfile `pulumi:"capacityReservation"`
	// Specifies the boot diagnostic settings state.
	DiagnosticsProfile *DiagnosticsProfile `pulumi:"diagnosticsProfile"`
	// Specifies a collection of settings for extensions installed on virtual machines
	// in the scale set.
	ExtensionProfile *VirtualMachineScaleSetExtensionProfile `pulumi:"extensionProfile"`
	// Specifies the hardware profile related details of a scale set. Minimum
	// api-version: 2021-11-01.
	HardwareProfile *VirtualMachineScaleSetHardwareProfile `pulumi:"hardwareProfile"`
	// Specifies that the image or disk that is being used was licensed on-premises.
	// <br><br> Possible values for Windows Server operating system are: <br><br>
	// Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux
	// Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS
	// (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for
	// Windows
	// Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
	// <br><br> [Azure Hybrid Use Benefit for Linux
	// Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
	// <br><br> Minimum api-version: 2015-06-15
	LicenseType *string `pulumi:"licenseType"`
	// Specifies properties of the network interfaces of the virtual machines in the
	// scale set.
	NetworkProfile *VirtualMachineScaleSetNetworkProfile `pulumi:"networkProfile"`
	// Specifies the operating system settings for the virtual machines in the scale
	// set.
	OsProfile *VirtualMachineScaleSetOSProfile `pulumi:"osProfile"`
	// Specifies Scheduled Event related configurations.
	ScheduledEventsProfile *ScheduledEventsProfile `pulumi:"scheduledEventsProfile"`
	// Specifies the security posture to be used for all virtual machines in the scale
	// set. Minimum api-version: 2023-03-01
	SecurityPostureReference *SecurityPostureReference `pulumi:"securityPostureReference"`
	// Specifies the Security related profile settings for the virtual machines in the
	// scale set.
	SecurityProfile *SecurityProfile `pulumi:"securityProfile"`
	// Specifies the service artifact reference id used to set same image version for
	// all virtual machines in the scale set when using 'latest' image version.
	// Minimum api-version: 2022-11-01
	ServiceArtifactReference *ServiceArtifactReference `pulumi:"serviceArtifactReference"`
	// Specifies the storage settings for the virtual machine disks.
	StorageProfile *VirtualMachineScaleSetStorageProfile `pulumi:"storageProfile"`
	// UserData for the virtual machines in the scale set, which must be base-64
	// encoded. Customer should not pass any secrets in here. Minimum api-version:
	// 2021-03-01.
	UserData *string `pulumi:"userData"`
}

// BaseVirtualMachineProfileInput is an input type that accepts BaseVirtualMachineProfileArgs and BaseVirtualMachineProfileOutput values.
// You can construct a concrete instance of `BaseVirtualMachineProfileInput` via:
//
//	BaseVirtualMachineProfileArgs{...}
type BaseVirtualMachineProfileInput interface {
	pulumi.Input

	ToBaseVirtualMachineProfileOutput() BaseVirtualMachineProfileOutput
	ToBaseVirtualMachineProfileOutputWithContext(context.Context) BaseVirtualMachineProfileOutput
}

// Describes the base virtual machine profile for fleet
type BaseVirtualMachineProfileArgs struct {
	// Specifies the gallery applications that should be made available to the VM/VMSS
	ApplicationProfile ApplicationProfilePtrInput `pulumi:"applicationProfile"`
	// Specifies the capacity reservation related details of a scale set. Minimum
	// api-version: 2021-04-01.
	CapacityReservation CapacityReservationProfilePtrInput `pulumi:"capacityReservation"`
	// Specifies the boot diagnostic settings state.
	DiagnosticsProfile DiagnosticsProfilePtrInput `pulumi:"diagnosticsProfile"`
	// Specifies a collection of settings for extensions installed on virtual machines
	// in the scale set.
	ExtensionProfile VirtualMachineScaleSetExtensionProfilePtrInput `pulumi:"extensionProfile"`
	// Specifies the hardware profile related details of a scale set. Minimum
	// api-version: 2021-11-01.
	HardwareProfile VirtualMachineScaleSetHardwareProfilePtrInput `pulumi:"hardwareProfile"`
	// Specifies that the image or disk that is being used was licensed on-premises.
	// <br><br> Possible values for Windows Server operating system are: <br><br>
	// Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux
	// Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS
	// (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for
	// Windows
	// Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
	// <br><br> [Azure Hybrid Use Benefit for Linux
	// Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
	// <br><br> Minimum api-version: 2015-06-15
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// Specifies properties of the network interfaces of the virtual machines in the
	// scale set.
	NetworkProfile VirtualMachineScaleSetNetworkProfilePtrInput `pulumi:"networkProfile"`
	// Specifies the operating system settings for the virtual machines in the scale
	// set.
	OsProfile VirtualMachineScaleSetOSProfilePtrInput `pulumi:"osProfile"`
	// Specifies Scheduled Event related configurations.
	ScheduledEventsProfile ScheduledEventsProfilePtrInput `pulumi:"scheduledEventsProfile"`
	// Specifies the security posture to be used for all virtual machines in the scale
	// set. Minimum api-version: 2023-03-01
	SecurityPostureReference SecurityPostureReferencePtrInput `pulumi:"securityPostureReference"`
	// Specifies the Security related profile settings for the virtual machines in the
	// scale set.
	SecurityProfile SecurityProfilePtrInput `pulumi:"securityProfile"`
	// Specifies the service artifact reference id used to set same image version for
	// all virtual machines in the scale set when using 'latest' image version.
	// Minimum api-version: 2022-11-01
	ServiceArtifactReference ServiceArtifactReferencePtrInput `pulumi:"serviceArtifactReference"`
	// Specifies the storage settings for the virtual machine disks.
	StorageProfile VirtualMachineScaleSetStorageProfilePtrInput `pulumi:"storageProfile"`
	// UserData for the virtual machines in the scale set, which must be base-64
	// encoded. Customer should not pass any secrets in here. Minimum api-version:
	// 2021-03-01.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (BaseVirtualMachineProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseVirtualMachineProfile)(nil)).Elem()
}

func (i BaseVirtualMachineProfileArgs) ToBaseVirtualMachineProfileOutput() BaseVirtualMachineProfileOutput {
	return i.ToBaseVirtualMachineProfileOutputWithContext(context.Background())
}

func (i BaseVirtualMachineProfileArgs) ToBaseVirtualMachineProfileOutputWithContext(ctx context.Context) BaseVirtualMachineProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseVirtualMachineProfileOutput)
}

// Describes the base virtual machine profile for fleet
type BaseVirtualMachineProfileOutput struct{ *pulumi.OutputState }

func (BaseVirtualMachineProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseVirtualMachineProfile)(nil)).Elem()
}

func (o BaseVirtualMachineProfileOutput) ToBaseVirtualMachineProfileOutput() BaseVirtualMachineProfileOutput {
	return o
}

func (o BaseVirtualMachineProfileOutput) ToBaseVirtualMachineProfileOutputWithContext(ctx context.Context) BaseVirtualMachineProfileOutput {
	return o
}

// Specifies the gallery applications that should be made available to the VM/VMSS
func (o BaseVirtualMachineProfileOutput) ApplicationProfile() ApplicationProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *ApplicationProfile { return v.ApplicationProfile }).(ApplicationProfilePtrOutput)
}

// Specifies the capacity reservation related details of a scale set. Minimum
// api-version: 2021-04-01.
func (o BaseVirtualMachineProfileOutput) CapacityReservation() CapacityReservationProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *CapacityReservationProfile { return v.CapacityReservation }).(CapacityReservationProfilePtrOutput)
}

// Specifies the boot diagnostic settings state.
func (o BaseVirtualMachineProfileOutput) DiagnosticsProfile() DiagnosticsProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *DiagnosticsProfile { return v.DiagnosticsProfile }).(DiagnosticsProfilePtrOutput)
}

// Specifies a collection of settings for extensions installed on virtual machines
// in the scale set.
func (o BaseVirtualMachineProfileOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *VirtualMachineScaleSetExtensionProfile { return v.ExtensionProfile }).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// Specifies the hardware profile related details of a scale set. Minimum
// api-version: 2021-11-01.
func (o BaseVirtualMachineProfileOutput) HardwareProfile() VirtualMachineScaleSetHardwareProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *VirtualMachineScaleSetHardwareProfile { return v.HardwareProfile }).(VirtualMachineScaleSetHardwareProfilePtrOutput)
}

// Specifies that the image or disk that is being used was licensed on-premises.
// <br><br> Possible values for Windows Server operating system are: <br><br>
// Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux
// Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS
// (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for
// Windows
// Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
// <br><br> [Azure Hybrid Use Benefit for Linux
// Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
// <br><br> Minimum api-version: 2015-06-15
func (o BaseVirtualMachineProfileOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// Specifies properties of the network interfaces of the virtual machines in the
// scale set.
func (o BaseVirtualMachineProfileOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *VirtualMachineScaleSetNetworkProfile { return v.NetworkProfile }).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// Specifies the operating system settings for the virtual machines in the scale
// set.
func (o BaseVirtualMachineProfileOutput) OsProfile() VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *VirtualMachineScaleSetOSProfile { return v.OsProfile }).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// Specifies Scheduled Event related configurations.
func (o BaseVirtualMachineProfileOutput) ScheduledEventsProfile() ScheduledEventsProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *ScheduledEventsProfile { return v.ScheduledEventsProfile }).(ScheduledEventsProfilePtrOutput)
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
func (o BaseVirtualMachineProfileOutput) SecurityPostureReference() SecurityPostureReferencePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *SecurityPostureReference { return v.SecurityPostureReference }).(SecurityPostureReferencePtrOutput)
}

// Specifies the Security related profile settings for the virtual machines in the
// scale set.
func (o BaseVirtualMachineProfileOutput) SecurityProfile() SecurityProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *SecurityProfile { return v.SecurityProfile }).(SecurityProfilePtrOutput)
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
func (o BaseVirtualMachineProfileOutput) ServiceArtifactReference() ServiceArtifactReferencePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *ServiceArtifactReference { return v.ServiceArtifactReference }).(ServiceArtifactReferencePtrOutput)
}

// Specifies the storage settings for the virtual machine disks.
func (o BaseVirtualMachineProfileOutput) StorageProfile() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *VirtualMachineScaleSetStorageProfile { return v.StorageProfile }).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

// UserData for the virtual machines in the scale set, which must be base-64
// encoded. Customer should not pass any secrets in here. Minimum api-version:
// 2021-03-01.
func (o BaseVirtualMachineProfileOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfile) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

// Describes the base virtual machine profile for fleet
type BaseVirtualMachineProfileResponse struct {
	// Specifies the gallery applications that should be made available to the VM/VMSS
	ApplicationProfile *ApplicationProfileResponse `pulumi:"applicationProfile"`
	// Specifies the capacity reservation related details of a scale set. Minimum
	// api-version: 2021-04-01.
	CapacityReservation *CapacityReservationProfileResponse `pulumi:"capacityReservation"`
	// Specifies the boot diagnostic settings state.
	DiagnosticsProfile *DiagnosticsProfileResponse `pulumi:"diagnosticsProfile"`
	// Specifies a collection of settings for extensions installed on virtual machines
	// in the scale set.
	ExtensionProfile *VirtualMachineScaleSetExtensionProfileResponse `pulumi:"extensionProfile"`
	// Specifies the hardware profile related details of a scale set. Minimum
	// api-version: 2021-11-01.
	HardwareProfile *VirtualMachineScaleSetHardwareProfileResponse `pulumi:"hardwareProfile"`
	// Specifies that the image or disk that is being used was licensed on-premises.
	// <br><br> Possible values for Windows Server operating system are: <br><br>
	// Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux
	// Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS
	// (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for
	// Windows
	// Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
	// <br><br> [Azure Hybrid Use Benefit for Linux
	// Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
	// <br><br> Minimum api-version: 2015-06-15
	LicenseType *string `pulumi:"licenseType"`
	// Specifies properties of the network interfaces of the virtual machines in the
	// scale set.
	NetworkProfile *VirtualMachineScaleSetNetworkProfileResponse `pulumi:"networkProfile"`
	// Specifies the operating system settings for the virtual machines in the scale
	// set.
	OsProfile *VirtualMachineScaleSetOSProfileResponse `pulumi:"osProfile"`
	// Specifies Scheduled Event related configurations.
	ScheduledEventsProfile *ScheduledEventsProfileResponse `pulumi:"scheduledEventsProfile"`
	// Specifies the security posture to be used for all virtual machines in the scale
	// set. Minimum api-version: 2023-03-01
	SecurityPostureReference *SecurityPostureReferenceResponse `pulumi:"securityPostureReference"`
	// Specifies the Security related profile settings for the virtual machines in the
	// scale set.
	SecurityProfile *SecurityProfileResponse `pulumi:"securityProfile"`
	// Specifies the service artifact reference id used to set same image version for
	// all virtual machines in the scale set when using 'latest' image version.
	// Minimum api-version: 2022-11-01
	ServiceArtifactReference *ServiceArtifactReferenceResponse `pulumi:"serviceArtifactReference"`
	// Specifies the storage settings for the virtual machine disks.
	StorageProfile *VirtualMachineScaleSetStorageProfileResponse `pulumi:"storageProfile"`
	// Specifies the time in which this VM profile for the Virtual Machine Scale Set
	// was created. Minimum API version for this property is 2023-09-01. This value
	// will be added to VMSS Flex VM tags when creating/updating the VMSS VM Profile
	// with minimum api-version 2023-09-01. Examples: "2024-07-01T00:00:01.1234567+00:00"
	TimeCreated string `pulumi:"timeCreated"`
	// UserData for the virtual machines in the scale set, which must be base-64
	// encoded. Customer should not pass any secrets in here. Minimum api-version:
	// 2021-03-01.
	UserData *string `pulumi:"userData"`
}

// Describes the base virtual machine profile for fleet
type BaseVirtualMachineProfileResponseOutput struct{ *pulumi.OutputState }

func (BaseVirtualMachineProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseVirtualMachineProfileResponse)(nil)).Elem()
}

func (o BaseVirtualMachineProfileResponseOutput) ToBaseVirtualMachineProfileResponseOutput() BaseVirtualMachineProfileResponseOutput {
	return o
}

func (o BaseVirtualMachineProfileResponseOutput) ToBaseVirtualMachineProfileResponseOutputWithContext(ctx context.Context) BaseVirtualMachineProfileResponseOutput {
	return o
}

// Specifies the gallery applications that should be made available to the VM/VMSS
func (o BaseVirtualMachineProfileResponseOutput) ApplicationProfile() ApplicationProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *ApplicationProfileResponse { return v.ApplicationProfile }).(ApplicationProfileResponsePtrOutput)
}

// Specifies the capacity reservation related details of a scale set. Minimum
// api-version: 2021-04-01.
func (o BaseVirtualMachineProfileResponseOutput) CapacityReservation() CapacityReservationProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *CapacityReservationProfileResponse {
		return v.CapacityReservation
	}).(CapacityReservationProfileResponsePtrOutput)
}

// Specifies the boot diagnostic settings state.
func (o BaseVirtualMachineProfileResponseOutput) DiagnosticsProfile() DiagnosticsProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *DiagnosticsProfileResponse { return v.DiagnosticsProfile }).(DiagnosticsProfileResponsePtrOutput)
}

// Specifies a collection of settings for extensions installed on virtual machines
// in the scale set.
func (o BaseVirtualMachineProfileResponseOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *VirtualMachineScaleSetExtensionProfileResponse {
		return v.ExtensionProfile
	}).(VirtualMachineScaleSetExtensionProfileResponsePtrOutput)
}

// Specifies the hardware profile related details of a scale set. Minimum
// api-version: 2021-11-01.
func (o BaseVirtualMachineProfileResponseOutput) HardwareProfile() VirtualMachineScaleSetHardwareProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *VirtualMachineScaleSetHardwareProfileResponse {
		return v.HardwareProfile
	}).(VirtualMachineScaleSetHardwareProfileResponsePtrOutput)
}

// Specifies that the image or disk that is being used was licensed on-premises.
// <br><br> Possible values for Windows Server operating system are: <br><br>
// Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux
// Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS
// (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for
// Windows
// Server](https://learn.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
// <br><br> [Azure Hybrid Use Benefit for Linux
// Server](https://learn.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
// <br><br> Minimum api-version: 2015-06-15
func (o BaseVirtualMachineProfileResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// Specifies properties of the network interfaces of the virtual machines in the
// scale set.
func (o BaseVirtualMachineProfileResponseOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *VirtualMachineScaleSetNetworkProfileResponse {
		return v.NetworkProfile
	}).(VirtualMachineScaleSetNetworkProfileResponsePtrOutput)
}

// Specifies the operating system settings for the virtual machines in the scale
// set.
func (o BaseVirtualMachineProfileResponseOutput) OsProfile() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *VirtualMachineScaleSetOSProfileResponse { return v.OsProfile }).(VirtualMachineScaleSetOSProfileResponsePtrOutput)
}

// Specifies Scheduled Event related configurations.
func (o BaseVirtualMachineProfileResponseOutput) ScheduledEventsProfile() ScheduledEventsProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *ScheduledEventsProfileResponse {
		return v.ScheduledEventsProfile
	}).(ScheduledEventsProfileResponsePtrOutput)
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
func (o BaseVirtualMachineProfileResponseOutput) SecurityPostureReference() SecurityPostureReferenceResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *SecurityPostureReferenceResponse {
		return v.SecurityPostureReference
	}).(SecurityPostureReferenceResponsePtrOutput)
}

// Specifies the Security related profile settings for the virtual machines in the
// scale set.
func (o BaseVirtualMachineProfileResponseOutput) SecurityProfile() SecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *SecurityProfileResponse { return v.SecurityProfile }).(SecurityProfileResponsePtrOutput)
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
func (o BaseVirtualMachineProfileResponseOutput) ServiceArtifactReference() ServiceArtifactReferenceResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *ServiceArtifactReferenceResponse {
		return v.ServiceArtifactReference
	}).(ServiceArtifactReferenceResponsePtrOutput)
}

// Specifies the storage settings for the virtual machine disks.
func (o BaseVirtualMachineProfileResponseOutput) StorageProfile() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *VirtualMachineScaleSetStorageProfileResponse {
		return v.StorageProfile
	}).(VirtualMachineScaleSetStorageProfileResponsePtrOutput)
}

// Specifies the time in which this VM profile for the Virtual Machine Scale Set
// was created. Minimum API version for this property is 2023-09-01. This value
// will be added to VMSS Flex VM tags when creating/updating the VMSS VM Profile
// with minimum api-version 2023-09-01. Examples: "2024-07-01T00:00:01.1234567+00:00"
func (o BaseVirtualMachineProfileResponseOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// UserData for the virtual machines in the scale set, which must be base-64
// encoded. Customer should not pass any secrets in here. Minimum api-version:
// 2021-03-01.
func (o BaseVirtualMachineProfileResponseOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseVirtualMachineProfileResponse) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. You can easily view the output of your
// console log. Azure also enables you to see a screenshot of the VM from the
// hypervisor.
type BootDiagnostics struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled *bool `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and
	// screenshot. If storageUri is not specified while enabling boot diagnostics,
	// managed storage will be used.
	StorageUri *string `pulumi:"storageUri"`
}

// BootDiagnosticsInput is an input type that accepts BootDiagnosticsArgs and BootDiagnosticsOutput values.
// You can construct a concrete instance of `BootDiagnosticsInput` via:
//
//	BootDiagnosticsArgs{...}
type BootDiagnosticsInput interface {
	pulumi.Input

	ToBootDiagnosticsOutput() BootDiagnosticsOutput
	ToBootDiagnosticsOutputWithContext(context.Context) BootDiagnosticsOutput
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. You can easily view the output of your
// console log. Azure also enables you to see a screenshot of the VM from the
// hypervisor.
type BootDiagnosticsArgs struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and
	// screenshot. If storageUri is not specified while enabling boot diagnostics,
	// managed storage will be used.
	StorageUri pulumi.StringPtrInput `pulumi:"storageUri"`
}

func (BootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnostics)(nil)).Elem()
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsOutput() BootDiagnosticsOutput {
	return i.ToBootDiagnosticsOutputWithContext(context.Background())
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsOutputWithContext(ctx context.Context) BootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsOutput)
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return i.ToBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsOutput).ToBootDiagnosticsPtrOutputWithContext(ctx)
}

// BootDiagnosticsPtrInput is an input type that accepts BootDiagnosticsArgs, BootDiagnosticsPtr and BootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `BootDiagnosticsPtrInput` via:
//
//	        BootDiagnosticsArgs{...}
//
//	or:
//
//	        nil
type BootDiagnosticsPtrInput interface {
	pulumi.Input

	ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput
	ToBootDiagnosticsPtrOutputWithContext(context.Context) BootDiagnosticsPtrOutput
}

type bootDiagnosticsPtrType BootDiagnosticsArgs

func BootDiagnosticsPtr(v *BootDiagnosticsArgs) BootDiagnosticsPtrInput {
	return (*bootDiagnosticsPtrType)(v)
}

func (*bootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnostics)(nil)).Elem()
}

func (i *bootDiagnosticsPtrType) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return i.ToBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *bootDiagnosticsPtrType) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. You can easily view the output of your
// console log. Azure also enables you to see a screenshot of the VM from the
// hypervisor.
type BootDiagnosticsOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnostics)(nil)).Elem()
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsOutput() BootDiagnosticsOutput {
	return o
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsOutputWithContext(ctx context.Context) BootDiagnosticsOutput {
	return o
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return o.ToBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BootDiagnostics) *BootDiagnostics {
		return &v
	}).(BootDiagnosticsPtrOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BootDiagnostics) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and
// screenshot. If storageUri is not specified while enabling boot diagnostics,
// managed storage will be used.
func (o BootDiagnosticsOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootDiagnostics) *string { return v.StorageUri }).(pulumi.StringPtrOutput)
}

type BootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnostics)(nil)).Elem()
}

func (o BootDiagnosticsPtrOutput) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return o
}

func (o BootDiagnosticsPtrOutput) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return o
}

func (o BootDiagnosticsPtrOutput) Elem() BootDiagnosticsOutput {
	return o.ApplyT(func(v *BootDiagnostics) BootDiagnostics {
		if v != nil {
			return *v
		}
		var ret BootDiagnostics
		return ret
	}).(BootDiagnosticsOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BootDiagnostics) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and
// screenshot. If storageUri is not specified while enabling boot diagnostics,
// managed storage will be used.
func (o BootDiagnosticsPtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return v.StorageUri
	}).(pulumi.StringPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. You can easily view the output of your
// console log. Azure also enables you to see a screenshot of the VM from the
// hypervisor.
type BootDiagnosticsResponse struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled *bool `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and
	// screenshot. If storageUri is not specified while enabling boot diagnostics,
	// managed storage will be used.
	StorageUri *string `pulumi:"storageUri"`
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. You can easily view the output of your
// console log. Azure also enables you to see a screenshot of the VM from the
// hypervisor.
type BootDiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsResponse)(nil)).Elem()
}

func (o BootDiagnosticsResponseOutput) ToBootDiagnosticsResponseOutput() BootDiagnosticsResponseOutput {
	return o
}

func (o BootDiagnosticsResponseOutput) ToBootDiagnosticsResponseOutputWithContext(ctx context.Context) BootDiagnosticsResponseOutput {
	return o
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BootDiagnosticsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and
// screenshot. If storageUri is not specified while enabling boot diagnostics,
// managed storage will be used.
func (o BootDiagnosticsResponseOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootDiagnosticsResponse) *string { return v.StorageUri }).(pulumi.StringPtrOutput)
}

type BootDiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsResponse)(nil)).Elem()
}

func (o BootDiagnosticsResponsePtrOutput) ToBootDiagnosticsResponsePtrOutput() BootDiagnosticsResponsePtrOutput {
	return o
}

func (o BootDiagnosticsResponsePtrOutput) ToBootDiagnosticsResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsResponsePtrOutput {
	return o
}

func (o BootDiagnosticsResponsePtrOutput) Elem() BootDiagnosticsResponseOutput {
	return o.ApplyT(func(v *BootDiagnosticsResponse) BootDiagnosticsResponse {
		if v != nil {
			return *v
		}
		var ret BootDiagnosticsResponse
		return ret
	}).(BootDiagnosticsResponseOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and
// screenshot. If storageUri is not specified while enabling boot diagnostics,
// managed storage will be used.
func (o BootDiagnosticsResponsePtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageUri
	}).(pulumi.StringPtrOutput)
}

// The parameters of a capacity reservation Profile.
type CapacityReservationProfile struct {
	// Specifies the capacity reservation group resource id that should be used for
	// allocating the virtual machine or scaleset vm instances provided enough
	// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
	// for more details.
	CapacityReservationGroup *SubResource `pulumi:"capacityReservationGroup"`
}

// CapacityReservationProfileInput is an input type that accepts CapacityReservationProfileArgs and CapacityReservationProfileOutput values.
// You can construct a concrete instance of `CapacityReservationProfileInput` via:
//
//	CapacityReservationProfileArgs{...}
type CapacityReservationProfileInput interface {
	pulumi.Input

	ToCapacityReservationProfileOutput() CapacityReservationProfileOutput
	ToCapacityReservationProfileOutputWithContext(context.Context) CapacityReservationProfileOutput
}

// The parameters of a capacity reservation Profile.
type CapacityReservationProfileArgs struct {
	// Specifies the capacity reservation group resource id that should be used for
	// allocating the virtual machine or scaleset vm instances provided enough
	// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
	// for more details.
	CapacityReservationGroup SubResourcePtrInput `pulumi:"capacityReservationGroup"`
}

func (CapacityReservationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationProfile)(nil)).Elem()
}

func (i CapacityReservationProfileArgs) ToCapacityReservationProfileOutput() CapacityReservationProfileOutput {
	return i.ToCapacityReservationProfileOutputWithContext(context.Background())
}

func (i CapacityReservationProfileArgs) ToCapacityReservationProfileOutputWithContext(ctx context.Context) CapacityReservationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationProfileOutput)
}

func (i CapacityReservationProfileArgs) ToCapacityReservationProfilePtrOutput() CapacityReservationProfilePtrOutput {
	return i.ToCapacityReservationProfilePtrOutputWithContext(context.Background())
}

func (i CapacityReservationProfileArgs) ToCapacityReservationProfilePtrOutputWithContext(ctx context.Context) CapacityReservationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationProfileOutput).ToCapacityReservationProfilePtrOutputWithContext(ctx)
}

// CapacityReservationProfilePtrInput is an input type that accepts CapacityReservationProfileArgs, CapacityReservationProfilePtr and CapacityReservationProfilePtrOutput values.
// You can construct a concrete instance of `CapacityReservationProfilePtrInput` via:
//
//	        CapacityReservationProfileArgs{...}
//
//	or:
//
//	        nil
type CapacityReservationProfilePtrInput interface {
	pulumi.Input

	ToCapacityReservationProfilePtrOutput() CapacityReservationProfilePtrOutput
	ToCapacityReservationProfilePtrOutputWithContext(context.Context) CapacityReservationProfilePtrOutput
}

type capacityReservationProfilePtrType CapacityReservationProfileArgs

func CapacityReservationProfilePtr(v *CapacityReservationProfileArgs) CapacityReservationProfilePtrInput {
	return (*capacityReservationProfilePtrType)(v)
}

func (*capacityReservationProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservationProfile)(nil)).Elem()
}

func (i *capacityReservationProfilePtrType) ToCapacityReservationProfilePtrOutput() CapacityReservationProfilePtrOutput {
	return i.ToCapacityReservationProfilePtrOutputWithContext(context.Background())
}

func (i *capacityReservationProfilePtrType) ToCapacityReservationProfilePtrOutputWithContext(ctx context.Context) CapacityReservationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationProfilePtrOutput)
}

// The parameters of a capacity reservation Profile.
type CapacityReservationProfileOutput struct{ *pulumi.OutputState }

func (CapacityReservationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationProfile)(nil)).Elem()
}

func (o CapacityReservationProfileOutput) ToCapacityReservationProfileOutput() CapacityReservationProfileOutput {
	return o
}

func (o CapacityReservationProfileOutput) ToCapacityReservationProfileOutputWithContext(ctx context.Context) CapacityReservationProfileOutput {
	return o
}

func (o CapacityReservationProfileOutput) ToCapacityReservationProfilePtrOutput() CapacityReservationProfilePtrOutput {
	return o.ToCapacityReservationProfilePtrOutputWithContext(context.Background())
}

func (o CapacityReservationProfileOutput) ToCapacityReservationProfilePtrOutputWithContext(ctx context.Context) CapacityReservationProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityReservationProfile) *CapacityReservationProfile {
		return &v
	}).(CapacityReservationProfilePtrOutput)
}

// Specifies the capacity reservation group resource id that should be used for
// allocating the virtual machine or scaleset vm instances provided enough
// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
// for more details.
func (o CapacityReservationProfileOutput) CapacityReservationGroup() SubResourcePtrOutput {
	return o.ApplyT(func(v CapacityReservationProfile) *SubResource { return v.CapacityReservationGroup }).(SubResourcePtrOutput)
}

type CapacityReservationProfilePtrOutput struct{ *pulumi.OutputState }

func (CapacityReservationProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservationProfile)(nil)).Elem()
}

func (o CapacityReservationProfilePtrOutput) ToCapacityReservationProfilePtrOutput() CapacityReservationProfilePtrOutput {
	return o
}

func (o CapacityReservationProfilePtrOutput) ToCapacityReservationProfilePtrOutputWithContext(ctx context.Context) CapacityReservationProfilePtrOutput {
	return o
}

func (o CapacityReservationProfilePtrOutput) Elem() CapacityReservationProfileOutput {
	return o.ApplyT(func(v *CapacityReservationProfile) CapacityReservationProfile {
		if v != nil {
			return *v
		}
		var ret CapacityReservationProfile
		return ret
	}).(CapacityReservationProfileOutput)
}

// Specifies the capacity reservation group resource id that should be used for
// allocating the virtual machine or scaleset vm instances provided enough
// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
// for more details.
func (o CapacityReservationProfilePtrOutput) CapacityReservationGroup() SubResourcePtrOutput {
	return o.ApplyT(func(v *CapacityReservationProfile) *SubResource {
		if v == nil {
			return nil
		}
		return v.CapacityReservationGroup
	}).(SubResourcePtrOutput)
}

// The parameters of a capacity reservation Profile.
type CapacityReservationProfileResponse struct {
	// Specifies the capacity reservation group resource id that should be used for
	// allocating the virtual machine or scaleset vm instances provided enough
	// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
	// for more details.
	CapacityReservationGroup *SubResourceResponse `pulumi:"capacityReservationGroup"`
}

// The parameters of a capacity reservation Profile.
type CapacityReservationProfileResponseOutput struct{ *pulumi.OutputState }

func (CapacityReservationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationProfileResponse)(nil)).Elem()
}

func (o CapacityReservationProfileResponseOutput) ToCapacityReservationProfileResponseOutput() CapacityReservationProfileResponseOutput {
	return o
}

func (o CapacityReservationProfileResponseOutput) ToCapacityReservationProfileResponseOutputWithContext(ctx context.Context) CapacityReservationProfileResponseOutput {
	return o
}

// Specifies the capacity reservation group resource id that should be used for
// allocating the virtual machine or scaleset vm instances provided enough
// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
// for more details.
func (o CapacityReservationProfileResponseOutput) CapacityReservationGroup() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v CapacityReservationProfileResponse) *SubResourceResponse { return v.CapacityReservationGroup }).(SubResourceResponsePtrOutput)
}

type CapacityReservationProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (CapacityReservationProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservationProfileResponse)(nil)).Elem()
}

func (o CapacityReservationProfileResponsePtrOutput) ToCapacityReservationProfileResponsePtrOutput() CapacityReservationProfileResponsePtrOutput {
	return o
}

func (o CapacityReservationProfileResponsePtrOutput) ToCapacityReservationProfileResponsePtrOutputWithContext(ctx context.Context) CapacityReservationProfileResponsePtrOutput {
	return o
}

func (o CapacityReservationProfileResponsePtrOutput) Elem() CapacityReservationProfileResponseOutput {
	return o.ApplyT(func(v *CapacityReservationProfileResponse) CapacityReservationProfileResponse {
		if v != nil {
			return *v
		}
		var ret CapacityReservationProfileResponse
		return ret
	}).(CapacityReservationProfileResponseOutput)
}

// Specifies the capacity reservation group resource id that should be used for
// allocating the virtual machine or scaleset vm instances provided enough
// capacity has been reserved. Please refer to https://aka.ms/CapacityReservation
// for more details.
func (o CapacityReservationProfileResponsePtrOutput) CapacityReservationGroup() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *CapacityReservationProfileResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.CapacityReservationGroup
	}).(SubResourceResponsePtrOutput)
}

// Compute Profile to use for running user's workloads.
type ComputeProfile struct {
	// Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
	BaseVirtualMachineProfile BaseVirtualMachineProfile `pulumi:"baseVirtualMachineProfile"`
	// Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
	// The default value will be the latest supported computeApiVersion by Compute Fleet.
	ComputeApiVersion *string `pulumi:"computeApiVersion"`
}

// ComputeProfileInput is an input type that accepts ComputeProfileArgs and ComputeProfileOutput values.
// You can construct a concrete instance of `ComputeProfileInput` via:
//
//	ComputeProfileArgs{...}
type ComputeProfileInput interface {
	pulumi.Input

	ToComputeProfileOutput() ComputeProfileOutput
	ToComputeProfileOutputWithContext(context.Context) ComputeProfileOutput
}

// Compute Profile to use for running user's workloads.
type ComputeProfileArgs struct {
	// Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
	BaseVirtualMachineProfile BaseVirtualMachineProfileInput `pulumi:"baseVirtualMachineProfile"`
	// Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
	// The default value will be the latest supported computeApiVersion by Compute Fleet.
	ComputeApiVersion pulumi.StringPtrInput `pulumi:"computeApiVersion"`
}

func (ComputeProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeProfile)(nil)).Elem()
}

func (i ComputeProfileArgs) ToComputeProfileOutput() ComputeProfileOutput {
	return i.ToComputeProfileOutputWithContext(context.Background())
}

func (i ComputeProfileArgs) ToComputeProfileOutputWithContext(ctx context.Context) ComputeProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeProfileOutput)
}

// Compute Profile to use for running user's workloads.
type ComputeProfileOutput struct{ *pulumi.OutputState }

func (ComputeProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeProfile)(nil)).Elem()
}

func (o ComputeProfileOutput) ToComputeProfileOutput() ComputeProfileOutput {
	return o
}

func (o ComputeProfileOutput) ToComputeProfileOutputWithContext(ctx context.Context) ComputeProfileOutput {
	return o
}

// Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
func (o ComputeProfileOutput) BaseVirtualMachineProfile() BaseVirtualMachineProfileOutput {
	return o.ApplyT(func(v ComputeProfile) BaseVirtualMachineProfile { return v.BaseVirtualMachineProfile }).(BaseVirtualMachineProfileOutput)
}

// Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
// The default value will be the latest supported computeApiVersion by Compute Fleet.
func (o ComputeProfileOutput) ComputeApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeProfile) *string { return v.ComputeApiVersion }).(pulumi.StringPtrOutput)
}

// Compute Profile to use for running user's workloads.
type ComputeProfileResponse struct {
	// Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
	BaseVirtualMachineProfile BaseVirtualMachineProfileResponse `pulumi:"baseVirtualMachineProfile"`
	// Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
	// The default value will be the latest supported computeApiVersion by Compute Fleet.
	ComputeApiVersion *string `pulumi:"computeApiVersion"`
}

// Compute Profile to use for running user's workloads.
type ComputeProfileResponseOutput struct{ *pulumi.OutputState }

func (ComputeProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeProfileResponse)(nil)).Elem()
}

func (o ComputeProfileResponseOutput) ToComputeProfileResponseOutput() ComputeProfileResponseOutput {
	return o
}

func (o ComputeProfileResponseOutput) ToComputeProfileResponseOutputWithContext(ctx context.Context) ComputeProfileResponseOutput {
	return o
}

// Base Virtual Machine Profile Properties to be specified according to "specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile"
func (o ComputeProfileResponseOutput) BaseVirtualMachineProfile() BaseVirtualMachineProfileResponseOutput {
	return o.ApplyT(func(v ComputeProfileResponse) BaseVirtualMachineProfileResponse { return v.BaseVirtualMachineProfile }).(BaseVirtualMachineProfileResponseOutput)
}

// Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.
// The default value will be the latest supported computeApiVersion by Compute Fleet.
func (o ComputeProfileResponseOutput) ComputeApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeProfileResponse) *string { return v.ComputeApiVersion }).(pulumi.StringPtrOutput)
}

// Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.
type DiagnosticsProfile struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output
	// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
	// specified then ensure that the storage account is in the same region and
	// subscription as the VM. You can easily view the output of your console log.
	// Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnostics `pulumi:"bootDiagnostics"`
}

// DiagnosticsProfileInput is an input type that accepts DiagnosticsProfileArgs and DiagnosticsProfileOutput values.
// You can construct a concrete instance of `DiagnosticsProfileInput` via:
//
//	DiagnosticsProfileArgs{...}
type DiagnosticsProfileInput interface {
	pulumi.Input

	ToDiagnosticsProfileOutput() DiagnosticsProfileOutput
	ToDiagnosticsProfileOutputWithContext(context.Context) DiagnosticsProfileOutput
}

// Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.
type DiagnosticsProfileArgs struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output
	// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
	// specified then ensure that the storage account is in the same region and
	// subscription as the VM. You can easily view the output of your console log.
	// Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics BootDiagnosticsPtrInput `pulumi:"bootDiagnostics"`
}

func (DiagnosticsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfile)(nil)).Elem()
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfileOutput() DiagnosticsProfileOutput {
	return i.ToDiagnosticsProfileOutputWithContext(context.Background())
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfileOutputWithContext(ctx context.Context) DiagnosticsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileOutput)
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return i.ToDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileOutput).ToDiagnosticsProfilePtrOutputWithContext(ctx)
}

// DiagnosticsProfilePtrInput is an input type that accepts DiagnosticsProfileArgs, DiagnosticsProfilePtr and DiagnosticsProfilePtrOutput values.
// You can construct a concrete instance of `DiagnosticsProfilePtrInput` via:
//
//	        DiagnosticsProfileArgs{...}
//
//	or:
//
//	        nil
type DiagnosticsProfilePtrInput interface {
	pulumi.Input

	ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput
	ToDiagnosticsProfilePtrOutputWithContext(context.Context) DiagnosticsProfilePtrOutput
}

type diagnosticsProfilePtrType DiagnosticsProfileArgs

func DiagnosticsProfilePtr(v *DiagnosticsProfileArgs) DiagnosticsProfilePtrInput {
	return (*diagnosticsProfilePtrType)(v)
}

func (*diagnosticsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfile)(nil)).Elem()
}

func (i *diagnosticsProfilePtrType) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return i.ToDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (i *diagnosticsProfilePtrType) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfilePtrOutput)
}

// Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.
type DiagnosticsProfileOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfile)(nil)).Elem()
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfileOutput() DiagnosticsProfileOutput {
	return o
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfileOutputWithContext(ctx context.Context) DiagnosticsProfileOutput {
	return o
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return o.ToDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticsProfile) *DiagnosticsProfile {
		return &v
	}).(DiagnosticsProfilePtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
// specified then ensure that the storage account is in the same region and
// subscription as the VM. You can easily view the output of your console log.
// Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileOutput) BootDiagnostics() BootDiagnosticsPtrOutput {
	return o.ApplyT(func(v DiagnosticsProfile) *BootDiagnostics { return v.BootDiagnostics }).(BootDiagnosticsPtrOutput)
}

type DiagnosticsProfilePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfile)(nil)).Elem()
}

func (o DiagnosticsProfilePtrOutput) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return o
}

func (o DiagnosticsProfilePtrOutput) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return o
}

func (o DiagnosticsProfilePtrOutput) Elem() DiagnosticsProfileOutput {
	return o.ApplyT(func(v *DiagnosticsProfile) DiagnosticsProfile {
		if v != nil {
			return *v
		}
		var ret DiagnosticsProfile
		return ret
	}).(DiagnosticsProfileOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
// specified then ensure that the storage account is in the same region and
// subscription as the VM. You can easily view the output of your console log.
// Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfilePtrOutput) BootDiagnostics() BootDiagnosticsPtrOutput {
	return o.ApplyT(func(v *DiagnosticsProfile) *BootDiagnostics {
		if v == nil {
			return nil
		}
		return v.BootDiagnostics
	}).(BootDiagnosticsPtrOutput)
}

// Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.
type DiagnosticsProfileResponse struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output
	// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
	// specified then ensure that the storage account is in the same region and
	// subscription as the VM. You can easily view the output of your console log.
	// Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnosticsResponse `pulumi:"bootDiagnostics"`
}

// Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.
type DiagnosticsProfileResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfileResponse)(nil)).Elem()
}

func (o DiagnosticsProfileResponseOutput) ToDiagnosticsProfileResponseOutput() DiagnosticsProfileResponseOutput {
	return o
}

func (o DiagnosticsProfileResponseOutput) ToDiagnosticsProfileResponseOutputWithContext(ctx context.Context) DiagnosticsProfileResponseOutput {
	return o
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
// specified then ensure that the storage account is in the same region and
// subscription as the VM. You can easily view the output of your console log.
// Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileResponseOutput) BootDiagnostics() BootDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsProfileResponse) *BootDiagnosticsResponse { return v.BootDiagnostics }).(BootDiagnosticsResponsePtrOutput)
}

type DiagnosticsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfileResponse)(nil)).Elem()
}

func (o DiagnosticsProfileResponsePtrOutput) ToDiagnosticsProfileResponsePtrOutput() DiagnosticsProfileResponsePtrOutput {
	return o
}

func (o DiagnosticsProfileResponsePtrOutput) ToDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) DiagnosticsProfileResponsePtrOutput {
	return o
}

func (o DiagnosticsProfileResponsePtrOutput) Elem() DiagnosticsProfileResponseOutput {
	return o.ApplyT(func(v *DiagnosticsProfileResponse) DiagnosticsProfileResponse {
		if v != nil {
			return *v
		}
		var ret DiagnosticsProfileResponse
		return ret
	}).(DiagnosticsProfileResponseOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output
// and Screenshot to diagnose VM status. **NOTE**: If storageUri is being
// specified then ensure that the storage account is in the same region and
// subscription as the VM. You can easily view the output of your console log.
// Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileResponsePtrOutput) BootDiagnostics() BootDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v *DiagnosticsProfileResponse) *BootDiagnosticsResponse {
		if v == nil {
			return nil
		}
		return v.BootDiagnostics
	}).(BootDiagnosticsResponsePtrOutput)
}

// Describes the parameters of ephemeral disk settings that can be specified for
// operating system disk. **Note:** The ephemeral disk settings can only be
// specified for managed disk.
type DiffDiskSettings struct {
	// Specifies the ephemeral disk settings for operating system disk.
	Option *string `pulumi:"option"`
	// Specifies the ephemeral disk placement for operating system disk. Possible
	// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
	// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
	// is used. Refer to the VM size documentation for Windows VM at
	// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
	// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
	// sizes exposes a cache disk.
	Placement *string `pulumi:"placement"`
}

// DiffDiskSettingsInput is an input type that accepts DiffDiskSettingsArgs and DiffDiskSettingsOutput values.
// You can construct a concrete instance of `DiffDiskSettingsInput` via:
//
//	DiffDiskSettingsArgs{...}
type DiffDiskSettingsInput interface {
	pulumi.Input

	ToDiffDiskSettingsOutput() DiffDiskSettingsOutput
	ToDiffDiskSettingsOutputWithContext(context.Context) DiffDiskSettingsOutput
}

// Describes the parameters of ephemeral disk settings that can be specified for
// operating system disk. **Note:** The ephemeral disk settings can only be
// specified for managed disk.
type DiffDiskSettingsArgs struct {
	// Specifies the ephemeral disk settings for operating system disk.
	Option pulumi.StringPtrInput `pulumi:"option"`
	// Specifies the ephemeral disk placement for operating system disk. Possible
	// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
	// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
	// is used. Refer to the VM size documentation for Windows VM at
	// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
	// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
	// sizes exposes a cache disk.
	Placement pulumi.StringPtrInput `pulumi:"placement"`
}

func (DiffDiskSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskSettings)(nil)).Elem()
}

func (i DiffDiskSettingsArgs) ToDiffDiskSettingsOutput() DiffDiskSettingsOutput {
	return i.ToDiffDiskSettingsOutputWithContext(context.Background())
}

func (i DiffDiskSettingsArgs) ToDiffDiskSettingsOutputWithContext(ctx context.Context) DiffDiskSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiffDiskSettingsOutput)
}

func (i DiffDiskSettingsArgs) ToDiffDiskSettingsPtrOutput() DiffDiskSettingsPtrOutput {
	return i.ToDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i DiffDiskSettingsArgs) ToDiffDiskSettingsPtrOutputWithContext(ctx context.Context) DiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiffDiskSettingsOutput).ToDiffDiskSettingsPtrOutputWithContext(ctx)
}

// DiffDiskSettingsPtrInput is an input type that accepts DiffDiskSettingsArgs, DiffDiskSettingsPtr and DiffDiskSettingsPtrOutput values.
// You can construct a concrete instance of `DiffDiskSettingsPtrInput` via:
//
//	        DiffDiskSettingsArgs{...}
//
//	or:
//
//	        nil
type DiffDiskSettingsPtrInput interface {
	pulumi.Input

	ToDiffDiskSettingsPtrOutput() DiffDiskSettingsPtrOutput
	ToDiffDiskSettingsPtrOutputWithContext(context.Context) DiffDiskSettingsPtrOutput
}

type diffDiskSettingsPtrType DiffDiskSettingsArgs

func DiffDiskSettingsPtr(v *DiffDiskSettingsArgs) DiffDiskSettingsPtrInput {
	return (*diffDiskSettingsPtrType)(v)
}

func (*diffDiskSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiffDiskSettings)(nil)).Elem()
}

func (i *diffDiskSettingsPtrType) ToDiffDiskSettingsPtrOutput() DiffDiskSettingsPtrOutput {
	return i.ToDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i *diffDiskSettingsPtrType) ToDiffDiskSettingsPtrOutputWithContext(ctx context.Context) DiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiffDiskSettingsPtrOutput)
}

// Describes the parameters of ephemeral disk settings that can be specified for
// operating system disk. **Note:** The ephemeral disk settings can only be
// specified for managed disk.
type DiffDiskSettingsOutput struct{ *pulumi.OutputState }

func (DiffDiskSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskSettings)(nil)).Elem()
}

func (o DiffDiskSettingsOutput) ToDiffDiskSettingsOutput() DiffDiskSettingsOutput {
	return o
}

func (o DiffDiskSettingsOutput) ToDiffDiskSettingsOutputWithContext(ctx context.Context) DiffDiskSettingsOutput {
	return o
}

func (o DiffDiskSettingsOutput) ToDiffDiskSettingsPtrOutput() DiffDiskSettingsPtrOutput {
	return o.ToDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (o DiffDiskSettingsOutput) ToDiffDiskSettingsPtrOutputWithContext(ctx context.Context) DiffDiskSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiffDiskSettings) *DiffDiskSettings {
		return &v
	}).(DiffDiskSettingsPtrOutput)
}

// Specifies the ephemeral disk settings for operating system disk.
func (o DiffDiskSettingsOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiffDiskSettings) *string { return v.Option }).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk placement for operating system disk. Possible
// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
// is used. Refer to the VM size documentation for Windows VM at
// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
// sizes exposes a cache disk.
func (o DiffDiskSettingsOutput) Placement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiffDiskSettings) *string { return v.Placement }).(pulumi.StringPtrOutput)
}

type DiffDiskSettingsPtrOutput struct{ *pulumi.OutputState }

func (DiffDiskSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiffDiskSettings)(nil)).Elem()
}

func (o DiffDiskSettingsPtrOutput) ToDiffDiskSettingsPtrOutput() DiffDiskSettingsPtrOutput {
	return o
}

func (o DiffDiskSettingsPtrOutput) ToDiffDiskSettingsPtrOutputWithContext(ctx context.Context) DiffDiskSettingsPtrOutput {
	return o
}

func (o DiffDiskSettingsPtrOutput) Elem() DiffDiskSettingsOutput {
	return o.ApplyT(func(v *DiffDiskSettings) DiffDiskSettings {
		if v != nil {
			return *v
		}
		var ret DiffDiskSettings
		return ret
	}).(DiffDiskSettingsOutput)
}

// Specifies the ephemeral disk settings for operating system disk.
func (o DiffDiskSettingsPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiffDiskSettings) *string {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk placement for operating system disk. Possible
// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
// is used. Refer to the VM size documentation for Windows VM at
// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
// sizes exposes a cache disk.
func (o DiffDiskSettingsPtrOutput) Placement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiffDiskSettings) *string {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(pulumi.StringPtrOutput)
}

// Describes the parameters of ephemeral disk settings that can be specified for
// operating system disk. **Note:** The ephemeral disk settings can only be
// specified for managed disk.
type DiffDiskSettingsResponse struct {
	// Specifies the ephemeral disk settings for operating system disk.
	Option *string `pulumi:"option"`
	// Specifies the ephemeral disk placement for operating system disk. Possible
	// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
	// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
	// is used. Refer to the VM size documentation for Windows VM at
	// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
	// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
	// sizes exposes a cache disk.
	Placement *string `pulumi:"placement"`
}

// Describes the parameters of ephemeral disk settings that can be specified for
// operating system disk. **Note:** The ephemeral disk settings can only be
// specified for managed disk.
type DiffDiskSettingsResponseOutput struct{ *pulumi.OutputState }

func (DiffDiskSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiffDiskSettingsResponse)(nil)).Elem()
}

func (o DiffDiskSettingsResponseOutput) ToDiffDiskSettingsResponseOutput() DiffDiskSettingsResponseOutput {
	return o
}

func (o DiffDiskSettingsResponseOutput) ToDiffDiskSettingsResponseOutputWithContext(ctx context.Context) DiffDiskSettingsResponseOutput {
	return o
}

// Specifies the ephemeral disk settings for operating system disk.
func (o DiffDiskSettingsResponseOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiffDiskSettingsResponse) *string { return v.Option }).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk placement for operating system disk. Possible
// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
// is used. Refer to the VM size documentation for Windows VM at
// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
// sizes exposes a cache disk.
func (o DiffDiskSettingsResponseOutput) Placement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiffDiskSettingsResponse) *string { return v.Placement }).(pulumi.StringPtrOutput)
}

type DiffDiskSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DiffDiskSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiffDiskSettingsResponse)(nil)).Elem()
}

func (o DiffDiskSettingsResponsePtrOutput) ToDiffDiskSettingsResponsePtrOutput() DiffDiskSettingsResponsePtrOutput {
	return o
}

func (o DiffDiskSettingsResponsePtrOutput) ToDiffDiskSettingsResponsePtrOutputWithContext(ctx context.Context) DiffDiskSettingsResponsePtrOutput {
	return o
}

func (o DiffDiskSettingsResponsePtrOutput) Elem() DiffDiskSettingsResponseOutput {
	return o.ApplyT(func(v *DiffDiskSettingsResponse) DiffDiskSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DiffDiskSettingsResponse
		return ret
	}).(DiffDiskSettingsResponseOutput)
}

// Specifies the ephemeral disk settings for operating system disk.
func (o DiffDiskSettingsResponsePtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiffDiskSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk placement for operating system disk. Possible
// values are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:
// **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**
// is used. Refer to the VM size documentation for Windows VM at
// https://learn.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at
// https://learn.microsoft.com/azure/virtual-machines/linux/sizes to check which VM
// sizes exposes a cache disk.
func (o DiffDiskSettingsResponsePtrOutput) Placement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiffDiskSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(pulumi.StringPtrOutput)
}

// Describes the parameter of customer managed disk encryption set resource id
// that can be specified for disk. **Note:** The disk encryption set resource id
// can only be specified for managed disk. Please refer
// https://aka.ms/mdssewithcmkoverview for more details.
type DiskEncryptionSetParameters struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// DiskEncryptionSetParametersInput is an input type that accepts DiskEncryptionSetParametersArgs and DiskEncryptionSetParametersOutput values.
// You can construct a concrete instance of `DiskEncryptionSetParametersInput` via:
//
//	DiskEncryptionSetParametersArgs{...}
type DiskEncryptionSetParametersInput interface {
	pulumi.Input

	ToDiskEncryptionSetParametersOutput() DiskEncryptionSetParametersOutput
	ToDiskEncryptionSetParametersOutputWithContext(context.Context) DiskEncryptionSetParametersOutput
}

// Describes the parameter of customer managed disk encryption set resource id
// that can be specified for disk. **Note:** The disk encryption set resource id
// can only be specified for managed disk. Please refer
// https://aka.ms/mdssewithcmkoverview for more details.
type DiskEncryptionSetParametersArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (DiskEncryptionSetParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetParameters)(nil)).Elem()
}

func (i DiskEncryptionSetParametersArgs) ToDiskEncryptionSetParametersOutput() DiskEncryptionSetParametersOutput {
	return i.ToDiskEncryptionSetParametersOutputWithContext(context.Background())
}

func (i DiskEncryptionSetParametersArgs) ToDiskEncryptionSetParametersOutputWithContext(ctx context.Context) DiskEncryptionSetParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetParametersOutput)
}

func (i DiskEncryptionSetParametersArgs) ToDiskEncryptionSetParametersPtrOutput() DiskEncryptionSetParametersPtrOutput {
	return i.ToDiskEncryptionSetParametersPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionSetParametersArgs) ToDiskEncryptionSetParametersPtrOutputWithContext(ctx context.Context) DiskEncryptionSetParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetParametersOutput).ToDiskEncryptionSetParametersPtrOutputWithContext(ctx)
}

// DiskEncryptionSetParametersPtrInput is an input type that accepts DiskEncryptionSetParametersArgs, DiskEncryptionSetParametersPtr and DiskEncryptionSetParametersPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionSetParametersPtrInput` via:
//
//	        DiskEncryptionSetParametersArgs{...}
//
//	or:
//
//	        nil
type DiskEncryptionSetParametersPtrInput interface {
	pulumi.Input

	ToDiskEncryptionSetParametersPtrOutput() DiskEncryptionSetParametersPtrOutput
	ToDiskEncryptionSetParametersPtrOutputWithContext(context.Context) DiskEncryptionSetParametersPtrOutput
}

type diskEncryptionSetParametersPtrType DiskEncryptionSetParametersArgs

func DiskEncryptionSetParametersPtr(v *DiskEncryptionSetParametersArgs) DiskEncryptionSetParametersPtrInput {
	return (*diskEncryptionSetParametersPtrType)(v)
}

func (*diskEncryptionSetParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetParameters)(nil)).Elem()
}

func (i *diskEncryptionSetParametersPtrType) ToDiskEncryptionSetParametersPtrOutput() DiskEncryptionSetParametersPtrOutput {
	return i.ToDiskEncryptionSetParametersPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionSetParametersPtrType) ToDiskEncryptionSetParametersPtrOutputWithContext(ctx context.Context) DiskEncryptionSetParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetParametersPtrOutput)
}

// Describes the parameter of customer managed disk encryption set resource id
// that can be specified for disk. **Note:** The disk encryption set resource id
// can only be specified for managed disk. Please refer
// https://aka.ms/mdssewithcmkoverview for more details.
type DiskEncryptionSetParametersOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetParameters)(nil)).Elem()
}

func (o DiskEncryptionSetParametersOutput) ToDiskEncryptionSetParametersOutput() DiskEncryptionSetParametersOutput {
	return o
}

func (o DiskEncryptionSetParametersOutput) ToDiskEncryptionSetParametersOutputWithContext(ctx context.Context) DiskEncryptionSetParametersOutput {
	return o
}

func (o DiskEncryptionSetParametersOutput) ToDiskEncryptionSetParametersPtrOutput() DiskEncryptionSetParametersPtrOutput {
	return o.ToDiskEncryptionSetParametersPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetParametersOutput) ToDiskEncryptionSetParametersPtrOutputWithContext(ctx context.Context) DiskEncryptionSetParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskEncryptionSetParameters) *DiskEncryptionSetParameters {
		return &v
	}).(DiskEncryptionSetParametersPtrOutput)
}

// Resource Id
func (o DiskEncryptionSetParametersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSetParameters) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type DiskEncryptionSetParametersPtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetParameters)(nil)).Elem()
}

func (o DiskEncryptionSetParametersPtrOutput) ToDiskEncryptionSetParametersPtrOutput() DiskEncryptionSetParametersPtrOutput {
	return o
}

func (o DiskEncryptionSetParametersPtrOutput) ToDiskEncryptionSetParametersPtrOutputWithContext(ctx context.Context) DiskEncryptionSetParametersPtrOutput {
	return o
}

func (o DiskEncryptionSetParametersPtrOutput) Elem() DiskEncryptionSetParametersOutput {
	return o.ApplyT(func(v *DiskEncryptionSetParameters) DiskEncryptionSetParameters {
		if v != nil {
			return *v
		}
		var ret DiskEncryptionSetParameters
		return ret
	}).(DiskEncryptionSetParametersOutput)
}

// Resource Id
func (o DiskEncryptionSetParametersPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSetParameters) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Describes the parameter of customer managed disk encryption set resource id
// that can be specified for disk. **Note:** The disk encryption set resource id
// can only be specified for managed disk. Please refer
// https://aka.ms/mdssewithcmkoverview for more details.
type DiskEncryptionSetParametersResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// Describes the parameter of customer managed disk encryption set resource id
// that can be specified for disk. **Note:** The disk encryption set resource id
// can only be specified for managed disk. Please refer
// https://aka.ms/mdssewithcmkoverview for more details.
type DiskEncryptionSetParametersResponseOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetParametersResponse)(nil)).Elem()
}

func (o DiskEncryptionSetParametersResponseOutput) ToDiskEncryptionSetParametersResponseOutput() DiskEncryptionSetParametersResponseOutput {
	return o
}

func (o DiskEncryptionSetParametersResponseOutput) ToDiskEncryptionSetParametersResponseOutputWithContext(ctx context.Context) DiskEncryptionSetParametersResponseOutput {
	return o
}

// Resource Id
func (o DiskEncryptionSetParametersResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSetParametersResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type DiskEncryptionSetParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetParametersResponse)(nil)).Elem()
}

func (o DiskEncryptionSetParametersResponsePtrOutput) ToDiskEncryptionSetParametersResponsePtrOutput() DiskEncryptionSetParametersResponsePtrOutput {
	return o
}

func (o DiskEncryptionSetParametersResponsePtrOutput) ToDiskEncryptionSetParametersResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSetParametersResponsePtrOutput {
	return o
}

func (o DiskEncryptionSetParametersResponsePtrOutput) Elem() DiskEncryptionSetParametersResponseOutput {
	return o.ApplyT(func(v *DiskEncryptionSetParametersResponse) DiskEncryptionSetParametersResponse {
		if v != nil {
			return *v
		}
		var ret DiskEncryptionSetParametersResponse
		return ret
	}).(DiskEncryptionSetParametersResponseOutput)
}

// Resource Id
func (o DiskEncryptionSetParametersResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSetParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
type EncryptionIdentity struct {
	// Specifies ARM Resource ID of one of the user identities associated with the VM.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// EncryptionIdentityInput is an input type that accepts EncryptionIdentityArgs and EncryptionIdentityOutput values.
// You can construct a concrete instance of `EncryptionIdentityInput` via:
//
//	EncryptionIdentityArgs{...}
type EncryptionIdentityInput interface {
	pulumi.Input

	ToEncryptionIdentityOutput() EncryptionIdentityOutput
	ToEncryptionIdentityOutputWithContext(context.Context) EncryptionIdentityOutput
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
type EncryptionIdentityArgs struct {
	// Specifies ARM Resource ID of one of the user identities associated with the VM.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (EncryptionIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentity)(nil)).Elem()
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityOutput() EncryptionIdentityOutput {
	return i.ToEncryptionIdentityOutputWithContext(context.Background())
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityOutputWithContext(ctx context.Context) EncryptionIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionIdentityOutput)
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return i.ToEncryptionIdentityPtrOutputWithContext(context.Background())
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionIdentityOutput).ToEncryptionIdentityPtrOutputWithContext(ctx)
}

// EncryptionIdentityPtrInput is an input type that accepts EncryptionIdentityArgs, EncryptionIdentityPtr and EncryptionIdentityPtrOutput values.
// You can construct a concrete instance of `EncryptionIdentityPtrInput` via:
//
//	        EncryptionIdentityArgs{...}
//
//	or:
//
//	        nil
type EncryptionIdentityPtrInput interface {
	pulumi.Input

	ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput
	ToEncryptionIdentityPtrOutputWithContext(context.Context) EncryptionIdentityPtrOutput
}

type encryptionIdentityPtrType EncryptionIdentityArgs

func EncryptionIdentityPtr(v *EncryptionIdentityArgs) EncryptionIdentityPtrInput {
	return (*encryptionIdentityPtrType)(v)
}

func (*encryptionIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentity)(nil)).Elem()
}

func (i *encryptionIdentityPtrType) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return i.ToEncryptionIdentityPtrOutputWithContext(context.Background())
}

func (i *encryptionIdentityPtrType) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionIdentityPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
type EncryptionIdentityOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentity)(nil)).Elem()
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityOutput() EncryptionIdentityOutput {
	return o
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityOutputWithContext(ctx context.Context) EncryptionIdentityOutput {
	return o
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return o.ToEncryptionIdentityPtrOutputWithContext(context.Background())
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionIdentity) *EncryptionIdentity {
		return &v
	}).(EncryptionIdentityPtrOutput)
}

// Specifies ARM Resource ID of one of the user identities associated with the VM.
func (o EncryptionIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionIdentity) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type EncryptionIdentityPtrOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentity)(nil)).Elem()
}

func (o EncryptionIdentityPtrOutput) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return o
}

func (o EncryptionIdentityPtrOutput) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return o
}

func (o EncryptionIdentityPtrOutput) Elem() EncryptionIdentityOutput {
	return o.ApplyT(func(v *EncryptionIdentity) EncryptionIdentity {
		if v != nil {
			return *v
		}
		var ret EncryptionIdentity
		return ret
	}).(EncryptionIdentityOutput)
}

// Specifies ARM Resource ID of one of the user identities associated with the VM.
func (o EncryptionIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
type EncryptionIdentityResponse struct {
	// Specifies ARM Resource ID of one of the user identities associated with the VM.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
type EncryptionIdentityResponseOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentityResponse)(nil)).Elem()
}

func (o EncryptionIdentityResponseOutput) ToEncryptionIdentityResponseOutput() EncryptionIdentityResponseOutput {
	return o
}

func (o EncryptionIdentityResponseOutput) ToEncryptionIdentityResponseOutputWithContext(ctx context.Context) EncryptionIdentityResponseOutput {
	return o
}

// Specifies ARM Resource ID of one of the user identities associated with the VM.
func (o EncryptionIdentityResponseOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionIdentityResponse) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type EncryptionIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentityResponse)(nil)).Elem()
}

func (o EncryptionIdentityResponsePtrOutput) ToEncryptionIdentityResponsePtrOutput() EncryptionIdentityResponsePtrOutput {
	return o
}

func (o EncryptionIdentityResponsePtrOutput) ToEncryptionIdentityResponsePtrOutputWithContext(ctx context.Context) EncryptionIdentityResponsePtrOutput {
	return o
}

func (o EncryptionIdentityResponsePtrOutput) Elem() EncryptionIdentityResponseOutput {
	return o.ApplyT(func(v *EncryptionIdentityResponse) EncryptionIdentityResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionIdentityResponse
		return ret
	}).(EncryptionIdentityResponseOutput)
}

// Specifies ARM Resource ID of one of the user identities associated with the VM.
func (o EncryptionIdentityResponsePtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations. NOTE: Image
// reference publisher and offer can only be set when you create the scale set.
type ImageReference struct {
	// Specified the community gallery image unique id for vm deployment. This can be
	// fetched from community gallery image GET call.
	CommunityGalleryImageId *string `pulumi:"communityGalleryImageId"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Specifies the offer of the platform image or marketplace image used to create
	// the virtual machine.
	Offer *string `pulumi:"offer"`
	// The image publisher.
	Publisher *string `pulumi:"publisher"`
	// Specified the shared gallery image unique id for vm deployment. This can be
	// fetched from shared gallery image GET call.
	SharedGalleryImageId *string `pulumi:"sharedGalleryImageId"`
	// The image SKU.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create
	// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
	// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
	// version of an image available at deploy time. Even if you use 'latest', the VM
	// image will not automatically update after deploy time even if a new version
	// becomes available. Please do not use field 'version' for gallery image
	// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
	// version of gallery image, just set
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
	// in the 'id' field without version input.
	Version *string `pulumi:"version"`
}

// ImageReferenceInput is an input type that accepts ImageReferenceArgs and ImageReferenceOutput values.
// You can construct a concrete instance of `ImageReferenceInput` via:
//
//	ImageReferenceArgs{...}
type ImageReferenceInput interface {
	pulumi.Input

	ToImageReferenceOutput() ImageReferenceOutput
	ToImageReferenceOutputWithContext(context.Context) ImageReferenceOutput
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations. NOTE: Image
// reference publisher and offer can only be set when you create the scale set.
type ImageReferenceArgs struct {
	// Specified the community gallery image unique id for vm deployment. This can be
	// fetched from community gallery image GET call.
	CommunityGalleryImageId pulumi.StringPtrInput `pulumi:"communityGalleryImageId"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the offer of the platform image or marketplace image used to create
	// the virtual machine.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The image publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Specified the shared gallery image unique id for vm deployment. This can be
	// fetched from shared gallery image GET call.
	SharedGalleryImageId pulumi.StringPtrInput `pulumi:"sharedGalleryImageId"`
	// The image SKU.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create
	// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
	// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
	// version of an image available at deploy time. Even if you use 'latest', the VM
	// image will not automatically update after deploy time even if a new version
	// becomes available. Please do not use field 'version' for gallery image
	// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
	// version of gallery image, just set
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
	// in the 'id' field without version input.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (i ImageReferenceArgs) ToImageReferenceOutput() ImageReferenceOutput {
	return i.ToImageReferenceOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput)
}

func (i ImageReferenceArgs) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return i.ToImageReferencePtrOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput).ToImageReferencePtrOutputWithContext(ctx)
}

// ImageReferencePtrInput is an input type that accepts ImageReferenceArgs, ImageReferencePtr and ImageReferencePtrOutput values.
// You can construct a concrete instance of `ImageReferencePtrInput` via:
//
//	        ImageReferenceArgs{...}
//
//	or:
//
//	        nil
type ImageReferencePtrInput interface {
	pulumi.Input

	ToImageReferencePtrOutput() ImageReferencePtrOutput
	ToImageReferencePtrOutputWithContext(context.Context) ImageReferencePtrOutput
}

type imageReferencePtrType ImageReferenceArgs

func ImageReferencePtr(v *ImageReferenceArgs) ImageReferencePtrInput {
	return (*imageReferencePtrType)(v)
}

func (*imageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReference)(nil)).Elem()
}

func (i *imageReferencePtrType) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return i.ToImageReferencePtrOutputWithContext(context.Background())
}

func (i *imageReferencePtrType) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferencePtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations. NOTE: Image
// reference publisher and offer can only be set when you create the scale set.
type ImageReferenceOutput struct{ *pulumi.OutputState }

func (ImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (o ImageReferenceOutput) ToImageReferenceOutput() ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return o.ToImageReferencePtrOutputWithContext(context.Background())
}

func (o ImageReferenceOutput) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageReference) *ImageReference {
		return &v
	}).(ImageReferencePtrOutput)
}

// Specified the community gallery image unique id for vm deployment. This can be
// fetched from community gallery image GET call.
func (o ImageReferenceOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.CommunityGalleryImageId }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o ImageReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create
// the virtual machine.
func (o ImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Specified the shared gallery image unique id for vm deployment. This can be
// fetched from shared gallery image GET call.
func (o ImageReferenceOutput) SharedGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.SharedGalleryImageId }).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create
// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
// version of an image available at deploy time. Even if you use 'latest', the VM
// image will not automatically update after deploy time even if a new version
// becomes available. Please do not use field 'version' for gallery image
// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
// version of gallery image, just set
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
// in the 'id' field without version input.
func (o ImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferencePtrOutput struct{ *pulumi.OutputState }

func (ImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReference)(nil)).Elem()
}

func (o ImageReferencePtrOutput) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return o
}

func (o ImageReferencePtrOutput) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return o
}

func (o ImageReferencePtrOutput) Elem() ImageReferenceOutput {
	return o.ApplyT(func(v *ImageReference) ImageReference {
		if v != nil {
			return *v
		}
		var ret ImageReference
		return ret
	}).(ImageReferenceOutput)
}

// Specified the community gallery image unique id for vm deployment. This can be
// fetched from community gallery image GET call.
func (o ImageReferencePtrOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.CommunityGalleryImageId
	}).(pulumi.StringPtrOutput)
}

// Resource Id
func (o ImageReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create
// the virtual machine.
func (o ImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specified the shared gallery image unique id for vm deployment. This can be
// fetched from shared gallery image GET call.
func (o ImageReferencePtrOutput) SharedGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.SharedGalleryImageId
	}).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create
// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
// version of an image available at deploy time. Even if you use 'latest', the VM
// image will not automatically update after deploy time even if a new version
// becomes available. Please do not use field 'version' for gallery image
// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
// version of gallery image, just set
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
// in the 'id' field without version input.
func (o ImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations. NOTE: Image
// reference publisher and offer can only be set when you create the scale set.
type ImageReferenceResponse struct {
	// Specified the community gallery image unique id for vm deployment. This can be
	// fetched from community gallery image GET call.
	CommunityGalleryImageId *string `pulumi:"communityGalleryImageId"`
	// Specifies in decimal numbers, the version of platform image or marketplace
	// image used to create the virtual machine. This readonly field differs from 'version',
	// only if the value specified in 'version' field is 'latest'.
	ExactVersion string `pulumi:"exactVersion"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Specifies the offer of the platform image or marketplace image used to create
	// the virtual machine.
	Offer *string `pulumi:"offer"`
	// The image publisher.
	Publisher *string `pulumi:"publisher"`
	// Specified the shared gallery image unique id for vm deployment. This can be
	// fetched from shared gallery image GET call.
	SharedGalleryImageId *string `pulumi:"sharedGalleryImageId"`
	// The image SKU.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create
	// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
	// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
	// version of an image available at deploy time. Even if you use 'latest', the VM
	// image will not automatically update after deploy time even if a new version
	// becomes available. Please do not use field 'version' for gallery image
	// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
	// version of gallery image, just set
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
	// in the 'id' field without version input.
	Version *string `pulumi:"version"`
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations. NOTE: Image
// reference publisher and offer can only be set when you create the scale set.
type ImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutput() ImageReferenceResponseOutput {
	return o
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutputWithContext(ctx context.Context) ImageReferenceResponseOutput {
	return o
}

// Specified the community gallery image unique id for vm deployment. This can be
// fetched from community gallery image GET call.
func (o ImageReferenceResponseOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.CommunityGalleryImageId }).(pulumi.StringPtrOutput)
}

// Specifies in decimal numbers, the version of platform image or marketplace
// image used to create the virtual machine. This readonly field differs from 'version',
// only if the value specified in 'version' field is 'latest'.
func (o ImageReferenceResponseOutput) ExactVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReferenceResponse) string { return v.ExactVersion }).(pulumi.StringOutput)
}

// Resource Id
func (o ImageReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create
// the virtual machine.
func (o ImageReferenceResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Specified the shared gallery image unique id for vm deployment. This can be
// fetched from shared gallery image GET call.
func (o ImageReferenceResponseOutput) SharedGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.SharedGalleryImageId }).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create
// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
// version of an image available at deploy time. Even if you use 'latest', the VM
// image will not automatically update after deploy time even if a new version
// becomes available. Please do not use field 'version' for gallery image
// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
// version of gallery image, just set
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
// in the 'id' field without version input.
func (o ImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponsePtrOutput) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return o
}

func (o ImageReferenceResponsePtrOutput) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return o
}

func (o ImageReferenceResponsePtrOutput) Elem() ImageReferenceResponseOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) ImageReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ImageReferenceResponse
		return ret
	}).(ImageReferenceResponseOutput)
}

// Specified the community gallery image unique id for vm deployment. This can be
// fetched from community gallery image GET call.
func (o ImageReferenceResponsePtrOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommunityGalleryImageId
	}).(pulumi.StringPtrOutput)
}

// Specifies in decimal numbers, the version of platform image or marketplace
// image used to create the virtual machine. This readonly field differs from 'version',
// only if the value specified in 'version' field is 'latest'.
func (o ImageReferenceResponsePtrOutput) ExactVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExactVersion
	}).(pulumi.StringPtrOutput)
}

// Resource Id
func (o ImageReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create
// the virtual machine.
func (o ImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specified the shared gallery image unique id for vm deployment. This can be
// fetched from shared gallery image GET call.
func (o ImageReferenceResponsePtrOutput) SharedGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.SharedGalleryImageId
	}).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create
// the virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
// Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest
// version of an image available at deploy time. Even if you use 'latest', the VM
// image will not automatically update after deploy time even if a new version
// becomes available. Please do not use field 'version' for gallery image
// deployment, gallery image should always use 'id' field for deployment, to use 'latest'
// version of gallery image, just set
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'
// in the 'id' field without version input.
func (o ImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReference struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl string `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResource `pulumi:"sourceVault"`
}

// KeyVaultSecretReferenceInput is an input type that accepts KeyVaultSecretReferenceArgs and KeyVaultSecretReferenceOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceInput` via:
//
//	KeyVaultSecretReferenceArgs{...}
type KeyVaultSecretReferenceInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput
	ToKeyVaultSecretReferenceOutputWithContext(context.Context) KeyVaultSecretReferenceOutput
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceArgs struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceInput `pulumi:"sourceVault"`
}

func (KeyVaultSecretReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReference)(nil)).Elem()
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput {
	return i.ToKeyVaultSecretReferenceOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferenceOutputWithContext(ctx context.Context) KeyVaultSecretReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceOutput)
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return i.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceOutput).ToKeyVaultSecretReferencePtrOutputWithContext(ctx)
}

// KeyVaultSecretReferencePtrInput is an input type that accepts KeyVaultSecretReferenceArgs, KeyVaultSecretReferencePtr and KeyVaultSecretReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferencePtrInput` via:
//
//	        KeyVaultSecretReferenceArgs{...}
//
//	or:
//
//	        nil
type KeyVaultSecretReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput
	ToKeyVaultSecretReferencePtrOutputWithContext(context.Context) KeyVaultSecretReferencePtrOutput
}

type keyVaultSecretReferencePtrType KeyVaultSecretReferenceArgs

func KeyVaultSecretReferencePtr(v *KeyVaultSecretReferenceArgs) KeyVaultSecretReferencePtrInput {
	return (*keyVaultSecretReferencePtrType)(v)
}

func (*keyVaultSecretReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReference)(nil)).Elem()
}

func (i *keyVaultSecretReferencePtrType) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return i.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretReferencePtrType) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferencePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReference)(nil)).Elem()
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput {
	return o
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferenceOutputWithContext(ctx context.Context) KeyVaultSecretReferenceOutput {
	return o
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return o.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultSecretReference) *KeyVaultSecretReference {
		return &v
	}).(KeyVaultSecretReferencePtrOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceOutput) SourceVault() SubResourceOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) SubResource { return v.SourceVault }).(SubResourceOutput)
}

type KeyVaultSecretReferencePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReference)(nil)).Elem()
}

func (o KeyVaultSecretReferencePtrOutput) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return o
}

func (o KeyVaultSecretReferencePtrOutput) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return o
}

func (o KeyVaultSecretReferencePtrOutput) Elem() KeyVaultSecretReferenceOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) KeyVaultSecretReference {
		if v != nil {
			return *v
		}
		var ret KeyVaultSecretReference
		return ret
	}).(KeyVaultSecretReferenceOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferencePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferencePtrOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) *SubResource {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourcePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceResponse struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl string `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceResponse `pulumi:"sourceVault"`
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponseOutput {
	return o
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceResponseOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceResponseOutput) SourceVault() SubResourceResponseOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) SubResourceResponse { return v.SourceVault }).(SubResourceResponseOutput)
}

type KeyVaultSecretReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceResponsePtrOutput) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceResponsePtrOutput) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceResponsePtrOutput) Elem() KeyVaultSecretReferenceResponseOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) KeyVaultSecretReferenceResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultSecretReferenceResponse
		return ret
	}).(KeyVaultSecretReferenceResponseOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceResponsePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceResponsePtrOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourceResponsePtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
type LinuxConfiguration struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
	// machine. Default value is false.
	EnableVMAgentPlatformUpdates *bool `pulumi:"enableVMAgentPlatformUpdates"`
	// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
	PatchSettings *LinuxPatchSettings `pulumi:"patchSettings"`
	// Indicates whether virtual machine agent should be provisioned on the virtual
	// machine. When this property is not specified in the request body, default
	// behavior is to set it to true. This will ensure that VM Agent is installed on
	// the VM so that extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfiguration `pulumi:"ssh"`
}

// LinuxConfigurationInput is an input type that accepts LinuxConfigurationArgs and LinuxConfigurationOutput values.
// You can construct a concrete instance of `LinuxConfigurationInput` via:
//
//	LinuxConfigurationArgs{...}
type LinuxConfigurationInput interface {
	pulumi.Input

	ToLinuxConfigurationOutput() LinuxConfigurationOutput
	ToLinuxConfigurationOutputWithContext(context.Context) LinuxConfigurationOutput
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
type LinuxConfigurationArgs struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication pulumi.BoolPtrInput `pulumi:"disablePasswordAuthentication"`
	// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
	// machine. Default value is false.
	EnableVMAgentPlatformUpdates pulumi.BoolPtrInput `pulumi:"enableVMAgentPlatformUpdates"`
	// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
	PatchSettings LinuxPatchSettingsPtrInput `pulumi:"patchSettings"`
	// Indicates whether virtual machine agent should be provisioned on the virtual
	// machine. When this property is not specified in the request body, default
	// behavior is to set it to true. This will ensure that VM Agent is installed on
	// the VM so that extensions can be added to the VM later.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh SshConfigurationPtrInput `pulumi:"ssh"`
}

func (LinuxConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfiguration)(nil)).Elem()
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationOutput() LinuxConfigurationOutput {
	return i.ToLinuxConfigurationOutputWithContext(context.Background())
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationOutputWithContext(ctx context.Context) LinuxConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationOutput)
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return i.ToLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationOutput).ToLinuxConfigurationPtrOutputWithContext(ctx)
}

// LinuxConfigurationPtrInput is an input type that accepts LinuxConfigurationArgs, LinuxConfigurationPtr and LinuxConfigurationPtrOutput values.
// You can construct a concrete instance of `LinuxConfigurationPtrInput` via:
//
//	        LinuxConfigurationArgs{...}
//
//	or:
//
//	        nil
type LinuxConfigurationPtrInput interface {
	pulumi.Input

	ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput
	ToLinuxConfigurationPtrOutputWithContext(context.Context) LinuxConfigurationPtrOutput
}

type linuxConfigurationPtrType LinuxConfigurationArgs

func LinuxConfigurationPtr(v *LinuxConfigurationArgs) LinuxConfigurationPtrInput {
	return (*linuxConfigurationPtrType)(v)
}

func (*linuxConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfiguration)(nil)).Elem()
}

func (i *linuxConfigurationPtrType) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return i.ToLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (i *linuxConfigurationPtrType) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
type LinuxConfigurationOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfiguration)(nil)).Elem()
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationOutput() LinuxConfigurationOutput {
	return o
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationOutputWithContext(ctx context.Context) LinuxConfigurationOutput {
	return o
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return o.ToLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxConfiguration) *LinuxConfiguration {
		return &v
	}).(LinuxConfigurationPtrOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *bool { return v.DisablePasswordAuthentication }).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
// machine. Default value is false.
func (o LinuxConfigurationOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *bool { return v.EnableVMAgentPlatformUpdates }).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
func (o LinuxConfigurationOutput) PatchSettings() LinuxPatchSettingsPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *LinuxPatchSettings { return v.PatchSettings }).(LinuxPatchSettingsPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, default
// behavior is to set it to true. This will ensure that VM Agent is installed on
// the VM so that extensions can be added to the VM later.
func (o LinuxConfigurationOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *SshConfiguration { return v.Ssh }).(SshConfigurationPtrOutput)
}

type LinuxConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfiguration)(nil)).Elem()
}

func (o LinuxConfigurationPtrOutput) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return o
}

func (o LinuxConfigurationPtrOutput) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return o
}

func (o LinuxConfigurationPtrOutput) Elem() LinuxConfigurationOutput {
	return o.ApplyT(func(v *LinuxConfiguration) LinuxConfiguration {
		if v != nil {
			return *v
		}
		var ret LinuxConfiguration
		return ret
	}).(LinuxConfigurationOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationPtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
// machine. Default value is false.
func (o LinuxConfigurationPtrOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVMAgentPlatformUpdates
	}).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
func (o LinuxConfigurationPtrOutput) PatchSettings() LinuxPatchSettingsPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *LinuxPatchSettings {
		if v == nil {
			return nil
		}
		return v.PatchSettings
	}).(LinuxPatchSettingsPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, default
// behavior is to set it to true. This will ensure that VM Agent is installed on
// the VM so that extensions can be added to the VM later.
func (o LinuxConfigurationPtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationPtrOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *SshConfiguration {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
type LinuxConfigurationResponse struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
	// machine. Default value is false.
	EnableVMAgentPlatformUpdates *bool `pulumi:"enableVMAgentPlatformUpdates"`
	// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
	PatchSettings *LinuxPatchSettingsResponse `pulumi:"patchSettings"`
	// Indicates whether virtual machine agent should be provisioned on the virtual
	// machine. When this property is not specified in the request body, default
	// behavior is to set it to true. This will ensure that VM Agent is installed on
	// the VM so that extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfigurationResponse `pulumi:"ssh"`
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
type LinuxConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfigurationResponse)(nil)).Elem()
}

func (o LinuxConfigurationResponseOutput) ToLinuxConfigurationResponseOutput() LinuxConfigurationResponseOutput {
	return o
}

func (o LinuxConfigurationResponseOutput) ToLinuxConfigurationResponseOutputWithContext(ctx context.Context) LinuxConfigurationResponseOutput {
	return o
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationResponseOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *bool { return v.DisablePasswordAuthentication }).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
// machine. Default value is false.
func (o LinuxConfigurationResponseOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *bool { return v.EnableVMAgentPlatformUpdates }).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
func (o LinuxConfigurationResponseOutput) PatchSettings() LinuxPatchSettingsResponsePtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *LinuxPatchSettingsResponse { return v.PatchSettings }).(LinuxPatchSettingsResponsePtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, default
// behavior is to set it to true. This will ensure that VM Agent is installed on
// the VM so that extensions can be added to the VM later.
func (o LinuxConfigurationResponseOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationResponseOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *SshConfigurationResponse { return v.Ssh }).(SshConfigurationResponsePtrOutput)
}

type LinuxConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfigurationResponse)(nil)).Elem()
}

func (o LinuxConfigurationResponsePtrOutput) ToLinuxConfigurationResponsePtrOutput() LinuxConfigurationResponsePtrOutput {
	return o
}

func (o LinuxConfigurationResponsePtrOutput) ToLinuxConfigurationResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationResponsePtrOutput {
	return o
}

func (o LinuxConfigurationResponsePtrOutput) Elem() LinuxConfigurationResponseOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) LinuxConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret LinuxConfigurationResponse
		return ret
	}).(LinuxConfigurationResponseOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationResponsePtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Linux virtual
// machine. Default value is false.
func (o LinuxConfigurationResponsePtrOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVMAgentPlatformUpdates
	}).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
func (o LinuxConfigurationResponsePtrOutput) PatchSettings() LinuxPatchSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *LinuxPatchSettingsResponse {
		if v == nil {
			return nil
		}
		return v.PatchSettings
	}).(LinuxPatchSettingsResponsePtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, default
// behavior is to set it to true. This will ensure that VM Agent is installed on
// the VM so that extensions can be added to the VM later.
func (o LinuxConfigurationResponsePtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationResponsePtrOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *SshConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationResponsePtrOutput)
}

// Specifies settings related to VM Guest Patching on Linux.
type LinuxPatchSettings struct {
	// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
	// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
	// control the timing of patch assessments on a virtual machine. <br /><br />
	// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
	// The property provisionVMAgent must be true.
	AssessmentMode *string `pulumi:"assessmentMode"`
	// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
	// Patching on Linux.
	AutomaticByPlatformSettings *LinuxVMGuestPatchAutomaticByPlatformSettings `pulumi:"automaticByPlatformSettings"`
	// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
	// machines associated to virtual machine scale set with OrchestrationMode as
	// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
	// virtual machine's default patching configuration is used. <br /><br />
	// **AutomaticByPlatform** - The virtual machine will be automatically updated by
	// the platform. The property provisionVMAgent must be true
	PatchMode *string `pulumi:"patchMode"`
}

// LinuxPatchSettingsInput is an input type that accepts LinuxPatchSettingsArgs and LinuxPatchSettingsOutput values.
// You can construct a concrete instance of `LinuxPatchSettingsInput` via:
//
//	LinuxPatchSettingsArgs{...}
type LinuxPatchSettingsInput interface {
	pulumi.Input

	ToLinuxPatchSettingsOutput() LinuxPatchSettingsOutput
	ToLinuxPatchSettingsOutputWithContext(context.Context) LinuxPatchSettingsOutput
}

// Specifies settings related to VM Guest Patching on Linux.
type LinuxPatchSettingsArgs struct {
	// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
	// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
	// control the timing of patch assessments on a virtual machine. <br /><br />
	// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
	// The property provisionVMAgent must be true.
	AssessmentMode pulumi.StringPtrInput `pulumi:"assessmentMode"`
	// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
	// Patching on Linux.
	AutomaticByPlatformSettings LinuxVMGuestPatchAutomaticByPlatformSettingsPtrInput `pulumi:"automaticByPlatformSettings"`
	// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
	// machines associated to virtual machine scale set with OrchestrationMode as
	// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
	// virtual machine's default patching configuration is used. <br /><br />
	// **AutomaticByPlatform** - The virtual machine will be automatically updated by
	// the platform. The property provisionVMAgent must be true
	PatchMode pulumi.StringPtrInput `pulumi:"patchMode"`
}

func (LinuxPatchSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxPatchSettings)(nil)).Elem()
}

func (i LinuxPatchSettingsArgs) ToLinuxPatchSettingsOutput() LinuxPatchSettingsOutput {
	return i.ToLinuxPatchSettingsOutputWithContext(context.Background())
}

func (i LinuxPatchSettingsArgs) ToLinuxPatchSettingsOutputWithContext(ctx context.Context) LinuxPatchSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxPatchSettingsOutput)
}

func (i LinuxPatchSettingsArgs) ToLinuxPatchSettingsPtrOutput() LinuxPatchSettingsPtrOutput {
	return i.ToLinuxPatchSettingsPtrOutputWithContext(context.Background())
}

func (i LinuxPatchSettingsArgs) ToLinuxPatchSettingsPtrOutputWithContext(ctx context.Context) LinuxPatchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxPatchSettingsOutput).ToLinuxPatchSettingsPtrOutputWithContext(ctx)
}

// LinuxPatchSettingsPtrInput is an input type that accepts LinuxPatchSettingsArgs, LinuxPatchSettingsPtr and LinuxPatchSettingsPtrOutput values.
// You can construct a concrete instance of `LinuxPatchSettingsPtrInput` via:
//
//	        LinuxPatchSettingsArgs{...}
//
//	or:
//
//	        nil
type LinuxPatchSettingsPtrInput interface {
	pulumi.Input

	ToLinuxPatchSettingsPtrOutput() LinuxPatchSettingsPtrOutput
	ToLinuxPatchSettingsPtrOutputWithContext(context.Context) LinuxPatchSettingsPtrOutput
}

type linuxPatchSettingsPtrType LinuxPatchSettingsArgs

func LinuxPatchSettingsPtr(v *LinuxPatchSettingsArgs) LinuxPatchSettingsPtrInput {
	return (*linuxPatchSettingsPtrType)(v)
}

func (*linuxPatchSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxPatchSettings)(nil)).Elem()
}

func (i *linuxPatchSettingsPtrType) ToLinuxPatchSettingsPtrOutput() LinuxPatchSettingsPtrOutput {
	return i.ToLinuxPatchSettingsPtrOutputWithContext(context.Background())
}

func (i *linuxPatchSettingsPtrType) ToLinuxPatchSettingsPtrOutputWithContext(ctx context.Context) LinuxPatchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxPatchSettingsPtrOutput)
}

// Specifies settings related to VM Guest Patching on Linux.
type LinuxPatchSettingsOutput struct{ *pulumi.OutputState }

func (LinuxPatchSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxPatchSettings)(nil)).Elem()
}

func (o LinuxPatchSettingsOutput) ToLinuxPatchSettingsOutput() LinuxPatchSettingsOutput {
	return o
}

func (o LinuxPatchSettingsOutput) ToLinuxPatchSettingsOutputWithContext(ctx context.Context) LinuxPatchSettingsOutput {
	return o
}

func (o LinuxPatchSettingsOutput) ToLinuxPatchSettingsPtrOutput() LinuxPatchSettingsPtrOutput {
	return o.ToLinuxPatchSettingsPtrOutputWithContext(context.Background())
}

func (o LinuxPatchSettingsOutput) ToLinuxPatchSettingsPtrOutputWithContext(ctx context.Context) LinuxPatchSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxPatchSettings) *LinuxPatchSettings {
		return &v
	}).(LinuxPatchSettingsPtrOutput)
}

// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine. <br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o LinuxPatchSettingsOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxPatchSettings) *string { return v.AssessmentMode }).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Linux.
func (o LinuxPatchSettingsOutput) AutomaticByPlatformSettings() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ApplyT(func(v LinuxPatchSettings) *LinuxVMGuestPatchAutomaticByPlatformSettings {
		return v.AutomaticByPlatformSettings
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
// virtual machine's default patching configuration is used. <br /><br />
// **AutomaticByPlatform** - The virtual machine will be automatically updated by
// the platform. The property provisionVMAgent must be true
func (o LinuxPatchSettingsOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxPatchSettings) *string { return v.PatchMode }).(pulumi.StringPtrOutput)
}

type LinuxPatchSettingsPtrOutput struct{ *pulumi.OutputState }

func (LinuxPatchSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxPatchSettings)(nil)).Elem()
}

func (o LinuxPatchSettingsPtrOutput) ToLinuxPatchSettingsPtrOutput() LinuxPatchSettingsPtrOutput {
	return o
}

func (o LinuxPatchSettingsPtrOutput) ToLinuxPatchSettingsPtrOutputWithContext(ctx context.Context) LinuxPatchSettingsPtrOutput {
	return o
}

func (o LinuxPatchSettingsPtrOutput) Elem() LinuxPatchSettingsOutput {
	return o.ApplyT(func(v *LinuxPatchSettings) LinuxPatchSettings {
		if v != nil {
			return *v
		}
		var ret LinuxPatchSettings
		return ret
	}).(LinuxPatchSettingsOutput)
}

// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine. <br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o LinuxPatchSettingsPtrOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxPatchSettings) *string {
		if v == nil {
			return nil
		}
		return v.AssessmentMode
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Linux.
func (o LinuxPatchSettingsPtrOutput) AutomaticByPlatformSettings() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ApplyT(func(v *LinuxPatchSettings) *LinuxVMGuestPatchAutomaticByPlatformSettings {
		if v == nil {
			return nil
		}
		return v.AutomaticByPlatformSettings
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
// virtual machine's default patching configuration is used. <br /><br />
// **AutomaticByPlatform** - The virtual machine will be automatically updated by
// the platform. The property provisionVMAgent must be true
func (o LinuxPatchSettingsPtrOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxPatchSettings) *string {
		if v == nil {
			return nil
		}
		return v.PatchMode
	}).(pulumi.StringPtrOutput)
}

// Specifies settings related to VM Guest Patching on Linux.
type LinuxPatchSettingsResponse struct {
	// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
	// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
	// control the timing of patch assessments on a virtual machine. <br /><br />
	// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
	// The property provisionVMAgent must be true.
	AssessmentMode *string `pulumi:"assessmentMode"`
	// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
	// Patching on Linux.
	AutomaticByPlatformSettings *LinuxVMGuestPatchAutomaticByPlatformSettingsResponse `pulumi:"automaticByPlatformSettings"`
	// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
	// machines associated to virtual machine scale set with OrchestrationMode as
	// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
	// virtual machine's default patching configuration is used. <br /><br />
	// **AutomaticByPlatform** - The virtual machine will be automatically updated by
	// the platform. The property provisionVMAgent must be true
	PatchMode *string `pulumi:"patchMode"`
}

// Specifies settings related to VM Guest Patching on Linux.
type LinuxPatchSettingsResponseOutput struct{ *pulumi.OutputState }

func (LinuxPatchSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxPatchSettingsResponse)(nil)).Elem()
}

func (o LinuxPatchSettingsResponseOutput) ToLinuxPatchSettingsResponseOutput() LinuxPatchSettingsResponseOutput {
	return o
}

func (o LinuxPatchSettingsResponseOutput) ToLinuxPatchSettingsResponseOutputWithContext(ctx context.Context) LinuxPatchSettingsResponseOutput {
	return o
}

// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine. <br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o LinuxPatchSettingsResponseOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxPatchSettingsResponse) *string { return v.AssessmentMode }).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Linux.
func (o LinuxPatchSettingsResponseOutput) AutomaticByPlatformSettings() LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o.ApplyT(func(v LinuxPatchSettingsResponse) *LinuxVMGuestPatchAutomaticByPlatformSettingsResponse {
		return v.AutomaticByPlatformSettings
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
// virtual machine's default patching configuration is used. <br /><br />
// **AutomaticByPlatform** - The virtual machine will be automatically updated by
// the platform. The property provisionVMAgent must be true
func (o LinuxPatchSettingsResponseOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxPatchSettingsResponse) *string { return v.PatchMode }).(pulumi.StringPtrOutput)
}

type LinuxPatchSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxPatchSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxPatchSettingsResponse)(nil)).Elem()
}

func (o LinuxPatchSettingsResponsePtrOutput) ToLinuxPatchSettingsResponsePtrOutput() LinuxPatchSettingsResponsePtrOutput {
	return o
}

func (o LinuxPatchSettingsResponsePtrOutput) ToLinuxPatchSettingsResponsePtrOutputWithContext(ctx context.Context) LinuxPatchSettingsResponsePtrOutput {
	return o
}

func (o LinuxPatchSettingsResponsePtrOutput) Elem() LinuxPatchSettingsResponseOutput {
	return o.ApplyT(func(v *LinuxPatchSettingsResponse) LinuxPatchSettingsResponse {
		if v != nil {
			return *v
		}
		var ret LinuxPatchSettingsResponse
		return ret
	}).(LinuxPatchSettingsResponseOutput)
}

// Specifies the mode of VM Guest Patch Assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine. <br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o LinuxPatchSettingsResponsePtrOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxPatchSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssessmentMode
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Linux.
func (o LinuxPatchSettingsResponsePtrOutput) AutomaticByPlatformSettings() LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LinuxPatchSettingsResponse) *LinuxVMGuestPatchAutomaticByPlatformSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutomaticByPlatformSettings
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The
// virtual machine's default patching configuration is used. <br /><br />
// **AutomaticByPlatform** - The virtual machine will be automatically updated by
// the platform. The property provisionVMAgent must be true
func (o LinuxPatchSettingsResponsePtrOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxPatchSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PatchMode
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Linux patch settings.
type LinuxVMGuestPatchAutomaticByPlatformSettings struct {
	// Enables customer to schedule patching without accidental upgrades
	BypassPlatformSafetyChecksOnUserSchedule *bool `pulumi:"bypassPlatformSafetyChecksOnUserSchedule"`
	// Specifies the reboot setting for all AutomaticByPlatform patch installation
	// operations.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// LinuxVMGuestPatchAutomaticByPlatformSettingsInput is an input type that accepts LinuxVMGuestPatchAutomaticByPlatformSettingsArgs and LinuxVMGuestPatchAutomaticByPlatformSettingsOutput values.
// You can construct a concrete instance of `LinuxVMGuestPatchAutomaticByPlatformSettingsInput` via:
//
//	LinuxVMGuestPatchAutomaticByPlatformSettingsArgs{...}
type LinuxVMGuestPatchAutomaticByPlatformSettingsInput interface {
	pulumi.Input

	ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsOutput
	ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsOutput
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Linux patch settings.
type LinuxVMGuestPatchAutomaticByPlatformSettingsArgs struct {
	// Enables customer to schedule patching without accidental upgrades
	BypassPlatformSafetyChecksOnUserSchedule pulumi.BoolPtrInput `pulumi:"bypassPlatformSafetyChecksOnUserSchedule"`
	// Specifies the reboot setting for all AutomaticByPlatform patch installation
	// operations.
	RebootSetting pulumi.StringPtrInput `pulumi:"rebootSetting"`
}

func (LinuxVMGuestPatchAutomaticByPlatformSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (i LinuxVMGuestPatchAutomaticByPlatformSettingsArgs) ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsOutput {
	return i.ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(context.Background())
}

func (i LinuxVMGuestPatchAutomaticByPlatformSettingsArgs) ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVMGuestPatchAutomaticByPlatformSettingsOutput)
}

func (i LinuxVMGuestPatchAutomaticByPlatformSettingsArgs) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return i.ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Background())
}

func (i LinuxVMGuestPatchAutomaticByPlatformSettingsArgs) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVMGuestPatchAutomaticByPlatformSettingsOutput).ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx)
}

// LinuxVMGuestPatchAutomaticByPlatformSettingsPtrInput is an input type that accepts LinuxVMGuestPatchAutomaticByPlatformSettingsArgs, LinuxVMGuestPatchAutomaticByPlatformSettingsPtr and LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput values.
// You can construct a concrete instance of `LinuxVMGuestPatchAutomaticByPlatformSettingsPtrInput` via:
//
//	        LinuxVMGuestPatchAutomaticByPlatformSettingsArgs{...}
//
//	or:
//
//	        nil
type LinuxVMGuestPatchAutomaticByPlatformSettingsPtrInput interface {
	pulumi.Input

	ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput
	ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput
}

type linuxVMGuestPatchAutomaticByPlatformSettingsPtrType LinuxVMGuestPatchAutomaticByPlatformSettingsArgs

func LinuxVMGuestPatchAutomaticByPlatformSettingsPtr(v *LinuxVMGuestPatchAutomaticByPlatformSettingsArgs) LinuxVMGuestPatchAutomaticByPlatformSettingsPtrInput {
	return (*linuxVMGuestPatchAutomaticByPlatformSettingsPtrType)(v)
}

func (*linuxVMGuestPatchAutomaticByPlatformSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (i *linuxVMGuestPatchAutomaticByPlatformSettingsPtrType) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return i.ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Background())
}

func (i *linuxVMGuestPatchAutomaticByPlatformSettingsPtrType) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Linux patch settings.
type LinuxVMGuestPatchAutomaticByPlatformSettingsOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Background())
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxVMGuestPatchAutomaticByPlatformSettings) *LinuxVMGuestPatchAutomaticByPlatformSettings {
		return &v
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Enables customer to schedule patching without accidental upgrades
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVMGuestPatchAutomaticByPlatformSettings) *bool {
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVMGuestPatchAutomaticByPlatformSettings) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput) Elem() LinuxVMGuestPatchAutomaticByPlatformSettingsOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformSettings) LinuxVMGuestPatchAutomaticByPlatformSettings {
		if v != nil {
			return *v
		}
		var ret LinuxVMGuestPatchAutomaticByPlatformSettings
		return ret
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsOutput)
}

// Enables customer to schedule patching without accidental upgrades
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformSettings) *bool {
		if v == nil {
			return nil
		}
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformSettings) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Linux patch settings.
type LinuxVMGuestPatchAutomaticByPlatformSettingsResponse struct {
	// Enables customer to schedule patching without accidental upgrades
	BypassPlatformSafetyChecksOnUserSchedule *bool `pulumi:"bypassPlatformSafetyChecksOnUserSchedule"`
	// Specifies the reboot setting for all AutomaticByPlatform patch installation
	// operations.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Linux patch settings.
type LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVMGuestPatchAutomaticByPlatformSettingsResponse)(nil)).Elem()
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput {
	return o
}

// Enables customer to schedule patching without accidental upgrades
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVMGuestPatchAutomaticByPlatformSettingsResponse) *bool {
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVMGuestPatchAutomaticByPlatformSettingsResponse) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVMGuestPatchAutomaticByPlatformSettingsResponse)(nil)).Elem()
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput() LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) ToLinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutputWithContext(ctx context.Context) LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o
}

func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) Elem() LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformSettingsResponse) LinuxVMGuestPatchAutomaticByPlatformSettingsResponse {
		if v != nil {
			return *v
		}
		var ret LinuxVMGuestPatchAutomaticByPlatformSettingsResponse
		return ret
	}).(LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput)
}

// Enables customer to schedule patching without accidental upgrades
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVMGuestPatchAutomaticByPlatformSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Specifies OS Image Scheduled Event related configurations.
type OSImageNotificationProfile struct {
	// Specifies whether the OS Image Scheduled event is enabled or disabled.
	Enable *bool `pulumi:"enable"`
	// Length of time a Virtual Machine being reimaged or having its OS upgraded will
	// have to potentially approve the OS Image Scheduled Event before the event is
	// auto approved (timed out). The configuration is specified in ISO 8601 format,
	// and the value must not exceed 15 minutes (PT15M)
	NotBeforeTimeout *string `pulumi:"notBeforeTimeout"`
}

// OSImageNotificationProfileInput is an input type that accepts OSImageNotificationProfileArgs and OSImageNotificationProfileOutput values.
// You can construct a concrete instance of `OSImageNotificationProfileInput` via:
//
//	OSImageNotificationProfileArgs{...}
type OSImageNotificationProfileInput interface {
	pulumi.Input

	ToOSImageNotificationProfileOutput() OSImageNotificationProfileOutput
	ToOSImageNotificationProfileOutputWithContext(context.Context) OSImageNotificationProfileOutput
}

// Specifies OS Image Scheduled Event related configurations.
type OSImageNotificationProfileArgs struct {
	// Specifies whether the OS Image Scheduled event is enabled or disabled.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Length of time a Virtual Machine being reimaged or having its OS upgraded will
	// have to potentially approve the OS Image Scheduled Event before the event is
	// auto approved (timed out). The configuration is specified in ISO 8601 format,
	// and the value must not exceed 15 minutes (PT15M)
	NotBeforeTimeout pulumi.StringPtrInput `pulumi:"notBeforeTimeout"`
}

func (OSImageNotificationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageNotificationProfile)(nil)).Elem()
}

func (i OSImageNotificationProfileArgs) ToOSImageNotificationProfileOutput() OSImageNotificationProfileOutput {
	return i.ToOSImageNotificationProfileOutputWithContext(context.Background())
}

func (i OSImageNotificationProfileArgs) ToOSImageNotificationProfileOutputWithContext(ctx context.Context) OSImageNotificationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSImageNotificationProfileOutput)
}

func (i OSImageNotificationProfileArgs) ToOSImageNotificationProfilePtrOutput() OSImageNotificationProfilePtrOutput {
	return i.ToOSImageNotificationProfilePtrOutputWithContext(context.Background())
}

func (i OSImageNotificationProfileArgs) ToOSImageNotificationProfilePtrOutputWithContext(ctx context.Context) OSImageNotificationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSImageNotificationProfileOutput).ToOSImageNotificationProfilePtrOutputWithContext(ctx)
}

// OSImageNotificationProfilePtrInput is an input type that accepts OSImageNotificationProfileArgs, OSImageNotificationProfilePtr and OSImageNotificationProfilePtrOutput values.
// You can construct a concrete instance of `OSImageNotificationProfilePtrInput` via:
//
//	        OSImageNotificationProfileArgs{...}
//
//	or:
//
//	        nil
type OSImageNotificationProfilePtrInput interface {
	pulumi.Input

	ToOSImageNotificationProfilePtrOutput() OSImageNotificationProfilePtrOutput
	ToOSImageNotificationProfilePtrOutputWithContext(context.Context) OSImageNotificationProfilePtrOutput
}

type osimageNotificationProfilePtrType OSImageNotificationProfileArgs

func OSImageNotificationProfilePtr(v *OSImageNotificationProfileArgs) OSImageNotificationProfilePtrInput {
	return (*osimageNotificationProfilePtrType)(v)
}

func (*osimageNotificationProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImageNotificationProfile)(nil)).Elem()
}

func (i *osimageNotificationProfilePtrType) ToOSImageNotificationProfilePtrOutput() OSImageNotificationProfilePtrOutput {
	return i.ToOSImageNotificationProfilePtrOutputWithContext(context.Background())
}

func (i *osimageNotificationProfilePtrType) ToOSImageNotificationProfilePtrOutputWithContext(ctx context.Context) OSImageNotificationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSImageNotificationProfilePtrOutput)
}

// Specifies OS Image Scheduled Event related configurations.
type OSImageNotificationProfileOutput struct{ *pulumi.OutputState }

func (OSImageNotificationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageNotificationProfile)(nil)).Elem()
}

func (o OSImageNotificationProfileOutput) ToOSImageNotificationProfileOutput() OSImageNotificationProfileOutput {
	return o
}

func (o OSImageNotificationProfileOutput) ToOSImageNotificationProfileOutputWithContext(ctx context.Context) OSImageNotificationProfileOutput {
	return o
}

func (o OSImageNotificationProfileOutput) ToOSImageNotificationProfilePtrOutput() OSImageNotificationProfilePtrOutput {
	return o.ToOSImageNotificationProfilePtrOutputWithContext(context.Background())
}

func (o OSImageNotificationProfileOutput) ToOSImageNotificationProfilePtrOutputWithContext(ctx context.Context) OSImageNotificationProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSImageNotificationProfile) *OSImageNotificationProfile {
		return &v
	}).(OSImageNotificationProfilePtrOutput)
}

// Specifies whether the OS Image Scheduled event is enabled or disabled.
func (o OSImageNotificationProfileOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OSImageNotificationProfile) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Length of time a Virtual Machine being reimaged or having its OS upgraded will
// have to potentially approve the OS Image Scheduled Event before the event is
// auto approved (timed out). The configuration is specified in ISO 8601 format,
// and the value must not exceed 15 minutes (PT15M)
func (o OSImageNotificationProfileOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSImageNotificationProfile) *string { return v.NotBeforeTimeout }).(pulumi.StringPtrOutput)
}

type OSImageNotificationProfilePtrOutput struct{ *pulumi.OutputState }

func (OSImageNotificationProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImageNotificationProfile)(nil)).Elem()
}

func (o OSImageNotificationProfilePtrOutput) ToOSImageNotificationProfilePtrOutput() OSImageNotificationProfilePtrOutput {
	return o
}

func (o OSImageNotificationProfilePtrOutput) ToOSImageNotificationProfilePtrOutputWithContext(ctx context.Context) OSImageNotificationProfilePtrOutput {
	return o
}

func (o OSImageNotificationProfilePtrOutput) Elem() OSImageNotificationProfileOutput {
	return o.ApplyT(func(v *OSImageNotificationProfile) OSImageNotificationProfile {
		if v != nil {
			return *v
		}
		var ret OSImageNotificationProfile
		return ret
	}).(OSImageNotificationProfileOutput)
}

// Specifies whether the OS Image Scheduled event is enabled or disabled.
func (o OSImageNotificationProfilePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OSImageNotificationProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Length of time a Virtual Machine being reimaged or having its OS upgraded will
// have to potentially approve the OS Image Scheduled Event before the event is
// auto approved (timed out). The configuration is specified in ISO 8601 format,
// and the value must not exceed 15 minutes (PT15M)
func (o OSImageNotificationProfilePtrOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSImageNotificationProfile) *string {
		if v == nil {
			return nil
		}
		return v.NotBeforeTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies OS Image Scheduled Event related configurations.
type OSImageNotificationProfileResponse struct {
	// Specifies whether the OS Image Scheduled event is enabled or disabled.
	Enable *bool `pulumi:"enable"`
	// Length of time a Virtual Machine being reimaged or having its OS upgraded will
	// have to potentially approve the OS Image Scheduled Event before the event is
	// auto approved (timed out). The configuration is specified in ISO 8601 format,
	// and the value must not exceed 15 minutes (PT15M)
	NotBeforeTimeout *string `pulumi:"notBeforeTimeout"`
}

// Specifies OS Image Scheduled Event related configurations.
type OSImageNotificationProfileResponseOutput struct{ *pulumi.OutputState }

func (OSImageNotificationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageNotificationProfileResponse)(nil)).Elem()
}

func (o OSImageNotificationProfileResponseOutput) ToOSImageNotificationProfileResponseOutput() OSImageNotificationProfileResponseOutput {
	return o
}

func (o OSImageNotificationProfileResponseOutput) ToOSImageNotificationProfileResponseOutputWithContext(ctx context.Context) OSImageNotificationProfileResponseOutput {
	return o
}

// Specifies whether the OS Image Scheduled event is enabled or disabled.
func (o OSImageNotificationProfileResponseOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OSImageNotificationProfileResponse) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Length of time a Virtual Machine being reimaged or having its OS upgraded will
// have to potentially approve the OS Image Scheduled Event before the event is
// auto approved (timed out). The configuration is specified in ISO 8601 format,
// and the value must not exceed 15 minutes (PT15M)
func (o OSImageNotificationProfileResponseOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSImageNotificationProfileResponse) *string { return v.NotBeforeTimeout }).(pulumi.StringPtrOutput)
}

type OSImageNotificationProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OSImageNotificationProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImageNotificationProfileResponse)(nil)).Elem()
}

func (o OSImageNotificationProfileResponsePtrOutput) ToOSImageNotificationProfileResponsePtrOutput() OSImageNotificationProfileResponsePtrOutput {
	return o
}

func (o OSImageNotificationProfileResponsePtrOutput) ToOSImageNotificationProfileResponsePtrOutputWithContext(ctx context.Context) OSImageNotificationProfileResponsePtrOutput {
	return o
}

func (o OSImageNotificationProfileResponsePtrOutput) Elem() OSImageNotificationProfileResponseOutput {
	return o.ApplyT(func(v *OSImageNotificationProfileResponse) OSImageNotificationProfileResponse {
		if v != nil {
			return *v
		}
		var ret OSImageNotificationProfileResponse
		return ret
	}).(OSImageNotificationProfileResponseOutput)
}

// Specifies whether the OS Image Scheduled event is enabled or disabled.
func (o OSImageNotificationProfileResponsePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OSImageNotificationProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Length of time a Virtual Machine being reimaged or having its OS upgraded will
// have to potentially approve the OS Image Scheduled Event before the event is
// auto approved (timed out). The configuration is specified in ISO 8601 format,
// and the value must not exceed 15 minutes (PT15M)
func (o OSImageNotificationProfileResponsePtrOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSImageNotificationProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotBeforeTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies settings related to VM Guest Patching on Windows.
type PatchSettings struct {
	// Specifies the mode of VM Guest patch assessment for the IaaS virtual
	// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
	// control the timing of patch assessments on a virtual machine.<br /><br />
	// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
	// The property provisionVMAgent must be true.
	AssessmentMode *string `pulumi:"assessmentMode"`
	// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
	// Patching on Windows.
	AutomaticByPlatformSettings *WindowsVMGuestPatchAutomaticByPlatformSettings `pulumi:"automaticByPlatformSettings"`
	// Enables customers to patch their Azure VMs without requiring a reboot. For
	// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
	// must be set to 'AutomaticByPlatform'.
	EnableHotpatching *bool `pulumi:"enableHotpatching"`
	// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
	// machines associated to virtual machine scale set with OrchestrationMode as
	// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
	// control the application of patches to a virtual machine. You do this by
	// applying patches manually inside the VM. In this mode, automatic updates are
	// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
	// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
	// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
	// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
	// automatically updated by the platform. The properties provisionVMAgent and
	// WindowsConfiguration.enableAutomaticUpdates must be true
	PatchMode *string `pulumi:"patchMode"`
}

// PatchSettingsInput is an input type that accepts PatchSettingsArgs and PatchSettingsOutput values.
// You can construct a concrete instance of `PatchSettingsInput` via:
//
//	PatchSettingsArgs{...}
type PatchSettingsInput interface {
	pulumi.Input

	ToPatchSettingsOutput() PatchSettingsOutput
	ToPatchSettingsOutputWithContext(context.Context) PatchSettingsOutput
}

// Specifies settings related to VM Guest Patching on Windows.
type PatchSettingsArgs struct {
	// Specifies the mode of VM Guest patch assessment for the IaaS virtual
	// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
	// control the timing of patch assessments on a virtual machine.<br /><br />
	// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
	// The property provisionVMAgent must be true.
	AssessmentMode pulumi.StringPtrInput `pulumi:"assessmentMode"`
	// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
	// Patching on Windows.
	AutomaticByPlatformSettings WindowsVMGuestPatchAutomaticByPlatformSettingsPtrInput `pulumi:"automaticByPlatformSettings"`
	// Enables customers to patch their Azure VMs without requiring a reboot. For
	// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
	// must be set to 'AutomaticByPlatform'.
	EnableHotpatching pulumi.BoolPtrInput `pulumi:"enableHotpatching"`
	// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
	// machines associated to virtual machine scale set with OrchestrationMode as
	// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
	// control the application of patches to a virtual machine. You do this by
	// applying patches manually inside the VM. In this mode, automatic updates are
	// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
	// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
	// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
	// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
	// automatically updated by the platform. The properties provisionVMAgent and
	// WindowsConfiguration.enableAutomaticUpdates must be true
	PatchMode pulumi.StringPtrInput `pulumi:"patchMode"`
}

func (PatchSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchSettings)(nil)).Elem()
}

func (i PatchSettingsArgs) ToPatchSettingsOutput() PatchSettingsOutput {
	return i.ToPatchSettingsOutputWithContext(context.Background())
}

func (i PatchSettingsArgs) ToPatchSettingsOutputWithContext(ctx context.Context) PatchSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchSettingsOutput)
}

func (i PatchSettingsArgs) ToPatchSettingsPtrOutput() PatchSettingsPtrOutput {
	return i.ToPatchSettingsPtrOutputWithContext(context.Background())
}

func (i PatchSettingsArgs) ToPatchSettingsPtrOutputWithContext(ctx context.Context) PatchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchSettingsOutput).ToPatchSettingsPtrOutputWithContext(ctx)
}

// PatchSettingsPtrInput is an input type that accepts PatchSettingsArgs, PatchSettingsPtr and PatchSettingsPtrOutput values.
// You can construct a concrete instance of `PatchSettingsPtrInput` via:
//
//	        PatchSettingsArgs{...}
//
//	or:
//
//	        nil
type PatchSettingsPtrInput interface {
	pulumi.Input

	ToPatchSettingsPtrOutput() PatchSettingsPtrOutput
	ToPatchSettingsPtrOutputWithContext(context.Context) PatchSettingsPtrOutput
}

type patchSettingsPtrType PatchSettingsArgs

func PatchSettingsPtr(v *PatchSettingsArgs) PatchSettingsPtrInput {
	return (*patchSettingsPtrType)(v)
}

func (*patchSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchSettings)(nil)).Elem()
}

func (i *patchSettingsPtrType) ToPatchSettingsPtrOutput() PatchSettingsPtrOutput {
	return i.ToPatchSettingsPtrOutputWithContext(context.Background())
}

func (i *patchSettingsPtrType) ToPatchSettingsPtrOutputWithContext(ctx context.Context) PatchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchSettingsPtrOutput)
}

// Specifies settings related to VM Guest Patching on Windows.
type PatchSettingsOutput struct{ *pulumi.OutputState }

func (PatchSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchSettings)(nil)).Elem()
}

func (o PatchSettingsOutput) ToPatchSettingsOutput() PatchSettingsOutput {
	return o
}

func (o PatchSettingsOutput) ToPatchSettingsOutputWithContext(ctx context.Context) PatchSettingsOutput {
	return o
}

func (o PatchSettingsOutput) ToPatchSettingsPtrOutput() PatchSettingsPtrOutput {
	return o.ToPatchSettingsPtrOutputWithContext(context.Background())
}

func (o PatchSettingsOutput) ToPatchSettingsPtrOutputWithContext(ctx context.Context) PatchSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchSettings) *PatchSettings {
		return &v
	}).(PatchSettingsPtrOutput)
}

// Specifies the mode of VM Guest patch assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine.<br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o PatchSettingsOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchSettings) *string { return v.AssessmentMode }).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Windows.
func (o PatchSettingsOutput) AutomaticByPlatformSettings() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ApplyT(func(v PatchSettings) *WindowsVMGuestPatchAutomaticByPlatformSettings {
		return v.AutomaticByPlatformSettings
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Enables customers to patch their Azure VMs without requiring a reboot. For
// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
// must be set to 'AutomaticByPlatform'.
func (o PatchSettingsOutput) EnableHotpatching() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchSettings) *bool { return v.EnableHotpatching }).(pulumi.BoolPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
// control the application of patches to a virtual machine. You do this by
// applying patches manually inside the VM. In this mode, automatic updates are
// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
// automatically updated by the platform. The properties provisionVMAgent and
// WindowsConfiguration.enableAutomaticUpdates must be true
func (o PatchSettingsOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchSettings) *string { return v.PatchMode }).(pulumi.StringPtrOutput)
}

type PatchSettingsPtrOutput struct{ *pulumi.OutputState }

func (PatchSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchSettings)(nil)).Elem()
}

func (o PatchSettingsPtrOutput) ToPatchSettingsPtrOutput() PatchSettingsPtrOutput {
	return o
}

func (o PatchSettingsPtrOutput) ToPatchSettingsPtrOutputWithContext(ctx context.Context) PatchSettingsPtrOutput {
	return o
}

func (o PatchSettingsPtrOutput) Elem() PatchSettingsOutput {
	return o.ApplyT(func(v *PatchSettings) PatchSettings {
		if v != nil {
			return *v
		}
		var ret PatchSettings
		return ret
	}).(PatchSettingsOutput)
}

// Specifies the mode of VM Guest patch assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine.<br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o PatchSettingsPtrOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchSettings) *string {
		if v == nil {
			return nil
		}
		return v.AssessmentMode
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Windows.
func (o PatchSettingsPtrOutput) AutomaticByPlatformSettings() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ApplyT(func(v *PatchSettings) *WindowsVMGuestPatchAutomaticByPlatformSettings {
		if v == nil {
			return nil
		}
		return v.AutomaticByPlatformSettings
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Enables customers to patch their Azure VMs without requiring a reboot. For
// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
// must be set to 'AutomaticByPlatform'.
func (o PatchSettingsPtrOutput) EnableHotpatching() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHotpatching
	}).(pulumi.BoolPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
// control the application of patches to a virtual machine. You do this by
// applying patches manually inside the VM. In this mode, automatic updates are
// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
// automatically updated by the platform. The properties provisionVMAgent and
// WindowsConfiguration.enableAutomaticUpdates must be true
func (o PatchSettingsPtrOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchSettings) *string {
		if v == nil {
			return nil
		}
		return v.PatchMode
	}).(pulumi.StringPtrOutput)
}

// Specifies settings related to VM Guest Patching on Windows.
type PatchSettingsResponse struct {
	// Specifies the mode of VM Guest patch assessment for the IaaS virtual
	// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
	// control the timing of patch assessments on a virtual machine.<br /><br />
	// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
	// The property provisionVMAgent must be true.
	AssessmentMode *string `pulumi:"assessmentMode"`
	// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
	// Patching on Windows.
	AutomaticByPlatformSettings *WindowsVMGuestPatchAutomaticByPlatformSettingsResponse `pulumi:"automaticByPlatformSettings"`
	// Enables customers to patch their Azure VMs without requiring a reboot. For
	// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
	// must be set to 'AutomaticByPlatform'.
	EnableHotpatching *bool `pulumi:"enableHotpatching"`
	// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
	// machines associated to virtual machine scale set with OrchestrationMode as
	// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
	// control the application of patches to a virtual machine. You do this by
	// applying patches manually inside the VM. In this mode, automatic updates are
	// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
	// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
	// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
	// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
	// automatically updated by the platform. The properties provisionVMAgent and
	// WindowsConfiguration.enableAutomaticUpdates must be true
	PatchMode *string `pulumi:"patchMode"`
}

// Specifies settings related to VM Guest Patching on Windows.
type PatchSettingsResponseOutput struct{ *pulumi.OutputState }

func (PatchSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchSettingsResponse)(nil)).Elem()
}

func (o PatchSettingsResponseOutput) ToPatchSettingsResponseOutput() PatchSettingsResponseOutput {
	return o
}

func (o PatchSettingsResponseOutput) ToPatchSettingsResponseOutputWithContext(ctx context.Context) PatchSettingsResponseOutput {
	return o
}

// Specifies the mode of VM Guest patch assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine.<br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o PatchSettingsResponseOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchSettingsResponse) *string { return v.AssessmentMode }).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Windows.
func (o PatchSettingsResponseOutput) AutomaticByPlatformSettings() WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o.ApplyT(func(v PatchSettingsResponse) *WindowsVMGuestPatchAutomaticByPlatformSettingsResponse {
		return v.AutomaticByPlatformSettings
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput)
}

// Enables customers to patch their Azure VMs without requiring a reboot. For
// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
// must be set to 'AutomaticByPlatform'.
func (o PatchSettingsResponseOutput) EnableHotpatching() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchSettingsResponse) *bool { return v.EnableHotpatching }).(pulumi.BoolPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
// control the application of patches to a virtual machine. You do this by
// applying patches manually inside the VM. In this mode, automatic updates are
// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
// automatically updated by the platform. The properties provisionVMAgent and
// WindowsConfiguration.enableAutomaticUpdates must be true
func (o PatchSettingsResponseOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchSettingsResponse) *string { return v.PatchMode }).(pulumi.StringPtrOutput)
}

type PatchSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PatchSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchSettingsResponse)(nil)).Elem()
}

func (o PatchSettingsResponsePtrOutput) ToPatchSettingsResponsePtrOutput() PatchSettingsResponsePtrOutput {
	return o
}

func (o PatchSettingsResponsePtrOutput) ToPatchSettingsResponsePtrOutputWithContext(ctx context.Context) PatchSettingsResponsePtrOutput {
	return o
}

func (o PatchSettingsResponsePtrOutput) Elem() PatchSettingsResponseOutput {
	return o.ApplyT(func(v *PatchSettingsResponse) PatchSettingsResponse {
		if v != nil {
			return *v
		}
		var ret PatchSettingsResponse
		return ret
	}).(PatchSettingsResponseOutput)
}

// Specifies the mode of VM Guest patch assessment for the IaaS virtual
// machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You
// control the timing of patch assessments on a virtual machine.<br /><br />
// **AutomaticByPlatform** - The platform will trigger periodic patch assessments.
// The property provisionVMAgent must be true.
func (o PatchSettingsResponsePtrOutput) AssessmentMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssessmentMode
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings for patch mode AutomaticByPlatform in VM Guest
// Patching on Windows.
func (o PatchSettingsResponsePtrOutput) AutomaticByPlatformSettings() WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PatchSettingsResponse) *WindowsVMGuestPatchAutomaticByPlatformSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutomaticByPlatformSettings
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput)
}

// Enables customers to patch their Azure VMs without requiring a reboot. For
// enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'
// must be set to 'AutomaticByPlatform'.
func (o PatchSettingsResponsePtrOutput) EnableHotpatching() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHotpatching
	}).(pulumi.BoolPtrOutput)
}

// Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual
// machines associated to virtual machine scale set with OrchestrationMode as
// Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You
// control the application of patches to a virtual machine. You do this by
// applying patches manually inside the VM. In this mode, automatic updates are
// disabled; the property WindowsConfiguration.enableAutomaticUpdates must be
// false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be
// updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates
// must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will
// automatically updated by the platform. The properties provisionVMAgent and
// WindowsConfiguration.enableAutomaticUpdates must be true
func (o PatchSettingsResponsePtrOutput) PatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PatchMode
	}).(pulumi.StringPtrOutput)
}

// Plan for the resource.
type Plan struct {
	// A user defined name of the 3rd Party Artifact that is being procured.
	Name string `pulumi:"name"`
	// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
	Product string `pulumi:"product"`
	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher string `pulumi:"publisher"`
	// The version of the desired product/artifact.
	Version *string `pulumi:"version"`
}

// PlanInput is an input type that accepts PlanArgs and PlanOutput values.
// You can construct a concrete instance of `PlanInput` via:
//
//	PlanArgs{...}
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

// Plan for the resource.
type PlanArgs struct {
	// A user defined name of the 3rd Party Artifact that is being procured.
	Name pulumi.StringInput `pulumi:"name"`
	// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
	Product pulumi.StringInput `pulumi:"product"`
	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The version of the desired product/artifact.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (i PlanArgs) ToPlanOutput() PlanOutput {
	return i.ToPlanOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput)
}

func (i PlanArgs) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput).ToPlanPtrOutputWithContext(ctx)
}

// PlanPtrInput is an input type that accepts PlanArgs, PlanPtr and PlanPtrOutput values.
// You can construct a concrete instance of `PlanPtrInput` via:
//
//	        PlanArgs{...}
//
//	or:
//
//	        nil
type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtrType PlanArgs

func PlanPtr(v *PlanArgs) PlanPtrInput {
	return (*planPtrType)(v)
}

func (*planPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (i *planPtrType) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i *planPtrType) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanPtrOutput)
}

// Plan for the resource.
type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o PlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Name }).(pulumi.StringOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o PlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Product }).(pulumi.StringOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o PlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o PlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Publisher }).(pulumi.StringOutput)
}

// The version of the desired product/artifact.
func (o PlanOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan {
		if v != nil {
			return *v
		}
		var ret Plan
		return ret
	}).(PlanOutput)
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o PlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o PlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o PlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o PlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The version of the desired product/artifact.
func (o PlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Plan for the resource.
type PlanResponse struct {
	// A user defined name of the 3rd Party Artifact that is being procured.
	Name string `pulumi:"name"`
	// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
	Product string `pulumi:"product"`
	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher string `pulumi:"publisher"`
	// The version of the desired product/artifact.
	Version *string `pulumi:"version"`
}

// Plan for the resource.
type PlanResponseOutput struct{ *pulumi.OutputState }

func (PlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (o PlanResponseOutput) ToPlanResponseOutput() PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return o
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o PlanResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o PlanResponseOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Product }).(pulumi.StringOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o PlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o PlanResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The version of the desired product/artifact.
func (o PlanResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) Elem() PlanResponseOutput {
	return o.ApplyT(func(v *PlanResponse) PlanResponse {
		if v != nil {
			return *v
		}
		var ret PlanResponse
		return ret
	}).(PlanResponseOutput)
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o PlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o PlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o PlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o PlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The version of the desired product/artifact.
func (o PlanResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
type ProxyAgentSettings struct {
	// Specifies whether ProxyAgent feature should be enabled on the virtual machine
	// or virtual machine scale set.
	Enabled *bool `pulumi:"enabled"`
	// Increase the value of this property allows user to reset the key used for
	// securing communication channel between guest and host.
	KeyIncarnationId *int `pulumi:"keyIncarnationId"`
	// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
	// ProxyAgent will start to audit or monitor but not enforce access control over
	// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
	// access control. The default value is Enforce mode.
	Mode *string `pulumi:"mode"`
}

// ProxyAgentSettingsInput is an input type that accepts ProxyAgentSettingsArgs and ProxyAgentSettingsOutput values.
// You can construct a concrete instance of `ProxyAgentSettingsInput` via:
//
//	ProxyAgentSettingsArgs{...}
type ProxyAgentSettingsInput interface {
	pulumi.Input

	ToProxyAgentSettingsOutput() ProxyAgentSettingsOutput
	ToProxyAgentSettingsOutputWithContext(context.Context) ProxyAgentSettingsOutput
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
type ProxyAgentSettingsArgs struct {
	// Specifies whether ProxyAgent feature should be enabled on the virtual machine
	// or virtual machine scale set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Increase the value of this property allows user to reset the key used for
	// securing communication channel between guest and host.
	KeyIncarnationId pulumi.IntPtrInput `pulumi:"keyIncarnationId"`
	// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
	// ProxyAgent will start to audit or monitor but not enforce access control over
	// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
	// access control. The default value is Enforce mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ProxyAgentSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyAgentSettings)(nil)).Elem()
}

func (i ProxyAgentSettingsArgs) ToProxyAgentSettingsOutput() ProxyAgentSettingsOutput {
	return i.ToProxyAgentSettingsOutputWithContext(context.Background())
}

func (i ProxyAgentSettingsArgs) ToProxyAgentSettingsOutputWithContext(ctx context.Context) ProxyAgentSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyAgentSettingsOutput)
}

func (i ProxyAgentSettingsArgs) ToProxyAgentSettingsPtrOutput() ProxyAgentSettingsPtrOutput {
	return i.ToProxyAgentSettingsPtrOutputWithContext(context.Background())
}

func (i ProxyAgentSettingsArgs) ToProxyAgentSettingsPtrOutputWithContext(ctx context.Context) ProxyAgentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyAgentSettingsOutput).ToProxyAgentSettingsPtrOutputWithContext(ctx)
}

// ProxyAgentSettingsPtrInput is an input type that accepts ProxyAgentSettingsArgs, ProxyAgentSettingsPtr and ProxyAgentSettingsPtrOutput values.
// You can construct a concrete instance of `ProxyAgentSettingsPtrInput` via:
//
//	        ProxyAgentSettingsArgs{...}
//
//	or:
//
//	        nil
type ProxyAgentSettingsPtrInput interface {
	pulumi.Input

	ToProxyAgentSettingsPtrOutput() ProxyAgentSettingsPtrOutput
	ToProxyAgentSettingsPtrOutputWithContext(context.Context) ProxyAgentSettingsPtrOutput
}

type proxyAgentSettingsPtrType ProxyAgentSettingsArgs

func ProxyAgentSettingsPtr(v *ProxyAgentSettingsArgs) ProxyAgentSettingsPtrInput {
	return (*proxyAgentSettingsPtrType)(v)
}

func (*proxyAgentSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyAgentSettings)(nil)).Elem()
}

func (i *proxyAgentSettingsPtrType) ToProxyAgentSettingsPtrOutput() ProxyAgentSettingsPtrOutput {
	return i.ToProxyAgentSettingsPtrOutputWithContext(context.Background())
}

func (i *proxyAgentSettingsPtrType) ToProxyAgentSettingsPtrOutputWithContext(ctx context.Context) ProxyAgentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyAgentSettingsPtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
type ProxyAgentSettingsOutput struct{ *pulumi.OutputState }

func (ProxyAgentSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyAgentSettings)(nil)).Elem()
}

func (o ProxyAgentSettingsOutput) ToProxyAgentSettingsOutput() ProxyAgentSettingsOutput {
	return o
}

func (o ProxyAgentSettingsOutput) ToProxyAgentSettingsOutputWithContext(ctx context.Context) ProxyAgentSettingsOutput {
	return o
}

func (o ProxyAgentSettingsOutput) ToProxyAgentSettingsPtrOutput() ProxyAgentSettingsPtrOutput {
	return o.ToProxyAgentSettingsPtrOutputWithContext(context.Background())
}

func (o ProxyAgentSettingsOutput) ToProxyAgentSettingsPtrOutputWithContext(ctx context.Context) ProxyAgentSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyAgentSettings) *ProxyAgentSettings {
		return &v
	}).(ProxyAgentSettingsPtrOutput)
}

// Specifies whether ProxyAgent feature should be enabled on the virtual machine
// or virtual machine scale set.
func (o ProxyAgentSettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProxyAgentSettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Increase the value of this property allows user to reset the key used for
// securing communication channel between guest and host.
func (o ProxyAgentSettingsOutput) KeyIncarnationId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyAgentSettings) *int { return v.KeyIncarnationId }).(pulumi.IntPtrOutput)
}

// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
// ProxyAgent will start to audit or monitor but not enforce access control over
// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
// access control. The default value is Enforce mode.
func (o ProxyAgentSettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAgentSettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ProxyAgentSettingsPtrOutput struct{ *pulumi.OutputState }

func (ProxyAgentSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyAgentSettings)(nil)).Elem()
}

func (o ProxyAgentSettingsPtrOutput) ToProxyAgentSettingsPtrOutput() ProxyAgentSettingsPtrOutput {
	return o
}

func (o ProxyAgentSettingsPtrOutput) ToProxyAgentSettingsPtrOutputWithContext(ctx context.Context) ProxyAgentSettingsPtrOutput {
	return o
}

func (o ProxyAgentSettingsPtrOutput) Elem() ProxyAgentSettingsOutput {
	return o.ApplyT(func(v *ProxyAgentSettings) ProxyAgentSettings {
		if v != nil {
			return *v
		}
		var ret ProxyAgentSettings
		return ret
	}).(ProxyAgentSettingsOutput)
}

// Specifies whether ProxyAgent feature should be enabled on the virtual machine
// or virtual machine scale set.
func (o ProxyAgentSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProxyAgentSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Increase the value of this property allows user to reset the key used for
// securing communication channel between guest and host.
func (o ProxyAgentSettingsPtrOutput) KeyIncarnationId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyAgentSettings) *int {
		if v == nil {
			return nil
		}
		return v.KeyIncarnationId
	}).(pulumi.IntPtrOutput)
}

// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
// ProxyAgent will start to audit or monitor but not enforce access control over
// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
// access control. The default value is Enforce mode.
func (o ProxyAgentSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyAgentSettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
type ProxyAgentSettingsResponse struct {
	// Specifies whether ProxyAgent feature should be enabled on the virtual machine
	// or virtual machine scale set.
	Enabled *bool `pulumi:"enabled"`
	// Increase the value of this property allows user to reset the key used for
	// securing communication channel between guest and host.
	KeyIncarnationId *int `pulumi:"keyIncarnationId"`
	// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
	// ProxyAgent will start to audit or monitor but not enforce access control over
	// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
	// access control. The default value is Enforce mode.
	Mode *string `pulumi:"mode"`
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
type ProxyAgentSettingsResponseOutput struct{ *pulumi.OutputState }

func (ProxyAgentSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyAgentSettingsResponse)(nil)).Elem()
}

func (o ProxyAgentSettingsResponseOutput) ToProxyAgentSettingsResponseOutput() ProxyAgentSettingsResponseOutput {
	return o
}

func (o ProxyAgentSettingsResponseOutput) ToProxyAgentSettingsResponseOutputWithContext(ctx context.Context) ProxyAgentSettingsResponseOutput {
	return o
}

// Specifies whether ProxyAgent feature should be enabled on the virtual machine
// or virtual machine scale set.
func (o ProxyAgentSettingsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProxyAgentSettingsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Increase the value of this property allows user to reset the key used for
// securing communication channel between guest and host.
func (o ProxyAgentSettingsResponseOutput) KeyIncarnationId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyAgentSettingsResponse) *int { return v.KeyIncarnationId }).(pulumi.IntPtrOutput)
}

// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
// ProxyAgent will start to audit or monitor but not enforce access control over
// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
// access control. The default value is Enforce mode.
func (o ProxyAgentSettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAgentSettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ProxyAgentSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProxyAgentSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyAgentSettingsResponse)(nil)).Elem()
}

func (o ProxyAgentSettingsResponsePtrOutput) ToProxyAgentSettingsResponsePtrOutput() ProxyAgentSettingsResponsePtrOutput {
	return o
}

func (o ProxyAgentSettingsResponsePtrOutput) ToProxyAgentSettingsResponsePtrOutputWithContext(ctx context.Context) ProxyAgentSettingsResponsePtrOutput {
	return o
}

func (o ProxyAgentSettingsResponsePtrOutput) Elem() ProxyAgentSettingsResponseOutput {
	return o.ApplyT(func(v *ProxyAgentSettingsResponse) ProxyAgentSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ProxyAgentSettingsResponse
		return ret
	}).(ProxyAgentSettingsResponseOutput)
}

// Specifies whether ProxyAgent feature should be enabled on the virtual machine
// or virtual machine scale set.
func (o ProxyAgentSettingsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProxyAgentSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Increase the value of this property allows user to reset the key used for
// securing communication channel between guest and host.
func (o ProxyAgentSettingsResponsePtrOutput) KeyIncarnationId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyAgentSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.KeyIncarnationId
	}).(pulumi.IntPtrOutput)
}

// Specifies the mode that ProxyAgent will execute on if the feature is enabled.
// ProxyAgent will start to audit or monitor but not enforce access control over
// requests to host endpoints in Audit mode, while in Enforce mode it will enforce
// access control. The default value is Enforce mode.
func (o ProxyAgentSettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyAgentSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
type PublicIPAddressSku struct {
	// Specify public IP sku name
	Name *string `pulumi:"name"`
	// Specify public IP sku tier
	Tier *string `pulumi:"tier"`
}

// PublicIPAddressSkuInput is an input type that accepts PublicIPAddressSkuArgs and PublicIPAddressSkuOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuInput` via:
//
//	PublicIPAddressSkuArgs{...}
type PublicIPAddressSkuInput interface {
	pulumi.Input

	ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput
	ToPublicIPAddressSkuOutputWithContext(context.Context) PublicIPAddressSkuOutput
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
type PublicIPAddressSkuArgs struct {
	// Specify public IP sku name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify public IP sku tier
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPAddressSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return i.ToPublicIPAddressSkuOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput)
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput).ToPublicIPAddressSkuPtrOutputWithContext(ctx)
}

// PublicIPAddressSkuPtrInput is an input type that accepts PublicIPAddressSkuArgs, PublicIPAddressSkuPtr and PublicIPAddressSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuPtrInput` via:
//
//	        PublicIPAddressSkuArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressSkuPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput
	ToPublicIPAddressSkuPtrOutputWithContext(context.Context) PublicIPAddressSkuPtrOutput
}

type publicIPAddressSkuPtrType PublicIPAddressSkuArgs

func PublicIPAddressSkuPtr(v *PublicIPAddressSkuArgs) PublicIPAddressSkuPtrInput {
	return (*publicIPAddressSkuPtrType)(v)
}

func (*publicIPAddressSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuPtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
type PublicIPAddressSkuOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressSku) *PublicIPAddressSku {
		return &v
	}).(PublicIPAddressSkuPtrOutput)
}

// Specify public IP sku name
func (o PublicIPAddressSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify public IP sku tier
func (o PublicIPAddressSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) Elem() PublicIPAddressSkuOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) PublicIPAddressSku {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSku
		return ret
	}).(PublicIPAddressSkuOutput)
}

// Specify public IP sku name
func (o PublicIPAddressSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify public IP sku tier
func (o PublicIPAddressSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
type PublicIPAddressSkuResponse struct {
	// Specify public IP sku name
	Name *string `pulumi:"name"`
	// Specify public IP sku tier
	Tier *string `pulumi:"tier"`
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

// Specify public IP sku name
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify public IP sku tier
func (o PublicIPAddressSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSkuResponse
		return ret
	}).(PublicIPAddressSkuResponseOutput)
}

// Specify public IP sku name
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify public IP sku tier
func (o PublicIPAddressSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Configuration Options for Regular instances in Compute Fleet.
type RegularPriorityProfile struct {
	// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Total capacity to achieve. It is currently in terms of number of VMs.
	Capacity *int `pulumi:"capacity"`
	// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
	MinCapacity *int `pulumi:"minCapacity"`
}

// RegularPriorityProfileInput is an input type that accepts RegularPriorityProfileArgs and RegularPriorityProfileOutput values.
// You can construct a concrete instance of `RegularPriorityProfileInput` via:
//
//	RegularPriorityProfileArgs{...}
type RegularPriorityProfileInput interface {
	pulumi.Input

	ToRegularPriorityProfileOutput() RegularPriorityProfileOutput
	ToRegularPriorityProfileOutputWithContext(context.Context) RegularPriorityProfileOutput
}

// Configuration Options for Regular instances in Compute Fleet.
type RegularPriorityProfileArgs struct {
	// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Total capacity to achieve. It is currently in terms of number of VMs.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (RegularPriorityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegularPriorityProfile)(nil)).Elem()
}

func (i RegularPriorityProfileArgs) ToRegularPriorityProfileOutput() RegularPriorityProfileOutput {
	return i.ToRegularPriorityProfileOutputWithContext(context.Background())
}

func (i RegularPriorityProfileArgs) ToRegularPriorityProfileOutputWithContext(ctx context.Context) RegularPriorityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegularPriorityProfileOutput)
}

func (i RegularPriorityProfileArgs) ToRegularPriorityProfilePtrOutput() RegularPriorityProfilePtrOutput {
	return i.ToRegularPriorityProfilePtrOutputWithContext(context.Background())
}

func (i RegularPriorityProfileArgs) ToRegularPriorityProfilePtrOutputWithContext(ctx context.Context) RegularPriorityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegularPriorityProfileOutput).ToRegularPriorityProfilePtrOutputWithContext(ctx)
}

// RegularPriorityProfilePtrInput is an input type that accepts RegularPriorityProfileArgs, RegularPriorityProfilePtr and RegularPriorityProfilePtrOutput values.
// You can construct a concrete instance of `RegularPriorityProfilePtrInput` via:
//
//	        RegularPriorityProfileArgs{...}
//
//	or:
//
//	        nil
type RegularPriorityProfilePtrInput interface {
	pulumi.Input

	ToRegularPriorityProfilePtrOutput() RegularPriorityProfilePtrOutput
	ToRegularPriorityProfilePtrOutputWithContext(context.Context) RegularPriorityProfilePtrOutput
}

type regularPriorityProfilePtrType RegularPriorityProfileArgs

func RegularPriorityProfilePtr(v *RegularPriorityProfileArgs) RegularPriorityProfilePtrInput {
	return (*regularPriorityProfilePtrType)(v)
}

func (*regularPriorityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegularPriorityProfile)(nil)).Elem()
}

func (i *regularPriorityProfilePtrType) ToRegularPriorityProfilePtrOutput() RegularPriorityProfilePtrOutput {
	return i.ToRegularPriorityProfilePtrOutputWithContext(context.Background())
}

func (i *regularPriorityProfilePtrType) ToRegularPriorityProfilePtrOutputWithContext(ctx context.Context) RegularPriorityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegularPriorityProfilePtrOutput)
}

// Configuration Options for Regular instances in Compute Fleet.
type RegularPriorityProfileOutput struct{ *pulumi.OutputState }

func (RegularPriorityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegularPriorityProfile)(nil)).Elem()
}

func (o RegularPriorityProfileOutput) ToRegularPriorityProfileOutput() RegularPriorityProfileOutput {
	return o
}

func (o RegularPriorityProfileOutput) ToRegularPriorityProfileOutputWithContext(ctx context.Context) RegularPriorityProfileOutput {
	return o
}

func (o RegularPriorityProfileOutput) ToRegularPriorityProfilePtrOutput() RegularPriorityProfilePtrOutput {
	return o.ToRegularPriorityProfilePtrOutputWithContext(context.Background())
}

func (o RegularPriorityProfileOutput) ToRegularPriorityProfilePtrOutputWithContext(ctx context.Context) RegularPriorityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegularPriorityProfile) *RegularPriorityProfile {
		return &v
	}).(RegularPriorityProfilePtrOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
func (o RegularPriorityProfileOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegularPriorityProfile) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o RegularPriorityProfileOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegularPriorityProfile) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o RegularPriorityProfileOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegularPriorityProfile) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type RegularPriorityProfilePtrOutput struct{ *pulumi.OutputState }

func (RegularPriorityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegularPriorityProfile)(nil)).Elem()
}

func (o RegularPriorityProfilePtrOutput) ToRegularPriorityProfilePtrOutput() RegularPriorityProfilePtrOutput {
	return o
}

func (o RegularPriorityProfilePtrOutput) ToRegularPriorityProfilePtrOutputWithContext(ctx context.Context) RegularPriorityProfilePtrOutput {
	return o
}

func (o RegularPriorityProfilePtrOutput) Elem() RegularPriorityProfileOutput {
	return o.ApplyT(func(v *RegularPriorityProfile) RegularPriorityProfile {
		if v != nil {
			return *v
		}
		var ret RegularPriorityProfile
		return ret
	}).(RegularPriorityProfileOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
func (o RegularPriorityProfilePtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegularPriorityProfile) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o RegularPriorityProfilePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegularPriorityProfile) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o RegularPriorityProfilePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegularPriorityProfile) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Configuration Options for Regular instances in Compute Fleet.
type RegularPriorityProfileResponse struct {
	// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Total capacity to achieve. It is currently in terms of number of VMs.
	Capacity *int `pulumi:"capacity"`
	// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
	MinCapacity *int `pulumi:"minCapacity"`
}

// Configuration Options for Regular instances in Compute Fleet.
type RegularPriorityProfileResponseOutput struct{ *pulumi.OutputState }

func (RegularPriorityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegularPriorityProfileResponse)(nil)).Elem()
}

func (o RegularPriorityProfileResponseOutput) ToRegularPriorityProfileResponseOutput() RegularPriorityProfileResponseOutput {
	return o
}

func (o RegularPriorityProfileResponseOutput) ToRegularPriorityProfileResponseOutputWithContext(ctx context.Context) RegularPriorityProfileResponseOutput {
	return o
}

// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
func (o RegularPriorityProfileResponseOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegularPriorityProfileResponse) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o RegularPriorityProfileResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegularPriorityProfileResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o RegularPriorityProfileResponseOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegularPriorityProfileResponse) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type RegularPriorityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (RegularPriorityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegularPriorityProfileResponse)(nil)).Elem()
}

func (o RegularPriorityProfileResponsePtrOutput) ToRegularPriorityProfileResponsePtrOutput() RegularPriorityProfileResponsePtrOutput {
	return o
}

func (o RegularPriorityProfileResponsePtrOutput) ToRegularPriorityProfileResponsePtrOutputWithContext(ctx context.Context) RegularPriorityProfileResponsePtrOutput {
	return o
}

func (o RegularPriorityProfileResponsePtrOutput) Elem() RegularPriorityProfileResponseOutput {
	return o.ApplyT(func(v *RegularPriorityProfileResponse) RegularPriorityProfileResponse {
		if v != nil {
			return *v
		}
		var ret RegularPriorityProfileResponse
		return ret
	}).(RegularPriorityProfileResponseOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.
func (o RegularPriorityProfileResponsePtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegularPriorityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o RegularPriorityProfileResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegularPriorityProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o RegularPriorityProfileResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegularPriorityProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Specifies Scheduled Event related configurations.
type ScheduledEventsProfile struct {
	// Specifies OS Image Scheduled Event related configurations.
	OsImageNotificationProfile *OSImageNotificationProfile `pulumi:"osImageNotificationProfile"`
	// Specifies Terminate Scheduled Event related configurations.
	TerminateNotificationProfile *TerminateNotificationProfile `pulumi:"terminateNotificationProfile"`
}

// ScheduledEventsProfileInput is an input type that accepts ScheduledEventsProfileArgs and ScheduledEventsProfileOutput values.
// You can construct a concrete instance of `ScheduledEventsProfileInput` via:
//
//	ScheduledEventsProfileArgs{...}
type ScheduledEventsProfileInput interface {
	pulumi.Input

	ToScheduledEventsProfileOutput() ScheduledEventsProfileOutput
	ToScheduledEventsProfileOutputWithContext(context.Context) ScheduledEventsProfileOutput
}

// Specifies Scheduled Event related configurations.
type ScheduledEventsProfileArgs struct {
	// Specifies OS Image Scheduled Event related configurations.
	OsImageNotificationProfile OSImageNotificationProfilePtrInput `pulumi:"osImageNotificationProfile"`
	// Specifies Terminate Scheduled Event related configurations.
	TerminateNotificationProfile TerminateNotificationProfilePtrInput `pulumi:"terminateNotificationProfile"`
}

func (ScheduledEventsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledEventsProfile)(nil)).Elem()
}

func (i ScheduledEventsProfileArgs) ToScheduledEventsProfileOutput() ScheduledEventsProfileOutput {
	return i.ToScheduledEventsProfileOutputWithContext(context.Background())
}

func (i ScheduledEventsProfileArgs) ToScheduledEventsProfileOutputWithContext(ctx context.Context) ScheduledEventsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledEventsProfileOutput)
}

func (i ScheduledEventsProfileArgs) ToScheduledEventsProfilePtrOutput() ScheduledEventsProfilePtrOutput {
	return i.ToScheduledEventsProfilePtrOutputWithContext(context.Background())
}

func (i ScheduledEventsProfileArgs) ToScheduledEventsProfilePtrOutputWithContext(ctx context.Context) ScheduledEventsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledEventsProfileOutput).ToScheduledEventsProfilePtrOutputWithContext(ctx)
}

// ScheduledEventsProfilePtrInput is an input type that accepts ScheduledEventsProfileArgs, ScheduledEventsProfilePtr and ScheduledEventsProfilePtrOutput values.
// You can construct a concrete instance of `ScheduledEventsProfilePtrInput` via:
//
//	        ScheduledEventsProfileArgs{...}
//
//	or:
//
//	        nil
type ScheduledEventsProfilePtrInput interface {
	pulumi.Input

	ToScheduledEventsProfilePtrOutput() ScheduledEventsProfilePtrOutput
	ToScheduledEventsProfilePtrOutputWithContext(context.Context) ScheduledEventsProfilePtrOutput
}

type scheduledEventsProfilePtrType ScheduledEventsProfileArgs

func ScheduledEventsProfilePtr(v *ScheduledEventsProfileArgs) ScheduledEventsProfilePtrInput {
	return (*scheduledEventsProfilePtrType)(v)
}

func (*scheduledEventsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledEventsProfile)(nil)).Elem()
}

func (i *scheduledEventsProfilePtrType) ToScheduledEventsProfilePtrOutput() ScheduledEventsProfilePtrOutput {
	return i.ToScheduledEventsProfilePtrOutputWithContext(context.Background())
}

func (i *scheduledEventsProfilePtrType) ToScheduledEventsProfilePtrOutputWithContext(ctx context.Context) ScheduledEventsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledEventsProfilePtrOutput)
}

// Specifies Scheduled Event related configurations.
type ScheduledEventsProfileOutput struct{ *pulumi.OutputState }

func (ScheduledEventsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledEventsProfile)(nil)).Elem()
}

func (o ScheduledEventsProfileOutput) ToScheduledEventsProfileOutput() ScheduledEventsProfileOutput {
	return o
}

func (o ScheduledEventsProfileOutput) ToScheduledEventsProfileOutputWithContext(ctx context.Context) ScheduledEventsProfileOutput {
	return o
}

func (o ScheduledEventsProfileOutput) ToScheduledEventsProfilePtrOutput() ScheduledEventsProfilePtrOutput {
	return o.ToScheduledEventsProfilePtrOutputWithContext(context.Background())
}

func (o ScheduledEventsProfileOutput) ToScheduledEventsProfilePtrOutputWithContext(ctx context.Context) ScheduledEventsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledEventsProfile) *ScheduledEventsProfile {
		return &v
	}).(ScheduledEventsProfilePtrOutput)
}

// Specifies OS Image Scheduled Event related configurations.
func (o ScheduledEventsProfileOutput) OsImageNotificationProfile() OSImageNotificationProfilePtrOutput {
	return o.ApplyT(func(v ScheduledEventsProfile) *OSImageNotificationProfile { return v.OsImageNotificationProfile }).(OSImageNotificationProfilePtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
func (o ScheduledEventsProfileOutput) TerminateNotificationProfile() TerminateNotificationProfilePtrOutput {
	return o.ApplyT(func(v ScheduledEventsProfile) *TerminateNotificationProfile { return v.TerminateNotificationProfile }).(TerminateNotificationProfilePtrOutput)
}

type ScheduledEventsProfilePtrOutput struct{ *pulumi.OutputState }

func (ScheduledEventsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledEventsProfile)(nil)).Elem()
}

func (o ScheduledEventsProfilePtrOutput) ToScheduledEventsProfilePtrOutput() ScheduledEventsProfilePtrOutput {
	return o
}

func (o ScheduledEventsProfilePtrOutput) ToScheduledEventsProfilePtrOutputWithContext(ctx context.Context) ScheduledEventsProfilePtrOutput {
	return o
}

func (o ScheduledEventsProfilePtrOutput) Elem() ScheduledEventsProfileOutput {
	return o.ApplyT(func(v *ScheduledEventsProfile) ScheduledEventsProfile {
		if v != nil {
			return *v
		}
		var ret ScheduledEventsProfile
		return ret
	}).(ScheduledEventsProfileOutput)
}

// Specifies OS Image Scheduled Event related configurations.
func (o ScheduledEventsProfilePtrOutput) OsImageNotificationProfile() OSImageNotificationProfilePtrOutput {
	return o.ApplyT(func(v *ScheduledEventsProfile) *OSImageNotificationProfile {
		if v == nil {
			return nil
		}
		return v.OsImageNotificationProfile
	}).(OSImageNotificationProfilePtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
func (o ScheduledEventsProfilePtrOutput) TerminateNotificationProfile() TerminateNotificationProfilePtrOutput {
	return o.ApplyT(func(v *ScheduledEventsProfile) *TerminateNotificationProfile {
		if v == nil {
			return nil
		}
		return v.TerminateNotificationProfile
	}).(TerminateNotificationProfilePtrOutput)
}

// Specifies Scheduled Event related configurations.
type ScheduledEventsProfileResponse struct {
	// Specifies OS Image Scheduled Event related configurations.
	OsImageNotificationProfile *OSImageNotificationProfileResponse `pulumi:"osImageNotificationProfile"`
	// Specifies Terminate Scheduled Event related configurations.
	TerminateNotificationProfile *TerminateNotificationProfileResponse `pulumi:"terminateNotificationProfile"`
}

// Specifies Scheduled Event related configurations.
type ScheduledEventsProfileResponseOutput struct{ *pulumi.OutputState }

func (ScheduledEventsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledEventsProfileResponse)(nil)).Elem()
}

func (o ScheduledEventsProfileResponseOutput) ToScheduledEventsProfileResponseOutput() ScheduledEventsProfileResponseOutput {
	return o
}

func (o ScheduledEventsProfileResponseOutput) ToScheduledEventsProfileResponseOutputWithContext(ctx context.Context) ScheduledEventsProfileResponseOutput {
	return o
}

// Specifies OS Image Scheduled Event related configurations.
func (o ScheduledEventsProfileResponseOutput) OsImageNotificationProfile() OSImageNotificationProfileResponsePtrOutput {
	return o.ApplyT(func(v ScheduledEventsProfileResponse) *OSImageNotificationProfileResponse {
		return v.OsImageNotificationProfile
	}).(OSImageNotificationProfileResponsePtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
func (o ScheduledEventsProfileResponseOutput) TerminateNotificationProfile() TerminateNotificationProfileResponsePtrOutput {
	return o.ApplyT(func(v ScheduledEventsProfileResponse) *TerminateNotificationProfileResponse {
		return v.TerminateNotificationProfile
	}).(TerminateNotificationProfileResponsePtrOutput)
}

type ScheduledEventsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduledEventsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledEventsProfileResponse)(nil)).Elem()
}

func (o ScheduledEventsProfileResponsePtrOutput) ToScheduledEventsProfileResponsePtrOutput() ScheduledEventsProfileResponsePtrOutput {
	return o
}

func (o ScheduledEventsProfileResponsePtrOutput) ToScheduledEventsProfileResponsePtrOutputWithContext(ctx context.Context) ScheduledEventsProfileResponsePtrOutput {
	return o
}

func (o ScheduledEventsProfileResponsePtrOutput) Elem() ScheduledEventsProfileResponseOutput {
	return o.ApplyT(func(v *ScheduledEventsProfileResponse) ScheduledEventsProfileResponse {
		if v != nil {
			return *v
		}
		var ret ScheduledEventsProfileResponse
		return ret
	}).(ScheduledEventsProfileResponseOutput)
}

// Specifies OS Image Scheduled Event related configurations.
func (o ScheduledEventsProfileResponsePtrOutput) OsImageNotificationProfile() OSImageNotificationProfileResponsePtrOutput {
	return o.ApplyT(func(v *ScheduledEventsProfileResponse) *OSImageNotificationProfileResponse {
		if v == nil {
			return nil
		}
		return v.OsImageNotificationProfile
	}).(OSImageNotificationProfileResponsePtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
func (o ScheduledEventsProfileResponsePtrOutput) TerminateNotificationProfile() TerminateNotificationProfileResponsePtrOutput {
	return o.ApplyT(func(v *ScheduledEventsProfileResponse) *TerminateNotificationProfileResponse {
		if v == nil {
			return nil
		}
		return v.TerminateNotificationProfile
	}).(TerminateNotificationProfileResponsePtrOutput)
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
type SecurityPostureReference struct {
	// List of virtual machine extension names to exclude when applying the security
	// posture.
	ExcludeExtensions []string `pulumi:"excludeExtensions"`
	// The security posture reference id in the form of
	// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
	Id *string `pulumi:"id"`
	// Whether the security posture can be overridden by the user.
	IsOverridable *bool `pulumi:"isOverridable"`
}

// SecurityPostureReferenceInput is an input type that accepts SecurityPostureReferenceArgs and SecurityPostureReferenceOutput values.
// You can construct a concrete instance of `SecurityPostureReferenceInput` via:
//
//	SecurityPostureReferenceArgs{...}
type SecurityPostureReferenceInput interface {
	pulumi.Input

	ToSecurityPostureReferenceOutput() SecurityPostureReferenceOutput
	ToSecurityPostureReferenceOutputWithContext(context.Context) SecurityPostureReferenceOutput
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
type SecurityPostureReferenceArgs struct {
	// List of virtual machine extension names to exclude when applying the security
	// posture.
	ExcludeExtensions pulumi.StringArrayInput `pulumi:"excludeExtensions"`
	// The security posture reference id in the form of
	// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether the security posture can be overridden by the user.
	IsOverridable pulumi.BoolPtrInput `pulumi:"isOverridable"`
}

func (SecurityPostureReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPostureReference)(nil)).Elem()
}

func (i SecurityPostureReferenceArgs) ToSecurityPostureReferenceOutput() SecurityPostureReferenceOutput {
	return i.ToSecurityPostureReferenceOutputWithContext(context.Background())
}

func (i SecurityPostureReferenceArgs) ToSecurityPostureReferenceOutputWithContext(ctx context.Context) SecurityPostureReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPostureReferenceOutput)
}

func (i SecurityPostureReferenceArgs) ToSecurityPostureReferencePtrOutput() SecurityPostureReferencePtrOutput {
	return i.ToSecurityPostureReferencePtrOutputWithContext(context.Background())
}

func (i SecurityPostureReferenceArgs) ToSecurityPostureReferencePtrOutputWithContext(ctx context.Context) SecurityPostureReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPostureReferenceOutput).ToSecurityPostureReferencePtrOutputWithContext(ctx)
}

// SecurityPostureReferencePtrInput is an input type that accepts SecurityPostureReferenceArgs, SecurityPostureReferencePtr and SecurityPostureReferencePtrOutput values.
// You can construct a concrete instance of `SecurityPostureReferencePtrInput` via:
//
//	        SecurityPostureReferenceArgs{...}
//
//	or:
//
//	        nil
type SecurityPostureReferencePtrInput interface {
	pulumi.Input

	ToSecurityPostureReferencePtrOutput() SecurityPostureReferencePtrOutput
	ToSecurityPostureReferencePtrOutputWithContext(context.Context) SecurityPostureReferencePtrOutput
}

type securityPostureReferencePtrType SecurityPostureReferenceArgs

func SecurityPostureReferencePtr(v *SecurityPostureReferenceArgs) SecurityPostureReferencePtrInput {
	return (*securityPostureReferencePtrType)(v)
}

func (*securityPostureReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPostureReference)(nil)).Elem()
}

func (i *securityPostureReferencePtrType) ToSecurityPostureReferencePtrOutput() SecurityPostureReferencePtrOutput {
	return i.ToSecurityPostureReferencePtrOutputWithContext(context.Background())
}

func (i *securityPostureReferencePtrType) ToSecurityPostureReferencePtrOutputWithContext(ctx context.Context) SecurityPostureReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPostureReferencePtrOutput)
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
type SecurityPostureReferenceOutput struct{ *pulumi.OutputState }

func (SecurityPostureReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPostureReference)(nil)).Elem()
}

func (o SecurityPostureReferenceOutput) ToSecurityPostureReferenceOutput() SecurityPostureReferenceOutput {
	return o
}

func (o SecurityPostureReferenceOutput) ToSecurityPostureReferenceOutputWithContext(ctx context.Context) SecurityPostureReferenceOutput {
	return o
}

func (o SecurityPostureReferenceOutput) ToSecurityPostureReferencePtrOutput() SecurityPostureReferencePtrOutput {
	return o.ToSecurityPostureReferencePtrOutputWithContext(context.Background())
}

func (o SecurityPostureReferenceOutput) ToSecurityPostureReferencePtrOutputWithContext(ctx context.Context) SecurityPostureReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPostureReference) *SecurityPostureReference {
		return &v
	}).(SecurityPostureReferencePtrOutput)
}

// List of virtual machine extension names to exclude when applying the security
// posture.
func (o SecurityPostureReferenceOutput) ExcludeExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPostureReference) []string { return v.ExcludeExtensions }).(pulumi.StringArrayOutput)
}

// The security posture reference id in the form of
// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
func (o SecurityPostureReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPostureReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the security posture can be overridden by the user.
func (o SecurityPostureReferenceOutput) IsOverridable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityPostureReference) *bool { return v.IsOverridable }).(pulumi.BoolPtrOutput)
}

type SecurityPostureReferencePtrOutput struct{ *pulumi.OutputState }

func (SecurityPostureReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPostureReference)(nil)).Elem()
}

func (o SecurityPostureReferencePtrOutput) ToSecurityPostureReferencePtrOutput() SecurityPostureReferencePtrOutput {
	return o
}

func (o SecurityPostureReferencePtrOutput) ToSecurityPostureReferencePtrOutputWithContext(ctx context.Context) SecurityPostureReferencePtrOutput {
	return o
}

func (o SecurityPostureReferencePtrOutput) Elem() SecurityPostureReferenceOutput {
	return o.ApplyT(func(v *SecurityPostureReference) SecurityPostureReference {
		if v != nil {
			return *v
		}
		var ret SecurityPostureReference
		return ret
	}).(SecurityPostureReferenceOutput)
}

// List of virtual machine extension names to exclude when applying the security
// posture.
func (o SecurityPostureReferencePtrOutput) ExcludeExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPostureReference) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeExtensions
	}).(pulumi.StringArrayOutput)
}

// The security posture reference id in the form of
// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
func (o SecurityPostureReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPostureReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Whether the security posture can be overridden by the user.
func (o SecurityPostureReferencePtrOutput) IsOverridable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityPostureReference) *bool {
		if v == nil {
			return nil
		}
		return v.IsOverridable
	}).(pulumi.BoolPtrOutput)
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
type SecurityPostureReferenceResponse struct {
	// List of virtual machine extension names to exclude when applying the security
	// posture.
	ExcludeExtensions []string `pulumi:"excludeExtensions"`
	// The security posture reference id in the form of
	// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
	Id *string `pulumi:"id"`
	// Whether the security posture can be overridden by the user.
	IsOverridable *bool `pulumi:"isOverridable"`
}

// Specifies the security posture to be used for all virtual machines in the scale
// set. Minimum api-version: 2023-03-01
type SecurityPostureReferenceResponseOutput struct{ *pulumi.OutputState }

func (SecurityPostureReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPostureReferenceResponse)(nil)).Elem()
}

func (o SecurityPostureReferenceResponseOutput) ToSecurityPostureReferenceResponseOutput() SecurityPostureReferenceResponseOutput {
	return o
}

func (o SecurityPostureReferenceResponseOutput) ToSecurityPostureReferenceResponseOutputWithContext(ctx context.Context) SecurityPostureReferenceResponseOutput {
	return o
}

// List of virtual machine extension names to exclude when applying the security
// posture.
func (o SecurityPostureReferenceResponseOutput) ExcludeExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPostureReferenceResponse) []string { return v.ExcludeExtensions }).(pulumi.StringArrayOutput)
}

// The security posture reference id in the form of
// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
func (o SecurityPostureReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPostureReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the security posture can be overridden by the user.
func (o SecurityPostureReferenceResponseOutput) IsOverridable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityPostureReferenceResponse) *bool { return v.IsOverridable }).(pulumi.BoolPtrOutput)
}

type SecurityPostureReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (SecurityPostureReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPostureReferenceResponse)(nil)).Elem()
}

func (o SecurityPostureReferenceResponsePtrOutput) ToSecurityPostureReferenceResponsePtrOutput() SecurityPostureReferenceResponsePtrOutput {
	return o
}

func (o SecurityPostureReferenceResponsePtrOutput) ToSecurityPostureReferenceResponsePtrOutputWithContext(ctx context.Context) SecurityPostureReferenceResponsePtrOutput {
	return o
}

func (o SecurityPostureReferenceResponsePtrOutput) Elem() SecurityPostureReferenceResponseOutput {
	return o.ApplyT(func(v *SecurityPostureReferenceResponse) SecurityPostureReferenceResponse {
		if v != nil {
			return *v
		}
		var ret SecurityPostureReferenceResponse
		return ret
	}).(SecurityPostureReferenceResponseOutput)
}

// List of virtual machine extension names to exclude when applying the security
// posture.
func (o SecurityPostureReferenceResponsePtrOutput) ExcludeExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPostureReferenceResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeExtensions
	}).(pulumi.StringArrayOutput)
}

// The security posture reference id in the form of
// /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest
func (o SecurityPostureReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPostureReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Whether the security posture can be overridden by the user.
func (o SecurityPostureReferenceResponsePtrOutput) IsOverridable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityPostureReferenceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsOverridable
	}).(pulumi.BoolPtrOutput)
}

// Specifies the Security profile settings for the virtual machine or virtual
// machine scale set.
type SecurityProfile struct {
	// This property can be used by user in the request to enable or disable the Host
	// Encryption for the virtual machine or virtual machine scale set. This will
	// enable the encryption for all the disks including Resource/Temp disk at host
	// itself. The default behavior is: The Encryption at host will be disabled unless
	// this property is set to true for the resource.
	EncryptionAtHost *bool `pulumi:"encryptionAtHost"`
	// Specifies the Managed Identity used by ADE to get access token for keyvault
	// operations.
	EncryptionIdentity *EncryptionIdentity `pulumi:"encryptionIdentity"`
	// Specifies ProxyAgent settings while creating the virtual machine. Minimum
	// api-version: 2023-09-01.
	ProxyAgentSettings *ProxyAgentSettings `pulumi:"proxyAgentSettings"`
	// Specifies the SecurityType of the virtual machine. It has to be set to any
	// specified value to enable UefiSettings. The default behavior is: UefiSettings
	// will not be enabled unless this property is set.
	SecurityType *string `pulumi:"securityType"`
	// Specifies the security settings like secure boot and vTPM used while creating
	// the virtual machine. Minimum api-version: 2020-12-01.
	UefiSettings *UefiSettings `pulumi:"uefiSettings"`
}

// SecurityProfileInput is an input type that accepts SecurityProfileArgs and SecurityProfileOutput values.
// You can construct a concrete instance of `SecurityProfileInput` via:
//
//	SecurityProfileArgs{...}
type SecurityProfileInput interface {
	pulumi.Input

	ToSecurityProfileOutput() SecurityProfileOutput
	ToSecurityProfileOutputWithContext(context.Context) SecurityProfileOutput
}

// Specifies the Security profile settings for the virtual machine or virtual
// machine scale set.
type SecurityProfileArgs struct {
	// This property can be used by user in the request to enable or disable the Host
	// Encryption for the virtual machine or virtual machine scale set. This will
	// enable the encryption for all the disks including Resource/Temp disk at host
	// itself. The default behavior is: The Encryption at host will be disabled unless
	// this property is set to true for the resource.
	EncryptionAtHost pulumi.BoolPtrInput `pulumi:"encryptionAtHost"`
	// Specifies the Managed Identity used by ADE to get access token for keyvault
	// operations.
	EncryptionIdentity EncryptionIdentityPtrInput `pulumi:"encryptionIdentity"`
	// Specifies ProxyAgent settings while creating the virtual machine. Minimum
	// api-version: 2023-09-01.
	ProxyAgentSettings ProxyAgentSettingsPtrInput `pulumi:"proxyAgentSettings"`
	// Specifies the SecurityType of the virtual machine. It has to be set to any
	// specified value to enable UefiSettings. The default behavior is: UefiSettings
	// will not be enabled unless this property is set.
	SecurityType pulumi.StringPtrInput `pulumi:"securityType"`
	// Specifies the security settings like secure boot and vTPM used while creating
	// the virtual machine. Minimum api-version: 2020-12-01.
	UefiSettings UefiSettingsPtrInput `pulumi:"uefiSettings"`
}

func (SecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfile)(nil)).Elem()
}

func (i SecurityProfileArgs) ToSecurityProfileOutput() SecurityProfileOutput {
	return i.ToSecurityProfileOutputWithContext(context.Background())
}

func (i SecurityProfileArgs) ToSecurityProfileOutputWithContext(ctx context.Context) SecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileOutput)
}

func (i SecurityProfileArgs) ToSecurityProfilePtrOutput() SecurityProfilePtrOutput {
	return i.ToSecurityProfilePtrOutputWithContext(context.Background())
}

func (i SecurityProfileArgs) ToSecurityProfilePtrOutputWithContext(ctx context.Context) SecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileOutput).ToSecurityProfilePtrOutputWithContext(ctx)
}

// SecurityProfilePtrInput is an input type that accepts SecurityProfileArgs, SecurityProfilePtr and SecurityProfilePtrOutput values.
// You can construct a concrete instance of `SecurityProfilePtrInput` via:
//
//	        SecurityProfileArgs{...}
//
//	or:
//
//	        nil
type SecurityProfilePtrInput interface {
	pulumi.Input

	ToSecurityProfilePtrOutput() SecurityProfilePtrOutput
	ToSecurityProfilePtrOutputWithContext(context.Context) SecurityProfilePtrOutput
}

type securityProfilePtrType SecurityProfileArgs

func SecurityProfilePtr(v *SecurityProfileArgs) SecurityProfilePtrInput {
	return (*securityProfilePtrType)(v)
}

func (*securityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfile)(nil)).Elem()
}

func (i *securityProfilePtrType) ToSecurityProfilePtrOutput() SecurityProfilePtrOutput {
	return i.ToSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *securityProfilePtrType) ToSecurityProfilePtrOutputWithContext(ctx context.Context) SecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfilePtrOutput)
}

// Specifies the Security profile settings for the virtual machine or virtual
// machine scale set.
type SecurityProfileOutput struct{ *pulumi.OutputState }

func (SecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfile)(nil)).Elem()
}

func (o SecurityProfileOutput) ToSecurityProfileOutput() SecurityProfileOutput {
	return o
}

func (o SecurityProfileOutput) ToSecurityProfileOutputWithContext(ctx context.Context) SecurityProfileOutput {
	return o
}

func (o SecurityProfileOutput) ToSecurityProfilePtrOutput() SecurityProfilePtrOutput {
	return o.ToSecurityProfilePtrOutputWithContext(context.Background())
}

func (o SecurityProfileOutput) ToSecurityProfilePtrOutputWithContext(ctx context.Context) SecurityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfile) *SecurityProfile {
		return &v
	}).(SecurityProfilePtrOutput)
}

// This property can be used by user in the request to enable or disable the Host
// Encryption for the virtual machine or virtual machine scale set. This will
// enable the encryption for all the disks including Resource/Temp disk at host
// itself. The default behavior is: The Encryption at host will be disabled unless
// this property is set to true for the resource.
func (o SecurityProfileOutput) EncryptionAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityProfile) *bool { return v.EncryptionAtHost }).(pulumi.BoolPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
func (o SecurityProfileOutput) EncryptionIdentity() EncryptionIdentityPtrOutput {
	return o.ApplyT(func(v SecurityProfile) *EncryptionIdentity { return v.EncryptionIdentity }).(EncryptionIdentityPtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
func (o SecurityProfileOutput) ProxyAgentSettings() ProxyAgentSettingsPtrOutput {
	return o.ApplyT(func(v SecurityProfile) *ProxyAgentSettings { return v.ProxyAgentSettings }).(ProxyAgentSettingsPtrOutput)
}

// Specifies the SecurityType of the virtual machine. It has to be set to any
// specified value to enable UefiSettings. The default behavior is: UefiSettings
// will not be enabled unless this property is set.
func (o SecurityProfileOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityProfile) *string { return v.SecurityType }).(pulumi.StringPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
func (o SecurityProfileOutput) UefiSettings() UefiSettingsPtrOutput {
	return o.ApplyT(func(v SecurityProfile) *UefiSettings { return v.UefiSettings }).(UefiSettingsPtrOutput)
}

type SecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (SecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfile)(nil)).Elem()
}

func (o SecurityProfilePtrOutput) ToSecurityProfilePtrOutput() SecurityProfilePtrOutput {
	return o
}

func (o SecurityProfilePtrOutput) ToSecurityProfilePtrOutputWithContext(ctx context.Context) SecurityProfilePtrOutput {
	return o
}

func (o SecurityProfilePtrOutput) Elem() SecurityProfileOutput {
	return o.ApplyT(func(v *SecurityProfile) SecurityProfile {
		if v != nil {
			return *v
		}
		var ret SecurityProfile
		return ret
	}).(SecurityProfileOutput)
}

// This property can be used by user in the request to enable or disable the Host
// Encryption for the virtual machine or virtual machine scale set. This will
// enable the encryption for all the disks including Resource/Temp disk at host
// itself. The default behavior is: The Encryption at host will be disabled unless
// this property is set to true for the resource.
func (o SecurityProfilePtrOutput) EncryptionAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionAtHost
	}).(pulumi.BoolPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
func (o SecurityProfilePtrOutput) EncryptionIdentity() EncryptionIdentityPtrOutput {
	return o.ApplyT(func(v *SecurityProfile) *EncryptionIdentity {
		if v == nil {
			return nil
		}
		return v.EncryptionIdentity
	}).(EncryptionIdentityPtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
func (o SecurityProfilePtrOutput) ProxyAgentSettings() ProxyAgentSettingsPtrOutput {
	return o.ApplyT(func(v *SecurityProfile) *ProxyAgentSettings {
		if v == nil {
			return nil
		}
		return v.ProxyAgentSettings
	}).(ProxyAgentSettingsPtrOutput)
}

// Specifies the SecurityType of the virtual machine. It has to be set to any
// specified value to enable UefiSettings. The default behavior is: UefiSettings
// will not be enabled unless this property is set.
func (o SecurityProfilePtrOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SecurityType
	}).(pulumi.StringPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
func (o SecurityProfilePtrOutput) UefiSettings() UefiSettingsPtrOutput {
	return o.ApplyT(func(v *SecurityProfile) *UefiSettings {
		if v == nil {
			return nil
		}
		return v.UefiSettings
	}).(UefiSettingsPtrOutput)
}

// Specifies the Security profile settings for the virtual machine or virtual
// machine scale set.
type SecurityProfileResponse struct {
	// This property can be used by user in the request to enable or disable the Host
	// Encryption for the virtual machine or virtual machine scale set. This will
	// enable the encryption for all the disks including Resource/Temp disk at host
	// itself. The default behavior is: The Encryption at host will be disabled unless
	// this property is set to true for the resource.
	EncryptionAtHost *bool `pulumi:"encryptionAtHost"`
	// Specifies the Managed Identity used by ADE to get access token for keyvault
	// operations.
	EncryptionIdentity *EncryptionIdentityResponse `pulumi:"encryptionIdentity"`
	// Specifies ProxyAgent settings while creating the virtual machine. Minimum
	// api-version: 2023-09-01.
	ProxyAgentSettings *ProxyAgentSettingsResponse `pulumi:"proxyAgentSettings"`
	// Specifies the SecurityType of the virtual machine. It has to be set to any
	// specified value to enable UefiSettings. The default behavior is: UefiSettings
	// will not be enabled unless this property is set.
	SecurityType *string `pulumi:"securityType"`
	// Specifies the security settings like secure boot and vTPM used while creating
	// the virtual machine. Minimum api-version: 2020-12-01.
	UefiSettings *UefiSettingsResponse `pulumi:"uefiSettings"`
}

// Specifies the Security profile settings for the virtual machine or virtual
// machine scale set.
type SecurityProfileResponseOutput struct{ *pulumi.OutputState }

func (SecurityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileResponse)(nil)).Elem()
}

func (o SecurityProfileResponseOutput) ToSecurityProfileResponseOutput() SecurityProfileResponseOutput {
	return o
}

func (o SecurityProfileResponseOutput) ToSecurityProfileResponseOutputWithContext(ctx context.Context) SecurityProfileResponseOutput {
	return o
}

// This property can be used by user in the request to enable or disable the Host
// Encryption for the virtual machine or virtual machine scale set. This will
// enable the encryption for all the disks including Resource/Temp disk at host
// itself. The default behavior is: The Encryption at host will be disabled unless
// this property is set to true for the resource.
func (o SecurityProfileResponseOutput) EncryptionAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityProfileResponse) *bool { return v.EncryptionAtHost }).(pulumi.BoolPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
func (o SecurityProfileResponseOutput) EncryptionIdentity() EncryptionIdentityResponsePtrOutput {
	return o.ApplyT(func(v SecurityProfileResponse) *EncryptionIdentityResponse { return v.EncryptionIdentity }).(EncryptionIdentityResponsePtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
func (o SecurityProfileResponseOutput) ProxyAgentSettings() ProxyAgentSettingsResponsePtrOutput {
	return o.ApplyT(func(v SecurityProfileResponse) *ProxyAgentSettingsResponse { return v.ProxyAgentSettings }).(ProxyAgentSettingsResponsePtrOutput)
}

// Specifies the SecurityType of the virtual machine. It has to be set to any
// specified value to enable UefiSettings. The default behavior is: UefiSettings
// will not be enabled unless this property is set.
func (o SecurityProfileResponseOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityProfileResponse) *string { return v.SecurityType }).(pulumi.StringPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
func (o SecurityProfileResponseOutput) UefiSettings() UefiSettingsResponsePtrOutput {
	return o.ApplyT(func(v SecurityProfileResponse) *UefiSettingsResponse { return v.UefiSettings }).(UefiSettingsResponsePtrOutput)
}

type SecurityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileResponse)(nil)).Elem()
}

func (o SecurityProfileResponsePtrOutput) ToSecurityProfileResponsePtrOutput() SecurityProfileResponsePtrOutput {
	return o
}

func (o SecurityProfileResponsePtrOutput) ToSecurityProfileResponsePtrOutputWithContext(ctx context.Context) SecurityProfileResponsePtrOutput {
	return o
}

func (o SecurityProfileResponsePtrOutput) Elem() SecurityProfileResponseOutput {
	return o.ApplyT(func(v *SecurityProfileResponse) SecurityProfileResponse {
		if v != nil {
			return *v
		}
		var ret SecurityProfileResponse
		return ret
	}).(SecurityProfileResponseOutput)
}

// This property can be used by user in the request to enable or disable the Host
// Encryption for the virtual machine or virtual machine scale set. This will
// enable the encryption for all the disks including Resource/Temp disk at host
// itself. The default behavior is: The Encryption at host will be disabled unless
// this property is set to true for the resource.
func (o SecurityProfileResponsePtrOutput) EncryptionAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionAtHost
	}).(pulumi.BoolPtrOutput)
}

// Specifies the Managed Identity used by ADE to get access token for keyvault
// operations.
func (o SecurityProfileResponsePtrOutput) EncryptionIdentity() EncryptionIdentityResponsePtrOutput {
	return o.ApplyT(func(v *SecurityProfileResponse) *EncryptionIdentityResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionIdentity
	}).(EncryptionIdentityResponsePtrOutput)
}

// Specifies ProxyAgent settings while creating the virtual machine. Minimum
// api-version: 2023-09-01.
func (o SecurityProfileResponsePtrOutput) ProxyAgentSettings() ProxyAgentSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SecurityProfileResponse) *ProxyAgentSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ProxyAgentSettings
	}).(ProxyAgentSettingsResponsePtrOutput)
}

// Specifies the SecurityType of the virtual machine. It has to be set to any
// specified value to enable UefiSettings. The default behavior is: UefiSettings
// will not be enabled unless this property is set.
func (o SecurityProfileResponsePtrOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecurityType
	}).(pulumi.StringPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
func (o SecurityProfileResponsePtrOutput) UefiSettings() UefiSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SecurityProfileResponse) *UefiSettingsResponse {
		if v == nil {
			return nil
		}
		return v.UefiSettings
	}).(UefiSettingsResponsePtrOutput)
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
type ServiceArtifactReference struct {
	// The service artifact reference id in the form of
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
	Id *string `pulumi:"id"`
}

// ServiceArtifactReferenceInput is an input type that accepts ServiceArtifactReferenceArgs and ServiceArtifactReferenceOutput values.
// You can construct a concrete instance of `ServiceArtifactReferenceInput` via:
//
//	ServiceArtifactReferenceArgs{...}
type ServiceArtifactReferenceInput interface {
	pulumi.Input

	ToServiceArtifactReferenceOutput() ServiceArtifactReferenceOutput
	ToServiceArtifactReferenceOutputWithContext(context.Context) ServiceArtifactReferenceOutput
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
type ServiceArtifactReferenceArgs struct {
	// The service artifact reference id in the form of
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ServiceArtifactReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceArtifactReference)(nil)).Elem()
}

func (i ServiceArtifactReferenceArgs) ToServiceArtifactReferenceOutput() ServiceArtifactReferenceOutput {
	return i.ToServiceArtifactReferenceOutputWithContext(context.Background())
}

func (i ServiceArtifactReferenceArgs) ToServiceArtifactReferenceOutputWithContext(ctx context.Context) ServiceArtifactReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceArtifactReferenceOutput)
}

func (i ServiceArtifactReferenceArgs) ToServiceArtifactReferencePtrOutput() ServiceArtifactReferencePtrOutput {
	return i.ToServiceArtifactReferencePtrOutputWithContext(context.Background())
}

func (i ServiceArtifactReferenceArgs) ToServiceArtifactReferencePtrOutputWithContext(ctx context.Context) ServiceArtifactReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceArtifactReferenceOutput).ToServiceArtifactReferencePtrOutputWithContext(ctx)
}

// ServiceArtifactReferencePtrInput is an input type that accepts ServiceArtifactReferenceArgs, ServiceArtifactReferencePtr and ServiceArtifactReferencePtrOutput values.
// You can construct a concrete instance of `ServiceArtifactReferencePtrInput` via:
//
//	        ServiceArtifactReferenceArgs{...}
//
//	or:
//
//	        nil
type ServiceArtifactReferencePtrInput interface {
	pulumi.Input

	ToServiceArtifactReferencePtrOutput() ServiceArtifactReferencePtrOutput
	ToServiceArtifactReferencePtrOutputWithContext(context.Context) ServiceArtifactReferencePtrOutput
}

type serviceArtifactReferencePtrType ServiceArtifactReferenceArgs

func ServiceArtifactReferencePtr(v *ServiceArtifactReferenceArgs) ServiceArtifactReferencePtrInput {
	return (*serviceArtifactReferencePtrType)(v)
}

func (*serviceArtifactReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceArtifactReference)(nil)).Elem()
}

func (i *serviceArtifactReferencePtrType) ToServiceArtifactReferencePtrOutput() ServiceArtifactReferencePtrOutput {
	return i.ToServiceArtifactReferencePtrOutputWithContext(context.Background())
}

func (i *serviceArtifactReferencePtrType) ToServiceArtifactReferencePtrOutputWithContext(ctx context.Context) ServiceArtifactReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceArtifactReferencePtrOutput)
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
type ServiceArtifactReferenceOutput struct{ *pulumi.OutputState }

func (ServiceArtifactReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceArtifactReference)(nil)).Elem()
}

func (o ServiceArtifactReferenceOutput) ToServiceArtifactReferenceOutput() ServiceArtifactReferenceOutput {
	return o
}

func (o ServiceArtifactReferenceOutput) ToServiceArtifactReferenceOutputWithContext(ctx context.Context) ServiceArtifactReferenceOutput {
	return o
}

func (o ServiceArtifactReferenceOutput) ToServiceArtifactReferencePtrOutput() ServiceArtifactReferencePtrOutput {
	return o.ToServiceArtifactReferencePtrOutputWithContext(context.Background())
}

func (o ServiceArtifactReferenceOutput) ToServiceArtifactReferencePtrOutputWithContext(ctx context.Context) ServiceArtifactReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceArtifactReference) *ServiceArtifactReference {
		return &v
	}).(ServiceArtifactReferencePtrOutput)
}

// The service artifact reference id in the form of
// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
func (o ServiceArtifactReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceArtifactReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ServiceArtifactReferencePtrOutput struct{ *pulumi.OutputState }

func (ServiceArtifactReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceArtifactReference)(nil)).Elem()
}

func (o ServiceArtifactReferencePtrOutput) ToServiceArtifactReferencePtrOutput() ServiceArtifactReferencePtrOutput {
	return o
}

func (o ServiceArtifactReferencePtrOutput) ToServiceArtifactReferencePtrOutputWithContext(ctx context.Context) ServiceArtifactReferencePtrOutput {
	return o
}

func (o ServiceArtifactReferencePtrOutput) Elem() ServiceArtifactReferenceOutput {
	return o.ApplyT(func(v *ServiceArtifactReference) ServiceArtifactReference {
		if v != nil {
			return *v
		}
		var ret ServiceArtifactReference
		return ret
	}).(ServiceArtifactReferenceOutput)
}

// The service artifact reference id in the form of
// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
func (o ServiceArtifactReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceArtifactReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
type ServiceArtifactReferenceResponse struct {
	// The service artifact reference id in the form of
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
	Id *string `pulumi:"id"`
}

// Specifies the service artifact reference id used to set same image version for
// all virtual machines in the scale set when using 'latest' image version.
// Minimum api-version: 2022-11-01
type ServiceArtifactReferenceResponseOutput struct{ *pulumi.OutputState }

func (ServiceArtifactReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceArtifactReferenceResponse)(nil)).Elem()
}

func (o ServiceArtifactReferenceResponseOutput) ToServiceArtifactReferenceResponseOutput() ServiceArtifactReferenceResponseOutput {
	return o
}

func (o ServiceArtifactReferenceResponseOutput) ToServiceArtifactReferenceResponseOutputWithContext(ctx context.Context) ServiceArtifactReferenceResponseOutput {
	return o
}

// The service artifact reference id in the form of
// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
func (o ServiceArtifactReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceArtifactReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ServiceArtifactReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceArtifactReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceArtifactReferenceResponse)(nil)).Elem()
}

func (o ServiceArtifactReferenceResponsePtrOutput) ToServiceArtifactReferenceResponsePtrOutput() ServiceArtifactReferenceResponsePtrOutput {
	return o
}

func (o ServiceArtifactReferenceResponsePtrOutput) ToServiceArtifactReferenceResponsePtrOutputWithContext(ctx context.Context) ServiceArtifactReferenceResponsePtrOutput {
	return o
}

func (o ServiceArtifactReferenceResponsePtrOutput) Elem() ServiceArtifactReferenceResponseOutput {
	return o.ApplyT(func(v *ServiceArtifactReferenceResponse) ServiceArtifactReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ServiceArtifactReferenceResponse
		return ret
	}).(ServiceArtifactReferenceResponseOutput)
}

// The service artifact reference id in the form of
// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
func (o ServiceArtifactReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceArtifactReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Configuration Options for Spot instances in Compute Fleet.
type SpotPriorityProfile struct {
	// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Total capacity to achieve. It is currently in terms of number of VMs.
	Capacity *int `pulumi:"capacity"`
	// Eviction Policy to follow when evicting Spot VMs.
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// Price per hour of each Spot VM will never exceed this.
	MaxPricePerVM *float64 `pulumi:"maxPricePerVM"`
	// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
	MinCapacity *int `pulumi:"minCapacity"`
}

// SpotPriorityProfileInput is an input type that accepts SpotPriorityProfileArgs and SpotPriorityProfileOutput values.
// You can construct a concrete instance of `SpotPriorityProfileInput` via:
//
//	SpotPriorityProfileArgs{...}
type SpotPriorityProfileInput interface {
	pulumi.Input

	ToSpotPriorityProfileOutput() SpotPriorityProfileOutput
	ToSpotPriorityProfileOutputWithContext(context.Context) SpotPriorityProfileOutput
}

// Configuration Options for Spot instances in Compute Fleet.
type SpotPriorityProfileArgs struct {
	// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Total capacity to achieve. It is currently in terms of number of VMs.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Eviction Policy to follow when evicting Spot VMs.
	EvictionPolicy pulumi.StringPtrInput `pulumi:"evictionPolicy"`
	// Price per hour of each Spot VM will never exceed this.
	MaxPricePerVM pulumi.Float64PtrInput `pulumi:"maxPricePerVM"`
	// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (SpotPriorityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotPriorityProfile)(nil)).Elem()
}

func (i SpotPriorityProfileArgs) ToSpotPriorityProfileOutput() SpotPriorityProfileOutput {
	return i.ToSpotPriorityProfileOutputWithContext(context.Background())
}

func (i SpotPriorityProfileArgs) ToSpotPriorityProfileOutputWithContext(ctx context.Context) SpotPriorityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotPriorityProfileOutput)
}

func (i SpotPriorityProfileArgs) ToSpotPriorityProfilePtrOutput() SpotPriorityProfilePtrOutput {
	return i.ToSpotPriorityProfilePtrOutputWithContext(context.Background())
}

func (i SpotPriorityProfileArgs) ToSpotPriorityProfilePtrOutputWithContext(ctx context.Context) SpotPriorityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotPriorityProfileOutput).ToSpotPriorityProfilePtrOutputWithContext(ctx)
}

// SpotPriorityProfilePtrInput is an input type that accepts SpotPriorityProfileArgs, SpotPriorityProfilePtr and SpotPriorityProfilePtrOutput values.
// You can construct a concrete instance of `SpotPriorityProfilePtrInput` via:
//
//	        SpotPriorityProfileArgs{...}
//
//	or:
//
//	        nil
type SpotPriorityProfilePtrInput interface {
	pulumi.Input

	ToSpotPriorityProfilePtrOutput() SpotPriorityProfilePtrOutput
	ToSpotPriorityProfilePtrOutputWithContext(context.Context) SpotPriorityProfilePtrOutput
}

type spotPriorityProfilePtrType SpotPriorityProfileArgs

func SpotPriorityProfilePtr(v *SpotPriorityProfileArgs) SpotPriorityProfilePtrInput {
	return (*spotPriorityProfilePtrType)(v)
}

func (*spotPriorityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotPriorityProfile)(nil)).Elem()
}

func (i *spotPriorityProfilePtrType) ToSpotPriorityProfilePtrOutput() SpotPriorityProfilePtrOutput {
	return i.ToSpotPriorityProfilePtrOutputWithContext(context.Background())
}

func (i *spotPriorityProfilePtrType) ToSpotPriorityProfilePtrOutputWithContext(ctx context.Context) SpotPriorityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotPriorityProfilePtrOutput)
}

// Configuration Options for Spot instances in Compute Fleet.
type SpotPriorityProfileOutput struct{ *pulumi.OutputState }

func (SpotPriorityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotPriorityProfile)(nil)).Elem()
}

func (o SpotPriorityProfileOutput) ToSpotPriorityProfileOutput() SpotPriorityProfileOutput {
	return o
}

func (o SpotPriorityProfileOutput) ToSpotPriorityProfileOutputWithContext(ctx context.Context) SpotPriorityProfileOutput {
	return o
}

func (o SpotPriorityProfileOutput) ToSpotPriorityProfilePtrOutput() SpotPriorityProfilePtrOutput {
	return o.ToSpotPriorityProfilePtrOutputWithContext(context.Background())
}

func (o SpotPriorityProfileOutput) ToSpotPriorityProfilePtrOutputWithContext(ctx context.Context) SpotPriorityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpotPriorityProfile) *SpotPriorityProfile {
		return &v
	}).(SpotPriorityProfilePtrOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
func (o SpotPriorityProfileOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfile) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o SpotPriorityProfileOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfile) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Eviction Policy to follow when evicting Spot VMs.
func (o SpotPriorityProfileOutput) EvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfile) *string { return v.EvictionPolicy }).(pulumi.StringPtrOutput)
}

// Price per hour of each Spot VM will never exceed this.
func (o SpotPriorityProfileOutput) MaxPricePerVM() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SpotPriorityProfile) *float64 { return v.MaxPricePerVM }).(pulumi.Float64PtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o SpotPriorityProfileOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfile) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type SpotPriorityProfilePtrOutput struct{ *pulumi.OutputState }

func (SpotPriorityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotPriorityProfile)(nil)).Elem()
}

func (o SpotPriorityProfilePtrOutput) ToSpotPriorityProfilePtrOutput() SpotPriorityProfilePtrOutput {
	return o
}

func (o SpotPriorityProfilePtrOutput) ToSpotPriorityProfilePtrOutputWithContext(ctx context.Context) SpotPriorityProfilePtrOutput {
	return o
}

func (o SpotPriorityProfilePtrOutput) Elem() SpotPriorityProfileOutput {
	return o.ApplyT(func(v *SpotPriorityProfile) SpotPriorityProfile {
		if v != nil {
			return *v
		}
		var ret SpotPriorityProfile
		return ret
	}).(SpotPriorityProfileOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
func (o SpotPriorityProfilePtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfile) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o SpotPriorityProfilePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfile) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Eviction Policy to follow when evicting Spot VMs.
func (o SpotPriorityProfilePtrOutput) EvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfile) *string {
		if v == nil {
			return nil
		}
		return v.EvictionPolicy
	}).(pulumi.StringPtrOutput)
}

// Price per hour of each Spot VM will never exceed this.
func (o SpotPriorityProfilePtrOutput) MaxPricePerVM() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfile) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPricePerVM
	}).(pulumi.Float64PtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o SpotPriorityProfilePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfile) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Configuration Options for Spot instances in Compute Fleet.
type SpotPriorityProfileResponse struct {
	// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Total capacity to achieve. It is currently in terms of number of VMs.
	Capacity *int `pulumi:"capacity"`
	// Eviction Policy to follow when evicting Spot VMs.
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// Price per hour of each Spot VM will never exceed this.
	MaxPricePerVM *float64 `pulumi:"maxPricePerVM"`
	// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
	MinCapacity *int `pulumi:"minCapacity"`
}

// Configuration Options for Spot instances in Compute Fleet.
type SpotPriorityProfileResponseOutput struct{ *pulumi.OutputState }

func (SpotPriorityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotPriorityProfileResponse)(nil)).Elem()
}

func (o SpotPriorityProfileResponseOutput) ToSpotPriorityProfileResponseOutput() SpotPriorityProfileResponseOutput {
	return o
}

func (o SpotPriorityProfileResponseOutput) ToSpotPriorityProfileResponseOutputWithContext(ctx context.Context) SpotPriorityProfileResponseOutput {
	return o
}

// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
func (o SpotPriorityProfileResponseOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfileResponse) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o SpotPriorityProfileResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfileResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Eviction Policy to follow when evicting Spot VMs.
func (o SpotPriorityProfileResponseOutput) EvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfileResponse) *string { return v.EvictionPolicy }).(pulumi.StringPtrOutput)
}

// Price per hour of each Spot VM will never exceed this.
func (o SpotPriorityProfileResponseOutput) MaxPricePerVM() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SpotPriorityProfileResponse) *float64 { return v.MaxPricePerVM }).(pulumi.Float64PtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o SpotPriorityProfileResponseOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotPriorityProfileResponse) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type SpotPriorityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (SpotPriorityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotPriorityProfileResponse)(nil)).Elem()
}

func (o SpotPriorityProfileResponsePtrOutput) ToSpotPriorityProfileResponsePtrOutput() SpotPriorityProfileResponsePtrOutput {
	return o
}

func (o SpotPriorityProfileResponsePtrOutput) ToSpotPriorityProfileResponsePtrOutputWithContext(ctx context.Context) SpotPriorityProfileResponsePtrOutput {
	return o
}

func (o SpotPriorityProfileResponsePtrOutput) Elem() SpotPriorityProfileResponseOutput {
	return o.ApplyT(func(v *SpotPriorityProfileResponse) SpotPriorityProfileResponse {
		if v != nil {
			return *v
		}
		var ret SpotPriorityProfileResponse
		return ret
	}).(SpotPriorityProfileResponseOutput)
}

// Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.
func (o SpotPriorityProfileResponsePtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

// Total capacity to achieve. It is currently in terms of number of VMs.
func (o SpotPriorityProfileResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Eviction Policy to follow when evicting Spot VMs.
func (o SpotPriorityProfileResponsePtrOutput) EvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.EvictionPolicy
	}).(pulumi.StringPtrOutput)
}

// Price per hour of each Spot VM will never exceed this.
func (o SpotPriorityProfileResponsePtrOutput) MaxPricePerVM() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfileResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPricePerVM
	}).(pulumi.Float64PtrOutput)
}

// Minimum capacity to achieve which cannot be updated. If we will not be able to "guarantee" minimum capacity, we will reject the request in the sync path itself.
func (o SpotPriorityProfileResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotPriorityProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfiguration struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKey `pulumi:"publicKeys"`
}

// SshConfigurationInput is an input type that accepts SshConfigurationArgs and SshConfigurationOutput values.
// You can construct a concrete instance of `SshConfigurationInput` via:
//
//	SshConfigurationArgs{...}
type SshConfigurationInput interface {
	pulumi.Input

	ToSshConfigurationOutput() SshConfigurationOutput
	ToSshConfigurationOutputWithContext(context.Context) SshConfigurationOutput
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationArgs struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys SshPublicKeyArrayInput `pulumi:"publicKeys"`
}

func (SshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (i SshConfigurationArgs) ToSshConfigurationOutput() SshConfigurationOutput {
	return i.ToSshConfigurationOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput)
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput).ToSshConfigurationPtrOutputWithContext(ctx)
}

// SshConfigurationPtrInput is an input type that accepts SshConfigurationArgs, SshConfigurationPtr and SshConfigurationPtrOutput values.
// You can construct a concrete instance of `SshConfigurationPtrInput` via:
//
//	        SshConfigurationArgs{...}
//
//	or:
//
//	        nil
type SshConfigurationPtrInput interface {
	pulumi.Input

	ToSshConfigurationPtrOutput() SshConfigurationPtrOutput
	ToSshConfigurationPtrOutputWithContext(context.Context) SshConfigurationPtrOutput
}

type sshConfigurationPtrType SshConfigurationArgs

func SshConfigurationPtr(v *SshConfigurationArgs) SshConfigurationPtrInput {
	return (*sshConfigurationPtrType)(v)
}

func (*sshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationPtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationOutput struct{ *pulumi.OutputState }

func (SshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationOutput) ToSshConfigurationOutput() SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SshConfiguration) *SshConfiguration {
		return &v
	}).(SshConfigurationPtrOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationOutput) PublicKeys() SshPublicKeyArrayOutput {
	return o.ApplyT(func(v SshConfiguration) []SshPublicKey { return v.PublicKeys }).(SshPublicKeyArrayOutput)
}

type SshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) Elem() SshConfigurationOutput {
	return o.ApplyT(func(v *SshConfiguration) SshConfiguration {
		if v != nil {
			return *v
		}
		var ret SshConfiguration
		return ret
	}).(SshConfigurationOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationPtrOutput) PublicKeys() SshPublicKeyArrayOutput {
	return o.ApplyT(func(v *SshConfiguration) []SshPublicKey {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyArrayOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponse struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKeyResponse `pulumi:"publicKeys"`
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutput() SshConfigurationResponseOutput {
	return o
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutputWithContext(ctx context.Context) SshConfigurationResponseOutput {
	return o
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationResponseOutput) PublicKeys() SshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v SshConfigurationResponse) []SshPublicKeyResponse { return v.PublicKeys }).(SshPublicKeyResponseArrayOutput)
}

type SshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) Elem() SshConfigurationResponseOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) SshConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret SshConfigurationResponse
		return ret
	}).(SshConfigurationResponseOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationResponsePtrOutput) PublicKeys() SshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) []SshPublicKeyResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux
// VM where the public key is placed.
type SshPublicKey struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The
	// key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,
	// see [Create SSH keys on Linux and Mac for Linux VMs in
	// Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If
	// the file already exists, the specified key is appended to the file. Example:
	// /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// SshPublicKeyInput is an input type that accepts SshPublicKeyArgs and SshPublicKeyOutput values.
// You can construct a concrete instance of `SshPublicKeyInput` via:
//
//	SshPublicKeyArgs{...}
type SshPublicKeyInput interface {
	pulumi.Input

	ToSshPublicKeyOutput() SshPublicKeyOutput
	ToSshPublicKeyOutputWithContext(context.Context) SshPublicKeyOutput
}

// Contains information about SSH certificate public key and the path on the Linux
// VM where the public key is placed.
type SshPublicKeyArgs struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The
	// key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,
	// see [Create SSH keys on Linux and Mac for Linux VMs in
	// Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If
	// the file already exists, the specified key is appended to the file. Example:
	// /home/user/.ssh/authorized_keys
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return i.ToSshPublicKeyOutputWithContext(context.Background())
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyOutput)
}

// SshPublicKeyArrayInput is an input type that accepts SshPublicKeyArray and SshPublicKeyArrayOutput values.
// You can construct a concrete instance of `SshPublicKeyArrayInput` via:
//
//	SshPublicKeyArray{ SshPublicKeyArgs{...} }
type SshPublicKeyArrayInput interface {
	pulumi.Input

	ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput
	ToSshPublicKeyArrayOutputWithContext(context.Context) SshPublicKeyArrayOutput
}

type SshPublicKeyArray []SshPublicKeyInput

func (SshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return i.ToSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux
// VM where the public key is placed.
type SshPublicKeyOutput struct{ *pulumi.OutputState }

func (SshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return o
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The
// key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,
// see [Create SSH keys on Linux and Mac for Linux VMs in
// Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
func (o SshPublicKeyOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If
// the file already exists, the specified key is appended to the file. Example:
// /home/user/.ssh/authorized_keys
func (o SshPublicKeyOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) Index(i pulumi.IntInput) SshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKey {
		return vs[0].([]SshPublicKey)[vs[1].(int)]
	}).(SshPublicKeyOutput)
}

// Contains information about SSH certificate public key and the path on the Linux
// VM where the public key is placed.
type SshPublicKeyResponse struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The
	// key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,
	// see [Create SSH keys on Linux and Mac for Linux VMs in
	// Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If
	// the file already exists, the specified key is appended to the file. Example:
	// /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// Contains information about SSH certificate public key and the path on the Linux
// VM where the public key is placed.
type SshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutput() SshPublicKeyResponseOutput {
	return o
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutputWithContext(ctx context.Context) SshPublicKeyResponseOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The
// key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,
// see [Create SSH keys on Linux and Mac for Linux VMs in
// Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
func (o SshPublicKeyResponseOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If
// the file already exists, the specified key is appended to the file. Example:
// /home/user/.ssh/authorized_keys
func (o SshPublicKeyResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutput() SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) SshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKeyResponse {
		return vs[0].([]SshPublicKeyResponse)[vs[1].(int)]
	}).(SshPublicKeyResponseOutput)
}

// Describes SubResource
type SubResource struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Describes SubResource
type SubResourceArgs struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//	SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Describes SubResource
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Describes SubResource
type SubResourceResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// Describes SubResource
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource Id
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource Id
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
type TerminateNotificationProfile struct {
	// Specifies whether the Terminate Scheduled event is enabled or disabled.
	Enable *bool `pulumi:"enable"`
	// Configurable length of time a Virtual Machine being deleted will have to
	// potentially approve the Terminate Scheduled Event before the event is auto
	// approved (timed out). The configuration must be specified in ISO 8601 format,
	// the default value is 5 minutes (PT5M)
	NotBeforeTimeout *string `pulumi:"notBeforeTimeout"`
}

// TerminateNotificationProfileInput is an input type that accepts TerminateNotificationProfileArgs and TerminateNotificationProfileOutput values.
// You can construct a concrete instance of `TerminateNotificationProfileInput` via:
//
//	TerminateNotificationProfileArgs{...}
type TerminateNotificationProfileInput interface {
	pulumi.Input

	ToTerminateNotificationProfileOutput() TerminateNotificationProfileOutput
	ToTerminateNotificationProfileOutputWithContext(context.Context) TerminateNotificationProfileOutput
}

// Specifies Terminate Scheduled Event related configurations.
type TerminateNotificationProfileArgs struct {
	// Specifies whether the Terminate Scheduled event is enabled or disabled.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Configurable length of time a Virtual Machine being deleted will have to
	// potentially approve the Terminate Scheduled Event before the event is auto
	// approved (timed out). The configuration must be specified in ISO 8601 format,
	// the default value is 5 minutes (PT5M)
	NotBeforeTimeout pulumi.StringPtrInput `pulumi:"notBeforeTimeout"`
}

func (TerminateNotificationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminateNotificationProfile)(nil)).Elem()
}

func (i TerminateNotificationProfileArgs) ToTerminateNotificationProfileOutput() TerminateNotificationProfileOutput {
	return i.ToTerminateNotificationProfileOutputWithContext(context.Background())
}

func (i TerminateNotificationProfileArgs) ToTerminateNotificationProfileOutputWithContext(ctx context.Context) TerminateNotificationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminateNotificationProfileOutput)
}

func (i TerminateNotificationProfileArgs) ToTerminateNotificationProfilePtrOutput() TerminateNotificationProfilePtrOutput {
	return i.ToTerminateNotificationProfilePtrOutputWithContext(context.Background())
}

func (i TerminateNotificationProfileArgs) ToTerminateNotificationProfilePtrOutputWithContext(ctx context.Context) TerminateNotificationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminateNotificationProfileOutput).ToTerminateNotificationProfilePtrOutputWithContext(ctx)
}

// TerminateNotificationProfilePtrInput is an input type that accepts TerminateNotificationProfileArgs, TerminateNotificationProfilePtr and TerminateNotificationProfilePtrOutput values.
// You can construct a concrete instance of `TerminateNotificationProfilePtrInput` via:
//
//	        TerminateNotificationProfileArgs{...}
//
//	or:
//
//	        nil
type TerminateNotificationProfilePtrInput interface {
	pulumi.Input

	ToTerminateNotificationProfilePtrOutput() TerminateNotificationProfilePtrOutput
	ToTerminateNotificationProfilePtrOutputWithContext(context.Context) TerminateNotificationProfilePtrOutput
}

type terminateNotificationProfilePtrType TerminateNotificationProfileArgs

func TerminateNotificationProfilePtr(v *TerminateNotificationProfileArgs) TerminateNotificationProfilePtrInput {
	return (*terminateNotificationProfilePtrType)(v)
}

func (*terminateNotificationProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminateNotificationProfile)(nil)).Elem()
}

func (i *terminateNotificationProfilePtrType) ToTerminateNotificationProfilePtrOutput() TerminateNotificationProfilePtrOutput {
	return i.ToTerminateNotificationProfilePtrOutputWithContext(context.Background())
}

func (i *terminateNotificationProfilePtrType) ToTerminateNotificationProfilePtrOutputWithContext(ctx context.Context) TerminateNotificationProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminateNotificationProfilePtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
type TerminateNotificationProfileOutput struct{ *pulumi.OutputState }

func (TerminateNotificationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminateNotificationProfile)(nil)).Elem()
}

func (o TerminateNotificationProfileOutput) ToTerminateNotificationProfileOutput() TerminateNotificationProfileOutput {
	return o
}

func (o TerminateNotificationProfileOutput) ToTerminateNotificationProfileOutputWithContext(ctx context.Context) TerminateNotificationProfileOutput {
	return o
}

func (o TerminateNotificationProfileOutput) ToTerminateNotificationProfilePtrOutput() TerminateNotificationProfilePtrOutput {
	return o.ToTerminateNotificationProfilePtrOutputWithContext(context.Background())
}

func (o TerminateNotificationProfileOutput) ToTerminateNotificationProfilePtrOutputWithContext(ctx context.Context) TerminateNotificationProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TerminateNotificationProfile) *TerminateNotificationProfile {
		return &v
	}).(TerminateNotificationProfilePtrOutput)
}

// Specifies whether the Terminate Scheduled event is enabled or disabled.
func (o TerminateNotificationProfileOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TerminateNotificationProfile) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Configurable length of time a Virtual Machine being deleted will have to
// potentially approve the Terminate Scheduled Event before the event is auto
// approved (timed out). The configuration must be specified in ISO 8601 format,
// the default value is 5 minutes (PT5M)
func (o TerminateNotificationProfileOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminateNotificationProfile) *string { return v.NotBeforeTimeout }).(pulumi.StringPtrOutput)
}

type TerminateNotificationProfilePtrOutput struct{ *pulumi.OutputState }

func (TerminateNotificationProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminateNotificationProfile)(nil)).Elem()
}

func (o TerminateNotificationProfilePtrOutput) ToTerminateNotificationProfilePtrOutput() TerminateNotificationProfilePtrOutput {
	return o
}

func (o TerminateNotificationProfilePtrOutput) ToTerminateNotificationProfilePtrOutputWithContext(ctx context.Context) TerminateNotificationProfilePtrOutput {
	return o
}

func (o TerminateNotificationProfilePtrOutput) Elem() TerminateNotificationProfileOutput {
	return o.ApplyT(func(v *TerminateNotificationProfile) TerminateNotificationProfile {
		if v != nil {
			return *v
		}
		var ret TerminateNotificationProfile
		return ret
	}).(TerminateNotificationProfileOutput)
}

// Specifies whether the Terminate Scheduled event is enabled or disabled.
func (o TerminateNotificationProfilePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TerminateNotificationProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Configurable length of time a Virtual Machine being deleted will have to
// potentially approve the Terminate Scheduled Event before the event is auto
// approved (timed out). The configuration must be specified in ISO 8601 format,
// the default value is 5 minutes (PT5M)
func (o TerminateNotificationProfilePtrOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerminateNotificationProfile) *string {
		if v == nil {
			return nil
		}
		return v.NotBeforeTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies Terminate Scheduled Event related configurations.
type TerminateNotificationProfileResponse struct {
	// Specifies whether the Terminate Scheduled event is enabled or disabled.
	Enable *bool `pulumi:"enable"`
	// Configurable length of time a Virtual Machine being deleted will have to
	// potentially approve the Terminate Scheduled Event before the event is auto
	// approved (timed out). The configuration must be specified in ISO 8601 format,
	// the default value is 5 minutes (PT5M)
	NotBeforeTimeout *string `pulumi:"notBeforeTimeout"`
}

// Specifies Terminate Scheduled Event related configurations.
type TerminateNotificationProfileResponseOutput struct{ *pulumi.OutputState }

func (TerminateNotificationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminateNotificationProfileResponse)(nil)).Elem()
}

func (o TerminateNotificationProfileResponseOutput) ToTerminateNotificationProfileResponseOutput() TerminateNotificationProfileResponseOutput {
	return o
}

func (o TerminateNotificationProfileResponseOutput) ToTerminateNotificationProfileResponseOutputWithContext(ctx context.Context) TerminateNotificationProfileResponseOutput {
	return o
}

// Specifies whether the Terminate Scheduled event is enabled or disabled.
func (o TerminateNotificationProfileResponseOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TerminateNotificationProfileResponse) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Configurable length of time a Virtual Machine being deleted will have to
// potentially approve the Terminate Scheduled Event before the event is auto
// approved (timed out). The configuration must be specified in ISO 8601 format,
// the default value is 5 minutes (PT5M)
func (o TerminateNotificationProfileResponseOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminateNotificationProfileResponse) *string { return v.NotBeforeTimeout }).(pulumi.StringPtrOutput)
}

type TerminateNotificationProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (TerminateNotificationProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminateNotificationProfileResponse)(nil)).Elem()
}

func (o TerminateNotificationProfileResponsePtrOutput) ToTerminateNotificationProfileResponsePtrOutput() TerminateNotificationProfileResponsePtrOutput {
	return o
}

func (o TerminateNotificationProfileResponsePtrOutput) ToTerminateNotificationProfileResponsePtrOutputWithContext(ctx context.Context) TerminateNotificationProfileResponsePtrOutput {
	return o
}

func (o TerminateNotificationProfileResponsePtrOutput) Elem() TerminateNotificationProfileResponseOutput {
	return o.ApplyT(func(v *TerminateNotificationProfileResponse) TerminateNotificationProfileResponse {
		if v != nil {
			return *v
		}
		var ret TerminateNotificationProfileResponse
		return ret
	}).(TerminateNotificationProfileResponseOutput)
}

// Specifies whether the Terminate Scheduled event is enabled or disabled.
func (o TerminateNotificationProfileResponsePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TerminateNotificationProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Configurable length of time a Virtual Machine being deleted will have to
// potentially approve the Terminate Scheduled Event before the event is auto
// approved (timed out). The configuration must be specified in ISO 8601 format,
// the default value is 5 minutes (PT5M)
func (o TerminateNotificationProfileResponsePtrOutput) NotBeforeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerminateNotificationProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotBeforeTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
type UefiSettings struct {
	// Specifies whether secure boot should be enabled on the virtual machine. Minimum
	// api-version: 2020-12-01.
	SecureBootEnabled *bool `pulumi:"secureBootEnabled"`
	// Specifies whether vTPM should be enabled on the virtual machine. Minimum
	// api-version: 2020-12-01.
	VTpmEnabled *bool `pulumi:"vTpmEnabled"`
}

// UefiSettingsInput is an input type that accepts UefiSettingsArgs and UefiSettingsOutput values.
// You can construct a concrete instance of `UefiSettingsInput` via:
//
//	UefiSettingsArgs{...}
type UefiSettingsInput interface {
	pulumi.Input

	ToUefiSettingsOutput() UefiSettingsOutput
	ToUefiSettingsOutputWithContext(context.Context) UefiSettingsOutput
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
type UefiSettingsArgs struct {
	// Specifies whether secure boot should be enabled on the virtual machine. Minimum
	// api-version: 2020-12-01.
	SecureBootEnabled pulumi.BoolPtrInput `pulumi:"secureBootEnabled"`
	// Specifies whether vTPM should be enabled on the virtual machine. Minimum
	// api-version: 2020-12-01.
	VTpmEnabled pulumi.BoolPtrInput `pulumi:"vTpmEnabled"`
}

func (UefiSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiSettings)(nil)).Elem()
}

func (i UefiSettingsArgs) ToUefiSettingsOutput() UefiSettingsOutput {
	return i.ToUefiSettingsOutputWithContext(context.Background())
}

func (i UefiSettingsArgs) ToUefiSettingsOutputWithContext(ctx context.Context) UefiSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiSettingsOutput)
}

func (i UefiSettingsArgs) ToUefiSettingsPtrOutput() UefiSettingsPtrOutput {
	return i.ToUefiSettingsPtrOutputWithContext(context.Background())
}

func (i UefiSettingsArgs) ToUefiSettingsPtrOutputWithContext(ctx context.Context) UefiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiSettingsOutput).ToUefiSettingsPtrOutputWithContext(ctx)
}

// UefiSettingsPtrInput is an input type that accepts UefiSettingsArgs, UefiSettingsPtr and UefiSettingsPtrOutput values.
// You can construct a concrete instance of `UefiSettingsPtrInput` via:
//
//	        UefiSettingsArgs{...}
//
//	or:
//
//	        nil
type UefiSettingsPtrInput interface {
	pulumi.Input

	ToUefiSettingsPtrOutput() UefiSettingsPtrOutput
	ToUefiSettingsPtrOutputWithContext(context.Context) UefiSettingsPtrOutput
}

type uefiSettingsPtrType UefiSettingsArgs

func UefiSettingsPtr(v *UefiSettingsArgs) UefiSettingsPtrInput {
	return (*uefiSettingsPtrType)(v)
}

func (*uefiSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiSettings)(nil)).Elem()
}

func (i *uefiSettingsPtrType) ToUefiSettingsPtrOutput() UefiSettingsPtrOutput {
	return i.ToUefiSettingsPtrOutputWithContext(context.Background())
}

func (i *uefiSettingsPtrType) ToUefiSettingsPtrOutputWithContext(ctx context.Context) UefiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiSettingsPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
type UefiSettingsOutput struct{ *pulumi.OutputState }

func (UefiSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiSettings)(nil)).Elem()
}

func (o UefiSettingsOutput) ToUefiSettingsOutput() UefiSettingsOutput {
	return o
}

func (o UefiSettingsOutput) ToUefiSettingsOutputWithContext(ctx context.Context) UefiSettingsOutput {
	return o
}

func (o UefiSettingsOutput) ToUefiSettingsPtrOutput() UefiSettingsPtrOutput {
	return o.ToUefiSettingsPtrOutputWithContext(context.Background())
}

func (o UefiSettingsOutput) ToUefiSettingsPtrOutputWithContext(ctx context.Context) UefiSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UefiSettings) *UefiSettings {
		return &v
	}).(UefiSettingsPtrOutput)
}

// Specifies whether secure boot should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UefiSettings) *bool { return v.SecureBootEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether vTPM should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsOutput) VTpmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UefiSettings) *bool { return v.VTpmEnabled }).(pulumi.BoolPtrOutput)
}

type UefiSettingsPtrOutput struct{ *pulumi.OutputState }

func (UefiSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiSettings)(nil)).Elem()
}

func (o UefiSettingsPtrOutput) ToUefiSettingsPtrOutput() UefiSettingsPtrOutput {
	return o
}

func (o UefiSettingsPtrOutput) ToUefiSettingsPtrOutputWithContext(ctx context.Context) UefiSettingsPtrOutput {
	return o
}

func (o UefiSettingsPtrOutput) Elem() UefiSettingsOutput {
	return o.ApplyT(func(v *UefiSettings) UefiSettings {
		if v != nil {
			return *v
		}
		var ret UefiSettings
		return ret
	}).(UefiSettingsOutput)
}

// Specifies whether secure boot should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsPtrOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UefiSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SecureBootEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether vTPM should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsPtrOutput) VTpmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UefiSettings) *bool {
		if v == nil {
			return nil
		}
		return v.VTpmEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
type UefiSettingsResponse struct {
	// Specifies whether secure boot should be enabled on the virtual machine. Minimum
	// api-version: 2020-12-01.
	SecureBootEnabled *bool `pulumi:"secureBootEnabled"`
	// Specifies whether vTPM should be enabled on the virtual machine. Minimum
	// api-version: 2020-12-01.
	VTpmEnabled *bool `pulumi:"vTpmEnabled"`
}

// Specifies the security settings like secure boot and vTPM used while creating
// the virtual machine. Minimum api-version: 2020-12-01.
type UefiSettingsResponseOutput struct{ *pulumi.OutputState }

func (UefiSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiSettingsResponse)(nil)).Elem()
}

func (o UefiSettingsResponseOutput) ToUefiSettingsResponseOutput() UefiSettingsResponseOutput {
	return o
}

func (o UefiSettingsResponseOutput) ToUefiSettingsResponseOutputWithContext(ctx context.Context) UefiSettingsResponseOutput {
	return o
}

// Specifies whether secure boot should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsResponseOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UefiSettingsResponse) *bool { return v.SecureBootEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether vTPM should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsResponseOutput) VTpmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UefiSettingsResponse) *bool { return v.VTpmEnabled }).(pulumi.BoolPtrOutput)
}

type UefiSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (UefiSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiSettingsResponse)(nil)).Elem()
}

func (o UefiSettingsResponsePtrOutput) ToUefiSettingsResponsePtrOutput() UefiSettingsResponsePtrOutput {
	return o
}

func (o UefiSettingsResponsePtrOutput) ToUefiSettingsResponsePtrOutputWithContext(ctx context.Context) UefiSettingsResponsePtrOutput {
	return o
}

func (o UefiSettingsResponsePtrOutput) Elem() UefiSettingsResponseOutput {
	return o.ApplyT(func(v *UefiSettingsResponse) UefiSettingsResponse {
		if v != nil {
			return *v
		}
		var ret UefiSettingsResponse
		return ret
	}).(UefiSettingsResponseOutput)
}

// Specifies whether secure boot should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsResponsePtrOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UefiSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SecureBootEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether vTPM should be enabled on the virtual machine. Minimum
// api-version: 2020-12-01.
func (o UefiSettingsResponsePtrOutput) VTpmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UefiSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.VTpmEnabled
	}).(pulumi.BoolPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Specifies the security profile settings for the managed disk. **Note:** It can
// only be set for Confidential VMs.
type VMDiskSecurityProfile struct {
	// Specifies the customer managed disk encryption set resource id for the managed
	// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
	// VMGuest blob.
	DiskEncryptionSet *DiskEncryptionSetParameters `pulumi:"diskEncryptionSet"`
	// Specifies the EncryptionType of the managed disk. It is set to
	// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
	// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
	// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
	// **Note:** It can be set for only Confidential VMs.
	SecurityEncryptionType *string `pulumi:"securityEncryptionType"`
}

// VMDiskSecurityProfileInput is an input type that accepts VMDiskSecurityProfileArgs and VMDiskSecurityProfileOutput values.
// You can construct a concrete instance of `VMDiskSecurityProfileInput` via:
//
//	VMDiskSecurityProfileArgs{...}
type VMDiskSecurityProfileInput interface {
	pulumi.Input

	ToVMDiskSecurityProfileOutput() VMDiskSecurityProfileOutput
	ToVMDiskSecurityProfileOutputWithContext(context.Context) VMDiskSecurityProfileOutput
}

// Specifies the security profile settings for the managed disk. **Note:** It can
// only be set for Confidential VMs.
type VMDiskSecurityProfileArgs struct {
	// Specifies the customer managed disk encryption set resource id for the managed
	// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
	// VMGuest blob.
	DiskEncryptionSet DiskEncryptionSetParametersPtrInput `pulumi:"diskEncryptionSet"`
	// Specifies the EncryptionType of the managed disk. It is set to
	// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
	// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
	// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
	// **Note:** It can be set for only Confidential VMs.
	SecurityEncryptionType pulumi.StringPtrInput `pulumi:"securityEncryptionType"`
}

func (VMDiskSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMDiskSecurityProfile)(nil)).Elem()
}

func (i VMDiskSecurityProfileArgs) ToVMDiskSecurityProfileOutput() VMDiskSecurityProfileOutput {
	return i.ToVMDiskSecurityProfileOutputWithContext(context.Background())
}

func (i VMDiskSecurityProfileArgs) ToVMDiskSecurityProfileOutputWithContext(ctx context.Context) VMDiskSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMDiskSecurityProfileOutput)
}

func (i VMDiskSecurityProfileArgs) ToVMDiskSecurityProfilePtrOutput() VMDiskSecurityProfilePtrOutput {
	return i.ToVMDiskSecurityProfilePtrOutputWithContext(context.Background())
}

func (i VMDiskSecurityProfileArgs) ToVMDiskSecurityProfilePtrOutputWithContext(ctx context.Context) VMDiskSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMDiskSecurityProfileOutput).ToVMDiskSecurityProfilePtrOutputWithContext(ctx)
}

// VMDiskSecurityProfilePtrInput is an input type that accepts VMDiskSecurityProfileArgs, VMDiskSecurityProfilePtr and VMDiskSecurityProfilePtrOutput values.
// You can construct a concrete instance of `VMDiskSecurityProfilePtrInput` via:
//
//	        VMDiskSecurityProfileArgs{...}
//
//	or:
//
//	        nil
type VMDiskSecurityProfilePtrInput interface {
	pulumi.Input

	ToVMDiskSecurityProfilePtrOutput() VMDiskSecurityProfilePtrOutput
	ToVMDiskSecurityProfilePtrOutputWithContext(context.Context) VMDiskSecurityProfilePtrOutput
}

type vmdiskSecurityProfilePtrType VMDiskSecurityProfileArgs

func VMDiskSecurityProfilePtr(v *VMDiskSecurityProfileArgs) VMDiskSecurityProfilePtrInput {
	return (*vmdiskSecurityProfilePtrType)(v)
}

func (*vmdiskSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMDiskSecurityProfile)(nil)).Elem()
}

func (i *vmdiskSecurityProfilePtrType) ToVMDiskSecurityProfilePtrOutput() VMDiskSecurityProfilePtrOutput {
	return i.ToVMDiskSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *vmdiskSecurityProfilePtrType) ToVMDiskSecurityProfilePtrOutputWithContext(ctx context.Context) VMDiskSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMDiskSecurityProfilePtrOutput)
}

// Specifies the security profile settings for the managed disk. **Note:** It can
// only be set for Confidential VMs.
type VMDiskSecurityProfileOutput struct{ *pulumi.OutputState }

func (VMDiskSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMDiskSecurityProfile)(nil)).Elem()
}

func (o VMDiskSecurityProfileOutput) ToVMDiskSecurityProfileOutput() VMDiskSecurityProfileOutput {
	return o
}

func (o VMDiskSecurityProfileOutput) ToVMDiskSecurityProfileOutputWithContext(ctx context.Context) VMDiskSecurityProfileOutput {
	return o
}

func (o VMDiskSecurityProfileOutput) ToVMDiskSecurityProfilePtrOutput() VMDiskSecurityProfilePtrOutput {
	return o.ToVMDiskSecurityProfilePtrOutputWithContext(context.Background())
}

func (o VMDiskSecurityProfileOutput) ToVMDiskSecurityProfilePtrOutputWithContext(ctx context.Context) VMDiskSecurityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMDiskSecurityProfile) *VMDiskSecurityProfile {
		return &v
	}).(VMDiskSecurityProfilePtrOutput)
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
// VMGuest blob.
func (o VMDiskSecurityProfileOutput) DiskEncryptionSet() DiskEncryptionSetParametersPtrOutput {
	return o.ApplyT(func(v VMDiskSecurityProfile) *DiskEncryptionSetParameters { return v.DiskEncryptionSet }).(DiskEncryptionSetParametersPtrOutput)
}

// Specifies the EncryptionType of the managed disk. It is set to
// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
// **Note:** It can be set for only Confidential VMs.
func (o VMDiskSecurityProfileOutput) SecurityEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMDiskSecurityProfile) *string { return v.SecurityEncryptionType }).(pulumi.StringPtrOutput)
}

type VMDiskSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (VMDiskSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMDiskSecurityProfile)(nil)).Elem()
}

func (o VMDiskSecurityProfilePtrOutput) ToVMDiskSecurityProfilePtrOutput() VMDiskSecurityProfilePtrOutput {
	return o
}

func (o VMDiskSecurityProfilePtrOutput) ToVMDiskSecurityProfilePtrOutputWithContext(ctx context.Context) VMDiskSecurityProfilePtrOutput {
	return o
}

func (o VMDiskSecurityProfilePtrOutput) Elem() VMDiskSecurityProfileOutput {
	return o.ApplyT(func(v *VMDiskSecurityProfile) VMDiskSecurityProfile {
		if v != nil {
			return *v
		}
		var ret VMDiskSecurityProfile
		return ret
	}).(VMDiskSecurityProfileOutput)
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
// VMGuest blob.
func (o VMDiskSecurityProfilePtrOutput) DiskEncryptionSet() DiskEncryptionSetParametersPtrOutput {
	return o.ApplyT(func(v *VMDiskSecurityProfile) *DiskEncryptionSetParameters {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSet
	}).(DiskEncryptionSetParametersPtrOutput)
}

// Specifies the EncryptionType of the managed disk. It is set to
// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
// **Note:** It can be set for only Confidential VMs.
func (o VMDiskSecurityProfilePtrOutput) SecurityEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMDiskSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SecurityEncryptionType
	}).(pulumi.StringPtrOutput)
}

// Specifies the security profile settings for the managed disk. **Note:** It can
// only be set for Confidential VMs.
type VMDiskSecurityProfileResponse struct {
	// Specifies the customer managed disk encryption set resource id for the managed
	// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
	// VMGuest blob.
	DiskEncryptionSet *DiskEncryptionSetParametersResponse `pulumi:"diskEncryptionSet"`
	// Specifies the EncryptionType of the managed disk. It is set to
	// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
	// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
	// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
	// **Note:** It can be set for only Confidential VMs.
	SecurityEncryptionType *string `pulumi:"securityEncryptionType"`
}

// Specifies the security profile settings for the managed disk. **Note:** It can
// only be set for Confidential VMs.
type VMDiskSecurityProfileResponseOutput struct{ *pulumi.OutputState }

func (VMDiskSecurityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMDiskSecurityProfileResponse)(nil)).Elem()
}

func (o VMDiskSecurityProfileResponseOutput) ToVMDiskSecurityProfileResponseOutput() VMDiskSecurityProfileResponseOutput {
	return o
}

func (o VMDiskSecurityProfileResponseOutput) ToVMDiskSecurityProfileResponseOutputWithContext(ctx context.Context) VMDiskSecurityProfileResponseOutput {
	return o
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
// VMGuest blob.
func (o VMDiskSecurityProfileResponseOutput) DiskEncryptionSet() DiskEncryptionSetParametersResponsePtrOutput {
	return o.ApplyT(func(v VMDiskSecurityProfileResponse) *DiskEncryptionSetParametersResponse { return v.DiskEncryptionSet }).(DiskEncryptionSetParametersResponsePtrOutput)
}

// Specifies the EncryptionType of the managed disk. It is set to
// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
// **Note:** It can be set for only Confidential VMs.
func (o VMDiskSecurityProfileResponseOutput) SecurityEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMDiskSecurityProfileResponse) *string { return v.SecurityEncryptionType }).(pulumi.StringPtrOutput)
}

type VMDiskSecurityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VMDiskSecurityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMDiskSecurityProfileResponse)(nil)).Elem()
}

func (o VMDiskSecurityProfileResponsePtrOutput) ToVMDiskSecurityProfileResponsePtrOutput() VMDiskSecurityProfileResponsePtrOutput {
	return o
}

func (o VMDiskSecurityProfileResponsePtrOutput) ToVMDiskSecurityProfileResponsePtrOutputWithContext(ctx context.Context) VMDiskSecurityProfileResponsePtrOutput {
	return o
}

func (o VMDiskSecurityProfileResponsePtrOutput) Elem() VMDiskSecurityProfileResponseOutput {
	return o.ApplyT(func(v *VMDiskSecurityProfileResponse) VMDiskSecurityProfileResponse {
		if v != nil {
			return *v
		}
		var ret VMDiskSecurityProfileResponse
		return ret
	}).(VMDiskSecurityProfileResponseOutput)
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
// VMGuest blob.
func (o VMDiskSecurityProfileResponsePtrOutput) DiskEncryptionSet() DiskEncryptionSetParametersResponsePtrOutput {
	return o.ApplyT(func(v *VMDiskSecurityProfileResponse) *DiskEncryptionSetParametersResponse {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSet
	}).(DiskEncryptionSetParametersResponsePtrOutput)
}

// Specifies the EncryptionType of the managed disk. It is set to
// DiskWithVMGuestState for encryption of the managed disk along with VMGuestState
// blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and
// NonPersistedTPM for not persisting firmware state in the VMGuestState blob..
// **Note:** It can be set for only Confidential VMs.
func (o VMDiskSecurityProfileResponsePtrOutput) SecurityEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMDiskSecurityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecurityEncryptionType
	}).(pulumi.StringPtrOutput)
}

// Specifies the required information to reference a compute gallery application
// version
type VMGalleryApplication struct {
	// Optional, Specifies the uri to an azure blob that will replace the default
	// configuration for the package if provided
	ConfigurationReference *string `pulumi:"configurationReference"`
	// If set to true, when a new Gallery Application version is available in PIR/SIG,
	// it will be automatically updated for the VM/VMSS
	EnableAutomaticUpgrade *bool `pulumi:"enableAutomaticUpgrade"`
	// Optional, Specifies the order in which the packages have to be installed
	Order *int `pulumi:"order"`
	// Specifies the GalleryApplicationVersion resource id on the form of
	// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
	PackageReferenceId string `pulumi:"packageReferenceId"`
	// Optional, Specifies a passthrough value for more generic context.
	Tags *string `pulumi:"tags"`
	// Optional, If true, any failure for any operation in the VmApplication will fail
	// the deployment
	TreatFailureAsDeploymentFailure *bool `pulumi:"treatFailureAsDeploymentFailure"`
}

// VMGalleryApplicationInput is an input type that accepts VMGalleryApplicationArgs and VMGalleryApplicationOutput values.
// You can construct a concrete instance of `VMGalleryApplicationInput` via:
//
//	VMGalleryApplicationArgs{...}
type VMGalleryApplicationInput interface {
	pulumi.Input

	ToVMGalleryApplicationOutput() VMGalleryApplicationOutput
	ToVMGalleryApplicationOutputWithContext(context.Context) VMGalleryApplicationOutput
}

// Specifies the required information to reference a compute gallery application
// version
type VMGalleryApplicationArgs struct {
	// Optional, Specifies the uri to an azure blob that will replace the default
	// configuration for the package if provided
	ConfigurationReference pulumi.StringPtrInput `pulumi:"configurationReference"`
	// If set to true, when a new Gallery Application version is available in PIR/SIG,
	// it will be automatically updated for the VM/VMSS
	EnableAutomaticUpgrade pulumi.BoolPtrInput `pulumi:"enableAutomaticUpgrade"`
	// Optional, Specifies the order in which the packages have to be installed
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Specifies the GalleryApplicationVersion resource id on the form of
	// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
	PackageReferenceId pulumi.StringInput `pulumi:"packageReferenceId"`
	// Optional, Specifies a passthrough value for more generic context.
	Tags pulumi.StringPtrInput `pulumi:"tags"`
	// Optional, If true, any failure for any operation in the VmApplication will fail
	// the deployment
	TreatFailureAsDeploymentFailure pulumi.BoolPtrInput `pulumi:"treatFailureAsDeploymentFailure"`
}

func (VMGalleryApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMGalleryApplication)(nil)).Elem()
}

func (i VMGalleryApplicationArgs) ToVMGalleryApplicationOutput() VMGalleryApplicationOutput {
	return i.ToVMGalleryApplicationOutputWithContext(context.Background())
}

func (i VMGalleryApplicationArgs) ToVMGalleryApplicationOutputWithContext(ctx context.Context) VMGalleryApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMGalleryApplicationOutput)
}

// VMGalleryApplicationArrayInput is an input type that accepts VMGalleryApplicationArray and VMGalleryApplicationArrayOutput values.
// You can construct a concrete instance of `VMGalleryApplicationArrayInput` via:
//
//	VMGalleryApplicationArray{ VMGalleryApplicationArgs{...} }
type VMGalleryApplicationArrayInput interface {
	pulumi.Input

	ToVMGalleryApplicationArrayOutput() VMGalleryApplicationArrayOutput
	ToVMGalleryApplicationArrayOutputWithContext(context.Context) VMGalleryApplicationArrayOutput
}

type VMGalleryApplicationArray []VMGalleryApplicationInput

func (VMGalleryApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMGalleryApplication)(nil)).Elem()
}

func (i VMGalleryApplicationArray) ToVMGalleryApplicationArrayOutput() VMGalleryApplicationArrayOutput {
	return i.ToVMGalleryApplicationArrayOutputWithContext(context.Background())
}

func (i VMGalleryApplicationArray) ToVMGalleryApplicationArrayOutputWithContext(ctx context.Context) VMGalleryApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMGalleryApplicationArrayOutput)
}

// Specifies the required information to reference a compute gallery application
// version
type VMGalleryApplicationOutput struct{ *pulumi.OutputState }

func (VMGalleryApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMGalleryApplication)(nil)).Elem()
}

func (o VMGalleryApplicationOutput) ToVMGalleryApplicationOutput() VMGalleryApplicationOutput {
	return o
}

func (o VMGalleryApplicationOutput) ToVMGalleryApplicationOutputWithContext(ctx context.Context) VMGalleryApplicationOutput {
	return o
}

// Optional, Specifies the uri to an azure blob that will replace the default
// configuration for the package if provided
func (o VMGalleryApplicationOutput) ConfigurationReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMGalleryApplication) *string { return v.ConfigurationReference }).(pulumi.StringPtrOutput)
}

// If set to true, when a new Gallery Application version is available in PIR/SIG,
// it will be automatically updated for the VM/VMSS
func (o VMGalleryApplicationOutput) EnableAutomaticUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMGalleryApplication) *bool { return v.EnableAutomaticUpgrade }).(pulumi.BoolPtrOutput)
}

// Optional, Specifies the order in which the packages have to be installed
func (o VMGalleryApplicationOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMGalleryApplication) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Specifies the GalleryApplicationVersion resource id on the form of
// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
func (o VMGalleryApplicationOutput) PackageReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v VMGalleryApplication) string { return v.PackageReferenceId }).(pulumi.StringOutput)
}

// Optional, Specifies a passthrough value for more generic context.
func (o VMGalleryApplicationOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMGalleryApplication) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

// Optional, If true, any failure for any operation in the VmApplication will fail
// the deployment
func (o VMGalleryApplicationOutput) TreatFailureAsDeploymentFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMGalleryApplication) *bool { return v.TreatFailureAsDeploymentFailure }).(pulumi.BoolPtrOutput)
}

type VMGalleryApplicationArrayOutput struct{ *pulumi.OutputState }

func (VMGalleryApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMGalleryApplication)(nil)).Elem()
}

func (o VMGalleryApplicationArrayOutput) ToVMGalleryApplicationArrayOutput() VMGalleryApplicationArrayOutput {
	return o
}

func (o VMGalleryApplicationArrayOutput) ToVMGalleryApplicationArrayOutputWithContext(ctx context.Context) VMGalleryApplicationArrayOutput {
	return o
}

func (o VMGalleryApplicationArrayOutput) Index(i pulumi.IntInput) VMGalleryApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMGalleryApplication {
		return vs[0].([]VMGalleryApplication)[vs[1].(int)]
	}).(VMGalleryApplicationOutput)
}

// Specifies the required information to reference a compute gallery application
// version
type VMGalleryApplicationResponse struct {
	// Optional, Specifies the uri to an azure blob that will replace the default
	// configuration for the package if provided
	ConfigurationReference *string `pulumi:"configurationReference"`
	// If set to true, when a new Gallery Application version is available in PIR/SIG,
	// it will be automatically updated for the VM/VMSS
	EnableAutomaticUpgrade *bool `pulumi:"enableAutomaticUpgrade"`
	// Optional, Specifies the order in which the packages have to be installed
	Order *int `pulumi:"order"`
	// Specifies the GalleryApplicationVersion resource id on the form of
	// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
	PackageReferenceId string `pulumi:"packageReferenceId"`
	// Optional, Specifies a passthrough value for more generic context.
	Tags *string `pulumi:"tags"`
	// Optional, If true, any failure for any operation in the VmApplication will fail
	// the deployment
	TreatFailureAsDeploymentFailure *bool `pulumi:"treatFailureAsDeploymentFailure"`
}

// Specifies the required information to reference a compute gallery application
// version
type VMGalleryApplicationResponseOutput struct{ *pulumi.OutputState }

func (VMGalleryApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMGalleryApplicationResponse)(nil)).Elem()
}

func (o VMGalleryApplicationResponseOutput) ToVMGalleryApplicationResponseOutput() VMGalleryApplicationResponseOutput {
	return o
}

func (o VMGalleryApplicationResponseOutput) ToVMGalleryApplicationResponseOutputWithContext(ctx context.Context) VMGalleryApplicationResponseOutput {
	return o
}

// Optional, Specifies the uri to an azure blob that will replace the default
// configuration for the package if provided
func (o VMGalleryApplicationResponseOutput) ConfigurationReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMGalleryApplicationResponse) *string { return v.ConfigurationReference }).(pulumi.StringPtrOutput)
}

// If set to true, when a new Gallery Application version is available in PIR/SIG,
// it will be automatically updated for the VM/VMSS
func (o VMGalleryApplicationResponseOutput) EnableAutomaticUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMGalleryApplicationResponse) *bool { return v.EnableAutomaticUpgrade }).(pulumi.BoolPtrOutput)
}

// Optional, Specifies the order in which the packages have to be installed
func (o VMGalleryApplicationResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMGalleryApplicationResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Specifies the GalleryApplicationVersion resource id on the form of
// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
func (o VMGalleryApplicationResponseOutput) PackageReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v VMGalleryApplicationResponse) string { return v.PackageReferenceId }).(pulumi.StringOutput)
}

// Optional, Specifies a passthrough value for more generic context.
func (o VMGalleryApplicationResponseOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMGalleryApplicationResponse) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

// Optional, If true, any failure for any operation in the VmApplication will fail
// the deployment
func (o VMGalleryApplicationResponseOutput) TreatFailureAsDeploymentFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMGalleryApplicationResponse) *bool { return v.TreatFailureAsDeploymentFailure }).(pulumi.BoolPtrOutput)
}

type VMGalleryApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (VMGalleryApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMGalleryApplicationResponse)(nil)).Elem()
}

func (o VMGalleryApplicationResponseArrayOutput) ToVMGalleryApplicationResponseArrayOutput() VMGalleryApplicationResponseArrayOutput {
	return o
}

func (o VMGalleryApplicationResponseArrayOutput) ToVMGalleryApplicationResponseArrayOutputWithContext(ctx context.Context) VMGalleryApplicationResponseArrayOutput {
	return o
}

func (o VMGalleryApplicationResponseArrayOutput) Index(i pulumi.IntInput) VMGalleryApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMGalleryApplicationResponse {
		return vs[0].([]VMGalleryApplicationResponse)[vs[1].(int)]
	}).(VMGalleryApplicationResponseOutput)
}

// Specifies VM Size Property settings on the virtual machine.
type VMSizeProperties struct {
	// Specifies the number of vCPUs available for the VM. When this property is not
	// specified in the request body the default behavior is to set it to the value of
	// vCPUs available for that VM size exposed in api response of [List all available
	// virtual machine sizes in a
	// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
	VCPUsAvailable *int `pulumi:"vCPUsAvailable"`
	// Specifies the vCPU to physical core ratio. When this property is not specified
	// in the request body the default behavior is set to the value of vCPUsPerCore
	// for the VM Size exposed in api response of [List all available virtual machine
	// sizes in a
	// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
	// **Setting this property to 1 also means that hyper-threading is disabled.**
	VCPUsPerCore *int `pulumi:"vCPUsPerCore"`
}

// VMSizePropertiesInput is an input type that accepts VMSizePropertiesArgs and VMSizePropertiesOutput values.
// You can construct a concrete instance of `VMSizePropertiesInput` via:
//
//	VMSizePropertiesArgs{...}
type VMSizePropertiesInput interface {
	pulumi.Input

	ToVMSizePropertiesOutput() VMSizePropertiesOutput
	ToVMSizePropertiesOutputWithContext(context.Context) VMSizePropertiesOutput
}

// Specifies VM Size Property settings on the virtual machine.
type VMSizePropertiesArgs struct {
	// Specifies the number of vCPUs available for the VM. When this property is not
	// specified in the request body the default behavior is to set it to the value of
	// vCPUs available for that VM size exposed in api response of [List all available
	// virtual machine sizes in a
	// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
	VCPUsAvailable pulumi.IntPtrInput `pulumi:"vCPUsAvailable"`
	// Specifies the vCPU to physical core ratio. When this property is not specified
	// in the request body the default behavior is set to the value of vCPUsPerCore
	// for the VM Size exposed in api response of [List all available virtual machine
	// sizes in a
	// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
	// **Setting this property to 1 also means that hyper-threading is disabled.**
	VCPUsPerCore pulumi.IntPtrInput `pulumi:"vCPUsPerCore"`
}

func (VMSizePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMSizeProperties)(nil)).Elem()
}

func (i VMSizePropertiesArgs) ToVMSizePropertiesOutput() VMSizePropertiesOutput {
	return i.ToVMSizePropertiesOutputWithContext(context.Background())
}

func (i VMSizePropertiesArgs) ToVMSizePropertiesOutputWithContext(ctx context.Context) VMSizePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMSizePropertiesOutput)
}

func (i VMSizePropertiesArgs) ToVMSizePropertiesPtrOutput() VMSizePropertiesPtrOutput {
	return i.ToVMSizePropertiesPtrOutputWithContext(context.Background())
}

func (i VMSizePropertiesArgs) ToVMSizePropertiesPtrOutputWithContext(ctx context.Context) VMSizePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMSizePropertiesOutput).ToVMSizePropertiesPtrOutputWithContext(ctx)
}

// VMSizePropertiesPtrInput is an input type that accepts VMSizePropertiesArgs, VMSizePropertiesPtr and VMSizePropertiesPtrOutput values.
// You can construct a concrete instance of `VMSizePropertiesPtrInput` via:
//
//	        VMSizePropertiesArgs{...}
//
//	or:
//
//	        nil
type VMSizePropertiesPtrInput interface {
	pulumi.Input

	ToVMSizePropertiesPtrOutput() VMSizePropertiesPtrOutput
	ToVMSizePropertiesPtrOutputWithContext(context.Context) VMSizePropertiesPtrOutput
}

type vmsizePropertiesPtrType VMSizePropertiesArgs

func VMSizePropertiesPtr(v *VMSizePropertiesArgs) VMSizePropertiesPtrInput {
	return (*vmsizePropertiesPtrType)(v)
}

func (*vmsizePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMSizeProperties)(nil)).Elem()
}

func (i *vmsizePropertiesPtrType) ToVMSizePropertiesPtrOutput() VMSizePropertiesPtrOutput {
	return i.ToVMSizePropertiesPtrOutputWithContext(context.Background())
}

func (i *vmsizePropertiesPtrType) ToVMSizePropertiesPtrOutputWithContext(ctx context.Context) VMSizePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMSizePropertiesPtrOutput)
}

// Specifies VM Size Property settings on the virtual machine.
type VMSizePropertiesOutput struct{ *pulumi.OutputState }

func (VMSizePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMSizeProperties)(nil)).Elem()
}

func (o VMSizePropertiesOutput) ToVMSizePropertiesOutput() VMSizePropertiesOutput {
	return o
}

func (o VMSizePropertiesOutput) ToVMSizePropertiesOutputWithContext(ctx context.Context) VMSizePropertiesOutput {
	return o
}

func (o VMSizePropertiesOutput) ToVMSizePropertiesPtrOutput() VMSizePropertiesPtrOutput {
	return o.ToVMSizePropertiesPtrOutputWithContext(context.Background())
}

func (o VMSizePropertiesOutput) ToVMSizePropertiesPtrOutputWithContext(ctx context.Context) VMSizePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMSizeProperties) *VMSizeProperties {
		return &v
	}).(VMSizePropertiesPtrOutput)
}

// Specifies the number of vCPUs available for the VM. When this property is not
// specified in the request body the default behavior is to set it to the value of
// vCPUs available for that VM size exposed in api response of [List all available
// virtual machine sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
func (o VMSizePropertiesOutput) VCPUsAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMSizeProperties) *int { return v.VCPUsAvailable }).(pulumi.IntPtrOutput)
}

// Specifies the vCPU to physical core ratio. When this property is not specified
// in the request body the default behavior is set to the value of vCPUsPerCore
// for the VM Size exposed in api response of [List all available virtual machine
// sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
// **Setting this property to 1 also means that hyper-threading is disabled.**
func (o VMSizePropertiesOutput) VCPUsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMSizeProperties) *int { return v.VCPUsPerCore }).(pulumi.IntPtrOutput)
}

type VMSizePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VMSizePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMSizeProperties)(nil)).Elem()
}

func (o VMSizePropertiesPtrOutput) ToVMSizePropertiesPtrOutput() VMSizePropertiesPtrOutput {
	return o
}

func (o VMSizePropertiesPtrOutput) ToVMSizePropertiesPtrOutputWithContext(ctx context.Context) VMSizePropertiesPtrOutput {
	return o
}

func (o VMSizePropertiesPtrOutput) Elem() VMSizePropertiesOutput {
	return o.ApplyT(func(v *VMSizeProperties) VMSizeProperties {
		if v != nil {
			return *v
		}
		var ret VMSizeProperties
		return ret
	}).(VMSizePropertiesOutput)
}

// Specifies the number of vCPUs available for the VM. When this property is not
// specified in the request body the default behavior is to set it to the value of
// vCPUs available for that VM size exposed in api response of [List all available
// virtual machine sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
func (o VMSizePropertiesPtrOutput) VCPUsAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMSizeProperties) *int {
		if v == nil {
			return nil
		}
		return v.VCPUsAvailable
	}).(pulumi.IntPtrOutput)
}

// Specifies the vCPU to physical core ratio. When this property is not specified
// in the request body the default behavior is set to the value of vCPUsPerCore
// for the VM Size exposed in api response of [List all available virtual machine
// sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
// **Setting this property to 1 also means that hyper-threading is disabled.**
func (o VMSizePropertiesPtrOutput) VCPUsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMSizeProperties) *int {
		if v == nil {
			return nil
		}
		return v.VCPUsPerCore
	}).(pulumi.IntPtrOutput)
}

// Specifies VM Size Property settings on the virtual machine.
type VMSizePropertiesResponse struct {
	// Specifies the number of vCPUs available for the VM. When this property is not
	// specified in the request body the default behavior is to set it to the value of
	// vCPUs available for that VM size exposed in api response of [List all available
	// virtual machine sizes in a
	// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
	VCPUsAvailable *int `pulumi:"vCPUsAvailable"`
	// Specifies the vCPU to physical core ratio. When this property is not specified
	// in the request body the default behavior is set to the value of vCPUsPerCore
	// for the VM Size exposed in api response of [List all available virtual machine
	// sizes in a
	// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
	// **Setting this property to 1 also means that hyper-threading is disabled.**
	VCPUsPerCore *int `pulumi:"vCPUsPerCore"`
}

// Specifies VM Size Property settings on the virtual machine.
type VMSizePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VMSizePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMSizePropertiesResponse)(nil)).Elem()
}

func (o VMSizePropertiesResponseOutput) ToVMSizePropertiesResponseOutput() VMSizePropertiesResponseOutput {
	return o
}

func (o VMSizePropertiesResponseOutput) ToVMSizePropertiesResponseOutputWithContext(ctx context.Context) VMSizePropertiesResponseOutput {
	return o
}

// Specifies the number of vCPUs available for the VM. When this property is not
// specified in the request body the default behavior is to set it to the value of
// vCPUs available for that VM size exposed in api response of [List all available
// virtual machine sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
func (o VMSizePropertiesResponseOutput) VCPUsAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMSizePropertiesResponse) *int { return v.VCPUsAvailable }).(pulumi.IntPtrOutput)
}

// Specifies the vCPU to physical core ratio. When this property is not specified
// in the request body the default behavior is set to the value of vCPUsPerCore
// for the VM Size exposed in api response of [List all available virtual machine
// sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
// **Setting this property to 1 also means that hyper-threading is disabled.**
func (o VMSizePropertiesResponseOutput) VCPUsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMSizePropertiesResponse) *int { return v.VCPUsPerCore }).(pulumi.IntPtrOutput)
}

type VMSizePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VMSizePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMSizePropertiesResponse)(nil)).Elem()
}

func (o VMSizePropertiesResponsePtrOutput) ToVMSizePropertiesResponsePtrOutput() VMSizePropertiesResponsePtrOutput {
	return o
}

func (o VMSizePropertiesResponsePtrOutput) ToVMSizePropertiesResponsePtrOutputWithContext(ctx context.Context) VMSizePropertiesResponsePtrOutput {
	return o
}

func (o VMSizePropertiesResponsePtrOutput) Elem() VMSizePropertiesResponseOutput {
	return o.ApplyT(func(v *VMSizePropertiesResponse) VMSizePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VMSizePropertiesResponse
		return ret
	}).(VMSizePropertiesResponseOutput)
}

// Specifies the number of vCPUs available for the VM. When this property is not
// specified in the request body the default behavior is to set it to the value of
// vCPUs available for that VM size exposed in api response of [List all available
// virtual machine sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
func (o VMSizePropertiesResponsePtrOutput) VCPUsAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMSizePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.VCPUsAvailable
	}).(pulumi.IntPtrOutput)
}

// Specifies the vCPU to physical core ratio. When this property is not specified
// in the request body the default behavior is set to the value of vCPUsPerCore
// for the VM Size exposed in api response of [List all available virtual machine
// sizes in a
// region](https://learn.microsoft.com/en-us/rest/api/compute/resource-skus/list).
// **Setting this property to 1 also means that hyper-threading is disabled.**
func (o VMSizePropertiesResponsePtrOutput) VCPUsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMSizePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.VCPUsPerCore
	}).(pulumi.IntPtrOutput)
}

// Describes a single certificate reference in a Key Vault, and where the
// certificate should reside on the VM.
type VaultCertificate struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to
	// which the certificate should be added. The specified certificate store is
	// implicitly in the LocalMachine account. For Linux VMs, the certificate file is
	// placed under the /var/lib/waagent directory, with the file name
	// &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and
	// &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem
	// formatted.
	CertificateStore *string `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a
	// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
	// key
	// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
	// In this case, your certificate needs to be It is the Base64 encoding of the
	// following JSON Object which is encoded in UTF-8: <br><br> {<br>
	// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
	// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
	// machine it is recommended to use the [Azure Key Vault virtual machine extension
	// for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// VaultCertificateInput is an input type that accepts VaultCertificateArgs and VaultCertificateOutput values.
// You can construct a concrete instance of `VaultCertificateInput` via:
//
//	VaultCertificateArgs{...}
type VaultCertificateInput interface {
	pulumi.Input

	ToVaultCertificateOutput() VaultCertificateOutput
	ToVaultCertificateOutputWithContext(context.Context) VaultCertificateOutput
}

// Describes a single certificate reference in a Key Vault, and where the
// certificate should reside on the VM.
type VaultCertificateArgs struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to
	// which the certificate should be added. The specified certificate store is
	// implicitly in the LocalMachine account. For Linux VMs, the certificate file is
	// placed under the /var/lib/waagent directory, with the file name
	// &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and
	// &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem
	// formatted.
	CertificateStore pulumi.StringPtrInput `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a
	// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
	// key
	// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
	// In this case, your certificate needs to be It is the Base64 encoding of the
	// following JSON Object which is encoded in UTF-8: <br><br> {<br>
	// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
	// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
	// machine it is recommended to use the [Azure Key Vault virtual machine extension
	// for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
}

func (VaultCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificate)(nil)).Elem()
}

func (i VaultCertificateArgs) ToVaultCertificateOutput() VaultCertificateOutput {
	return i.ToVaultCertificateOutputWithContext(context.Background())
}

func (i VaultCertificateArgs) ToVaultCertificateOutputWithContext(ctx context.Context) VaultCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateOutput)
}

// VaultCertificateArrayInput is an input type that accepts VaultCertificateArray and VaultCertificateArrayOutput values.
// You can construct a concrete instance of `VaultCertificateArrayInput` via:
//
//	VaultCertificateArray{ VaultCertificateArgs{...} }
type VaultCertificateArrayInput interface {
	pulumi.Input

	ToVaultCertificateArrayOutput() VaultCertificateArrayOutput
	ToVaultCertificateArrayOutputWithContext(context.Context) VaultCertificateArrayOutput
}

type VaultCertificateArray []VaultCertificateInput

func (VaultCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificate)(nil)).Elem()
}

func (i VaultCertificateArray) ToVaultCertificateArrayOutput() VaultCertificateArrayOutput {
	return i.ToVaultCertificateArrayOutputWithContext(context.Background())
}

func (i VaultCertificateArray) ToVaultCertificateArrayOutputWithContext(ctx context.Context) VaultCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateArrayOutput)
}

// Describes a single certificate reference in a Key Vault, and where the
// certificate should reside on the VM.
type VaultCertificateOutput struct{ *pulumi.OutputState }

func (VaultCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificate)(nil)).Elem()
}

func (o VaultCertificateOutput) ToVaultCertificateOutput() VaultCertificateOutput {
	return o
}

func (o VaultCertificateOutput) ToVaultCertificateOutputWithContext(ctx context.Context) VaultCertificateOutput {
	return o
}

// For Windows VMs, specifies the certificate store on the Virtual Machine to
// which the certificate should be added. The specified certificate store is
// implicitly in the LocalMachine account. For Linux VMs, the certificate file is
// placed under the /var/lib/waagent directory, with the file name
// &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and
// &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem
// formatted.
func (o VaultCertificateOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificate) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// This is the URL of a certificate that has been uploaded to Key Vault as a
// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
// key
// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
// In this case, your certificate needs to be It is the Base64 encoding of the
// following JSON Object which is encoded in UTF-8: <br><br> {<br>
// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
// machine it is recommended to use the [Azure Key Vault virtual machine extension
// for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o VaultCertificateOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificate) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type VaultCertificateArrayOutput struct{ *pulumi.OutputState }

func (VaultCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificate)(nil)).Elem()
}

func (o VaultCertificateArrayOutput) ToVaultCertificateArrayOutput() VaultCertificateArrayOutput {
	return o
}

func (o VaultCertificateArrayOutput) ToVaultCertificateArrayOutputWithContext(ctx context.Context) VaultCertificateArrayOutput {
	return o
}

func (o VaultCertificateArrayOutput) Index(i pulumi.IntInput) VaultCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultCertificate {
		return vs[0].([]VaultCertificate)[vs[1].(int)]
	}).(VaultCertificateOutput)
}

// Describes a single certificate reference in a Key Vault, and where the
// certificate should reside on the VM.
type VaultCertificateResponse struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to
	// which the certificate should be added. The specified certificate store is
	// implicitly in the LocalMachine account. For Linux VMs, the certificate file is
	// placed under the /var/lib/waagent directory, with the file name
	// &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and
	// &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem
	// formatted.
	CertificateStore *string `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a
	// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
	// key
	// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
	// In this case, your certificate needs to be It is the Base64 encoding of the
	// following JSON Object which is encoded in UTF-8: <br><br> {<br>
	// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
	// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
	// machine it is recommended to use the [Azure Key Vault virtual machine extension
	// for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// Describes a single certificate reference in a Key Vault, and where the
// certificate should reside on the VM.
type VaultCertificateResponseOutput struct{ *pulumi.OutputState }

func (VaultCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificateResponse)(nil)).Elem()
}

func (o VaultCertificateResponseOutput) ToVaultCertificateResponseOutput() VaultCertificateResponseOutput {
	return o
}

func (o VaultCertificateResponseOutput) ToVaultCertificateResponseOutputWithContext(ctx context.Context) VaultCertificateResponseOutput {
	return o
}

// For Windows VMs, specifies the certificate store on the Virtual Machine to
// which the certificate should be added. The specified certificate store is
// implicitly in the LocalMachine account. For Linux VMs, the certificate file is
// placed under the /var/lib/waagent directory, with the file name
// &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and
// &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem
// formatted.
func (o VaultCertificateResponseOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificateResponse) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// This is the URL of a certificate that has been uploaded to Key Vault as a
// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
// key
// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
// In this case, your certificate needs to be It is the Base64 encoding of the
// following JSON Object which is encoded in UTF-8: <br><br> {<br>
// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
// machine it is recommended to use the [Azure Key Vault virtual machine extension
// for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o VaultCertificateResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificateResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type VaultCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VaultCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificateResponse)(nil)).Elem()
}

func (o VaultCertificateResponseArrayOutput) ToVaultCertificateResponseArrayOutput() VaultCertificateResponseArrayOutput {
	return o
}

func (o VaultCertificateResponseArrayOutput) ToVaultCertificateResponseArrayOutputWithContext(ctx context.Context) VaultCertificateResponseArrayOutput {
	return o
}

func (o VaultCertificateResponseArrayOutput) Index(i pulumi.IntInput) VaultCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultCertificateResponse {
		return vs[0].([]VaultCertificateResponse)[vs[1].(int)]
	}).(VaultCertificateResponseOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroup struct {
	// The relative URL of the Key Vault containing all of the certificates in
	// VaultCertificates.
	SourceVault *SubResource `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []VaultCertificate `pulumi:"vaultCertificates"`
}

// VaultSecretGroupInput is an input type that accepts VaultSecretGroupArgs and VaultSecretGroupOutput values.
// You can construct a concrete instance of `VaultSecretGroupInput` via:
//
//	VaultSecretGroupArgs{...}
type VaultSecretGroupInput interface {
	pulumi.Input

	ToVaultSecretGroupOutput() VaultSecretGroupOutput
	ToVaultSecretGroupOutputWithContext(context.Context) VaultSecretGroupOutput
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupArgs struct {
	// The relative URL of the Key Vault containing all of the certificates in
	// VaultCertificates.
	SourceVault SubResourcePtrInput `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates VaultCertificateArrayInput `pulumi:"vaultCertificates"`
}

func (VaultSecretGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroup)(nil)).Elem()
}

func (i VaultSecretGroupArgs) ToVaultSecretGroupOutput() VaultSecretGroupOutput {
	return i.ToVaultSecretGroupOutputWithContext(context.Background())
}

func (i VaultSecretGroupArgs) ToVaultSecretGroupOutputWithContext(ctx context.Context) VaultSecretGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupOutput)
}

// VaultSecretGroupArrayInput is an input type that accepts VaultSecretGroupArray and VaultSecretGroupArrayOutput values.
// You can construct a concrete instance of `VaultSecretGroupArrayInput` via:
//
//	VaultSecretGroupArray{ VaultSecretGroupArgs{...} }
type VaultSecretGroupArrayInput interface {
	pulumi.Input

	ToVaultSecretGroupArrayOutput() VaultSecretGroupArrayOutput
	ToVaultSecretGroupArrayOutputWithContext(context.Context) VaultSecretGroupArrayOutput
}

type VaultSecretGroupArray []VaultSecretGroupInput

func (VaultSecretGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroup)(nil)).Elem()
}

func (i VaultSecretGroupArray) ToVaultSecretGroupArrayOutput() VaultSecretGroupArrayOutput {
	return i.ToVaultSecretGroupArrayOutputWithContext(context.Background())
}

func (i VaultSecretGroupArray) ToVaultSecretGroupArrayOutputWithContext(ctx context.Context) VaultSecretGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupArrayOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroup)(nil)).Elem()
}

func (o VaultSecretGroupOutput) ToVaultSecretGroupOutput() VaultSecretGroupOutput {
	return o
}

func (o VaultSecretGroupOutput) ToVaultSecretGroupOutputWithContext(ctx context.Context) VaultSecretGroupOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in
// VaultCertificates.
func (o VaultSecretGroupOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v VaultSecretGroup) *SubResource { return v.SourceVault }).(SubResourcePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o VaultSecretGroupOutput) VaultCertificates() VaultCertificateArrayOutput {
	return o.ApplyT(func(v VaultSecretGroup) []VaultCertificate { return v.VaultCertificates }).(VaultCertificateArrayOutput)
}

type VaultSecretGroupArrayOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroup)(nil)).Elem()
}

func (o VaultSecretGroupArrayOutput) ToVaultSecretGroupArrayOutput() VaultSecretGroupArrayOutput {
	return o
}

func (o VaultSecretGroupArrayOutput) ToVaultSecretGroupArrayOutputWithContext(ctx context.Context) VaultSecretGroupArrayOutput {
	return o
}

func (o VaultSecretGroupArrayOutput) Index(i pulumi.IntInput) VaultSecretGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultSecretGroup {
		return vs[0].([]VaultSecretGroup)[vs[1].(int)]
	}).(VaultSecretGroupOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupResponse struct {
	// The relative URL of the Key Vault containing all of the certificates in
	// VaultCertificates.
	SourceVault *SubResourceResponse `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []VaultCertificateResponse `pulumi:"vaultCertificates"`
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupResponseOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroupResponse)(nil)).Elem()
}

func (o VaultSecretGroupResponseOutput) ToVaultSecretGroupResponseOutput() VaultSecretGroupResponseOutput {
	return o
}

func (o VaultSecretGroupResponseOutput) ToVaultSecretGroupResponseOutputWithContext(ctx context.Context) VaultSecretGroupResponseOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in
// VaultCertificates.
func (o VaultSecretGroupResponseOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VaultSecretGroupResponse) *SubResourceResponse { return v.SourceVault }).(SubResourceResponsePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o VaultSecretGroupResponseOutput) VaultCertificates() VaultCertificateResponseArrayOutput {
	return o.ApplyT(func(v VaultSecretGroupResponse) []VaultCertificateResponse { return v.VaultCertificates }).(VaultCertificateResponseArrayOutput)
}

type VaultSecretGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroupResponse)(nil)).Elem()
}

func (o VaultSecretGroupResponseArrayOutput) ToVaultSecretGroupResponseArrayOutput() VaultSecretGroupResponseArrayOutput {
	return o
}

func (o VaultSecretGroupResponseArrayOutput) ToVaultSecretGroupResponseArrayOutputWithContext(ctx context.Context) VaultSecretGroupResponseArrayOutput {
	return o
}

func (o VaultSecretGroupResponseArrayOutput) Index(i pulumi.IntInput) VaultSecretGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultSecretGroupResponse {
		return vs[0].([]VaultSecretGroupResponse)[vs[1].(int)]
	}).(VaultSecretGroupResponseOutput)
}

// Describes the uri of a disk.
type VirtualHardDisk struct {
	// Specifies the virtual hard disk's uri.
	Uri *string `pulumi:"uri"`
}

// VirtualHardDiskInput is an input type that accepts VirtualHardDiskArgs and VirtualHardDiskOutput values.
// You can construct a concrete instance of `VirtualHardDiskInput` via:
//
//	VirtualHardDiskArgs{...}
type VirtualHardDiskInput interface {
	pulumi.Input

	ToVirtualHardDiskOutput() VirtualHardDiskOutput
	ToVirtualHardDiskOutputWithContext(context.Context) VirtualHardDiskOutput
}

// Describes the uri of a disk.
type VirtualHardDiskArgs struct {
	// Specifies the virtual hard disk's uri.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VirtualHardDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDisk)(nil)).Elem()
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskOutput() VirtualHardDiskOutput {
	return i.ToVirtualHardDiskOutputWithContext(context.Background())
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskOutputWithContext(ctx context.Context) VirtualHardDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskOutput)
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return i.ToVirtualHardDiskPtrOutputWithContext(context.Background())
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskOutput).ToVirtualHardDiskPtrOutputWithContext(ctx)
}

// VirtualHardDiskPtrInput is an input type that accepts VirtualHardDiskArgs, VirtualHardDiskPtr and VirtualHardDiskPtrOutput values.
// You can construct a concrete instance of `VirtualHardDiskPtrInput` via:
//
//	        VirtualHardDiskArgs{...}
//
//	or:
//
//	        nil
type VirtualHardDiskPtrInput interface {
	pulumi.Input

	ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput
	ToVirtualHardDiskPtrOutputWithContext(context.Context) VirtualHardDiskPtrOutput
}

type virtualHardDiskPtrType VirtualHardDiskArgs

func VirtualHardDiskPtr(v *VirtualHardDiskArgs) VirtualHardDiskPtrInput {
	return (*virtualHardDiskPtrType)(v)
}

func (*virtualHardDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDisk)(nil)).Elem()
}

func (i *virtualHardDiskPtrType) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return i.ToVirtualHardDiskPtrOutputWithContext(context.Background())
}

func (i *virtualHardDiskPtrType) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskPtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDisk)(nil)).Elem()
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskOutput() VirtualHardDiskOutput {
	return o
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskOutputWithContext(ctx context.Context) VirtualHardDiskOutput {
	return o
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return o.ToVirtualHardDiskPtrOutputWithContext(context.Background())
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualHardDisk) *VirtualHardDisk {
		return &v
	}).(VirtualHardDiskPtrOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDisk) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskPtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDisk)(nil)).Elem()
}

func (o VirtualHardDiskPtrOutput) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return o
}

func (o VirtualHardDiskPtrOutput) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return o
}

func (o VirtualHardDiskPtrOutput) Elem() VirtualHardDiskOutput {
	return o.ApplyT(func(v *VirtualHardDisk) VirtualHardDisk {
		if v != nil {
			return *v
		}
		var ret VirtualHardDisk
		return ret
	}).(VirtualHardDiskOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDisk) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskResponse struct {
	// Specifies the virtual hard disk's uri.
	Uri *string `pulumi:"uri"`
}

// Describes the uri of a disk.
type VirtualHardDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskResponse)(nil)).Elem()
}

func (o VirtualHardDiskResponseOutput) ToVirtualHardDiskResponseOutput() VirtualHardDiskResponseOutput {
	return o
}

func (o VirtualHardDiskResponseOutput) ToVirtualHardDiskResponseOutputWithContext(ctx context.Context) VirtualHardDiskResponseOutput {
	return o
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskResponse)(nil)).Elem()
}

func (o VirtualHardDiskResponsePtrOutput) ToVirtualHardDiskResponsePtrOutput() VirtualHardDiskResponsePtrOutput {
	return o
}

func (o VirtualHardDiskResponsePtrOutput) ToVirtualHardDiskResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskResponsePtrOutput {
	return o
}

func (o VirtualHardDiskResponsePtrOutput) Elem() VirtualHardDiskResponseOutput {
	return o.ApplyT(func(v *VirtualHardDiskResponse) VirtualHardDiskResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHardDiskResponse
		return ret
	}).(VirtualHardDiskResponseOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set data disk.
type VirtualMachineScaleSetDataDisk struct {
	// Specifies the caching requirements. Possible values are: **None,**
	// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
	// storage. ReadOnly for Premium storage.**
	Caching *string `pulumi:"caching"`
	// The create option.
	CreateOption string `pulumi:"createOption"`
	// Specifies whether data disk should be deleted or detached upon VMSS Flex
	// deletion (This feature is available for VMSS with Flexible OrchestrationMode
	// only).<br><br> Possible values: <br><br> **Delete** If this value is used, the
	// data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If
	// this value is used, the data disk is retained after VMSS Flex VM is
	// deleted.<br><br> The default value is set to **Delete**.
	DeleteOption *string `pulumi:"deleteOption"`
	// Specifies the Read-Write IOPS for the managed disk. Should be used only when
	// StorageAccountType is UltraSSD_LRS. If not specified, a default value would be
	// assigned based on diskSizeGB.
	DiskIOPSReadWrite *float64 `pulumi:"diskIOPSReadWrite"`
	// Specifies the bandwidth in MB per second for the managed disk. Should be used
	// only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
	// would be assigned based on diskSizeGB.
	DiskMBpsReadWrite *float64 `pulumi:"diskMBpsReadWrite"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used
	// to overwrite the size of the disk in a virtual machine image. The property
	// diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
	// larger than 1023.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies the logical unit number of the data disk. This value is used to
	// identify data disks within the VM and therefore must be unique for each data
	// disk attached to a VM.
	Lun int `pulumi:"lun"`
	// The managed disk parameters.
	ManagedDisk *VirtualMachineScaleSetManagedDiskParameters `pulumi:"managedDisk"`
	// The disk name.
	Name *string `pulumi:"name"`
	// Specifies whether writeAccelerator should be enabled or disabled on the disk.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// VirtualMachineScaleSetDataDiskInput is an input type that accepts VirtualMachineScaleSetDataDiskArgs and VirtualMachineScaleSetDataDiskOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetDataDiskInput` via:
//
//	VirtualMachineScaleSetDataDiskArgs{...}
type VirtualMachineScaleSetDataDiskInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetDataDiskOutput() VirtualMachineScaleSetDataDiskOutput
	ToVirtualMachineScaleSetDataDiskOutputWithContext(context.Context) VirtualMachineScaleSetDataDiskOutput
}

// Describes a virtual machine scale set data disk.
type VirtualMachineScaleSetDataDiskArgs struct {
	// Specifies the caching requirements. Possible values are: **None,**
	// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
	// storage. ReadOnly for Premium storage.**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// The create option.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies whether data disk should be deleted or detached upon VMSS Flex
	// deletion (This feature is available for VMSS with Flexible OrchestrationMode
	// only).<br><br> Possible values: <br><br> **Delete** If this value is used, the
	// data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If
	// this value is used, the data disk is retained after VMSS Flex VM is
	// deleted.<br><br> The default value is set to **Delete**.
	DeleteOption pulumi.StringPtrInput `pulumi:"deleteOption"`
	// Specifies the Read-Write IOPS for the managed disk. Should be used only when
	// StorageAccountType is UltraSSD_LRS. If not specified, a default value would be
	// assigned based on diskSizeGB.
	DiskIOPSReadWrite pulumi.Float64PtrInput `pulumi:"diskIOPSReadWrite"`
	// Specifies the bandwidth in MB per second for the managed disk. Should be used
	// only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
	// would be assigned based on diskSizeGB.
	DiskMBpsReadWrite pulumi.Float64PtrInput `pulumi:"diskMBpsReadWrite"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used
	// to overwrite the size of the disk in a virtual machine image. The property
	// diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
	// larger than 1023.
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// Specifies the logical unit number of the data disk. This value is used to
	// identify data disks within the VM and therefore must be unique for each data
	// disk attached to a VM.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The managed disk parameters.
	ManagedDisk VirtualMachineScaleSetManagedDiskParametersPtrInput `pulumi:"managedDisk"`
	// The disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies whether writeAccelerator should be enabled or disabled on the disk.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (VirtualMachineScaleSetDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (i VirtualMachineScaleSetDataDiskArgs) ToVirtualMachineScaleSetDataDiskOutput() VirtualMachineScaleSetDataDiskOutput {
	return i.ToVirtualMachineScaleSetDataDiskOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetDataDiskArgs) ToVirtualMachineScaleSetDataDiskOutputWithContext(ctx context.Context) VirtualMachineScaleSetDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetDataDiskOutput)
}

// VirtualMachineScaleSetDataDiskArrayInput is an input type that accepts VirtualMachineScaleSetDataDiskArray and VirtualMachineScaleSetDataDiskArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetDataDiskArrayInput` via:
//
//	VirtualMachineScaleSetDataDiskArray{ VirtualMachineScaleSetDataDiskArgs{...} }
type VirtualMachineScaleSetDataDiskArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetDataDiskArrayOutput() VirtualMachineScaleSetDataDiskArrayOutput
	ToVirtualMachineScaleSetDataDiskArrayOutputWithContext(context.Context) VirtualMachineScaleSetDataDiskArrayOutput
}

type VirtualMachineScaleSetDataDiskArray []VirtualMachineScaleSetDataDiskInput

func (VirtualMachineScaleSetDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (i VirtualMachineScaleSetDataDiskArray) ToVirtualMachineScaleSetDataDiskArrayOutput() VirtualMachineScaleSetDataDiskArrayOutput {
	return i.ToVirtualMachineScaleSetDataDiskArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetDataDiskArray) ToVirtualMachineScaleSetDataDiskArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetDataDiskArrayOutput)
}

// Describes a virtual machine scale set data disk.
type VirtualMachineScaleSetDataDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (o VirtualMachineScaleSetDataDiskOutput) ToVirtualMachineScaleSetDataDiskOutput() VirtualMachineScaleSetDataDiskOutput {
	return o
}

func (o VirtualMachineScaleSetDataDiskOutput) ToVirtualMachineScaleSetDataDiskOutputWithContext(ctx context.Context) VirtualMachineScaleSetDataDiskOutput {
	return o
}

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
func (o VirtualMachineScaleSetDataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// The create option.
func (o VirtualMachineScaleSetDataDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies whether data disk should be deleted or detached upon VMSS Flex
// deletion (This feature is available for VMSS with Flexible OrchestrationMode
// only).<br><br> Possible values: <br><br> **Delete** If this value is used, the
// data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If
// this value is used, the data disk is retained after VMSS Flex VM is
// deleted.<br><br> The default value is set to **Delete**.
func (o VirtualMachineScaleSetDataDiskOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// Specifies the Read-Write IOPS for the managed disk. Should be used only when
// StorageAccountType is UltraSSD_LRS. If not specified, a default value would be
// assigned based on diskSizeGB.
func (o VirtualMachineScaleSetDataDiskOutput) DiskIOPSReadWrite() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *float64 { return v.DiskIOPSReadWrite }).(pulumi.Float64PtrOutput)
}

// Specifies the bandwidth in MB per second for the managed disk. Should be used
// only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
// would be assigned based on diskSizeGB.
func (o VirtualMachineScaleSetDataDiskOutput) DiskMBpsReadWrite() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *float64 { return v.DiskMBpsReadWrite }).(pulumi.Float64PtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used
// to overwrite the size of the disk in a virtual machine image. The property
// diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
// larger than 1023.
func (o VirtualMachineScaleSetDataDiskOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies the logical unit number of the data disk. This value is used to
// identify data disks within the VM and therefore must be unique for each data
// disk attached to a VM.
func (o VirtualMachineScaleSetDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// The managed disk parameters.
func (o VirtualMachineScaleSetDataDiskOutput) ManagedDisk() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *VirtualMachineScaleSetManagedDiskParameters {
		return v.ManagedDisk
	}).(VirtualMachineScaleSetManagedDiskParametersPtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetDataDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies whether writeAccelerator should be enabled or disabled on the disk.
func (o VirtualMachineScaleSetDataDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetDataDiskArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (o VirtualMachineScaleSetDataDiskArrayOutput) ToVirtualMachineScaleSetDataDiskArrayOutput() VirtualMachineScaleSetDataDiskArrayOutput {
	return o
}

func (o VirtualMachineScaleSetDataDiskArrayOutput) ToVirtualMachineScaleSetDataDiskArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetDataDiskArrayOutput {
	return o
}

func (o VirtualMachineScaleSetDataDiskArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetDataDisk {
		return vs[0].([]VirtualMachineScaleSetDataDisk)[vs[1].(int)]
	}).(VirtualMachineScaleSetDataDiskOutput)
}

// Describes a virtual machine scale set data disk.
type VirtualMachineScaleSetDataDiskResponse struct {
	// Specifies the caching requirements. Possible values are: **None,**
	// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
	// storage. ReadOnly for Premium storage.**
	Caching *string `pulumi:"caching"`
	// The create option.
	CreateOption string `pulumi:"createOption"`
	// Specifies whether data disk should be deleted or detached upon VMSS Flex
	// deletion (This feature is available for VMSS with Flexible OrchestrationMode
	// only).<br><br> Possible values: <br><br> **Delete** If this value is used, the
	// data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If
	// this value is used, the data disk is retained after VMSS Flex VM is
	// deleted.<br><br> The default value is set to **Delete**.
	DeleteOption *string `pulumi:"deleteOption"`
	// Specifies the Read-Write IOPS for the managed disk. Should be used only when
	// StorageAccountType is UltraSSD_LRS. If not specified, a default value would be
	// assigned based on diskSizeGB.
	DiskIOPSReadWrite *float64 `pulumi:"diskIOPSReadWrite"`
	// Specifies the bandwidth in MB per second for the managed disk. Should be used
	// only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
	// would be assigned based on diskSizeGB.
	DiskMBpsReadWrite *float64 `pulumi:"diskMBpsReadWrite"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used
	// to overwrite the size of the disk in a virtual machine image. The property
	// diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
	// larger than 1023.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies the logical unit number of the data disk. This value is used to
	// identify data disks within the VM and therefore must be unique for each data
	// disk attached to a VM.
	Lun int `pulumi:"lun"`
	// The managed disk parameters.
	ManagedDisk *VirtualMachineScaleSetManagedDiskParametersResponse `pulumi:"managedDisk"`
	// The disk name.
	Name *string `pulumi:"name"`
	// Specifies whether writeAccelerator should be enabled or disabled on the disk.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// Describes a virtual machine scale set data disk.
type VirtualMachineScaleSetDataDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetDataDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetDataDiskResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetDataDiskResponseOutput) ToVirtualMachineScaleSetDataDiskResponseOutput() VirtualMachineScaleSetDataDiskResponseOutput {
	return o
}

func (o VirtualMachineScaleSetDataDiskResponseOutput) ToVirtualMachineScaleSetDataDiskResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetDataDiskResponseOutput {
	return o
}

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
func (o VirtualMachineScaleSetDataDiskResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// The create option.
func (o VirtualMachineScaleSetDataDiskResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies whether data disk should be deleted or detached upon VMSS Flex
// deletion (This feature is available for VMSS with Flexible OrchestrationMode
// only).<br><br> Possible values: <br><br> **Delete** If this value is used, the
// data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If
// this value is used, the data disk is retained after VMSS Flex VM is
// deleted.<br><br> The default value is set to **Delete**.
func (o VirtualMachineScaleSetDataDiskResponseOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// Specifies the Read-Write IOPS for the managed disk. Should be used only when
// StorageAccountType is UltraSSD_LRS. If not specified, a default value would be
// assigned based on diskSizeGB.
func (o VirtualMachineScaleSetDataDiskResponseOutput) DiskIOPSReadWrite() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *float64 { return v.DiskIOPSReadWrite }).(pulumi.Float64PtrOutput)
}

// Specifies the bandwidth in MB per second for the managed disk. Should be used
// only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
// would be assigned based on diskSizeGB.
func (o VirtualMachineScaleSetDataDiskResponseOutput) DiskMBpsReadWrite() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *float64 { return v.DiskMBpsReadWrite }).(pulumi.Float64PtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used
// to overwrite the size of the disk in a virtual machine image. The property
// diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
// larger than 1023.
func (o VirtualMachineScaleSetDataDiskResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies the logical unit number of the data disk. This value is used to
// identify data disks within the VM and therefore must be unique for each data
// disk attached to a VM.
func (o VirtualMachineScaleSetDataDiskResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// The managed disk parameters.
func (o VirtualMachineScaleSetDataDiskResponseOutput) ManagedDisk() VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *VirtualMachineScaleSetManagedDiskParametersResponse {
		return v.ManagedDisk
	}).(VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetDataDiskResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies whether writeAccelerator should be enabled or disabled on the disk.
func (o VirtualMachineScaleSetDataDiskResponseOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetDataDiskResponse) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetDataDiskResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetDataDiskResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetDataDiskResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetDataDiskResponseArrayOutput) ToVirtualMachineScaleSetDataDiskResponseArrayOutput() VirtualMachineScaleSetDataDiskResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetDataDiskResponseArrayOutput) ToVirtualMachineScaleSetDataDiskResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetDataDiskResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetDataDiskResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetDataDiskResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetDataDiskResponse {
		return vs[0].([]VirtualMachineScaleSetDataDiskResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetDataDiskResponseOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtension struct {
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Describes the properties of a Virtual Machine Scale Set Extension.
	Properties *VirtualMachineScaleSetExtensionProperties `pulumi:"properties"`
}

// VirtualMachineScaleSetExtensionInput is an input type that accepts VirtualMachineScaleSetExtensionArgs and VirtualMachineScaleSetExtensionOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionInput` via:
//
//	VirtualMachineScaleSetExtensionArgs{...}
type VirtualMachineScaleSetExtensionInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionOutput() VirtualMachineScaleSetExtensionOutput
	ToVirtualMachineScaleSetExtensionOutputWithContext(context.Context) VirtualMachineScaleSetExtensionOutput
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionArgs struct {
	// The name of the extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes the properties of a Virtual Machine Scale Set Extension.
	Properties VirtualMachineScaleSetExtensionPropertiesPtrInput `pulumi:"properties"`
}

func (VirtualMachineScaleSetExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionArgs) ToVirtualMachineScaleSetExtensionOutput() VirtualMachineScaleSetExtensionOutput {
	return i.ToVirtualMachineScaleSetExtensionOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionArgs) ToVirtualMachineScaleSetExtensionOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionOutput)
}

// VirtualMachineScaleSetExtensionArrayInput is an input type that accepts VirtualMachineScaleSetExtensionArray and VirtualMachineScaleSetExtensionArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionArrayInput` via:
//
//	VirtualMachineScaleSetExtensionArray{ VirtualMachineScaleSetExtensionArgs{...} }
type VirtualMachineScaleSetExtensionArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionArrayOutput() VirtualMachineScaleSetExtensionArrayOutput
	ToVirtualMachineScaleSetExtensionArrayOutputWithContext(context.Context) VirtualMachineScaleSetExtensionArrayOutput
}

type VirtualMachineScaleSetExtensionArray []VirtualMachineScaleSetExtensionInput

func (VirtualMachineScaleSetExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionArray) ToVirtualMachineScaleSetExtensionArrayOutput() VirtualMachineScaleSetExtensionArrayOutput {
	return i.ToVirtualMachineScaleSetExtensionArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionArray) ToVirtualMachineScaleSetExtensionArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionArrayOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionOutput) ToVirtualMachineScaleSetExtensionOutput() VirtualMachineScaleSetExtensionOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionOutput) ToVirtualMachineScaleSetExtensionOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionOutput {
	return o
}

// The name of the extension.
func (o VirtualMachineScaleSetExtensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes the properties of a Virtual Machine Scale Set Extension.
func (o VirtualMachineScaleSetExtensionOutput) Properties() VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *VirtualMachineScaleSetExtensionProperties {
		return v.Properties
	}).(VirtualMachineScaleSetExtensionPropertiesPtrOutput)
}

type VirtualMachineScaleSetExtensionArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionArrayOutput) ToVirtualMachineScaleSetExtensionArrayOutput() VirtualMachineScaleSetExtensionArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionArrayOutput) ToVirtualMachineScaleSetExtensionArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetExtension {
		return vs[0].([]VirtualMachineScaleSetExtension)[vs[1].(int)]
	}).(VirtualMachineScaleSetExtensionOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfile struct {
	// The virtual machine scale set child extension resources.
	Extensions []VirtualMachineScaleSetExtension `pulumi:"extensions"`
	// Specifies the time alloted for all extensions to start. The time duration
	// should be between 15 minutes and 120 minutes (inclusive) and should be
	// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
	// Minimum api-version: 2020-06-01.
	ExtensionsTimeBudget *string `pulumi:"extensionsTimeBudget"`
}

// VirtualMachineScaleSetExtensionProfileInput is an input type that accepts VirtualMachineScaleSetExtensionProfileArgs and VirtualMachineScaleSetExtensionProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfileInput` via:
//
//	VirtualMachineScaleSetExtensionProfileArgs{...}
type VirtualMachineScaleSetExtensionProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfileOutput() VirtualMachineScaleSetExtensionProfileOutput
	ToVirtualMachineScaleSetExtensionProfileOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfileOutput
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileArgs struct {
	// The virtual machine scale set child extension resources.
	Extensions VirtualMachineScaleSetExtensionArrayInput `pulumi:"extensions"`
	// Specifies the time alloted for all extensions to start. The time duration
	// should be between 15 minutes and 120 minutes (inclusive) and should be
	// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
	// Minimum api-version: 2020-06-01.
	ExtensionsTimeBudget pulumi.StringPtrInput `pulumi:"extensionsTimeBudget"`
}

func (VirtualMachineScaleSetExtensionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfileOutput() VirtualMachineScaleSetExtensionProfileOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileOutput)
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileOutput).ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetExtensionProfilePtrInput is an input type that accepts VirtualMachineScaleSetExtensionProfileArgs, VirtualMachineScaleSetExtensionProfilePtr and VirtualMachineScaleSetExtensionProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfilePtrInput` via:
//
//	        VirtualMachineScaleSetExtensionProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetExtensionProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput
	ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput
}

type virtualMachineScaleSetExtensionProfilePtrType VirtualMachineScaleSetExtensionProfileArgs

func VirtualMachineScaleSetExtensionProfilePtr(v *VirtualMachineScaleSetExtensionProfileArgs) VirtualMachineScaleSetExtensionProfilePtrInput {
	return (*virtualMachineScaleSetExtensionProfilePtrType)(v)
}

func (*virtualMachineScaleSetExtensionProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetExtensionProfilePtrType) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetExtensionProfilePtrType) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfileOutput() VirtualMachineScaleSetExtensionProfileOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetExtensionProfile) *VirtualMachineScaleSetExtensionProfile {
		return &v
	}).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileOutput) Extensions() VirtualMachineScaleSetExtensionArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfile) []VirtualMachineScaleSetExtension { return v.Extensions }).(VirtualMachineScaleSetExtensionArrayOutput)
}

// Specifies the time alloted for all extensions to start. The time duration
// should be between 15 minutes and 120 minutes (inclusive) and should be
// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
// Minimum api-version: 2020-06-01.
func (o VirtualMachineScaleSetExtensionProfileOutput) ExtensionsTimeBudget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfile) *string { return v.ExtensionsTimeBudget }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfilePtrOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfilePtrOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfilePtrOutput) Elem() VirtualMachineScaleSetExtensionProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfile) VirtualMachineScaleSetExtensionProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetExtensionProfile
		return ret
	}).(VirtualMachineScaleSetExtensionProfileOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfilePtrOutput) Extensions() VirtualMachineScaleSetExtensionArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfile) []VirtualMachineScaleSetExtension {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionArrayOutput)
}

// Specifies the time alloted for all extensions to start. The time duration
// should be between 15 minutes and 120 minutes (inclusive) and should be
// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
// Minimum api-version: 2020-06-01.
func (o VirtualMachineScaleSetExtensionProfilePtrOutput) ExtensionsTimeBudget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfile) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionsTimeBudget
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileResponse struct {
	// The virtual machine scale set child extension resources.
	Extensions []VirtualMachineScaleSetExtensionResponse `pulumi:"extensions"`
	// Specifies the time alloted for all extensions to start. The time duration
	// should be between 15 minutes and 120 minutes (inclusive) and should be
	// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
	// Minimum api-version: 2020-06-01.
	ExtensionsTimeBudget *string `pulumi:"extensionsTimeBudget"`
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ToVirtualMachineScaleSetExtensionProfileResponseOutput() VirtualMachineScaleSetExtensionProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ToVirtualMachineScaleSetExtensionProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponseOutput {
	return o
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileResponseOutput) Extensions() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfileResponse) []VirtualMachineScaleSetExtensionResponse {
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionResponseArrayOutput)
}

// Specifies the time alloted for all extensions to start. The time duration
// should be between 15 minutes and 120 minutes (inclusive) and should be
// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
// Minimum api-version: 2020-06-01.
func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ExtensionsTimeBudget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfileResponse) *string { return v.ExtensionsTimeBudget }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutput() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) Elem() VirtualMachineScaleSetExtensionProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileResponse) VirtualMachineScaleSetExtensionProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetExtensionProfileResponse
		return ret
	}).(VirtualMachineScaleSetExtensionProfileResponseOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) Extensions() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileResponse) []VirtualMachineScaleSetExtensionResponse {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionResponseArrayOutput)
}

// Specifies the time alloted for all extensions to start. The time duration
// should be between 15 minutes and 120 minutes (inclusive) and should be
// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
// Minimum api-version: 2020-06-01.
func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ExtensionsTimeBudget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionsTimeBudget
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionProperties struct {
	// Indicates whether the extension should use a newer minor version if one is
	// available at deployment time. Once deployed, however, the extension will not
	// upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Indicates whether the extension should be automatically upgraded by the
	// platform if there is a newer version of the extension available.
	EnableAutomaticUpgrade *bool `pulumi:"enableAutomaticUpgrade"`
	// If a value is provided and is different from the previous value, the extension
	// handler will be forced to update even if the extension configuration has not
	// changed.
	ForceUpdateTag *string `pulumi:"forceUpdateTag"`
	// The extension can contain either protectedSettings or
	// protectedSettingsFromKeyVault or no protected settings at all.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// The extensions protected settings that are passed by reference, and consumed
	// from key vault
	ProtectedSettingsFromKeyVault *KeyVaultSecretReference `pulumi:"protectedSettingsFromKeyVault"`
	// Collection of extension names after which this extension needs to be
	// provisioned.
	ProvisionAfterExtensions []string `pulumi:"provisionAfterExtensions"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// Indicates whether failures stemming from the extension will be suppressed
	// (Operational failures such as not connecting to the VM will not be suppressed
	// regardless of this value). The default is false.
	SuppressFailures *bool `pulumi:"suppressFailures"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineScaleSetExtensionPropertiesInput is an input type that accepts VirtualMachineScaleSetExtensionPropertiesArgs and VirtualMachineScaleSetExtensionPropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionPropertiesInput` via:
//
//	VirtualMachineScaleSetExtensionPropertiesArgs{...}
type VirtualMachineScaleSetExtensionPropertiesInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionPropertiesOutput() VirtualMachineScaleSetExtensionPropertiesOutput
	ToVirtualMachineScaleSetExtensionPropertiesOutputWithContext(context.Context) VirtualMachineScaleSetExtensionPropertiesOutput
}

// Describes the properties of a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionPropertiesArgs struct {
	// Indicates whether the extension should use a newer minor version if one is
	// available at deployment time. Once deployed, however, the extension will not
	// upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Indicates whether the extension should be automatically upgraded by the
	// platform if there is a newer version of the extension available.
	EnableAutomaticUpgrade pulumi.BoolPtrInput `pulumi:"enableAutomaticUpgrade"`
	// If a value is provided and is different from the previous value, the extension
	// handler will be forced to update even if the extension configuration has not
	// changed.
	ForceUpdateTag pulumi.StringPtrInput `pulumi:"forceUpdateTag"`
	// The extension can contain either protectedSettings or
	// protectedSettingsFromKeyVault or no protected settings at all.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// The extensions protected settings that are passed by reference, and consumed
	// from key vault
	ProtectedSettingsFromKeyVault KeyVaultSecretReferencePtrInput `pulumi:"protectedSettingsFromKeyVault"`
	// Collection of extension names after which this extension needs to be
	// provisioned.
	ProvisionAfterExtensions pulumi.StringArrayInput `pulumi:"provisionAfterExtensions"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// Indicates whether failures stemming from the extension will be suppressed
	// (Operational failures such as not connecting to the VM will not be suppressed
	// regardless of this value). The default is false.
	SuppressFailures pulumi.BoolPtrInput `pulumi:"suppressFailures"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineScaleSetExtensionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProperties)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionPropertiesArgs) ToVirtualMachineScaleSetExtensionPropertiesOutput() VirtualMachineScaleSetExtensionPropertiesOutput {
	return i.ToVirtualMachineScaleSetExtensionPropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionPropertiesArgs) ToVirtualMachineScaleSetExtensionPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionPropertiesOutput)
}

func (i VirtualMachineScaleSetExtensionPropertiesArgs) ToVirtualMachineScaleSetExtensionPropertiesPtrOutput() VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionPropertiesArgs) ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionPropertiesOutput).ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetExtensionPropertiesPtrInput is an input type that accepts VirtualMachineScaleSetExtensionPropertiesArgs, VirtualMachineScaleSetExtensionPropertiesPtr and VirtualMachineScaleSetExtensionPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionPropertiesPtrInput` via:
//
//	        VirtualMachineScaleSetExtensionPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetExtensionPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionPropertiesPtrOutput() VirtualMachineScaleSetExtensionPropertiesPtrOutput
	ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(context.Context) VirtualMachineScaleSetExtensionPropertiesPtrOutput
}

type virtualMachineScaleSetExtensionPropertiesPtrType VirtualMachineScaleSetExtensionPropertiesArgs

func VirtualMachineScaleSetExtensionPropertiesPtr(v *VirtualMachineScaleSetExtensionPropertiesArgs) VirtualMachineScaleSetExtensionPropertiesPtrInput {
	return (*virtualMachineScaleSetExtensionPropertiesPtrType)(v)
}

func (*virtualMachineScaleSetExtensionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProperties)(nil)).Elem()
}

func (i *virtualMachineScaleSetExtensionPropertiesPtrType) ToVirtualMachineScaleSetExtensionPropertiesPtrOutput() VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetExtensionPropertiesPtrType) ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionPropertiesPtrOutput)
}

// Describes the properties of a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionPropertiesOutput) ToVirtualMachineScaleSetExtensionPropertiesOutput() VirtualMachineScaleSetExtensionPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesOutput) ToVirtualMachineScaleSetExtensionPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesOutput) ToVirtualMachineScaleSetExtensionPropertiesPtrOutput() VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return o.ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetExtensionPropertiesOutput) ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetExtensionProperties) *VirtualMachineScaleSetExtensionProperties {
		return &v
	}).(VirtualMachineScaleSetExtensionPropertiesPtrOutput)
}

// Indicates whether the extension should use a newer minor version if one is
// available at deployment time. Once deployed, however, the extension will not
// upgrade minor versions unless redeployed, even with this property set to true.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Indicates whether the extension should be automatically upgraded by the
// platform if there is a newer version of the extension available.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) EnableAutomaticUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *bool { return v.EnableAutomaticUpgrade }).(pulumi.BoolPtrOutput)
}

// If a value is provided and is different from the previous value, the extension
// handler will be forced to update even if the extension configuration has not
// changed.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *string { return v.ForceUpdateTag }).(pulumi.StringPtrOutput)
}

// The extension can contain either protectedSettings or
// protectedSettingsFromKeyVault or no protected settings at all.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// The extensions protected settings that are passed by reference, and consumed
// from key vault
func (o VirtualMachineScaleSetExtensionPropertiesOutput) ProtectedSettingsFromKeyVault() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *KeyVaultSecretReference {
		return v.ProtectedSettingsFromKeyVault
	}).(KeyVaultSecretReferencePtrOutput)
}

// Collection of extension names after which this extension needs to be
// provisioned.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) []string { return v.ProvisionAfterExtensions }).(pulumi.StringArrayOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// Indicates whether failures stemming from the extension will be suppressed
// (Operational failures such as not connecting to the VM will not be suppressed
// regardless of this value). The default is false.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) SuppressFailures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *bool { return v.SuppressFailures }).(pulumi.BoolPtrOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineScaleSetExtensionPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineScaleSetExtensionPropertiesOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProperties) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) ToVirtualMachineScaleSetExtensionPropertiesPtrOutput() VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) ToVirtualMachineScaleSetExtensionPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) Elem() VirtualMachineScaleSetExtensionPropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) VirtualMachineScaleSetExtensionProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetExtensionProperties
		return ret
	}).(VirtualMachineScaleSetExtensionPropertiesOutput)
}

// Indicates whether the extension should use a newer minor version if one is
// available at deployment time. Once deployed, however, the extension will not
// upgrade minor versions unless redeployed, even with this property set to true.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgradeMinorVersion
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the extension should be automatically upgraded by the
// platform if there is a newer version of the extension available.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) EnableAutomaticUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpgrade
	}).(pulumi.BoolPtrOutput)
}

// If a value is provided and is different from the previous value, the extension
// handler will be forced to update even if the extension configuration has not
// changed.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ForceUpdateTag
	}).(pulumi.StringPtrOutput)
}

// The extension can contain either protectedSettings or
// protectedSettingsFromKeyVault or no protected settings at all.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProtectedSettings
	}).(pulumi.AnyOutput)
}

// The extensions protected settings that are passed by reference, and consumed
// from key vault
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) ProtectedSettingsFromKeyVault() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *KeyVaultSecretReference {
		if v == nil {
			return nil
		}
		return v.ProtectedSettingsFromKeyVault
	}).(KeyVaultSecretReferencePtrOutput)
}

// Collection of extension names after which this extension needs to be
// provisioned.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) []string {
		if v == nil {
			return nil
		}
		return v.ProvisionAfterExtensions
	}).(pulumi.StringArrayOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.AnyOutput)
}

// Indicates whether failures stemming from the extension will be suppressed
// (Operational failures such as not connecting to the VM will not be suppressed
// regardless of this value). The default is false.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) SuppressFailures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.SuppressFailures
	}).(pulumi.BoolPtrOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineScaleSetExtensionPropertiesPtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionPropertiesResponse struct {
	// Indicates whether the extension should use a newer minor version if one is
	// available at deployment time. Once deployed, however, the extension will not
	// upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Indicates whether the extension should be automatically upgraded by the
	// platform if there is a newer version of the extension available.
	EnableAutomaticUpgrade *bool `pulumi:"enableAutomaticUpgrade"`
	// If a value is provided and is different from the previous value, the extension
	// handler will be forced to update even if the extension configuration has not
	// changed.
	ForceUpdateTag *string `pulumi:"forceUpdateTag"`
	// The extensions protected settings that are passed by reference, and consumed
	// from key vault
	ProtectedSettingsFromKeyVault *KeyVaultSecretReferenceResponse `pulumi:"protectedSettingsFromKeyVault"`
	// Collection of extension names after which this extension needs to be
	// provisioned.
	ProvisionAfterExtensions []string `pulumi:"provisionAfterExtensions"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// Indicates whether failures stemming from the extension will be suppressed
	// (Operational failures such as not connecting to the VM will not be suppressed
	// regardless of this value). The default is false.
	SuppressFailures *bool `pulumi:"suppressFailures"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// Describes the properties of a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) ToVirtualMachineScaleSetExtensionPropertiesResponseOutput() VirtualMachineScaleSetExtensionPropertiesResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) ToVirtualMachineScaleSetExtensionPropertiesResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesResponseOutput {
	return o
}

// Indicates whether the extension should use a newer minor version if one is
// available at deployment time. Once deployed, however, the extension will not
// upgrade minor versions unless redeployed, even with this property set to true.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Indicates whether the extension should be automatically upgraded by the
// platform if there is a newer version of the extension available.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) EnableAutomaticUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *bool { return v.EnableAutomaticUpgrade }).(pulumi.BoolPtrOutput)
}

// If a value is provided and is different from the previous value, the extension
// handler will be forced to update even if the extension configuration has not
// changed.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *string { return v.ForceUpdateTag }).(pulumi.StringPtrOutput)
}

// The extensions protected settings that are passed by reference, and consumed
// from key vault
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) ProtectedSettingsFromKeyVault() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *KeyVaultSecretReferenceResponse {
		return v.ProtectedSettingsFromKeyVault
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

// Collection of extension names after which this extension needs to be
// provisioned.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) []string { return v.ProvisionAfterExtensions }).(pulumi.StringArrayOutput)
}

// The provisioning state, which only appears in the response.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// Indicates whether failures stemming from the extension will be suppressed
// (Operational failures such as not connecting to the VM will not be suppressed
// regardless of this value). The default is false.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) SuppressFailures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *bool { return v.SuppressFailures }).(pulumi.BoolPtrOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineScaleSetExtensionPropertiesResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionPropertiesResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ToVirtualMachineScaleSetExtensionPropertiesResponsePtrOutput() VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ToVirtualMachineScaleSetExtensionPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) Elem() VirtualMachineScaleSetExtensionPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) VirtualMachineScaleSetExtensionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetExtensionPropertiesResponse
		return ret
	}).(VirtualMachineScaleSetExtensionPropertiesResponseOutput)
}

// Indicates whether the extension should use a newer minor version if one is
// available at deployment time. Once deployed, however, the extension will not
// upgrade minor versions unless redeployed, even with this property set to true.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgradeMinorVersion
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the extension should be automatically upgraded by the
// platform if there is a newer version of the extension available.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) EnableAutomaticUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpgrade
	}).(pulumi.BoolPtrOutput)
}

// If a value is provided and is different from the previous value, the extension
// handler will be forced to update even if the extension configuration has not
// changed.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ForceUpdateTag
	}).(pulumi.StringPtrOutput)
}

// The extensions protected settings that are passed by reference, and consumed
// from key vault
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ProtectedSettingsFromKeyVault() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *KeyVaultSecretReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedSettingsFromKeyVault
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

// Collection of extension names after which this extension needs to be
// provisioned.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ProvisionAfterExtensions
	}).(pulumi.StringArrayOutput)
}

// The provisioning state, which only appears in the response.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.AnyOutput)
}

// Indicates whether failures stemming from the extension will be suppressed
// (Operational failures such as not connecting to the VM will not be suppressed
// regardless of this value). The default is false.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) SuppressFailures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SuppressFailures
	}).(pulumi.BoolPtrOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Describes the properties of a Virtual Machine Scale Set Extension.
	Properties *VirtualMachineScaleSetExtensionPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionResponseOutput) ToVirtualMachineScaleSetExtensionResponseOutput() VirtualMachineScaleSetExtensionResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionResponseOutput) ToVirtualMachineScaleSetExtensionResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionResponseOutput {
	return o
}

// Resource Id
func (o VirtualMachineScaleSetExtensionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the extension.
func (o VirtualMachineScaleSetExtensionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes the properties of a Virtual Machine Scale Set Extension.
func (o VirtualMachineScaleSetExtensionResponseOutput) Properties() VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *VirtualMachineScaleSetExtensionPropertiesResponse {
		return v.Properties
	}).(VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput)
}

// Resource type
func (o VirtualMachineScaleSetExtensionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualMachineScaleSetExtensionResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtensionResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionResponseArrayOutput) ToVirtualMachineScaleSetExtensionResponseArrayOutput() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionResponseArrayOutput) ToVirtualMachineScaleSetExtensionResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetExtensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetExtensionResponse {
		return vs[0].([]VirtualMachineScaleSetExtensionResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetExtensionResponseOutput)
}

// Specifies the hardware settings for the virtual machine scale set.
type VirtualMachineScaleSetHardwareProfile struct {
	// Specifies the properties for customizing the size of the virtual machine.
	// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
	// Customization](https://aka.ms/vmcustomization) for more details.
	VmSizeProperties *VMSizeProperties `pulumi:"vmSizeProperties"`
}

// VirtualMachineScaleSetHardwareProfileInput is an input type that accepts VirtualMachineScaleSetHardwareProfileArgs and VirtualMachineScaleSetHardwareProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetHardwareProfileInput` via:
//
//	VirtualMachineScaleSetHardwareProfileArgs{...}
type VirtualMachineScaleSetHardwareProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetHardwareProfileOutput() VirtualMachineScaleSetHardwareProfileOutput
	ToVirtualMachineScaleSetHardwareProfileOutputWithContext(context.Context) VirtualMachineScaleSetHardwareProfileOutput
}

// Specifies the hardware settings for the virtual machine scale set.
type VirtualMachineScaleSetHardwareProfileArgs struct {
	// Specifies the properties for customizing the size of the virtual machine.
	// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
	// Customization](https://aka.ms/vmcustomization) for more details.
	VmSizeProperties VMSizePropertiesPtrInput `pulumi:"vmSizeProperties"`
}

func (VirtualMachineScaleSetHardwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetHardwareProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetHardwareProfileArgs) ToVirtualMachineScaleSetHardwareProfileOutput() VirtualMachineScaleSetHardwareProfileOutput {
	return i.ToVirtualMachineScaleSetHardwareProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetHardwareProfileArgs) ToVirtualMachineScaleSetHardwareProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetHardwareProfileOutput)
}

func (i VirtualMachineScaleSetHardwareProfileArgs) ToVirtualMachineScaleSetHardwareProfilePtrOutput() VirtualMachineScaleSetHardwareProfilePtrOutput {
	return i.ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetHardwareProfileArgs) ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetHardwareProfileOutput).ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetHardwareProfilePtrInput is an input type that accepts VirtualMachineScaleSetHardwareProfileArgs, VirtualMachineScaleSetHardwareProfilePtr and VirtualMachineScaleSetHardwareProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetHardwareProfilePtrInput` via:
//
//	        VirtualMachineScaleSetHardwareProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetHardwareProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetHardwareProfilePtrOutput() VirtualMachineScaleSetHardwareProfilePtrOutput
	ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetHardwareProfilePtrOutput
}

type virtualMachineScaleSetHardwareProfilePtrType VirtualMachineScaleSetHardwareProfileArgs

func VirtualMachineScaleSetHardwareProfilePtr(v *VirtualMachineScaleSetHardwareProfileArgs) VirtualMachineScaleSetHardwareProfilePtrInput {
	return (*virtualMachineScaleSetHardwareProfilePtrType)(v)
}

func (*virtualMachineScaleSetHardwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetHardwareProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetHardwareProfilePtrType) ToVirtualMachineScaleSetHardwareProfilePtrOutput() VirtualMachineScaleSetHardwareProfilePtrOutput {
	return i.ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetHardwareProfilePtrType) ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetHardwareProfilePtrOutput)
}

// Specifies the hardware settings for the virtual machine scale set.
type VirtualMachineScaleSetHardwareProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetHardwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetHardwareProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetHardwareProfileOutput) ToVirtualMachineScaleSetHardwareProfileOutput() VirtualMachineScaleSetHardwareProfileOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfileOutput) ToVirtualMachineScaleSetHardwareProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfileOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfileOutput) ToVirtualMachineScaleSetHardwareProfilePtrOutput() VirtualMachineScaleSetHardwareProfilePtrOutput {
	return o.ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetHardwareProfileOutput) ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetHardwareProfile) *VirtualMachineScaleSetHardwareProfile {
		return &v
	}).(VirtualMachineScaleSetHardwareProfilePtrOutput)
}

// Specifies the properties for customizing the size of the virtual machine.
// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
// Customization](https://aka.ms/vmcustomization) for more details.
func (o VirtualMachineScaleSetHardwareProfileOutput) VmSizeProperties() VMSizePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetHardwareProfile) *VMSizeProperties { return v.VmSizeProperties }).(VMSizePropertiesPtrOutput)
}

type VirtualMachineScaleSetHardwareProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetHardwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetHardwareProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetHardwareProfilePtrOutput) ToVirtualMachineScaleSetHardwareProfilePtrOutput() VirtualMachineScaleSetHardwareProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfilePtrOutput) ToVirtualMachineScaleSetHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfilePtrOutput) Elem() VirtualMachineScaleSetHardwareProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetHardwareProfile) VirtualMachineScaleSetHardwareProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetHardwareProfile
		return ret
	}).(VirtualMachineScaleSetHardwareProfileOutput)
}

// Specifies the properties for customizing the size of the virtual machine.
// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
// Customization](https://aka.ms/vmcustomization) for more details.
func (o VirtualMachineScaleSetHardwareProfilePtrOutput) VmSizeProperties() VMSizePropertiesPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetHardwareProfile) *VMSizeProperties {
		if v == nil {
			return nil
		}
		return v.VmSizeProperties
	}).(VMSizePropertiesPtrOutput)
}

// Specifies the hardware settings for the virtual machine scale set.
type VirtualMachineScaleSetHardwareProfileResponse struct {
	// Specifies the properties for customizing the size of the virtual machine.
	// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
	// Customization](https://aka.ms/vmcustomization) for more details.
	VmSizeProperties *VMSizePropertiesResponse `pulumi:"vmSizeProperties"`
}

// Specifies the hardware settings for the virtual machine scale set.
type VirtualMachineScaleSetHardwareProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetHardwareProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetHardwareProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetHardwareProfileResponseOutput) ToVirtualMachineScaleSetHardwareProfileResponseOutput() VirtualMachineScaleSetHardwareProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfileResponseOutput) ToVirtualMachineScaleSetHardwareProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfileResponseOutput {
	return o
}

// Specifies the properties for customizing the size of the virtual machine.
// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
// Customization](https://aka.ms/vmcustomization) for more details.
func (o VirtualMachineScaleSetHardwareProfileResponseOutput) VmSizeProperties() VMSizePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetHardwareProfileResponse) *VMSizePropertiesResponse {
		return v.VmSizeProperties
	}).(VMSizePropertiesResponsePtrOutput)
}

type VirtualMachineScaleSetHardwareProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetHardwareProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetHardwareProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetHardwareProfileResponsePtrOutput) ToVirtualMachineScaleSetHardwareProfileResponsePtrOutput() VirtualMachineScaleSetHardwareProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfileResponsePtrOutput) ToVirtualMachineScaleSetHardwareProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetHardwareProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetHardwareProfileResponsePtrOutput) Elem() VirtualMachineScaleSetHardwareProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetHardwareProfileResponse) VirtualMachineScaleSetHardwareProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetHardwareProfileResponse
		return ret
	}).(VirtualMachineScaleSetHardwareProfileResponseOutput)
}

// Specifies the properties for customizing the size of the virtual machine.
// Minimum api-version: 2021-11-01. Please follow the instructions in [VM
// Customization](https://aka.ms/vmcustomization) for more details.
func (o VirtualMachineScaleSetHardwareProfileResponsePtrOutput) VmSizeProperties() VMSizePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetHardwareProfileResponse) *VMSizePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.VmSizeProperties
	}).(VMSizePropertiesResponsePtrOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfiguration struct {
	// The IP configuration name.
	Name string `pulumi:"name"`
	// Describes a virtual machine scale set network profile's IP configuration
	// properties.
	Properties *VirtualMachineScaleSetIPConfigurationProperties `pulumi:"properties"`
}

// VirtualMachineScaleSetIPConfigurationInput is an input type that accepts VirtualMachineScaleSetIPConfigurationArgs and VirtualMachineScaleSetIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationInput` via:
//
//	VirtualMachineScaleSetIPConfigurationArgs{...}
type VirtualMachineScaleSetIPConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationOutput() VirtualMachineScaleSetIPConfigurationOutput
	ToVirtualMachineScaleSetIPConfigurationOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationOutput
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationArgs struct {
	// The IP configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Describes a virtual machine scale set network profile's IP configuration
	// properties.
	Properties VirtualMachineScaleSetIPConfigurationPropertiesPtrInput `pulumi:"properties"`
}

func (VirtualMachineScaleSetIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationArgs) ToVirtualMachineScaleSetIPConfigurationOutput() VirtualMachineScaleSetIPConfigurationOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationArgs) ToVirtualMachineScaleSetIPConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationOutput)
}

// VirtualMachineScaleSetIPConfigurationArrayInput is an input type that accepts VirtualMachineScaleSetIPConfigurationArray and VirtualMachineScaleSetIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationArrayInput` via:
//
//	VirtualMachineScaleSetIPConfigurationArray{ VirtualMachineScaleSetIPConfigurationArgs{...} }
type VirtualMachineScaleSetIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationArrayOutput() VirtualMachineScaleSetIPConfigurationArrayOutput
	ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationArrayOutput
}

type VirtualMachineScaleSetIPConfigurationArray []VirtualMachineScaleSetIPConfigurationInput

func (VirtualMachineScaleSetIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationArray) ToVirtualMachineScaleSetIPConfigurationArrayOutput() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationArray) ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationArrayOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationOutput) ToVirtualMachineScaleSetIPConfigurationOutput() VirtualMachineScaleSetIPConfigurationOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationOutput) ToVirtualMachineScaleSetIPConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationOutput {
	return o
}

// The IP configuration name.
func (o VirtualMachineScaleSetIPConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
func (o VirtualMachineScaleSetIPConfigurationOutput) Properties() VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) *VirtualMachineScaleSetIPConfigurationProperties {
		return v.Properties
	}).(VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput)
}

type VirtualMachineScaleSetIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationArrayOutput) ToVirtualMachineScaleSetIPConfigurationArrayOutput() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationArrayOutput) ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIPConfiguration {
		return vs[0].([]VirtualMachineScaleSetIPConfiguration)[vs[1].(int)]
	}).(VirtualMachineScaleSetIPConfigurationOutput)
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
type VirtualMachineScaleSetIPConfigurationProperties struct {
	// Specifies an array of references to backend address pools of application
	// gateways. A scale set can reference backend address pools of multiple
	// application gateways. Multiple scale sets cannot use the same application
	// gateway.
	ApplicationGatewayBackendAddressPools []SubResource `pulumi:"applicationGatewayBackendAddressPools"`
	// Specifies an array of references to application security group.
	ApplicationSecurityGroups []SubResource `pulumi:"applicationSecurityGroups"`
	// Specifies an array of references to backend address pools of load balancers. A
	// scale set can reference backend address pools of one public and one internal
	// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
	LoadBalancerBackendAddressPools []SubResource `pulumi:"loadBalancerBackendAddressPools"`
	// Specifies an array of references to inbound Nat pools of the load balancers. A
	// scale set can reference inbound nat pools of one public and one internal load
	// balancer. Multiple scale sets cannot use the same basic sku load balancer.
	LoadBalancerInboundNatPools []SubResource `pulumi:"loadBalancerInboundNatPools"`
	// Specifies the primary network interface in case the virtual machine has more
	// than 1 network interface.
	Primary *bool `pulumi:"primary"`
	// Available from Api-Version 2017-03-30 onwards, it represents whether the
	// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
	// values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The publicIPAddressConfiguration.
	PublicIPAddressConfiguration *VirtualMachineScaleSetPublicIPAddressConfiguration `pulumi:"publicIPAddressConfiguration"`
	// Specifies the identifier of the subnet.
	Subnet *ApiEntityReference `pulumi:"subnet"`
}

// VirtualMachineScaleSetIPConfigurationPropertiesInput is an input type that accepts VirtualMachineScaleSetIPConfigurationPropertiesArgs and VirtualMachineScaleSetIPConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationPropertiesInput` via:
//
//	VirtualMachineScaleSetIPConfigurationPropertiesArgs{...}
type VirtualMachineScaleSetIPConfigurationPropertiesInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationPropertiesOutput() VirtualMachineScaleSetIPConfigurationPropertiesOutput
	ToVirtualMachineScaleSetIPConfigurationPropertiesOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationPropertiesOutput
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
type VirtualMachineScaleSetIPConfigurationPropertiesArgs struct {
	// Specifies an array of references to backend address pools of application
	// gateways. A scale set can reference backend address pools of multiple
	// application gateways. Multiple scale sets cannot use the same application
	// gateway.
	ApplicationGatewayBackendAddressPools SubResourceArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Specifies an array of references to application security group.
	ApplicationSecurityGroups SubResourceArrayInput `pulumi:"applicationSecurityGroups"`
	// Specifies an array of references to backend address pools of load balancers. A
	// scale set can reference backend address pools of one public and one internal
	// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
	LoadBalancerBackendAddressPools SubResourceArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// Specifies an array of references to inbound Nat pools of the load balancers. A
	// scale set can reference inbound nat pools of one public and one internal load
	// balancer. Multiple scale sets cannot use the same basic sku load balancer.
	LoadBalancerInboundNatPools SubResourceArrayInput `pulumi:"loadBalancerInboundNatPools"`
	// Specifies the primary network interface in case the virtual machine has more
	// than 1 network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Available from Api-Version 2017-03-30 onwards, it represents whether the
	// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
	// values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The publicIPAddressConfiguration.
	PublicIPAddressConfiguration VirtualMachineScaleSetPublicIPAddressConfigurationPtrInput `pulumi:"publicIPAddressConfiguration"`
	// Specifies the identifier of the subnet.
	Subnet ApiEntityReferencePtrInput `pulumi:"subnet"`
}

func (VirtualMachineScaleSetIPConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationProperties)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationPropertiesArgs) ToVirtualMachineScaleSetIPConfigurationPropertiesOutput() VirtualMachineScaleSetIPConfigurationPropertiesOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationPropertiesArgs) ToVirtualMachineScaleSetIPConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationPropertiesOutput)
}

func (i VirtualMachineScaleSetIPConfigurationPropertiesArgs) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutput() VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationPropertiesArgs) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationPropertiesOutput).ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetIPConfigurationPropertiesPtrInput is an input type that accepts VirtualMachineScaleSetIPConfigurationPropertiesArgs, VirtualMachineScaleSetIPConfigurationPropertiesPtr and VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationPropertiesPtrInput` via:
//
//	        VirtualMachineScaleSetIPConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetIPConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutput() VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput
	ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput
}

type virtualMachineScaleSetIPConfigurationPropertiesPtrType VirtualMachineScaleSetIPConfigurationPropertiesArgs

func VirtualMachineScaleSetIPConfigurationPropertiesPtr(v *VirtualMachineScaleSetIPConfigurationPropertiesArgs) VirtualMachineScaleSetIPConfigurationPropertiesPtrInput {
	return (*virtualMachineScaleSetIPConfigurationPropertiesPtrType)(v)
}

func (*virtualMachineScaleSetIPConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIPConfigurationProperties)(nil)).Elem()
}

func (i *virtualMachineScaleSetIPConfigurationPropertiesPtrType) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutput() VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetIPConfigurationPropertiesPtrType) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput)
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
type VirtualMachineScaleSetIPConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesOutput() VirtualMachineScaleSetIPConfigurationPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutput() VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return o.ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetIPConfigurationProperties) *VirtualMachineScaleSetIPConfigurationProperties {
		return &v
	}).(VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput)
}

// Specifies an array of references to backend address pools of application
// gateways. A scale set can reference backend address pools of multiple
// application gateways. Multiple scale sets cannot use the same application
// gateway.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) ApplicationGatewayBackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceArrayOutput)
}

// Specifies an array of references to application security group.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) ApplicationSecurityGroups() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		return v.ApplicationSecurityGroups
	}).(SubResourceArrayOutput)
}

// Specifies an array of references to backend address pools of load balancers. A
// scale set can reference backend address pools of one public and one internal
// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) LoadBalancerBackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		return v.LoadBalancerBackendAddressPools
	}).(SubResourceArrayOutput)
}

// Specifies an array of references to inbound Nat pools of the load balancers. A
// scale set can reference inbound nat pools of one public and one internal load
// balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) LoadBalancerInboundNatPools() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		return v.LoadBalancerInboundNatPools
	}).(SubResourceArrayOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Available from Api-Version 2017-03-30 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The publicIPAddressConfiguration.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) PublicIPAddressConfiguration() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) *VirtualMachineScaleSetPublicIPAddressConfiguration {
		return v.PublicIPAddressConfiguration
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput)
}

// Specifies the identifier of the subnet.
func (o VirtualMachineScaleSetIPConfigurationPropertiesOutput) Subnet() ApiEntityReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationProperties) *ApiEntityReference { return v.Subnet }).(ApiEntityReferencePtrOutput)
}

type VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIPConfigurationProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutput() VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) Elem() VirtualMachineScaleSetIPConfigurationPropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) VirtualMachineScaleSetIPConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetIPConfigurationProperties
		return ret
	}).(VirtualMachineScaleSetIPConfigurationPropertiesOutput)
}

// Specifies an array of references to backend address pools of application
// gateways. A scale set can reference backend address pools of multiple
// application gateways. Multiple scale sets cannot use the same application
// gateway.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) ApplicationGatewayBackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceArrayOutput)
}

// Specifies an array of references to application security group.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) ApplicationSecurityGroups() SubResourceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(SubResourceArrayOutput)
}

// Specifies an array of references to backend address pools of load balancers. A
// scale set can reference backend address pools of one public and one internal
// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) LoadBalancerBackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(SubResourceArrayOutput)
}

// Specifies an array of references to inbound Nat pools of the load balancers. A
// scale set can reference inbound nat pools of one public and one internal load
// balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) LoadBalancerInboundNatPools() SubResourceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) []SubResource {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatPools
	}).(SubResourceArrayOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Available from Api-Version 2017-03-30 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The publicIPAddressConfiguration.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) PublicIPAddressConfiguration() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) *VirtualMachineScaleSetPublicIPAddressConfiguration {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressConfiguration
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput)
}

// Specifies the identifier of the subnet.
func (o VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput) Subnet() ApiEntityReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationProperties) *ApiEntityReference {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ApiEntityReferencePtrOutput)
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
type VirtualMachineScaleSetIPConfigurationPropertiesResponse struct {
	// Specifies an array of references to backend address pools of application
	// gateways. A scale set can reference backend address pools of multiple
	// application gateways. Multiple scale sets cannot use the same application
	// gateway.
	ApplicationGatewayBackendAddressPools []SubResourceResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Specifies an array of references to application security group.
	ApplicationSecurityGroups []SubResourceResponse `pulumi:"applicationSecurityGroups"`
	// Specifies an array of references to backend address pools of load balancers. A
	// scale set can reference backend address pools of one public and one internal
	// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
	LoadBalancerBackendAddressPools []SubResourceResponse `pulumi:"loadBalancerBackendAddressPools"`
	// Specifies an array of references to inbound Nat pools of the load balancers. A
	// scale set can reference inbound nat pools of one public and one internal load
	// balancer. Multiple scale sets cannot use the same basic sku load balancer.
	LoadBalancerInboundNatPools []SubResourceResponse `pulumi:"loadBalancerInboundNatPools"`
	// Specifies the primary network interface in case the virtual machine has more
	// than 1 network interface.
	Primary *bool `pulumi:"primary"`
	// Available from Api-Version 2017-03-30 onwards, it represents whether the
	// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
	// values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The publicIPAddressConfiguration.
	PublicIPAddressConfiguration *VirtualMachineScaleSetPublicIPAddressConfigurationResponse `pulumi:"publicIPAddressConfiguration"`
	// Specifies the identifier of the subnet.
	Subnet *ApiEntityReferenceResponse `pulumi:"subnet"`
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
type VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesResponseOutput() VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput {
	return o
}

// Specifies an array of references to backend address pools of application
// gateways. A scale set can reference backend address pools of multiple
// application gateways. Multiple scale sets cannot use the same application
// gateway.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) ApplicationGatewayBackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceResponseArrayOutput)
}

// Specifies an array of references to application security group.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) ApplicationSecurityGroups() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		return v.ApplicationSecurityGroups
	}).(SubResourceResponseArrayOutput)
}

// Specifies an array of references to backend address pools of load balancers. A
// scale set can reference backend address pools of one public and one internal
// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) LoadBalancerBackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		return v.LoadBalancerBackendAddressPools
	}).(SubResourceResponseArrayOutput)
}

// Specifies an array of references to inbound Nat pools of the load balancers. A
// scale set can reference inbound nat pools of one public and one internal load
// balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) LoadBalancerInboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		return v.LoadBalancerInboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Available from Api-Version 2017-03-30 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) *string {
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The publicIPAddressConfiguration.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) PublicIPAddressConfiguration() VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) *VirtualMachineScaleSetPublicIPAddressConfigurationResponse {
		return v.PublicIPAddressConfiguration
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput)
}

// Specifies the identifier of the subnet.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput) Subnet() ApiEntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationPropertiesResponse) *ApiEntityReferenceResponse {
		return v.Subnet
	}).(ApiEntityReferenceResponsePtrOutput)
}

type VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput() VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) ToVirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) Elem() VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) VirtualMachineScaleSetIPConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetIPConfigurationPropertiesResponse
		return ret
	}).(VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput)
}

// Specifies an array of references to backend address pools of application
// gateways. A scale set can reference backend address pools of multiple
// application gateways. Multiple scale sets cannot use the same application
// gateway.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) ApplicationGatewayBackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceResponseArrayOutput)
}

// Specifies an array of references to application security group.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) ApplicationSecurityGroups() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(SubResourceResponseArrayOutput)
}

// Specifies an array of references to backend address pools of load balancers. A
// scale set can reference backend address pools of one public and one internal
// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) LoadBalancerBackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(SubResourceResponseArrayOutput)
}

// Specifies an array of references to inbound Nat pools of the load balancers. A
// scale set can reference inbound nat pools of one public and one internal load
// balancer. Multiple scale sets cannot use the same basic sku load balancer.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) LoadBalancerInboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Available from Api-Version 2017-03-30 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The publicIPAddressConfiguration.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) PublicIPAddressConfiguration() VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) *VirtualMachineScaleSetPublicIPAddressConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressConfiguration
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput)
}

// Specifies the identifier of the subnet.
func (o VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput) Subnet() ApiEntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIPConfigurationPropertiesResponse) *ApiEntityReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ApiEntityReferenceResponsePtrOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationResponse struct {
	// The IP configuration name.
	Name string `pulumi:"name"`
	// Describes a virtual machine scale set network profile's IP configuration
	// properties.
	Properties *VirtualMachineScaleSetIPConfigurationPropertiesResponse `pulumi:"properties"`
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationResponseOutput) ToVirtualMachineScaleSetIPConfigurationResponseOutput() VirtualMachineScaleSetIPConfigurationResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationResponseOutput) ToVirtualMachineScaleSetIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationResponseOutput {
	return o
}

// The IP configuration name.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a virtual machine scale set network profile's IP configuration
// properties.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) Properties() VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) *VirtualMachineScaleSetIPConfigurationPropertiesResponse {
		return v.Properties
	}).(VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput)
}

type VirtualMachineScaleSetIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationResponseArrayOutput) ToVirtualMachineScaleSetIPConfigurationResponseArrayOutput() VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationResponseArrayOutput) ToVirtualMachineScaleSetIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIPConfigurationResponse {
		return vs[0].([]VirtualMachineScaleSetIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetIPConfigurationResponseOutput)
}

// Contains the IP tag associated with the public IP address.
type VirtualMachineScaleSetIpTag struct {
	// IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// IP tag associated with the public IP. Example: SQL, Storage etc.
	Tag *string `pulumi:"tag"`
}

// VirtualMachineScaleSetIpTagInput is an input type that accepts VirtualMachineScaleSetIpTagArgs and VirtualMachineScaleSetIpTagOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIpTagInput` via:
//
//	VirtualMachineScaleSetIpTagArgs{...}
type VirtualMachineScaleSetIpTagInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIpTagOutput() VirtualMachineScaleSetIpTagOutput
	ToVirtualMachineScaleSetIpTagOutputWithContext(context.Context) VirtualMachineScaleSetIpTagOutput
}

// Contains the IP tag associated with the public IP address.
type VirtualMachineScaleSetIpTagArgs struct {
	// IP tag type. Example: FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// IP tag associated with the public IP. Example: SQL, Storage etc.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (VirtualMachineScaleSetIpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIpTag)(nil)).Elem()
}

func (i VirtualMachineScaleSetIpTagArgs) ToVirtualMachineScaleSetIpTagOutput() VirtualMachineScaleSetIpTagOutput {
	return i.ToVirtualMachineScaleSetIpTagOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIpTagArgs) ToVirtualMachineScaleSetIpTagOutputWithContext(ctx context.Context) VirtualMachineScaleSetIpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIpTagOutput)
}

// VirtualMachineScaleSetIpTagArrayInput is an input type that accepts VirtualMachineScaleSetIpTagArray and VirtualMachineScaleSetIpTagArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIpTagArrayInput` via:
//
//	VirtualMachineScaleSetIpTagArray{ VirtualMachineScaleSetIpTagArgs{...} }
type VirtualMachineScaleSetIpTagArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIpTagArrayOutput() VirtualMachineScaleSetIpTagArrayOutput
	ToVirtualMachineScaleSetIpTagArrayOutputWithContext(context.Context) VirtualMachineScaleSetIpTagArrayOutput
}

type VirtualMachineScaleSetIpTagArray []VirtualMachineScaleSetIpTagInput

func (VirtualMachineScaleSetIpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIpTag)(nil)).Elem()
}

func (i VirtualMachineScaleSetIpTagArray) ToVirtualMachineScaleSetIpTagArrayOutput() VirtualMachineScaleSetIpTagArrayOutput {
	return i.ToVirtualMachineScaleSetIpTagArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIpTagArray) ToVirtualMachineScaleSetIpTagArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIpTagArrayOutput)
}

// Contains the IP tag associated with the public IP address.
type VirtualMachineScaleSetIpTagOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIpTag)(nil)).Elem()
}

func (o VirtualMachineScaleSetIpTagOutput) ToVirtualMachineScaleSetIpTagOutput() VirtualMachineScaleSetIpTagOutput {
	return o
}

func (o VirtualMachineScaleSetIpTagOutput) ToVirtualMachineScaleSetIpTagOutputWithContext(ctx context.Context) VirtualMachineScaleSetIpTagOutput {
	return o
}

// IP tag type. Example: FirstPartyUsage.
func (o VirtualMachineScaleSetIpTagOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIpTag) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// IP tag associated with the public IP. Example: SQL, Storage etc.
func (o VirtualMachineScaleSetIpTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIpTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetIpTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIpTag)(nil)).Elem()
}

func (o VirtualMachineScaleSetIpTagArrayOutput) ToVirtualMachineScaleSetIpTagArrayOutput() VirtualMachineScaleSetIpTagArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIpTagArrayOutput) ToVirtualMachineScaleSetIpTagArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIpTagArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIpTagArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIpTag {
		return vs[0].([]VirtualMachineScaleSetIpTag)[vs[1].(int)]
	}).(VirtualMachineScaleSetIpTagOutput)
}

// Contains the IP tag associated with the public IP address.
type VirtualMachineScaleSetIpTagResponse struct {
	// IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// IP tag associated with the public IP. Example: SQL, Storage etc.
	Tag *string `pulumi:"tag"`
}

// Contains the IP tag associated with the public IP address.
type VirtualMachineScaleSetIpTagResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIpTagResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIpTagResponseOutput) ToVirtualMachineScaleSetIpTagResponseOutput() VirtualMachineScaleSetIpTagResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIpTagResponseOutput) ToVirtualMachineScaleSetIpTagResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIpTagResponseOutput {
	return o
}

// IP tag type. Example: FirstPartyUsage.
func (o VirtualMachineScaleSetIpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// IP tag associated with the public IP. Example: SQL, Storage etc.
func (o VirtualMachineScaleSetIpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetIpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIpTagResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIpTagResponseArrayOutput) ToVirtualMachineScaleSetIpTagResponseArrayOutput() VirtualMachineScaleSetIpTagResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIpTagResponseArrayOutput) ToVirtualMachineScaleSetIpTagResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIpTagResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIpTagResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIpTagResponse {
		return vs[0].([]VirtualMachineScaleSetIpTagResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetIpTagResponseOutput)
}

// Describes the parameters of a ScaleSet managed disk.
type VirtualMachineScaleSetManagedDiskParameters struct {
	// Specifies the customer managed disk encryption set resource id for the managed
	// disk.
	DiskEncryptionSet *DiskEncryptionSetParameters `pulumi:"diskEncryptionSet"`
	// Specifies the security profile for the managed disk.
	SecurityProfile *VMDiskSecurityProfile `pulumi:"securityProfile"`
	// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
	// only be used with data disks, it cannot be used with OS Disk.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// VirtualMachineScaleSetManagedDiskParametersInput is an input type that accepts VirtualMachineScaleSetManagedDiskParametersArgs and VirtualMachineScaleSetManagedDiskParametersOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetManagedDiskParametersInput` via:
//
//	VirtualMachineScaleSetManagedDiskParametersArgs{...}
type VirtualMachineScaleSetManagedDiskParametersInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetManagedDiskParametersOutput() VirtualMachineScaleSetManagedDiskParametersOutput
	ToVirtualMachineScaleSetManagedDiskParametersOutputWithContext(context.Context) VirtualMachineScaleSetManagedDiskParametersOutput
}

// Describes the parameters of a ScaleSet managed disk.
type VirtualMachineScaleSetManagedDiskParametersArgs struct {
	// Specifies the customer managed disk encryption set resource id for the managed
	// disk.
	DiskEncryptionSet DiskEncryptionSetParametersPtrInput `pulumi:"diskEncryptionSet"`
	// Specifies the security profile for the managed disk.
	SecurityProfile VMDiskSecurityProfilePtrInput `pulumi:"securityProfile"`
	// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
	// only be used with data disks, it cannot be used with OS Disk.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (VirtualMachineScaleSetManagedDiskParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetManagedDiskParameters)(nil)).Elem()
}

func (i VirtualMachineScaleSetManagedDiskParametersArgs) ToVirtualMachineScaleSetManagedDiskParametersOutput() VirtualMachineScaleSetManagedDiskParametersOutput {
	return i.ToVirtualMachineScaleSetManagedDiskParametersOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetManagedDiskParametersArgs) ToVirtualMachineScaleSetManagedDiskParametersOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetManagedDiskParametersOutput)
}

func (i VirtualMachineScaleSetManagedDiskParametersArgs) ToVirtualMachineScaleSetManagedDiskParametersPtrOutput() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return i.ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetManagedDiskParametersArgs) ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetManagedDiskParametersOutput).ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetManagedDiskParametersPtrInput is an input type that accepts VirtualMachineScaleSetManagedDiskParametersArgs, VirtualMachineScaleSetManagedDiskParametersPtr and VirtualMachineScaleSetManagedDiskParametersPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetManagedDiskParametersPtrInput` via:
//
//	        VirtualMachineScaleSetManagedDiskParametersArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetManagedDiskParametersPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetManagedDiskParametersPtrOutput() VirtualMachineScaleSetManagedDiskParametersPtrOutput
	ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(context.Context) VirtualMachineScaleSetManagedDiskParametersPtrOutput
}

type virtualMachineScaleSetManagedDiskParametersPtrType VirtualMachineScaleSetManagedDiskParametersArgs

func VirtualMachineScaleSetManagedDiskParametersPtr(v *VirtualMachineScaleSetManagedDiskParametersArgs) VirtualMachineScaleSetManagedDiskParametersPtrInput {
	return (*virtualMachineScaleSetManagedDiskParametersPtrType)(v)
}

func (*virtualMachineScaleSetManagedDiskParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetManagedDiskParameters)(nil)).Elem()
}

func (i *virtualMachineScaleSetManagedDiskParametersPtrType) ToVirtualMachineScaleSetManagedDiskParametersPtrOutput() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return i.ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetManagedDiskParametersPtrType) ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetManagedDiskParametersPtrOutput)
}

// Describes the parameters of a ScaleSet managed disk.
type VirtualMachineScaleSetManagedDiskParametersOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetManagedDiskParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetManagedDiskParameters)(nil)).Elem()
}

func (o VirtualMachineScaleSetManagedDiskParametersOutput) ToVirtualMachineScaleSetManagedDiskParametersOutput() VirtualMachineScaleSetManagedDiskParametersOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersOutput) ToVirtualMachineScaleSetManagedDiskParametersOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersOutput) ToVirtualMachineScaleSetManagedDiskParametersPtrOutput() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o.ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetManagedDiskParametersOutput) ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetManagedDiskParameters) *VirtualMachineScaleSetManagedDiskParameters {
		return &v
	}).(VirtualMachineScaleSetManagedDiskParametersPtrOutput)
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk.
func (o VirtualMachineScaleSetManagedDiskParametersOutput) DiskEncryptionSet() DiskEncryptionSetParametersPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetManagedDiskParameters) *DiskEncryptionSetParameters {
		return v.DiskEncryptionSet
	}).(DiskEncryptionSetParametersPtrOutput)
}

// Specifies the security profile for the managed disk.
func (o VirtualMachineScaleSetManagedDiskParametersOutput) SecurityProfile() VMDiskSecurityProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetManagedDiskParameters) *VMDiskSecurityProfile { return v.SecurityProfile }).(VMDiskSecurityProfilePtrOutput)
}

// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
// only be used with data disks, it cannot be used with OS Disk.
func (o VirtualMachineScaleSetManagedDiskParametersOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetManagedDiskParameters) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetManagedDiskParametersPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetManagedDiskParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetManagedDiskParameters)(nil)).Elem()
}

func (o VirtualMachineScaleSetManagedDiskParametersPtrOutput) ToVirtualMachineScaleSetManagedDiskParametersPtrOutput() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersPtrOutput) ToVirtualMachineScaleSetManagedDiskParametersPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersPtrOutput) Elem() VirtualMachineScaleSetManagedDiskParametersOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParameters) VirtualMachineScaleSetManagedDiskParameters {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetManagedDiskParameters
		return ret
	}).(VirtualMachineScaleSetManagedDiskParametersOutput)
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk.
func (o VirtualMachineScaleSetManagedDiskParametersPtrOutput) DiskEncryptionSet() DiskEncryptionSetParametersPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParameters) *DiskEncryptionSetParameters {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSet
	}).(DiskEncryptionSetParametersPtrOutput)
}

// Specifies the security profile for the managed disk.
func (o VirtualMachineScaleSetManagedDiskParametersPtrOutput) SecurityProfile() VMDiskSecurityProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParameters) *VMDiskSecurityProfile {
		if v == nil {
			return nil
		}
		return v.SecurityProfile
	}).(VMDiskSecurityProfilePtrOutput)
}

// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
// only be used with data disks, it cannot be used with OS Disk.
func (o VirtualMachineScaleSetManagedDiskParametersPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParameters) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Describes the parameters of a ScaleSet managed disk.
type VirtualMachineScaleSetManagedDiskParametersResponse struct {
	// Specifies the customer managed disk encryption set resource id for the managed
	// disk.
	DiskEncryptionSet *DiskEncryptionSetParametersResponse `pulumi:"diskEncryptionSet"`
	// Specifies the security profile for the managed disk.
	SecurityProfile *VMDiskSecurityProfileResponse `pulumi:"securityProfile"`
	// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
	// only be used with data disks, it cannot be used with OS Disk.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// Describes the parameters of a ScaleSet managed disk.
type VirtualMachineScaleSetManagedDiskParametersResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetManagedDiskParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetManagedDiskParametersResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetManagedDiskParametersResponseOutput) ToVirtualMachineScaleSetManagedDiskParametersResponseOutput() VirtualMachineScaleSetManagedDiskParametersResponseOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersResponseOutput) ToVirtualMachineScaleSetManagedDiskParametersResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersResponseOutput {
	return o
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk.
func (o VirtualMachineScaleSetManagedDiskParametersResponseOutput) DiskEncryptionSet() DiskEncryptionSetParametersResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetManagedDiskParametersResponse) *DiskEncryptionSetParametersResponse {
		return v.DiskEncryptionSet
	}).(DiskEncryptionSetParametersResponsePtrOutput)
}

// Specifies the security profile for the managed disk.
func (o VirtualMachineScaleSetManagedDiskParametersResponseOutput) SecurityProfile() VMDiskSecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetManagedDiskParametersResponse) *VMDiskSecurityProfileResponse {
		return v.SecurityProfile
	}).(VMDiskSecurityProfileResponsePtrOutput)
}

// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
// only be used with data disks, it cannot be used with OS Disk.
func (o VirtualMachineScaleSetManagedDiskParametersResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetManagedDiskParametersResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetManagedDiskParametersResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) ToVirtualMachineScaleSetManagedDiskParametersResponsePtrOutput() VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) ToVirtualMachineScaleSetManagedDiskParametersResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) Elem() VirtualMachineScaleSetManagedDiskParametersResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParametersResponse) VirtualMachineScaleSetManagedDiskParametersResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetManagedDiskParametersResponse
		return ret
	}).(VirtualMachineScaleSetManagedDiskParametersResponseOutput)
}

// Specifies the customer managed disk encryption set resource id for the managed
// disk.
func (o VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) DiskEncryptionSet() DiskEncryptionSetParametersResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParametersResponse) *DiskEncryptionSetParametersResponse {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSet
	}).(DiskEncryptionSetParametersResponsePtrOutput)
}

// Specifies the security profile for the managed disk.
func (o VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) SecurityProfile() VMDiskSecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParametersResponse) *VMDiskSecurityProfileResponse {
		if v == nil {
			return nil
		}
		return v.SecurityProfile
	}).(VMDiskSecurityProfileResponsePtrOutput)
}

// Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can
// only be used with data disks, it cannot be used with OS Disk.
func (o VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetManagedDiskParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfiguration struct {
	// The network configuration name.
	Name string `pulumi:"name"`
	// Describes a virtual machine scale set network profile's IP configuration.
	Properties *VirtualMachineScaleSetNetworkConfigurationProperties `pulumi:"properties"`
}

// VirtualMachineScaleSetNetworkConfigurationInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationArgs and VirtualMachineScaleSetNetworkConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationInput` via:
//
//	VirtualMachineScaleSetNetworkConfigurationArgs{...}
type VirtualMachineScaleSetNetworkConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationOutput() VirtualMachineScaleSetNetworkConfigurationOutput
	ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationOutput
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationArgs struct {
	// The network configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Describes a virtual machine scale set network profile's IP configuration.
	Properties VirtualMachineScaleSetNetworkConfigurationPropertiesPtrInput `pulumi:"properties"`
}

func (VirtualMachineScaleSetNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationArgs) ToVirtualMachineScaleSetNetworkConfigurationOutput() VirtualMachineScaleSetNetworkConfigurationOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationArgs) ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationOutput)
}

// VirtualMachineScaleSetNetworkConfigurationArrayInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationArray and VirtualMachineScaleSetNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationArrayInput` via:
//
//	VirtualMachineScaleSetNetworkConfigurationArray{ VirtualMachineScaleSetNetworkConfigurationArgs{...} }
type VirtualMachineScaleSetNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationArrayOutput() VirtualMachineScaleSetNetworkConfigurationArrayOutput
	ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationArrayOutput
}

type VirtualMachineScaleSetNetworkConfigurationArray []VirtualMachineScaleSetNetworkConfigurationInput

func (VirtualMachineScaleSetNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationArray) ToVirtualMachineScaleSetNetworkConfigurationArrayOutput() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationArray) ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationArrayOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationOutput) ToVirtualMachineScaleSetNetworkConfigurationOutput() VirtualMachineScaleSetNetworkConfigurationOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationOutput) ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationOutput {
	return o
}

// The network configuration name.
func (o VirtualMachineScaleSetNetworkConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
func (o VirtualMachineScaleSetNetworkConfigurationOutput) Properties() VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfiguration) *VirtualMachineScaleSetNetworkConfigurationProperties {
		return v.Properties
	}).(VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationArrayOutput() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetNetworkConfiguration {
		return vs[0].([]VirtualMachineScaleSetNetworkConfiguration)[vs[1].(int)]
	}).(VirtualMachineScaleSetNetworkConfigurationOutput)
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetNetworkConfigurationDnsSettings struct {
	// List of DNS servers IP addresses
	DnsServers []string `pulumi:"dnsServers"`
}

// VirtualMachineScaleSetNetworkConfigurationDnsSettingsInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs and VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationDnsSettingsInput` via:
//
//	VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs{...}
type VirtualMachineScaleSetNetworkConfigurationDnsSettingsInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput
	ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs struct {
	// List of DNS servers IP addresses
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationDnsSettings)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput)
}

func (i VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput).ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs, VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtr and VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrInput` via:
//
//	        VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput
	ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput
}

type virtualMachineScaleSetNetworkConfigurationDnsSettingsPtrType VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs

func VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtr(v *VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs) VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrInput {
	return (*virtualMachineScaleSetNetworkConfigurationDnsSettingsPtrType)(v)
}

func (*virtualMachineScaleSetNetworkConfigurationDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkConfigurationDnsSettings)(nil)).Elem()
}

func (i *virtualMachineScaleSetNetworkConfigurationDnsSettingsPtrType) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetNetworkConfigurationDnsSettingsPtrType) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput)
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationDnsSettings)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return o.ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetNetworkConfigurationDnsSettings) *VirtualMachineScaleSetNetworkConfigurationDnsSettings {
		return &v
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput)
}

// List of DNS servers IP addresses
func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkConfigurationDnsSettings)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput) Elem() VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationDnsSettings) VirtualMachineScaleSetNetworkConfigurationDnsSettings {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetNetworkConfigurationDnsSettings
		return ret
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput)
}

// List of DNS servers IP addresses
func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse struct {
	// List of DNS servers IP addresses
	DnsServers []string `pulumi:"dnsServers"`
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput {
	return o
}

// List of DNS servers IP addresses
func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput() VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput) ToVirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput) Elem() VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse) VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse
		return ret
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput)
}

// List of DNS servers IP addresses
func (o VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetNetworkConfigurationProperties struct {
	// Specifies whether the Auxiliary mode is enabled for the Network Interface
	// resource.
	AuxiliaryMode *string `pulumi:"auxiliaryMode"`
	// Specifies whether the Auxiliary sku is enabled for the Network Interface
	// resource.
	AuxiliarySku *string `pulumi:"auxiliarySku"`
	// Specify what happens to the network interface when the VM is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// Specifies whether the network interface is disabled for tcp state tracking.
	DisableTcpStateTracking *bool `pulumi:"disableTcpStateTracking"`
	// The dns settings to be applied on the network interfaces.
	DnsSettings *VirtualMachineScaleSetNetworkConfigurationDnsSettings `pulumi:"dnsSettings"`
	// Specifies whether the network interface is accelerated networking-enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Specifies whether the network interface is FPGA networking-enabled.
	EnableFpga *bool `pulumi:"enableFpga"`
	// Whether IP forwarding enabled on this NIC.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// Specifies the IP configurations of the network interface.
	IpConfigurations []VirtualMachineScaleSetIPConfiguration `pulumi:"ipConfigurations"`
	// The network security group.
	NetworkSecurityGroup *SubResource `pulumi:"networkSecurityGroup"`
	// Specifies the primary network interface in case the virtual machine has more
	// than 1 network interface.
	Primary *bool `pulumi:"primary"`
}

// VirtualMachineScaleSetNetworkConfigurationPropertiesInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationPropertiesArgs and VirtualMachineScaleSetNetworkConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationPropertiesInput` via:
//
//	VirtualMachineScaleSetNetworkConfigurationPropertiesArgs{...}
type VirtualMachineScaleSetNetworkConfigurationPropertiesInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesOutput
	ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesOutput
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetNetworkConfigurationPropertiesArgs struct {
	// Specifies whether the Auxiliary mode is enabled for the Network Interface
	// resource.
	AuxiliaryMode pulumi.StringPtrInput `pulumi:"auxiliaryMode"`
	// Specifies whether the Auxiliary sku is enabled for the Network Interface
	// resource.
	AuxiliarySku pulumi.StringPtrInput `pulumi:"auxiliarySku"`
	// Specify what happens to the network interface when the VM is deleted
	DeleteOption pulumi.StringPtrInput `pulumi:"deleteOption"`
	// Specifies whether the network interface is disabled for tcp state tracking.
	DisableTcpStateTracking pulumi.BoolPtrInput `pulumi:"disableTcpStateTracking"`
	// The dns settings to be applied on the network interfaces.
	DnsSettings VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// Specifies whether the network interface is accelerated networking-enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Specifies whether the network interface is FPGA networking-enabled.
	EnableFpga pulumi.BoolPtrInput `pulumi:"enableFpga"`
	// Whether IP forwarding enabled on this NIC.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// Specifies the IP configurations of the network interface.
	IpConfigurations VirtualMachineScaleSetIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The network security group.
	NetworkSecurityGroup SubResourcePtrInput `pulumi:"networkSecurityGroup"`
	// Specifies the primary network interface in case the virtual machine has more
	// than 1 network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (VirtualMachineScaleSetNetworkConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationProperties)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationPropertiesArgs) ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationPropertiesArgs) ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationPropertiesOutput)
}

func (i VirtualMachineScaleSetNetworkConfigurationPropertiesArgs) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationPropertiesArgs) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationPropertiesOutput).ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetNetworkConfigurationPropertiesPtrInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationPropertiesArgs, VirtualMachineScaleSetNetworkConfigurationPropertiesPtr and VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationPropertiesPtrInput` via:
//
//	        VirtualMachineScaleSetNetworkConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetNetworkConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput
	ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput
}

type virtualMachineScaleSetNetworkConfigurationPropertiesPtrType VirtualMachineScaleSetNetworkConfigurationPropertiesArgs

func VirtualMachineScaleSetNetworkConfigurationPropertiesPtr(v *VirtualMachineScaleSetNetworkConfigurationPropertiesArgs) VirtualMachineScaleSetNetworkConfigurationPropertiesPtrInput {
	return (*virtualMachineScaleSetNetworkConfigurationPropertiesPtrType)(v)
}

func (*virtualMachineScaleSetNetworkConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkConfigurationProperties)(nil)).Elem()
}

func (i *virtualMachineScaleSetNetworkConfigurationPropertiesPtrType) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetNetworkConfigurationPropertiesPtrType) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetNetworkConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return o.ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetNetworkConfigurationProperties) *VirtualMachineScaleSetNetworkConfigurationProperties {
		return &v
	}).(VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput)
}

// Specifies whether the Auxiliary mode is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) AuxiliaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *string { return v.AuxiliaryMode }).(pulumi.StringPtrOutput)
}

// Specifies whether the Auxiliary sku is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) AuxiliarySku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *string { return v.AuxiliarySku }).(pulumi.StringPtrOutput)
}

// Specify what happens to the network interface when the VM is deleted
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// Specifies whether the network interface is disabled for tcp state tracking.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) DisableTcpStateTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *bool { return v.DisableTcpStateTracking }).(pulumi.BoolPtrOutput)
}

// The dns settings to be applied on the network interfaces.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) DnsSettings() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *VirtualMachineScaleSetNetworkConfigurationDnsSettings {
		return v.DnsSettings
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput)
}

// Specifies whether the network interface is accelerated networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *bool {
		return v.EnableAcceleratedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the network interface is FPGA networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) EnableFpga() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *bool { return v.EnableFpga }).(pulumi.BoolPtrOutput)
}

// Whether IP forwarding enabled on this NIC.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// Specifies the IP configurations of the network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) []VirtualMachineScaleSetIPConfiguration {
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationArrayOutput)
}

// The network security group.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) NetworkSecurityGroup() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *SubResource {
		return v.NetworkSecurityGroup
	}).(SubResourcePtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationProperties) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkConfigurationProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) Elem() VirtualMachineScaleSetNetworkConfigurationPropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) VirtualMachineScaleSetNetworkConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetNetworkConfigurationProperties
		return ret
	}).(VirtualMachineScaleSetNetworkConfigurationPropertiesOutput)
}

// Specifies whether the Auxiliary mode is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) AuxiliaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuxiliaryMode
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Auxiliary sku is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) AuxiliarySku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuxiliarySku
	}).(pulumi.StringPtrOutput)
}

// Specify what happens to the network interface when the VM is deleted
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the network interface is disabled for tcp state tracking.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) DisableTcpStateTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTcpStateTracking
	}).(pulumi.BoolPtrOutput)
}

// The dns settings to be applied on the network interfaces.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) DnsSettings() VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *VirtualMachineScaleSetNetworkConfigurationDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput)
}

// Specifies whether the network interface is accelerated networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAcceleratedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the network interface is FPGA networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) EnableFpga() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFpga
	}).(pulumi.BoolPtrOutput)
}

// Whether IP forwarding enabled on this NIC.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIPForwarding
	}).(pulumi.BoolPtrOutput)
}

// Specifies the IP configurations of the network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) []VirtualMachineScaleSetIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationArrayOutput)
}

// The network security group.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) NetworkSecurityGroup() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(SubResourcePtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetNetworkConfigurationPropertiesResponse struct {
	// Specifies whether the Auxiliary mode is enabled for the Network Interface
	// resource.
	AuxiliaryMode *string `pulumi:"auxiliaryMode"`
	// Specifies whether the Auxiliary sku is enabled for the Network Interface
	// resource.
	AuxiliarySku *string `pulumi:"auxiliarySku"`
	// Specify what happens to the network interface when the VM is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// Specifies whether the network interface is disabled for tcp state tracking.
	DisableTcpStateTracking *bool `pulumi:"disableTcpStateTracking"`
	// The dns settings to be applied on the network interfaces.
	DnsSettings *VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse `pulumi:"dnsSettings"`
	// Specifies whether the network interface is accelerated networking-enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Specifies whether the network interface is FPGA networking-enabled.
	EnableFpga *bool `pulumi:"enableFpga"`
	// Whether IP forwarding enabled on this NIC.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// Specifies the IP configurations of the network interface.
	IpConfigurations []VirtualMachineScaleSetIPConfigurationResponse `pulumi:"ipConfigurations"`
	// The network security group.
	NetworkSecurityGroup *SubResourceResponse `pulumi:"networkSecurityGroup"`
	// Specifies the primary network interface in case the virtual machine has more
	// than 1 network interface.
	Primary *bool `pulumi:"primary"`
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput {
	return o
}

// Specifies whether the Auxiliary mode is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) AuxiliaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *string { return v.AuxiliaryMode }).(pulumi.StringPtrOutput)
}

// Specifies whether the Auxiliary sku is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) AuxiliarySku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *string { return v.AuxiliarySku }).(pulumi.StringPtrOutput)
}

// Specify what happens to the network interface when the VM is deleted
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// Specifies whether the network interface is disabled for tcp state tracking.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) DisableTcpStateTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		return v.DisableTcpStateTracking
	}).(pulumi.BoolPtrOutput)
}

// The dns settings to be applied on the network interfaces.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) DnsSettings() VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse {
		return v.DnsSettings
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput)
}

// Specifies whether the network interface is accelerated networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		return v.EnableAcceleratedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the network interface is FPGA networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) EnableFpga() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool { return v.EnableFpga }).(pulumi.BoolPtrOutput)
}

// Whether IP forwarding enabled on this NIC.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		return v.EnableIPForwarding
	}).(pulumi.BoolPtrOutput)
}

// Specifies the IP configurations of the network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) []VirtualMachineScaleSetIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationResponseArrayOutput)
}

// The network security group.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) NetworkSecurityGroup() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *SubResourceResponse {
		return v.NetworkSecurityGroup
	}).(SubResourceResponsePtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput() VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) ToVirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) Elem() VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) VirtualMachineScaleSetNetworkConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetNetworkConfigurationPropertiesResponse
		return ret
	}).(VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput)
}

// Specifies whether the Auxiliary mode is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) AuxiliaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuxiliaryMode
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Auxiliary sku is enabled for the Network Interface
// resource.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) AuxiliarySku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuxiliarySku
	}).(pulumi.StringPtrOutput)
}

// Specify what happens to the network interface when the VM is deleted
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the network interface is disabled for tcp state tracking.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) DisableTcpStateTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTcpStateTracking
	}).(pulumi.BoolPtrOutput)
}

// The dns settings to be applied on the network interfaces.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) DnsSettings() VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput)
}

// Specifies whether the network interface is accelerated networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAcceleratedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the network interface is FPGA networking-enabled.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) EnableFpga() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFpga
	}).(pulumi.BoolPtrOutput)
}

// Whether IP forwarding enabled on this NIC.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIPForwarding
	}).(pulumi.BoolPtrOutput)
}

// Specifies the IP configurations of the network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) []VirtualMachineScaleSetIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationResponseArrayOutput)
}

// The network security group.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) NetworkSecurityGroup() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(SubResourceResponsePtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more
// than 1 network interface.
func (o VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationResponse struct {
	// The network configuration name.
	Name string `pulumi:"name"`
	// Describes a virtual machine scale set network profile's IP configuration.
	Properties *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse `pulumi:"properties"`
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseOutput() VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return o
}

// The network configuration name.
func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) Properties() VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationResponse) *VirtualMachineScaleSetNetworkConfigurationPropertiesResponse {
		return v.Properties
	}).(VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetNetworkConfigurationResponse {
		return vs[0].([]VirtualMachineScaleSetNetworkConfigurationResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetNetworkConfigurationResponseOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfile struct {
	// A reference to a load balancer probe used to determine the health of an
	// instance in the virtual machine scale set. The reference will be in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
	HealthProbe *ApiEntityReference `pulumi:"healthProbe"`
	// specifies the Microsoft.Network API version used when creating networking
	// resources in the Network Interface Configurations for Virtual Machine Scale Set
	// with orchestration mode 'Flexible'
	NetworkApiVersion *string `pulumi:"networkApiVersion"`
	// The list of network configurations.
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfiguration `pulumi:"networkInterfaceConfigurations"`
}

// VirtualMachineScaleSetNetworkProfileInput is an input type that accepts VirtualMachineScaleSetNetworkProfileArgs and VirtualMachineScaleSetNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfileInput` via:
//
//	VirtualMachineScaleSetNetworkProfileArgs{...}
type VirtualMachineScaleSetNetworkProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfileOutput() VirtualMachineScaleSetNetworkProfileOutput
	ToVirtualMachineScaleSetNetworkProfileOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfileOutput
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileArgs struct {
	// A reference to a load balancer probe used to determine the health of an
	// instance in the virtual machine scale set. The reference will be in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
	HealthProbe ApiEntityReferencePtrInput `pulumi:"healthProbe"`
	// specifies the Microsoft.Network API version used when creating networking
	// resources in the Network Interface Configurations for Virtual Machine Scale Set
	// with orchestration mode 'Flexible'
	NetworkApiVersion pulumi.StringPtrInput `pulumi:"networkApiVersion"`
	// The list of network configurations.
	NetworkInterfaceConfigurations VirtualMachineScaleSetNetworkConfigurationArrayInput `pulumi:"networkInterfaceConfigurations"`
}

func (VirtualMachineScaleSetNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfileOutput() VirtualMachineScaleSetNetworkProfileOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileOutput)
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileOutput).ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetNetworkProfilePtrInput is an input type that accepts VirtualMachineScaleSetNetworkProfileArgs, VirtualMachineScaleSetNetworkProfilePtr and VirtualMachineScaleSetNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfilePtrInput` via:
//
//	        VirtualMachineScaleSetNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput
	ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput
}

type virtualMachineScaleSetNetworkProfilePtrType VirtualMachineScaleSetNetworkProfileArgs

func VirtualMachineScaleSetNetworkProfilePtr(v *VirtualMachineScaleSetNetworkProfileArgs) VirtualMachineScaleSetNetworkProfilePtrInput {
	return (*virtualMachineScaleSetNetworkProfilePtrType)(v)
}

func (*virtualMachineScaleSetNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetNetworkProfilePtrType) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetNetworkProfilePtrType) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfileOutput() VirtualMachineScaleSetNetworkProfileOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetNetworkProfile) *VirtualMachineScaleSetNetworkProfile {
		return &v
	}).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// A reference to a load balancer probe used to determine the health of an
// instance in the virtual machine scale set. The reference will be in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
func (o VirtualMachineScaleSetNetworkProfileOutput) HealthProbe() ApiEntityReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfile) *ApiEntityReference { return v.HealthProbe }).(ApiEntityReferencePtrOutput)
}

// specifies the Microsoft.Network API version used when creating networking
// resources in the Network Interface Configurations for Virtual Machine Scale Set
// with orchestration mode 'Flexible'
func (o VirtualMachineScaleSetNetworkProfileOutput) NetworkApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfile) *string { return v.NetworkApiVersion }).(pulumi.StringPtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfile) []VirtualMachineScaleSetNetworkConfiguration {
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationArrayOutput)
}

type VirtualMachineScaleSetNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfilePtrOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfilePtrOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfilePtrOutput) Elem() VirtualMachineScaleSetNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfile) VirtualMachineScaleSetNetworkProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetNetworkProfile
		return ret
	}).(VirtualMachineScaleSetNetworkProfileOutput)
}

// A reference to a load balancer probe used to determine the health of an
// instance in the virtual machine scale set. The reference will be in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
func (o VirtualMachineScaleSetNetworkProfilePtrOutput) HealthProbe() ApiEntityReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfile) *ApiEntityReference {
		if v == nil {
			return nil
		}
		return v.HealthProbe
	}).(ApiEntityReferencePtrOutput)
}

// specifies the Microsoft.Network API version used when creating networking
// resources in the Network Interface Configurations for Virtual Machine Scale Set
// with orchestration mode 'Flexible'
func (o VirtualMachineScaleSetNetworkProfilePtrOutput) NetworkApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkApiVersion
	}).(pulumi.StringPtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfilePtrOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfile) []VirtualMachineScaleSetNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationArrayOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileResponse struct {
	// A reference to a load balancer probe used to determine the health of an
	// instance in the virtual machine scale set. The reference will be in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
	HealthProbe *ApiEntityReferenceResponse `pulumi:"healthProbe"`
	// specifies the Microsoft.Network API version used when creating networking
	// resources in the Network Interface Configurations for Virtual Machine Scale Set
	// with orchestration mode 'Flexible'
	NetworkApiVersion *string `pulumi:"networkApiVersion"`
	// The list of network configurations.
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfigurationResponse `pulumi:"networkInterfaceConfigurations"`
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileResponseOutput) ToVirtualMachineScaleSetNetworkProfileResponseOutput() VirtualMachineScaleSetNetworkProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponseOutput) ToVirtualMachineScaleSetNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponseOutput {
	return o
}

// A reference to a load balancer probe used to determine the health of an
// instance in the virtual machine scale set. The reference will be in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
func (o VirtualMachineScaleSetNetworkProfileResponseOutput) HealthProbe() ApiEntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileResponse) *ApiEntityReferenceResponse { return v.HealthProbe }).(ApiEntityReferenceResponsePtrOutput)
}

// specifies the Microsoft.Network API version used when creating networking
// resources in the Network Interface Configurations for Virtual Machine Scale Set
// with orchestration mode 'Flexible'
func (o VirtualMachineScaleSetNetworkProfileResponseOutput) NetworkApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileResponse) *string { return v.NetworkApiVersion }).(pulumi.StringPtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileResponseOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileResponse) []VirtualMachineScaleSetNetworkConfigurationResponse {
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput)
}

type VirtualMachineScaleSetNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutput() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) Elem() VirtualMachineScaleSetNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileResponse) VirtualMachineScaleSetNetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetNetworkProfileResponse
		return ret
	}).(VirtualMachineScaleSetNetworkProfileResponseOutput)
}

// A reference to a load balancer probe used to determine the health of an
// instance in the virtual machine scale set. The reference will be in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) HealthProbe() ApiEntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileResponse) *ApiEntityReferenceResponse {
		if v == nil {
			return nil
		}
		return v.HealthProbe
	}).(ApiEntityReferenceResponsePtrOutput)
}

// specifies the Microsoft.Network API version used when creating networking
// resources in the Network Interface Configurations for Virtual Machine Scale Set
// with orchestration mode 'Flexible'
func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) NetworkApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkApiVersion
	}).(pulumi.StringPtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileResponse) []VirtualMachineScaleSetNetworkConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDisk struct {
	// Specifies the caching requirements. Possible values are: **None,**
	// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
	// storage. ReadOnly for Premium storage.**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created. The only
	// allowed value is: **FromImage.** This value is used when you are using an image
	// to create the virtual machine. If you are using a platform image, you also use
	// the imageReference element described above. If you are using a marketplace
	// image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
	// (This feature is available for VMSS with Flexible OrchestrationMode only).
	// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
	// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
	// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
	// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
	// is set to **Delete**. User cannot change the delete option for Ephemeral OS
	// Disk.
	DeleteOption *string `pulumi:"deleteOption"`
	// Specifies the ephemeral disk Settings for the operating system disk used by the
	// virtual machine scale set.
	DiffDiskSettings *DiffDiskSettings `pulumi:"diffDiskSettings"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used
	// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
	// is the number of bytes x 1024^3 for the disk and the value cannot
	// be larger than 1023.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies information about the unmanaged user image to base the scale set on.
	Image *VirtualHardDisk `pulumi:"image"`
	// The managed disk parameters.
	ManagedDisk *VirtualMachineScaleSetManagedDiskParameters `pulumi:"managedDisk"`
	// The disk name.
	Name *string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the
	// disk if creating a VM from user-image or a specialized VHD. Possible values
	// are: **Windows,** **Linux.**
	OsType *string `pulumi:"osType"`
	// Specifies the container urls that are used to store operating system disks for
	// the scale set.
	VhdContainers []string `pulumi:"vhdContainers"`
	// Specifies whether writeAccelerator should be enabled or disabled on the disk.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// VirtualMachineScaleSetOSDiskInput is an input type that accepts VirtualMachineScaleSetOSDiskArgs and VirtualMachineScaleSetOSDiskOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskInput` via:
//
//	VirtualMachineScaleSetOSDiskArgs{...}
type VirtualMachineScaleSetOSDiskInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskOutput() VirtualMachineScaleSetOSDiskOutput
	ToVirtualMachineScaleSetOSDiskOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskOutput
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskArgs struct {
	// Specifies the caching requirements. Possible values are: **None,**
	// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
	// storage. ReadOnly for Premium storage.**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created. The only
	// allowed value is: **FromImage.** This value is used when you are using an image
	// to create the virtual machine. If you are using a platform image, you also use
	// the imageReference element described above. If you are using a marketplace
	// image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
	// (This feature is available for VMSS with Flexible OrchestrationMode only).
	// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
	// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
	// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
	// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
	// is set to **Delete**. User cannot change the delete option for Ephemeral OS
	// Disk.
	DeleteOption pulumi.StringPtrInput `pulumi:"deleteOption"`
	// Specifies the ephemeral disk Settings for the operating system disk used by the
	// virtual machine scale set.
	DiffDiskSettings DiffDiskSettingsPtrInput `pulumi:"diffDiskSettings"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used
	// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
	// is the number of bytes x 1024^3 for the disk and the value cannot
	// be larger than 1023.
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// Specifies information about the unmanaged user image to base the scale set on.
	Image VirtualHardDiskPtrInput `pulumi:"image"`
	// The managed disk parameters.
	ManagedDisk VirtualMachineScaleSetManagedDiskParametersPtrInput `pulumi:"managedDisk"`
	// The disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the
	// disk if creating a VM from user-image or a specialized VHD. Possible values
	// are: **Windows,** **Linux.**
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Specifies the container urls that are used to store operating system disks for
	// the scale set.
	VhdContainers pulumi.StringArrayInput `pulumi:"vhdContainers"`
	// Specifies whether writeAccelerator should be enabled or disabled on the disk.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (VirtualMachineScaleSetOSDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskOutput() VirtualMachineScaleSetOSDiskOutput {
	return i.ToVirtualMachineScaleSetOSDiskOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskOutput)
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskOutput).ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSDiskPtrInput is an input type that accepts VirtualMachineScaleSetOSDiskArgs, VirtualMachineScaleSetOSDiskPtr and VirtualMachineScaleSetOSDiskPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskPtrInput` via:
//
//	        VirtualMachineScaleSetOSDiskArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetOSDiskPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput
	ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskPtrOutput
}

type virtualMachineScaleSetOSDiskPtrType VirtualMachineScaleSetOSDiskArgs

func VirtualMachineScaleSetOSDiskPtr(v *VirtualMachineScaleSetOSDiskArgs) VirtualMachineScaleSetOSDiskPtrInput {
	return (*virtualMachineScaleSetOSDiskPtrType)(v)
}

func (*virtualMachineScaleSetOSDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSDiskPtrType) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSDiskPtrType) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskPtrOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskOutput() VirtualMachineScaleSetOSDiskOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetOSDisk) *VirtualMachineScaleSetOSDisk {
		return &v
	}).(VirtualMachineScaleSetOSDiskPtrOutput)
}

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
func (o VirtualMachineScaleSetOSDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created. The only
// allowed value is: **FromImage.** This value is used when you are using an image
// to create the virtual machine. If you are using a platform image, you also use
// the imageReference element described above. If you are using a marketplace
// image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
// (This feature is available for VMSS with Flexible OrchestrationMode only).
// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
// is set to **Delete**. User cannot change the delete option for Ephemeral OS
// Disk.
func (o VirtualMachineScaleSetOSDiskOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk Settings for the operating system disk used by the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSDiskOutput) DiffDiskSettings() DiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *DiffDiskSettings { return v.DiffDiskSettings }).(DiffDiskSettingsPtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used
// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
// is the number of bytes x 1024^3 for the disk and the value cannot
// be larger than 1023.
func (o VirtualMachineScaleSetOSDiskOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies information about the unmanaged user image to base the scale set on.
func (o VirtualMachineScaleSetOSDiskOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *VirtualHardDisk { return v.Image }).(VirtualHardDiskPtrOutput)
}

// The managed disk parameters.
func (o VirtualMachineScaleSetOSDiskOutput) ManagedDisk() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *VirtualMachineScaleSetManagedDiskParameters {
		return v.ManagedDisk
	}).(VirtualMachineScaleSetManagedDiskParametersPtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the
// disk if creating a VM from user-image or a specialized VHD. Possible values
// are: **Windows,** **Linux.**
func (o VirtualMachineScaleSetOSDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the container urls that are used to store operating system disks for
// the scale set.
func (o VirtualMachineScaleSetOSDiskOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) []string { return v.VhdContainers }).(pulumi.StringArrayOutput)
}

// Specifies whether writeAccelerator should be enabled or disabled on the disk.
func (o VirtualMachineScaleSetOSDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetOSDiskPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskPtrOutput) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskPtrOutput) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskPtrOutput) Elem() VirtualMachineScaleSetOSDiskOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) VirtualMachineScaleSetOSDisk {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetOSDisk
		return ret
	}).(VirtualMachineScaleSetOSDiskOutput)
}

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
func (o VirtualMachineScaleSetOSDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created. The only
// allowed value is: **FromImage.** This value is used when you are using an image
// to create the virtual machine. If you are using a platform image, you also use
// the imageReference element described above. If you are using a marketplace
// image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskPtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
// (This feature is available for VMSS with Flexible OrchestrationMode only).
// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
// is set to **Delete**. User cannot change the delete option for Ephemeral OS
// Disk.
func (o VirtualMachineScaleSetOSDiskPtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk Settings for the operating system disk used by the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSDiskPtrOutput) DiffDiskSettings() DiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *DiffDiskSettings {
		if v == nil {
			return nil
		}
		return v.DiffDiskSettings
	}).(DiffDiskSettingsPtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used
// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
// is the number of bytes x 1024^3 for the disk and the value cannot
// be larger than 1023.
func (o VirtualMachineScaleSetOSDiskPtrOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Specifies information about the unmanaged user image to base the scale set on.
func (o VirtualMachineScaleSetOSDiskPtrOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *VirtualHardDisk {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskPtrOutput)
}

// The managed disk parameters.
func (o VirtualMachineScaleSetOSDiskPtrOutput) ManagedDisk() VirtualMachineScaleSetManagedDiskParametersPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *VirtualMachineScaleSetManagedDiskParameters {
		if v == nil {
			return nil
		}
		return v.ManagedDisk
	}).(VirtualMachineScaleSetManagedDiskParametersPtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the
// disk if creating a VM from user-image or a specialized VHD. Possible values
// are: **Windows,** **Linux.**
func (o VirtualMachineScaleSetOSDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the container urls that are used to store operating system disks for
// the scale set.
func (o VirtualMachineScaleSetOSDiskPtrOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) []string {
		if v == nil {
			return nil
		}
		return v.VhdContainers
	}).(pulumi.StringArrayOutput)
}

// Specifies whether writeAccelerator should be enabled or disabled on the disk.
func (o VirtualMachineScaleSetOSDiskPtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskResponse struct {
	// Specifies the caching requirements. Possible values are: **None,**
	// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
	// storage. ReadOnly for Premium storage.**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created. The only
	// allowed value is: **FromImage.** This value is used when you are using an image
	// to create the virtual machine. If you are using a platform image, you also use
	// the imageReference element described above. If you are using a marketplace
	// image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
	// (This feature is available for VMSS with Flexible OrchestrationMode only).
	// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
	// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
	// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
	// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
	// is set to **Delete**. User cannot change the delete option for Ephemeral OS
	// Disk.
	DeleteOption *string `pulumi:"deleteOption"`
	// Specifies the ephemeral disk Settings for the operating system disk used by the
	// virtual machine scale set.
	DiffDiskSettings *DiffDiskSettingsResponse `pulumi:"diffDiskSettings"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used
	// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
	// is the number of bytes x 1024^3 for the disk and the value cannot
	// be larger than 1023.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies information about the unmanaged user image to base the scale set on.
	Image *VirtualHardDiskResponse `pulumi:"image"`
	// The managed disk parameters.
	ManagedDisk *VirtualMachineScaleSetManagedDiskParametersResponse `pulumi:"managedDisk"`
	// The disk name.
	Name *string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the
	// disk if creating a VM from user-image or a specialized VHD. Possible values
	// are: **Windows,** **Linux.**
	OsType *string `pulumi:"osType"`
	// Specifies the container urls that are used to store operating system disks for
	// the scale set.
	VhdContainers []string `pulumi:"vhdContainers"`
	// Specifies whether writeAccelerator should be enabled or disabled on the disk.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDiskResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskResponseOutput) ToVirtualMachineScaleSetOSDiskResponseOutput() VirtualMachineScaleSetOSDiskResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponseOutput) ToVirtualMachineScaleSetOSDiskResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponseOutput {
	return o
}

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
func (o VirtualMachineScaleSetOSDiskResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created. The only
// allowed value is: **FromImage.** This value is used when you are using an image
// to create the virtual machine. If you are using a platform image, you also use
// the imageReference element described above. If you are using a marketplace
// image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
// (This feature is available for VMSS with Flexible OrchestrationMode only).
// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
// is set to **Delete**. User cannot change the delete option for Ephemeral OS
// Disk.
func (o VirtualMachineScaleSetOSDiskResponseOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk Settings for the operating system disk used by the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSDiskResponseOutput) DiffDiskSettings() DiffDiskSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *DiffDiskSettingsResponse { return v.DiffDiskSettings }).(DiffDiskSettingsResponsePtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used
// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
// is the number of bytes x 1024^3 for the disk and the value cannot
// be larger than 1023.
func (o VirtualMachineScaleSetOSDiskResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies information about the unmanaged user image to base the scale set on.
func (o VirtualMachineScaleSetOSDiskResponseOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *VirtualHardDiskResponse { return v.Image }).(VirtualHardDiskResponsePtrOutput)
}

// The managed disk parameters.
func (o VirtualMachineScaleSetOSDiskResponseOutput) ManagedDisk() VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *VirtualMachineScaleSetManagedDiskParametersResponse {
		return v.ManagedDisk
	}).(VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the
// disk if creating a VM from user-image or a specialized VHD. Possible values
// are: **Windows,** **Linux.**
func (o VirtualMachineScaleSetOSDiskResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the container urls that are used to store operating system disks for
// the scale set.
func (o VirtualMachineScaleSetOSDiskResponseOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) []string { return v.VhdContainers }).(pulumi.StringArrayOutput)
}

// Specifies whether writeAccelerator should be enabled or disabled on the disk.
func (o VirtualMachineScaleSetOSDiskResponseOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetOSDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDiskResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) ToVirtualMachineScaleSetOSDiskResponsePtrOutput() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Elem() VirtualMachineScaleSetOSDiskResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) VirtualMachineScaleSetOSDiskResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetOSDiskResponse
		return ret
	}).(VirtualMachineScaleSetOSDiskResponseOutput)
}

// Specifies the caching requirements. Possible values are: **None,**
// **ReadOnly,** **ReadWrite.** The default values are: **None for Standard
// storage. ReadOnly for Premium storage.**
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created. The only
// allowed value is: **FromImage.** This value is used when you are using an image
// to create the virtual machine. If you are using a platform image, you also use
// the imageReference element described above. If you are using a marketplace
// image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion
// (This feature is available for VMSS with Flexible OrchestrationMode only).
// <br><br> Possible values: <br><br> **Delete** If this value is used, the OS
// disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value
// is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The
// default value is set to **Delete**. For an Ephemeral OS Disk, the default value
// is set to **Delete**. User cannot change the delete option for Ephemeral OS
// Disk.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the ephemeral disk Settings for the operating system disk used by the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) DiffDiskSettings() DiffDiskSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *DiffDiskSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DiffDiskSettings
	}).(DiffDiskSettingsResponsePtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used
// to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'
// is the number of bytes x 1024^3 for the disk and the value cannot
// be larger than 1023.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Specifies information about the unmanaged user image to base the scale set on.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *VirtualHardDiskResponse {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskResponsePtrOutput)
}

// The managed disk parameters.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) ManagedDisk() VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *VirtualMachineScaleSetManagedDiskParametersResponse {
		if v == nil {
			return nil
		}
		return v.ManagedDisk
	}).(VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the
// disk if creating a VM from user-image or a specialized VHD. Possible values
// are: **Windows,** **Linux.**
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the container urls that are used to store operating system disks for
// the scale set.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) []string {
		if v == nil {
			return nil
		}
		return v.VhdContainers
	}).(pulumi.StringArrayOutput)
}

// Specifies whether writeAccelerator should be enabled or disabled on the disk.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfile struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length
	// (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters
	// <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length
	// (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4
	// conditions below need to be fulfilled <br> Has lower characters <br>Has upper
	// characters <br> Has a digit <br> Has a special character (Regex match [\W_])
	// <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd",
	// "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1",
	// "Password22", "iloveyou!" <br><br> For resetting the password, see [How to
	// reset the Remote Desktop service or its login password in a Windows
	// VM](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
	// <br><br> For resetting root password, see [Manage users, SSH, and check or
	// repair disks on Azure Linux VMs using the VMAccess
	// Extension](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only
	// restriction:** Cannot end in "." <br><br> **Disallowed values:**
	// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
	// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
	// "console", "david", "guest", "john", "owner", "root", "server", "sql",
	// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
	// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
	// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies whether extension operations should be allowed on the virtual machine
	// scale set. This may only be set to False when no extensions are present on the
	// virtual machine scale set.
	AllowExtensionOperations *bool `pulumi:"allowExtensionOperations"`
	// Specifies the computer name prefix for all of the virtual machines in the scale
	// set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix *string `pulumi:"computerNamePrefix"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string
	// is decoded to a binary array that is saved as a file on the Virtual Machine.
	// The maximum length of the binary array is 65535 bytes. For using cloud-init for
	// your VM, see [Using cloud-init to customize a Linux VM during
	// creation](https://learn.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
	CustomData *string `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. For a
	// list of supported Linux distributions, see [Linux on Azure-Endorsed
	// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
	LinuxConfiguration *LinuxConfiguration `pulumi:"linuxConfiguration"`
	// Optional property which must either be set to True or omitted.
	RequireGuestProvisionSignal *bool `pulumi:"requireGuestProvisionSignal"`
	// Specifies set of certificates that should be installed onto the virtual
	// machines in the scale set. To install certificates on a virtual machine it is
	// recommended to use the [Azure Key Vault virtual machine extension for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	Secrets []VaultSecretGroup `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration *WindowsConfiguration `pulumi:"windowsConfiguration"`
}

// VirtualMachineScaleSetOSProfileInput is an input type that accepts VirtualMachineScaleSetOSProfileArgs and VirtualMachineScaleSetOSProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfileInput` via:
//
//	VirtualMachineScaleSetOSProfileArgs{...}
type VirtualMachineScaleSetOSProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfileOutput() VirtualMachineScaleSetOSProfileOutput
	ToVirtualMachineScaleSetOSProfileOutputWithContext(context.Context) VirtualMachineScaleSetOSProfileOutput
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length
	// (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters
	// <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length
	// (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4
	// conditions below need to be fulfilled <br> Has lower characters <br>Has upper
	// characters <br> Has a digit <br> Has a special character (Regex match [\W_])
	// <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd",
	// "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1",
	// "Password22", "iloveyou!" <br><br> For resetting the password, see [How to
	// reset the Remote Desktop service or its login password in a Windows
	// VM](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
	// <br><br> For resetting root password, see [Manage users, SSH, and check or
	// repair disks on Azure Linux VMs using the VMAccess
	// Extension](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only
	// restriction:** Cannot end in "." <br><br> **Disallowed values:**
	// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
	// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
	// "console", "david", "guest", "john", "owner", "root", "server", "sql",
	// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
	// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
	// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies whether extension operations should be allowed on the virtual machine
	// scale set. This may only be set to False when no extensions are present on the
	// virtual machine scale set.
	AllowExtensionOperations pulumi.BoolPtrInput `pulumi:"allowExtensionOperations"`
	// Specifies the computer name prefix for all of the virtual machines in the scale
	// set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix pulumi.StringPtrInput `pulumi:"computerNamePrefix"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string
	// is decoded to a binary array that is saved as a file on the Virtual Machine.
	// The maximum length of the binary array is 65535 bytes. For using cloud-init for
	// your VM, see [Using cloud-init to customize a Linux VM during
	// creation](https://learn.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. For a
	// list of supported Linux distributions, see [Linux on Azure-Endorsed
	// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
	LinuxConfiguration LinuxConfigurationPtrInput `pulumi:"linuxConfiguration"`
	// Optional property which must either be set to True or omitted.
	RequireGuestProvisionSignal pulumi.BoolPtrInput `pulumi:"requireGuestProvisionSignal"`
	// Specifies set of certificates that should be installed onto the virtual
	// machines in the scale set. To install certificates on a virtual machine it is
	// recommended to use the [Azure Key Vault virtual machine extension for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	Secrets VaultSecretGroupArrayInput `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration WindowsConfigurationPtrInput `pulumi:"windowsConfiguration"`
}

func (VirtualMachineScaleSetOSProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfileOutput() VirtualMachineScaleSetOSProfileOutput {
	return i.ToVirtualMachineScaleSetOSProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileOutput)
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileOutput).ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSProfilePtrInput is an input type that accepts VirtualMachineScaleSetOSProfileArgs, VirtualMachineScaleSetOSProfilePtr and VirtualMachineScaleSetOSProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfilePtrInput` via:
//
//	        VirtualMachineScaleSetOSProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetOSProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput
	ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetOSProfilePtrOutput
}

type virtualMachineScaleSetOSProfilePtrType VirtualMachineScaleSetOSProfileArgs

func VirtualMachineScaleSetOSProfilePtr(v *VirtualMachineScaleSetOSProfileArgs) VirtualMachineScaleSetOSProfilePtrInput {
	return (*virtualMachineScaleSetOSProfilePtrType)(v)
}

func (*virtualMachineScaleSetOSProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSProfilePtrType) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSProfilePtrType) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfileOutput() VirtualMachineScaleSetOSProfileOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetOSProfile) *VirtualMachineScaleSetOSProfile {
		return &v
	}).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length
// (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters
// <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length
// (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4
// conditions below need to be fulfilled <br> Has lower characters <br>Has upper
// characters <br> Has a digit <br> Has a special character (Regex match [\W_])
// <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd",
// "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1",
// "Password22", "iloveyou!" <br><br> For resetting the password, see [How to
// reset the Remote Desktop service or its login password in a Windows
// VM](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
// <br><br> For resetting root password, see [Manage users, SSH, and check or
// repair disks on Azure Linux VMs using the VMAccess
// Extension](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
func (o VirtualMachineScaleSetOSProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only
// restriction:** Cannot end in "." <br><br> **Disallowed values:**
// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
// "console", "david", "guest", "john", "owner", "root", "server", "sql",
// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
func (o VirtualMachineScaleSetOSProfileOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies whether extension operations should be allowed on the virtual machine
// scale set. This may only be set to False when no extensions are present on the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSProfileOutput) AllowExtensionOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *bool { return v.AllowExtensionOperations }).(pulumi.BoolPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale
// set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.ComputerNamePrefix }).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string
// is decoded to a binary array that is saved as a file on the Virtual Machine.
// The maximum length of the binary array is 65535 bytes. For using cloud-init for
// your VM, see [Using cloud-init to customize a Linux VM during
// creation](https://learn.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
func (o VirtualMachineScaleSetOSProfileOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
func (o VirtualMachineScaleSetOSProfileOutput) LinuxConfiguration() LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *LinuxConfiguration { return v.LinuxConfiguration }).(LinuxConfigurationPtrOutput)
}

// Optional property which must either be set to True or omitted.
func (o VirtualMachineScaleSetOSProfileOutput) RequireGuestProvisionSignal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *bool { return v.RequireGuestProvisionSignal }).(pulumi.BoolPtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual
// machines in the scale set. To install certificates on a virtual machine it is
// recommended to use the [Azure Key Vault virtual machine extension for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o VirtualMachineScaleSetOSProfileOutput) Secrets() VaultSecretGroupArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) []VaultSecretGroup { return v.Secrets }).(VaultSecretGroupArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o VirtualMachineScaleSetOSProfileOutput) WindowsConfiguration() WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *WindowsConfiguration { return v.WindowsConfiguration }).(WindowsConfigurationPtrOutput)
}

type VirtualMachineScaleSetOSProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfilePtrOutput) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfilePtrOutput) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfilePtrOutput) Elem() VirtualMachineScaleSetOSProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) VirtualMachineScaleSetOSProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetOSProfile
		return ret
	}).(VirtualMachineScaleSetOSProfileOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length
// (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters
// <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length
// (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4
// conditions below need to be fulfilled <br> Has lower characters <br>Has upper
// characters <br> Has a digit <br> Has a special character (Regex match [\W_])
// <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd",
// "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1",
// "Password22", "iloveyou!" <br><br> For resetting the password, see [How to
// reset the Remote Desktop service or its login password in a Windows
// VM](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)
// <br><br> For resetting root password, see [Manage users, SSH, and check or
// repair disks on Azure Linux VMs using the VMAccess
// Extension](https://learn.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
func (o VirtualMachineScaleSetOSProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only
// restriction:** Cannot end in "." <br><br> **Disallowed values:**
// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
// "console", "david", "guest", "john", "owner", "root", "server", "sql",
// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
func (o VirtualMachineScaleSetOSProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies whether extension operations should be allowed on the virtual machine
// scale set. This may only be set to False when no extensions are present on the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSProfilePtrOutput) AllowExtensionOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowExtensionOperations
	}).(pulumi.BoolPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale
// set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfilePtrOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.ComputerNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string
// is decoded to a binary array that is saved as a file on the Virtual Machine.
// The maximum length of the binary array is 65535 bytes. For using cloud-init for
// your VM, see [Using cloud-init to customize a Linux VM during
// creation](https://learn.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
func (o VirtualMachineScaleSetOSProfilePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
func (o VirtualMachineScaleSetOSProfilePtrOutput) LinuxConfiguration() LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *LinuxConfiguration {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationPtrOutput)
}

// Optional property which must either be set to True or omitted.
func (o VirtualMachineScaleSetOSProfilePtrOutput) RequireGuestProvisionSignal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *bool {
		if v == nil {
			return nil
		}
		return v.RequireGuestProvisionSignal
	}).(pulumi.BoolPtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual
// machines in the scale set. To install certificates on a virtual machine it is
// recommended to use the [Azure Key Vault virtual machine extension for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o VirtualMachineScaleSetOSProfilePtrOutput) Secrets() VaultSecretGroupArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) []VaultSecretGroup {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o VirtualMachineScaleSetOSProfilePtrOutput) WindowsConfiguration() WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *WindowsConfiguration {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationPtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileResponse struct {
	// Specifies the name of the administrator account. <br><br> **Windows-only
	// restriction:** Cannot end in "." <br><br> **Disallowed values:**
	// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
	// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
	// "console", "david", "guest", "john", "owner", "root", "server", "sql",
	// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
	// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
	// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies whether extension operations should be allowed on the virtual machine
	// scale set. This may only be set to False when no extensions are present on the
	// virtual machine scale set.
	AllowExtensionOperations *bool `pulumi:"allowExtensionOperations"`
	// Specifies the computer name prefix for all of the virtual machines in the scale
	// set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix *string `pulumi:"computerNamePrefix"`
	// Specifies the Linux operating system settings on the virtual machine. For a
	// list of supported Linux distributions, see [Linux on Azure-Endorsed
	// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
	LinuxConfiguration *LinuxConfigurationResponse `pulumi:"linuxConfiguration"`
	// Optional property which must either be set to True or omitted.
	RequireGuestProvisionSignal *bool `pulumi:"requireGuestProvisionSignal"`
	// Specifies set of certificates that should be installed onto the virtual
	// machines in the scale set. To install certificates on a virtual machine it is
	// recommended to use the [Azure Key Vault virtual machine extension for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	Secrets []VaultSecretGroupResponse `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration *WindowsConfigurationResponse `pulumi:"windowsConfiguration"`
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileResponseOutput) ToVirtualMachineScaleSetOSProfileResponseOutput() VirtualMachineScaleSetOSProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponseOutput) ToVirtualMachineScaleSetOSProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponseOutput {
	return o
}

// Specifies the name of the administrator account. <br><br> **Windows-only
// restriction:** Cannot end in "." <br><br> **Disallowed values:**
// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
// "console", "david", "guest", "john", "owner", "root", "server", "sql",
// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
func (o VirtualMachineScaleSetOSProfileResponseOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies whether extension operations should be allowed on the virtual machine
// scale set. This may only be set to False when no extensions are present on the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSProfileResponseOutput) AllowExtensionOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *bool { return v.AllowExtensionOperations }).(pulumi.BoolPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale
// set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileResponseOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *string { return v.ComputerNamePrefix }).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
func (o VirtualMachineScaleSetOSProfileResponseOutput) LinuxConfiguration() LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *LinuxConfigurationResponse {
		return v.LinuxConfiguration
	}).(LinuxConfigurationResponsePtrOutput)
}

// Optional property which must either be set to True or omitted.
func (o VirtualMachineScaleSetOSProfileResponseOutput) RequireGuestProvisionSignal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *bool { return v.RequireGuestProvisionSignal }).(pulumi.BoolPtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual
// machines in the scale set. To install certificates on a virtual machine it is
// recommended to use the [Azure Key Vault virtual machine extension for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o VirtualMachineScaleSetOSProfileResponseOutput) Secrets() VaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) []VaultSecretGroupResponse { return v.Secrets }).(VaultSecretGroupResponseArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o VirtualMachineScaleSetOSProfileResponseOutput) WindowsConfiguration() WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *WindowsConfigurationResponse {
		return v.WindowsConfiguration
	}).(WindowsConfigurationResponsePtrOutput)
}

type VirtualMachineScaleSetOSProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) ToVirtualMachineScaleSetOSProfileResponsePtrOutput() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) Elem() VirtualMachineScaleSetOSProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) VirtualMachineScaleSetOSProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetOSProfileResponse
		return ret
	}).(VirtualMachineScaleSetOSProfileResponseOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only
// restriction:** Cannot end in "." <br><br> **Disallowed values:**
// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3",
// "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup",
// "console", "david", "guest", "john", "owner", "root", "server", "sql",
// "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
// <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length
// (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies whether extension operations should be allowed on the virtual machine
// scale set. This may only be set to False when no extensions are present on the
// virtual machine scale set.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) AllowExtensionOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowExtensionOperations
	}).(pulumi.BoolPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale
// set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. For a
// list of supported Linux distributions, see [Linux on Azure-Endorsed
// Distributions](https://learn.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) LinuxConfiguration() LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *LinuxConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationResponsePtrOutput)
}

// Optional property which must either be set to True or omitted.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) RequireGuestProvisionSignal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireGuestProvisionSignal
	}).(pulumi.BoolPtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual
// machines in the scale set. To install certificates on a virtual machine it is
// recommended to use the [Azure Key Vault virtual machine extension for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) Secrets() VaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) []VaultSecretGroupResponse {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupResponseArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) WindowsConfiguration() WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *WindowsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationResponsePtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfiguration struct {
	// The publicIP address configuration name.
	Name string `pulumi:"name"`
	// Describes a virtual machines scale set IP Configuration's PublicIPAddress
	// configuration
	Properties *VirtualMachineScaleSetPublicIPAddressConfigurationProperties `pulumi:"properties"`
	// Describes the public IP Sku. It can only be set with OrchestrationMode as
	// Flexible.
	Sku *PublicIPAddressSku `pulumi:"sku"`
}

// VirtualMachineScaleSetPublicIPAddressConfigurationInput is an input type that accepts VirtualMachineScaleSetPublicIPAddressConfigurationArgs and VirtualMachineScaleSetPublicIPAddressConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetPublicIPAddressConfigurationInput` via:
//
//	VirtualMachineScaleSetPublicIPAddressConfigurationArgs{...}
type VirtualMachineScaleSetPublicIPAddressConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetPublicIPAddressConfigurationOutput() VirtualMachineScaleSetPublicIPAddressConfigurationOutput
	ToVirtualMachineScaleSetPublicIPAddressConfigurationOutputWithContext(context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationOutput
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationArgs struct {
	// The publicIP address configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Describes a virtual machines scale set IP Configuration's PublicIPAddress
	// configuration
	Properties VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrInput `pulumi:"properties"`
	// Describes the public IP Sku. It can only be set with OrchestrationMode as
	// Flexible.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
}

func (VirtualMachineScaleSetPublicIPAddressConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationOutput() VirtualMachineScaleSetPublicIPAddressConfigurationOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationOutput)
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationOutput).ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetPublicIPAddressConfigurationPtrInput is an input type that accepts VirtualMachineScaleSetPublicIPAddressConfigurationArgs, VirtualMachineScaleSetPublicIPAddressConfigurationPtr and VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetPublicIPAddressConfigurationPtrInput` via:
//
//	        VirtualMachineScaleSetPublicIPAddressConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetPublicIPAddressConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput
	ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput
}

type virtualMachineScaleSetPublicIPAddressConfigurationPtrType VirtualMachineScaleSetPublicIPAddressConfigurationArgs

func VirtualMachineScaleSetPublicIPAddressConfigurationPtr(v *VirtualMachineScaleSetPublicIPAddressConfigurationArgs) VirtualMachineScaleSetPublicIPAddressConfigurationPtrInput {
	return (*virtualMachineScaleSetPublicIPAddressConfigurationPtrType)(v)
}

func (*virtualMachineScaleSetPublicIPAddressConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfiguration)(nil)).Elem()
}

func (i *virtualMachineScaleSetPublicIPAddressConfigurationPtrType) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetPublicIPAddressConfigurationPtrType) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationOutput() VirtualMachineScaleSetPublicIPAddressConfigurationOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return o.ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetPublicIPAddressConfiguration) *VirtualMachineScaleSetPublicIPAddressConfiguration {
		return &v
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput)
}

// The publicIP address configuration name.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) Properties() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfiguration) *VirtualMachineScaleSetPublicIPAddressConfigurationProperties {
		return v.Properties
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfiguration) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

type VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) Elem() VirtualMachineScaleSetPublicIPAddressConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfiguration) VirtualMachineScaleSetPublicIPAddressConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetPublicIPAddressConfiguration
		return ret
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationOutput)
}

// The publicIP address configuration name.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) Properties() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfiguration) *VirtualMachineScaleSetPublicIPAddressConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfiguration) *PublicIPAddressSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuPtrOutput)
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings struct {
	// The Domain name label.The concatenation of the domain name label and vm index
	// will be the domain name labels of the PublicIPAddress resources that will be
	// created
	DomainNameLabel string `pulumi:"domainNameLabel"`
	// The Domain name label scope.The concatenation of the hashed domain name label
	// that generated according to the policy from domain name label scope and vm
	// index will be the domain name labels of the PublicIPAddress resources that will
	// be created
	DomainNameLabelScope *string `pulumi:"domainNameLabelScope"`
}

// VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsInput is an input type that accepts VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs and VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsInput` via:
//
//	VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs{...}
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput
	ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutputWithContext(context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs struct {
	// The Domain name label.The concatenation of the domain name label and vm index
	// will be the domain name labels of the PublicIPAddress resources that will be
	// created
	DomainNameLabel pulumi.StringInput `pulumi:"domainNameLabel"`
	// The Domain name label scope.The concatenation of the hashed domain name label
	// that generated according to the policy from domain name label scope and vm
	// index will be the domain name labels of the PublicIPAddress resources that will
	// be created
	DomainNameLabelScope pulumi.StringPtrInput `pulumi:"domainNameLabelScope"`
}

func (VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings)(nil)).Elem()
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput)
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput).ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrInput is an input type that accepts VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs, VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtr and VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrInput` via:
//
//	        VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput
	ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput
}

type virtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrType VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs

func VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtr(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrInput {
	return (*virtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrType)(v)
}

func (*virtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings)(nil)).Elem()
}

func (i *virtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrType) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrType) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput)
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return o.ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings) *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
		return &v
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput)
}

// The Domain name label.The concatenation of the domain name label and vm index
// will be the domain name labels of the PublicIPAddress resources that will be
// created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) DomainNameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings) string { return v.DomainNameLabel }).(pulumi.StringOutput)
}

// The Domain name label scope.The concatenation of the hashed domain name label
// that generated according to the policy from domain name label scope and vm
// index will be the domain name labels of the PublicIPAddress resources that will
// be created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput) DomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings) *string {
		return v.DomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput) Elem() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings
		return ret
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput)
}

// The Domain name label.The concatenation of the domain name label and vm index
// will be the domain name labels of the PublicIPAddress resources that will be
// created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Domain name label scope.The concatenation of the hashed domain name label
// that generated according to the policy from domain name label scope and vm
// index will be the domain name labels of the PublicIPAddress resources that will
// be created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput) DomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse struct {
	// The Domain name label.The concatenation of the domain name label and vm index
	// will be the domain name labels of the PublicIPAddress resources that will be
	// created
	DomainNameLabel string `pulumi:"domainNameLabel"`
	// The Domain name label scope.The concatenation of the hashed domain name label
	// that generated according to the policy from domain name label scope and vm
	// index will be the domain name labels of the PublicIPAddress resources that will
	// be created
	DomainNameLabelScope *string `pulumi:"domainNameLabelScope"`
}

// Describes a virtual machines scale sets network configuration's DNS settings.
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput {
	return o
}

// The Domain name label.The concatenation of the domain name label and vm index
// will be the domain name labels of the PublicIPAddress resources that will be
// created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse) string {
		return v.DomainNameLabel
	}).(pulumi.StringOutput)
}

// The Domain name label scope.The concatenation of the hashed domain name label
// that generated according to the policy from domain name label scope and vm
// index will be the domain name labels of the PublicIPAddress resources that will
// be created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput) DomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse) *string {
		return v.DomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput) Elem() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse) VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse
		return ret
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput)
}

// The Domain name label.The concatenation of the domain name label and vm index
// will be the domain name labels of the PublicIPAddress resources that will be
// created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Domain name label scope.The concatenation of the hashed domain name label
// that generated according to the policy from domain name label scope and vm
// index will be the domain name labels of the PublicIPAddress resources that will
// be created
func (o VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput) DomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationProperties struct {
	// Specify what happens to the public IP when the VM is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// The dns settings to be applied on the publicIP addresses .
	DnsSettings *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The list of IP tags associated with the public IP address.
	IpTags []VirtualMachineScaleSetIpTag `pulumi:"ipTags"`
	// Available from Api-Version 2019-07-01 onwards, it represents whether the
	// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
	// values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The PublicIPPrefix from which to allocate publicIP addresses.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
}

// VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesInput is an input type that accepts VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs and VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesInput` via:
//
//	VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs{...}
type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput
	ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutputWithContext(context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs struct {
	// Specify what happens to the public IP when the VM is deleted
	DeleteOption pulumi.StringPtrInput `pulumi:"deleteOption"`
	// The dns settings to be applied on the publicIP addresses .
	DnsSettings VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The list of IP tags associated with the public IP address.
	IpTags VirtualMachineScaleSetIpTagArrayInput `pulumi:"ipTags"`
	// Available from Api-Version 2019-07-01 onwards, it represents whether the
	// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
	// values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The PublicIPPrefix from which to allocate publicIP addresses.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
}

func (VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationProperties)(nil)).Elem()
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput)
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput).ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrInput is an input type that accepts VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs, VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtr and VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrInput` via:
//
//	        VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput
	ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput
}

type virtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrType VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs

func VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtr(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesArgs) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrInput {
	return (*virtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrType)(v)
}

func (*virtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationProperties)(nil)).Elem()
}

func (i *virtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrType) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return i.ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrType) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return o.ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *VirtualMachineScaleSetPublicIPAddressConfigurationProperties {
		return &v
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput)
}

// Specify what happens to the public IP when the VM is deleted
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// The dns settings to be applied on the publicIP addresses .
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) DnsSettings() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
		return v.DnsSettings
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput)
}

// The idle timeout of the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *int {
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The list of IP tags associated with the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) IpTags() VirtualMachineScaleSetIpTagArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) []VirtualMachineScaleSetIpTag {
		return v.IpTags
	}).(VirtualMachineScaleSetIpTagArrayOutput)
}

// Available from Api-Version 2019-07-01 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *string {
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The PublicIPPrefix from which to allocate publicIP addresses.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *SubResource {
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationProperties)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) Elem() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) VirtualMachineScaleSetPublicIPAddressConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetPublicIPAddressConfigurationProperties
		return ret
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput)
}

// Specify what happens to the public IP when the VM is deleted
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The dns settings to be applied on the publicIP addresses .
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) DnsSettings() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput)
}

// The idle timeout of the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The list of IP tags associated with the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) IpTags() VirtualMachineScaleSetIpTagArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) []VirtualMachineScaleSetIpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(VirtualMachineScaleSetIpTagArrayOutput)
}

// Available from Api-Version 2019-07-01 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The PublicIPPrefix from which to allocate publicIP addresses.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse struct {
	// Specify what happens to the public IP when the VM is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// The dns settings to be applied on the publicIP addresses .
	DnsSettings *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The list of IP tags associated with the public IP address.
	IpTags []VirtualMachineScaleSetIpTagResponse `pulumi:"ipTags"`
	// Available from Api-Version 2019-07-01 onwards, it represents whether the
	// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
	// values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The PublicIPPrefix from which to allocate publicIP addresses.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput {
	return o
}

// Specify what happens to the public IP when the VM is deleted
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *string {
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The dns settings to be applied on the publicIP addresses .
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) DnsSettings() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse {
		return v.DnsSettings
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput)
}

// The idle timeout of the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *int {
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The list of IP tags associated with the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) IpTags() VirtualMachineScaleSetIpTagResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) []VirtualMachineScaleSetIpTagResponse {
		return v.IpTags
	}).(VirtualMachineScaleSetIpTagResponseArrayOutput)
}

// Available from Api-Version 2019-07-01 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *string {
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The PublicIPPrefix from which to allocate publicIP addresses.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *SubResourceResponse {
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

type VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) Elem() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse
		return ret
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput)
}

// Specify what happens to the public IP when the VM is deleted
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The dns settings to be applied on the publicIP addresses .
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) DnsSettings() VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput)
}

// The idle timeout of the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The list of IP tags associated with the public IP address.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) IpTags() VirtualMachineScaleSetIpTagResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) []VirtualMachineScaleSetIpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(VirtualMachineScaleSetIpTagResponseArrayOutput)
}

// Available from Api-Version 2019-07-01 onwards, it represents whether the
// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
// values are: 'IPv4' and 'IPv6'.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The PublicIPPrefix from which to allocate publicIP addresses.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationResponse struct {
	// The publicIP address configuration name.
	Name string `pulumi:"name"`
	// Describes a virtual machines scale set IP Configuration's PublicIPAddress
	// configuration
	Properties *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse `pulumi:"properties"`
	// Describes the public IP Sku. It can only be set with OrchestrationMode as
	// Flexible.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
type VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetPublicIPAddressConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput() VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput {
	return o
}

// The publicIP address configuration name.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput) Properties() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationResponse) *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse {
		return v.Properties
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetPublicIPAddressConfigurationResponse) *PublicIPAddressSkuResponse {
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

type VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetPublicIPAddressConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput() VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) ToVirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) Elem() VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationResponse) VirtualMachineScaleSetPublicIPAddressConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetPublicIPAddressConfigurationResponse
		return ret
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput)
}

// The publicIP address configuration name.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress
// configuration
func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) Properties() VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationResponse) *VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput)
}

// Describes the public IP Sku. It can only be set with OrchestrationMode as
// Flexible.
func (o VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetPublicIPAddressConfigurationResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfile struct {
	// Specifies the parameters that are used to add data disks to the virtual
	// machines in the scale set. For more information about disks, see [About disks
	// and VHDs for Azure virtual
	// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
	DataDisks []VirtualMachineScaleSetDataDisk `pulumi:"dataDisks"`
	// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
	DiskControllerType *string `pulumi:"diskControllerType"`
	// Specifies information about the image to use. You can specify information about
	// platform images, marketplace images, or virtual machine images. This element is
	// required when you want to use a platform image, marketplace image, or virtual
	// machine image, but is not used in other creation operations.
	ImageReference *ImageReference `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual
	// machines in the scale set. For more information about disks, see [About disks
	// and VHDs for Azure virtual
	// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
	OsDisk *VirtualMachineScaleSetOSDisk `pulumi:"osDisk"`
}

// VirtualMachineScaleSetStorageProfileInput is an input type that accepts VirtualMachineScaleSetStorageProfileArgs and VirtualMachineScaleSetStorageProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfileInput` via:
//
//	VirtualMachineScaleSetStorageProfileArgs{...}
type VirtualMachineScaleSetStorageProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfileOutput() VirtualMachineScaleSetStorageProfileOutput
	ToVirtualMachineScaleSetStorageProfileOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfileOutput
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileArgs struct {
	// Specifies the parameters that are used to add data disks to the virtual
	// machines in the scale set. For more information about disks, see [About disks
	// and VHDs for Azure virtual
	// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
	DataDisks VirtualMachineScaleSetDataDiskArrayInput `pulumi:"dataDisks"`
	// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
	DiskControllerType pulumi.StringPtrInput `pulumi:"diskControllerType"`
	// Specifies information about the image to use. You can specify information about
	// platform images, marketplace images, or virtual machine images. This element is
	// required when you want to use a platform image, marketplace image, or virtual
	// machine image, but is not used in other creation operations.
	ImageReference ImageReferencePtrInput `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual
	// machines in the scale set. For more information about disks, see [About disks
	// and VHDs for Azure virtual
	// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
	OsDisk VirtualMachineScaleSetOSDiskPtrInput `pulumi:"osDisk"`
}

func (VirtualMachineScaleSetStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfileOutput() VirtualMachineScaleSetStorageProfileOutput {
	return i.ToVirtualMachineScaleSetStorageProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileOutput)
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileOutput).ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetStorageProfilePtrInput is an input type that accepts VirtualMachineScaleSetStorageProfileArgs, VirtualMachineScaleSetStorageProfilePtr and VirtualMachineScaleSetStorageProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfilePtrInput` via:
//
//	        VirtualMachineScaleSetStorageProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineScaleSetStorageProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput
	ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfilePtrOutput
}

type virtualMachineScaleSetStorageProfilePtrType VirtualMachineScaleSetStorageProfileArgs

func VirtualMachineScaleSetStorageProfilePtr(v *VirtualMachineScaleSetStorageProfileArgs) VirtualMachineScaleSetStorageProfilePtrInput {
	return (*virtualMachineScaleSetStorageProfilePtrType)(v)
}

func (*virtualMachineScaleSetStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetStorageProfilePtrType) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetStorageProfilePtrType) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfileOutput() VirtualMachineScaleSetStorageProfileOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineScaleSetStorageProfile) *VirtualMachineScaleSetStorageProfile {
		return &v
	}).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

// Specifies the parameters that are used to add data disks to the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfileOutput) DataDisks() VirtualMachineScaleSetDataDiskArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) []VirtualMachineScaleSetDataDisk { return v.DataDisks }).(VirtualMachineScaleSetDataDiskArrayOutput)
}

// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
func (o VirtualMachineScaleSetStorageProfileOutput) DiskControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) *string { return v.DiskControllerType }).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations.
func (o VirtualMachineScaleSetStorageProfileOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) *ImageReference { return v.ImageReference }).(ImageReferencePtrOutput)
}

// Specifies information about the operating system disk used by the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfileOutput) OsDisk() VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) *VirtualMachineScaleSetOSDisk { return v.OsDisk }).(VirtualMachineScaleSetOSDiskPtrOutput)
}

type VirtualMachineScaleSetStorageProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfilePtrOutput) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfilePtrOutput) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfilePtrOutput) Elem() VirtualMachineScaleSetStorageProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) VirtualMachineScaleSetStorageProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetStorageProfile
		return ret
	}).(VirtualMachineScaleSetStorageProfileOutput)
}

// Specifies the parameters that are used to add data disks to the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfilePtrOutput) DataDisks() VirtualMachineScaleSetDataDiskArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) []VirtualMachineScaleSetDataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(VirtualMachineScaleSetDataDiskArrayOutput)
}

// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
func (o VirtualMachineScaleSetStorageProfilePtrOutput) DiskControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.DiskControllerType
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations.
func (o VirtualMachineScaleSetStorageProfilePtrOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) *ImageReference {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferencePtrOutput)
}

// Specifies information about the operating system disk used by the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfilePtrOutput) OsDisk() VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) *VirtualMachineScaleSetOSDisk {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskPtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileResponse struct {
	// Specifies the parameters that are used to add data disks to the virtual
	// machines in the scale set. For more information about disks, see [About disks
	// and VHDs for Azure virtual
	// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
	DataDisks []VirtualMachineScaleSetDataDiskResponse `pulumi:"dataDisks"`
	// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
	DiskControllerType *string `pulumi:"diskControllerType"`
	// Specifies information about the image to use. You can specify information about
	// platform images, marketplace images, or virtual machine images. This element is
	// required when you want to use a platform image, marketplace image, or virtual
	// machine image, but is not used in other creation operations.
	ImageReference *ImageReferenceResponse `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual
	// machines in the scale set. For more information about disks, see [About disks
	// and VHDs for Azure virtual
	// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
	OsDisk *VirtualMachineScaleSetOSDiskResponse `pulumi:"osDisk"`
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileResponseOutput) ToVirtualMachineScaleSetStorageProfileResponseOutput() VirtualMachineScaleSetStorageProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponseOutput) ToVirtualMachineScaleSetStorageProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponseOutput {
	return o
}

// Specifies the parameters that are used to add data disks to the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfileResponseOutput) DataDisks() VirtualMachineScaleSetDataDiskResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) []VirtualMachineScaleSetDataDiskResponse {
		return v.DataDisks
	}).(VirtualMachineScaleSetDataDiskResponseArrayOutput)
}

// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
func (o VirtualMachineScaleSetStorageProfileResponseOutput) DiskControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) *string { return v.DiskControllerType }).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations.
func (o VirtualMachineScaleSetStorageProfileResponseOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) *ImageReferenceResponse { return v.ImageReference }).(ImageReferenceResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfileResponseOutput) OsDisk() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) *VirtualMachineScaleSetOSDiskResponse {
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskResponsePtrOutput)
}

type VirtualMachineScaleSetStorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) ToVirtualMachineScaleSetStorageProfileResponsePtrOutput() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) Elem() VirtualMachineScaleSetStorageProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) VirtualMachineScaleSetStorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineScaleSetStorageProfileResponse
		return ret
	}).(VirtualMachineScaleSetStorageProfileResponseOutput)
}

// Specifies the parameters that are used to add data disks to the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) DataDisks() VirtualMachineScaleSetDataDiskResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) []VirtualMachineScaleSetDataDiskResponse {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(VirtualMachineScaleSetDataDiskResponseArrayOutput)
}

// Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01
func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) DiskControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskControllerType
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about
// platform images, marketplace images, or virtual machine images. This element is
// required when you want to use a platform image, marketplace image, or virtual
// machine image, but is not used in other creation operations.
func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) *ImageReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferenceResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual
// machines in the scale set. For more information about disks, see [About disks
// and VHDs for Azure virtual
// machines](https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview).
func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) OsDisk() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) *VirtualMachineScaleSetOSDiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskResponsePtrOutput)
}

// Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
type VmSizeProfile struct {
	// The Sku name (e.g. 'Standard_DS1_v2')
	Name string `pulumi:"name"`
}

// VmSizeProfileInput is an input type that accepts VmSizeProfileArgs and VmSizeProfileOutput values.
// You can construct a concrete instance of `VmSizeProfileInput` via:
//
//	VmSizeProfileArgs{...}
type VmSizeProfileInput interface {
	pulumi.Input

	ToVmSizeProfileOutput() VmSizeProfileOutput
	ToVmSizeProfileOutputWithContext(context.Context) VmSizeProfileOutput
}

// Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
type VmSizeProfileArgs struct {
	// The Sku name (e.g. 'Standard_DS1_v2')
	Name pulumi.StringInput `pulumi:"name"`
}

func (VmSizeProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizeProfile)(nil)).Elem()
}

func (i VmSizeProfileArgs) ToVmSizeProfileOutput() VmSizeProfileOutput {
	return i.ToVmSizeProfileOutputWithContext(context.Background())
}

func (i VmSizeProfileArgs) ToVmSizeProfileOutputWithContext(ctx context.Context) VmSizeProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizeProfileOutput)
}

// VmSizeProfileArrayInput is an input type that accepts VmSizeProfileArray and VmSizeProfileArrayOutput values.
// You can construct a concrete instance of `VmSizeProfileArrayInput` via:
//
//	VmSizeProfileArray{ VmSizeProfileArgs{...} }
type VmSizeProfileArrayInput interface {
	pulumi.Input

	ToVmSizeProfileArrayOutput() VmSizeProfileArrayOutput
	ToVmSizeProfileArrayOutputWithContext(context.Context) VmSizeProfileArrayOutput
}

type VmSizeProfileArray []VmSizeProfileInput

func (VmSizeProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSizeProfile)(nil)).Elem()
}

func (i VmSizeProfileArray) ToVmSizeProfileArrayOutput() VmSizeProfileArrayOutput {
	return i.ToVmSizeProfileArrayOutputWithContext(context.Background())
}

func (i VmSizeProfileArray) ToVmSizeProfileArrayOutputWithContext(ctx context.Context) VmSizeProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmSizeProfileArrayOutput)
}

// Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
type VmSizeProfileOutput struct{ *pulumi.OutputState }

func (VmSizeProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizeProfile)(nil)).Elem()
}

func (o VmSizeProfileOutput) ToVmSizeProfileOutput() VmSizeProfileOutput {
	return o
}

func (o VmSizeProfileOutput) ToVmSizeProfileOutputWithContext(ctx context.Context) VmSizeProfileOutput {
	return o
}

// The Sku name (e.g. 'Standard_DS1_v2')
func (o VmSizeProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VmSizeProfile) string { return v.Name }).(pulumi.StringOutput)
}

type VmSizeProfileArrayOutput struct{ *pulumi.OutputState }

func (VmSizeProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSizeProfile)(nil)).Elem()
}

func (o VmSizeProfileArrayOutput) ToVmSizeProfileArrayOutput() VmSizeProfileArrayOutput {
	return o
}

func (o VmSizeProfileArrayOutput) ToVmSizeProfileArrayOutputWithContext(ctx context.Context) VmSizeProfileArrayOutput {
	return o
}

func (o VmSizeProfileArrayOutput) Index(i pulumi.IntInput) VmSizeProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmSizeProfile {
		return vs[0].([]VmSizeProfile)[vs[1].(int)]
	}).(VmSizeProfileOutput)
}

// Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
type VmSizeProfileResponse struct {
	// The Sku name (e.g. 'Standard_DS1_v2')
	Name string `pulumi:"name"`
}

// Specifications about a VM Size. This will also contain the corresponding rank and weight in future.
type VmSizeProfileResponseOutput struct{ *pulumi.OutputState }

func (VmSizeProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSizeProfileResponse)(nil)).Elem()
}

func (o VmSizeProfileResponseOutput) ToVmSizeProfileResponseOutput() VmSizeProfileResponseOutput {
	return o
}

func (o VmSizeProfileResponseOutput) ToVmSizeProfileResponseOutputWithContext(ctx context.Context) VmSizeProfileResponseOutput {
	return o
}

// The Sku name (e.g. 'Standard_DS1_v2')
func (o VmSizeProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VmSizeProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

type VmSizeProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (VmSizeProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSizeProfileResponse)(nil)).Elem()
}

func (o VmSizeProfileResponseArrayOutput) ToVmSizeProfileResponseArrayOutput() VmSizeProfileResponseArrayOutput {
	return o
}

func (o VmSizeProfileResponseArrayOutput) ToVmSizeProfileResponseArrayOutputWithContext(ctx context.Context) VmSizeProfileResponseArrayOutput {
	return o
}

func (o VmSizeProfileResponseArrayOutput) Index(i pulumi.IntInput) VmSizeProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmSizeProfileResponse {
		return vs[0].([]VmSizeProfileResponse)[vs[1].(int)]
	}).(VmSizeProfileResponseOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfiguration struct {
	// The list of Windows Remote Management listeners
	Listeners []WinRMListener `pulumi:"listeners"`
}

// WinRMConfigurationInput is an input type that accepts WinRMConfigurationArgs and WinRMConfigurationOutput values.
// You can construct a concrete instance of `WinRMConfigurationInput` via:
//
//	WinRMConfigurationArgs{...}
type WinRMConfigurationInput interface {
	pulumi.Input

	ToWinRMConfigurationOutput() WinRMConfigurationOutput
	ToWinRMConfigurationOutputWithContext(context.Context) WinRMConfigurationOutput
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationArgs struct {
	// The list of Windows Remote Management listeners
	Listeners WinRMListenerArrayInput `pulumi:"listeners"`
}

func (WinRMConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfiguration)(nil)).Elem()
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationOutput() WinRMConfigurationOutput {
	return i.ToWinRMConfigurationOutputWithContext(context.Background())
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationOutputWithContext(ctx context.Context) WinRMConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationOutput)
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return i.ToWinRMConfigurationPtrOutputWithContext(context.Background())
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationOutput).ToWinRMConfigurationPtrOutputWithContext(ctx)
}

// WinRMConfigurationPtrInput is an input type that accepts WinRMConfigurationArgs, WinRMConfigurationPtr and WinRMConfigurationPtrOutput values.
// You can construct a concrete instance of `WinRMConfigurationPtrInput` via:
//
//	        WinRMConfigurationArgs{...}
//
//	or:
//
//	        nil
type WinRMConfigurationPtrInput interface {
	pulumi.Input

	ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput
	ToWinRMConfigurationPtrOutputWithContext(context.Context) WinRMConfigurationPtrOutput
}

type winRMConfigurationPtrType WinRMConfigurationArgs

func WinRMConfigurationPtr(v *WinRMConfigurationArgs) WinRMConfigurationPtrInput {
	return (*winRMConfigurationPtrType)(v)
}

func (*winRMConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfiguration)(nil)).Elem()
}

func (i *winRMConfigurationPtrType) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return i.ToWinRMConfigurationPtrOutputWithContext(context.Background())
}

func (i *winRMConfigurationPtrType) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationPtrOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfiguration)(nil)).Elem()
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationOutput() WinRMConfigurationOutput {
	return o
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationOutputWithContext(ctx context.Context) WinRMConfigurationOutput {
	return o
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return o.ToWinRMConfigurationPtrOutputWithContext(context.Background())
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WinRMConfiguration) *WinRMConfiguration {
		return &v
	}).(WinRMConfigurationPtrOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationOutput) Listeners() WinRMListenerArrayOutput {
	return o.ApplyT(func(v WinRMConfiguration) []WinRMListener { return v.Listeners }).(WinRMListenerArrayOutput)
}

type WinRMConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfiguration)(nil)).Elem()
}

func (o WinRMConfigurationPtrOutput) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return o
}

func (o WinRMConfigurationPtrOutput) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return o
}

func (o WinRMConfigurationPtrOutput) Elem() WinRMConfigurationOutput {
	return o.ApplyT(func(v *WinRMConfiguration) WinRMConfiguration {
		if v != nil {
			return *v
		}
		var ret WinRMConfiguration
		return ret
	}).(WinRMConfigurationOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationPtrOutput) Listeners() WinRMListenerArrayOutput {
	return o.ApplyT(func(v *WinRMConfiguration) []WinRMListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(WinRMListenerArrayOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationResponse struct {
	// The list of Windows Remote Management listeners
	Listeners []WinRMListenerResponse `pulumi:"listeners"`
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfigurationResponse)(nil)).Elem()
}

func (o WinRMConfigurationResponseOutput) ToWinRMConfigurationResponseOutput() WinRMConfigurationResponseOutput {
	return o
}

func (o WinRMConfigurationResponseOutput) ToWinRMConfigurationResponseOutputWithContext(ctx context.Context) WinRMConfigurationResponseOutput {
	return o
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationResponseOutput) Listeners() WinRMListenerResponseArrayOutput {
	return o.ApplyT(func(v WinRMConfigurationResponse) []WinRMListenerResponse { return v.Listeners }).(WinRMListenerResponseArrayOutput)
}

type WinRMConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfigurationResponse)(nil)).Elem()
}

func (o WinRMConfigurationResponsePtrOutput) ToWinRMConfigurationResponsePtrOutput() WinRMConfigurationResponsePtrOutput {
	return o
}

func (o WinRMConfigurationResponsePtrOutput) ToWinRMConfigurationResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationResponsePtrOutput {
	return o
}

func (o WinRMConfigurationResponsePtrOutput) Elem() WinRMConfigurationResponseOutput {
	return o.ApplyT(func(v *WinRMConfigurationResponse) WinRMConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret WinRMConfigurationResponse
		return ret
	}).(WinRMConfigurationResponseOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationResponsePtrOutput) Listeners() WinRMListenerResponseArrayOutput {
	return o.ApplyT(func(v *WinRMConfigurationResponse) []WinRMListenerResponse {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(WinRMListenerResponseArrayOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListener struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a
	// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
	// key
	// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
	// In this case, your certificate needs to be the Base64 encoding of the following
	// JSON Object which is encoded in UTF-8: <br><br> {<br>
	// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
	// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
	// machine it is recommended to use the [Azure Key Vault virtual machine extension
	// for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of WinRM listener. Possible values are: **http,**
	// **https.**
	Protocol *string `pulumi:"protocol"`
}

// WinRMListenerInput is an input type that accepts WinRMListenerArgs and WinRMListenerOutput values.
// You can construct a concrete instance of `WinRMListenerInput` via:
//
//	WinRMListenerArgs{...}
type WinRMListenerInput interface {
	pulumi.Input

	ToWinRMListenerOutput() WinRMListenerOutput
	ToWinRMListenerOutputWithContext(context.Context) WinRMListenerOutput
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerArgs struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a
	// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
	// key
	// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
	// In this case, your certificate needs to be the Base64 encoding of the following
	// JSON Object which is encoded in UTF-8: <br><br> {<br>
	// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
	// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
	// machine it is recommended to use the [Azure Key Vault virtual machine extension
	// for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// Specifies the protocol of WinRM listener. Possible values are: **http,**
	// **https.**
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WinRMListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListener)(nil)).Elem()
}

func (i WinRMListenerArgs) ToWinRMListenerOutput() WinRMListenerOutput {
	return i.ToWinRMListenerOutputWithContext(context.Background())
}

func (i WinRMListenerArgs) ToWinRMListenerOutputWithContext(ctx context.Context) WinRMListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerOutput)
}

// WinRMListenerArrayInput is an input type that accepts WinRMListenerArray and WinRMListenerArrayOutput values.
// You can construct a concrete instance of `WinRMListenerArrayInput` via:
//
//	WinRMListenerArray{ WinRMListenerArgs{...} }
type WinRMListenerArrayInput interface {
	pulumi.Input

	ToWinRMListenerArrayOutput() WinRMListenerArrayOutput
	ToWinRMListenerArrayOutputWithContext(context.Context) WinRMListenerArrayOutput
}

type WinRMListenerArray []WinRMListenerInput

func (WinRMListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListener)(nil)).Elem()
}

func (i WinRMListenerArray) ToWinRMListenerArrayOutput() WinRMListenerArrayOutput {
	return i.ToWinRMListenerArrayOutputWithContext(context.Background())
}

func (i WinRMListenerArray) ToWinRMListenerArrayOutputWithContext(ctx context.Context) WinRMListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerArrayOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerOutput struct{ *pulumi.OutputState }

func (WinRMListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListener)(nil)).Elem()
}

func (o WinRMListenerOutput) ToWinRMListenerOutput() WinRMListenerOutput {
	return o
}

func (o WinRMListenerOutput) ToWinRMListenerOutputWithContext(ctx context.Context) WinRMListenerOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a
// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
// key
// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
// In this case, your certificate needs to be the Base64 encoding of the following
// JSON Object which is encoded in UTF-8: <br><br> {<br>
// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
// machine it is recommended to use the [Azure Key Vault virtual machine extension
// for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o WinRMListenerOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListener) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of WinRM listener. Possible values are: **http,**
// **https.**
func (o WinRMListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WinRMListenerArrayOutput struct{ *pulumi.OutputState }

func (WinRMListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListener)(nil)).Elem()
}

func (o WinRMListenerArrayOutput) ToWinRMListenerArrayOutput() WinRMListenerArrayOutput {
	return o
}

func (o WinRMListenerArrayOutput) ToWinRMListenerArrayOutputWithContext(ctx context.Context) WinRMListenerArrayOutput {
	return o
}

func (o WinRMListenerArrayOutput) Index(i pulumi.IntInput) WinRMListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WinRMListener {
		return vs[0].([]WinRMListener)[vs[1].(int)]
	}).(WinRMListenerOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerResponse struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a
	// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
	// key
	// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
	// In this case, your certificate needs to be the Base64 encoding of the following
	// JSON Object which is encoded in UTF-8: <br><br> {<br>
	// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
	// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
	// machine it is recommended to use the [Azure Key Vault virtual machine extension
	// for
	// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
	// or the [Azure Key Vault virtual machine extension for
	// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of WinRM listener. Possible values are: **http,**
	// **https.**
	Protocol *string `pulumi:"protocol"`
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerResponseOutput struct{ *pulumi.OutputState }

func (WinRMListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListenerResponse)(nil)).Elem()
}

func (o WinRMListenerResponseOutput) ToWinRMListenerResponseOutput() WinRMListenerResponseOutput {
	return o
}

func (o WinRMListenerResponseOutput) ToWinRMListenerResponseOutputWithContext(ctx context.Context) WinRMListenerResponseOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a
// secret. For adding a secret to the Key Vault, see [Add a key or secret to the
// key
// vault](https://learn.microsoft.com/azure/key-vault/key-vault-get-started/#add).
// In this case, your certificate needs to be the Base64 encoding of the following
// JSON Object which is encoded in UTF-8: <br><br> {<br>
// "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
// "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual
// machine it is recommended to use the [Azure Key Vault virtual machine extension
// for
// Linux](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
// or the [Azure Key Vault virtual machine extension for
// Windows](https://learn.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
func (o WinRMListenerResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListenerResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of WinRM listener. Possible values are: **http,**
// **https.**
func (o WinRMListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WinRMListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (WinRMListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListenerResponse)(nil)).Elem()
}

func (o WinRMListenerResponseArrayOutput) ToWinRMListenerResponseArrayOutput() WinRMListenerResponseArrayOutput {
	return o
}

func (o WinRMListenerResponseArrayOutput) ToWinRMListenerResponseArrayOutputWithContext(ctx context.Context) WinRMListenerResponseArrayOutput {
	return o
}

func (o WinRMListenerResponseArrayOutput) Index(i pulumi.IntInput) WinRMListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WinRMListenerResponse {
		return vs[0].([]WinRMListenerResponse)[vs[1].(int)]
	}).(WinRMListenerResponseOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfiguration struct {
	// Specifies additional base-64 encoded XML formatted information that can be
	// included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent []AdditionalUnattendContent `pulumi:"additionalUnattendContent"`
	// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
	// Default value is true. For virtual machine scale sets, this property can be
	// updated and updates will take effect on OS reprovisioning.
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
	// machine. Default value is false.
	EnableVMAgentPlatformUpdates *bool `pulumi:"enableVMAgentPlatformUpdates"`
	// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
	PatchSettings *PatchSettings `pulumi:"patchSettings"`
	// Indicates whether virtual machine agent should be provisioned on the virtual
	// machine. When this property is not specified in the request body, it is set to
	// true by default. This will ensure that VM Agent is installed on the VM so that
	// extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
	// Possible values can be
	// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
	// value from time zones returned by
	// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows
	// PowerShell.
	WinRM *WinRMConfiguration `pulumi:"winRM"`
}

// WindowsConfigurationInput is an input type that accepts WindowsConfigurationArgs and WindowsConfigurationOutput values.
// You can construct a concrete instance of `WindowsConfigurationInput` via:
//
//	WindowsConfigurationArgs{...}
type WindowsConfigurationInput interface {
	pulumi.Input

	ToWindowsConfigurationOutput() WindowsConfigurationOutput
	ToWindowsConfigurationOutputWithContext(context.Context) WindowsConfigurationOutput
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationArgs struct {
	// Specifies additional base-64 encoded XML formatted information that can be
	// included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent AdditionalUnattendContentArrayInput `pulumi:"additionalUnattendContent"`
	// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
	// Default value is true. For virtual machine scale sets, this property can be
	// updated and updates will take effect on OS reprovisioning.
	EnableAutomaticUpdates pulumi.BoolPtrInput `pulumi:"enableAutomaticUpdates"`
	// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
	// machine. Default value is false.
	EnableVMAgentPlatformUpdates pulumi.BoolPtrInput `pulumi:"enableVMAgentPlatformUpdates"`
	// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
	PatchSettings PatchSettingsPtrInput `pulumi:"patchSettings"`
	// Indicates whether virtual machine agent should be provisioned on the virtual
	// machine. When this property is not specified in the request body, it is set to
	// true by default. This will ensure that VM Agent is installed on the VM so that
	// extensions can be added to the VM later.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
	// Possible values can be
	// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
	// value from time zones returned by
	// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows
	// PowerShell.
	WinRM WinRMConfigurationPtrInput `pulumi:"winRM"`
}

func (WindowsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfiguration)(nil)).Elem()
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationOutput() WindowsConfigurationOutput {
	return i.ToWindowsConfigurationOutputWithContext(context.Background())
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationOutputWithContext(ctx context.Context) WindowsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationOutput)
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return i.ToWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationOutput).ToWindowsConfigurationPtrOutputWithContext(ctx)
}

// WindowsConfigurationPtrInput is an input type that accepts WindowsConfigurationArgs, WindowsConfigurationPtr and WindowsConfigurationPtrOutput values.
// You can construct a concrete instance of `WindowsConfigurationPtrInput` via:
//
//	        WindowsConfigurationArgs{...}
//
//	or:
//
//	        nil
type WindowsConfigurationPtrInput interface {
	pulumi.Input

	ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput
	ToWindowsConfigurationPtrOutputWithContext(context.Context) WindowsConfigurationPtrOutput
}

type windowsConfigurationPtrType WindowsConfigurationArgs

func WindowsConfigurationPtr(v *WindowsConfigurationArgs) WindowsConfigurationPtrInput {
	return (*windowsConfigurationPtrType)(v)
}

func (*windowsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfiguration)(nil)).Elem()
}

func (i *windowsConfigurationPtrType) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return i.ToWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (i *windowsConfigurationPtrType) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationPtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfiguration)(nil)).Elem()
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationOutput() WindowsConfigurationOutput {
	return o
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationOutputWithContext(ctx context.Context) WindowsConfigurationOutput {
	return o
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return o.ToWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsConfiguration) *WindowsConfiguration {
		return &v
	}).(WindowsConfigurationPtrOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be
// included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationOutput) AdditionalUnattendContent() AdditionalUnattendContentArrayOutput {
	return o.ApplyT(func(v WindowsConfiguration) []AdditionalUnattendContent { return v.AdditionalUnattendContent }).(AdditionalUnattendContentArrayOutput)
}

// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
// Default value is true. For virtual machine scale sets, this property can be
// updated and updates will take effect on OS reprovisioning.
func (o WindowsConfigurationOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *bool { return v.EnableAutomaticUpdates }).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
// machine. Default value is false.
func (o WindowsConfigurationOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *bool { return v.EnableVMAgentPlatformUpdates }).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
func (o WindowsConfigurationOutput) PatchSettings() PatchSettingsPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *PatchSettings { return v.PatchSettings }).(PatchSettingsPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, it is set to
// true by default. This will ensure that VM Agent is installed on the VM so that
// extensions can be added to the VM later.
func (o WindowsConfigurationOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
// Possible values can be
// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
// value from time zones returned by
// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
func (o WindowsConfigurationOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows
// PowerShell.
func (o WindowsConfigurationOutput) WinRM() WinRMConfigurationPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *WinRMConfiguration { return v.WinRM }).(WinRMConfigurationPtrOutput)
}

type WindowsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfiguration)(nil)).Elem()
}

func (o WindowsConfigurationPtrOutput) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return o
}

func (o WindowsConfigurationPtrOutput) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return o
}

func (o WindowsConfigurationPtrOutput) Elem() WindowsConfigurationOutput {
	return o.ApplyT(func(v *WindowsConfiguration) WindowsConfiguration {
		if v != nil {
			return *v
		}
		var ret WindowsConfiguration
		return ret
	}).(WindowsConfigurationOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be
// included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationPtrOutput) AdditionalUnattendContent() AdditionalUnattendContentArrayOutput {
	return o.ApplyT(func(v *WindowsConfiguration) []AdditionalUnattendContent {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentArrayOutput)
}

// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
// Default value is true. For virtual machine scale sets, this property can be
// updated and updates will take effect on OS reprovisioning.
func (o WindowsConfigurationPtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
// machine. Default value is false.
func (o WindowsConfigurationPtrOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVMAgentPlatformUpdates
	}).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
func (o WindowsConfigurationPtrOutput) PatchSettings() PatchSettingsPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *PatchSettings {
		if v == nil {
			return nil
		}
		return v.PatchSettings
	}).(PatchSettingsPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, it is set to
// true by default. This will ensure that VM Agent is installed on the VM so that
// extensions can be added to the VM later.
func (o WindowsConfigurationPtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
// Possible values can be
// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
// value from time zones returned by
// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
func (o WindowsConfigurationPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows
// PowerShell.
func (o WindowsConfigurationPtrOutput) WinRM() WinRMConfigurationPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *WinRMConfiguration {
		if v == nil {
			return nil
		}
		return v.WinRM
	}).(WinRMConfigurationPtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationResponse struct {
	// Specifies additional base-64 encoded XML formatted information that can be
	// included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent []AdditionalUnattendContentResponse `pulumi:"additionalUnattendContent"`
	// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
	// Default value is true. For virtual machine scale sets, this property can be
	// updated and updates will take effect on OS reprovisioning.
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
	// machine. Default value is false.
	EnableVMAgentPlatformUpdates *bool `pulumi:"enableVMAgentPlatformUpdates"`
	// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
	PatchSettings *PatchSettingsResponse `pulumi:"patchSettings"`
	// Indicates whether virtual machine agent should be provisioned on the virtual
	// machine. When this property is not specified in the request body, it is set to
	// true by default. This will ensure that VM Agent is installed on the VM so that
	// extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
	// Possible values can be
	// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
	// value from time zones returned by
	// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows
	// PowerShell.
	WinRM *WinRMConfigurationResponse `pulumi:"winRM"`
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfigurationResponse)(nil)).Elem()
}

func (o WindowsConfigurationResponseOutput) ToWindowsConfigurationResponseOutput() WindowsConfigurationResponseOutput {
	return o
}

func (o WindowsConfigurationResponseOutput) ToWindowsConfigurationResponseOutputWithContext(ctx context.Context) WindowsConfigurationResponseOutput {
	return o
}

// Specifies additional base-64 encoded XML formatted information that can be
// included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationResponseOutput) AdditionalUnattendContent() AdditionalUnattendContentResponseArrayOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) []AdditionalUnattendContentResponse {
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentResponseArrayOutput)
}

// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
// Default value is true. For virtual machine scale sets, this property can be
// updated and updates will take effect on OS reprovisioning.
func (o WindowsConfigurationResponseOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *bool { return v.EnableAutomaticUpdates }).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
// machine. Default value is false.
func (o WindowsConfigurationResponseOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *bool { return v.EnableVMAgentPlatformUpdates }).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
func (o WindowsConfigurationResponseOutput) PatchSettings() PatchSettingsResponsePtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *PatchSettingsResponse { return v.PatchSettings }).(PatchSettingsResponsePtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, it is set to
// true by default. This will ensure that VM Agent is installed on the VM so that
// extensions can be added to the VM later.
func (o WindowsConfigurationResponseOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
// Possible values can be
// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
// value from time zones returned by
// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
func (o WindowsConfigurationResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows
// PowerShell.
func (o WindowsConfigurationResponseOutput) WinRM() WinRMConfigurationResponsePtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *WinRMConfigurationResponse { return v.WinRM }).(WinRMConfigurationResponsePtrOutput)
}

type WindowsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfigurationResponse)(nil)).Elem()
}

func (o WindowsConfigurationResponsePtrOutput) ToWindowsConfigurationResponsePtrOutput() WindowsConfigurationResponsePtrOutput {
	return o
}

func (o WindowsConfigurationResponsePtrOutput) ToWindowsConfigurationResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationResponsePtrOutput {
	return o
}

func (o WindowsConfigurationResponsePtrOutput) Elem() WindowsConfigurationResponseOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) WindowsConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret WindowsConfigurationResponse
		return ret
	}).(WindowsConfigurationResponseOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be
// included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationResponsePtrOutput) AdditionalUnattendContent() AdditionalUnattendContentResponseArrayOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) []AdditionalUnattendContentResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentResponseArrayOutput)
}

// Indicates whether Automatic Updates is enabled for the Windows virtual machine.
// Default value is true. For virtual machine scale sets, this property can be
// updated and updates will take effect on OS reprovisioning.
func (o WindowsConfigurationResponsePtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether VMAgent Platform Updates is enabled for the Windows virtual
// machine. Default value is false.
func (o WindowsConfigurationResponsePtrOutput) EnableVMAgentPlatformUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVMAgentPlatformUpdates
	}).(pulumi.BoolPtrOutput)
}

// [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
func (o WindowsConfigurationResponsePtrOutput) PatchSettings() PatchSettingsResponsePtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *PatchSettingsResponse {
		if v == nil {
			return nil
		}
		return v.PatchSettings
	}).(PatchSettingsResponsePtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual
// machine. When this property is not specified in the request body, it is set to
// true by default. This will ensure that VM Agent is installed on the VM so that
// extensions can be added to the VM later.
func (o WindowsConfigurationResponsePtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time".
// Possible values can be
// [TimeZoneInfo.Id](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
// value from time zones returned by
// [TimeZoneInfo.GetSystemTimeZones](https://learn.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
func (o WindowsConfigurationResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows
// PowerShell.
func (o WindowsConfigurationResponsePtrOutput) WinRM() WinRMConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *WinRMConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WinRM
	}).(WinRMConfigurationResponsePtrOutput)
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Windows patch settings.
type WindowsVMGuestPatchAutomaticByPlatformSettings struct {
	// Enables customer to schedule patching without accidental upgrades
	BypassPlatformSafetyChecksOnUserSchedule *bool `pulumi:"bypassPlatformSafetyChecksOnUserSchedule"`
	// Specifies the reboot setting for all AutomaticByPlatform patch installation
	// operations.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// WindowsVMGuestPatchAutomaticByPlatformSettingsInput is an input type that accepts WindowsVMGuestPatchAutomaticByPlatformSettingsArgs and WindowsVMGuestPatchAutomaticByPlatformSettingsOutput values.
// You can construct a concrete instance of `WindowsVMGuestPatchAutomaticByPlatformSettingsInput` via:
//
//	WindowsVMGuestPatchAutomaticByPlatformSettingsArgs{...}
type WindowsVMGuestPatchAutomaticByPlatformSettingsInput interface {
	pulumi.Input

	ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsOutput
	ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsOutput
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Windows patch settings.
type WindowsVMGuestPatchAutomaticByPlatformSettingsArgs struct {
	// Enables customer to schedule patching without accidental upgrades
	BypassPlatformSafetyChecksOnUserSchedule pulumi.BoolPtrInput `pulumi:"bypassPlatformSafetyChecksOnUserSchedule"`
	// Specifies the reboot setting for all AutomaticByPlatform patch installation
	// operations.
	RebootSetting pulumi.StringPtrInput `pulumi:"rebootSetting"`
}

func (WindowsVMGuestPatchAutomaticByPlatformSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (i WindowsVMGuestPatchAutomaticByPlatformSettingsArgs) ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsOutput {
	return i.ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(context.Background())
}

func (i WindowsVMGuestPatchAutomaticByPlatformSettingsArgs) ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVMGuestPatchAutomaticByPlatformSettingsOutput)
}

func (i WindowsVMGuestPatchAutomaticByPlatformSettingsArgs) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return i.ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Background())
}

func (i WindowsVMGuestPatchAutomaticByPlatformSettingsArgs) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVMGuestPatchAutomaticByPlatformSettingsOutput).ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx)
}

// WindowsVMGuestPatchAutomaticByPlatformSettingsPtrInput is an input type that accepts WindowsVMGuestPatchAutomaticByPlatformSettingsArgs, WindowsVMGuestPatchAutomaticByPlatformSettingsPtr and WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput values.
// You can construct a concrete instance of `WindowsVMGuestPatchAutomaticByPlatformSettingsPtrInput` via:
//
//	        WindowsVMGuestPatchAutomaticByPlatformSettingsArgs{...}
//
//	or:
//
//	        nil
type WindowsVMGuestPatchAutomaticByPlatformSettingsPtrInput interface {
	pulumi.Input

	ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput
	ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput
}

type windowsVMGuestPatchAutomaticByPlatformSettingsPtrType WindowsVMGuestPatchAutomaticByPlatformSettingsArgs

func WindowsVMGuestPatchAutomaticByPlatformSettingsPtr(v *WindowsVMGuestPatchAutomaticByPlatformSettingsArgs) WindowsVMGuestPatchAutomaticByPlatformSettingsPtrInput {
	return (*windowsVMGuestPatchAutomaticByPlatformSettingsPtrType)(v)
}

func (*windowsVMGuestPatchAutomaticByPlatformSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (i *windowsVMGuestPatchAutomaticByPlatformSettingsPtrType) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return i.ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Background())
}

func (i *windowsVMGuestPatchAutomaticByPlatformSettingsPtrType) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Windows patch settings.
type WindowsVMGuestPatchAutomaticByPlatformSettingsOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(context.Background())
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsVMGuestPatchAutomaticByPlatformSettings) *WindowsVMGuestPatchAutomaticByPlatformSettings {
		return &v
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput)
}

// Enables customer to schedule patching without accidental upgrades
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVMGuestPatchAutomaticByPlatformSettings) *bool {
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVMGuestPatchAutomaticByPlatformSettings) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVMGuestPatchAutomaticByPlatformSettings)(nil)).Elem()
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput) Elem() WindowsVMGuestPatchAutomaticByPlatformSettingsOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformSettings) WindowsVMGuestPatchAutomaticByPlatformSettings {
		if v != nil {
			return *v
		}
		var ret WindowsVMGuestPatchAutomaticByPlatformSettings
		return ret
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsOutput)
}

// Enables customer to schedule patching without accidental upgrades
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformSettings) *bool {
		if v == nil {
			return nil
		}
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformSettings) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Windows patch settings.
type WindowsVMGuestPatchAutomaticByPlatformSettingsResponse struct {
	// Enables customer to schedule patching without accidental upgrades
	BypassPlatformSafetyChecksOnUserSchedule *bool `pulumi:"bypassPlatformSafetyChecksOnUserSchedule"`
	// Specifies the reboot setting for all AutomaticByPlatform patch installation
	// operations.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// Specifies additional settings to be applied when patch mode AutomaticByPlatform
// is selected in Windows patch settings.
type WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVMGuestPatchAutomaticByPlatformSettingsResponse)(nil)).Elem()
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput {
	return o
}

// Enables customer to schedule patching without accidental upgrades
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVMGuestPatchAutomaticByPlatformSettingsResponse) *bool {
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVMGuestPatchAutomaticByPlatformSettingsResponse) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVMGuestPatchAutomaticByPlatformSettingsResponse)(nil)).Elem()
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput() WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) ToWindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutputWithContext(ctx context.Context) WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput {
	return o
}

func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) Elem() WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformSettingsResponse) WindowsVMGuestPatchAutomaticByPlatformSettingsResponse {
		if v != nil {
			return *v
		}
		var ret WindowsVMGuestPatchAutomaticByPlatformSettingsResponse
		return ret
	}).(WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput)
}

// Enables customer to schedule patching without accidental upgrades
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) BypassPlatformSafetyChecksOnUserSchedule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BypassPlatformSafetyChecksOnUserSchedule
	}).(pulumi.BoolPtrOutput)
}

// Specifies the reboot setting for all AutomaticByPlatform patch installation
// operations.
func (o WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVMGuestPatchAutomaticByPlatformSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalUnattendContentOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentArrayOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentResponseOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiEntityReferenceOutput{})
	pulumi.RegisterOutputType(ApiEntityReferencePtrOutput{})
	pulumi.RegisterOutputType(ApiEntityReferenceResponseOutput{})
	pulumi.RegisterOutputType(ApiEntityReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationProfileOutput{})
	pulumi.RegisterOutputType(ApplicationProfilePtrOutput{})
	pulumi.RegisterOutputType(ApplicationProfileResponseOutput{})
	pulumi.RegisterOutputType(ApplicationProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(BaseVirtualMachineProfileOutput{})
	pulumi.RegisterOutputType(BaseVirtualMachineProfileResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(CapacityReservationProfileOutput{})
	pulumi.RegisterOutputType(CapacityReservationProfilePtrOutput{})
	pulumi.RegisterOutputType(CapacityReservationProfileResponseOutput{})
	pulumi.RegisterOutputType(CapacityReservationProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeProfileOutput{})
	pulumi.RegisterOutputType(ComputeProfileResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfilePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(DiffDiskSettingsOutput{})
	pulumi.RegisterOutputType(DiffDiskSettingsPtrOutput{})
	pulumi.RegisterOutputType(DiffDiskSettingsResponseOutput{})
	pulumi.RegisterOutputType(DiffDiskSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetParametersOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetParametersPtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetParametersResponseOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityPtrOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityResponseOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageReferenceOutput{})
	pulumi.RegisterOutputType(ImageReferencePtrOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxPatchSettingsOutput{})
	pulumi.RegisterOutputType(LinuxPatchSettingsPtrOutput{})
	pulumi.RegisterOutputType(LinuxPatchSettingsResponseOutput{})
	pulumi.RegisterOutputType(LinuxPatchSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchAutomaticByPlatformSettingsOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchAutomaticByPlatformSettingsPtrOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchAutomaticByPlatformSettingsResponseOutput{})
	pulumi.RegisterOutputType(LinuxVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(OSImageNotificationProfileOutput{})
	pulumi.RegisterOutputType(OSImageNotificationProfilePtrOutput{})
	pulumi.RegisterOutputType(OSImageNotificationProfileResponseOutput{})
	pulumi.RegisterOutputType(OSImageNotificationProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(PatchSettingsOutput{})
	pulumi.RegisterOutputType(PatchSettingsPtrOutput{})
	pulumi.RegisterOutputType(PatchSettingsResponseOutput{})
	pulumi.RegisterOutputType(PatchSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(PlanResponseOutput{})
	pulumi.RegisterOutputType(PlanResponsePtrOutput{})
	pulumi.RegisterOutputType(ProxyAgentSettingsOutput{})
	pulumi.RegisterOutputType(ProxyAgentSettingsPtrOutput{})
	pulumi.RegisterOutputType(ProxyAgentSettingsResponseOutput{})
	pulumi.RegisterOutputType(ProxyAgentSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(RegularPriorityProfileOutput{})
	pulumi.RegisterOutputType(RegularPriorityProfilePtrOutput{})
	pulumi.RegisterOutputType(RegularPriorityProfileResponseOutput{})
	pulumi.RegisterOutputType(RegularPriorityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduledEventsProfileOutput{})
	pulumi.RegisterOutputType(ScheduledEventsProfilePtrOutput{})
	pulumi.RegisterOutputType(ScheduledEventsProfileResponseOutput{})
	pulumi.RegisterOutputType(ScheduledEventsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityPostureReferenceOutput{})
	pulumi.RegisterOutputType(SecurityPostureReferencePtrOutput{})
	pulumi.RegisterOutputType(SecurityPostureReferenceResponseOutput{})
	pulumi.RegisterOutputType(SecurityPostureReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileOutput{})
	pulumi.RegisterOutputType(SecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileResponseOutput{})
	pulumi.RegisterOutputType(SecurityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceArtifactReferenceOutput{})
	pulumi.RegisterOutputType(ServiceArtifactReferencePtrOutput{})
	pulumi.RegisterOutputType(ServiceArtifactReferenceResponseOutput{})
	pulumi.RegisterOutputType(ServiceArtifactReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(SpotPriorityProfileOutput{})
	pulumi.RegisterOutputType(SpotPriorityProfilePtrOutput{})
	pulumi.RegisterOutputType(SpotPriorityProfileResponseOutput{})
	pulumi.RegisterOutputType(SpotPriorityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationOutput{})
	pulumi.RegisterOutputType(SshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SshPublicKeyOutput{})
	pulumi.RegisterOutputType(SshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TerminateNotificationProfileOutput{})
	pulumi.RegisterOutputType(TerminateNotificationProfilePtrOutput{})
	pulumi.RegisterOutputType(TerminateNotificationProfileResponseOutput{})
	pulumi.RegisterOutputType(TerminateNotificationProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(UefiSettingsOutput{})
	pulumi.RegisterOutputType(UefiSettingsPtrOutput{})
	pulumi.RegisterOutputType(UefiSettingsResponseOutput{})
	pulumi.RegisterOutputType(UefiSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VMDiskSecurityProfileOutput{})
	pulumi.RegisterOutputType(VMDiskSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(VMDiskSecurityProfileResponseOutput{})
	pulumi.RegisterOutputType(VMDiskSecurityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VMGalleryApplicationOutput{})
	pulumi.RegisterOutputType(VMGalleryApplicationArrayOutput{})
	pulumi.RegisterOutputType(VMGalleryApplicationResponseOutput{})
	pulumi.RegisterOutputType(VMGalleryApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(VMSizePropertiesOutput{})
	pulumi.RegisterOutputType(VMSizePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VMSizePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VMSizePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VaultCertificateOutput{})
	pulumi.RegisterOutputType(VaultCertificateArrayOutput{})
	pulumi.RegisterOutputType(VaultCertificateResponseOutput{})
	pulumi.RegisterOutputType(VaultCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupArrayOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupResponseOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskPtrOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetDataDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetDataDiskArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetDataDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetDataDiskResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetHardwareProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetHardwareProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetHardwareProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetHardwareProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIpTagOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIpTagArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIpTagResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetManagedDiskParametersOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetManagedDiskParametersPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetManagedDiskParametersResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetManagedDiskParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationDnsSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetPublicIPAddressConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VmSizeProfileOutput{})
	pulumi.RegisterOutputType(VmSizeProfileArrayOutput{})
	pulumi.RegisterOutputType(VmSizeProfileResponseOutput{})
	pulumi.RegisterOutputType(VmSizeProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(WinRMListenerOutput{})
	pulumi.RegisterOutputType(WinRMListenerArrayOutput{})
	pulumi.RegisterOutputType(WinRMListenerResponseOutput{})
	pulumi.RegisterOutputType(WinRMListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchAutomaticByPlatformSettingsOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchAutomaticByPlatformSettingsPtrOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchAutomaticByPlatformSettingsResponseOutput{})
	pulumi.RegisterOutputType(WindowsVMGuestPatchAutomaticByPlatformSettingsResponsePtrOutput{})
}
