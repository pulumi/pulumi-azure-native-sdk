// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230628preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Unique name for the Managed CCF.
type LanguageRuntime string

const (
	LanguageRuntimeCPP = LanguageRuntime("CPP")
	LanguageRuntimeJS  = LanguageRuntime("JS")
)

func (LanguageRuntime) ElementType() reflect.Type {
	return reflect.TypeOf((*LanguageRuntime)(nil)).Elem()
}

func (e LanguageRuntime) ToLanguageRuntimeOutput() LanguageRuntimeOutput {
	return pulumi.ToOutput(e).(LanguageRuntimeOutput)
}

func (e LanguageRuntime) ToLanguageRuntimeOutputWithContext(ctx context.Context) LanguageRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LanguageRuntimeOutput)
}

func (e LanguageRuntime) ToLanguageRuntimePtrOutput() LanguageRuntimePtrOutput {
	return e.ToLanguageRuntimePtrOutputWithContext(context.Background())
}

func (e LanguageRuntime) ToLanguageRuntimePtrOutputWithContext(ctx context.Context) LanguageRuntimePtrOutput {
	return LanguageRuntime(e).ToLanguageRuntimeOutputWithContext(ctx).ToLanguageRuntimePtrOutputWithContext(ctx)
}

func (e LanguageRuntime) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LanguageRuntime) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LanguageRuntime) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LanguageRuntime) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LanguageRuntimeOutput struct{ *pulumi.OutputState }

func (LanguageRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LanguageRuntime)(nil)).Elem()
}

func (o LanguageRuntimeOutput) ToLanguageRuntimeOutput() LanguageRuntimeOutput {
	return o
}

func (o LanguageRuntimeOutput) ToLanguageRuntimeOutputWithContext(ctx context.Context) LanguageRuntimeOutput {
	return o
}

func (o LanguageRuntimeOutput) ToLanguageRuntimePtrOutput() LanguageRuntimePtrOutput {
	return o.ToLanguageRuntimePtrOutputWithContext(context.Background())
}

func (o LanguageRuntimeOutput) ToLanguageRuntimePtrOutputWithContext(ctx context.Context) LanguageRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LanguageRuntime) *LanguageRuntime {
		return &v
	}).(LanguageRuntimePtrOutput)
}

func (o LanguageRuntimeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LanguageRuntimeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LanguageRuntime) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LanguageRuntimeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageRuntimeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LanguageRuntime) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LanguageRuntimePtrOutput struct{ *pulumi.OutputState }

func (LanguageRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LanguageRuntime)(nil)).Elem()
}

func (o LanguageRuntimePtrOutput) ToLanguageRuntimePtrOutput() LanguageRuntimePtrOutput {
	return o
}

func (o LanguageRuntimePtrOutput) ToLanguageRuntimePtrOutputWithContext(ctx context.Context) LanguageRuntimePtrOutput {
	return o
}

func (o LanguageRuntimePtrOutput) Elem() LanguageRuntimeOutput {
	return o.ApplyT(func(v *LanguageRuntime) LanguageRuntime {
		if v != nil {
			return *v
		}
		var ret LanguageRuntime
		return ret
	}).(LanguageRuntimeOutput)
}

func (o LanguageRuntimePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageRuntimePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LanguageRuntime) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LanguageRuntimeInput is an input type that accepts values of the LanguageRuntime enum
// A concrete instance of `LanguageRuntimeInput` can be one of the following:
//
//	LanguageRuntimeCPP
//	LanguageRuntimeJS
type LanguageRuntimeInput interface {
	pulumi.Input

	ToLanguageRuntimeOutput() LanguageRuntimeOutput
	ToLanguageRuntimeOutputWithContext(context.Context) LanguageRuntimeOutput
}

var languageRuntimePtrType = reflect.TypeOf((**LanguageRuntime)(nil)).Elem()

type LanguageRuntimePtrInput interface {
	pulumi.Input

	ToLanguageRuntimePtrOutput() LanguageRuntimePtrOutput
	ToLanguageRuntimePtrOutputWithContext(context.Context) LanguageRuntimePtrOutput
}

type languageRuntimePtr string

func LanguageRuntimePtr(v string) LanguageRuntimePtrInput {
	return (*languageRuntimePtr)(&v)
}

func (*languageRuntimePtr) ElementType() reflect.Type {
	return languageRuntimePtrType
}

func (in *languageRuntimePtr) ToLanguageRuntimePtrOutput() LanguageRuntimePtrOutput {
	return pulumi.ToOutput(in).(LanguageRuntimePtrOutput)
}

func (in *languageRuntimePtr) ToLanguageRuntimePtrOutputWithContext(ctx context.Context) LanguageRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LanguageRuntimePtrOutput)
}

// LedgerRole associated with the Security Principal of Ledger
type LedgerRoleName string

const (
	LedgerRoleNameReader        = LedgerRoleName("Reader")
	LedgerRoleNameContributor   = LedgerRoleName("Contributor")
	LedgerRoleNameAdministrator = LedgerRoleName("Administrator")
)

func (LedgerRoleName) ElementType() reflect.Type {
	return reflect.TypeOf((*LedgerRoleName)(nil)).Elem()
}

func (e LedgerRoleName) ToLedgerRoleNameOutput() LedgerRoleNameOutput {
	return pulumi.ToOutput(e).(LedgerRoleNameOutput)
}

func (e LedgerRoleName) ToLedgerRoleNameOutputWithContext(ctx context.Context) LedgerRoleNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LedgerRoleNameOutput)
}

func (e LedgerRoleName) ToLedgerRoleNamePtrOutput() LedgerRoleNamePtrOutput {
	return e.ToLedgerRoleNamePtrOutputWithContext(context.Background())
}

func (e LedgerRoleName) ToLedgerRoleNamePtrOutputWithContext(ctx context.Context) LedgerRoleNamePtrOutput {
	return LedgerRoleName(e).ToLedgerRoleNameOutputWithContext(ctx).ToLedgerRoleNamePtrOutputWithContext(ctx)
}

func (e LedgerRoleName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LedgerRoleName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LedgerRoleName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LedgerRoleName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LedgerRoleNameOutput struct{ *pulumi.OutputState }

func (LedgerRoleNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LedgerRoleName)(nil)).Elem()
}

func (o LedgerRoleNameOutput) ToLedgerRoleNameOutput() LedgerRoleNameOutput {
	return o
}

func (o LedgerRoleNameOutput) ToLedgerRoleNameOutputWithContext(ctx context.Context) LedgerRoleNameOutput {
	return o
}

func (o LedgerRoleNameOutput) ToLedgerRoleNamePtrOutput() LedgerRoleNamePtrOutput {
	return o.ToLedgerRoleNamePtrOutputWithContext(context.Background())
}

func (o LedgerRoleNameOutput) ToLedgerRoleNamePtrOutputWithContext(ctx context.Context) LedgerRoleNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LedgerRoleName) *LedgerRoleName {
		return &v
	}).(LedgerRoleNamePtrOutput)
}

func (o LedgerRoleNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LedgerRoleNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LedgerRoleName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LedgerRoleNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LedgerRoleNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LedgerRoleName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LedgerRoleNamePtrOutput struct{ *pulumi.OutputState }

func (LedgerRoleNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LedgerRoleName)(nil)).Elem()
}

func (o LedgerRoleNamePtrOutput) ToLedgerRoleNamePtrOutput() LedgerRoleNamePtrOutput {
	return o
}

func (o LedgerRoleNamePtrOutput) ToLedgerRoleNamePtrOutputWithContext(ctx context.Context) LedgerRoleNamePtrOutput {
	return o
}

func (o LedgerRoleNamePtrOutput) Elem() LedgerRoleNameOutput {
	return o.ApplyT(func(v *LedgerRoleName) LedgerRoleName {
		if v != nil {
			return *v
		}
		var ret LedgerRoleName
		return ret
	}).(LedgerRoleNameOutput)
}

func (o LedgerRoleNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LedgerRoleNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LedgerRoleName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LedgerRoleNameInput is an input type that accepts values of the LedgerRoleName enum
// A concrete instance of `LedgerRoleNameInput` can be one of the following:
//
//	LedgerRoleNameReader
//	LedgerRoleNameContributor
//	LedgerRoleNameAdministrator
type LedgerRoleNameInput interface {
	pulumi.Input

	ToLedgerRoleNameOutput() LedgerRoleNameOutput
	ToLedgerRoleNameOutputWithContext(context.Context) LedgerRoleNameOutput
}

var ledgerRoleNamePtrType = reflect.TypeOf((**LedgerRoleName)(nil)).Elem()

type LedgerRoleNamePtrInput interface {
	pulumi.Input

	ToLedgerRoleNamePtrOutput() LedgerRoleNamePtrOutput
	ToLedgerRoleNamePtrOutputWithContext(context.Context) LedgerRoleNamePtrOutput
}

type ledgerRoleNamePtr string

func LedgerRoleNamePtr(v string) LedgerRoleNamePtrInput {
	return (*ledgerRoleNamePtr)(&v)
}

func (*ledgerRoleNamePtr) ElementType() reflect.Type {
	return ledgerRoleNamePtrType
}

func (in *ledgerRoleNamePtr) ToLedgerRoleNamePtrOutput() LedgerRoleNamePtrOutput {
	return pulumi.ToOutput(in).(LedgerRoleNamePtrOutput)
}

func (in *ledgerRoleNamePtr) ToLedgerRoleNamePtrOutputWithContext(ctx context.Context) LedgerRoleNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LedgerRoleNamePtrOutput)
}

// SKU associated with the ledger
type LedgerSku string

const (
	LedgerSkuStandard = LedgerSku("Standard")
	LedgerSkuBasic    = LedgerSku("Basic")
	LedgerSkuUnknown  = LedgerSku("Unknown")
)

func (LedgerSku) ElementType() reflect.Type {
	return reflect.TypeOf((*LedgerSku)(nil)).Elem()
}

func (e LedgerSku) ToLedgerSkuOutput() LedgerSkuOutput {
	return pulumi.ToOutput(e).(LedgerSkuOutput)
}

func (e LedgerSku) ToLedgerSkuOutputWithContext(ctx context.Context) LedgerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LedgerSkuOutput)
}

func (e LedgerSku) ToLedgerSkuPtrOutput() LedgerSkuPtrOutput {
	return e.ToLedgerSkuPtrOutputWithContext(context.Background())
}

func (e LedgerSku) ToLedgerSkuPtrOutputWithContext(ctx context.Context) LedgerSkuPtrOutput {
	return LedgerSku(e).ToLedgerSkuOutputWithContext(ctx).ToLedgerSkuPtrOutputWithContext(ctx)
}

func (e LedgerSku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LedgerSku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LedgerSku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LedgerSku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LedgerSkuOutput struct{ *pulumi.OutputState }

func (LedgerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LedgerSku)(nil)).Elem()
}

func (o LedgerSkuOutput) ToLedgerSkuOutput() LedgerSkuOutput {
	return o
}

func (o LedgerSkuOutput) ToLedgerSkuOutputWithContext(ctx context.Context) LedgerSkuOutput {
	return o
}

func (o LedgerSkuOutput) ToLedgerSkuPtrOutput() LedgerSkuPtrOutput {
	return o.ToLedgerSkuPtrOutputWithContext(context.Background())
}

func (o LedgerSkuOutput) ToLedgerSkuPtrOutputWithContext(ctx context.Context) LedgerSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LedgerSku) *LedgerSku {
		return &v
	}).(LedgerSkuPtrOutput)
}

func (o LedgerSkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LedgerSkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LedgerSku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LedgerSkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LedgerSkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LedgerSku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LedgerSkuPtrOutput struct{ *pulumi.OutputState }

func (LedgerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LedgerSku)(nil)).Elem()
}

func (o LedgerSkuPtrOutput) ToLedgerSkuPtrOutput() LedgerSkuPtrOutput {
	return o
}

func (o LedgerSkuPtrOutput) ToLedgerSkuPtrOutputWithContext(ctx context.Context) LedgerSkuPtrOutput {
	return o
}

func (o LedgerSkuPtrOutput) Elem() LedgerSkuOutput {
	return o.ApplyT(func(v *LedgerSku) LedgerSku {
		if v != nil {
			return *v
		}
		var ret LedgerSku
		return ret
	}).(LedgerSkuOutput)
}

func (o LedgerSkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LedgerSkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LedgerSku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LedgerSkuInput is an input type that accepts values of the LedgerSku enum
// A concrete instance of `LedgerSkuInput` can be one of the following:
//
//	LedgerSkuStandard
//	LedgerSkuBasic
//	LedgerSkuUnknown
type LedgerSkuInput interface {
	pulumi.Input

	ToLedgerSkuOutput() LedgerSkuOutput
	ToLedgerSkuOutputWithContext(context.Context) LedgerSkuOutput
}

var ledgerSkuPtrType = reflect.TypeOf((**LedgerSku)(nil)).Elem()

type LedgerSkuPtrInput interface {
	pulumi.Input

	ToLedgerSkuPtrOutput() LedgerSkuPtrOutput
	ToLedgerSkuPtrOutputWithContext(context.Context) LedgerSkuPtrOutput
}

type ledgerSkuPtr string

func LedgerSkuPtr(v string) LedgerSkuPtrInput {
	return (*ledgerSkuPtr)(&v)
}

func (*ledgerSkuPtr) ElementType() reflect.Type {
	return ledgerSkuPtrType
}

func (in *ledgerSkuPtr) ToLedgerSkuPtrOutput() LedgerSkuPtrOutput {
	return pulumi.ToOutput(in).(LedgerSkuPtrOutput)
}

func (in *ledgerSkuPtr) ToLedgerSkuPtrOutputWithContext(ctx context.Context) LedgerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LedgerSkuPtrOutput)
}

// Type of Confidential Ledger
type LedgerType string

const (
	LedgerTypeUnknown = LedgerType("Unknown")
	LedgerTypePublic  = LedgerType("Public")
	LedgerTypePrivate = LedgerType("Private")
)

func (LedgerType) ElementType() reflect.Type {
	return reflect.TypeOf((*LedgerType)(nil)).Elem()
}

func (e LedgerType) ToLedgerTypeOutput() LedgerTypeOutput {
	return pulumi.ToOutput(e).(LedgerTypeOutput)
}

func (e LedgerType) ToLedgerTypeOutputWithContext(ctx context.Context) LedgerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LedgerTypeOutput)
}

func (e LedgerType) ToLedgerTypePtrOutput() LedgerTypePtrOutput {
	return e.ToLedgerTypePtrOutputWithContext(context.Background())
}

func (e LedgerType) ToLedgerTypePtrOutputWithContext(ctx context.Context) LedgerTypePtrOutput {
	return LedgerType(e).ToLedgerTypeOutputWithContext(ctx).ToLedgerTypePtrOutputWithContext(ctx)
}

func (e LedgerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LedgerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LedgerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LedgerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LedgerTypeOutput struct{ *pulumi.OutputState }

func (LedgerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LedgerType)(nil)).Elem()
}

func (o LedgerTypeOutput) ToLedgerTypeOutput() LedgerTypeOutput {
	return o
}

func (o LedgerTypeOutput) ToLedgerTypeOutputWithContext(ctx context.Context) LedgerTypeOutput {
	return o
}

func (o LedgerTypeOutput) ToLedgerTypePtrOutput() LedgerTypePtrOutput {
	return o.ToLedgerTypePtrOutputWithContext(context.Background())
}

func (o LedgerTypeOutput) ToLedgerTypePtrOutputWithContext(ctx context.Context) LedgerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LedgerType) *LedgerType {
		return &v
	}).(LedgerTypePtrOutput)
}

func (o LedgerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LedgerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LedgerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LedgerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LedgerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LedgerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LedgerTypePtrOutput struct{ *pulumi.OutputState }

func (LedgerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LedgerType)(nil)).Elem()
}

func (o LedgerTypePtrOutput) ToLedgerTypePtrOutput() LedgerTypePtrOutput {
	return o
}

func (o LedgerTypePtrOutput) ToLedgerTypePtrOutputWithContext(ctx context.Context) LedgerTypePtrOutput {
	return o
}

func (o LedgerTypePtrOutput) Elem() LedgerTypeOutput {
	return o.ApplyT(func(v *LedgerType) LedgerType {
		if v != nil {
			return *v
		}
		var ret LedgerType
		return ret
	}).(LedgerTypeOutput)
}

func (o LedgerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LedgerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LedgerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LedgerTypeInput is an input type that accepts values of the LedgerType enum
// A concrete instance of `LedgerTypeInput` can be one of the following:
//
//	LedgerTypeUnknown
//	LedgerTypePublic
//	LedgerTypePrivate
type LedgerTypeInput interface {
	pulumi.Input

	ToLedgerTypeOutput() LedgerTypeOutput
	ToLedgerTypeOutputWithContext(context.Context) LedgerTypeOutput
}

var ledgerTypePtrType = reflect.TypeOf((**LedgerType)(nil)).Elem()

type LedgerTypePtrInput interface {
	pulumi.Input

	ToLedgerTypePtrOutput() LedgerTypePtrOutput
	ToLedgerTypePtrOutputWithContext(context.Context) LedgerTypePtrOutput
}

type ledgerTypePtr string

func LedgerTypePtr(v string) LedgerTypePtrInput {
	return (*ledgerTypePtr)(&v)
}

func (*ledgerTypePtr) ElementType() reflect.Type {
	return ledgerTypePtrType
}

func (in *ledgerTypePtr) ToLedgerTypePtrOutput() LedgerTypePtrOutput {
	return pulumi.ToOutput(in).(LedgerTypePtrOutput)
}

func (in *ledgerTypePtr) ToLedgerTypePtrOutputWithContext(ctx context.Context) LedgerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LedgerTypePtrOutput)
}

// Object representing RunningState for Managed CCF.
type RunningState string

const (
	RunningStateActive   = RunningState("Active")
	RunningStatePaused   = RunningState("Paused")
	RunningStateUnknown  = RunningState("Unknown")
	RunningStatePausing  = RunningState("Pausing")
	RunningStateResuming = RunningState("Resuming")
)

func (RunningState) ElementType() reflect.Type {
	return reflect.TypeOf((*RunningState)(nil)).Elem()
}

func (e RunningState) ToRunningStateOutput() RunningStateOutput {
	return pulumi.ToOutput(e).(RunningStateOutput)
}

func (e RunningState) ToRunningStateOutputWithContext(ctx context.Context) RunningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RunningStateOutput)
}

func (e RunningState) ToRunningStatePtrOutput() RunningStatePtrOutput {
	return e.ToRunningStatePtrOutputWithContext(context.Background())
}

func (e RunningState) ToRunningStatePtrOutputWithContext(ctx context.Context) RunningStatePtrOutput {
	return RunningState(e).ToRunningStateOutputWithContext(ctx).ToRunningStatePtrOutputWithContext(ctx)
}

func (e RunningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RunningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RunningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RunningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RunningStateOutput struct{ *pulumi.OutputState }

func (RunningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunningState)(nil)).Elem()
}

func (o RunningStateOutput) ToRunningStateOutput() RunningStateOutput {
	return o
}

func (o RunningStateOutput) ToRunningStateOutputWithContext(ctx context.Context) RunningStateOutput {
	return o
}

func (o RunningStateOutput) ToRunningStatePtrOutput() RunningStatePtrOutput {
	return o.ToRunningStatePtrOutputWithContext(context.Background())
}

func (o RunningStateOutput) ToRunningStatePtrOutputWithContext(ctx context.Context) RunningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RunningState) *RunningState {
		return &v
	}).(RunningStatePtrOutput)
}

func (o RunningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RunningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RunningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RunningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RunningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RunningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RunningStatePtrOutput struct{ *pulumi.OutputState }

func (RunningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RunningState)(nil)).Elem()
}

func (o RunningStatePtrOutput) ToRunningStatePtrOutput() RunningStatePtrOutput {
	return o
}

func (o RunningStatePtrOutput) ToRunningStatePtrOutputWithContext(ctx context.Context) RunningStatePtrOutput {
	return o
}

func (o RunningStatePtrOutput) Elem() RunningStateOutput {
	return o.ApplyT(func(v *RunningState) RunningState {
		if v != nil {
			return *v
		}
		var ret RunningState
		return ret
	}).(RunningStateOutput)
}

func (o RunningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RunningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RunningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RunningStateInput is an input type that accepts values of the RunningState enum
// A concrete instance of `RunningStateInput` can be one of the following:
//
//	RunningStateActive
//	RunningStatePaused
//	RunningStateUnknown
//	RunningStatePausing
//	RunningStateResuming
type RunningStateInput interface {
	pulumi.Input

	ToRunningStateOutput() RunningStateOutput
	ToRunningStateOutputWithContext(context.Context) RunningStateOutput
}

var runningStatePtrType = reflect.TypeOf((**RunningState)(nil)).Elem()

type RunningStatePtrInput interface {
	pulumi.Input

	ToRunningStatePtrOutput() RunningStatePtrOutput
	ToRunningStatePtrOutputWithContext(context.Context) RunningStatePtrOutput
}

type runningStatePtr string

func RunningStatePtr(v string) RunningStatePtrInput {
	return (*runningStatePtr)(&v)
}

func (*runningStatePtr) ElementType() reflect.Type {
	return runningStatePtrType
}

func (in *runningStatePtr) ToRunningStatePtrOutput() RunningStatePtrOutput {
	return pulumi.ToOutput(in).(RunningStatePtrOutput)
}

func (in *runningStatePtr) ToRunningStatePtrOutputWithContext(ctx context.Context) RunningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RunningStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LanguageRuntimeOutput{})
	pulumi.RegisterOutputType(LanguageRuntimePtrOutput{})
	pulumi.RegisterOutputType(LedgerRoleNameOutput{})
	pulumi.RegisterOutputType(LedgerRoleNamePtrOutput{})
	pulumi.RegisterOutputType(LedgerSkuOutput{})
	pulumi.RegisterOutputType(LedgerSkuPtrOutput{})
	pulumi.RegisterOutputType(LedgerTypeOutput{})
	pulumi.RegisterOutputType(LedgerTypePtrOutput{})
	pulumi.RegisterOutputType(RunningStateOutput{})
	pulumi.RegisterOutputType(RunningStatePtrOutput{})
}
