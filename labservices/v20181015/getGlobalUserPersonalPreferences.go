// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20181015

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get personal preferences for a user
func GetGlobalUserPersonalPreferences(ctx *pulumi.Context, args *GetGlobalUserPersonalPreferencesArgs, opts ...pulumi.InvokeOption) (*GetGlobalUserPersonalPreferencesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetGlobalUserPersonalPreferencesResult
	err := ctx.Invoke("azure-native:labservices/v20181015:getGlobalUserPersonalPreferences", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetGlobalUserPersonalPreferencesArgs struct {
	// Enum indicating if user is adding or removing a favorite lab
	AddRemove *string `pulumi:"addRemove"`
	// Resource Id of the lab account
	LabAccountResourceId *string `pulumi:"labAccountResourceId"`
	// Resource Id of the lab to add/remove from the favorites list
	LabResourceId *string `pulumi:"labResourceId"`
	// The name of the user.
	UserName string `pulumi:"userName"`
}

// Represents the PersonalPreferences for the user
type GetGlobalUserPersonalPreferencesResult struct {
	// Array of favorite lab resource ids
	FavoriteLabResourceIds []string `pulumi:"favoriteLabResourceIds"`
	// Id to be used by the cache orchestrator
	Id *string `pulumi:"id"`
}

func GetGlobalUserPersonalPreferencesOutput(ctx *pulumi.Context, args GetGlobalUserPersonalPreferencesOutputArgs, opts ...pulumi.InvokeOption) GetGlobalUserPersonalPreferencesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGlobalUserPersonalPreferencesResult, error) {
			args := v.(GetGlobalUserPersonalPreferencesArgs)
			r, err := GetGlobalUserPersonalPreferences(ctx, &args, opts...)
			var s GetGlobalUserPersonalPreferencesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGlobalUserPersonalPreferencesResultOutput)
}

type GetGlobalUserPersonalPreferencesOutputArgs struct {
	// Enum indicating if user is adding or removing a favorite lab
	AddRemove pulumi.StringPtrInput `pulumi:"addRemove"`
	// Resource Id of the lab account
	LabAccountResourceId pulumi.StringPtrInput `pulumi:"labAccountResourceId"`
	// Resource Id of the lab to add/remove from the favorites list
	LabResourceId pulumi.StringPtrInput `pulumi:"labResourceId"`
	// The name of the user.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetGlobalUserPersonalPreferencesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalUserPersonalPreferencesArgs)(nil)).Elem()
}

// Represents the PersonalPreferences for the user
type GetGlobalUserPersonalPreferencesResultOutput struct{ *pulumi.OutputState }

func (GetGlobalUserPersonalPreferencesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalUserPersonalPreferencesResult)(nil)).Elem()
}

func (o GetGlobalUserPersonalPreferencesResultOutput) ToGetGlobalUserPersonalPreferencesResultOutput() GetGlobalUserPersonalPreferencesResultOutput {
	return o
}

func (o GetGlobalUserPersonalPreferencesResultOutput) ToGetGlobalUserPersonalPreferencesResultOutputWithContext(ctx context.Context) GetGlobalUserPersonalPreferencesResultOutput {
	return o
}

func (o GetGlobalUserPersonalPreferencesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalUserPersonalPreferencesResult] {
	return pulumix.Output[GetGlobalUserPersonalPreferencesResult]{
		OutputState: o.OutputState,
	}
}

// Array of favorite lab resource ids
func (o GetGlobalUserPersonalPreferencesResultOutput) FavoriteLabResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalUserPersonalPreferencesResult) []string { return v.FavoriteLabResourceIds }).(pulumi.StringArrayOutput)
}

// Id to be used by the cache orchestrator
func (o GetGlobalUserPersonalPreferencesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGlobalUserPersonalPreferencesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGlobalUserPersonalPreferencesResultOutput{})
}
