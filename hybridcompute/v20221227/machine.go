// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221227

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a hybrid machine.
type Machine struct {
	pulumi.CustomResourceState

	// Specifies the AD fully qualified display name.
	AdFqdn pulumi.StringOutput `pulumi:"adFqdn"`
	// Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.
	AgentConfiguration AgentConfigurationResponseOutput `pulumi:"agentConfiguration"`
	// The info of the machine w.r.t Agent Upgrade
	AgentUpgrade AgentUpgradeResponsePtrOutput `pulumi:"agentUpgrade"`
	// The hybrid machine agent full version.
	AgentVersion pulumi.StringOutput `pulumi:"agentVersion"`
	// Public Key that the client provides to be used during initial resource onboarding
	ClientPublicKey pulumi.StringPtrOutput `pulumi:"clientPublicKey"`
	// The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
	CloudMetadata CloudMetadataResponsePtrOutput `pulumi:"cloudMetadata"`
	// Detected properties from the machine.
	DetectedProperties pulumi.StringMapOutput `pulumi:"detectedProperties"`
	// Specifies the hybrid machine display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Specifies the DNS fully qualified display name.
	DnsFqdn pulumi.StringOutput `pulumi:"dnsFqdn"`
	// Specifies the Windows domain name.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Details about the error state.
	ErrorDetails ErrorDetailResponseArrayOutput `pulumi:"errorDetails"`
	// Machine Extensions information (deprecated field)
	Extensions MachineExtensionInstanceViewResponseArrayOutput `pulumi:"extensions"`
	// Identity for the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// The time of the last status change.
	LastStatusChange pulumi.StringOutput `pulumi:"lastStatusChange"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Metadata pertaining to the geographic location of the resource.
	LocationData LocationDataResponsePtrOutput `pulumi:"locationData"`
	// Specifies the hybrid machine FQDN.
	MachineFqdn pulumi.StringOutput `pulumi:"machineFqdn"`
	// Specifies whether any MS SQL instance is discovered on the machine.
	MssqlDiscovered pulumi.StringPtrOutput `pulumi:"mssqlDiscovered"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The Operating System running on the hybrid machine.
	OsName pulumi.StringOutput `pulumi:"osName"`
	// Specifies the operating system settings for the hybrid machine.
	OsProfile OSProfileResponsePtrOutput `pulumi:"osProfile"`
	// Specifies the Operating System product SKU.
	OsSku pulumi.StringOutput `pulumi:"osSku"`
	// The type of Operating System (windows/linux).
	OsType pulumi.StringPtrOutput `pulumi:"osType"`
	// The version of Operating System running on the hybrid machine.
	OsVersion pulumi.StringOutput `pulumi:"osVersion"`
	// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
	ParentClusterResourceId pulumi.StringPtrOutput `pulumi:"parentClusterResourceId"`
	// The resource id of the private link scope this machine is assigned to, if any.
	PrivateLinkScopeResourceId pulumi.StringPtrOutput `pulumi:"privateLinkScopeResourceId"`
	// The provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The list of extensions affiliated to the machine
	Resources MachineExtensionResponseArrayOutput `pulumi:"resources"`
	// Statuses of dependent services that are reported back to ARM.
	ServiceStatuses ServiceStatusesResponsePtrOutput `pulumi:"serviceStatuses"`
	// The status of the hybrid machine agent.
	Status pulumi.StringOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the hybrid machine unique ID.
	VmId pulumi.StringPtrOutput `pulumi:"vmId"`
	// Specifies the Arc Machine's unique SMBIOS ID
	VmUuid pulumi.StringOutput `pulumi:"vmUuid"`
}

// NewMachine registers a new resource with the given unique name, arguments, and options.
func NewMachine(ctx *pulumi.Context,
	name string, args *MachineArgs, opts ...pulumi.ResourceOption) (*Machine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:hybridcompute:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20190318preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20190802preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20191212:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20200730preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20200802:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20200815preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20210128preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20210325preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20210422preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20210517preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20210520:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20210610preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20211210preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20220310:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20220510preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20220811preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20221110:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20221227preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20230315preview:Machine"),
		},
		{
			Type: pulumi.String("azure-native:hybridcompute/v20230620preview:Machine"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Machine
	err := ctx.RegisterResource("azure-native:hybridcompute/v20221227:Machine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachine gets an existing Machine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineState, opts ...pulumi.ResourceOption) (*Machine, error) {
	var resource Machine
	err := ctx.ReadResource("azure-native:hybridcompute/v20221227:Machine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Machine resources.
type machineState struct {
}

type MachineState struct {
}

func (MachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineState)(nil)).Elem()
}

type machineArgs struct {
	// The info of the machine w.r.t Agent Upgrade
	AgentUpgrade *AgentUpgrade `pulumi:"agentUpgrade"`
	// Public Key that the client provides to be used during initial resource onboarding
	ClientPublicKey *string `pulumi:"clientPublicKey"`
	// Machine Extensions information (deprecated field)
	Extensions []MachineExtensionInstanceView `pulumi:"extensions"`
	// Identity for the resource.
	Identity *Identity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Metadata pertaining to the geographic location of the resource.
	LocationData *LocationData `pulumi:"locationData"`
	// The name of the hybrid machine.
	MachineName *string `pulumi:"machineName"`
	// Specifies whether any MS SQL instance is discovered on the machine.
	MssqlDiscovered *string `pulumi:"mssqlDiscovered"`
	// Specifies the operating system settings for the hybrid machine.
	OsProfile *OSProfile `pulumi:"osProfile"`
	// The type of Operating System (windows/linux).
	OsType *string `pulumi:"osType"`
	// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
	ParentClusterResourceId *string `pulumi:"parentClusterResourceId"`
	// The resource id of the private link scope this machine is assigned to, if any.
	PrivateLinkScopeResourceId *string `pulumi:"privateLinkScopeResourceId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Statuses of dependent services that are reported back to ARM.
	ServiceStatuses *ServiceStatuses `pulumi:"serviceStatuses"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the hybrid machine unique ID.
	VmId *string `pulumi:"vmId"`
}

// The set of arguments for constructing a Machine resource.
type MachineArgs struct {
	// The info of the machine w.r.t Agent Upgrade
	AgentUpgrade AgentUpgradePtrInput
	// Public Key that the client provides to be used during initial resource onboarding
	ClientPublicKey pulumi.StringPtrInput
	// Machine Extensions information (deprecated field)
	Extensions MachineExtensionInstanceViewArrayInput
	// Identity for the resource.
	Identity IdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Metadata pertaining to the geographic location of the resource.
	LocationData LocationDataPtrInput
	// The name of the hybrid machine.
	MachineName pulumi.StringPtrInput
	// Specifies whether any MS SQL instance is discovered on the machine.
	MssqlDiscovered pulumi.StringPtrInput
	// Specifies the operating system settings for the hybrid machine.
	OsProfile OSProfilePtrInput
	// The type of Operating System (windows/linux).
	OsType pulumi.StringPtrInput
	// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
	ParentClusterResourceId pulumi.StringPtrInput
	// The resource id of the private link scope this machine is assigned to, if any.
	PrivateLinkScopeResourceId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Statuses of dependent services that are reported back to ARM.
	ServiceStatuses ServiceStatusesPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Specifies the hybrid machine unique ID.
	VmId pulumi.StringPtrInput
}

func (MachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineArgs)(nil)).Elem()
}

type MachineInput interface {
	pulumi.Input

	ToMachineOutput() MachineOutput
	ToMachineOutputWithContext(ctx context.Context) MachineOutput
}

func (*Machine) ElementType() reflect.Type {
	return reflect.TypeOf((**Machine)(nil)).Elem()
}

func (i *Machine) ToMachineOutput() MachineOutput {
	return i.ToMachineOutputWithContext(context.Background())
}

func (i *Machine) ToMachineOutputWithContext(ctx context.Context) MachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineOutput)
}

type MachineOutput struct{ *pulumi.OutputState }

func (MachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Machine)(nil)).Elem()
}

func (o MachineOutput) ToMachineOutput() MachineOutput {
	return o
}

func (o MachineOutput) ToMachineOutputWithContext(ctx context.Context) MachineOutput {
	return o
}

// Specifies the AD fully qualified display name.
func (o MachineOutput) AdFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.AdFqdn }).(pulumi.StringOutput)
}

// Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.
func (o MachineOutput) AgentConfiguration() AgentConfigurationResponseOutput {
	return o.ApplyT(func(v *Machine) AgentConfigurationResponseOutput { return v.AgentConfiguration }).(AgentConfigurationResponseOutput)
}

// The info of the machine w.r.t Agent Upgrade
func (o MachineOutput) AgentUpgrade() AgentUpgradeResponsePtrOutput {
	return o.ApplyT(func(v *Machine) AgentUpgradeResponsePtrOutput { return v.AgentUpgrade }).(AgentUpgradeResponsePtrOutput)
}

// The hybrid machine agent full version.
func (o MachineOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.AgentVersion }).(pulumi.StringOutput)
}

// Public Key that the client provides to be used during initial resource onboarding
func (o MachineOutput) ClientPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringPtrOutput { return v.ClientPublicKey }).(pulumi.StringPtrOutput)
}

// The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
func (o MachineOutput) CloudMetadata() CloudMetadataResponsePtrOutput {
	return o.ApplyT(func(v *Machine) CloudMetadataResponsePtrOutput { return v.CloudMetadata }).(CloudMetadataResponsePtrOutput)
}

// Detected properties from the machine.
func (o MachineOutput) DetectedProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringMapOutput { return v.DetectedProperties }).(pulumi.StringMapOutput)
}

// Specifies the hybrid machine display name.
func (o MachineOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Specifies the DNS fully qualified display name.
func (o MachineOutput) DnsFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.DnsFqdn }).(pulumi.StringOutput)
}

// Specifies the Windows domain name.
func (o MachineOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Details about the error state.
func (o MachineOutput) ErrorDetails() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v *Machine) ErrorDetailResponseArrayOutput { return v.ErrorDetails }).(ErrorDetailResponseArrayOutput)
}

// Machine Extensions information (deprecated field)
func (o MachineOutput) Extensions() MachineExtensionInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v *Machine) MachineExtensionInstanceViewResponseArrayOutput { return v.Extensions }).(MachineExtensionInstanceViewResponseArrayOutput)
}

// Identity for the resource.
func (o MachineOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v *Machine) IdentityResponsePtrOutput { return v.Identity }).(IdentityResponsePtrOutput)
}

// The time of the last status change.
func (o MachineOutput) LastStatusChange() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.LastStatusChange }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o MachineOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Metadata pertaining to the geographic location of the resource.
func (o MachineOutput) LocationData() LocationDataResponsePtrOutput {
	return o.ApplyT(func(v *Machine) LocationDataResponsePtrOutput { return v.LocationData }).(LocationDataResponsePtrOutput)
}

// Specifies the hybrid machine FQDN.
func (o MachineOutput) MachineFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.MachineFqdn }).(pulumi.StringOutput)
}

// Specifies whether any MS SQL instance is discovered on the machine.
func (o MachineOutput) MssqlDiscovered() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringPtrOutput { return v.MssqlDiscovered }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o MachineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Operating System running on the hybrid machine.
func (o MachineOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.OsName }).(pulumi.StringOutput)
}

// Specifies the operating system settings for the hybrid machine.
func (o MachineOutput) OsProfile() OSProfileResponsePtrOutput {
	return o.ApplyT(func(v *Machine) OSProfileResponsePtrOutput { return v.OsProfile }).(OSProfileResponsePtrOutput)
}

// Specifies the Operating System product SKU.
func (o MachineOutput) OsSku() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.OsSku }).(pulumi.StringOutput)
}

// The type of Operating System (windows/linux).
func (o MachineOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringPtrOutput { return v.OsType }).(pulumi.StringPtrOutput)
}

// The version of Operating System running on the hybrid machine.
func (o MachineOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.OsVersion }).(pulumi.StringOutput)
}

// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
func (o MachineOutput) ParentClusterResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringPtrOutput { return v.ParentClusterResourceId }).(pulumi.StringPtrOutput)
}

// The resource id of the private link scope this machine is assigned to, if any.
func (o MachineOutput) PrivateLinkScopeResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringPtrOutput { return v.PrivateLinkScopeResourceId }).(pulumi.StringPtrOutput)
}

// The provisioning state, which only appears in the response.
func (o MachineOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The list of extensions affiliated to the machine
func (o MachineOutput) Resources() MachineExtensionResponseArrayOutput {
	return o.ApplyT(func(v *Machine) MachineExtensionResponseArrayOutput { return v.Resources }).(MachineExtensionResponseArrayOutput)
}

// Statuses of dependent services that are reported back to ARM.
func (o MachineOutput) ServiceStatuses() ServiceStatusesResponsePtrOutput {
	return o.ApplyT(func(v *Machine) ServiceStatusesResponsePtrOutput { return v.ServiceStatuses }).(ServiceStatusesResponsePtrOutput)
}

// The status of the hybrid machine agent.
func (o MachineOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o MachineOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Machine) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o MachineOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o MachineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the hybrid machine unique ID.
func (o MachineOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringPtrOutput { return v.VmId }).(pulumi.StringPtrOutput)
}

// Specifies the Arc Machine's unique SMBIOS ID
func (o MachineOutput) VmUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Machine) pulumi.StringOutput { return v.VmUuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MachineOutput{})
}
