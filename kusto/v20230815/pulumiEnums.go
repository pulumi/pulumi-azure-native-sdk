// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230815

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// SKU name.
type AzureSkuName string

const (
	AzureSkuName_Dev_No_SLA_Standard_D11_v2 = AzureSkuName("Dev(No SLA)_Standard_D11_v2")
	AzureSkuName_Dev_No_SLA_Standard_E2a_v4 = AzureSkuName("Dev(No SLA)_Standard_E2a_v4")
	AzureSkuName_Standard_D11_v2            = AzureSkuName("Standard_D11_v2")
	AzureSkuName_Standard_D12_v2            = AzureSkuName("Standard_D12_v2")
	AzureSkuName_Standard_D13_v2            = AzureSkuName("Standard_D13_v2")
	AzureSkuName_Standard_D14_v2            = AzureSkuName("Standard_D14_v2")
	AzureSkuName_Standard_D32d_v4           = AzureSkuName("Standard_D32d_v4")
	AzureSkuName_Standard_D16d_v5           = AzureSkuName("Standard_D16d_v5")
	AzureSkuName_Standard_D32d_v5           = AzureSkuName("Standard_D32d_v5")
	AzureSkuName_Standard_DS13_v2_1TB_PS    = AzureSkuName("Standard_DS13_v2+1TB_PS")
	AzureSkuName_Standard_DS13_v2_2TB_PS    = AzureSkuName("Standard_DS13_v2+2TB_PS")
	AzureSkuName_Standard_DS14_v2_3TB_PS    = AzureSkuName("Standard_DS14_v2+3TB_PS")
	AzureSkuName_Standard_DS14_v2_4TB_PS    = AzureSkuName("Standard_DS14_v2+4TB_PS")
	AzureSkuName_Standard_L4s               = AzureSkuName("Standard_L4s")
	AzureSkuName_Standard_L8s               = AzureSkuName("Standard_L8s")
	AzureSkuName_Standard_L16s              = AzureSkuName("Standard_L16s")
	AzureSkuName_Standard_L8s_v2            = AzureSkuName("Standard_L8s_v2")
	AzureSkuName_Standard_L16s_v2           = AzureSkuName("Standard_L16s_v2")
	AzureSkuName_Standard_L8s_v3            = AzureSkuName("Standard_L8s_v3")
	AzureSkuName_Standard_L16s_v3           = AzureSkuName("Standard_L16s_v3")
	AzureSkuName_Standard_L32s_v3           = AzureSkuName("Standard_L32s_v3")
	AzureSkuName_Standard_L8as_v3           = AzureSkuName("Standard_L8as_v3")
	AzureSkuName_Standard_L16as_v3          = AzureSkuName("Standard_L16as_v3")
	AzureSkuName_Standard_L32as_v3          = AzureSkuName("Standard_L32as_v3")
	AzureSkuName_Standard_E64i_v3           = AzureSkuName("Standard_E64i_v3")
	AzureSkuName_Standard_E80ids_v4         = AzureSkuName("Standard_E80ids_v4")
	AzureSkuName_Standard_E2a_v4            = AzureSkuName("Standard_E2a_v4")
	AzureSkuName_Standard_E4a_v4            = AzureSkuName("Standard_E4a_v4")
	AzureSkuName_Standard_E8a_v4            = AzureSkuName("Standard_E8a_v4")
	AzureSkuName_Standard_E16a_v4           = AzureSkuName("Standard_E16a_v4")
	AzureSkuName_Standard_E8as_v4_1TB_PS    = AzureSkuName("Standard_E8as_v4+1TB_PS")
	AzureSkuName_Standard_E8as_v4_2TB_PS    = AzureSkuName("Standard_E8as_v4+2TB_PS")
	AzureSkuName_Standard_E16as_v4_3TB_PS   = AzureSkuName("Standard_E16as_v4+3TB_PS")
	AzureSkuName_Standard_E16as_v4_4TB_PS   = AzureSkuName("Standard_E16as_v4+4TB_PS")
	AzureSkuName_Standard_E8as_v5_1TB_PS    = AzureSkuName("Standard_E8as_v5+1TB_PS")
	AzureSkuName_Standard_E8as_v5_2TB_PS    = AzureSkuName("Standard_E8as_v5+2TB_PS")
	AzureSkuName_Standard_E16as_v5_3TB_PS   = AzureSkuName("Standard_E16as_v5+3TB_PS")
	AzureSkuName_Standard_E16as_v5_4TB_PS   = AzureSkuName("Standard_E16as_v5+4TB_PS")
	AzureSkuName_Standard_E2ads_v5          = AzureSkuName("Standard_E2ads_v5")
	AzureSkuName_Standard_E4ads_v5          = AzureSkuName("Standard_E4ads_v5")
	AzureSkuName_Standard_E8ads_v5          = AzureSkuName("Standard_E8ads_v5")
	AzureSkuName_Standard_E16ads_v5         = AzureSkuName("Standard_E16ads_v5")
	AzureSkuName_Standard_EC8as_v5_1TB_PS   = AzureSkuName("Standard_EC8as_v5+1TB_PS")
	AzureSkuName_Standard_EC8as_v5_2TB_PS   = AzureSkuName("Standard_EC8as_v5+2TB_PS")
	AzureSkuName_Standard_EC16as_v5_3TB_PS  = AzureSkuName("Standard_EC16as_v5+3TB_PS")
	AzureSkuName_Standard_EC16as_v5_4TB_PS  = AzureSkuName("Standard_EC16as_v5+4TB_PS")
	AzureSkuName_Standard_EC8ads_v5         = AzureSkuName("Standard_EC8ads_v5")
	AzureSkuName_Standard_EC16ads_v5        = AzureSkuName("Standard_EC16ads_v5")
	AzureSkuName_Standard_E8s_v4_1TB_PS     = AzureSkuName("Standard_E8s_v4+1TB_PS")
	AzureSkuName_Standard_E8s_v4_2TB_PS     = AzureSkuName("Standard_E8s_v4+2TB_PS")
	AzureSkuName_Standard_E16s_v4_3TB_PS    = AzureSkuName("Standard_E16s_v4+3TB_PS")
	AzureSkuName_Standard_E16s_v4_4TB_PS    = AzureSkuName("Standard_E16s_v4+4TB_PS")
	AzureSkuName_Standard_E8s_v5_1TB_PS     = AzureSkuName("Standard_E8s_v5+1TB_PS")
	AzureSkuName_Standard_E8s_v5_2TB_PS     = AzureSkuName("Standard_E8s_v5+2TB_PS")
	AzureSkuName_Standard_E16s_v5_3TB_PS    = AzureSkuName("Standard_E16s_v5+3TB_PS")
	AzureSkuName_Standard_E16s_v5_4TB_PS    = AzureSkuName("Standard_E16s_v5+4TB_PS")
	AzureSkuName_Standard_E2d_v4            = AzureSkuName("Standard_E2d_v4")
	AzureSkuName_Standard_E4d_v4            = AzureSkuName("Standard_E4d_v4")
	AzureSkuName_Standard_E8d_v4            = AzureSkuName("Standard_E8d_v4")
	AzureSkuName_Standard_E16d_v4           = AzureSkuName("Standard_E16d_v4")
	AzureSkuName_Standard_E2d_v5            = AzureSkuName("Standard_E2d_v5")
	AzureSkuName_Standard_E4d_v5            = AzureSkuName("Standard_E4d_v5")
	AzureSkuName_Standard_E8d_v5            = AzureSkuName("Standard_E8d_v5")
	AzureSkuName_Standard_E16d_v5           = AzureSkuName("Standard_E16d_v5")
)

func (AzureSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuName)(nil)).Elem()
}

func (e AzureSkuName) ToAzureSkuNameOutput() AzureSkuNameOutput {
	return pulumi.ToOutput(e).(AzureSkuNameOutput)
}

func (e AzureSkuName) ToAzureSkuNameOutputWithContext(ctx context.Context) AzureSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSkuNameOutput)
}

func (e AzureSkuName) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return e.ToAzureSkuNamePtrOutputWithContext(context.Background())
}

func (e AzureSkuName) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return AzureSkuName(e).ToAzureSkuNameOutputWithContext(ctx).ToAzureSkuNamePtrOutputWithContext(ctx)
}

func (e AzureSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSkuNameOutput struct{ *pulumi.OutputState }

func (AzureSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuName)(nil)).Elem()
}

func (o AzureSkuNameOutput) ToAzureSkuNameOutput() AzureSkuNameOutput {
	return o
}

func (o AzureSkuNameOutput) ToAzureSkuNameOutputWithContext(ctx context.Context) AzureSkuNameOutput {
	return o
}

func (o AzureSkuNameOutput) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return o.ToAzureSkuNamePtrOutputWithContext(context.Background())
}

func (o AzureSkuNameOutput) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSkuName) *AzureSkuName {
		return &v
	}).(AzureSkuNamePtrOutput)
}

func (o AzureSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSkuNamePtrOutput struct{ *pulumi.OutputState }

func (AzureSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSkuName)(nil)).Elem()
}

func (o AzureSkuNamePtrOutput) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return o
}

func (o AzureSkuNamePtrOutput) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return o
}

func (o AzureSkuNamePtrOutput) Elem() AzureSkuNameOutput {
	return o.ApplyT(func(v *AzureSkuName) AzureSkuName {
		if v != nil {
			return *v
		}
		var ret AzureSkuName
		return ret
	}).(AzureSkuNameOutput)
}

func (o AzureSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSkuNameInput is an input type that accepts values of the AzureSkuName enum
// A concrete instance of `AzureSkuNameInput` can be one of the following:
//
//	AzureSkuName_Dev_No_SLA_Standard_D11_v2
//	AzureSkuName_Dev_No_SLA_Standard_E2a_v4
//	AzureSkuName_Standard_D11_v2
//	AzureSkuName_Standard_D12_v2
//	AzureSkuName_Standard_D13_v2
//	AzureSkuName_Standard_D14_v2
//	AzureSkuName_Standard_D32d_v4
//	AzureSkuName_Standard_D16d_v5
//	AzureSkuName_Standard_D32d_v5
//	AzureSkuName_Standard_DS13_v2_1TB_PS
//	AzureSkuName_Standard_DS13_v2_2TB_PS
//	AzureSkuName_Standard_DS14_v2_3TB_PS
//	AzureSkuName_Standard_DS14_v2_4TB_PS
//	AzureSkuName_Standard_L4s
//	AzureSkuName_Standard_L8s
//	AzureSkuName_Standard_L16s
//	AzureSkuName_Standard_L8s_v2
//	AzureSkuName_Standard_L16s_v2
//	AzureSkuName_Standard_L8s_v3
//	AzureSkuName_Standard_L16s_v3
//	AzureSkuName_Standard_L32s_v3
//	AzureSkuName_Standard_L8as_v3
//	AzureSkuName_Standard_L16as_v3
//	AzureSkuName_Standard_L32as_v3
//	AzureSkuName_Standard_E64i_v3
//	AzureSkuName_Standard_E80ids_v4
//	AzureSkuName_Standard_E2a_v4
//	AzureSkuName_Standard_E4a_v4
//	AzureSkuName_Standard_E8a_v4
//	AzureSkuName_Standard_E16a_v4
//	AzureSkuName_Standard_E8as_v4_1TB_PS
//	AzureSkuName_Standard_E8as_v4_2TB_PS
//	AzureSkuName_Standard_E16as_v4_3TB_PS
//	AzureSkuName_Standard_E16as_v4_4TB_PS
//	AzureSkuName_Standard_E8as_v5_1TB_PS
//	AzureSkuName_Standard_E8as_v5_2TB_PS
//	AzureSkuName_Standard_E16as_v5_3TB_PS
//	AzureSkuName_Standard_E16as_v5_4TB_PS
//	AzureSkuName_Standard_E2ads_v5
//	AzureSkuName_Standard_E4ads_v5
//	AzureSkuName_Standard_E8ads_v5
//	AzureSkuName_Standard_E16ads_v5
//	AzureSkuName_Standard_EC8as_v5_1TB_PS
//	AzureSkuName_Standard_EC8as_v5_2TB_PS
//	AzureSkuName_Standard_EC16as_v5_3TB_PS
//	AzureSkuName_Standard_EC16as_v5_4TB_PS
//	AzureSkuName_Standard_EC8ads_v5
//	AzureSkuName_Standard_EC16ads_v5
//	AzureSkuName_Standard_E8s_v4_1TB_PS
//	AzureSkuName_Standard_E8s_v4_2TB_PS
//	AzureSkuName_Standard_E16s_v4_3TB_PS
//	AzureSkuName_Standard_E16s_v4_4TB_PS
//	AzureSkuName_Standard_E8s_v5_1TB_PS
//	AzureSkuName_Standard_E8s_v5_2TB_PS
//	AzureSkuName_Standard_E16s_v5_3TB_PS
//	AzureSkuName_Standard_E16s_v5_4TB_PS
//	AzureSkuName_Standard_E2d_v4
//	AzureSkuName_Standard_E4d_v4
//	AzureSkuName_Standard_E8d_v4
//	AzureSkuName_Standard_E16d_v4
//	AzureSkuName_Standard_E2d_v5
//	AzureSkuName_Standard_E4d_v5
//	AzureSkuName_Standard_E8d_v5
//	AzureSkuName_Standard_E16d_v5
type AzureSkuNameInput interface {
	pulumi.Input

	ToAzureSkuNameOutput() AzureSkuNameOutput
	ToAzureSkuNameOutputWithContext(context.Context) AzureSkuNameOutput
}

var azureSkuNamePtrType = reflect.TypeOf((**AzureSkuName)(nil)).Elem()

type AzureSkuNamePtrInput interface {
	pulumi.Input

	ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput
	ToAzureSkuNamePtrOutputWithContext(context.Context) AzureSkuNamePtrOutput
}

type azureSkuNamePtr string

func AzureSkuNamePtr(v string) AzureSkuNamePtrInput {
	return (*azureSkuNamePtr)(&v)
}

func (*azureSkuNamePtr) ElementType() reflect.Type {
	return azureSkuNamePtrType
}

func (in *azureSkuNamePtr) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return pulumi.ToOutput(in).(AzureSkuNamePtrOutput)
}

func (in *azureSkuNamePtr) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSkuNamePtrOutput)
}

func (in *azureSkuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*AzureSkuName] {
	return pulumix.Output[*AzureSkuName]{
		OutputState: in.ToAzureSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// SKU tier.
type AzureSkuTier string

const (
	AzureSkuTierBasic    = AzureSkuTier("Basic")
	AzureSkuTierStandard = AzureSkuTier("Standard")
)

func (AzureSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuTier)(nil)).Elem()
}

func (e AzureSkuTier) ToAzureSkuTierOutput() AzureSkuTierOutput {
	return pulumi.ToOutput(e).(AzureSkuTierOutput)
}

func (e AzureSkuTier) ToAzureSkuTierOutputWithContext(ctx context.Context) AzureSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSkuTierOutput)
}

func (e AzureSkuTier) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return e.ToAzureSkuTierPtrOutputWithContext(context.Background())
}

func (e AzureSkuTier) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return AzureSkuTier(e).ToAzureSkuTierOutputWithContext(ctx).ToAzureSkuTierPtrOutputWithContext(ctx)
}

func (e AzureSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSkuTierOutput struct{ *pulumi.OutputState }

func (AzureSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuTier)(nil)).Elem()
}

func (o AzureSkuTierOutput) ToAzureSkuTierOutput() AzureSkuTierOutput {
	return o
}

func (o AzureSkuTierOutput) ToAzureSkuTierOutputWithContext(ctx context.Context) AzureSkuTierOutput {
	return o
}

func (o AzureSkuTierOutput) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return o.ToAzureSkuTierPtrOutputWithContext(context.Background())
}

func (o AzureSkuTierOutput) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSkuTier) *AzureSkuTier {
		return &v
	}).(AzureSkuTierPtrOutput)
}

func (o AzureSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSkuTierPtrOutput struct{ *pulumi.OutputState }

func (AzureSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSkuTier)(nil)).Elem()
}

func (o AzureSkuTierPtrOutput) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return o
}

func (o AzureSkuTierPtrOutput) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return o
}

func (o AzureSkuTierPtrOutput) Elem() AzureSkuTierOutput {
	return o.ApplyT(func(v *AzureSkuTier) AzureSkuTier {
		if v != nil {
			return *v
		}
		var ret AzureSkuTier
		return ret
	}).(AzureSkuTierOutput)
}

func (o AzureSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSkuTierInput is an input type that accepts values of the AzureSkuTier enum
// A concrete instance of `AzureSkuTierInput` can be one of the following:
//
//	AzureSkuTierBasic
//	AzureSkuTierStandard
type AzureSkuTierInput interface {
	pulumi.Input

	ToAzureSkuTierOutput() AzureSkuTierOutput
	ToAzureSkuTierOutputWithContext(context.Context) AzureSkuTierOutput
}

var azureSkuTierPtrType = reflect.TypeOf((**AzureSkuTier)(nil)).Elem()

type AzureSkuTierPtrInput interface {
	pulumi.Input

	ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput
	ToAzureSkuTierPtrOutputWithContext(context.Context) AzureSkuTierPtrOutput
}

type azureSkuTierPtr string

func AzureSkuTierPtr(v string) AzureSkuTierPtrInput {
	return (*azureSkuTierPtr)(&v)
}

func (*azureSkuTierPtr) ElementType() reflect.Type {
	return azureSkuTierPtrType
}

func (in *azureSkuTierPtr) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return pulumi.ToOutput(in).(AzureSkuTierPtrOutput)
}

func (in *azureSkuTierPtr) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSkuTierPtrOutput)
}

func (in *azureSkuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*AzureSkuTier] {
	return pulumix.Output[*AzureSkuTier]{
		OutputState: in.ToAzureSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

// The name of blob storage event type to process.
type BlobStorageEventType string

const (
	BlobStorageEventType_Microsoft_Storage_BlobCreated = BlobStorageEventType("Microsoft.Storage.BlobCreated")
	BlobStorageEventType_Microsoft_Storage_BlobRenamed = BlobStorageEventType("Microsoft.Storage.BlobRenamed")
)

func (BlobStorageEventType) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageEventType)(nil)).Elem()
}

func (e BlobStorageEventType) ToBlobStorageEventTypeOutput() BlobStorageEventTypeOutput {
	return pulumi.ToOutput(e).(BlobStorageEventTypeOutput)
}

func (e BlobStorageEventType) ToBlobStorageEventTypeOutputWithContext(ctx context.Context) BlobStorageEventTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BlobStorageEventTypeOutput)
}

func (e BlobStorageEventType) ToBlobStorageEventTypePtrOutput() BlobStorageEventTypePtrOutput {
	return e.ToBlobStorageEventTypePtrOutputWithContext(context.Background())
}

func (e BlobStorageEventType) ToBlobStorageEventTypePtrOutputWithContext(ctx context.Context) BlobStorageEventTypePtrOutput {
	return BlobStorageEventType(e).ToBlobStorageEventTypeOutputWithContext(ctx).ToBlobStorageEventTypePtrOutputWithContext(ctx)
}

func (e BlobStorageEventType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BlobStorageEventType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BlobStorageEventType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BlobStorageEventType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BlobStorageEventTypeOutput struct{ *pulumi.OutputState }

func (BlobStorageEventTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageEventType)(nil)).Elem()
}

func (o BlobStorageEventTypeOutput) ToBlobStorageEventTypeOutput() BlobStorageEventTypeOutput {
	return o
}

func (o BlobStorageEventTypeOutput) ToBlobStorageEventTypeOutputWithContext(ctx context.Context) BlobStorageEventTypeOutput {
	return o
}

func (o BlobStorageEventTypeOutput) ToBlobStorageEventTypePtrOutput() BlobStorageEventTypePtrOutput {
	return o.ToBlobStorageEventTypePtrOutputWithContext(context.Background())
}

func (o BlobStorageEventTypeOutput) ToBlobStorageEventTypePtrOutputWithContext(ctx context.Context) BlobStorageEventTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlobStorageEventType) *BlobStorageEventType {
		return &v
	}).(BlobStorageEventTypePtrOutput)
}

func (o BlobStorageEventTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BlobStorageEventTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BlobStorageEventType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BlobStorageEventTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BlobStorageEventTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BlobStorageEventType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BlobStorageEventTypePtrOutput struct{ *pulumi.OutputState }

func (BlobStorageEventTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobStorageEventType)(nil)).Elem()
}

func (o BlobStorageEventTypePtrOutput) ToBlobStorageEventTypePtrOutput() BlobStorageEventTypePtrOutput {
	return o
}

func (o BlobStorageEventTypePtrOutput) ToBlobStorageEventTypePtrOutputWithContext(ctx context.Context) BlobStorageEventTypePtrOutput {
	return o
}

func (o BlobStorageEventTypePtrOutput) Elem() BlobStorageEventTypeOutput {
	return o.ApplyT(func(v *BlobStorageEventType) BlobStorageEventType {
		if v != nil {
			return *v
		}
		var ret BlobStorageEventType
		return ret
	}).(BlobStorageEventTypeOutput)
}

func (o BlobStorageEventTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BlobStorageEventTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BlobStorageEventType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BlobStorageEventTypeInput is an input type that accepts values of the BlobStorageEventType enum
// A concrete instance of `BlobStorageEventTypeInput` can be one of the following:
//
//	BlobStorageEventType_Microsoft_Storage_BlobCreated
//	BlobStorageEventType_Microsoft_Storage_BlobRenamed
type BlobStorageEventTypeInput interface {
	pulumi.Input

	ToBlobStorageEventTypeOutput() BlobStorageEventTypeOutput
	ToBlobStorageEventTypeOutputWithContext(context.Context) BlobStorageEventTypeOutput
}

var blobStorageEventTypePtrType = reflect.TypeOf((**BlobStorageEventType)(nil)).Elem()

type BlobStorageEventTypePtrInput interface {
	pulumi.Input

	ToBlobStorageEventTypePtrOutput() BlobStorageEventTypePtrOutput
	ToBlobStorageEventTypePtrOutputWithContext(context.Context) BlobStorageEventTypePtrOutput
}

type blobStorageEventTypePtr string

func BlobStorageEventTypePtr(v string) BlobStorageEventTypePtrInput {
	return (*blobStorageEventTypePtr)(&v)
}

func (*blobStorageEventTypePtr) ElementType() reflect.Type {
	return blobStorageEventTypePtrType
}

func (in *blobStorageEventTypePtr) ToBlobStorageEventTypePtrOutput() BlobStorageEventTypePtrOutput {
	return pulumi.ToOutput(in).(BlobStorageEventTypePtrOutput)
}

func (in *blobStorageEventTypePtr) ToBlobStorageEventTypePtrOutputWithContext(ctx context.Context) BlobStorageEventTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BlobStorageEventTypePtrOutput)
}

func (in *blobStorageEventTypePtr) ToOutput(ctx context.Context) pulumix.Output[*BlobStorageEventType] {
	return pulumix.Output[*BlobStorageEventType]{
		OutputState: in.ToBlobStorageEventTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'
type ClusterNetworkAccessFlag string

const (
	ClusterNetworkAccessFlagEnabled  = ClusterNetworkAccessFlag("Enabled")
	ClusterNetworkAccessFlagDisabled = ClusterNetworkAccessFlag("Disabled")
)

func (ClusterNetworkAccessFlag) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkAccessFlag)(nil)).Elem()
}

func (e ClusterNetworkAccessFlag) ToClusterNetworkAccessFlagOutput() ClusterNetworkAccessFlagOutput {
	return pulumi.ToOutput(e).(ClusterNetworkAccessFlagOutput)
}

func (e ClusterNetworkAccessFlag) ToClusterNetworkAccessFlagOutputWithContext(ctx context.Context) ClusterNetworkAccessFlagOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterNetworkAccessFlagOutput)
}

func (e ClusterNetworkAccessFlag) ToClusterNetworkAccessFlagPtrOutput() ClusterNetworkAccessFlagPtrOutput {
	return e.ToClusterNetworkAccessFlagPtrOutputWithContext(context.Background())
}

func (e ClusterNetworkAccessFlag) ToClusterNetworkAccessFlagPtrOutputWithContext(ctx context.Context) ClusterNetworkAccessFlagPtrOutput {
	return ClusterNetworkAccessFlag(e).ToClusterNetworkAccessFlagOutputWithContext(ctx).ToClusterNetworkAccessFlagPtrOutputWithContext(ctx)
}

func (e ClusterNetworkAccessFlag) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterNetworkAccessFlag) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterNetworkAccessFlag) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterNetworkAccessFlag) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterNetworkAccessFlagOutput struct{ *pulumi.OutputState }

func (ClusterNetworkAccessFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkAccessFlag)(nil)).Elem()
}

func (o ClusterNetworkAccessFlagOutput) ToClusterNetworkAccessFlagOutput() ClusterNetworkAccessFlagOutput {
	return o
}

func (o ClusterNetworkAccessFlagOutput) ToClusterNetworkAccessFlagOutputWithContext(ctx context.Context) ClusterNetworkAccessFlagOutput {
	return o
}

func (o ClusterNetworkAccessFlagOutput) ToClusterNetworkAccessFlagPtrOutput() ClusterNetworkAccessFlagPtrOutput {
	return o.ToClusterNetworkAccessFlagPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkAccessFlagOutput) ToClusterNetworkAccessFlagPtrOutputWithContext(ctx context.Context) ClusterNetworkAccessFlagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworkAccessFlag) *ClusterNetworkAccessFlag {
		return &v
	}).(ClusterNetworkAccessFlagPtrOutput)
}

func (o ClusterNetworkAccessFlagOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterNetworkAccessFlagOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterNetworkAccessFlag) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterNetworkAccessFlagOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkAccessFlagOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterNetworkAccessFlag) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworkAccessFlagPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkAccessFlagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkAccessFlag)(nil)).Elem()
}

func (o ClusterNetworkAccessFlagPtrOutput) ToClusterNetworkAccessFlagPtrOutput() ClusterNetworkAccessFlagPtrOutput {
	return o
}

func (o ClusterNetworkAccessFlagPtrOutput) ToClusterNetworkAccessFlagPtrOutputWithContext(ctx context.Context) ClusterNetworkAccessFlagPtrOutput {
	return o
}

func (o ClusterNetworkAccessFlagPtrOutput) Elem() ClusterNetworkAccessFlagOutput {
	return o.ApplyT(func(v *ClusterNetworkAccessFlag) ClusterNetworkAccessFlag {
		if v != nil {
			return *v
		}
		var ret ClusterNetworkAccessFlag
		return ret
	}).(ClusterNetworkAccessFlagOutput)
}

func (o ClusterNetworkAccessFlagPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkAccessFlagPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterNetworkAccessFlag) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterNetworkAccessFlagInput is an input type that accepts values of the ClusterNetworkAccessFlag enum
// A concrete instance of `ClusterNetworkAccessFlagInput` can be one of the following:
//
//	ClusterNetworkAccessFlagEnabled
//	ClusterNetworkAccessFlagDisabled
type ClusterNetworkAccessFlagInput interface {
	pulumi.Input

	ToClusterNetworkAccessFlagOutput() ClusterNetworkAccessFlagOutput
	ToClusterNetworkAccessFlagOutputWithContext(context.Context) ClusterNetworkAccessFlagOutput
}

var clusterNetworkAccessFlagPtrType = reflect.TypeOf((**ClusterNetworkAccessFlag)(nil)).Elem()

type ClusterNetworkAccessFlagPtrInput interface {
	pulumi.Input

	ToClusterNetworkAccessFlagPtrOutput() ClusterNetworkAccessFlagPtrOutput
	ToClusterNetworkAccessFlagPtrOutputWithContext(context.Context) ClusterNetworkAccessFlagPtrOutput
}

type clusterNetworkAccessFlagPtr string

func ClusterNetworkAccessFlagPtr(v string) ClusterNetworkAccessFlagPtrInput {
	return (*clusterNetworkAccessFlagPtr)(&v)
}

func (*clusterNetworkAccessFlagPtr) ElementType() reflect.Type {
	return clusterNetworkAccessFlagPtrType
}

func (in *clusterNetworkAccessFlagPtr) ToClusterNetworkAccessFlagPtrOutput() ClusterNetworkAccessFlagPtrOutput {
	return pulumi.ToOutput(in).(ClusterNetworkAccessFlagPtrOutput)
}

func (in *clusterNetworkAccessFlagPtr) ToClusterNetworkAccessFlagPtrOutputWithContext(ctx context.Context) ClusterNetworkAccessFlagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterNetworkAccessFlagPtrOutput)
}

func (in *clusterNetworkAccessFlagPtr) ToOutput(ctx context.Context) pulumix.Output[*ClusterNetworkAccessFlag] {
	return pulumix.Output[*ClusterNetworkAccessFlag]{
		OutputState: in.ToClusterNetworkAccessFlagPtrOutputWithContext(ctx).OutputState,
	}
}

// Cluster principal role.
type ClusterPrincipalRole string

const (
	ClusterPrincipalRoleAllDatabasesAdmin  = ClusterPrincipalRole("AllDatabasesAdmin")
	ClusterPrincipalRoleAllDatabasesViewer = ClusterPrincipalRole("AllDatabasesViewer")
)

func (ClusterPrincipalRole) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalRole)(nil)).Elem()
}

func (e ClusterPrincipalRole) ToClusterPrincipalRoleOutput() ClusterPrincipalRoleOutput {
	return pulumi.ToOutput(e).(ClusterPrincipalRoleOutput)
}

func (e ClusterPrincipalRole) ToClusterPrincipalRoleOutputWithContext(ctx context.Context) ClusterPrincipalRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterPrincipalRoleOutput)
}

func (e ClusterPrincipalRole) ToClusterPrincipalRolePtrOutput() ClusterPrincipalRolePtrOutput {
	return e.ToClusterPrincipalRolePtrOutputWithContext(context.Background())
}

func (e ClusterPrincipalRole) ToClusterPrincipalRolePtrOutputWithContext(ctx context.Context) ClusterPrincipalRolePtrOutput {
	return ClusterPrincipalRole(e).ToClusterPrincipalRoleOutputWithContext(ctx).ToClusterPrincipalRolePtrOutputWithContext(ctx)
}

func (e ClusterPrincipalRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterPrincipalRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterPrincipalRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterPrincipalRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterPrincipalRoleOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalRole)(nil)).Elem()
}

func (o ClusterPrincipalRoleOutput) ToClusterPrincipalRoleOutput() ClusterPrincipalRoleOutput {
	return o
}

func (o ClusterPrincipalRoleOutput) ToClusterPrincipalRoleOutputWithContext(ctx context.Context) ClusterPrincipalRoleOutput {
	return o
}

func (o ClusterPrincipalRoleOutput) ToClusterPrincipalRolePtrOutput() ClusterPrincipalRolePtrOutput {
	return o.ToClusterPrincipalRolePtrOutputWithContext(context.Background())
}

func (o ClusterPrincipalRoleOutput) ToClusterPrincipalRolePtrOutputWithContext(ctx context.Context) ClusterPrincipalRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPrincipalRole) *ClusterPrincipalRole {
		return &v
	}).(ClusterPrincipalRolePtrOutput)
}

func (o ClusterPrincipalRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterPrincipalRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterPrincipalRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterPrincipalRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterPrincipalRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterPrincipalRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterPrincipalRolePtrOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrincipalRole)(nil)).Elem()
}

func (o ClusterPrincipalRolePtrOutput) ToClusterPrincipalRolePtrOutput() ClusterPrincipalRolePtrOutput {
	return o
}

func (o ClusterPrincipalRolePtrOutput) ToClusterPrincipalRolePtrOutputWithContext(ctx context.Context) ClusterPrincipalRolePtrOutput {
	return o
}

func (o ClusterPrincipalRolePtrOutput) Elem() ClusterPrincipalRoleOutput {
	return o.ApplyT(func(v *ClusterPrincipalRole) ClusterPrincipalRole {
		if v != nil {
			return *v
		}
		var ret ClusterPrincipalRole
		return ret
	}).(ClusterPrincipalRoleOutput)
}

func (o ClusterPrincipalRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterPrincipalRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterPrincipalRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterPrincipalRoleInput is an input type that accepts values of the ClusterPrincipalRole enum
// A concrete instance of `ClusterPrincipalRoleInput` can be one of the following:
//
//	ClusterPrincipalRoleAllDatabasesAdmin
//	ClusterPrincipalRoleAllDatabasesViewer
type ClusterPrincipalRoleInput interface {
	pulumi.Input

	ToClusterPrincipalRoleOutput() ClusterPrincipalRoleOutput
	ToClusterPrincipalRoleOutputWithContext(context.Context) ClusterPrincipalRoleOutput
}

var clusterPrincipalRolePtrType = reflect.TypeOf((**ClusterPrincipalRole)(nil)).Elem()

type ClusterPrincipalRolePtrInput interface {
	pulumi.Input

	ToClusterPrincipalRolePtrOutput() ClusterPrincipalRolePtrOutput
	ToClusterPrincipalRolePtrOutputWithContext(context.Context) ClusterPrincipalRolePtrOutput
}

type clusterPrincipalRolePtr string

func ClusterPrincipalRolePtr(v string) ClusterPrincipalRolePtrInput {
	return (*clusterPrincipalRolePtr)(&v)
}

func (*clusterPrincipalRolePtr) ElementType() reflect.Type {
	return clusterPrincipalRolePtrType
}

func (in *clusterPrincipalRolePtr) ToClusterPrincipalRolePtrOutput() ClusterPrincipalRolePtrOutput {
	return pulumi.ToOutput(in).(ClusterPrincipalRolePtrOutput)
}

func (in *clusterPrincipalRolePtr) ToClusterPrincipalRolePtrOutputWithContext(ctx context.Context) ClusterPrincipalRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterPrincipalRolePtrOutput)
}

func (in *clusterPrincipalRolePtr) ToOutput(ctx context.Context) pulumix.Output[*ClusterPrincipalRole] {
	return pulumix.Output[*ClusterPrincipalRole]{
		OutputState: in.ToClusterPrincipalRolePtrOutputWithContext(ctx).OutputState,
	}
}

// The event hub messages compression type
type Compression string

const (
	CompressionNone = Compression("None")
	CompressionGZip = Compression("GZip")
)

func (Compression) ElementType() reflect.Type {
	return reflect.TypeOf((*Compression)(nil)).Elem()
}

func (e Compression) ToCompressionOutput() CompressionOutput {
	return pulumi.ToOutput(e).(CompressionOutput)
}

func (e Compression) ToCompressionOutputWithContext(ctx context.Context) CompressionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CompressionOutput)
}

func (e Compression) ToCompressionPtrOutput() CompressionPtrOutput {
	return e.ToCompressionPtrOutputWithContext(context.Background())
}

func (e Compression) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return Compression(e).ToCompressionOutputWithContext(ctx).ToCompressionPtrOutputWithContext(ctx)
}

func (e Compression) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Compression) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Compression) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Compression) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CompressionOutput struct{ *pulumi.OutputState }

func (CompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Compression)(nil)).Elem()
}

func (o CompressionOutput) ToCompressionOutput() CompressionOutput {
	return o
}

func (o CompressionOutput) ToCompressionOutputWithContext(ctx context.Context) CompressionOutput {
	return o
}

func (o CompressionOutput) ToCompressionPtrOutput() CompressionPtrOutput {
	return o.ToCompressionPtrOutputWithContext(context.Background())
}

func (o CompressionOutput) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Compression) *Compression {
		return &v
	}).(CompressionPtrOutput)
}

func (o CompressionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CompressionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Compression) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CompressionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CompressionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Compression) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CompressionPtrOutput struct{ *pulumi.OutputState }

func (CompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Compression)(nil)).Elem()
}

func (o CompressionPtrOutput) ToCompressionPtrOutput() CompressionPtrOutput {
	return o
}

func (o CompressionPtrOutput) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return o
}

func (o CompressionPtrOutput) Elem() CompressionOutput {
	return o.ApplyT(func(v *Compression) Compression {
		if v != nil {
			return *v
		}
		var ret Compression
		return ret
	}).(CompressionOutput)
}

func (o CompressionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CompressionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Compression) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CompressionInput is an input type that accepts values of the Compression enum
// A concrete instance of `CompressionInput` can be one of the following:
//
//	CompressionNone
//	CompressionGZip
type CompressionInput interface {
	pulumi.Input

	ToCompressionOutput() CompressionOutput
	ToCompressionOutputWithContext(context.Context) CompressionOutput
}

var compressionPtrType = reflect.TypeOf((**Compression)(nil)).Elem()

type CompressionPtrInput interface {
	pulumi.Input

	ToCompressionPtrOutput() CompressionPtrOutput
	ToCompressionPtrOutputWithContext(context.Context) CompressionPtrOutput
}

type compressionPtr string

func CompressionPtr(v string) CompressionPtrInput {
	return (*compressionPtr)(&v)
}

func (*compressionPtr) ElementType() reflect.Type {
	return compressionPtrType
}

func (in *compressionPtr) ToCompressionPtrOutput() CompressionPtrOutput {
	return pulumi.ToOutput(in).(CompressionPtrOutput)
}

func (in *compressionPtr) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CompressionPtrOutput)
}

func (in *compressionPtr) ToOutput(ctx context.Context) pulumix.Output[*Compression] {
	return pulumix.Output[*Compression]{
		OutputState: in.ToCompressionPtrOutputWithContext(ctx).OutputState,
	}
}

// Kind of the endpoint for the data connection
type DataConnectionKind string

const (
	DataConnectionKindEventHub  = DataConnectionKind("EventHub")
	DataConnectionKindEventGrid = DataConnectionKind("EventGrid")
	DataConnectionKindIotHub    = DataConnectionKind("IotHub")
	DataConnectionKindCosmosDb  = DataConnectionKind("CosmosDb")
)

// Database principal role.
type DatabasePrincipalRole string

const (
	DatabasePrincipalRoleAdmin              = DatabasePrincipalRole("Admin")
	DatabasePrincipalRoleIngestor           = DatabasePrincipalRole("Ingestor")
	DatabasePrincipalRoleMonitor            = DatabasePrincipalRole("Monitor")
	DatabasePrincipalRoleUser               = DatabasePrincipalRole("User")
	DatabasePrincipalRoleUnrestrictedViewer = DatabasePrincipalRole("UnrestrictedViewer")
	DatabasePrincipalRoleViewer             = DatabasePrincipalRole("Viewer")
)

func (DatabasePrincipalRole) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalRole)(nil)).Elem()
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRoleOutput() DatabasePrincipalRoleOutput {
	return pulumi.ToOutput(e).(DatabasePrincipalRoleOutput)
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRoleOutputWithContext(ctx context.Context) DatabasePrincipalRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabasePrincipalRoleOutput)
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return e.ToDatabasePrincipalRolePtrOutputWithContext(context.Background())
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return DatabasePrincipalRole(e).ToDatabasePrincipalRoleOutputWithContext(ctx).ToDatabasePrincipalRolePtrOutputWithContext(ctx)
}

func (e DatabasePrincipalRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabasePrincipalRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabasePrincipalRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabasePrincipalRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabasePrincipalRoleOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalRole)(nil)).Elem()
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRoleOutput() DatabasePrincipalRoleOutput {
	return o
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRoleOutputWithContext(ctx context.Context) DatabasePrincipalRoleOutput {
	return o
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return o.ToDatabasePrincipalRolePtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabasePrincipalRole) *DatabasePrincipalRole {
		return &v
	}).(DatabasePrincipalRolePtrOutput)
}

func (o DatabasePrincipalRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabasePrincipalRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabasePrincipalRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabasePrincipalRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabasePrincipalRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabasePrincipalRolePtrOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePrincipalRole)(nil)).Elem()
}

func (o DatabasePrincipalRolePtrOutput) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return o
}

func (o DatabasePrincipalRolePtrOutput) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return o
}

func (o DatabasePrincipalRolePtrOutput) Elem() DatabasePrincipalRoleOutput {
	return o.ApplyT(func(v *DatabasePrincipalRole) DatabasePrincipalRole {
		if v != nil {
			return *v
		}
		var ret DatabasePrincipalRole
		return ret
	}).(DatabasePrincipalRoleOutput)
}

func (o DatabasePrincipalRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabasePrincipalRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabasePrincipalRoleInput is an input type that accepts values of the DatabasePrincipalRole enum
// A concrete instance of `DatabasePrincipalRoleInput` can be one of the following:
//
//	DatabasePrincipalRoleAdmin
//	DatabasePrincipalRoleIngestor
//	DatabasePrincipalRoleMonitor
//	DatabasePrincipalRoleUser
//	DatabasePrincipalRoleUnrestrictedViewer
//	DatabasePrincipalRoleViewer
type DatabasePrincipalRoleInput interface {
	pulumi.Input

	ToDatabasePrincipalRoleOutput() DatabasePrincipalRoleOutput
	ToDatabasePrincipalRoleOutputWithContext(context.Context) DatabasePrincipalRoleOutput
}

var databasePrincipalRolePtrType = reflect.TypeOf((**DatabasePrincipalRole)(nil)).Elem()

type DatabasePrincipalRolePtrInput interface {
	pulumi.Input

	ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput
	ToDatabasePrincipalRolePtrOutputWithContext(context.Context) DatabasePrincipalRolePtrOutput
}

type databasePrincipalRolePtr string

func DatabasePrincipalRolePtr(v string) DatabasePrincipalRolePtrInput {
	return (*databasePrincipalRolePtr)(&v)
}

func (*databasePrincipalRolePtr) ElementType() reflect.Type {
	return databasePrincipalRolePtrType
}

func (in *databasePrincipalRolePtr) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return pulumi.ToOutput(in).(DatabasePrincipalRolePtrOutput)
}

func (in *databasePrincipalRolePtr) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabasePrincipalRolePtrOutput)
}

func (in *databasePrincipalRolePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabasePrincipalRole] {
	return pulumix.Output[*DatabasePrincipalRole]{
		OutputState: in.ToDatabasePrincipalRolePtrOutputWithContext(ctx).OutputState,
	}
}

// Indication for database routing information from the data connection, by default only database routing information is allowed
type DatabaseRouting string

const (
	DatabaseRoutingSingle = DatabaseRouting("Single")
	DatabaseRoutingMulti  = DatabaseRouting("Multi")
)

func (DatabaseRouting) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRouting)(nil)).Elem()
}

func (e DatabaseRouting) ToDatabaseRoutingOutput() DatabaseRoutingOutput {
	return pulumi.ToOutput(e).(DatabaseRoutingOutput)
}

func (e DatabaseRouting) ToDatabaseRoutingOutputWithContext(ctx context.Context) DatabaseRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseRoutingOutput)
}

func (e DatabaseRouting) ToDatabaseRoutingPtrOutput() DatabaseRoutingPtrOutput {
	return e.ToDatabaseRoutingPtrOutputWithContext(context.Background())
}

func (e DatabaseRouting) ToDatabaseRoutingPtrOutputWithContext(ctx context.Context) DatabaseRoutingPtrOutput {
	return DatabaseRouting(e).ToDatabaseRoutingOutputWithContext(ctx).ToDatabaseRoutingPtrOutputWithContext(ctx)
}

func (e DatabaseRouting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseRouting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseRouting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseRouting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseRoutingOutput struct{ *pulumi.OutputState }

func (DatabaseRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRouting)(nil)).Elem()
}

func (o DatabaseRoutingOutput) ToDatabaseRoutingOutput() DatabaseRoutingOutput {
	return o
}

func (o DatabaseRoutingOutput) ToDatabaseRoutingOutputWithContext(ctx context.Context) DatabaseRoutingOutput {
	return o
}

func (o DatabaseRoutingOutput) ToDatabaseRoutingPtrOutput() DatabaseRoutingPtrOutput {
	return o.ToDatabaseRoutingPtrOutputWithContext(context.Background())
}

func (o DatabaseRoutingOutput) ToDatabaseRoutingPtrOutputWithContext(ctx context.Context) DatabaseRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseRouting) *DatabaseRouting {
		return &v
	}).(DatabaseRoutingPtrOutput)
}

func (o DatabaseRoutingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseRoutingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseRouting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseRoutingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseRoutingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseRouting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseRoutingPtrOutput struct{ *pulumi.OutputState }

func (DatabaseRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseRouting)(nil)).Elem()
}

func (o DatabaseRoutingPtrOutput) ToDatabaseRoutingPtrOutput() DatabaseRoutingPtrOutput {
	return o
}

func (o DatabaseRoutingPtrOutput) ToDatabaseRoutingPtrOutputWithContext(ctx context.Context) DatabaseRoutingPtrOutput {
	return o
}

func (o DatabaseRoutingPtrOutput) Elem() DatabaseRoutingOutput {
	return o.ApplyT(func(v *DatabaseRouting) DatabaseRouting {
		if v != nil {
			return *v
		}
		var ret DatabaseRouting
		return ret
	}).(DatabaseRoutingOutput)
}

func (o DatabaseRoutingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseRoutingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseRouting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseRoutingInput is an input type that accepts values of the DatabaseRouting enum
// A concrete instance of `DatabaseRoutingInput` can be one of the following:
//
//	DatabaseRoutingSingle
//	DatabaseRoutingMulti
type DatabaseRoutingInput interface {
	pulumi.Input

	ToDatabaseRoutingOutput() DatabaseRoutingOutput
	ToDatabaseRoutingOutputWithContext(context.Context) DatabaseRoutingOutput
}

var databaseRoutingPtrType = reflect.TypeOf((**DatabaseRouting)(nil)).Elem()

type DatabaseRoutingPtrInput interface {
	pulumi.Input

	ToDatabaseRoutingPtrOutput() DatabaseRoutingPtrOutput
	ToDatabaseRoutingPtrOutputWithContext(context.Context) DatabaseRoutingPtrOutput
}

type databaseRoutingPtr string

func DatabaseRoutingPtr(v string) DatabaseRoutingPtrInput {
	return (*databaseRoutingPtr)(&v)
}

func (*databaseRoutingPtr) ElementType() reflect.Type {
	return databaseRoutingPtrType
}

func (in *databaseRoutingPtr) ToDatabaseRoutingPtrOutput() DatabaseRoutingPtrOutput {
	return pulumi.ToOutput(in).(DatabaseRoutingPtrOutput)
}

func (in *databaseRoutingPtr) ToDatabaseRoutingPtrOutputWithContext(ctx context.Context) DatabaseRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseRoutingPtrOutput)
}

func (in *databaseRoutingPtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseRouting] {
	return pulumix.Output[*DatabaseRouting]{
		OutputState: in.ToDatabaseRoutingPtrOutputWithContext(ctx).OutputState,
	}
}

// The default principals modification kind
type DefaultPrincipalsModificationKind string

const (
	DefaultPrincipalsModificationKindUnion   = DefaultPrincipalsModificationKind("Union")
	DefaultPrincipalsModificationKindReplace = DefaultPrincipalsModificationKind("Replace")
	DefaultPrincipalsModificationKindNone    = DefaultPrincipalsModificationKind("None")
)

func (DefaultPrincipalsModificationKind) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultPrincipalsModificationKind)(nil)).Elem()
}

func (e DefaultPrincipalsModificationKind) ToDefaultPrincipalsModificationKindOutput() DefaultPrincipalsModificationKindOutput {
	return pulumi.ToOutput(e).(DefaultPrincipalsModificationKindOutput)
}

func (e DefaultPrincipalsModificationKind) ToDefaultPrincipalsModificationKindOutputWithContext(ctx context.Context) DefaultPrincipalsModificationKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DefaultPrincipalsModificationKindOutput)
}

func (e DefaultPrincipalsModificationKind) ToDefaultPrincipalsModificationKindPtrOutput() DefaultPrincipalsModificationKindPtrOutput {
	return e.ToDefaultPrincipalsModificationKindPtrOutputWithContext(context.Background())
}

func (e DefaultPrincipalsModificationKind) ToDefaultPrincipalsModificationKindPtrOutputWithContext(ctx context.Context) DefaultPrincipalsModificationKindPtrOutput {
	return DefaultPrincipalsModificationKind(e).ToDefaultPrincipalsModificationKindOutputWithContext(ctx).ToDefaultPrincipalsModificationKindPtrOutputWithContext(ctx)
}

func (e DefaultPrincipalsModificationKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultPrincipalsModificationKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultPrincipalsModificationKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DefaultPrincipalsModificationKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DefaultPrincipalsModificationKindOutput struct{ *pulumi.OutputState }

func (DefaultPrincipalsModificationKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultPrincipalsModificationKind)(nil)).Elem()
}

func (o DefaultPrincipalsModificationKindOutput) ToDefaultPrincipalsModificationKindOutput() DefaultPrincipalsModificationKindOutput {
	return o
}

func (o DefaultPrincipalsModificationKindOutput) ToDefaultPrincipalsModificationKindOutputWithContext(ctx context.Context) DefaultPrincipalsModificationKindOutput {
	return o
}

func (o DefaultPrincipalsModificationKindOutput) ToDefaultPrincipalsModificationKindPtrOutput() DefaultPrincipalsModificationKindPtrOutput {
	return o.ToDefaultPrincipalsModificationKindPtrOutputWithContext(context.Background())
}

func (o DefaultPrincipalsModificationKindOutput) ToDefaultPrincipalsModificationKindPtrOutputWithContext(ctx context.Context) DefaultPrincipalsModificationKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefaultPrincipalsModificationKind) *DefaultPrincipalsModificationKind {
		return &v
	}).(DefaultPrincipalsModificationKindPtrOutput)
}

func (o DefaultPrincipalsModificationKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DefaultPrincipalsModificationKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultPrincipalsModificationKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DefaultPrincipalsModificationKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultPrincipalsModificationKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultPrincipalsModificationKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DefaultPrincipalsModificationKindPtrOutput struct{ *pulumi.OutputState }

func (DefaultPrincipalsModificationKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultPrincipalsModificationKind)(nil)).Elem()
}

func (o DefaultPrincipalsModificationKindPtrOutput) ToDefaultPrincipalsModificationKindPtrOutput() DefaultPrincipalsModificationKindPtrOutput {
	return o
}

func (o DefaultPrincipalsModificationKindPtrOutput) ToDefaultPrincipalsModificationKindPtrOutputWithContext(ctx context.Context) DefaultPrincipalsModificationKindPtrOutput {
	return o
}

func (o DefaultPrincipalsModificationKindPtrOutput) Elem() DefaultPrincipalsModificationKindOutput {
	return o.ApplyT(func(v *DefaultPrincipalsModificationKind) DefaultPrincipalsModificationKind {
		if v != nil {
			return *v
		}
		var ret DefaultPrincipalsModificationKind
		return ret
	}).(DefaultPrincipalsModificationKindOutput)
}

func (o DefaultPrincipalsModificationKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultPrincipalsModificationKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DefaultPrincipalsModificationKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DefaultPrincipalsModificationKindInput is an input type that accepts values of the DefaultPrincipalsModificationKind enum
// A concrete instance of `DefaultPrincipalsModificationKindInput` can be one of the following:
//
//	DefaultPrincipalsModificationKindUnion
//	DefaultPrincipalsModificationKindReplace
//	DefaultPrincipalsModificationKindNone
type DefaultPrincipalsModificationKindInput interface {
	pulumi.Input

	ToDefaultPrincipalsModificationKindOutput() DefaultPrincipalsModificationKindOutput
	ToDefaultPrincipalsModificationKindOutputWithContext(context.Context) DefaultPrincipalsModificationKindOutput
}

var defaultPrincipalsModificationKindPtrType = reflect.TypeOf((**DefaultPrincipalsModificationKind)(nil)).Elem()

type DefaultPrincipalsModificationKindPtrInput interface {
	pulumi.Input

	ToDefaultPrincipalsModificationKindPtrOutput() DefaultPrincipalsModificationKindPtrOutput
	ToDefaultPrincipalsModificationKindPtrOutputWithContext(context.Context) DefaultPrincipalsModificationKindPtrOutput
}

type defaultPrincipalsModificationKindPtr string

func DefaultPrincipalsModificationKindPtr(v string) DefaultPrincipalsModificationKindPtrInput {
	return (*defaultPrincipalsModificationKindPtr)(&v)
}

func (*defaultPrincipalsModificationKindPtr) ElementType() reflect.Type {
	return defaultPrincipalsModificationKindPtrType
}

func (in *defaultPrincipalsModificationKindPtr) ToDefaultPrincipalsModificationKindPtrOutput() DefaultPrincipalsModificationKindPtrOutput {
	return pulumi.ToOutput(in).(DefaultPrincipalsModificationKindPtrOutput)
}

func (in *defaultPrincipalsModificationKindPtr) ToDefaultPrincipalsModificationKindPtrOutputWithContext(ctx context.Context) DefaultPrincipalsModificationKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DefaultPrincipalsModificationKindPtrOutput)
}

func (in *defaultPrincipalsModificationKindPtr) ToOutput(ctx context.Context) pulumix.Output[*DefaultPrincipalsModificationKind] {
	return pulumix.Output[*DefaultPrincipalsModificationKind]{
		OutputState: in.ToDefaultPrincipalsModificationKindPtrOutputWithContext(ctx).OutputState,
	}
}

// The engine type
type EngineType string

const (
	EngineTypeV2 = EngineType("V2")
	EngineTypeV3 = EngineType("V3")
)

func (EngineType) ElementType() reflect.Type {
	return reflect.TypeOf((*EngineType)(nil)).Elem()
}

func (e EngineType) ToEngineTypeOutput() EngineTypeOutput {
	return pulumi.ToOutput(e).(EngineTypeOutput)
}

func (e EngineType) ToEngineTypeOutputWithContext(ctx context.Context) EngineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EngineTypeOutput)
}

func (e EngineType) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return e.ToEngineTypePtrOutputWithContext(context.Background())
}

func (e EngineType) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return EngineType(e).ToEngineTypeOutputWithContext(ctx).ToEngineTypePtrOutputWithContext(ctx)
}

func (e EngineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EngineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EngineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EngineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EngineTypeOutput struct{ *pulumi.OutputState }

func (EngineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EngineType)(nil)).Elem()
}

func (o EngineTypeOutput) ToEngineTypeOutput() EngineTypeOutput {
	return o
}

func (o EngineTypeOutput) ToEngineTypeOutputWithContext(ctx context.Context) EngineTypeOutput {
	return o
}

func (o EngineTypeOutput) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return o.ToEngineTypePtrOutputWithContext(context.Background())
}

func (o EngineTypeOutput) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EngineType) *EngineType {
		return &v
	}).(EngineTypePtrOutput)
}

func (o EngineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EngineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EngineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EngineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EngineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EngineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EngineTypePtrOutput struct{ *pulumi.OutputState }

func (EngineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EngineType)(nil)).Elem()
}

func (o EngineTypePtrOutput) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return o
}

func (o EngineTypePtrOutput) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return o
}

func (o EngineTypePtrOutput) Elem() EngineTypeOutput {
	return o.ApplyT(func(v *EngineType) EngineType {
		if v != nil {
			return *v
		}
		var ret EngineType
		return ret
	}).(EngineTypeOutput)
}

func (o EngineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EngineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EngineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EngineTypeInput is an input type that accepts values of the EngineType enum
// A concrete instance of `EngineTypeInput` can be one of the following:
//
//	EngineTypeV2
//	EngineTypeV3
type EngineTypeInput interface {
	pulumi.Input

	ToEngineTypeOutput() EngineTypeOutput
	ToEngineTypeOutputWithContext(context.Context) EngineTypeOutput
}

var engineTypePtrType = reflect.TypeOf((**EngineType)(nil)).Elem()

type EngineTypePtrInput interface {
	pulumi.Input

	ToEngineTypePtrOutput() EngineTypePtrOutput
	ToEngineTypePtrOutputWithContext(context.Context) EngineTypePtrOutput
}

type engineTypePtr string

func EngineTypePtr(v string) EngineTypePtrInput {
	return (*engineTypePtr)(&v)
}

func (*engineTypePtr) ElementType() reflect.Type {
	return engineTypePtrType
}

func (in *engineTypePtr) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return pulumi.ToOutput(in).(EngineTypePtrOutput)
}

func (in *engineTypePtr) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EngineTypePtrOutput)
}

func (in *engineTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EngineType] {
	return pulumix.Output[*EngineType]{
		OutputState: in.ToEngineTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The data format of the message. Optionally the data format can be added to each message.
type EventGridDataFormat string

const (
	EventGridDataFormatMULTIJSON  = EventGridDataFormat("MULTIJSON")
	EventGridDataFormatJSON       = EventGridDataFormat("JSON")
	EventGridDataFormatCSV        = EventGridDataFormat("CSV")
	EventGridDataFormatTSV        = EventGridDataFormat("TSV")
	EventGridDataFormatSCSV       = EventGridDataFormat("SCSV")
	EventGridDataFormatSOHSV      = EventGridDataFormat("SOHSV")
	EventGridDataFormatPSV        = EventGridDataFormat("PSV")
	EventGridDataFormatTXT        = EventGridDataFormat("TXT")
	EventGridDataFormatRAW        = EventGridDataFormat("RAW")
	EventGridDataFormatSINGLEJSON = EventGridDataFormat("SINGLEJSON")
	EventGridDataFormatAVRO       = EventGridDataFormat("AVRO")
	EventGridDataFormatTSVE       = EventGridDataFormat("TSVE")
	EventGridDataFormatPARQUET    = EventGridDataFormat("PARQUET")
	EventGridDataFormatORC        = EventGridDataFormat("ORC")
	EventGridDataFormatAPACHEAVRO = EventGridDataFormat("APACHEAVRO")
	EventGridDataFormatW3CLOGFILE = EventGridDataFormat("W3CLOGFILE")
)

func (EventGridDataFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGridDataFormat)(nil)).Elem()
}

func (e EventGridDataFormat) ToEventGridDataFormatOutput() EventGridDataFormatOutput {
	return pulumi.ToOutput(e).(EventGridDataFormatOutput)
}

func (e EventGridDataFormat) ToEventGridDataFormatOutputWithContext(ctx context.Context) EventGridDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventGridDataFormatOutput)
}

func (e EventGridDataFormat) ToEventGridDataFormatPtrOutput() EventGridDataFormatPtrOutput {
	return e.ToEventGridDataFormatPtrOutputWithContext(context.Background())
}

func (e EventGridDataFormat) ToEventGridDataFormatPtrOutputWithContext(ctx context.Context) EventGridDataFormatPtrOutput {
	return EventGridDataFormat(e).ToEventGridDataFormatOutputWithContext(ctx).ToEventGridDataFormatPtrOutputWithContext(ctx)
}

func (e EventGridDataFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventGridDataFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventGridDataFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventGridDataFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventGridDataFormatOutput struct{ *pulumi.OutputState }

func (EventGridDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGridDataFormat)(nil)).Elem()
}

func (o EventGridDataFormatOutput) ToEventGridDataFormatOutput() EventGridDataFormatOutput {
	return o
}

func (o EventGridDataFormatOutput) ToEventGridDataFormatOutputWithContext(ctx context.Context) EventGridDataFormatOutput {
	return o
}

func (o EventGridDataFormatOutput) ToEventGridDataFormatPtrOutput() EventGridDataFormatPtrOutput {
	return o.ToEventGridDataFormatPtrOutputWithContext(context.Background())
}

func (o EventGridDataFormatOutput) ToEventGridDataFormatPtrOutputWithContext(ctx context.Context) EventGridDataFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventGridDataFormat) *EventGridDataFormat {
		return &v
	}).(EventGridDataFormatPtrOutput)
}

func (o EventGridDataFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventGridDataFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventGridDataFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventGridDataFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventGridDataFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventGridDataFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventGridDataFormatPtrOutput struct{ *pulumi.OutputState }

func (EventGridDataFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGridDataFormat)(nil)).Elem()
}

func (o EventGridDataFormatPtrOutput) ToEventGridDataFormatPtrOutput() EventGridDataFormatPtrOutput {
	return o
}

func (o EventGridDataFormatPtrOutput) ToEventGridDataFormatPtrOutputWithContext(ctx context.Context) EventGridDataFormatPtrOutput {
	return o
}

func (o EventGridDataFormatPtrOutput) Elem() EventGridDataFormatOutput {
	return o.ApplyT(func(v *EventGridDataFormat) EventGridDataFormat {
		if v != nil {
			return *v
		}
		var ret EventGridDataFormat
		return ret
	}).(EventGridDataFormatOutput)
}

func (o EventGridDataFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventGridDataFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventGridDataFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventGridDataFormatInput is an input type that accepts values of the EventGridDataFormat enum
// A concrete instance of `EventGridDataFormatInput` can be one of the following:
//
//	EventGridDataFormatMULTIJSON
//	EventGridDataFormatJSON
//	EventGridDataFormatCSV
//	EventGridDataFormatTSV
//	EventGridDataFormatSCSV
//	EventGridDataFormatSOHSV
//	EventGridDataFormatPSV
//	EventGridDataFormatTXT
//	EventGridDataFormatRAW
//	EventGridDataFormatSINGLEJSON
//	EventGridDataFormatAVRO
//	EventGridDataFormatTSVE
//	EventGridDataFormatPARQUET
//	EventGridDataFormatORC
//	EventGridDataFormatAPACHEAVRO
//	EventGridDataFormatW3CLOGFILE
type EventGridDataFormatInput interface {
	pulumi.Input

	ToEventGridDataFormatOutput() EventGridDataFormatOutput
	ToEventGridDataFormatOutputWithContext(context.Context) EventGridDataFormatOutput
}

var eventGridDataFormatPtrType = reflect.TypeOf((**EventGridDataFormat)(nil)).Elem()

type EventGridDataFormatPtrInput interface {
	pulumi.Input

	ToEventGridDataFormatPtrOutput() EventGridDataFormatPtrOutput
	ToEventGridDataFormatPtrOutputWithContext(context.Context) EventGridDataFormatPtrOutput
}

type eventGridDataFormatPtr string

func EventGridDataFormatPtr(v string) EventGridDataFormatPtrInput {
	return (*eventGridDataFormatPtr)(&v)
}

func (*eventGridDataFormatPtr) ElementType() reflect.Type {
	return eventGridDataFormatPtrType
}

func (in *eventGridDataFormatPtr) ToEventGridDataFormatPtrOutput() EventGridDataFormatPtrOutput {
	return pulumi.ToOutput(in).(EventGridDataFormatPtrOutput)
}

func (in *eventGridDataFormatPtr) ToEventGridDataFormatPtrOutputWithContext(ctx context.Context) EventGridDataFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventGridDataFormatPtrOutput)
}

func (in *eventGridDataFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*EventGridDataFormat] {
	return pulumix.Output[*EventGridDataFormat]{
		OutputState: in.ToEventGridDataFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The data format of the message. Optionally the data format can be added to each message.
type EventHubDataFormat string

const (
	EventHubDataFormatMULTIJSON  = EventHubDataFormat("MULTIJSON")
	EventHubDataFormatJSON       = EventHubDataFormat("JSON")
	EventHubDataFormatCSV        = EventHubDataFormat("CSV")
	EventHubDataFormatTSV        = EventHubDataFormat("TSV")
	EventHubDataFormatSCSV       = EventHubDataFormat("SCSV")
	EventHubDataFormatSOHSV      = EventHubDataFormat("SOHSV")
	EventHubDataFormatPSV        = EventHubDataFormat("PSV")
	EventHubDataFormatTXT        = EventHubDataFormat("TXT")
	EventHubDataFormatRAW        = EventHubDataFormat("RAW")
	EventHubDataFormatSINGLEJSON = EventHubDataFormat("SINGLEJSON")
	EventHubDataFormatAVRO       = EventHubDataFormat("AVRO")
	EventHubDataFormatTSVE       = EventHubDataFormat("TSVE")
	EventHubDataFormatPARQUET    = EventHubDataFormat("PARQUET")
	EventHubDataFormatORC        = EventHubDataFormat("ORC")
	EventHubDataFormatAPACHEAVRO = EventHubDataFormat("APACHEAVRO")
	EventHubDataFormatW3CLOGFILE = EventHubDataFormat("W3CLOGFILE")
)

func (EventHubDataFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubDataFormat)(nil)).Elem()
}

func (e EventHubDataFormat) ToEventHubDataFormatOutput() EventHubDataFormatOutput {
	return pulumi.ToOutput(e).(EventHubDataFormatOutput)
}

func (e EventHubDataFormat) ToEventHubDataFormatOutputWithContext(ctx context.Context) EventHubDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventHubDataFormatOutput)
}

func (e EventHubDataFormat) ToEventHubDataFormatPtrOutput() EventHubDataFormatPtrOutput {
	return e.ToEventHubDataFormatPtrOutputWithContext(context.Background())
}

func (e EventHubDataFormat) ToEventHubDataFormatPtrOutputWithContext(ctx context.Context) EventHubDataFormatPtrOutput {
	return EventHubDataFormat(e).ToEventHubDataFormatOutputWithContext(ctx).ToEventHubDataFormatPtrOutputWithContext(ctx)
}

func (e EventHubDataFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventHubDataFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventHubDataFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventHubDataFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventHubDataFormatOutput struct{ *pulumi.OutputState }

func (EventHubDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubDataFormat)(nil)).Elem()
}

func (o EventHubDataFormatOutput) ToEventHubDataFormatOutput() EventHubDataFormatOutput {
	return o
}

func (o EventHubDataFormatOutput) ToEventHubDataFormatOutputWithContext(ctx context.Context) EventHubDataFormatOutput {
	return o
}

func (o EventHubDataFormatOutput) ToEventHubDataFormatPtrOutput() EventHubDataFormatPtrOutput {
	return o.ToEventHubDataFormatPtrOutputWithContext(context.Background())
}

func (o EventHubDataFormatOutput) ToEventHubDataFormatPtrOutputWithContext(ctx context.Context) EventHubDataFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventHubDataFormat) *EventHubDataFormat {
		return &v
	}).(EventHubDataFormatPtrOutput)
}

func (o EventHubDataFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventHubDataFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventHubDataFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventHubDataFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventHubDataFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventHubDataFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventHubDataFormatPtrOutput struct{ *pulumi.OutputState }

func (EventHubDataFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubDataFormat)(nil)).Elem()
}

func (o EventHubDataFormatPtrOutput) ToEventHubDataFormatPtrOutput() EventHubDataFormatPtrOutput {
	return o
}

func (o EventHubDataFormatPtrOutput) ToEventHubDataFormatPtrOutputWithContext(ctx context.Context) EventHubDataFormatPtrOutput {
	return o
}

func (o EventHubDataFormatPtrOutput) Elem() EventHubDataFormatOutput {
	return o.ApplyT(func(v *EventHubDataFormat) EventHubDataFormat {
		if v != nil {
			return *v
		}
		var ret EventHubDataFormat
		return ret
	}).(EventHubDataFormatOutput)
}

func (o EventHubDataFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventHubDataFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventHubDataFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventHubDataFormatInput is an input type that accepts values of the EventHubDataFormat enum
// A concrete instance of `EventHubDataFormatInput` can be one of the following:
//
//	EventHubDataFormatMULTIJSON
//	EventHubDataFormatJSON
//	EventHubDataFormatCSV
//	EventHubDataFormatTSV
//	EventHubDataFormatSCSV
//	EventHubDataFormatSOHSV
//	EventHubDataFormatPSV
//	EventHubDataFormatTXT
//	EventHubDataFormatRAW
//	EventHubDataFormatSINGLEJSON
//	EventHubDataFormatAVRO
//	EventHubDataFormatTSVE
//	EventHubDataFormatPARQUET
//	EventHubDataFormatORC
//	EventHubDataFormatAPACHEAVRO
//	EventHubDataFormatW3CLOGFILE
type EventHubDataFormatInput interface {
	pulumi.Input

	ToEventHubDataFormatOutput() EventHubDataFormatOutput
	ToEventHubDataFormatOutputWithContext(context.Context) EventHubDataFormatOutput
}

var eventHubDataFormatPtrType = reflect.TypeOf((**EventHubDataFormat)(nil)).Elem()

type EventHubDataFormatPtrInput interface {
	pulumi.Input

	ToEventHubDataFormatPtrOutput() EventHubDataFormatPtrOutput
	ToEventHubDataFormatPtrOutputWithContext(context.Context) EventHubDataFormatPtrOutput
}

type eventHubDataFormatPtr string

func EventHubDataFormatPtr(v string) EventHubDataFormatPtrInput {
	return (*eventHubDataFormatPtr)(&v)
}

func (*eventHubDataFormatPtr) ElementType() reflect.Type {
	return eventHubDataFormatPtrType
}

func (in *eventHubDataFormatPtr) ToEventHubDataFormatPtrOutput() EventHubDataFormatPtrOutput {
	return pulumi.ToOutput(in).(EventHubDataFormatPtrOutput)
}

func (in *eventHubDataFormatPtr) ToEventHubDataFormatPtrOutputWithContext(ctx context.Context) EventHubDataFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventHubDataFormatPtrOutput)
}

func (in *eventHubDataFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*EventHubDataFormat] {
	return pulumix.Output[*EventHubDataFormat]{
		OutputState: in.ToEventHubDataFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.
type IdentityType string

const (
	IdentityTypeNone                         = IdentityType("None")
	IdentityTypeSystemAssigned               = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned                 = IdentityType("UserAssigned")
	IdentityType_SystemAssigned_UserAssigned = IdentityType("SystemAssigned, UserAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeNone
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
//	IdentityType_SystemAssigned_UserAssigned
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*IdentityType] {
	return pulumix.Output[*IdentityType]{
		OutputState: in.ToIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The data format of the message. Optionally the data format can be added to each message.
type IotHubDataFormat string

const (
	IotHubDataFormatMULTIJSON  = IotHubDataFormat("MULTIJSON")
	IotHubDataFormatJSON       = IotHubDataFormat("JSON")
	IotHubDataFormatCSV        = IotHubDataFormat("CSV")
	IotHubDataFormatTSV        = IotHubDataFormat("TSV")
	IotHubDataFormatSCSV       = IotHubDataFormat("SCSV")
	IotHubDataFormatSOHSV      = IotHubDataFormat("SOHSV")
	IotHubDataFormatPSV        = IotHubDataFormat("PSV")
	IotHubDataFormatTXT        = IotHubDataFormat("TXT")
	IotHubDataFormatRAW        = IotHubDataFormat("RAW")
	IotHubDataFormatSINGLEJSON = IotHubDataFormat("SINGLEJSON")
	IotHubDataFormatAVRO       = IotHubDataFormat("AVRO")
	IotHubDataFormatTSVE       = IotHubDataFormat("TSVE")
	IotHubDataFormatPARQUET    = IotHubDataFormat("PARQUET")
	IotHubDataFormatORC        = IotHubDataFormat("ORC")
	IotHubDataFormatAPACHEAVRO = IotHubDataFormat("APACHEAVRO")
	IotHubDataFormatW3CLOGFILE = IotHubDataFormat("W3CLOGFILE")
)

func (IotHubDataFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDataFormat)(nil)).Elem()
}

func (e IotHubDataFormat) ToIotHubDataFormatOutput() IotHubDataFormatOutput {
	return pulumi.ToOutput(e).(IotHubDataFormatOutput)
}

func (e IotHubDataFormat) ToIotHubDataFormatOutputWithContext(ctx context.Context) IotHubDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IotHubDataFormatOutput)
}

func (e IotHubDataFormat) ToIotHubDataFormatPtrOutput() IotHubDataFormatPtrOutput {
	return e.ToIotHubDataFormatPtrOutputWithContext(context.Background())
}

func (e IotHubDataFormat) ToIotHubDataFormatPtrOutputWithContext(ctx context.Context) IotHubDataFormatPtrOutput {
	return IotHubDataFormat(e).ToIotHubDataFormatOutputWithContext(ctx).ToIotHubDataFormatPtrOutputWithContext(ctx)
}

func (e IotHubDataFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IotHubDataFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IotHubDataFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IotHubDataFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IotHubDataFormatOutput struct{ *pulumi.OutputState }

func (IotHubDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDataFormat)(nil)).Elem()
}

func (o IotHubDataFormatOutput) ToIotHubDataFormatOutput() IotHubDataFormatOutput {
	return o
}

func (o IotHubDataFormatOutput) ToIotHubDataFormatOutputWithContext(ctx context.Context) IotHubDataFormatOutput {
	return o
}

func (o IotHubDataFormatOutput) ToIotHubDataFormatPtrOutput() IotHubDataFormatPtrOutput {
	return o.ToIotHubDataFormatPtrOutputWithContext(context.Background())
}

func (o IotHubDataFormatOutput) ToIotHubDataFormatPtrOutputWithContext(ctx context.Context) IotHubDataFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotHubDataFormat) *IotHubDataFormat {
		return &v
	}).(IotHubDataFormatPtrOutput)
}

func (o IotHubDataFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IotHubDataFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IotHubDataFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IotHubDataFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IotHubDataFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IotHubDataFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IotHubDataFormatPtrOutput struct{ *pulumi.OutputState }

func (IotHubDataFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDataFormat)(nil)).Elem()
}

func (o IotHubDataFormatPtrOutput) ToIotHubDataFormatPtrOutput() IotHubDataFormatPtrOutput {
	return o
}

func (o IotHubDataFormatPtrOutput) ToIotHubDataFormatPtrOutputWithContext(ctx context.Context) IotHubDataFormatPtrOutput {
	return o
}

func (o IotHubDataFormatPtrOutput) Elem() IotHubDataFormatOutput {
	return o.ApplyT(func(v *IotHubDataFormat) IotHubDataFormat {
		if v != nil {
			return *v
		}
		var ret IotHubDataFormat
		return ret
	}).(IotHubDataFormatOutput)
}

func (o IotHubDataFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IotHubDataFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IotHubDataFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IotHubDataFormatInput is an input type that accepts values of the IotHubDataFormat enum
// A concrete instance of `IotHubDataFormatInput` can be one of the following:
//
//	IotHubDataFormatMULTIJSON
//	IotHubDataFormatJSON
//	IotHubDataFormatCSV
//	IotHubDataFormatTSV
//	IotHubDataFormatSCSV
//	IotHubDataFormatSOHSV
//	IotHubDataFormatPSV
//	IotHubDataFormatTXT
//	IotHubDataFormatRAW
//	IotHubDataFormatSINGLEJSON
//	IotHubDataFormatAVRO
//	IotHubDataFormatTSVE
//	IotHubDataFormatPARQUET
//	IotHubDataFormatORC
//	IotHubDataFormatAPACHEAVRO
//	IotHubDataFormatW3CLOGFILE
type IotHubDataFormatInput interface {
	pulumi.Input

	ToIotHubDataFormatOutput() IotHubDataFormatOutput
	ToIotHubDataFormatOutputWithContext(context.Context) IotHubDataFormatOutput
}

var iotHubDataFormatPtrType = reflect.TypeOf((**IotHubDataFormat)(nil)).Elem()

type IotHubDataFormatPtrInput interface {
	pulumi.Input

	ToIotHubDataFormatPtrOutput() IotHubDataFormatPtrOutput
	ToIotHubDataFormatPtrOutputWithContext(context.Context) IotHubDataFormatPtrOutput
}

type iotHubDataFormatPtr string

func IotHubDataFormatPtr(v string) IotHubDataFormatPtrInput {
	return (*iotHubDataFormatPtr)(&v)
}

func (*iotHubDataFormatPtr) ElementType() reflect.Type {
	return iotHubDataFormatPtrType
}

func (in *iotHubDataFormatPtr) ToIotHubDataFormatPtrOutput() IotHubDataFormatPtrOutput {
	return pulumi.ToOutput(in).(IotHubDataFormatPtrOutput)
}

func (in *iotHubDataFormatPtr) ToIotHubDataFormatPtrOutputWithContext(ctx context.Context) IotHubDataFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IotHubDataFormatPtrOutput)
}

func (in *iotHubDataFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*IotHubDataFormat] {
	return pulumix.Output[*IotHubDataFormat]{
		OutputState: in.ToIotHubDataFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// Kind of the database
type Kind string

const (
	KindReadWrite         = Kind("ReadWrite")
	KindReadOnlyFollowing = Kind("ReadOnlyFollowing")
)

// The language name, for example Python.
type Language string

const (
	LanguagePython = Language("Python")
)

func (Language) ElementType() reflect.Type {
	return reflect.TypeOf((*Language)(nil)).Elem()
}

func (e Language) ToLanguageOutput() LanguageOutput {
	return pulumi.ToOutput(e).(LanguageOutput)
}

func (e Language) ToLanguageOutputWithContext(ctx context.Context) LanguageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LanguageOutput)
}

func (e Language) ToLanguagePtrOutput() LanguagePtrOutput {
	return e.ToLanguagePtrOutputWithContext(context.Background())
}

func (e Language) ToLanguagePtrOutputWithContext(ctx context.Context) LanguagePtrOutput {
	return Language(e).ToLanguageOutputWithContext(ctx).ToLanguagePtrOutputWithContext(ctx)
}

func (e Language) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Language) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Language) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Language) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LanguageOutput struct{ *pulumi.OutputState }

func (LanguageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Language)(nil)).Elem()
}

func (o LanguageOutput) ToLanguageOutput() LanguageOutput {
	return o
}

func (o LanguageOutput) ToLanguageOutputWithContext(ctx context.Context) LanguageOutput {
	return o
}

func (o LanguageOutput) ToLanguagePtrOutput() LanguagePtrOutput {
	return o.ToLanguagePtrOutputWithContext(context.Background())
}

func (o LanguageOutput) ToLanguagePtrOutputWithContext(ctx context.Context) LanguagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Language) *Language {
		return &v
	}).(LanguagePtrOutput)
}

func (o LanguageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LanguageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Language) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LanguageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Language) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LanguagePtrOutput struct{ *pulumi.OutputState }

func (LanguagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Language)(nil)).Elem()
}

func (o LanguagePtrOutput) ToLanguagePtrOutput() LanguagePtrOutput {
	return o
}

func (o LanguagePtrOutput) ToLanguagePtrOutputWithContext(ctx context.Context) LanguagePtrOutput {
	return o
}

func (o LanguagePtrOutput) Elem() LanguageOutput {
	return o.ApplyT(func(v *Language) Language {
		if v != nil {
			return *v
		}
		var ret Language
		return ret
	}).(LanguageOutput)
}

func (o LanguagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Language) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LanguageInput is an input type that accepts values of the Language enum
// A concrete instance of `LanguageInput` can be one of the following:
//
//	LanguagePython
type LanguageInput interface {
	pulumi.Input

	ToLanguageOutput() LanguageOutput
	ToLanguageOutputWithContext(context.Context) LanguageOutput
}

var languagePtrType = reflect.TypeOf((**Language)(nil)).Elem()

type LanguagePtrInput interface {
	pulumi.Input

	ToLanguagePtrOutput() LanguagePtrOutput
	ToLanguagePtrOutputWithContext(context.Context) LanguagePtrOutput
}

type languagePtr string

func LanguagePtr(v string) LanguagePtrInput {
	return (*languagePtr)(&v)
}

func (*languagePtr) ElementType() reflect.Type {
	return languagePtrType
}

func (in *languagePtr) ToLanguagePtrOutput() LanguagePtrOutput {
	return pulumi.ToOutput(in).(LanguagePtrOutput)
}

func (in *languagePtr) ToLanguagePtrOutputWithContext(ctx context.Context) LanguagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LanguagePtrOutput)
}

func (in *languagePtr) ToOutput(ctx context.Context) pulumix.Output[*Language] {
	return pulumix.Output[*Language]{
		OutputState: in.ToLanguagePtrOutputWithContext(ctx).OutputState,
	}
}

// The language extension image name.
type LanguageExtensionImageName string

const (
	LanguageExtensionImageNameR                 = LanguageExtensionImageName("R")
	LanguageExtensionImageName_Python3_6_5      = LanguageExtensionImageName("Python3_6_5")
	LanguageExtensionImageName_Python3_10_8     = LanguageExtensionImageName("Python3_10_8")
	LanguageExtensionImageName_Python3_10_8_DL  = LanguageExtensionImageName("Python3_10_8_DL")
	LanguageExtensionImageNamePythonCustomImage = LanguageExtensionImageName("PythonCustomImage")
)

func (LanguageExtensionImageName) ElementType() reflect.Type {
	return reflect.TypeOf((*LanguageExtensionImageName)(nil)).Elem()
}

func (e LanguageExtensionImageName) ToLanguageExtensionImageNameOutput() LanguageExtensionImageNameOutput {
	return pulumi.ToOutput(e).(LanguageExtensionImageNameOutput)
}

func (e LanguageExtensionImageName) ToLanguageExtensionImageNameOutputWithContext(ctx context.Context) LanguageExtensionImageNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LanguageExtensionImageNameOutput)
}

func (e LanguageExtensionImageName) ToLanguageExtensionImageNamePtrOutput() LanguageExtensionImageNamePtrOutput {
	return e.ToLanguageExtensionImageNamePtrOutputWithContext(context.Background())
}

func (e LanguageExtensionImageName) ToLanguageExtensionImageNamePtrOutputWithContext(ctx context.Context) LanguageExtensionImageNamePtrOutput {
	return LanguageExtensionImageName(e).ToLanguageExtensionImageNameOutputWithContext(ctx).ToLanguageExtensionImageNamePtrOutputWithContext(ctx)
}

func (e LanguageExtensionImageName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LanguageExtensionImageName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LanguageExtensionImageName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LanguageExtensionImageName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LanguageExtensionImageNameOutput struct{ *pulumi.OutputState }

func (LanguageExtensionImageNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LanguageExtensionImageName)(nil)).Elem()
}

func (o LanguageExtensionImageNameOutput) ToLanguageExtensionImageNameOutput() LanguageExtensionImageNameOutput {
	return o
}

func (o LanguageExtensionImageNameOutput) ToLanguageExtensionImageNameOutputWithContext(ctx context.Context) LanguageExtensionImageNameOutput {
	return o
}

func (o LanguageExtensionImageNameOutput) ToLanguageExtensionImageNamePtrOutput() LanguageExtensionImageNamePtrOutput {
	return o.ToLanguageExtensionImageNamePtrOutputWithContext(context.Background())
}

func (o LanguageExtensionImageNameOutput) ToLanguageExtensionImageNamePtrOutputWithContext(ctx context.Context) LanguageExtensionImageNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LanguageExtensionImageName) *LanguageExtensionImageName {
		return &v
	}).(LanguageExtensionImageNamePtrOutput)
}

func (o LanguageExtensionImageNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LanguageExtensionImageNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LanguageExtensionImageName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LanguageExtensionImageNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageExtensionImageNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LanguageExtensionImageName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LanguageExtensionImageNamePtrOutput struct{ *pulumi.OutputState }

func (LanguageExtensionImageNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LanguageExtensionImageName)(nil)).Elem()
}

func (o LanguageExtensionImageNamePtrOutput) ToLanguageExtensionImageNamePtrOutput() LanguageExtensionImageNamePtrOutput {
	return o
}

func (o LanguageExtensionImageNamePtrOutput) ToLanguageExtensionImageNamePtrOutputWithContext(ctx context.Context) LanguageExtensionImageNamePtrOutput {
	return o
}

func (o LanguageExtensionImageNamePtrOutput) Elem() LanguageExtensionImageNameOutput {
	return o.ApplyT(func(v *LanguageExtensionImageName) LanguageExtensionImageName {
		if v != nil {
			return *v
		}
		var ret LanguageExtensionImageName
		return ret
	}).(LanguageExtensionImageNameOutput)
}

func (o LanguageExtensionImageNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageExtensionImageNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LanguageExtensionImageName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LanguageExtensionImageNameInput is an input type that accepts values of the LanguageExtensionImageName enum
// A concrete instance of `LanguageExtensionImageNameInput` can be one of the following:
//
//	LanguageExtensionImageNameR
//	LanguageExtensionImageName_Python3_6_5
//	LanguageExtensionImageName_Python3_10_8
//	LanguageExtensionImageName_Python3_10_8_DL
//	LanguageExtensionImageNamePythonCustomImage
type LanguageExtensionImageNameInput interface {
	pulumi.Input

	ToLanguageExtensionImageNameOutput() LanguageExtensionImageNameOutput
	ToLanguageExtensionImageNameOutputWithContext(context.Context) LanguageExtensionImageNameOutput
}

var languageExtensionImageNamePtrType = reflect.TypeOf((**LanguageExtensionImageName)(nil)).Elem()

type LanguageExtensionImageNamePtrInput interface {
	pulumi.Input

	ToLanguageExtensionImageNamePtrOutput() LanguageExtensionImageNamePtrOutput
	ToLanguageExtensionImageNamePtrOutputWithContext(context.Context) LanguageExtensionImageNamePtrOutput
}

type languageExtensionImageNamePtr string

func LanguageExtensionImageNamePtr(v string) LanguageExtensionImageNamePtrInput {
	return (*languageExtensionImageNamePtr)(&v)
}

func (*languageExtensionImageNamePtr) ElementType() reflect.Type {
	return languageExtensionImageNamePtrType
}

func (in *languageExtensionImageNamePtr) ToLanguageExtensionImageNamePtrOutput() LanguageExtensionImageNamePtrOutput {
	return pulumi.ToOutput(in).(LanguageExtensionImageNamePtrOutput)
}

func (in *languageExtensionImageNamePtr) ToLanguageExtensionImageNamePtrOutputWithContext(ctx context.Context) LanguageExtensionImageNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LanguageExtensionImageNamePtrOutput)
}

func (in *languageExtensionImageNamePtr) ToOutput(ctx context.Context) pulumix.Output[*LanguageExtensionImageName] {
	return pulumix.Output[*LanguageExtensionImageName]{
		OutputState: in.ToLanguageExtensionImageNamePtrOutputWithContext(ctx).OutputState,
	}
}

// The language extension name.
type LanguageExtensionName string

const (
	LanguageExtensionNamePYTHON = LanguageExtensionName("PYTHON")
	LanguageExtensionNameR      = LanguageExtensionName("R")
)

func (LanguageExtensionName) ElementType() reflect.Type {
	return reflect.TypeOf((*LanguageExtensionName)(nil)).Elem()
}

func (e LanguageExtensionName) ToLanguageExtensionNameOutput() LanguageExtensionNameOutput {
	return pulumi.ToOutput(e).(LanguageExtensionNameOutput)
}

func (e LanguageExtensionName) ToLanguageExtensionNameOutputWithContext(ctx context.Context) LanguageExtensionNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LanguageExtensionNameOutput)
}

func (e LanguageExtensionName) ToLanguageExtensionNamePtrOutput() LanguageExtensionNamePtrOutput {
	return e.ToLanguageExtensionNamePtrOutputWithContext(context.Background())
}

func (e LanguageExtensionName) ToLanguageExtensionNamePtrOutputWithContext(ctx context.Context) LanguageExtensionNamePtrOutput {
	return LanguageExtensionName(e).ToLanguageExtensionNameOutputWithContext(ctx).ToLanguageExtensionNamePtrOutputWithContext(ctx)
}

func (e LanguageExtensionName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LanguageExtensionName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LanguageExtensionName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LanguageExtensionName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LanguageExtensionNameOutput struct{ *pulumi.OutputState }

func (LanguageExtensionNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LanguageExtensionName)(nil)).Elem()
}

func (o LanguageExtensionNameOutput) ToLanguageExtensionNameOutput() LanguageExtensionNameOutput {
	return o
}

func (o LanguageExtensionNameOutput) ToLanguageExtensionNameOutputWithContext(ctx context.Context) LanguageExtensionNameOutput {
	return o
}

func (o LanguageExtensionNameOutput) ToLanguageExtensionNamePtrOutput() LanguageExtensionNamePtrOutput {
	return o.ToLanguageExtensionNamePtrOutputWithContext(context.Background())
}

func (o LanguageExtensionNameOutput) ToLanguageExtensionNamePtrOutputWithContext(ctx context.Context) LanguageExtensionNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LanguageExtensionName) *LanguageExtensionName {
		return &v
	}).(LanguageExtensionNamePtrOutput)
}

func (o LanguageExtensionNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LanguageExtensionNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LanguageExtensionName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LanguageExtensionNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageExtensionNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LanguageExtensionName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LanguageExtensionNamePtrOutput struct{ *pulumi.OutputState }

func (LanguageExtensionNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LanguageExtensionName)(nil)).Elem()
}

func (o LanguageExtensionNamePtrOutput) ToLanguageExtensionNamePtrOutput() LanguageExtensionNamePtrOutput {
	return o
}

func (o LanguageExtensionNamePtrOutput) ToLanguageExtensionNamePtrOutputWithContext(ctx context.Context) LanguageExtensionNamePtrOutput {
	return o
}

func (o LanguageExtensionNamePtrOutput) Elem() LanguageExtensionNameOutput {
	return o.ApplyT(func(v *LanguageExtensionName) LanguageExtensionName {
		if v != nil {
			return *v
		}
		var ret LanguageExtensionName
		return ret
	}).(LanguageExtensionNameOutput)
}

func (o LanguageExtensionNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LanguageExtensionNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LanguageExtensionName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LanguageExtensionNameInput is an input type that accepts values of the LanguageExtensionName enum
// A concrete instance of `LanguageExtensionNameInput` can be one of the following:
//
//	LanguageExtensionNamePYTHON
//	LanguageExtensionNameR
type LanguageExtensionNameInput interface {
	pulumi.Input

	ToLanguageExtensionNameOutput() LanguageExtensionNameOutput
	ToLanguageExtensionNameOutputWithContext(context.Context) LanguageExtensionNameOutput
}

var languageExtensionNamePtrType = reflect.TypeOf((**LanguageExtensionName)(nil)).Elem()

type LanguageExtensionNamePtrInput interface {
	pulumi.Input

	ToLanguageExtensionNamePtrOutput() LanguageExtensionNamePtrOutput
	ToLanguageExtensionNamePtrOutputWithContext(context.Context) LanguageExtensionNamePtrOutput
}

type languageExtensionNamePtr string

func LanguageExtensionNamePtr(v string) LanguageExtensionNamePtrInput {
	return (*languageExtensionNamePtr)(&v)
}

func (*languageExtensionNamePtr) ElementType() reflect.Type {
	return languageExtensionNamePtrType
}

func (in *languageExtensionNamePtr) ToLanguageExtensionNamePtrOutput() LanguageExtensionNamePtrOutput {
	return pulumi.ToOutput(in).(LanguageExtensionNamePtrOutput)
}

func (in *languageExtensionNamePtr) ToLanguageExtensionNamePtrOutputWithContext(ctx context.Context) LanguageExtensionNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LanguageExtensionNamePtrOutput)
}

func (in *languageExtensionNamePtr) ToOutput(ctx context.Context) pulumix.Output[*LanguageExtensionName] {
	return pulumix.Output[*LanguageExtensionName]{
		OutputState: in.ToLanguageExtensionNamePtrOutputWithContext(ctx).OutputState,
	}
}

// Principal type.
type PrincipalType string

const (
	PrincipalTypeApp   = PrincipalType("App")
	PrincipalTypeGroup = PrincipalType("Group")
	PrincipalTypeUser  = PrincipalType("User")
)

func (PrincipalType) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (e PrincipalType) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return pulumi.ToOutput(e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return e.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return PrincipalType(e).ToPrincipalTypeOutputWithContext(ctx).ToPrincipalTypePtrOutputWithContext(ctx)
}

func (e PrincipalType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrincipalTypeOutput struct{ *pulumi.OutputState }

func (PrincipalTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrincipalType) *PrincipalType {
		return &v
	}).(PrincipalTypePtrOutput)
}

func (o PrincipalTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrincipalTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrincipalTypePtrOutput struct{ *pulumi.OutputState }

func (PrincipalTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalType)(nil)).Elem()
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) Elem() PrincipalTypeOutput {
	return o.ApplyT(func(v *PrincipalType) PrincipalType {
		if v != nil {
			return *v
		}
		var ret PrincipalType
		return ret
	}).(PrincipalTypeOutput)
}

func (o PrincipalTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrincipalType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrincipalTypeInput is an input type that accepts values of the PrincipalType enum
// A concrete instance of `PrincipalTypeInput` can be one of the following:
//
//	PrincipalTypeApp
//	PrincipalTypeGroup
//	PrincipalTypeUser
type PrincipalTypeInput interface {
	pulumi.Input

	ToPrincipalTypeOutput() PrincipalTypeOutput
	ToPrincipalTypeOutputWithContext(context.Context) PrincipalTypeOutput
}

var principalTypePtrType = reflect.TypeOf((**PrincipalType)(nil)).Elem()

type PrincipalTypePtrInput interface {
	pulumi.Input

	ToPrincipalTypePtrOutput() PrincipalTypePtrOutput
	ToPrincipalTypePtrOutputWithContext(context.Context) PrincipalTypePtrOutput
}

type principalTypePtr string

func PrincipalTypePtr(v string) PrincipalTypePtrInput {
	return (*principalTypePtr)(&v)
}

func (*principalTypePtr) ElementType() reflect.Type {
	return principalTypePtrType
}

func (in *principalTypePtr) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return pulumi.ToOutput(in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToOutput(ctx context.Context) pulumix.Output[*PrincipalType] {
	return pulumix.Output[*PrincipalType]{
		OutputState: in.ToPrincipalTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)
type PublicIPType string

const (
	PublicIPTypeIPv4      = PublicIPType("IPv4")
	PublicIPTypeDualStack = PublicIPType("DualStack")
)

func (PublicIPType) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPType)(nil)).Elem()
}

func (e PublicIPType) ToPublicIPTypeOutput() PublicIPTypeOutput {
	return pulumi.ToOutput(e).(PublicIPTypeOutput)
}

func (e PublicIPType) ToPublicIPTypeOutputWithContext(ctx context.Context) PublicIPTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicIPTypeOutput)
}

func (e PublicIPType) ToPublicIPTypePtrOutput() PublicIPTypePtrOutput {
	return e.ToPublicIPTypePtrOutputWithContext(context.Background())
}

func (e PublicIPType) ToPublicIPTypePtrOutputWithContext(ctx context.Context) PublicIPTypePtrOutput {
	return PublicIPType(e).ToPublicIPTypeOutputWithContext(ctx).ToPublicIPTypePtrOutputWithContext(ctx)
}

func (e PublicIPType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicIPType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicIPType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicIPType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicIPTypeOutput struct{ *pulumi.OutputState }

func (PublicIPTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPType)(nil)).Elem()
}

func (o PublicIPTypeOutput) ToPublicIPTypeOutput() PublicIPTypeOutput {
	return o
}

func (o PublicIPTypeOutput) ToPublicIPTypeOutputWithContext(ctx context.Context) PublicIPTypeOutput {
	return o
}

func (o PublicIPTypeOutput) ToPublicIPTypePtrOutput() PublicIPTypePtrOutput {
	return o.ToPublicIPTypePtrOutputWithContext(context.Background())
}

func (o PublicIPTypeOutput) ToPublicIPTypePtrOutputWithContext(ctx context.Context) PublicIPTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPType) *PublicIPType {
		return &v
	}).(PublicIPTypePtrOutput)
}

func (o PublicIPTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicIPTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicIPType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicIPTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicIPTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicIPType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicIPTypePtrOutput struct{ *pulumi.OutputState }

func (PublicIPTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPType)(nil)).Elem()
}

func (o PublicIPTypePtrOutput) ToPublicIPTypePtrOutput() PublicIPTypePtrOutput {
	return o
}

func (o PublicIPTypePtrOutput) ToPublicIPTypePtrOutputWithContext(ctx context.Context) PublicIPTypePtrOutput {
	return o
}

func (o PublicIPTypePtrOutput) Elem() PublicIPTypeOutput {
	return o.ApplyT(func(v *PublicIPType) PublicIPType {
		if v != nil {
			return *v
		}
		var ret PublicIPType
		return ret
	}).(PublicIPTypeOutput)
}

func (o PublicIPTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicIPTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicIPType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicIPTypeInput is an input type that accepts values of the PublicIPType enum
// A concrete instance of `PublicIPTypeInput` can be one of the following:
//
//	PublicIPTypeIPv4
//	PublicIPTypeDualStack
type PublicIPTypeInput interface {
	pulumi.Input

	ToPublicIPTypeOutput() PublicIPTypeOutput
	ToPublicIPTypeOutputWithContext(context.Context) PublicIPTypeOutput
}

var publicIPTypePtrType = reflect.TypeOf((**PublicIPType)(nil)).Elem()

type PublicIPTypePtrInput interface {
	pulumi.Input

	ToPublicIPTypePtrOutput() PublicIPTypePtrOutput
	ToPublicIPTypePtrOutputWithContext(context.Context) PublicIPTypePtrOutput
}

type publicIPTypePtr string

func PublicIPTypePtr(v string) PublicIPTypePtrInput {
	return (*publicIPTypePtr)(&v)
}

func (*publicIPTypePtr) ElementType() reflect.Type {
	return publicIPTypePtrType
}

func (in *publicIPTypePtr) ToPublicIPTypePtrOutput() PublicIPTypePtrOutput {
	return pulumi.ToOutput(in).(PublicIPTypePtrOutput)
}

func (in *publicIPTypePtr) ToPublicIPTypePtrOutputWithContext(ctx context.Context) PublicIPTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicIPTypePtrOutput)
}

func (in *publicIPTypePtr) ToOutput(ctx context.Context) pulumix.Output[*PublicIPType] {
	return pulumix.Output[*PublicIPType]{
		OutputState: in.ToPublicIPTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*PublicNetworkAccess] {
	return pulumix.Output[*PublicNetworkAccess]{
		OutputState: in.ToPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.
type VnetState string

const (
	VnetStateEnabled  = VnetState("Enabled")
	VnetStateDisabled = VnetState("Disabled")
)

func (VnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetState)(nil)).Elem()
}

func (e VnetState) ToVnetStateOutput() VnetStateOutput {
	return pulumi.ToOutput(e).(VnetStateOutput)
}

func (e VnetState) ToVnetStateOutputWithContext(ctx context.Context) VnetStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VnetStateOutput)
}

func (e VnetState) ToVnetStatePtrOutput() VnetStatePtrOutput {
	return e.ToVnetStatePtrOutputWithContext(context.Background())
}

func (e VnetState) ToVnetStatePtrOutputWithContext(ctx context.Context) VnetStatePtrOutput {
	return VnetState(e).ToVnetStateOutputWithContext(ctx).ToVnetStatePtrOutputWithContext(ctx)
}

func (e VnetState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VnetState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VnetState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VnetState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VnetStateOutput struct{ *pulumi.OutputState }

func (VnetStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetState)(nil)).Elem()
}

func (o VnetStateOutput) ToVnetStateOutput() VnetStateOutput {
	return o
}

func (o VnetStateOutput) ToVnetStateOutputWithContext(ctx context.Context) VnetStateOutput {
	return o
}

func (o VnetStateOutput) ToVnetStatePtrOutput() VnetStatePtrOutput {
	return o.ToVnetStatePtrOutputWithContext(context.Background())
}

func (o VnetStateOutput) ToVnetStatePtrOutputWithContext(ctx context.Context) VnetStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VnetState) *VnetState {
		return &v
	}).(VnetStatePtrOutput)
}

func (o VnetStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VnetStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VnetState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VnetStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VnetStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VnetState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VnetStatePtrOutput struct{ *pulumi.OutputState }

func (VnetStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetState)(nil)).Elem()
}

func (o VnetStatePtrOutput) ToVnetStatePtrOutput() VnetStatePtrOutput {
	return o
}

func (o VnetStatePtrOutput) ToVnetStatePtrOutputWithContext(ctx context.Context) VnetStatePtrOutput {
	return o
}

func (o VnetStatePtrOutput) Elem() VnetStateOutput {
	return o.ApplyT(func(v *VnetState) VnetState {
		if v != nil {
			return *v
		}
		var ret VnetState
		return ret
	}).(VnetStateOutput)
}

func (o VnetStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VnetStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VnetState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VnetStateInput is an input type that accepts values of the VnetState enum
// A concrete instance of `VnetStateInput` can be one of the following:
//
//	VnetStateEnabled
//	VnetStateDisabled
type VnetStateInput interface {
	pulumi.Input

	ToVnetStateOutput() VnetStateOutput
	ToVnetStateOutputWithContext(context.Context) VnetStateOutput
}

var vnetStatePtrType = reflect.TypeOf((**VnetState)(nil)).Elem()

type VnetStatePtrInput interface {
	pulumi.Input

	ToVnetStatePtrOutput() VnetStatePtrOutput
	ToVnetStatePtrOutputWithContext(context.Context) VnetStatePtrOutput
}

type vnetStatePtr string

func VnetStatePtr(v string) VnetStatePtrInput {
	return (*vnetStatePtr)(&v)
}

func (*vnetStatePtr) ElementType() reflect.Type {
	return vnetStatePtrType
}

func (in *vnetStatePtr) ToVnetStatePtrOutput() VnetStatePtrOutput {
	return pulumi.ToOutput(in).(VnetStatePtrOutput)
}

func (in *vnetStatePtr) ToVnetStatePtrOutputWithContext(ctx context.Context) VnetStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VnetStatePtrOutput)
}

func (in *vnetStatePtr) ToOutput(ctx context.Context) pulumix.Output[*VnetState] {
	return pulumix.Output[*VnetState]{
		OutputState: in.ToVnetStatePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AzureSkuNameOutput{})
	pulumi.RegisterOutputType(AzureSkuNamePtrOutput{})
	pulumi.RegisterOutputType(AzureSkuTierOutput{})
	pulumi.RegisterOutputType(AzureSkuTierPtrOutput{})
	pulumi.RegisterOutputType(BlobStorageEventTypeOutput{})
	pulumi.RegisterOutputType(BlobStorageEventTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkAccessFlagOutput{})
	pulumi.RegisterOutputType(ClusterNetworkAccessFlagPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalRoleOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalRolePtrOutput{})
	pulumi.RegisterOutputType(CompressionOutput{})
	pulumi.RegisterOutputType(CompressionPtrOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalRoleOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalRolePtrOutput{})
	pulumi.RegisterOutputType(DatabaseRoutingOutput{})
	pulumi.RegisterOutputType(DatabaseRoutingPtrOutput{})
	pulumi.RegisterOutputType(DefaultPrincipalsModificationKindOutput{})
	pulumi.RegisterOutputType(DefaultPrincipalsModificationKindPtrOutput{})
	pulumi.RegisterOutputType(EngineTypeOutput{})
	pulumi.RegisterOutputType(EngineTypePtrOutput{})
	pulumi.RegisterOutputType(EventGridDataFormatOutput{})
	pulumi.RegisterOutputType(EventGridDataFormatPtrOutput{})
	pulumi.RegisterOutputType(EventHubDataFormatOutput{})
	pulumi.RegisterOutputType(EventHubDataFormatPtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(IotHubDataFormatOutput{})
	pulumi.RegisterOutputType(IotHubDataFormatPtrOutput{})
	pulumi.RegisterOutputType(LanguageOutput{})
	pulumi.RegisterOutputType(LanguagePtrOutput{})
	pulumi.RegisterOutputType(LanguageExtensionImageNameOutput{})
	pulumi.RegisterOutputType(LanguageExtensionImageNamePtrOutput{})
	pulumi.RegisterOutputType(LanguageExtensionNameOutput{})
	pulumi.RegisterOutputType(LanguageExtensionNamePtrOutput{})
	pulumi.RegisterOutputType(PrincipalTypeOutput{})
	pulumi.RegisterOutputType(PrincipalTypePtrOutput{})
	pulumi.RegisterOutputType(PublicIPTypeOutput{})
	pulumi.RegisterOutputType(PublicIPTypePtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(VnetStateOutput{})
	pulumi.RegisterOutputType(VnetStatePtrOutput{})
}
