// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kusto

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns a sandbox custom image
// Azure REST API version: 2023-08-15.
func LookupSandboxCustomImage(ctx *pulumi.Context, args *LookupSandboxCustomImageArgs, opts ...pulumi.InvokeOption) (*LookupSandboxCustomImageResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSandboxCustomImageResult
	err := ctx.Invoke("azure-native:kusto:getSandboxCustomImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSandboxCustomImageArgs struct {
	// The name of the Kusto cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the sandbox custom image.
	SandboxCustomImageName string `pulumi:"sandboxCustomImageName"`
}

// Class representing a Kusto sandbox custom image.
type LookupSandboxCustomImageResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The language name, for example Python.
	Language string `pulumi:"language"`
	// The version of the language.
	LanguageVersion string `pulumi:"languageVersion"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioned state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The requirements file content.
	RequirementsFileContent *string `pulumi:"requirementsFileContent"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSandboxCustomImageOutput(ctx *pulumi.Context, args LookupSandboxCustomImageOutputArgs, opts ...pulumi.InvokeOption) LookupSandboxCustomImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSandboxCustomImageResult, error) {
			args := v.(LookupSandboxCustomImageArgs)
			r, err := LookupSandboxCustomImage(ctx, &args, opts...)
			var s LookupSandboxCustomImageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSandboxCustomImageResultOutput)
}

type LookupSandboxCustomImageOutputArgs struct {
	// The name of the Kusto cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the sandbox custom image.
	SandboxCustomImageName pulumi.StringInput `pulumi:"sandboxCustomImageName"`
}

func (LookupSandboxCustomImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSandboxCustomImageArgs)(nil)).Elem()
}

// Class representing a Kusto sandbox custom image.
type LookupSandboxCustomImageResultOutput struct{ *pulumi.OutputState }

func (LookupSandboxCustomImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSandboxCustomImageResult)(nil)).Elem()
}

func (o LookupSandboxCustomImageResultOutput) ToLookupSandboxCustomImageResultOutput() LookupSandboxCustomImageResultOutput {
	return o
}

func (o LookupSandboxCustomImageResultOutput) ToLookupSandboxCustomImageResultOutputWithContext(ctx context.Context) LookupSandboxCustomImageResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSandboxCustomImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) string { return v.Id }).(pulumi.StringOutput)
}

// The language name, for example Python.
func (o LookupSandboxCustomImageResultOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) string { return v.Language }).(pulumi.StringOutput)
}

// The version of the language.
func (o LookupSandboxCustomImageResultOutput) LanguageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) string { return v.LanguageVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSandboxCustomImageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioned state of the resource.
func (o LookupSandboxCustomImageResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The requirements file content.
func (o LookupSandboxCustomImageResultOutput) RequirementsFileContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) *string { return v.RequirementsFileContent }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSandboxCustomImageResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSandboxCustomImageResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSandboxCustomImageResultOutput{})
}
