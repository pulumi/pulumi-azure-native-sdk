// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200215

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns a data connection.
func GetIotHubDataConnection(ctx *pulumi.Context, args *GetIotHubDataConnectionArgs, opts ...pulumi.InvokeOption) (*GetIotHubDataConnectionResult, error) {
	var rv GetIotHubDataConnectionResult
	err := ctx.Invoke("azure-native:kusto/v20200215:getIotHubDataConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetIotHubDataConnectionArgs struct {
	// The name of the Kusto cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the data connection.
	DataConnectionName string `pulumi:"dataConnectionName"`
	// The name of the database in the Kusto cluster.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group containing the Kusto cluster.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Class representing an iot hub data connection.
type GetIotHubDataConnectionResult struct {
	// The iot hub consumer group.
	ConsumerGroup string `pulumi:"consumerGroup"`
	// The data format of the message. Optionally the data format can be added to each message.
	DataFormat *string `pulumi:"dataFormat"`
	// System properties of the iot hub
	EventSystemProperties []string `pulumi:"eventSystemProperties"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The resource ID of the Iot hub to be used to create a data connection.
	IotHubResourceId string `pulumi:"iotHubResourceId"`
	// Kind of the endpoint for the data connection
	// Expected value is 'IotHub'.
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
	MappingRuleName *string `pulumi:"mappingRuleName"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The name of the share access policy
	SharedAccessPolicyName string `pulumi:"sharedAccessPolicyName"`
	// The table where the data should be ingested. Optionally the table information can be added to each message.
	TableName *string `pulumi:"tableName"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetIotHubDataConnectionOutput(ctx *pulumi.Context, args GetIotHubDataConnectionOutputArgs, opts ...pulumi.InvokeOption) GetIotHubDataConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIotHubDataConnectionResult, error) {
			args := v.(GetIotHubDataConnectionArgs)
			r, err := GetIotHubDataConnection(ctx, &args, opts...)
			var s GetIotHubDataConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIotHubDataConnectionResultOutput)
}

type GetIotHubDataConnectionOutputArgs struct {
	// The name of the Kusto cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the data connection.
	DataConnectionName pulumi.StringInput `pulumi:"dataConnectionName"`
	// The name of the database in the Kusto cluster.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group containing the Kusto cluster.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetIotHubDataConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubDataConnectionArgs)(nil)).Elem()
}

// Class representing an iot hub data connection.
type GetIotHubDataConnectionResultOutput struct{ *pulumi.OutputState }

func (GetIotHubDataConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubDataConnectionResult)(nil)).Elem()
}

func (o GetIotHubDataConnectionResultOutput) ToGetIotHubDataConnectionResultOutput() GetIotHubDataConnectionResultOutput {
	return o
}

func (o GetIotHubDataConnectionResultOutput) ToGetIotHubDataConnectionResultOutputWithContext(ctx context.Context) GetIotHubDataConnectionResultOutput {
	return o
}

// The iot hub consumer group.
func (o GetIotHubDataConnectionResultOutput) ConsumerGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.ConsumerGroup }).(pulumi.StringOutput)
}

// The data format of the message. Optionally the data format can be added to each message.
func (o GetIotHubDataConnectionResultOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) *string { return v.DataFormat }).(pulumi.StringPtrOutput)
}

// System properties of the iot hub
func (o GetIotHubDataConnectionResultOutput) EventSystemProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) []string { return v.EventSystemProperties }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GetIotHubDataConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource ID of the Iot hub to be used to create a data connection.
func (o GetIotHubDataConnectionResultOutput) IotHubResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.IotHubResourceId }).(pulumi.StringOutput)
}

// Kind of the endpoint for the data connection
// Expected value is 'IotHub'.
func (o GetIotHubDataConnectionResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o GetIotHubDataConnectionResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
func (o GetIotHubDataConnectionResultOutput) MappingRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) *string { return v.MappingRuleName }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o GetIotHubDataConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the share access policy
func (o GetIotHubDataConnectionResultOutput) SharedAccessPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.SharedAccessPolicyName }).(pulumi.StringOutput)
}

// The table where the data should be ingested. Optionally the table information can be added to each message.
func (o GetIotHubDataConnectionResultOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetIotHubDataConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubDataConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIotHubDataConnectionResultOutput{})
}
