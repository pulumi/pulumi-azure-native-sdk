// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221229

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns a data connection.
func LookupCosmosDbDataConnection(ctx *pulumi.Context, args *LookupCosmosDbDataConnectionArgs, opts ...pulumi.InvokeOption) (*LookupCosmosDbDataConnectionResult, error) {
	var rv LookupCosmosDbDataConnectionResult
	err := ctx.Invoke("azure-native:kusto/v20221229:getCosmosDbDataConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCosmosDbDataConnectionArgs struct {
	// The name of the Kusto cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the data connection.
	DataConnectionName string `pulumi:"dataConnectionName"`
	// The name of the database in the Kusto cluster.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group containing the Kusto cluster.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Class representing a CosmosDb data connection.
type LookupCosmosDbDataConnectionResult struct {
	// The resource ID of the Cosmos DB account used to create the data connection.
	CosmosDbAccountResourceId string `pulumi:"cosmosDbAccountResourceId"`
	// The name of an existing container in the Cosmos DB database.
	CosmosDbContainer string `pulumi:"cosmosDbContainer"`
	// The name of an existing database in the Cosmos DB account.
	CosmosDbDatabase string `pulumi:"cosmosDbDatabase"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Kind of the endpoint for the data connection
	// Expected value is 'CosmosDb'.
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The object ID of the managed identity resource.
	ManagedIdentityObjectId string `pulumi:"managedIdentityObjectId"`
	// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
	ManagedIdentityResourceId string `pulumi:"managedIdentityResourceId"`
	// The name of an existing mapping rule to use when ingesting the retrieved data.
	MappingRuleName *string `pulumi:"mappingRuleName"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioned state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
	RetrievalStartDate *string `pulumi:"retrievalStartDate"`
	// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
	TableName string `pulumi:"tableName"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupCosmosDbDataConnectionOutput(ctx *pulumi.Context, args LookupCosmosDbDataConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupCosmosDbDataConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCosmosDbDataConnectionResult, error) {
			args := v.(LookupCosmosDbDataConnectionArgs)
			r, err := LookupCosmosDbDataConnection(ctx, &args, opts...)
			var s LookupCosmosDbDataConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCosmosDbDataConnectionResultOutput)
}

type LookupCosmosDbDataConnectionOutputArgs struct {
	// The name of the Kusto cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the data connection.
	DataConnectionName pulumi.StringInput `pulumi:"dataConnectionName"`
	// The name of the database in the Kusto cluster.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group containing the Kusto cluster.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCosmosDbDataConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCosmosDbDataConnectionArgs)(nil)).Elem()
}

// Class representing a CosmosDb data connection.
type LookupCosmosDbDataConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupCosmosDbDataConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCosmosDbDataConnectionResult)(nil)).Elem()
}

func (o LookupCosmosDbDataConnectionResultOutput) ToLookupCosmosDbDataConnectionResultOutput() LookupCosmosDbDataConnectionResultOutput {
	return o
}

func (o LookupCosmosDbDataConnectionResultOutput) ToLookupCosmosDbDataConnectionResultOutputWithContext(ctx context.Context) LookupCosmosDbDataConnectionResultOutput {
	return o
}

// The resource ID of the Cosmos DB account used to create the data connection.
func (o LookupCosmosDbDataConnectionResultOutput) CosmosDbAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.CosmosDbAccountResourceId }).(pulumi.StringOutput)
}

// The name of an existing container in the Cosmos DB database.
func (o LookupCosmosDbDataConnectionResultOutput) CosmosDbContainer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.CosmosDbContainer }).(pulumi.StringOutput)
}

// The name of an existing database in the Cosmos DB account.
func (o LookupCosmosDbDataConnectionResultOutput) CosmosDbDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.CosmosDbDatabase }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupCosmosDbDataConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of the endpoint for the data connection
// Expected value is 'CosmosDb'.
func (o LookupCosmosDbDataConnectionResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o LookupCosmosDbDataConnectionResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The object ID of the managed identity resource.
func (o LookupCosmosDbDataConnectionResultOutput) ManagedIdentityObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.ManagedIdentityObjectId }).(pulumi.StringOutput)
}

// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB.
func (o LookupCosmosDbDataConnectionResultOutput) ManagedIdentityResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.ManagedIdentityResourceId }).(pulumi.StringOutput)
}

// The name of an existing mapping rule to use when ingesting the retrieved data.
func (o LookupCosmosDbDataConnectionResultOutput) MappingRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) *string { return v.MappingRuleName }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupCosmosDbDataConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioned state of the resource.
func (o LookupCosmosDbDataConnectionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.
func (o LookupCosmosDbDataConnectionResultOutput) RetrievalStartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) *string { return v.RetrievalStartDate }).(pulumi.StringPtrOutput)
}

// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table.
func (o LookupCosmosDbDataConnectionResultOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.TableName }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCosmosDbDataConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCosmosDbDataConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCosmosDbDataConnectionResultOutput{})
}
