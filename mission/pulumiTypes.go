// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// ApprovalSettings Properties
type ApprovalSettings struct {
	// Approval required for enclave connection creation (Required or NotRequired).
	ConnectionCreation *string `pulumi:"connectionCreation"`
	// Approval required for enclave connection deletion (Required or NotRequired).
	ConnectionDeletion *string `pulumi:"connectionDeletion"`
	// Approval required for enclave connection update (Required or NotRequired).
	ConnectionUpdate *string `pulumi:"connectionUpdate"`
	// Approval required for virtual enclave creation (Required or NotRequired).
	EnclaveCreation *string `pulumi:"enclaveCreation"`
	// Approval required for virtual enclave deletion (Required or NotRequired).
	EnclaveDeletion *string `pulumi:"enclaveDeletion"`
	// Approval required for endpoint creation (Required or NotRequired).
	EndpointCreation *string `pulumi:"endpointCreation"`
	// Approval required for endpoint deletion (Required or NotRequired).
	EndpointDeletion *string `pulumi:"endpointDeletion"`
	// Approval required for endpoint update (Required or NotRequired).
	EndpointUpdate *string `pulumi:"endpointUpdate"`
	// Approval required for toggling maintenance mode (Required or NotRequired).
	MaintenanceMode *string `pulumi:"maintenanceMode"`
	// List of mandatory approvers for the approval request
	MandatoryApprovers []MandatoryApprover `pulumi:"mandatoryApprovers"`
	// Minimum number of approvers required for the approval request
	MinimumApproversRequired *float64 `pulumi:"minimumApproversRequired"`
	// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
	NotificationOnApprovalAction *string `pulumi:"notificationOnApprovalAction"`
	// Notification will be sent on creation of an Approval Request
	NotificationOnApprovalCreation *string `pulumi:"notificationOnApprovalCreation"`
	// Notification will be sent on deletion of an Approval Request
	NotificationOnApprovalDeletion *string `pulumi:"notificationOnApprovalDeletion"`
	// Approval required for deploying service catalog templates (Required or NotRequired).
	ServiceCatalogDeployment *string `pulumi:"serviceCatalogDeployment"`
}

// ApprovalSettingsInput is an input type that accepts ApprovalSettingsArgs and ApprovalSettingsOutput values.
// You can construct a concrete instance of `ApprovalSettingsInput` via:
//
//	ApprovalSettingsArgs{...}
type ApprovalSettingsInput interface {
	pulumi.Input

	ToApprovalSettingsOutput() ApprovalSettingsOutput
	ToApprovalSettingsOutputWithContext(context.Context) ApprovalSettingsOutput
}

// ApprovalSettings Properties
type ApprovalSettingsArgs struct {
	// Approval required for enclave connection creation (Required or NotRequired).
	ConnectionCreation pulumi.StringPtrInput `pulumi:"connectionCreation"`
	// Approval required for enclave connection deletion (Required or NotRequired).
	ConnectionDeletion pulumi.StringPtrInput `pulumi:"connectionDeletion"`
	// Approval required for enclave connection update (Required or NotRequired).
	ConnectionUpdate pulumi.StringPtrInput `pulumi:"connectionUpdate"`
	// Approval required for virtual enclave creation (Required or NotRequired).
	EnclaveCreation pulumi.StringPtrInput `pulumi:"enclaveCreation"`
	// Approval required for virtual enclave deletion (Required or NotRequired).
	EnclaveDeletion pulumi.StringPtrInput `pulumi:"enclaveDeletion"`
	// Approval required for endpoint creation (Required or NotRequired).
	EndpointCreation pulumi.StringPtrInput `pulumi:"endpointCreation"`
	// Approval required for endpoint deletion (Required or NotRequired).
	EndpointDeletion pulumi.StringPtrInput `pulumi:"endpointDeletion"`
	// Approval required for endpoint update (Required or NotRequired).
	EndpointUpdate pulumi.StringPtrInput `pulumi:"endpointUpdate"`
	// Approval required for toggling maintenance mode (Required or NotRequired).
	MaintenanceMode pulumi.StringPtrInput `pulumi:"maintenanceMode"`
	// List of mandatory approvers for the approval request
	MandatoryApprovers MandatoryApproverArrayInput `pulumi:"mandatoryApprovers"`
	// Minimum number of approvers required for the approval request
	MinimumApproversRequired pulumi.Float64PtrInput `pulumi:"minimumApproversRequired"`
	// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
	NotificationOnApprovalAction pulumi.StringPtrInput `pulumi:"notificationOnApprovalAction"`
	// Notification will be sent on creation of an Approval Request
	NotificationOnApprovalCreation pulumi.StringPtrInput `pulumi:"notificationOnApprovalCreation"`
	// Notification will be sent on deletion of an Approval Request
	NotificationOnApprovalDeletion pulumi.StringPtrInput `pulumi:"notificationOnApprovalDeletion"`
	// Approval required for deploying service catalog templates (Required or NotRequired).
	ServiceCatalogDeployment pulumi.StringPtrInput `pulumi:"serviceCatalogDeployment"`
}

func (ApprovalSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalSettings)(nil)).Elem()
}

func (i ApprovalSettingsArgs) ToApprovalSettingsOutput() ApprovalSettingsOutput {
	return i.ToApprovalSettingsOutputWithContext(context.Background())
}

func (i ApprovalSettingsArgs) ToApprovalSettingsOutputWithContext(ctx context.Context) ApprovalSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalSettingsOutput)
}

func (i ApprovalSettingsArgs) ToApprovalSettingsPtrOutput() ApprovalSettingsPtrOutput {
	return i.ToApprovalSettingsPtrOutputWithContext(context.Background())
}

func (i ApprovalSettingsArgs) ToApprovalSettingsPtrOutputWithContext(ctx context.Context) ApprovalSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalSettingsOutput).ToApprovalSettingsPtrOutputWithContext(ctx)
}

// ApprovalSettingsPtrInput is an input type that accepts ApprovalSettingsArgs, ApprovalSettingsPtr and ApprovalSettingsPtrOutput values.
// You can construct a concrete instance of `ApprovalSettingsPtrInput` via:
//
//	        ApprovalSettingsArgs{...}
//
//	or:
//
//	        nil
type ApprovalSettingsPtrInput interface {
	pulumi.Input

	ToApprovalSettingsPtrOutput() ApprovalSettingsPtrOutput
	ToApprovalSettingsPtrOutputWithContext(context.Context) ApprovalSettingsPtrOutput
}

type approvalSettingsPtrType ApprovalSettingsArgs

func ApprovalSettingsPtr(v *ApprovalSettingsArgs) ApprovalSettingsPtrInput {
	return (*approvalSettingsPtrType)(v)
}

func (*approvalSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalSettings)(nil)).Elem()
}

func (i *approvalSettingsPtrType) ToApprovalSettingsPtrOutput() ApprovalSettingsPtrOutput {
	return i.ToApprovalSettingsPtrOutputWithContext(context.Background())
}

func (i *approvalSettingsPtrType) ToApprovalSettingsPtrOutputWithContext(ctx context.Context) ApprovalSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalSettingsPtrOutput)
}

// ApprovalSettings Properties
type ApprovalSettingsOutput struct{ *pulumi.OutputState }

func (ApprovalSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalSettings)(nil)).Elem()
}

func (o ApprovalSettingsOutput) ToApprovalSettingsOutput() ApprovalSettingsOutput {
	return o
}

func (o ApprovalSettingsOutput) ToApprovalSettingsOutputWithContext(ctx context.Context) ApprovalSettingsOutput {
	return o
}

func (o ApprovalSettingsOutput) ToApprovalSettingsPtrOutput() ApprovalSettingsPtrOutput {
	return o.ToApprovalSettingsPtrOutputWithContext(context.Background())
}

func (o ApprovalSettingsOutput) ToApprovalSettingsPtrOutputWithContext(ctx context.Context) ApprovalSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApprovalSettings) *ApprovalSettings {
		return &v
	}).(ApprovalSettingsPtrOutput)
}

// Approval required for enclave connection creation (Required or NotRequired).
func (o ApprovalSettingsOutput) ConnectionCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.ConnectionCreation }).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection deletion (Required or NotRequired).
func (o ApprovalSettingsOutput) ConnectionDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.ConnectionDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection update (Required or NotRequired).
func (o ApprovalSettingsOutput) ConnectionUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.ConnectionUpdate }).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave creation (Required or NotRequired).
func (o ApprovalSettingsOutput) EnclaveCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.EnclaveCreation }).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave deletion (Required or NotRequired).
func (o ApprovalSettingsOutput) EnclaveDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.EnclaveDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for endpoint creation (Required or NotRequired).
func (o ApprovalSettingsOutput) EndpointCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.EndpointCreation }).(pulumi.StringPtrOutput)
}

// Approval required for endpoint deletion (Required or NotRequired).
func (o ApprovalSettingsOutput) EndpointDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.EndpointDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for endpoint update (Required or NotRequired).
func (o ApprovalSettingsOutput) EndpointUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.EndpointUpdate }).(pulumi.StringPtrOutput)
}

// Approval required for toggling maintenance mode (Required or NotRequired).
func (o ApprovalSettingsOutput) MaintenanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.MaintenanceMode }).(pulumi.StringPtrOutput)
}

// List of mandatory approvers for the approval request
func (o ApprovalSettingsOutput) MandatoryApprovers() MandatoryApproverArrayOutput {
	return o.ApplyT(func(v ApprovalSettings) []MandatoryApprover { return v.MandatoryApprovers }).(MandatoryApproverArrayOutput)
}

// Minimum number of approvers required for the approval request
func (o ApprovalSettingsOutput) MinimumApproversRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *float64 { return v.MinimumApproversRequired }).(pulumi.Float64PtrOutput)
}

// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
func (o ApprovalSettingsOutput) NotificationOnApprovalAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.NotificationOnApprovalAction }).(pulumi.StringPtrOutput)
}

// Notification will be sent on creation of an Approval Request
func (o ApprovalSettingsOutput) NotificationOnApprovalCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.NotificationOnApprovalCreation }).(pulumi.StringPtrOutput)
}

// Notification will be sent on deletion of an Approval Request
func (o ApprovalSettingsOutput) NotificationOnApprovalDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.NotificationOnApprovalDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for deploying service catalog templates (Required or NotRequired).
func (o ApprovalSettingsOutput) ServiceCatalogDeployment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettings) *string { return v.ServiceCatalogDeployment }).(pulumi.StringPtrOutput)
}

type ApprovalSettingsPtrOutput struct{ *pulumi.OutputState }

func (ApprovalSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalSettings)(nil)).Elem()
}

func (o ApprovalSettingsPtrOutput) ToApprovalSettingsPtrOutput() ApprovalSettingsPtrOutput {
	return o
}

func (o ApprovalSettingsPtrOutput) ToApprovalSettingsPtrOutputWithContext(ctx context.Context) ApprovalSettingsPtrOutput {
	return o
}

func (o ApprovalSettingsPtrOutput) Elem() ApprovalSettingsOutput {
	return o.ApplyT(func(v *ApprovalSettings) ApprovalSettings {
		if v != nil {
			return *v
		}
		var ret ApprovalSettings
		return ret
	}).(ApprovalSettingsOutput)
}

// Approval required for enclave connection creation (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) ConnectionCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionCreation
	}).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection deletion (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) ConnectionDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection update (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) ConnectionUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionUpdate
	}).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave creation (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) EnclaveCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.EnclaveCreation
	}).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave deletion (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) EnclaveDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.EnclaveDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for endpoint creation (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) EndpointCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.EndpointCreation
	}).(pulumi.StringPtrOutput)
}

// Approval required for endpoint deletion (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) EndpointDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.EndpointDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for endpoint update (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) EndpointUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.EndpointUpdate
	}).(pulumi.StringPtrOutput)
}

// Approval required for toggling maintenance mode (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) MaintenanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.MaintenanceMode
	}).(pulumi.StringPtrOutput)
}

// List of mandatory approvers for the approval request
func (o ApprovalSettingsPtrOutput) MandatoryApprovers() MandatoryApproverArrayOutput {
	return o.ApplyT(func(v *ApprovalSettings) []MandatoryApprover {
		if v == nil {
			return nil
		}
		return v.MandatoryApprovers
	}).(MandatoryApproverArrayOutput)
}

// Minimum number of approvers required for the approval request
func (o ApprovalSettingsPtrOutput) MinimumApproversRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumApproversRequired
	}).(pulumi.Float64PtrOutput)
}

// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
func (o ApprovalSettingsPtrOutput) NotificationOnApprovalAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.NotificationOnApprovalAction
	}).(pulumi.StringPtrOutput)
}

// Notification will be sent on creation of an Approval Request
func (o ApprovalSettingsPtrOutput) NotificationOnApprovalCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.NotificationOnApprovalCreation
	}).(pulumi.StringPtrOutput)
}

// Notification will be sent on deletion of an Approval Request
func (o ApprovalSettingsPtrOutput) NotificationOnApprovalDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.NotificationOnApprovalDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for deploying service catalog templates (Required or NotRequired).
func (o ApprovalSettingsPtrOutput) ServiceCatalogDeployment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCatalogDeployment
	}).(pulumi.StringPtrOutput)
}

// ApprovalSettings Properties
type ApprovalSettingsResponse struct {
	// Approval required for enclave connection creation (Required or NotRequired).
	ConnectionCreation *string `pulumi:"connectionCreation"`
	// Approval required for enclave connection deletion (Required or NotRequired).
	ConnectionDeletion *string `pulumi:"connectionDeletion"`
	// Approval required for enclave connection update (Required or NotRequired).
	ConnectionUpdate *string `pulumi:"connectionUpdate"`
	// Approval required for virtual enclave creation (Required or NotRequired).
	EnclaveCreation *string `pulumi:"enclaveCreation"`
	// Approval required for virtual enclave deletion (Required or NotRequired).
	EnclaveDeletion *string `pulumi:"enclaveDeletion"`
	// Approval required for endpoint creation (Required or NotRequired).
	EndpointCreation *string `pulumi:"endpointCreation"`
	// Approval required for endpoint deletion (Required or NotRequired).
	EndpointDeletion *string `pulumi:"endpointDeletion"`
	// Approval required for endpoint update (Required or NotRequired).
	EndpointUpdate *string `pulumi:"endpointUpdate"`
	// Approval required for toggling maintenance mode (Required or NotRequired).
	MaintenanceMode *string `pulumi:"maintenanceMode"`
	// List of mandatory approvers for the approval request
	MandatoryApprovers []MandatoryApproverResponse `pulumi:"mandatoryApprovers"`
	// Minimum number of approvers required for the approval request
	MinimumApproversRequired *float64 `pulumi:"minimumApproversRequired"`
	// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
	NotificationOnApprovalAction *string `pulumi:"notificationOnApprovalAction"`
	// Notification will be sent on creation of an Approval Request
	NotificationOnApprovalCreation *string `pulumi:"notificationOnApprovalCreation"`
	// Notification will be sent on deletion of an Approval Request
	NotificationOnApprovalDeletion *string `pulumi:"notificationOnApprovalDeletion"`
	// Approval required for deploying service catalog templates (Required or NotRequired).
	ServiceCatalogDeployment *string `pulumi:"serviceCatalogDeployment"`
}

// ApprovalSettings Properties
type ApprovalSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApprovalSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalSettingsResponse)(nil)).Elem()
}

func (o ApprovalSettingsResponseOutput) ToApprovalSettingsResponseOutput() ApprovalSettingsResponseOutput {
	return o
}

func (o ApprovalSettingsResponseOutput) ToApprovalSettingsResponseOutputWithContext(ctx context.Context) ApprovalSettingsResponseOutput {
	return o
}

// Approval required for enclave connection creation (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) ConnectionCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.ConnectionCreation }).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection deletion (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) ConnectionDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.ConnectionDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection update (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) ConnectionUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.ConnectionUpdate }).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave creation (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) EnclaveCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.EnclaveCreation }).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave deletion (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) EnclaveDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.EnclaveDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for endpoint creation (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) EndpointCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.EndpointCreation }).(pulumi.StringPtrOutput)
}

// Approval required for endpoint deletion (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) EndpointDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.EndpointDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for endpoint update (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) EndpointUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.EndpointUpdate }).(pulumi.StringPtrOutput)
}

// Approval required for toggling maintenance mode (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) MaintenanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.MaintenanceMode }).(pulumi.StringPtrOutput)
}

// List of mandatory approvers for the approval request
func (o ApprovalSettingsResponseOutput) MandatoryApprovers() MandatoryApproverResponseArrayOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) []MandatoryApproverResponse { return v.MandatoryApprovers }).(MandatoryApproverResponseArrayOutput)
}

// Minimum number of approvers required for the approval request
func (o ApprovalSettingsResponseOutput) MinimumApproversRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *float64 { return v.MinimumApproversRequired }).(pulumi.Float64PtrOutput)
}

// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
func (o ApprovalSettingsResponseOutput) NotificationOnApprovalAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.NotificationOnApprovalAction }).(pulumi.StringPtrOutput)
}

// Notification will be sent on creation of an Approval Request
func (o ApprovalSettingsResponseOutput) NotificationOnApprovalCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.NotificationOnApprovalCreation }).(pulumi.StringPtrOutput)
}

// Notification will be sent on deletion of an Approval Request
func (o ApprovalSettingsResponseOutput) NotificationOnApprovalDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.NotificationOnApprovalDeletion }).(pulumi.StringPtrOutput)
}

// Approval required for deploying service catalog templates (Required or NotRequired).
func (o ApprovalSettingsResponseOutput) ServiceCatalogDeployment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.ServiceCatalogDeployment }).(pulumi.StringPtrOutput)
}

type ApprovalSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApprovalSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalSettingsResponse)(nil)).Elem()
}

func (o ApprovalSettingsResponsePtrOutput) ToApprovalSettingsResponsePtrOutput() ApprovalSettingsResponsePtrOutput {
	return o
}

func (o ApprovalSettingsResponsePtrOutput) ToApprovalSettingsResponsePtrOutputWithContext(ctx context.Context) ApprovalSettingsResponsePtrOutput {
	return o
}

func (o ApprovalSettingsResponsePtrOutput) Elem() ApprovalSettingsResponseOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) ApprovalSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ApprovalSettingsResponse
		return ret
	}).(ApprovalSettingsResponseOutput)
}

// Approval required for enclave connection creation (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) ConnectionCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionCreation
	}).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection deletion (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) ConnectionDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for enclave connection update (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) ConnectionUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionUpdate
	}).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave creation (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) EnclaveCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnclaveCreation
	}).(pulumi.StringPtrOutput)
}

// Approval required for virtual enclave deletion (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) EnclaveDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnclaveDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for endpoint creation (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) EndpointCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointCreation
	}).(pulumi.StringPtrOutput)
}

// Approval required for endpoint deletion (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) EndpointDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for endpoint update (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) EndpointUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointUpdate
	}).(pulumi.StringPtrOutput)
}

// Approval required for toggling maintenance mode (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) MaintenanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaintenanceMode
	}).(pulumi.StringPtrOutput)
}

// List of mandatory approvers for the approval request
func (o ApprovalSettingsResponsePtrOutput) MandatoryApprovers() MandatoryApproverResponseArrayOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) []MandatoryApproverResponse {
		if v == nil {
			return nil
		}
		return v.MandatoryApprovers
	}).(MandatoryApproverResponseArrayOutput)
}

// Minimum number of approvers required for the approval request
func (o ApprovalSettingsResponsePtrOutput) MinimumApproversRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumApproversRequired
	}).(pulumi.Float64PtrOutput)
}

// Notification will be sent on any action taken (Approve/Reject) on an Approval Request
func (o ApprovalSettingsResponsePtrOutput) NotificationOnApprovalAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationOnApprovalAction
	}).(pulumi.StringPtrOutput)
}

// Notification will be sent on creation of an Approval Request
func (o ApprovalSettingsResponsePtrOutput) NotificationOnApprovalCreation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationOnApprovalCreation
	}).(pulumi.StringPtrOutput)
}

// Notification will be sent on deletion of an Approval Request
func (o ApprovalSettingsResponsePtrOutput) NotificationOnApprovalDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationOnApprovalDeletion
	}).(pulumi.StringPtrOutput)
}

// Approval required for deploying service catalog templates (Required or NotRequired).
func (o ApprovalSettingsResponsePtrOutput) ServiceCatalogDeployment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCatalogDeployment
	}).(pulumi.StringPtrOutput)
}

// Approver Metadata for approvals request.
type Approver struct {
	// Action Performed by approver
	ActionPerformed *string `pulumi:"actionPerformed"`
	// Entra ObjectID of the approver
	ApproverEntraId string `pulumi:"approverEntraId"`
	// approval request last updated at
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
}

// ApproverInput is an input type that accepts ApproverArgs and ApproverOutput values.
// You can construct a concrete instance of `ApproverInput` via:
//
//	ApproverArgs{...}
type ApproverInput interface {
	pulumi.Input

	ToApproverOutput() ApproverOutput
	ToApproverOutputWithContext(context.Context) ApproverOutput
}

// Approver Metadata for approvals request.
type ApproverArgs struct {
	// Action Performed by approver
	ActionPerformed pulumi.StringPtrInput `pulumi:"actionPerformed"`
	// Entra ObjectID of the approver
	ApproverEntraId pulumi.StringInput `pulumi:"approverEntraId"`
	// approval request last updated at
	LastUpdatedAt pulumi.StringInput `pulumi:"lastUpdatedAt"`
}

func (ApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Approver)(nil)).Elem()
}

func (i ApproverArgs) ToApproverOutput() ApproverOutput {
	return i.ToApproverOutputWithContext(context.Background())
}

func (i ApproverArgs) ToApproverOutputWithContext(ctx context.Context) ApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApproverOutput)
}

// ApproverArrayInput is an input type that accepts ApproverArray and ApproverArrayOutput values.
// You can construct a concrete instance of `ApproverArrayInput` via:
//
//	ApproverArray{ ApproverArgs{...} }
type ApproverArrayInput interface {
	pulumi.Input

	ToApproverArrayOutput() ApproverArrayOutput
	ToApproverArrayOutputWithContext(context.Context) ApproverArrayOutput
}

type ApproverArray []ApproverInput

func (ApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Approver)(nil)).Elem()
}

func (i ApproverArray) ToApproverArrayOutput() ApproverArrayOutput {
	return i.ToApproverArrayOutputWithContext(context.Background())
}

func (i ApproverArray) ToApproverArrayOutputWithContext(ctx context.Context) ApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApproverArrayOutput)
}

// Approver Metadata for approvals request.
type ApproverOutput struct{ *pulumi.OutputState }

func (ApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Approver)(nil)).Elem()
}

func (o ApproverOutput) ToApproverOutput() ApproverOutput {
	return o
}

func (o ApproverOutput) ToApproverOutputWithContext(ctx context.Context) ApproverOutput {
	return o
}

// Action Performed by approver
func (o ApproverOutput) ActionPerformed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Approver) *string { return v.ActionPerformed }).(pulumi.StringPtrOutput)
}

// Entra ObjectID of the approver
func (o ApproverOutput) ApproverEntraId() pulumi.StringOutput {
	return o.ApplyT(func(v Approver) string { return v.ApproverEntraId }).(pulumi.StringOutput)
}

// approval request last updated at
func (o ApproverOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Approver) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

type ApproverArrayOutput struct{ *pulumi.OutputState }

func (ApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Approver)(nil)).Elem()
}

func (o ApproverArrayOutput) ToApproverArrayOutput() ApproverArrayOutput {
	return o
}

func (o ApproverArrayOutput) ToApproverArrayOutputWithContext(ctx context.Context) ApproverArrayOutput {
	return o
}

func (o ApproverArrayOutput) Index(i pulumi.IntInput) ApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Approver {
		return vs[0].([]Approver)[vs[1].(int)]
	}).(ApproverOutput)
}

// Approver Metadata for approvals request.
type ApproverResponse struct {
	// Action Performed by approver
	ActionPerformed *string `pulumi:"actionPerformed"`
	// Entra ObjectID of the approver
	ApproverEntraId string `pulumi:"approverEntraId"`
	// approval request last updated at
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
}

// Approver Metadata for approvals request.
type ApproverResponseOutput struct{ *pulumi.OutputState }

func (ApproverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApproverResponse)(nil)).Elem()
}

func (o ApproverResponseOutput) ToApproverResponseOutput() ApproverResponseOutput {
	return o
}

func (o ApproverResponseOutput) ToApproverResponseOutputWithContext(ctx context.Context) ApproverResponseOutput {
	return o
}

// Action Performed by approver
func (o ApproverResponseOutput) ActionPerformed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApproverResponse) *string { return v.ActionPerformed }).(pulumi.StringPtrOutput)
}

// Entra ObjectID of the approver
func (o ApproverResponseOutput) ApproverEntraId() pulumi.StringOutput {
	return o.ApplyT(func(v ApproverResponse) string { return v.ApproverEntraId }).(pulumi.StringOutput)
}

// approval request last updated at
func (o ApproverResponseOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ApproverResponse) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

type ApproverResponseArrayOutput struct{ *pulumi.OutputState }

func (ApproverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApproverResponse)(nil)).Elem()
}

func (o ApproverResponseArrayOutput) ToApproverResponseArrayOutput() ApproverResponseArrayOutput {
	return o
}

func (o ApproverResponseArrayOutput) ToApproverResponseArrayOutputWithContext(ctx context.Context) ApproverResponseArrayOutput {
	return o
}

func (o ApproverResponseArrayOutput) Index(i pulumi.IntInput) ApproverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApproverResponse {
		return vs[0].([]ApproverResponse)[vs[1].(int)]
	}).(ApproverResponseOutput)
}

// Base type for destination rules.
type CommunityEndpointDestinationRule struct {
	// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
	Destination *string `pulumi:"destination"`
	// Destination Type.
	DestinationType *string `pulumi:"destinationType"`
	// Endpoint Rule Name.
	EndpointRuleName *string `pulumi:"endpointRuleName"`
	// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
	Ports *string `pulumi:"ports"`
	// Protocols. Options specified by Endpoint Protocol Enum.
	Protocols []string `pulumi:"protocols"`
	// Transit Hub Resource Id.
	TransitHubResourceId *string `pulumi:"transitHubResourceId"`
}

// CommunityEndpointDestinationRuleInput is an input type that accepts CommunityEndpointDestinationRuleArgs and CommunityEndpointDestinationRuleOutput values.
// You can construct a concrete instance of `CommunityEndpointDestinationRuleInput` via:
//
//	CommunityEndpointDestinationRuleArgs{...}
type CommunityEndpointDestinationRuleInput interface {
	pulumi.Input

	ToCommunityEndpointDestinationRuleOutput() CommunityEndpointDestinationRuleOutput
	ToCommunityEndpointDestinationRuleOutputWithContext(context.Context) CommunityEndpointDestinationRuleOutput
}

// Base type for destination rules.
type CommunityEndpointDestinationRuleArgs struct {
	// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// Destination Type.
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	// Endpoint Rule Name.
	EndpointRuleName pulumi.StringPtrInput `pulumi:"endpointRuleName"`
	// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Protocols. Options specified by Endpoint Protocol Enum.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// Transit Hub Resource Id.
	TransitHubResourceId pulumi.StringPtrInput `pulumi:"transitHubResourceId"`
}

func (CommunityEndpointDestinationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityEndpointDestinationRule)(nil)).Elem()
}

func (i CommunityEndpointDestinationRuleArgs) ToCommunityEndpointDestinationRuleOutput() CommunityEndpointDestinationRuleOutput {
	return i.ToCommunityEndpointDestinationRuleOutputWithContext(context.Background())
}

func (i CommunityEndpointDestinationRuleArgs) ToCommunityEndpointDestinationRuleOutputWithContext(ctx context.Context) CommunityEndpointDestinationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityEndpointDestinationRuleOutput)
}

// CommunityEndpointDestinationRuleArrayInput is an input type that accepts CommunityEndpointDestinationRuleArray and CommunityEndpointDestinationRuleArrayOutput values.
// You can construct a concrete instance of `CommunityEndpointDestinationRuleArrayInput` via:
//
//	CommunityEndpointDestinationRuleArray{ CommunityEndpointDestinationRuleArgs{...} }
type CommunityEndpointDestinationRuleArrayInput interface {
	pulumi.Input

	ToCommunityEndpointDestinationRuleArrayOutput() CommunityEndpointDestinationRuleArrayOutput
	ToCommunityEndpointDestinationRuleArrayOutputWithContext(context.Context) CommunityEndpointDestinationRuleArrayOutput
}

type CommunityEndpointDestinationRuleArray []CommunityEndpointDestinationRuleInput

func (CommunityEndpointDestinationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityEndpointDestinationRule)(nil)).Elem()
}

func (i CommunityEndpointDestinationRuleArray) ToCommunityEndpointDestinationRuleArrayOutput() CommunityEndpointDestinationRuleArrayOutput {
	return i.ToCommunityEndpointDestinationRuleArrayOutputWithContext(context.Background())
}

func (i CommunityEndpointDestinationRuleArray) ToCommunityEndpointDestinationRuleArrayOutputWithContext(ctx context.Context) CommunityEndpointDestinationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityEndpointDestinationRuleArrayOutput)
}

// Base type for destination rules.
type CommunityEndpointDestinationRuleOutput struct{ *pulumi.OutputState }

func (CommunityEndpointDestinationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityEndpointDestinationRule)(nil)).Elem()
}

func (o CommunityEndpointDestinationRuleOutput) ToCommunityEndpointDestinationRuleOutput() CommunityEndpointDestinationRuleOutput {
	return o
}

func (o CommunityEndpointDestinationRuleOutput) ToCommunityEndpointDestinationRuleOutputWithContext(ctx context.Context) CommunityEndpointDestinationRuleOutput {
	return o
}

// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
func (o CommunityEndpointDestinationRuleOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRule) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// Destination Type.
func (o CommunityEndpointDestinationRuleOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRule) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// Endpoint Rule Name.
func (o CommunityEndpointDestinationRuleOutput) EndpointRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRule) *string { return v.EndpointRuleName }).(pulumi.StringPtrOutput)
}

// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
func (o CommunityEndpointDestinationRuleOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRule) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Protocols. Options specified by Endpoint Protocol Enum.
func (o CommunityEndpointDestinationRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Transit Hub Resource Id.
func (o CommunityEndpointDestinationRuleOutput) TransitHubResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRule) *string { return v.TransitHubResourceId }).(pulumi.StringPtrOutput)
}

type CommunityEndpointDestinationRuleArrayOutput struct{ *pulumi.OutputState }

func (CommunityEndpointDestinationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityEndpointDestinationRule)(nil)).Elem()
}

func (o CommunityEndpointDestinationRuleArrayOutput) ToCommunityEndpointDestinationRuleArrayOutput() CommunityEndpointDestinationRuleArrayOutput {
	return o
}

func (o CommunityEndpointDestinationRuleArrayOutput) ToCommunityEndpointDestinationRuleArrayOutputWithContext(ctx context.Context) CommunityEndpointDestinationRuleArrayOutput {
	return o
}

func (o CommunityEndpointDestinationRuleArrayOutput) Index(i pulumi.IntInput) CommunityEndpointDestinationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityEndpointDestinationRule {
		return vs[0].([]CommunityEndpointDestinationRule)[vs[1].(int)]
	}).(CommunityEndpointDestinationRuleOutput)
}

// Base type for destination rules.
type CommunityEndpointDestinationRuleResponse struct {
	// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
	Destination *string `pulumi:"destination"`
	// Destination Type.
	DestinationType *string `pulumi:"destinationType"`
	// Endpoint Rule Name.
	EndpointRuleName *string `pulumi:"endpointRuleName"`
	// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
	Ports *string `pulumi:"ports"`
	// Protocols. Options specified by Endpoint Protocol Enum.
	Protocols []string `pulumi:"protocols"`
	// Transit Hub Resource Id.
	TransitHubResourceId *string `pulumi:"transitHubResourceId"`
}

// Base type for destination rules.
type CommunityEndpointDestinationRuleResponseOutput struct{ *pulumi.OutputState }

func (CommunityEndpointDestinationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityEndpointDestinationRuleResponse)(nil)).Elem()
}

func (o CommunityEndpointDestinationRuleResponseOutput) ToCommunityEndpointDestinationRuleResponseOutput() CommunityEndpointDestinationRuleResponseOutput {
	return o
}

func (o CommunityEndpointDestinationRuleResponseOutput) ToCommunityEndpointDestinationRuleResponseOutputWithContext(ctx context.Context) CommunityEndpointDestinationRuleResponseOutput {
	return o
}

// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
func (o CommunityEndpointDestinationRuleResponseOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRuleResponse) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// Destination Type.
func (o CommunityEndpointDestinationRuleResponseOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRuleResponse) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// Endpoint Rule Name.
func (o CommunityEndpointDestinationRuleResponseOutput) EndpointRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRuleResponse) *string { return v.EndpointRuleName }).(pulumi.StringPtrOutput)
}

// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
func (o CommunityEndpointDestinationRuleResponseOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRuleResponse) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Protocols. Options specified by Endpoint Protocol Enum.
func (o CommunityEndpointDestinationRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Transit Hub Resource Id.
func (o CommunityEndpointDestinationRuleResponseOutput) TransitHubResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityEndpointDestinationRuleResponse) *string { return v.TransitHubResourceId }).(pulumi.StringPtrOutput)
}

type CommunityEndpointDestinationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CommunityEndpointDestinationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityEndpointDestinationRuleResponse)(nil)).Elem()
}

func (o CommunityEndpointDestinationRuleResponseArrayOutput) ToCommunityEndpointDestinationRuleResponseArrayOutput() CommunityEndpointDestinationRuleResponseArrayOutput {
	return o
}

func (o CommunityEndpointDestinationRuleResponseArrayOutput) ToCommunityEndpointDestinationRuleResponseArrayOutputWithContext(ctx context.Context) CommunityEndpointDestinationRuleResponseArrayOutput {
	return o
}

func (o CommunityEndpointDestinationRuleResponseArrayOutput) Index(i pulumi.IntInput) CommunityEndpointDestinationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityEndpointDestinationRuleResponse {
		return vs[0].([]CommunityEndpointDestinationRuleResponse)[vs[1].(int)]
	}).(CommunityEndpointDestinationRuleResponseOutput)
}

// Enclave Address Spaces
type EnclaveAddressSpacesModelResponse struct {
	// Enclave Address Space
	EnclaveAddressSpace *string `pulumi:"enclaveAddressSpace"`
	// Managed Address Space
	ManagedAddressSpace *string `pulumi:"managedAddressSpace"`
}

// Enclave Address Spaces
type EnclaveAddressSpacesModelResponseOutput struct{ *pulumi.OutputState }

func (EnclaveAddressSpacesModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveAddressSpacesModelResponse)(nil)).Elem()
}

func (o EnclaveAddressSpacesModelResponseOutput) ToEnclaveAddressSpacesModelResponseOutput() EnclaveAddressSpacesModelResponseOutput {
	return o
}

func (o EnclaveAddressSpacesModelResponseOutput) ToEnclaveAddressSpacesModelResponseOutputWithContext(ctx context.Context) EnclaveAddressSpacesModelResponseOutput {
	return o
}

// Enclave Address Space
func (o EnclaveAddressSpacesModelResponseOutput) EnclaveAddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveAddressSpacesModelResponse) *string { return v.EnclaveAddressSpace }).(pulumi.StringPtrOutput)
}

// Managed Address Space
func (o EnclaveAddressSpacesModelResponseOutput) ManagedAddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveAddressSpacesModelResponse) *string { return v.ManagedAddressSpace }).(pulumi.StringPtrOutput)
}

// Virtual Enclave Default Settings
type EnclaveDefaultSettingsModel struct {
	// Diagnostic Destination.
	DiagnosticDestination *string `pulumi:"diagnosticDestination"`
}

// Defaults sets the appropriate defaults for EnclaveDefaultSettingsModel
func (val *EnclaveDefaultSettingsModel) Defaults() *EnclaveDefaultSettingsModel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DiagnosticDestination == nil {
		diagnosticDestination_ := "EnclaveOnly"
		tmp.DiagnosticDestination = &diagnosticDestination_
	}
	return &tmp
}

// EnclaveDefaultSettingsModelInput is an input type that accepts EnclaveDefaultSettingsModelArgs and EnclaveDefaultSettingsModelOutput values.
// You can construct a concrete instance of `EnclaveDefaultSettingsModelInput` via:
//
//	EnclaveDefaultSettingsModelArgs{...}
type EnclaveDefaultSettingsModelInput interface {
	pulumi.Input

	ToEnclaveDefaultSettingsModelOutput() EnclaveDefaultSettingsModelOutput
	ToEnclaveDefaultSettingsModelOutputWithContext(context.Context) EnclaveDefaultSettingsModelOutput
}

// Virtual Enclave Default Settings
type EnclaveDefaultSettingsModelArgs struct {
	// Diagnostic Destination.
	DiagnosticDestination pulumi.StringPtrInput `pulumi:"diagnosticDestination"`
}

// Defaults sets the appropriate defaults for EnclaveDefaultSettingsModelArgs
func (val *EnclaveDefaultSettingsModelArgs) Defaults() *EnclaveDefaultSettingsModelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DiagnosticDestination == nil {
		tmp.DiagnosticDestination = pulumi.StringPtr("EnclaveOnly")
	}
	return &tmp
}
func (EnclaveDefaultSettingsModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveDefaultSettingsModel)(nil)).Elem()
}

func (i EnclaveDefaultSettingsModelArgs) ToEnclaveDefaultSettingsModelOutput() EnclaveDefaultSettingsModelOutput {
	return i.ToEnclaveDefaultSettingsModelOutputWithContext(context.Background())
}

func (i EnclaveDefaultSettingsModelArgs) ToEnclaveDefaultSettingsModelOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnclaveDefaultSettingsModelOutput)
}

func (i EnclaveDefaultSettingsModelArgs) ToEnclaveDefaultSettingsModelPtrOutput() EnclaveDefaultSettingsModelPtrOutput {
	return i.ToEnclaveDefaultSettingsModelPtrOutputWithContext(context.Background())
}

func (i EnclaveDefaultSettingsModelArgs) ToEnclaveDefaultSettingsModelPtrOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnclaveDefaultSettingsModelOutput).ToEnclaveDefaultSettingsModelPtrOutputWithContext(ctx)
}

// EnclaveDefaultSettingsModelPtrInput is an input type that accepts EnclaveDefaultSettingsModelArgs, EnclaveDefaultSettingsModelPtr and EnclaveDefaultSettingsModelPtrOutput values.
// You can construct a concrete instance of `EnclaveDefaultSettingsModelPtrInput` via:
//
//	        EnclaveDefaultSettingsModelArgs{...}
//
//	or:
//
//	        nil
type EnclaveDefaultSettingsModelPtrInput interface {
	pulumi.Input

	ToEnclaveDefaultSettingsModelPtrOutput() EnclaveDefaultSettingsModelPtrOutput
	ToEnclaveDefaultSettingsModelPtrOutputWithContext(context.Context) EnclaveDefaultSettingsModelPtrOutput
}

type enclaveDefaultSettingsModelPtrType EnclaveDefaultSettingsModelArgs

func EnclaveDefaultSettingsModelPtr(v *EnclaveDefaultSettingsModelArgs) EnclaveDefaultSettingsModelPtrInput {
	return (*enclaveDefaultSettingsModelPtrType)(v)
}

func (*enclaveDefaultSettingsModelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnclaveDefaultSettingsModel)(nil)).Elem()
}

func (i *enclaveDefaultSettingsModelPtrType) ToEnclaveDefaultSettingsModelPtrOutput() EnclaveDefaultSettingsModelPtrOutput {
	return i.ToEnclaveDefaultSettingsModelPtrOutputWithContext(context.Background())
}

func (i *enclaveDefaultSettingsModelPtrType) ToEnclaveDefaultSettingsModelPtrOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnclaveDefaultSettingsModelPtrOutput)
}

// Virtual Enclave Default Settings
type EnclaveDefaultSettingsModelOutput struct{ *pulumi.OutputState }

func (EnclaveDefaultSettingsModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveDefaultSettingsModel)(nil)).Elem()
}

func (o EnclaveDefaultSettingsModelOutput) ToEnclaveDefaultSettingsModelOutput() EnclaveDefaultSettingsModelOutput {
	return o
}

func (o EnclaveDefaultSettingsModelOutput) ToEnclaveDefaultSettingsModelOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelOutput {
	return o
}

func (o EnclaveDefaultSettingsModelOutput) ToEnclaveDefaultSettingsModelPtrOutput() EnclaveDefaultSettingsModelPtrOutput {
	return o.ToEnclaveDefaultSettingsModelPtrOutputWithContext(context.Background())
}

func (o EnclaveDefaultSettingsModelOutput) ToEnclaveDefaultSettingsModelPtrOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnclaveDefaultSettingsModel) *EnclaveDefaultSettingsModel {
		return &v
	}).(EnclaveDefaultSettingsModelPtrOutput)
}

// Diagnostic Destination.
func (o EnclaveDefaultSettingsModelOutput) DiagnosticDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveDefaultSettingsModel) *string { return v.DiagnosticDestination }).(pulumi.StringPtrOutput)
}

type EnclaveDefaultSettingsModelPtrOutput struct{ *pulumi.OutputState }

func (EnclaveDefaultSettingsModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnclaveDefaultSettingsModel)(nil)).Elem()
}

func (o EnclaveDefaultSettingsModelPtrOutput) ToEnclaveDefaultSettingsModelPtrOutput() EnclaveDefaultSettingsModelPtrOutput {
	return o
}

func (o EnclaveDefaultSettingsModelPtrOutput) ToEnclaveDefaultSettingsModelPtrOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelPtrOutput {
	return o
}

func (o EnclaveDefaultSettingsModelPtrOutput) Elem() EnclaveDefaultSettingsModelOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModel) EnclaveDefaultSettingsModel {
		if v != nil {
			return *v
		}
		var ret EnclaveDefaultSettingsModel
		return ret
	}).(EnclaveDefaultSettingsModelOutput)
}

// Diagnostic Destination.
func (o EnclaveDefaultSettingsModelPtrOutput) DiagnosticDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModel) *string {
		if v == nil {
			return nil
		}
		return v.DiagnosticDestination
	}).(pulumi.StringPtrOutput)
}

// Virtual Enclave Default Settings
type EnclaveDefaultSettingsModelResponse struct {
	// Diagnostic Destination.
	DiagnosticDestination *string `pulumi:"diagnosticDestination"`
	// Key Vault Resource Id.
	KeyVaultResourceId string `pulumi:"keyVaultResourceId"`
	// Log Analytics Resource Ids.
	LogAnalyticsResourceIdCollection []string `pulumi:"logAnalyticsResourceIdCollection"`
	// Storage Account Resource Id.
	StorageAccountResourceId string `pulumi:"storageAccountResourceId"`
}

// Defaults sets the appropriate defaults for EnclaveDefaultSettingsModelResponse
func (val *EnclaveDefaultSettingsModelResponse) Defaults() *EnclaveDefaultSettingsModelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DiagnosticDestination == nil {
		diagnosticDestination_ := "EnclaveOnly"
		tmp.DiagnosticDestination = &diagnosticDestination_
	}
	return &tmp
}

// Virtual Enclave Default Settings
type EnclaveDefaultSettingsModelResponseOutput struct{ *pulumi.OutputState }

func (EnclaveDefaultSettingsModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveDefaultSettingsModelResponse)(nil)).Elem()
}

func (o EnclaveDefaultSettingsModelResponseOutput) ToEnclaveDefaultSettingsModelResponseOutput() EnclaveDefaultSettingsModelResponseOutput {
	return o
}

func (o EnclaveDefaultSettingsModelResponseOutput) ToEnclaveDefaultSettingsModelResponseOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelResponseOutput {
	return o
}

// Diagnostic Destination.
func (o EnclaveDefaultSettingsModelResponseOutput) DiagnosticDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveDefaultSettingsModelResponse) *string { return v.DiagnosticDestination }).(pulumi.StringPtrOutput)
}

// Key Vault Resource Id.
func (o EnclaveDefaultSettingsModelResponseOutput) KeyVaultResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v EnclaveDefaultSettingsModelResponse) string { return v.KeyVaultResourceId }).(pulumi.StringOutput)
}

// Log Analytics Resource Ids.
func (o EnclaveDefaultSettingsModelResponseOutput) LogAnalyticsResourceIdCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnclaveDefaultSettingsModelResponse) []string { return v.LogAnalyticsResourceIdCollection }).(pulumi.StringArrayOutput)
}

// Storage Account Resource Id.
func (o EnclaveDefaultSettingsModelResponseOutput) StorageAccountResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v EnclaveDefaultSettingsModelResponse) string { return v.StorageAccountResourceId }).(pulumi.StringOutput)
}

type EnclaveDefaultSettingsModelResponsePtrOutput struct{ *pulumi.OutputState }

func (EnclaveDefaultSettingsModelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnclaveDefaultSettingsModelResponse)(nil)).Elem()
}

func (o EnclaveDefaultSettingsModelResponsePtrOutput) ToEnclaveDefaultSettingsModelResponsePtrOutput() EnclaveDefaultSettingsModelResponsePtrOutput {
	return o
}

func (o EnclaveDefaultSettingsModelResponsePtrOutput) ToEnclaveDefaultSettingsModelResponsePtrOutputWithContext(ctx context.Context) EnclaveDefaultSettingsModelResponsePtrOutput {
	return o
}

func (o EnclaveDefaultSettingsModelResponsePtrOutput) Elem() EnclaveDefaultSettingsModelResponseOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModelResponse) EnclaveDefaultSettingsModelResponse {
		if v != nil {
			return *v
		}
		var ret EnclaveDefaultSettingsModelResponse
		return ret
	}).(EnclaveDefaultSettingsModelResponseOutput)
}

// Diagnostic Destination.
func (o EnclaveDefaultSettingsModelResponsePtrOutput) DiagnosticDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiagnosticDestination
	}).(pulumi.StringPtrOutput)
}

// Key Vault Resource Id.
func (o EnclaveDefaultSettingsModelResponsePtrOutput) KeyVaultResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultResourceId
	}).(pulumi.StringPtrOutput)
}

// Log Analytics Resource Ids.
func (o EnclaveDefaultSettingsModelResponsePtrOutput) LogAnalyticsResourceIdCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModelResponse) []string {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsResourceIdCollection
	}).(pulumi.StringArrayOutput)
}

// Storage Account Resource Id.
func (o EnclaveDefaultSettingsModelResponsePtrOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnclaveDefaultSettingsModelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountResourceId
	}).(pulumi.StringPtrOutput)
}

// Enclave Endpoint Rule Properties
type EnclaveEndpointDestinationRule struct {
	// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
	Destination *string `pulumi:"destination"`
	// Endpoint Rule Name.
	EndpointRuleName *string `pulumi:"endpointRuleName"`
	// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
	Ports *string `pulumi:"ports"`
	// Protocols. Options specified by Endpoint Protocol Enum.
	Protocols []string `pulumi:"protocols"`
}

// EnclaveEndpointDestinationRuleInput is an input type that accepts EnclaveEndpointDestinationRuleArgs and EnclaveEndpointDestinationRuleOutput values.
// You can construct a concrete instance of `EnclaveEndpointDestinationRuleInput` via:
//
//	EnclaveEndpointDestinationRuleArgs{...}
type EnclaveEndpointDestinationRuleInput interface {
	pulumi.Input

	ToEnclaveEndpointDestinationRuleOutput() EnclaveEndpointDestinationRuleOutput
	ToEnclaveEndpointDestinationRuleOutputWithContext(context.Context) EnclaveEndpointDestinationRuleOutput
}

// Enclave Endpoint Rule Properties
type EnclaveEndpointDestinationRuleArgs struct {
	// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// Endpoint Rule Name.
	EndpointRuleName pulumi.StringPtrInput `pulumi:"endpointRuleName"`
	// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Protocols. Options specified by Endpoint Protocol Enum.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
}

func (EnclaveEndpointDestinationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveEndpointDestinationRule)(nil)).Elem()
}

func (i EnclaveEndpointDestinationRuleArgs) ToEnclaveEndpointDestinationRuleOutput() EnclaveEndpointDestinationRuleOutput {
	return i.ToEnclaveEndpointDestinationRuleOutputWithContext(context.Background())
}

func (i EnclaveEndpointDestinationRuleArgs) ToEnclaveEndpointDestinationRuleOutputWithContext(ctx context.Context) EnclaveEndpointDestinationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnclaveEndpointDestinationRuleOutput)
}

// EnclaveEndpointDestinationRuleArrayInput is an input type that accepts EnclaveEndpointDestinationRuleArray and EnclaveEndpointDestinationRuleArrayOutput values.
// You can construct a concrete instance of `EnclaveEndpointDestinationRuleArrayInput` via:
//
//	EnclaveEndpointDestinationRuleArray{ EnclaveEndpointDestinationRuleArgs{...} }
type EnclaveEndpointDestinationRuleArrayInput interface {
	pulumi.Input

	ToEnclaveEndpointDestinationRuleArrayOutput() EnclaveEndpointDestinationRuleArrayOutput
	ToEnclaveEndpointDestinationRuleArrayOutputWithContext(context.Context) EnclaveEndpointDestinationRuleArrayOutput
}

type EnclaveEndpointDestinationRuleArray []EnclaveEndpointDestinationRuleInput

func (EnclaveEndpointDestinationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnclaveEndpointDestinationRule)(nil)).Elem()
}

func (i EnclaveEndpointDestinationRuleArray) ToEnclaveEndpointDestinationRuleArrayOutput() EnclaveEndpointDestinationRuleArrayOutput {
	return i.ToEnclaveEndpointDestinationRuleArrayOutputWithContext(context.Background())
}

func (i EnclaveEndpointDestinationRuleArray) ToEnclaveEndpointDestinationRuleArrayOutputWithContext(ctx context.Context) EnclaveEndpointDestinationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnclaveEndpointDestinationRuleArrayOutput)
}

// Enclave Endpoint Rule Properties
type EnclaveEndpointDestinationRuleOutput struct{ *pulumi.OutputState }

func (EnclaveEndpointDestinationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveEndpointDestinationRule)(nil)).Elem()
}

func (o EnclaveEndpointDestinationRuleOutput) ToEnclaveEndpointDestinationRuleOutput() EnclaveEndpointDestinationRuleOutput {
	return o
}

func (o EnclaveEndpointDestinationRuleOutput) ToEnclaveEndpointDestinationRuleOutputWithContext(ctx context.Context) EnclaveEndpointDestinationRuleOutput {
	return o
}

// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
func (o EnclaveEndpointDestinationRuleOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRule) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// Endpoint Rule Name.
func (o EnclaveEndpointDestinationRuleOutput) EndpointRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRule) *string { return v.EndpointRuleName }).(pulumi.StringPtrOutput)
}

// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
func (o EnclaveEndpointDestinationRuleOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRule) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Protocols. Options specified by Endpoint Protocol Enum.
func (o EnclaveEndpointDestinationRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

type EnclaveEndpointDestinationRuleArrayOutput struct{ *pulumi.OutputState }

func (EnclaveEndpointDestinationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnclaveEndpointDestinationRule)(nil)).Elem()
}

func (o EnclaveEndpointDestinationRuleArrayOutput) ToEnclaveEndpointDestinationRuleArrayOutput() EnclaveEndpointDestinationRuleArrayOutput {
	return o
}

func (o EnclaveEndpointDestinationRuleArrayOutput) ToEnclaveEndpointDestinationRuleArrayOutputWithContext(ctx context.Context) EnclaveEndpointDestinationRuleArrayOutput {
	return o
}

func (o EnclaveEndpointDestinationRuleArrayOutput) Index(i pulumi.IntInput) EnclaveEndpointDestinationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnclaveEndpointDestinationRule {
		return vs[0].([]EnclaveEndpointDestinationRule)[vs[1].(int)]
	}).(EnclaveEndpointDestinationRuleOutput)
}

// Enclave Endpoint Rule Properties
type EnclaveEndpointDestinationRuleResponse struct {
	// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
	Destination *string `pulumi:"destination"`
	// Endpoint Rule Name.
	EndpointRuleName *string `pulumi:"endpointRuleName"`
	// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
	Ports *string `pulumi:"ports"`
	// Protocols. Options specified by Endpoint Protocol Enum.
	Protocols []string `pulumi:"protocols"`
}

// Enclave Endpoint Rule Properties
type EnclaveEndpointDestinationRuleResponseOutput struct{ *pulumi.OutputState }

func (EnclaveEndpointDestinationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveEndpointDestinationRuleResponse)(nil)).Elem()
}

func (o EnclaveEndpointDestinationRuleResponseOutput) ToEnclaveEndpointDestinationRuleResponseOutput() EnclaveEndpointDestinationRuleResponseOutput {
	return o
}

func (o EnclaveEndpointDestinationRuleResponseOutput) ToEnclaveEndpointDestinationRuleResponseOutputWithContext(ctx context.Context) EnclaveEndpointDestinationRuleResponseOutput {
	return o
}

// Destination address. Can include multiple CIDR/IP Addresses or fqdn tags or fqdns (for community endpoint) separated by commas.
func (o EnclaveEndpointDestinationRuleResponseOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRuleResponse) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// Endpoint Rule Name.
func (o EnclaveEndpointDestinationRuleResponseOutput) EndpointRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRuleResponse) *string { return v.EndpointRuleName }).(pulumi.StringPtrOutput)
}

// Port. Can include multiple ports separated by commas or a range indicated by a hyphen.
func (o EnclaveEndpointDestinationRuleResponseOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRuleResponse) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Protocols. Options specified by Endpoint Protocol Enum.
func (o EnclaveEndpointDestinationRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnclaveEndpointDestinationRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

type EnclaveEndpointDestinationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (EnclaveEndpointDestinationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnclaveEndpointDestinationRuleResponse)(nil)).Elem()
}

func (o EnclaveEndpointDestinationRuleResponseArrayOutput) ToEnclaveEndpointDestinationRuleResponseArrayOutput() EnclaveEndpointDestinationRuleResponseArrayOutput {
	return o
}

func (o EnclaveEndpointDestinationRuleResponseArrayOutput) ToEnclaveEndpointDestinationRuleResponseArrayOutputWithContext(ctx context.Context) EnclaveEndpointDestinationRuleResponseArrayOutput {
	return o
}

func (o EnclaveEndpointDestinationRuleResponseArrayOutput) Index(i pulumi.IntInput) EnclaveEndpointDestinationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnclaveEndpointDestinationRuleResponse {
		return vs[0].([]EnclaveEndpointDestinationRuleResponse)[vs[1].(int)]
	}).(EnclaveEndpointDestinationRuleResponseOutput)
}

// Enclave Virtual Network Properties
type EnclaveVirtualNetworkModel struct {
	// Allow Subnet Communication.
	AllowSubnetCommunication *bool `pulumi:"allowSubnetCommunication"`
	// Custom CIDR Range.
	CustomCidrRange *string `pulumi:"customCidrRange"`
	// Network Name.
	NetworkName *string `pulumi:"networkName"`
	// Network Size.
	NetworkSize *string `pulumi:"networkSize"`
	// Subnet Configurations.
	SubnetConfigurations []SubnetConfiguration `pulumi:"subnetConfigurations"`
}

// Defaults sets the appropriate defaults for EnclaveVirtualNetworkModel
func (val *EnclaveVirtualNetworkModel) Defaults() *EnclaveVirtualNetworkModel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AllowSubnetCommunication == nil {
		allowSubnetCommunication_ := false
		tmp.AllowSubnetCommunication = &allowSubnetCommunication_
	}
	return &tmp
}

// EnclaveVirtualNetworkModelInput is an input type that accepts EnclaveVirtualNetworkModelArgs and EnclaveVirtualNetworkModelOutput values.
// You can construct a concrete instance of `EnclaveVirtualNetworkModelInput` via:
//
//	EnclaveVirtualNetworkModelArgs{...}
type EnclaveVirtualNetworkModelInput interface {
	pulumi.Input

	ToEnclaveVirtualNetworkModelOutput() EnclaveVirtualNetworkModelOutput
	ToEnclaveVirtualNetworkModelOutputWithContext(context.Context) EnclaveVirtualNetworkModelOutput
}

// Enclave Virtual Network Properties
type EnclaveVirtualNetworkModelArgs struct {
	// Allow Subnet Communication.
	AllowSubnetCommunication pulumi.BoolPtrInput `pulumi:"allowSubnetCommunication"`
	// Custom CIDR Range.
	CustomCidrRange pulumi.StringPtrInput `pulumi:"customCidrRange"`
	// Network Name.
	NetworkName pulumi.StringPtrInput `pulumi:"networkName"`
	// Network Size.
	NetworkSize pulumi.StringPtrInput `pulumi:"networkSize"`
	// Subnet Configurations.
	SubnetConfigurations SubnetConfigurationArrayInput `pulumi:"subnetConfigurations"`
}

// Defaults sets the appropriate defaults for EnclaveVirtualNetworkModelArgs
func (val *EnclaveVirtualNetworkModelArgs) Defaults() *EnclaveVirtualNetworkModelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AllowSubnetCommunication == nil {
		tmp.AllowSubnetCommunication = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (EnclaveVirtualNetworkModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveVirtualNetworkModel)(nil)).Elem()
}

func (i EnclaveVirtualNetworkModelArgs) ToEnclaveVirtualNetworkModelOutput() EnclaveVirtualNetworkModelOutput {
	return i.ToEnclaveVirtualNetworkModelOutputWithContext(context.Background())
}

func (i EnclaveVirtualNetworkModelArgs) ToEnclaveVirtualNetworkModelOutputWithContext(ctx context.Context) EnclaveVirtualNetworkModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnclaveVirtualNetworkModelOutput)
}

// Enclave Virtual Network Properties
type EnclaveVirtualNetworkModelOutput struct{ *pulumi.OutputState }

func (EnclaveVirtualNetworkModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveVirtualNetworkModel)(nil)).Elem()
}

func (o EnclaveVirtualNetworkModelOutput) ToEnclaveVirtualNetworkModelOutput() EnclaveVirtualNetworkModelOutput {
	return o
}

func (o EnclaveVirtualNetworkModelOutput) ToEnclaveVirtualNetworkModelOutputWithContext(ctx context.Context) EnclaveVirtualNetworkModelOutput {
	return o
}

// Allow Subnet Communication.
func (o EnclaveVirtualNetworkModelOutput) AllowSubnetCommunication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModel) *bool { return v.AllowSubnetCommunication }).(pulumi.BoolPtrOutput)
}

// Custom CIDR Range.
func (o EnclaveVirtualNetworkModelOutput) CustomCidrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModel) *string { return v.CustomCidrRange }).(pulumi.StringPtrOutput)
}

// Network Name.
func (o EnclaveVirtualNetworkModelOutput) NetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModel) *string { return v.NetworkName }).(pulumi.StringPtrOutput)
}

// Network Size.
func (o EnclaveVirtualNetworkModelOutput) NetworkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModel) *string { return v.NetworkSize }).(pulumi.StringPtrOutput)
}

// Subnet Configurations.
func (o EnclaveVirtualNetworkModelOutput) SubnetConfigurations() SubnetConfigurationArrayOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModel) []SubnetConfiguration { return v.SubnetConfigurations }).(SubnetConfigurationArrayOutput)
}

// Enclave Virtual Network Properties
type EnclaveVirtualNetworkModelResponse struct {
	// Allow Subnet Communication.
	AllowSubnetCommunication *bool `pulumi:"allowSubnetCommunication"`
	// Custom CIDR Range.
	CustomCidrRange *string `pulumi:"customCidrRange"`
	// Network Name.
	NetworkName *string `pulumi:"networkName"`
	// Network Size.
	NetworkSize *string `pulumi:"networkSize"`
	// Subnet Configurations.
	SubnetConfigurations []SubnetConfigurationResponse `pulumi:"subnetConfigurations"`
}

// Defaults sets the appropriate defaults for EnclaveVirtualNetworkModelResponse
func (val *EnclaveVirtualNetworkModelResponse) Defaults() *EnclaveVirtualNetworkModelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AllowSubnetCommunication == nil {
		allowSubnetCommunication_ := false
		tmp.AllowSubnetCommunication = &allowSubnetCommunication_
	}
	return &tmp
}

// Enclave Virtual Network Properties
type EnclaveVirtualNetworkModelResponseOutput struct{ *pulumi.OutputState }

func (EnclaveVirtualNetworkModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnclaveVirtualNetworkModelResponse)(nil)).Elem()
}

func (o EnclaveVirtualNetworkModelResponseOutput) ToEnclaveVirtualNetworkModelResponseOutput() EnclaveVirtualNetworkModelResponseOutput {
	return o
}

func (o EnclaveVirtualNetworkModelResponseOutput) ToEnclaveVirtualNetworkModelResponseOutputWithContext(ctx context.Context) EnclaveVirtualNetworkModelResponseOutput {
	return o
}

// Allow Subnet Communication.
func (o EnclaveVirtualNetworkModelResponseOutput) AllowSubnetCommunication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModelResponse) *bool { return v.AllowSubnetCommunication }).(pulumi.BoolPtrOutput)
}

// Custom CIDR Range.
func (o EnclaveVirtualNetworkModelResponseOutput) CustomCidrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModelResponse) *string { return v.CustomCidrRange }).(pulumi.StringPtrOutput)
}

// Network Name.
func (o EnclaveVirtualNetworkModelResponseOutput) NetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModelResponse) *string { return v.NetworkName }).(pulumi.StringPtrOutput)
}

// Network Size.
func (o EnclaveVirtualNetworkModelResponseOutput) NetworkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModelResponse) *string { return v.NetworkSize }).(pulumi.StringPtrOutput)
}

// Subnet Configurations.
func (o EnclaveVirtualNetworkModelResponseOutput) SubnetConfigurations() SubnetConfigurationResponseArrayOutput {
	return o.ApplyT(func(v EnclaveVirtualNetworkModelResponse) []SubnetConfigurationResponse {
		return v.SubnetConfigurations
	}).(SubnetConfigurationResponseArrayOutput)
}

// GovernedServiceItem Properties
type GovernedServiceItem struct {
	// Initiative enforcement (Enabled or Disabled).
	Enforcement *string `pulumi:"enforcement"`
	// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
	Option *string `pulumi:"option"`
	// Enforcement mode for policy. AuditOnly, Enforce, or None.
	PolicyAction *string `pulumi:"policyAction"`
	// Service ID
	ServiceId string `pulumi:"serviceId"`
}

// GovernedServiceItemInput is an input type that accepts GovernedServiceItemArgs and GovernedServiceItemOutput values.
// You can construct a concrete instance of `GovernedServiceItemInput` via:
//
//	GovernedServiceItemArgs{...}
type GovernedServiceItemInput interface {
	pulumi.Input

	ToGovernedServiceItemOutput() GovernedServiceItemOutput
	ToGovernedServiceItemOutputWithContext(context.Context) GovernedServiceItemOutput
}

// GovernedServiceItem Properties
type GovernedServiceItemArgs struct {
	// Initiative enforcement (Enabled or Disabled).
	Enforcement pulumi.StringPtrInput `pulumi:"enforcement"`
	// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
	Option pulumi.StringPtrInput `pulumi:"option"`
	// Enforcement mode for policy. AuditOnly, Enforce, or None.
	PolicyAction pulumi.StringPtrInput `pulumi:"policyAction"`
	// Service ID
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (GovernedServiceItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernedServiceItem)(nil)).Elem()
}

func (i GovernedServiceItemArgs) ToGovernedServiceItemOutput() GovernedServiceItemOutput {
	return i.ToGovernedServiceItemOutputWithContext(context.Background())
}

func (i GovernedServiceItemArgs) ToGovernedServiceItemOutputWithContext(ctx context.Context) GovernedServiceItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GovernedServiceItemOutput)
}

// GovernedServiceItemArrayInput is an input type that accepts GovernedServiceItemArray and GovernedServiceItemArrayOutput values.
// You can construct a concrete instance of `GovernedServiceItemArrayInput` via:
//
//	GovernedServiceItemArray{ GovernedServiceItemArgs{...} }
type GovernedServiceItemArrayInput interface {
	pulumi.Input

	ToGovernedServiceItemArrayOutput() GovernedServiceItemArrayOutput
	ToGovernedServiceItemArrayOutputWithContext(context.Context) GovernedServiceItemArrayOutput
}

type GovernedServiceItemArray []GovernedServiceItemInput

func (GovernedServiceItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GovernedServiceItem)(nil)).Elem()
}

func (i GovernedServiceItemArray) ToGovernedServiceItemArrayOutput() GovernedServiceItemArrayOutput {
	return i.ToGovernedServiceItemArrayOutputWithContext(context.Background())
}

func (i GovernedServiceItemArray) ToGovernedServiceItemArrayOutputWithContext(ctx context.Context) GovernedServiceItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GovernedServiceItemArrayOutput)
}

// GovernedServiceItem Properties
type GovernedServiceItemOutput struct{ *pulumi.OutputState }

func (GovernedServiceItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernedServiceItem)(nil)).Elem()
}

func (o GovernedServiceItemOutput) ToGovernedServiceItemOutput() GovernedServiceItemOutput {
	return o
}

func (o GovernedServiceItemOutput) ToGovernedServiceItemOutputWithContext(ctx context.Context) GovernedServiceItemOutput {
	return o
}

// Initiative enforcement (Enabled or Disabled).
func (o GovernedServiceItemOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GovernedServiceItem) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
func (o GovernedServiceItemOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GovernedServiceItem) *string { return v.Option }).(pulumi.StringPtrOutput)
}

// Enforcement mode for policy. AuditOnly, Enforce, or None.
func (o GovernedServiceItemOutput) PolicyAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GovernedServiceItem) *string { return v.PolicyAction }).(pulumi.StringPtrOutput)
}

// Service ID
func (o GovernedServiceItemOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GovernedServiceItem) string { return v.ServiceId }).(pulumi.StringOutput)
}

type GovernedServiceItemArrayOutput struct{ *pulumi.OutputState }

func (GovernedServiceItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GovernedServiceItem)(nil)).Elem()
}

func (o GovernedServiceItemArrayOutput) ToGovernedServiceItemArrayOutput() GovernedServiceItemArrayOutput {
	return o
}

func (o GovernedServiceItemArrayOutput) ToGovernedServiceItemArrayOutputWithContext(ctx context.Context) GovernedServiceItemArrayOutput {
	return o
}

func (o GovernedServiceItemArrayOutput) Index(i pulumi.IntInput) GovernedServiceItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GovernedServiceItem {
		return vs[0].([]GovernedServiceItem)[vs[1].(int)]
	}).(GovernedServiceItemOutput)
}

// GovernedServiceItem Properties
type GovernedServiceItemResponse struct {
	// Initiative enforcement (Enabled or Disabled).
	Enforcement *string `pulumi:"enforcement"`
	// Initiatives associated with this service.
	Initiatives []string `pulumi:"initiatives"`
	// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
	Option *string `pulumi:"option"`
	// Enforcement mode for policy. AuditOnly, Enforce, or None.
	PolicyAction *string `pulumi:"policyAction"`
	// Service ID
	ServiceId string `pulumi:"serviceId"`
	// Service name.
	ServiceName string `pulumi:"serviceName"`
}

// GovernedServiceItem Properties
type GovernedServiceItemResponseOutput struct{ *pulumi.OutputState }

func (GovernedServiceItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernedServiceItemResponse)(nil)).Elem()
}

func (o GovernedServiceItemResponseOutput) ToGovernedServiceItemResponseOutput() GovernedServiceItemResponseOutput {
	return o
}

func (o GovernedServiceItemResponseOutput) ToGovernedServiceItemResponseOutputWithContext(ctx context.Context) GovernedServiceItemResponseOutput {
	return o
}

// Initiative enforcement (Enabled or Disabled).
func (o GovernedServiceItemResponseOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GovernedServiceItemResponse) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

// Initiatives associated with this service.
func (o GovernedServiceItemResponseOutput) Initiatives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GovernedServiceItemResponse) []string { return v.Initiatives }).(pulumi.StringArrayOutput)
}

// Governance option for this service (Allow, Deny, ExceptionOnly, or NotApplicable).
func (o GovernedServiceItemResponseOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GovernedServiceItemResponse) *string { return v.Option }).(pulumi.StringPtrOutput)
}

// Enforcement mode for policy. AuditOnly, Enforce, or None.
func (o GovernedServiceItemResponseOutput) PolicyAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GovernedServiceItemResponse) *string { return v.PolicyAction }).(pulumi.StringPtrOutput)
}

// Service ID
func (o GovernedServiceItemResponseOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GovernedServiceItemResponse) string { return v.ServiceId }).(pulumi.StringOutput)
}

// Service name.
func (o GovernedServiceItemResponseOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GovernedServiceItemResponse) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GovernedServiceItemResponseArrayOutput struct{ *pulumi.OutputState }

func (GovernedServiceItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GovernedServiceItemResponse)(nil)).Elem()
}

func (o GovernedServiceItemResponseArrayOutput) ToGovernedServiceItemResponseArrayOutput() GovernedServiceItemResponseArrayOutput {
	return o
}

func (o GovernedServiceItemResponseArrayOutput) ToGovernedServiceItemResponseArrayOutputWithContext(ctx context.Context) GovernedServiceItemResponseArrayOutput {
	return o
}

func (o GovernedServiceItemResponseArrayOutput) Index(i pulumi.IntInput) GovernedServiceItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GovernedServiceItemResponse {
		return vs[0].([]GovernedServiceItemResponse)[vs[1].(int)]
	}).(GovernedServiceItemResponseOutput)
}

// Maintenance Mode
type MaintenanceModeConfigurationModel struct {
	// Justification for entering or exiting Maintenance Mode
	Justification *string `pulumi:"justification"`
	// Current mode of Maintenance Mode Configuration
	Mode string `pulumi:"mode"`
	// The user, group or service principal object affected by Maintenance Mode
	Principals []Principal `pulumi:"principals"`
}

// Defaults sets the appropriate defaults for MaintenanceModeConfigurationModel
func (val *MaintenanceModeConfigurationModel) Defaults() *MaintenanceModeConfigurationModel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Justification == nil {
		justification_ := "Off"
		tmp.Justification = &justification_
	}
	if utilities.IsZero(tmp.Mode) {
		tmp.Mode = "Off"
	}
	return &tmp
}

// MaintenanceModeConfigurationModelInput is an input type that accepts MaintenanceModeConfigurationModelArgs and MaintenanceModeConfigurationModelOutput values.
// You can construct a concrete instance of `MaintenanceModeConfigurationModelInput` via:
//
//	MaintenanceModeConfigurationModelArgs{...}
type MaintenanceModeConfigurationModelInput interface {
	pulumi.Input

	ToMaintenanceModeConfigurationModelOutput() MaintenanceModeConfigurationModelOutput
	ToMaintenanceModeConfigurationModelOutputWithContext(context.Context) MaintenanceModeConfigurationModelOutput
}

// Maintenance Mode
type MaintenanceModeConfigurationModelArgs struct {
	// Justification for entering or exiting Maintenance Mode
	Justification pulumi.StringPtrInput `pulumi:"justification"`
	// Current mode of Maintenance Mode Configuration
	Mode pulumi.StringInput `pulumi:"mode"`
	// The user, group or service principal object affected by Maintenance Mode
	Principals PrincipalArrayInput `pulumi:"principals"`
}

// Defaults sets the appropriate defaults for MaintenanceModeConfigurationModelArgs
func (val *MaintenanceModeConfigurationModelArgs) Defaults() *MaintenanceModeConfigurationModelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Justification == nil {
		tmp.Justification = pulumi.StringPtr("Off")
	}
	if tmp.Mode == nil {
		tmp.Mode = pulumi.String("Off")
	}
	return &tmp
}
func (MaintenanceModeConfigurationModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceModeConfigurationModel)(nil)).Elem()
}

func (i MaintenanceModeConfigurationModelArgs) ToMaintenanceModeConfigurationModelOutput() MaintenanceModeConfigurationModelOutput {
	return i.ToMaintenanceModeConfigurationModelOutputWithContext(context.Background())
}

func (i MaintenanceModeConfigurationModelArgs) ToMaintenanceModeConfigurationModelOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceModeConfigurationModelOutput)
}

func (i MaintenanceModeConfigurationModelArgs) ToMaintenanceModeConfigurationModelPtrOutput() MaintenanceModeConfigurationModelPtrOutput {
	return i.ToMaintenanceModeConfigurationModelPtrOutputWithContext(context.Background())
}

func (i MaintenanceModeConfigurationModelArgs) ToMaintenanceModeConfigurationModelPtrOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceModeConfigurationModelOutput).ToMaintenanceModeConfigurationModelPtrOutputWithContext(ctx)
}

// MaintenanceModeConfigurationModelPtrInput is an input type that accepts MaintenanceModeConfigurationModelArgs, MaintenanceModeConfigurationModelPtr and MaintenanceModeConfigurationModelPtrOutput values.
// You can construct a concrete instance of `MaintenanceModeConfigurationModelPtrInput` via:
//
//	        MaintenanceModeConfigurationModelArgs{...}
//
//	or:
//
//	        nil
type MaintenanceModeConfigurationModelPtrInput interface {
	pulumi.Input

	ToMaintenanceModeConfigurationModelPtrOutput() MaintenanceModeConfigurationModelPtrOutput
	ToMaintenanceModeConfigurationModelPtrOutputWithContext(context.Context) MaintenanceModeConfigurationModelPtrOutput
}

type maintenanceModeConfigurationModelPtrType MaintenanceModeConfigurationModelArgs

func MaintenanceModeConfigurationModelPtr(v *MaintenanceModeConfigurationModelArgs) MaintenanceModeConfigurationModelPtrInput {
	return (*maintenanceModeConfigurationModelPtrType)(v)
}

func (*maintenanceModeConfigurationModelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceModeConfigurationModel)(nil)).Elem()
}

func (i *maintenanceModeConfigurationModelPtrType) ToMaintenanceModeConfigurationModelPtrOutput() MaintenanceModeConfigurationModelPtrOutput {
	return i.ToMaintenanceModeConfigurationModelPtrOutputWithContext(context.Background())
}

func (i *maintenanceModeConfigurationModelPtrType) ToMaintenanceModeConfigurationModelPtrOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceModeConfigurationModelPtrOutput)
}

// Maintenance Mode
type MaintenanceModeConfigurationModelOutput struct{ *pulumi.OutputState }

func (MaintenanceModeConfigurationModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceModeConfigurationModel)(nil)).Elem()
}

func (o MaintenanceModeConfigurationModelOutput) ToMaintenanceModeConfigurationModelOutput() MaintenanceModeConfigurationModelOutput {
	return o
}

func (o MaintenanceModeConfigurationModelOutput) ToMaintenanceModeConfigurationModelOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelOutput {
	return o
}

func (o MaintenanceModeConfigurationModelOutput) ToMaintenanceModeConfigurationModelPtrOutput() MaintenanceModeConfigurationModelPtrOutput {
	return o.ToMaintenanceModeConfigurationModelPtrOutputWithContext(context.Background())
}

func (o MaintenanceModeConfigurationModelOutput) ToMaintenanceModeConfigurationModelPtrOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceModeConfigurationModel) *MaintenanceModeConfigurationModel {
		return &v
	}).(MaintenanceModeConfigurationModelPtrOutput)
}

// Justification for entering or exiting Maintenance Mode
func (o MaintenanceModeConfigurationModelOutput) Justification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceModeConfigurationModel) *string { return v.Justification }).(pulumi.StringPtrOutput)
}

// Current mode of Maintenance Mode Configuration
func (o MaintenanceModeConfigurationModelOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceModeConfigurationModel) string { return v.Mode }).(pulumi.StringOutput)
}

// The user, group or service principal object affected by Maintenance Mode
func (o MaintenanceModeConfigurationModelOutput) Principals() PrincipalArrayOutput {
	return o.ApplyT(func(v MaintenanceModeConfigurationModel) []Principal { return v.Principals }).(PrincipalArrayOutput)
}

type MaintenanceModeConfigurationModelPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceModeConfigurationModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceModeConfigurationModel)(nil)).Elem()
}

func (o MaintenanceModeConfigurationModelPtrOutput) ToMaintenanceModeConfigurationModelPtrOutput() MaintenanceModeConfigurationModelPtrOutput {
	return o
}

func (o MaintenanceModeConfigurationModelPtrOutput) ToMaintenanceModeConfigurationModelPtrOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelPtrOutput {
	return o
}

func (o MaintenanceModeConfigurationModelPtrOutput) Elem() MaintenanceModeConfigurationModelOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModel) MaintenanceModeConfigurationModel {
		if v != nil {
			return *v
		}
		var ret MaintenanceModeConfigurationModel
		return ret
	}).(MaintenanceModeConfigurationModelOutput)
}

// Justification for entering or exiting Maintenance Mode
func (o MaintenanceModeConfigurationModelPtrOutput) Justification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModel) *string {
		if v == nil {
			return nil
		}
		return v.Justification
	}).(pulumi.StringPtrOutput)
}

// Current mode of Maintenance Mode Configuration
func (o MaintenanceModeConfigurationModelPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModel) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The user, group or service principal object affected by Maintenance Mode
func (o MaintenanceModeConfigurationModelPtrOutput) Principals() PrincipalArrayOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModel) []Principal {
		if v == nil {
			return nil
		}
		return v.Principals
	}).(PrincipalArrayOutput)
}

// Maintenance Mode
type MaintenanceModeConfigurationModelResponse struct {
	// Justification for entering or exiting Maintenance Mode
	Justification *string `pulumi:"justification"`
	// Current mode of Maintenance Mode Configuration
	Mode string `pulumi:"mode"`
	// The user, group or service principal object affected by Maintenance Mode
	Principals []PrincipalResponse `pulumi:"principals"`
}

// Defaults sets the appropriate defaults for MaintenanceModeConfigurationModelResponse
func (val *MaintenanceModeConfigurationModelResponse) Defaults() *MaintenanceModeConfigurationModelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Justification == nil {
		justification_ := "Off"
		tmp.Justification = &justification_
	}
	if utilities.IsZero(tmp.Mode) {
		tmp.Mode = "Off"
	}
	return &tmp
}

// Maintenance Mode
type MaintenanceModeConfigurationModelResponseOutput struct{ *pulumi.OutputState }

func (MaintenanceModeConfigurationModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceModeConfigurationModelResponse)(nil)).Elem()
}

func (o MaintenanceModeConfigurationModelResponseOutput) ToMaintenanceModeConfigurationModelResponseOutput() MaintenanceModeConfigurationModelResponseOutput {
	return o
}

func (o MaintenanceModeConfigurationModelResponseOutput) ToMaintenanceModeConfigurationModelResponseOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelResponseOutput {
	return o
}

// Justification for entering or exiting Maintenance Mode
func (o MaintenanceModeConfigurationModelResponseOutput) Justification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceModeConfigurationModelResponse) *string { return v.Justification }).(pulumi.StringPtrOutput)
}

// Current mode of Maintenance Mode Configuration
func (o MaintenanceModeConfigurationModelResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceModeConfigurationModelResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// The user, group or service principal object affected by Maintenance Mode
func (o MaintenanceModeConfigurationModelResponseOutput) Principals() PrincipalResponseArrayOutput {
	return o.ApplyT(func(v MaintenanceModeConfigurationModelResponse) []PrincipalResponse { return v.Principals }).(PrincipalResponseArrayOutput)
}

type MaintenanceModeConfigurationModelResponsePtrOutput struct{ *pulumi.OutputState }

func (MaintenanceModeConfigurationModelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceModeConfigurationModelResponse)(nil)).Elem()
}

func (o MaintenanceModeConfigurationModelResponsePtrOutput) ToMaintenanceModeConfigurationModelResponsePtrOutput() MaintenanceModeConfigurationModelResponsePtrOutput {
	return o
}

func (o MaintenanceModeConfigurationModelResponsePtrOutput) ToMaintenanceModeConfigurationModelResponsePtrOutputWithContext(ctx context.Context) MaintenanceModeConfigurationModelResponsePtrOutput {
	return o
}

func (o MaintenanceModeConfigurationModelResponsePtrOutput) Elem() MaintenanceModeConfigurationModelResponseOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModelResponse) MaintenanceModeConfigurationModelResponse {
		if v != nil {
			return *v
		}
		var ret MaintenanceModeConfigurationModelResponse
		return ret
	}).(MaintenanceModeConfigurationModelResponseOutput)
}

// Justification for entering or exiting Maintenance Mode
func (o MaintenanceModeConfigurationModelResponsePtrOutput) Justification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Justification
	}).(pulumi.StringPtrOutput)
}

// Current mode of Maintenance Mode Configuration
func (o MaintenanceModeConfigurationModelResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The user, group or service principal object affected by Maintenance Mode
func (o MaintenanceModeConfigurationModelResponsePtrOutput) Principals() PrincipalResponseArrayOutput {
	return o.ApplyT(func(v *MaintenanceModeConfigurationModelResponse) []PrincipalResponse {
		if v == nil {
			return nil
		}
		return v.Principals
	}).(PrincipalResponseArrayOutput)
}

// Managed-On-Behalf-Of configuration properties. This configuration exists for the resources where a resource provider manages those resources on behalf of the resource owner.
type ManagedOnBehalfOfConfigurationResponse struct {
	// Managed-On-Behalf-Of broker resources
	MoboBrokerResources []MoboBrokerResourceResponse `pulumi:"moboBrokerResources"`
}

// Managed-On-Behalf-Of configuration properties. This configuration exists for the resources where a resource provider manages those resources on behalf of the resource owner.
type ManagedOnBehalfOfConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ManagedOnBehalfOfConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnBehalfOfConfigurationResponse)(nil)).Elem()
}

func (o ManagedOnBehalfOfConfigurationResponseOutput) ToManagedOnBehalfOfConfigurationResponseOutput() ManagedOnBehalfOfConfigurationResponseOutput {
	return o
}

func (o ManagedOnBehalfOfConfigurationResponseOutput) ToManagedOnBehalfOfConfigurationResponseOutputWithContext(ctx context.Context) ManagedOnBehalfOfConfigurationResponseOutput {
	return o
}

// Managed-On-Behalf-Of broker resources
func (o ManagedOnBehalfOfConfigurationResponseOutput) MoboBrokerResources() MoboBrokerResourceResponseArrayOutput {
	return o.ApplyT(func(v ManagedOnBehalfOfConfigurationResponse) []MoboBrokerResourceResponse {
		return v.MoboBrokerResources
	}).(MoboBrokerResourceResponseArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Approver Metadata for approvals request.
type MandatoryApprover struct {
	// EntraId of the approver
	ApproverEntraId string `pulumi:"approverEntraId"`
}

// MandatoryApproverInput is an input type that accepts MandatoryApproverArgs and MandatoryApproverOutput values.
// You can construct a concrete instance of `MandatoryApproverInput` via:
//
//	MandatoryApproverArgs{...}
type MandatoryApproverInput interface {
	pulumi.Input

	ToMandatoryApproverOutput() MandatoryApproverOutput
	ToMandatoryApproverOutputWithContext(context.Context) MandatoryApproverOutput
}

// Approver Metadata for approvals request.
type MandatoryApproverArgs struct {
	// EntraId of the approver
	ApproverEntraId pulumi.StringInput `pulumi:"approverEntraId"`
}

func (MandatoryApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MandatoryApprover)(nil)).Elem()
}

func (i MandatoryApproverArgs) ToMandatoryApproverOutput() MandatoryApproverOutput {
	return i.ToMandatoryApproverOutputWithContext(context.Background())
}

func (i MandatoryApproverArgs) ToMandatoryApproverOutputWithContext(ctx context.Context) MandatoryApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MandatoryApproverOutput)
}

// MandatoryApproverArrayInput is an input type that accepts MandatoryApproverArray and MandatoryApproverArrayOutput values.
// You can construct a concrete instance of `MandatoryApproverArrayInput` via:
//
//	MandatoryApproverArray{ MandatoryApproverArgs{...} }
type MandatoryApproverArrayInput interface {
	pulumi.Input

	ToMandatoryApproverArrayOutput() MandatoryApproverArrayOutput
	ToMandatoryApproverArrayOutputWithContext(context.Context) MandatoryApproverArrayOutput
}

type MandatoryApproverArray []MandatoryApproverInput

func (MandatoryApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MandatoryApprover)(nil)).Elem()
}

func (i MandatoryApproverArray) ToMandatoryApproverArrayOutput() MandatoryApproverArrayOutput {
	return i.ToMandatoryApproverArrayOutputWithContext(context.Background())
}

func (i MandatoryApproverArray) ToMandatoryApproverArrayOutputWithContext(ctx context.Context) MandatoryApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MandatoryApproverArrayOutput)
}

// Approver Metadata for approvals request.
type MandatoryApproverOutput struct{ *pulumi.OutputState }

func (MandatoryApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MandatoryApprover)(nil)).Elem()
}

func (o MandatoryApproverOutput) ToMandatoryApproverOutput() MandatoryApproverOutput {
	return o
}

func (o MandatoryApproverOutput) ToMandatoryApproverOutputWithContext(ctx context.Context) MandatoryApproverOutput {
	return o
}

// EntraId of the approver
func (o MandatoryApproverOutput) ApproverEntraId() pulumi.StringOutput {
	return o.ApplyT(func(v MandatoryApprover) string { return v.ApproverEntraId }).(pulumi.StringOutput)
}

type MandatoryApproverArrayOutput struct{ *pulumi.OutputState }

func (MandatoryApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MandatoryApprover)(nil)).Elem()
}

func (o MandatoryApproverArrayOutput) ToMandatoryApproverArrayOutput() MandatoryApproverArrayOutput {
	return o
}

func (o MandatoryApproverArrayOutput) ToMandatoryApproverArrayOutputWithContext(ctx context.Context) MandatoryApproverArrayOutput {
	return o
}

func (o MandatoryApproverArrayOutput) Index(i pulumi.IntInput) MandatoryApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MandatoryApprover {
		return vs[0].([]MandatoryApprover)[vs[1].(int)]
	}).(MandatoryApproverOutput)
}

// Approver Metadata for approvals request.
type MandatoryApproverResponse struct {
	// EntraId of the approver
	ApproverEntraId string `pulumi:"approverEntraId"`
}

// Approver Metadata for approvals request.
type MandatoryApproverResponseOutput struct{ *pulumi.OutputState }

func (MandatoryApproverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MandatoryApproverResponse)(nil)).Elem()
}

func (o MandatoryApproverResponseOutput) ToMandatoryApproverResponseOutput() MandatoryApproverResponseOutput {
	return o
}

func (o MandatoryApproverResponseOutput) ToMandatoryApproverResponseOutputWithContext(ctx context.Context) MandatoryApproverResponseOutput {
	return o
}

// EntraId of the approver
func (o MandatoryApproverResponseOutput) ApproverEntraId() pulumi.StringOutput {
	return o.ApplyT(func(v MandatoryApproverResponse) string { return v.ApproverEntraId }).(pulumi.StringOutput)
}

type MandatoryApproverResponseArrayOutput struct{ *pulumi.OutputState }

func (MandatoryApproverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MandatoryApproverResponse)(nil)).Elem()
}

func (o MandatoryApproverResponseArrayOutput) ToMandatoryApproverResponseArrayOutput() MandatoryApproverResponseArrayOutput {
	return o
}

func (o MandatoryApproverResponseArrayOutput) ToMandatoryApproverResponseArrayOutputWithContext(ctx context.Context) MandatoryApproverResponseArrayOutput {
	return o
}

func (o MandatoryApproverResponseArrayOutput) Index(i pulumi.IntInput) MandatoryApproverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MandatoryApproverResponse {
		return vs[0].([]MandatoryApproverResponse)[vs[1].(int)]
	}).(MandatoryApproverResponseOutput)
}

// Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.
type MoboBrokerResourceResponse struct {
	// Resource identifier of a Managed-On-Behalf-Of broker resource
	Id *string `pulumi:"id"`
}

// Managed-On-Behalf-Of broker resource. This resource is created by the Resource Provider to manage some resources on behalf of the user.
type MoboBrokerResourceResponseOutput struct{ *pulumi.OutputState }

func (MoboBrokerResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoboBrokerResourceResponse)(nil)).Elem()
}

func (o MoboBrokerResourceResponseOutput) ToMoboBrokerResourceResponseOutput() MoboBrokerResourceResponseOutput {
	return o
}

func (o MoboBrokerResourceResponseOutput) ToMoboBrokerResourceResponseOutputWithContext(ctx context.Context) MoboBrokerResourceResponseOutput {
	return o
}

// Resource identifier of a Managed-On-Behalf-Of broker resource
func (o MoboBrokerResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoboBrokerResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type MoboBrokerResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (MoboBrokerResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoboBrokerResourceResponse)(nil)).Elem()
}

func (o MoboBrokerResourceResponseArrayOutput) ToMoboBrokerResourceResponseArrayOutput() MoboBrokerResourceResponseArrayOutput {
	return o
}

func (o MoboBrokerResourceResponseArrayOutput) ToMoboBrokerResourceResponseArrayOutputWithContext(ctx context.Context) MoboBrokerResourceResponseArrayOutput {
	return o
}

func (o MoboBrokerResourceResponseArrayOutput) Index(i pulumi.IntInput) MoboBrokerResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoboBrokerResourceResponse {
		return vs[0].([]MoboBrokerResourceResponse)[vs[1].(int)]
	}).(MoboBrokerResourceResponseOutput)
}

// Principal for maintenance mode or role assignments
type Principal struct {
	// The object id associated with the principal
	Id string `pulumi:"id"`
	// The type of the object id. We currently allow users, groups, and service principals
	Type string `pulumi:"type"`
}

// PrincipalInput is an input type that accepts PrincipalArgs and PrincipalOutput values.
// You can construct a concrete instance of `PrincipalInput` via:
//
//	PrincipalArgs{...}
type PrincipalInput interface {
	pulumi.Input

	ToPrincipalOutput() PrincipalOutput
	ToPrincipalOutputWithContext(context.Context) PrincipalOutput
}

// Principal for maintenance mode or role assignments
type PrincipalArgs struct {
	// The object id associated with the principal
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the object id. We currently allow users, groups, and service principals
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Principal)(nil)).Elem()
}

func (i PrincipalArgs) ToPrincipalOutput() PrincipalOutput {
	return i.ToPrincipalOutputWithContext(context.Background())
}

func (i PrincipalArgs) ToPrincipalOutputWithContext(ctx context.Context) PrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalOutput)
}

// PrincipalArrayInput is an input type that accepts PrincipalArray and PrincipalArrayOutput values.
// You can construct a concrete instance of `PrincipalArrayInput` via:
//
//	PrincipalArray{ PrincipalArgs{...} }
type PrincipalArrayInput interface {
	pulumi.Input

	ToPrincipalArrayOutput() PrincipalArrayOutput
	ToPrincipalArrayOutputWithContext(context.Context) PrincipalArrayOutput
}

type PrincipalArray []PrincipalInput

func (PrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Principal)(nil)).Elem()
}

func (i PrincipalArray) ToPrincipalArrayOutput() PrincipalArrayOutput {
	return i.ToPrincipalArrayOutputWithContext(context.Background())
}

func (i PrincipalArray) ToPrincipalArrayOutputWithContext(ctx context.Context) PrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalArrayOutput)
}

// Principal for maintenance mode or role assignments
type PrincipalOutput struct{ *pulumi.OutputState }

func (PrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Principal)(nil)).Elem()
}

func (o PrincipalOutput) ToPrincipalOutput() PrincipalOutput {
	return o
}

func (o PrincipalOutput) ToPrincipalOutputWithContext(ctx context.Context) PrincipalOutput {
	return o
}

// The object id associated with the principal
func (o PrincipalOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Principal) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the object id. We currently allow users, groups, and service principals
func (o PrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Principal) string { return v.Type }).(pulumi.StringOutput)
}

type PrincipalArrayOutput struct{ *pulumi.OutputState }

func (PrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Principal)(nil)).Elem()
}

func (o PrincipalArrayOutput) ToPrincipalArrayOutput() PrincipalArrayOutput {
	return o
}

func (o PrincipalArrayOutput) ToPrincipalArrayOutputWithContext(ctx context.Context) PrincipalArrayOutput {
	return o
}

func (o PrincipalArrayOutput) Index(i pulumi.IntInput) PrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Principal {
		return vs[0].([]Principal)[vs[1].(int)]
	}).(PrincipalOutput)
}

// Principal for maintenance mode or role assignments
type PrincipalResponse struct {
	// The object id associated with the principal
	Id string `pulumi:"id"`
	// The type of the object id. We currently allow users, groups, and service principals
	Type string `pulumi:"type"`
}

// Principal for maintenance mode or role assignments
type PrincipalResponseOutput struct{ *pulumi.OutputState }

func (PrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalResponse)(nil)).Elem()
}

func (o PrincipalResponseOutput) ToPrincipalResponseOutput() PrincipalResponseOutput {
	return o
}

func (o PrincipalResponseOutput) ToPrincipalResponseOutputWithContext(ctx context.Context) PrincipalResponseOutput {
	return o
}

// The object id associated with the principal
func (o PrincipalResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrincipalResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the object id. We currently allow users, groups, and service principals
func (o PrincipalResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrincipalResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrincipalResponseArrayOutput struct{ *pulumi.OutputState }

func (PrincipalResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrincipalResponse)(nil)).Elem()
}

func (o PrincipalResponseArrayOutput) ToPrincipalResponseArrayOutput() PrincipalResponseArrayOutput {
	return o
}

func (o PrincipalResponseArrayOutput) ToPrincipalResponseArrayOutputWithContext(ctx context.Context) PrincipalResponseArrayOutput {
	return o
}

func (o PrincipalResponseArrayOutput) Index(i pulumi.IntInput) PrincipalResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrincipalResponse {
		return vs[0].([]PrincipalResponse)[vs[1].(int)]
	}).(PrincipalResponseOutput)
}

// Request Metadata for approvals request.
type RequestMetadata struct {
	// Payload to be sent upon any action on approval request
	ApprovalCallbackPayload *string `pulumi:"approvalCallbackPayload"`
	// Route name for the approval callback
	ApprovalCallbackRoute *string `pulumi:"approvalCallbackRoute"`
	// Status of the approval. Uses ApprovalStatus enum.
	ApprovalStatus *string `pulumi:"approvalStatus"`
	// Resource Action of the item being approved or declined.
	ResourceAction string `pulumi:"resourceAction"`
}

// Defaults sets the appropriate defaults for RequestMetadata
func (val *RequestMetadata) Defaults() *RequestMetadata {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ApprovalStatus == nil {
		approvalStatus_ := "Pending"
		tmp.ApprovalStatus = &approvalStatus_
	}
	return &tmp
}

// RequestMetadataInput is an input type that accepts RequestMetadataArgs and RequestMetadataOutput values.
// You can construct a concrete instance of `RequestMetadataInput` via:
//
//	RequestMetadataArgs{...}
type RequestMetadataInput interface {
	pulumi.Input

	ToRequestMetadataOutput() RequestMetadataOutput
	ToRequestMetadataOutputWithContext(context.Context) RequestMetadataOutput
}

// Request Metadata for approvals request.
type RequestMetadataArgs struct {
	// Payload to be sent upon any action on approval request
	ApprovalCallbackPayload pulumi.StringPtrInput `pulumi:"approvalCallbackPayload"`
	// Route name for the approval callback
	ApprovalCallbackRoute pulumi.StringPtrInput `pulumi:"approvalCallbackRoute"`
	// Status of the approval. Uses ApprovalStatus enum.
	ApprovalStatus pulumi.StringPtrInput `pulumi:"approvalStatus"`
	// Resource Action of the item being approved or declined.
	ResourceAction pulumi.StringInput `pulumi:"resourceAction"`
}

// Defaults sets the appropriate defaults for RequestMetadataArgs
func (val *RequestMetadataArgs) Defaults() *RequestMetadataArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ApprovalStatus == nil {
		tmp.ApprovalStatus = pulumi.StringPtr("Pending")
	}
	return &tmp
}
func (RequestMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMetadata)(nil)).Elem()
}

func (i RequestMetadataArgs) ToRequestMetadataOutput() RequestMetadataOutput {
	return i.ToRequestMetadataOutputWithContext(context.Background())
}

func (i RequestMetadataArgs) ToRequestMetadataOutputWithContext(ctx context.Context) RequestMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestMetadataOutput)
}

// Request Metadata for approvals request.
type RequestMetadataOutput struct{ *pulumi.OutputState }

func (RequestMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMetadata)(nil)).Elem()
}

func (o RequestMetadataOutput) ToRequestMetadataOutput() RequestMetadataOutput {
	return o
}

func (o RequestMetadataOutput) ToRequestMetadataOutputWithContext(ctx context.Context) RequestMetadataOutput {
	return o
}

// Payload to be sent upon any action on approval request
func (o RequestMetadataOutput) ApprovalCallbackPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMetadata) *string { return v.ApprovalCallbackPayload }).(pulumi.StringPtrOutput)
}

// Route name for the approval callback
func (o RequestMetadataOutput) ApprovalCallbackRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMetadata) *string { return v.ApprovalCallbackRoute }).(pulumi.StringPtrOutput)
}

// Status of the approval. Uses ApprovalStatus enum.
func (o RequestMetadataOutput) ApprovalStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMetadata) *string { return v.ApprovalStatus }).(pulumi.StringPtrOutput)
}

// Resource Action of the item being approved or declined.
func (o RequestMetadataOutput) ResourceAction() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMetadata) string { return v.ResourceAction }).(pulumi.StringOutput)
}

// Request Metadata for approvals request.
type RequestMetadataResponse struct {
	// Payload to be sent upon any action on approval request
	ApprovalCallbackPayload *string `pulumi:"approvalCallbackPayload"`
	// Route name for the approval callback
	ApprovalCallbackRoute *string `pulumi:"approvalCallbackRoute"`
	// Status of the approval. Uses ApprovalStatus enum.
	ApprovalStatus *string `pulumi:"approvalStatus"`
	// Resource Action of the item being approved or declined.
	ResourceAction string `pulumi:"resourceAction"`
}

// Defaults sets the appropriate defaults for RequestMetadataResponse
func (val *RequestMetadataResponse) Defaults() *RequestMetadataResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ApprovalStatus == nil {
		approvalStatus_ := "Pending"
		tmp.ApprovalStatus = &approvalStatus_
	}
	return &tmp
}

// Request Metadata for approvals request.
type RequestMetadataResponseOutput struct{ *pulumi.OutputState }

func (RequestMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMetadataResponse)(nil)).Elem()
}

func (o RequestMetadataResponseOutput) ToRequestMetadataResponseOutput() RequestMetadataResponseOutput {
	return o
}

func (o RequestMetadataResponseOutput) ToRequestMetadataResponseOutputWithContext(ctx context.Context) RequestMetadataResponseOutput {
	return o
}

// Payload to be sent upon any action on approval request
func (o RequestMetadataResponseOutput) ApprovalCallbackPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMetadataResponse) *string { return v.ApprovalCallbackPayload }).(pulumi.StringPtrOutput)
}

// Route name for the approval callback
func (o RequestMetadataResponseOutput) ApprovalCallbackRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMetadataResponse) *string { return v.ApprovalCallbackRoute }).(pulumi.StringPtrOutput)
}

// Status of the approval. Uses ApprovalStatus enum.
func (o RequestMetadataResponseOutput) ApprovalStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMetadataResponse) *string { return v.ApprovalStatus }).(pulumi.StringPtrOutput)
}

// Resource Action of the item being approved or declined.
func (o RequestMetadataResponseOutput) ResourceAction() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMetadataResponse) string { return v.ResourceAction }).(pulumi.StringOutput)
}

// Role assignment item that indicates which principals should be assigned this role definition
type RoleAssignmentItem struct {
	// List of principal IDs to which to assign this role definition
	Principals []Principal `pulumi:"principals"`
	// Role definition identifier
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// RoleAssignmentItemInput is an input type that accepts RoleAssignmentItemArgs and RoleAssignmentItemOutput values.
// You can construct a concrete instance of `RoleAssignmentItemInput` via:
//
//	RoleAssignmentItemArgs{...}
type RoleAssignmentItemInput interface {
	pulumi.Input

	ToRoleAssignmentItemOutput() RoleAssignmentItemOutput
	ToRoleAssignmentItemOutputWithContext(context.Context) RoleAssignmentItemOutput
}

// Role assignment item that indicates which principals should be assigned this role definition
type RoleAssignmentItemArgs struct {
	// List of principal IDs to which to assign this role definition
	Principals PrincipalArrayInput `pulumi:"principals"`
	// Role definition identifier
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (RoleAssignmentItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentItem)(nil)).Elem()
}

func (i RoleAssignmentItemArgs) ToRoleAssignmentItemOutput() RoleAssignmentItemOutput {
	return i.ToRoleAssignmentItemOutputWithContext(context.Background())
}

func (i RoleAssignmentItemArgs) ToRoleAssignmentItemOutputWithContext(ctx context.Context) RoleAssignmentItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentItemOutput)
}

// RoleAssignmentItemArrayInput is an input type that accepts RoleAssignmentItemArray and RoleAssignmentItemArrayOutput values.
// You can construct a concrete instance of `RoleAssignmentItemArrayInput` via:
//
//	RoleAssignmentItemArray{ RoleAssignmentItemArgs{...} }
type RoleAssignmentItemArrayInput interface {
	pulumi.Input

	ToRoleAssignmentItemArrayOutput() RoleAssignmentItemArrayOutput
	ToRoleAssignmentItemArrayOutputWithContext(context.Context) RoleAssignmentItemArrayOutput
}

type RoleAssignmentItemArray []RoleAssignmentItemInput

func (RoleAssignmentItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentItem)(nil)).Elem()
}

func (i RoleAssignmentItemArray) ToRoleAssignmentItemArrayOutput() RoleAssignmentItemArrayOutput {
	return i.ToRoleAssignmentItemArrayOutputWithContext(context.Background())
}

func (i RoleAssignmentItemArray) ToRoleAssignmentItemArrayOutputWithContext(ctx context.Context) RoleAssignmentItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentItemArrayOutput)
}

// Role assignment item that indicates which principals should be assigned this role definition
type RoleAssignmentItemOutput struct{ *pulumi.OutputState }

func (RoleAssignmentItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentItem)(nil)).Elem()
}

func (o RoleAssignmentItemOutput) ToRoleAssignmentItemOutput() RoleAssignmentItemOutput {
	return o
}

func (o RoleAssignmentItemOutput) ToRoleAssignmentItemOutputWithContext(ctx context.Context) RoleAssignmentItemOutput {
	return o
}

// List of principal IDs to which to assign this role definition
func (o RoleAssignmentItemOutput) Principals() PrincipalArrayOutput {
	return o.ApplyT(func(v RoleAssignmentItem) []Principal { return v.Principals }).(PrincipalArrayOutput)
}

// Role definition identifier
func (o RoleAssignmentItemOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleAssignmentItem) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type RoleAssignmentItemArrayOutput struct{ *pulumi.OutputState }

func (RoleAssignmentItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentItem)(nil)).Elem()
}

func (o RoleAssignmentItemArrayOutput) ToRoleAssignmentItemArrayOutput() RoleAssignmentItemArrayOutput {
	return o
}

func (o RoleAssignmentItemArrayOutput) ToRoleAssignmentItemArrayOutputWithContext(ctx context.Context) RoleAssignmentItemArrayOutput {
	return o
}

func (o RoleAssignmentItemArrayOutput) Index(i pulumi.IntInput) RoleAssignmentItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleAssignmentItem {
		return vs[0].([]RoleAssignmentItem)[vs[1].(int)]
	}).(RoleAssignmentItemOutput)
}

// Role assignment item that indicates which principals should be assigned this role definition
type RoleAssignmentItemResponse struct {
	// List of principal IDs to which to assign this role definition
	Principals []PrincipalResponse `pulumi:"principals"`
	// Role definition identifier
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// Role assignment item that indicates which principals should be assigned this role definition
type RoleAssignmentItemResponseOutput struct{ *pulumi.OutputState }

func (RoleAssignmentItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentItemResponse)(nil)).Elem()
}

func (o RoleAssignmentItemResponseOutput) ToRoleAssignmentItemResponseOutput() RoleAssignmentItemResponseOutput {
	return o
}

func (o RoleAssignmentItemResponseOutput) ToRoleAssignmentItemResponseOutputWithContext(ctx context.Context) RoleAssignmentItemResponseOutput {
	return o
}

// List of principal IDs to which to assign this role definition
func (o RoleAssignmentItemResponseOutput) Principals() PrincipalResponseArrayOutput {
	return o.ApplyT(func(v RoleAssignmentItemResponse) []PrincipalResponse { return v.Principals }).(PrincipalResponseArrayOutput)
}

// Role definition identifier
func (o RoleAssignmentItemResponseOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleAssignmentItemResponse) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type RoleAssignmentItemResponseArrayOutput struct{ *pulumi.OutputState }

func (RoleAssignmentItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentItemResponse)(nil)).Elem()
}

func (o RoleAssignmentItemResponseArrayOutput) ToRoleAssignmentItemResponseArrayOutput() RoleAssignmentItemResponseArrayOutput {
	return o
}

func (o RoleAssignmentItemResponseArrayOutput) ToRoleAssignmentItemResponseArrayOutputWithContext(ctx context.Context) RoleAssignmentItemResponseArrayOutput {
	return o
}

func (o RoleAssignmentItemResponseArrayOutput) Index(i pulumi.IntInput) RoleAssignmentItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleAssignmentItemResponse {
		return vs[0].([]RoleAssignmentItemResponse)[vs[1].(int)]
	}).(RoleAssignmentItemResponseOutput)
}

// Subnet Configuration
type SubnetConfiguration struct {
	// Network prefix size.
	NetworkPrefixSize int `pulumi:"networkPrefixSize"`
	// Subnet delegation.
	SubnetDelegation *string `pulumi:"subnetDelegation"`
	// Subnet name.
	SubnetName string `pulumi:"subnetName"`
}

// SubnetConfigurationInput is an input type that accepts SubnetConfigurationArgs and SubnetConfigurationOutput values.
// You can construct a concrete instance of `SubnetConfigurationInput` via:
//
//	SubnetConfigurationArgs{...}
type SubnetConfigurationInput interface {
	pulumi.Input

	ToSubnetConfigurationOutput() SubnetConfigurationOutput
	ToSubnetConfigurationOutputWithContext(context.Context) SubnetConfigurationOutput
}

// Subnet Configuration
type SubnetConfigurationArgs struct {
	// Network prefix size.
	NetworkPrefixSize pulumi.IntInput `pulumi:"networkPrefixSize"`
	// Subnet delegation.
	SubnetDelegation pulumi.StringPtrInput `pulumi:"subnetDelegation"`
	// Subnet name.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
}

func (SubnetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetConfiguration)(nil)).Elem()
}

func (i SubnetConfigurationArgs) ToSubnetConfigurationOutput() SubnetConfigurationOutput {
	return i.ToSubnetConfigurationOutputWithContext(context.Background())
}

func (i SubnetConfigurationArgs) ToSubnetConfigurationOutputWithContext(ctx context.Context) SubnetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetConfigurationOutput)
}

// SubnetConfigurationArrayInput is an input type that accepts SubnetConfigurationArray and SubnetConfigurationArrayOutput values.
// You can construct a concrete instance of `SubnetConfigurationArrayInput` via:
//
//	SubnetConfigurationArray{ SubnetConfigurationArgs{...} }
type SubnetConfigurationArrayInput interface {
	pulumi.Input

	ToSubnetConfigurationArrayOutput() SubnetConfigurationArrayOutput
	ToSubnetConfigurationArrayOutputWithContext(context.Context) SubnetConfigurationArrayOutput
}

type SubnetConfigurationArray []SubnetConfigurationInput

func (SubnetConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetConfiguration)(nil)).Elem()
}

func (i SubnetConfigurationArray) ToSubnetConfigurationArrayOutput() SubnetConfigurationArrayOutput {
	return i.ToSubnetConfigurationArrayOutputWithContext(context.Background())
}

func (i SubnetConfigurationArray) ToSubnetConfigurationArrayOutputWithContext(ctx context.Context) SubnetConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetConfigurationArrayOutput)
}

// Subnet Configuration
type SubnetConfigurationOutput struct{ *pulumi.OutputState }

func (SubnetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetConfiguration)(nil)).Elem()
}

func (o SubnetConfigurationOutput) ToSubnetConfigurationOutput() SubnetConfigurationOutput {
	return o
}

func (o SubnetConfigurationOutput) ToSubnetConfigurationOutputWithContext(ctx context.Context) SubnetConfigurationOutput {
	return o
}

// Network prefix size.
func (o SubnetConfigurationOutput) NetworkPrefixSize() pulumi.IntOutput {
	return o.ApplyT(func(v SubnetConfiguration) int { return v.NetworkPrefixSize }).(pulumi.IntOutput)
}

// Subnet delegation.
func (o SubnetConfigurationOutput) SubnetDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetConfiguration) *string { return v.SubnetDelegation }).(pulumi.StringPtrOutput)
}

// Subnet name.
func (o SubnetConfigurationOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetConfiguration) string { return v.SubnetName }).(pulumi.StringOutput)
}

type SubnetConfigurationArrayOutput struct{ *pulumi.OutputState }

func (SubnetConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetConfiguration)(nil)).Elem()
}

func (o SubnetConfigurationArrayOutput) ToSubnetConfigurationArrayOutput() SubnetConfigurationArrayOutput {
	return o
}

func (o SubnetConfigurationArrayOutput) ToSubnetConfigurationArrayOutputWithContext(ctx context.Context) SubnetConfigurationArrayOutput {
	return o
}

func (o SubnetConfigurationArrayOutput) Index(i pulumi.IntInput) SubnetConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetConfiguration {
		return vs[0].([]SubnetConfiguration)[vs[1].(int)]
	}).(SubnetConfigurationOutput)
}

// Subnet Configuration
type SubnetConfigurationResponse struct {
	// Address prefix.
	AddressPrefix string `pulumi:"addressPrefix"`
	// Network prefix size.
	NetworkPrefixSize int `pulumi:"networkPrefixSize"`
	// Network security group ID.
	NetworkSecurityGroupResourceId string `pulumi:"networkSecurityGroupResourceId"`
	// Subnet delegation.
	SubnetDelegation *string `pulumi:"subnetDelegation"`
	// Subnet name.
	SubnetName string `pulumi:"subnetName"`
	// Subnet Resource ID.
	SubnetResourceId string `pulumi:"subnetResourceId"`
}

// Subnet Configuration
type SubnetConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SubnetConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetConfigurationResponse)(nil)).Elem()
}

func (o SubnetConfigurationResponseOutput) ToSubnetConfigurationResponseOutput() SubnetConfigurationResponseOutput {
	return o
}

func (o SubnetConfigurationResponseOutput) ToSubnetConfigurationResponseOutputWithContext(ctx context.Context) SubnetConfigurationResponseOutput {
	return o
}

// Address prefix.
func (o SubnetConfigurationResponseOutput) AddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetConfigurationResponse) string { return v.AddressPrefix }).(pulumi.StringOutput)
}

// Network prefix size.
func (o SubnetConfigurationResponseOutput) NetworkPrefixSize() pulumi.IntOutput {
	return o.ApplyT(func(v SubnetConfigurationResponse) int { return v.NetworkPrefixSize }).(pulumi.IntOutput)
}

// Network security group ID.
func (o SubnetConfigurationResponseOutput) NetworkSecurityGroupResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetConfigurationResponse) string { return v.NetworkSecurityGroupResourceId }).(pulumi.StringOutput)
}

// Subnet delegation.
func (o SubnetConfigurationResponseOutput) SubnetDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetConfigurationResponse) *string { return v.SubnetDelegation }).(pulumi.StringPtrOutput)
}

// Subnet name.
func (o SubnetConfigurationResponseOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetConfigurationResponse) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Subnet Resource ID.
func (o SubnetConfigurationResponseOutput) SubnetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetConfigurationResponse) string { return v.SubnetResourceId }).(pulumi.StringOutput)
}

type SubnetConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetConfigurationResponse)(nil)).Elem()
}

func (o SubnetConfigurationResponseArrayOutput) ToSubnetConfigurationResponseArrayOutput() SubnetConfigurationResponseArrayOutput {
	return o
}

func (o SubnetConfigurationResponseArrayOutput) ToSubnetConfigurationResponseArrayOutputWithContext(ctx context.Context) SubnetConfigurationResponseArrayOutput {
	return o
}

func (o SubnetConfigurationResponseArrayOutput) Index(i pulumi.IntInput) SubnetConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetConfigurationResponse {
		return vs[0].([]SubnetConfigurationResponse)[vs[1].(int)]
	}).(SubnetConfigurationResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// TransitOption Properties
type TransitOption struct {
	// Transit Option Params
	Params *TransitOptionParams `pulumi:"params"`
	// Transit Option Type.
	Type *string `pulumi:"type"`
}

// TransitOptionInput is an input type that accepts TransitOptionArgs and TransitOptionOutput values.
// You can construct a concrete instance of `TransitOptionInput` via:
//
//	TransitOptionArgs{...}
type TransitOptionInput interface {
	pulumi.Input

	ToTransitOptionOutput() TransitOptionOutput
	ToTransitOptionOutputWithContext(context.Context) TransitOptionOutput
}

// TransitOption Properties
type TransitOptionArgs struct {
	// Transit Option Params
	Params TransitOptionParamsPtrInput `pulumi:"params"`
	// Transit Option Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TransitOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitOption)(nil)).Elem()
}

func (i TransitOptionArgs) ToTransitOptionOutput() TransitOptionOutput {
	return i.ToTransitOptionOutputWithContext(context.Background())
}

func (i TransitOptionArgs) ToTransitOptionOutputWithContext(ctx context.Context) TransitOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitOptionOutput)
}

func (i TransitOptionArgs) ToTransitOptionPtrOutput() TransitOptionPtrOutput {
	return i.ToTransitOptionPtrOutputWithContext(context.Background())
}

func (i TransitOptionArgs) ToTransitOptionPtrOutputWithContext(ctx context.Context) TransitOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitOptionOutput).ToTransitOptionPtrOutputWithContext(ctx)
}

// TransitOptionPtrInput is an input type that accepts TransitOptionArgs, TransitOptionPtr and TransitOptionPtrOutput values.
// You can construct a concrete instance of `TransitOptionPtrInput` via:
//
//	        TransitOptionArgs{...}
//
//	or:
//
//	        nil
type TransitOptionPtrInput interface {
	pulumi.Input

	ToTransitOptionPtrOutput() TransitOptionPtrOutput
	ToTransitOptionPtrOutputWithContext(context.Context) TransitOptionPtrOutput
}

type transitOptionPtrType TransitOptionArgs

func TransitOptionPtr(v *TransitOptionArgs) TransitOptionPtrInput {
	return (*transitOptionPtrType)(v)
}

func (*transitOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitOption)(nil)).Elem()
}

func (i *transitOptionPtrType) ToTransitOptionPtrOutput() TransitOptionPtrOutput {
	return i.ToTransitOptionPtrOutputWithContext(context.Background())
}

func (i *transitOptionPtrType) ToTransitOptionPtrOutputWithContext(ctx context.Context) TransitOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitOptionPtrOutput)
}

// TransitOption Properties
type TransitOptionOutput struct{ *pulumi.OutputState }

func (TransitOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitOption)(nil)).Elem()
}

func (o TransitOptionOutput) ToTransitOptionOutput() TransitOptionOutput {
	return o
}

func (o TransitOptionOutput) ToTransitOptionOutputWithContext(ctx context.Context) TransitOptionOutput {
	return o
}

func (o TransitOptionOutput) ToTransitOptionPtrOutput() TransitOptionPtrOutput {
	return o.ToTransitOptionPtrOutputWithContext(context.Background())
}

func (o TransitOptionOutput) ToTransitOptionPtrOutputWithContext(ctx context.Context) TransitOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitOption) *TransitOption {
		return &v
	}).(TransitOptionPtrOutput)
}

// Transit Option Params
func (o TransitOptionOutput) Params() TransitOptionParamsPtrOutput {
	return o.ApplyT(func(v TransitOption) *TransitOptionParams { return v.Params }).(TransitOptionParamsPtrOutput)
}

// Transit Option Type.
func (o TransitOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TransitOptionPtrOutput struct{ *pulumi.OutputState }

func (TransitOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitOption)(nil)).Elem()
}

func (o TransitOptionPtrOutput) ToTransitOptionPtrOutput() TransitOptionPtrOutput {
	return o
}

func (o TransitOptionPtrOutput) ToTransitOptionPtrOutputWithContext(ctx context.Context) TransitOptionPtrOutput {
	return o
}

func (o TransitOptionPtrOutput) Elem() TransitOptionOutput {
	return o.ApplyT(func(v *TransitOption) TransitOption {
		if v != nil {
			return *v
		}
		var ret TransitOption
		return ret
	}).(TransitOptionOutput)
}

// Transit Option Params
func (o TransitOptionPtrOutput) Params() TransitOptionParamsPtrOutput {
	return o.ApplyT(func(v *TransitOption) *TransitOptionParams {
		if v == nil {
			return nil
		}
		return v.Params
	}).(TransitOptionParamsPtrOutput)
}

// Transit Option Type.
func (o TransitOptionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitOption) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// TransitOptionParams Properties
type TransitOptionParams struct {
	// Transit Option Params remoteVirtualNetworkId.
	RemoteVirtualNetworkId *string `pulumi:"remoteVirtualNetworkId"`
	// Transit Option Params scaleUnits.
	ScaleUnits *float64 `pulumi:"scaleUnits"`
}

// TransitOptionParamsInput is an input type that accepts TransitOptionParamsArgs and TransitOptionParamsOutput values.
// You can construct a concrete instance of `TransitOptionParamsInput` via:
//
//	TransitOptionParamsArgs{...}
type TransitOptionParamsInput interface {
	pulumi.Input

	ToTransitOptionParamsOutput() TransitOptionParamsOutput
	ToTransitOptionParamsOutputWithContext(context.Context) TransitOptionParamsOutput
}

// TransitOptionParams Properties
type TransitOptionParamsArgs struct {
	// Transit Option Params remoteVirtualNetworkId.
	RemoteVirtualNetworkId pulumi.StringPtrInput `pulumi:"remoteVirtualNetworkId"`
	// Transit Option Params scaleUnits.
	ScaleUnits pulumi.Float64PtrInput `pulumi:"scaleUnits"`
}

func (TransitOptionParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitOptionParams)(nil)).Elem()
}

func (i TransitOptionParamsArgs) ToTransitOptionParamsOutput() TransitOptionParamsOutput {
	return i.ToTransitOptionParamsOutputWithContext(context.Background())
}

func (i TransitOptionParamsArgs) ToTransitOptionParamsOutputWithContext(ctx context.Context) TransitOptionParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitOptionParamsOutput)
}

func (i TransitOptionParamsArgs) ToTransitOptionParamsPtrOutput() TransitOptionParamsPtrOutput {
	return i.ToTransitOptionParamsPtrOutputWithContext(context.Background())
}

func (i TransitOptionParamsArgs) ToTransitOptionParamsPtrOutputWithContext(ctx context.Context) TransitOptionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitOptionParamsOutput).ToTransitOptionParamsPtrOutputWithContext(ctx)
}

// TransitOptionParamsPtrInput is an input type that accepts TransitOptionParamsArgs, TransitOptionParamsPtr and TransitOptionParamsPtrOutput values.
// You can construct a concrete instance of `TransitOptionParamsPtrInput` via:
//
//	        TransitOptionParamsArgs{...}
//
//	or:
//
//	        nil
type TransitOptionParamsPtrInput interface {
	pulumi.Input

	ToTransitOptionParamsPtrOutput() TransitOptionParamsPtrOutput
	ToTransitOptionParamsPtrOutputWithContext(context.Context) TransitOptionParamsPtrOutput
}

type transitOptionParamsPtrType TransitOptionParamsArgs

func TransitOptionParamsPtr(v *TransitOptionParamsArgs) TransitOptionParamsPtrInput {
	return (*transitOptionParamsPtrType)(v)
}

func (*transitOptionParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitOptionParams)(nil)).Elem()
}

func (i *transitOptionParamsPtrType) ToTransitOptionParamsPtrOutput() TransitOptionParamsPtrOutput {
	return i.ToTransitOptionParamsPtrOutputWithContext(context.Background())
}

func (i *transitOptionParamsPtrType) ToTransitOptionParamsPtrOutputWithContext(ctx context.Context) TransitOptionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitOptionParamsPtrOutput)
}

// TransitOptionParams Properties
type TransitOptionParamsOutput struct{ *pulumi.OutputState }

func (TransitOptionParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitOptionParams)(nil)).Elem()
}

func (o TransitOptionParamsOutput) ToTransitOptionParamsOutput() TransitOptionParamsOutput {
	return o
}

func (o TransitOptionParamsOutput) ToTransitOptionParamsOutputWithContext(ctx context.Context) TransitOptionParamsOutput {
	return o
}

func (o TransitOptionParamsOutput) ToTransitOptionParamsPtrOutput() TransitOptionParamsPtrOutput {
	return o.ToTransitOptionParamsPtrOutputWithContext(context.Background())
}

func (o TransitOptionParamsOutput) ToTransitOptionParamsPtrOutputWithContext(ctx context.Context) TransitOptionParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitOptionParams) *TransitOptionParams {
		return &v
	}).(TransitOptionParamsPtrOutput)
}

// Transit Option Params remoteVirtualNetworkId.
func (o TransitOptionParamsOutput) RemoteVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitOptionParams) *string { return v.RemoteVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// Transit Option Params scaleUnits.
func (o TransitOptionParamsOutput) ScaleUnits() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TransitOptionParams) *float64 { return v.ScaleUnits }).(pulumi.Float64PtrOutput)
}

type TransitOptionParamsPtrOutput struct{ *pulumi.OutputState }

func (TransitOptionParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitOptionParams)(nil)).Elem()
}

func (o TransitOptionParamsPtrOutput) ToTransitOptionParamsPtrOutput() TransitOptionParamsPtrOutput {
	return o
}

func (o TransitOptionParamsPtrOutput) ToTransitOptionParamsPtrOutputWithContext(ctx context.Context) TransitOptionParamsPtrOutput {
	return o
}

func (o TransitOptionParamsPtrOutput) Elem() TransitOptionParamsOutput {
	return o.ApplyT(func(v *TransitOptionParams) TransitOptionParams {
		if v != nil {
			return *v
		}
		var ret TransitOptionParams
		return ret
	}).(TransitOptionParamsOutput)
}

// Transit Option Params remoteVirtualNetworkId.
func (o TransitOptionParamsPtrOutput) RemoteVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitOptionParams) *string {
		if v == nil {
			return nil
		}
		return v.RemoteVirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Transit Option Params scaleUnits.
func (o TransitOptionParamsPtrOutput) ScaleUnits() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TransitOptionParams) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleUnits
	}).(pulumi.Float64PtrOutput)
}

// TransitOptionParams Properties
type TransitOptionParamsResponse struct {
	// Transit Option Params remoteVirtualNetworkId.
	RemoteVirtualNetworkId *string `pulumi:"remoteVirtualNetworkId"`
	// Transit Option Params scaleUnits.
	ScaleUnits *float64 `pulumi:"scaleUnits"`
}

// TransitOptionParams Properties
type TransitOptionParamsResponseOutput struct{ *pulumi.OutputState }

func (TransitOptionParamsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitOptionParamsResponse)(nil)).Elem()
}

func (o TransitOptionParamsResponseOutput) ToTransitOptionParamsResponseOutput() TransitOptionParamsResponseOutput {
	return o
}

func (o TransitOptionParamsResponseOutput) ToTransitOptionParamsResponseOutputWithContext(ctx context.Context) TransitOptionParamsResponseOutput {
	return o
}

// Transit Option Params remoteVirtualNetworkId.
func (o TransitOptionParamsResponseOutput) RemoteVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitOptionParamsResponse) *string { return v.RemoteVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// Transit Option Params scaleUnits.
func (o TransitOptionParamsResponseOutput) ScaleUnits() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TransitOptionParamsResponse) *float64 { return v.ScaleUnits }).(pulumi.Float64PtrOutput)
}

type TransitOptionParamsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransitOptionParamsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitOptionParamsResponse)(nil)).Elem()
}

func (o TransitOptionParamsResponsePtrOutput) ToTransitOptionParamsResponsePtrOutput() TransitOptionParamsResponsePtrOutput {
	return o
}

func (o TransitOptionParamsResponsePtrOutput) ToTransitOptionParamsResponsePtrOutputWithContext(ctx context.Context) TransitOptionParamsResponsePtrOutput {
	return o
}

func (o TransitOptionParamsResponsePtrOutput) Elem() TransitOptionParamsResponseOutput {
	return o.ApplyT(func(v *TransitOptionParamsResponse) TransitOptionParamsResponse {
		if v != nil {
			return *v
		}
		var ret TransitOptionParamsResponse
		return ret
	}).(TransitOptionParamsResponseOutput)
}

// Transit Option Params remoteVirtualNetworkId.
func (o TransitOptionParamsResponsePtrOutput) RemoteVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitOptionParamsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RemoteVirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Transit Option Params scaleUnits.
func (o TransitOptionParamsResponsePtrOutput) ScaleUnits() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TransitOptionParamsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleUnits
	}).(pulumi.Float64PtrOutput)
}

// TransitOption Properties
type TransitOptionResponse struct {
	// Transit Option Params
	Params *TransitOptionParamsResponse `pulumi:"params"`
	// Transit Option Type.
	Type *string `pulumi:"type"`
}

// TransitOption Properties
type TransitOptionResponseOutput struct{ *pulumi.OutputState }

func (TransitOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitOptionResponse)(nil)).Elem()
}

func (o TransitOptionResponseOutput) ToTransitOptionResponseOutput() TransitOptionResponseOutput {
	return o
}

func (o TransitOptionResponseOutput) ToTransitOptionResponseOutputWithContext(ctx context.Context) TransitOptionResponseOutput {
	return o
}

// Transit Option Params
func (o TransitOptionResponseOutput) Params() TransitOptionParamsResponsePtrOutput {
	return o.ApplyT(func(v TransitOptionResponse) *TransitOptionParamsResponse { return v.Params }).(TransitOptionParamsResponsePtrOutput)
}

// Transit Option Type.
func (o TransitOptionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitOptionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TransitOptionResponsePtrOutput struct{ *pulumi.OutputState }

func (TransitOptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitOptionResponse)(nil)).Elem()
}

func (o TransitOptionResponsePtrOutput) ToTransitOptionResponsePtrOutput() TransitOptionResponsePtrOutput {
	return o
}

func (o TransitOptionResponsePtrOutput) ToTransitOptionResponsePtrOutputWithContext(ctx context.Context) TransitOptionResponsePtrOutput {
	return o
}

func (o TransitOptionResponsePtrOutput) Elem() TransitOptionResponseOutput {
	return o.ApplyT(func(v *TransitOptionResponse) TransitOptionResponse {
		if v != nil {
			return *v
		}
		var ret TransitOptionResponse
		return ret
	}).(TransitOptionResponseOutput)
}

// Transit Option Params
func (o TransitOptionResponsePtrOutput) Params() TransitOptionParamsResponsePtrOutput {
	return o.ApplyT(func(v *TransitOptionResponse) *TransitOptionParamsResponse {
		if v == nil {
			return nil
		}
		return v.Params
	}).(TransitOptionParamsResponsePtrOutput)
}

// Transit Option Type.
func (o TransitOptionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitOptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApprovalSettingsOutput{})
	pulumi.RegisterOutputType(ApprovalSettingsPtrOutput{})
	pulumi.RegisterOutputType(ApprovalSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApprovalSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApproverOutput{})
	pulumi.RegisterOutputType(ApproverArrayOutput{})
	pulumi.RegisterOutputType(ApproverResponseOutput{})
	pulumi.RegisterOutputType(ApproverResponseArrayOutput{})
	pulumi.RegisterOutputType(CommunityEndpointDestinationRuleOutput{})
	pulumi.RegisterOutputType(CommunityEndpointDestinationRuleArrayOutput{})
	pulumi.RegisterOutputType(CommunityEndpointDestinationRuleResponseOutput{})
	pulumi.RegisterOutputType(CommunityEndpointDestinationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(EnclaveAddressSpacesModelResponseOutput{})
	pulumi.RegisterOutputType(EnclaveDefaultSettingsModelOutput{})
	pulumi.RegisterOutputType(EnclaveDefaultSettingsModelPtrOutput{})
	pulumi.RegisterOutputType(EnclaveDefaultSettingsModelResponseOutput{})
	pulumi.RegisterOutputType(EnclaveDefaultSettingsModelResponsePtrOutput{})
	pulumi.RegisterOutputType(EnclaveEndpointDestinationRuleOutput{})
	pulumi.RegisterOutputType(EnclaveEndpointDestinationRuleArrayOutput{})
	pulumi.RegisterOutputType(EnclaveEndpointDestinationRuleResponseOutput{})
	pulumi.RegisterOutputType(EnclaveEndpointDestinationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(EnclaveVirtualNetworkModelOutput{})
	pulumi.RegisterOutputType(EnclaveVirtualNetworkModelResponseOutput{})
	pulumi.RegisterOutputType(GovernedServiceItemOutput{})
	pulumi.RegisterOutputType(GovernedServiceItemArrayOutput{})
	pulumi.RegisterOutputType(GovernedServiceItemResponseOutput{})
	pulumi.RegisterOutputType(GovernedServiceItemResponseArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceModeConfigurationModelOutput{})
	pulumi.RegisterOutputType(MaintenanceModeConfigurationModelPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceModeConfigurationModelResponseOutput{})
	pulumi.RegisterOutputType(MaintenanceModeConfigurationModelResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedOnBehalfOfConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MandatoryApproverOutput{})
	pulumi.RegisterOutputType(MandatoryApproverArrayOutput{})
	pulumi.RegisterOutputType(MandatoryApproverResponseOutput{})
	pulumi.RegisterOutputType(MandatoryApproverResponseArrayOutput{})
	pulumi.RegisterOutputType(MoboBrokerResourceResponseOutput{})
	pulumi.RegisterOutputType(MoboBrokerResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(PrincipalOutput{})
	pulumi.RegisterOutputType(PrincipalArrayOutput{})
	pulumi.RegisterOutputType(PrincipalResponseOutput{})
	pulumi.RegisterOutputType(PrincipalResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestMetadataOutput{})
	pulumi.RegisterOutputType(RequestMetadataResponseOutput{})
	pulumi.RegisterOutputType(RoleAssignmentItemOutput{})
	pulumi.RegisterOutputType(RoleAssignmentItemArrayOutput{})
	pulumi.RegisterOutputType(RoleAssignmentItemResponseOutput{})
	pulumi.RegisterOutputType(RoleAssignmentItemResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetConfigurationOutput{})
	pulumi.RegisterOutputType(SubnetConfigurationArrayOutput{})
	pulumi.RegisterOutputType(SubnetConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SubnetConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TransitOptionOutput{})
	pulumi.RegisterOutputType(TransitOptionPtrOutput{})
	pulumi.RegisterOutputType(TransitOptionParamsOutput{})
	pulumi.RegisterOutputType(TransitOptionParamsPtrOutput{})
	pulumi.RegisterOutputType(TransitOptionParamsResponseOutput{})
	pulumi.RegisterOutputType(TransitOptionParamsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransitOptionResponseOutput{})
	pulumi.RegisterOutputType(TransitOptionResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
