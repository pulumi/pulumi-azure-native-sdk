// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Community Model Resource
//
// Uses Azure REST API version 2025-05-01-preview.
//
// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type Community struct {
	pulumi.CustomResourceState

	// Address Space.
	AddressSpace pulumi.StringPtrOutput `pulumi:"addressSpace"`
	// Approval requirements for various actions on the community's resources.
	ApprovalSettings ApprovalSettingsResponsePtrOutput `pulumi:"approvalSettings"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Community role assignments
	CommunityRoleAssignments RoleAssignmentItemResponseArrayOutput `pulumi:"communityRoleAssignments"`
	// DNS Servers.
	DnsServers pulumi.StringArrayOutput `pulumi:"dnsServers"`
	// SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
	FirewallSku pulumi.StringPtrOutput `pulumi:"firewallSku"`
	// List of services governed by a community.
	GovernedServiceList GovernedServiceItemResponseArrayOutput `pulumi:"governedServiceList"`
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Maintenance Mode configuration.
	MaintenanceModeConfiguration MaintenanceModeConfigurationModelResponsePtrOutput `pulumi:"maintenanceModeConfiguration"`
	// Managed On Behalf Of Configuration.
	ManagedOnBehalfOfConfiguration ManagedOnBehalfOfConfigurationResponseOutput `pulumi:"managedOnBehalfOfConfiguration"`
	// Managed resource group name.
	ManagedResourceGroupName pulumi.StringOutput `pulumi:"managedResourceGroupName"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.
	PolicyOverride pulumi.StringPtrOutput `pulumi:"policyOverride"`
	// Provisioning State.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// List of resource ids created by communities.
	ResourceCollection pulumi.StringArrayOutput `pulumi:"resourceCollection"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCommunity registers a new resource with the given unique name, arguments, and options.
func NewCommunity(ctx *pulumi.Context,
	name string, args *CommunityArgs, opts ...pulumi.ResourceOption) (*Community, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.FirewallSku == nil {
		args.FirewallSku = pulumi.StringPtr("Standard")
	}
	if args.MaintenanceModeConfiguration != nil {
		args.MaintenanceModeConfiguration = args.MaintenanceModeConfiguration.ToMaintenanceModeConfigurationModelPtrOutput().ApplyT(func(v *MaintenanceModeConfigurationModel) *MaintenanceModeConfigurationModel { return v.Defaults() }).(MaintenanceModeConfigurationModelPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mission/v20240601preview:Community"),
		},
		{
			Type: pulumi.String("azure-native:mission/v20241201preview:Community"),
		},
		{
			Type: pulumi.String("azure-native:mission/v20250501preview:Community"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Community
	err := ctx.RegisterResource("azure-native:mission:Community", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCommunity gets an existing Community resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCommunity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CommunityState, opts ...pulumi.ResourceOption) (*Community, error) {
	var resource Community
	err := ctx.ReadResource("azure-native:mission:Community", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Community resources.
type communityState struct {
}

type CommunityState struct {
}

func (CommunityState) ElementType() reflect.Type {
	return reflect.TypeOf((*communityState)(nil)).Elem()
}

type communityArgs struct {
	// Address Space.
	AddressSpace *string `pulumi:"addressSpace"`
	// Approval requirements for various actions on the community's resources.
	ApprovalSettings *ApprovalSettings `pulumi:"approvalSettings"`
	// The name of the communityResource Resource
	CommunityName *string `pulumi:"communityName"`
	// Community role assignments
	CommunityRoleAssignments []RoleAssignmentItem `pulumi:"communityRoleAssignments"`
	// DNS Servers.
	DnsServers []string `pulumi:"dnsServers"`
	// SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
	FirewallSku *string `pulumi:"firewallSku"`
	// List of services governed by a community.
	GovernedServiceList []GovernedServiceItem `pulumi:"governedServiceList"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Maintenance Mode configuration.
	MaintenanceModeConfiguration *MaintenanceModeConfigurationModel `pulumi:"maintenanceModeConfiguration"`
	// Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.
	PolicyOverride *string `pulumi:"policyOverride"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Community resource.
type CommunityArgs struct {
	// Address Space.
	AddressSpace pulumi.StringPtrInput
	// Approval requirements for various actions on the community's resources.
	ApprovalSettings ApprovalSettingsPtrInput
	// The name of the communityResource Resource
	CommunityName pulumi.StringPtrInput
	// Community role assignments
	CommunityRoleAssignments RoleAssignmentItemArrayInput
	// DNS Servers.
	DnsServers pulumi.StringArrayInput
	// SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
	FirewallSku pulumi.StringPtrInput
	// List of services governed by a community.
	GovernedServiceList GovernedServiceItemArrayInput
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Maintenance Mode configuration.
	MaintenanceModeConfiguration MaintenanceModeConfigurationModelPtrInput
	// Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.
	PolicyOverride pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*communityArgs)(nil)).Elem()
}

type CommunityInput interface {
	pulumi.Input

	ToCommunityOutput() CommunityOutput
	ToCommunityOutputWithContext(ctx context.Context) CommunityOutput
}

func (*Community) ElementType() reflect.Type {
	return reflect.TypeOf((**Community)(nil)).Elem()
}

func (i *Community) ToCommunityOutput() CommunityOutput {
	return i.ToCommunityOutputWithContext(context.Background())
}

func (i *Community) ToCommunityOutputWithContext(ctx context.Context) CommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityOutput)
}

type CommunityOutput struct{ *pulumi.OutputState }

func (CommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Community)(nil)).Elem()
}

func (o CommunityOutput) ToCommunityOutput() CommunityOutput {
	return o
}

func (o CommunityOutput) ToCommunityOutputWithContext(ctx context.Context) CommunityOutput {
	return o
}

// Address Space.
func (o CommunityOutput) AddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Community) pulumi.StringPtrOutput { return v.AddressSpace }).(pulumi.StringPtrOutput)
}

// Approval requirements for various actions on the community's resources.
func (o CommunityOutput) ApprovalSettings() ApprovalSettingsResponsePtrOutput {
	return o.ApplyT(func(v *Community) ApprovalSettingsResponsePtrOutput { return v.ApprovalSettings }).(ApprovalSettingsResponsePtrOutput)
}

// The Azure API version of the resource.
func (o CommunityOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Community) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Community role assignments
func (o CommunityOutput) CommunityRoleAssignments() RoleAssignmentItemResponseArrayOutput {
	return o.ApplyT(func(v *Community) RoleAssignmentItemResponseArrayOutput { return v.CommunityRoleAssignments }).(RoleAssignmentItemResponseArrayOutput)
}

// DNS Servers.
func (o CommunityOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Community) pulumi.StringArrayOutput { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
func (o CommunityOutput) FirewallSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Community) pulumi.StringPtrOutput { return v.FirewallSku }).(pulumi.StringPtrOutput)
}

// List of services governed by a community.
func (o CommunityOutput) GovernedServiceList() GovernedServiceItemResponseArrayOutput {
	return o.ApplyT(func(v *Community) GovernedServiceItemResponseArrayOutput { return v.GovernedServiceList }).(GovernedServiceItemResponseArrayOutput)
}

// The managed service identities assigned to this resource.
func (o CommunityOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *Community) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o CommunityOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Community) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Maintenance Mode configuration.
func (o CommunityOutput) MaintenanceModeConfiguration() MaintenanceModeConfigurationModelResponsePtrOutput {
	return o.ApplyT(func(v *Community) MaintenanceModeConfigurationModelResponsePtrOutput {
		return v.MaintenanceModeConfiguration
	}).(MaintenanceModeConfigurationModelResponsePtrOutput)
}

// Managed On Behalf Of Configuration.
func (o CommunityOutput) ManagedOnBehalfOfConfiguration() ManagedOnBehalfOfConfigurationResponseOutput {
	return o.ApplyT(func(v *Community) ManagedOnBehalfOfConfigurationResponseOutput {
		return v.ManagedOnBehalfOfConfiguration
	}).(ManagedOnBehalfOfConfigurationResponseOutput)
}

// Managed resource group name.
func (o CommunityOutput) ManagedResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Community) pulumi.StringOutput { return v.ManagedResourceGroupName }).(pulumi.StringOutput)
}

// The name of the resource
func (o CommunityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Community) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.
func (o CommunityOutput) PolicyOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Community) pulumi.StringPtrOutput { return v.PolicyOverride }).(pulumi.StringPtrOutput)
}

// Provisioning State.
func (o CommunityOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Community) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of resource ids created by communities.
func (o CommunityOutput) ResourceCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Community) pulumi.StringArrayOutput { return v.ResourceCollection }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CommunityOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Community) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CommunityOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Community) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CommunityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Community) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CommunityOutput{})
}
