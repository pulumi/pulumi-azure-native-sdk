// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a EnclaveEndpointResource
//
// Uses Azure REST API version 2025-05-01-preview.
//
// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupEnclaveEndpoint(ctx *pulumi.Context, args *LookupEnclaveEndpointArgs, opts ...pulumi.InvokeOption) (*LookupEnclaveEndpointResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEnclaveEndpointResult
	err := ctx.Invoke("azure-native:mission:getEnclaveEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnclaveEndpointArgs struct {
	// The name of the Enclave Endpoint Resource
	EnclaveEndpointName string `pulumi:"enclaveEndpointName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the enclaveResource Resource
	VirtualEnclaveName string `pulumi:"virtualEnclaveName"`
}

// EnclaveEndpoint Model Resource
type LookupEnclaveEndpointResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of resource ids created by community endpoint.
	ResourceCollection []string `pulumi:"resourceCollection"`
	// Enclave Endpoint Rule Collection.
	RuleCollection []EnclaveEndpointDestinationRuleResponse `pulumi:"ruleCollection"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupEnclaveEndpointOutput(ctx *pulumi.Context, args LookupEnclaveEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupEnclaveEndpointResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEnclaveEndpointResultOutput, error) {
			args := v.(LookupEnclaveEndpointArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:mission:getEnclaveEndpoint", args, LookupEnclaveEndpointResultOutput{}, options).(LookupEnclaveEndpointResultOutput), nil
		}).(LookupEnclaveEndpointResultOutput)
}

type LookupEnclaveEndpointOutputArgs struct {
	// The name of the Enclave Endpoint Resource
	EnclaveEndpointName pulumi.StringInput `pulumi:"enclaveEndpointName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the enclaveResource Resource
	VirtualEnclaveName pulumi.StringInput `pulumi:"virtualEnclaveName"`
}

func (LookupEnclaveEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnclaveEndpointArgs)(nil)).Elem()
}

// EnclaveEndpoint Model Resource
type LookupEnclaveEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupEnclaveEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnclaveEndpointResult)(nil)).Elem()
}

func (o LookupEnclaveEndpointResultOutput) ToLookupEnclaveEndpointResultOutput() LookupEnclaveEndpointResultOutput {
	return o
}

func (o LookupEnclaveEndpointResultOutput) ToLookupEnclaveEndpointResultOutputWithContext(ctx context.Context) LookupEnclaveEndpointResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupEnclaveEndpointResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupEnclaveEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupEnclaveEndpointResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEnclaveEndpointResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning State.
func (o LookupEnclaveEndpointResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of resource ids created by community endpoint.
func (o LookupEnclaveEndpointResultOutput) ResourceCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) []string { return v.ResourceCollection }).(pulumi.StringArrayOutput)
}

// Enclave Endpoint Rule Collection.
func (o LookupEnclaveEndpointResultOutput) RuleCollection() EnclaveEndpointDestinationRuleResponseArrayOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) []EnclaveEndpointDestinationRuleResponse { return v.RuleCollection }).(EnclaveEndpointDestinationRuleResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupEnclaveEndpointResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupEnclaveEndpointResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEnclaveEndpointResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveEndpointResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnclaveEndpointResultOutput{})
}
