// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TransitHub Model Resource
//
// Uses Azure REST API version 2025-05-01-preview.
//
// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type TransitHub struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// List of resource ids modified by transitHubs.
	ResourceCollection pulumi.StringArrayOutput `pulumi:"resourceCollection"`
	// The state of the transitHub.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The TransitOption of the transitHub.
	TransitOption TransitOptionResponsePtrOutput `pulumi:"transitOption"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTransitHub registers a new resource with the given unique name, arguments, and options.
func NewTransitHub(ctx *pulumi.Context,
	name string, args *TransitHubArgs, opts ...pulumi.ResourceOption) (*TransitHub, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommunityName == nil {
		return nil, errors.New("invalid value for required argument 'CommunityName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mission/v20240601preview:TransitHub"),
		},
		{
			Type: pulumi.String("azure-native:mission/v20241201preview:TransitHub"),
		},
		{
			Type: pulumi.String("azure-native:mission/v20250501preview:TransitHub"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TransitHub
	err := ctx.RegisterResource("azure-native:mission:TransitHub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitHub gets an existing TransitHub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitHubState, opts ...pulumi.ResourceOption) (*TransitHub, error) {
	var resource TransitHub
	err := ctx.ReadResource("azure-native:mission:TransitHub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitHub resources.
type transitHubState struct {
}

type TransitHubState struct {
}

func (TransitHubState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitHubState)(nil)).Elem()
}

type transitHubArgs struct {
	// The name of the communityResource Resource
	CommunityName string `pulumi:"communityName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The state of the transitHub.
	State *string `pulumi:"state"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The name of the TransitHub Resource
	TransitHubName *string `pulumi:"transitHubName"`
	// The TransitOption of the transitHub.
	TransitOption *TransitOption `pulumi:"transitOption"`
}

// The set of arguments for constructing a TransitHub resource.
type TransitHubArgs struct {
	// The name of the communityResource Resource
	CommunityName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The state of the transitHub.
	State pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The name of the TransitHub Resource
	TransitHubName pulumi.StringPtrInput
	// The TransitOption of the transitHub.
	TransitOption TransitOptionPtrInput
}

func (TransitHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitHubArgs)(nil)).Elem()
}

type TransitHubInput interface {
	pulumi.Input

	ToTransitHubOutput() TransitHubOutput
	ToTransitHubOutputWithContext(ctx context.Context) TransitHubOutput
}

func (*TransitHub) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitHub)(nil)).Elem()
}

func (i *TransitHub) ToTransitHubOutput() TransitHubOutput {
	return i.ToTransitHubOutputWithContext(context.Background())
}

func (i *TransitHub) ToTransitHubOutputWithContext(ctx context.Context) TransitHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitHubOutput)
}

type TransitHubOutput struct{ *pulumi.OutputState }

func (TransitHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitHub)(nil)).Elem()
}

func (o TransitHubOutput) ToTransitHubOutput() TransitHubOutput {
	return o
}

func (o TransitHubOutput) ToTransitHubOutputWithContext(ctx context.Context) TransitHubOutput {
	return o
}

// The Azure API version of the resource.
func (o TransitHubOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o TransitHubOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o TransitHubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o TransitHubOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of resource ids modified by transitHubs.
func (o TransitHubOutput) ResourceCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringArrayOutput { return v.ResourceCollection }).(pulumi.StringArrayOutput)
}

// The state of the transitHub.
func (o TransitHubOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o TransitHubOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *TransitHub) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o TransitHubOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The TransitOption of the transitHub.
func (o TransitHubOutput) TransitOption() TransitOptionResponsePtrOutput {
	return o.ApplyT(func(v *TransitHub) TransitOptionResponsePtrOutput { return v.TransitOption }).(TransitOptionResponsePtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o TransitHubOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitHub) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TransitHubOutput{})
}
