// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a WorkloadResource
//
// Uses Azure REST API version 2025-05-01-preview.
//
// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupWorkload(ctx *pulumi.Context, args *LookupWorkloadArgs, opts ...pulumi.InvokeOption) (*LookupWorkloadResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkloadResult
	err := ctx.Invoke("azure-native:mission:getWorkload", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkloadArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the enclaveResource Resource
	VirtualEnclaveName string `pulumi:"virtualEnclaveName"`
	// The name of the workloadResource Resource
	WorkloadName string `pulumi:"workloadName"`
}

// Workload Model Resource
type LookupWorkloadResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Managed On Behalf Of Configuration.
	ManagedOnBehalfOfConfiguration ManagedOnBehalfOfConfigurationResponse `pulumi:"managedOnBehalfOfConfiguration"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of resource group ids.
	ResourceGroupCollection []string `pulumi:"resourceGroupCollection"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupWorkloadOutput(ctx *pulumi.Context, args LookupWorkloadOutputArgs, opts ...pulumi.InvokeOption) LookupWorkloadResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkloadResultOutput, error) {
			args := v.(LookupWorkloadArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:mission:getWorkload", args, LookupWorkloadResultOutput{}, options).(LookupWorkloadResultOutput), nil
		}).(LookupWorkloadResultOutput)
}

type LookupWorkloadOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the enclaveResource Resource
	VirtualEnclaveName pulumi.StringInput `pulumi:"virtualEnclaveName"`
	// The name of the workloadResource Resource
	WorkloadName pulumi.StringInput `pulumi:"workloadName"`
}

func (LookupWorkloadOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadArgs)(nil)).Elem()
}

// Workload Model Resource
type LookupWorkloadResultOutput struct{ *pulumi.OutputState }

func (LookupWorkloadResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadResult)(nil)).Elem()
}

func (o LookupWorkloadResultOutput) ToLookupWorkloadResultOutput() LookupWorkloadResultOutput {
	return o
}

func (o LookupWorkloadResultOutput) ToLookupWorkloadResultOutputWithContext(ctx context.Context) LookupWorkloadResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupWorkloadResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupWorkloadResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupWorkloadResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Location }).(pulumi.StringOutput)
}

// Managed On Behalf Of Configuration.
func (o LookupWorkloadResultOutput) ManagedOnBehalfOfConfiguration() ManagedOnBehalfOfConfigurationResponseOutput {
	return o.ApplyT(func(v LookupWorkloadResult) ManagedOnBehalfOfConfigurationResponse {
		return v.ManagedOnBehalfOfConfiguration
	}).(ManagedOnBehalfOfConfigurationResponseOutput)
}

// The name of the resource
func (o LookupWorkloadResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning State.
func (o LookupWorkloadResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of resource group ids.
func (o LookupWorkloadResultOutput) ResourceGroupCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupWorkloadResult) []string { return v.ResourceGroupCollection }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupWorkloadResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupWorkloadResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupWorkloadResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkloadResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWorkloadResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkloadResultOutput{})
}
