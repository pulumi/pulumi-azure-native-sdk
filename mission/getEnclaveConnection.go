// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a EnclaveConnectionResource
//
// Uses Azure REST API version 2025-05-01-preview.
//
// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupEnclaveConnection(ctx *pulumi.Context, args *LookupEnclaveConnectionArgs, opts ...pulumi.InvokeOption) (*LookupEnclaveConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEnclaveConnectionResult
	err := ctx.Invoke("azure-native:mission:getEnclaveConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnclaveConnectionArgs struct {
	// The name of the Enclave Connection Resource
	EnclaveConnectionName string `pulumi:"enclaveConnectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// EnclaveConnection Model Resource
type LookupEnclaveConnectionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Community Resource Id.
	CommunityResourceId string `pulumi:"communityResourceId"`
	// Destination Endpoint Resource Id.
	DestinationEndpointId string `pulumi:"destinationEndpointId"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of resource ids modified by enclave Connections.
	ResourceCollection []string `pulumi:"resourceCollection"`
	// Source CIDR.
	SourceCidr *string `pulumi:"sourceCidr"`
	// Source Resource Id.
	SourceResourceId string `pulumi:"sourceResourceId"`
	// The state of the enclaveConnection.
	State string `pulumi:"state"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupEnclaveConnectionOutput(ctx *pulumi.Context, args LookupEnclaveConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupEnclaveConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEnclaveConnectionResultOutput, error) {
			args := v.(LookupEnclaveConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:mission:getEnclaveConnection", args, LookupEnclaveConnectionResultOutput{}, options).(LookupEnclaveConnectionResultOutput), nil
		}).(LookupEnclaveConnectionResultOutput)
}

type LookupEnclaveConnectionOutputArgs struct {
	// The name of the Enclave Connection Resource
	EnclaveConnectionName pulumi.StringInput `pulumi:"enclaveConnectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupEnclaveConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnclaveConnectionArgs)(nil)).Elem()
}

// EnclaveConnection Model Resource
type LookupEnclaveConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupEnclaveConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnclaveConnectionResult)(nil)).Elem()
}

func (o LookupEnclaveConnectionResultOutput) ToLookupEnclaveConnectionResultOutput() LookupEnclaveConnectionResultOutput {
	return o
}

func (o LookupEnclaveConnectionResultOutput) ToLookupEnclaveConnectionResultOutputWithContext(ctx context.Context) LookupEnclaveConnectionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupEnclaveConnectionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Community Resource Id.
func (o LookupEnclaveConnectionResultOutput) CommunityResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.CommunityResourceId }).(pulumi.StringOutput)
}

// Destination Endpoint Resource Id.
func (o LookupEnclaveConnectionResultOutput) DestinationEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.DestinationEndpointId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupEnclaveConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupEnclaveConnectionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEnclaveConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning State.
func (o LookupEnclaveConnectionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of resource ids modified by enclave Connections.
func (o LookupEnclaveConnectionResultOutput) ResourceCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) []string { return v.ResourceCollection }).(pulumi.StringArrayOutput)
}

// Source CIDR.
func (o LookupEnclaveConnectionResultOutput) SourceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) *string { return v.SourceCidr }).(pulumi.StringPtrOutput)
}

// Source Resource Id.
func (o LookupEnclaveConnectionResultOutput) SourceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.SourceResourceId }).(pulumi.StringOutput)
}

// The state of the enclaveConnection.
func (o LookupEnclaveConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupEnclaveConnectionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupEnclaveConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEnclaveConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnclaveConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnclaveConnectionResultOutput{})
}
