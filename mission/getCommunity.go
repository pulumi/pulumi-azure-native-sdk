// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mission

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a CommunityResource
//
// Uses Azure REST API version 2025-05-01-preview.
//
// Other available API versions: 2024-06-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native mission [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupCommunity(ctx *pulumi.Context, args *LookupCommunityArgs, opts ...pulumi.InvokeOption) (*LookupCommunityResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCommunityResult
	err := ctx.Invoke("azure-native:mission:getCommunity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupCommunityArgs struct {
	// The name of the communityResource Resource
	CommunityName string `pulumi:"communityName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Community Model Resource
type LookupCommunityResult struct {
	// Address Space.
	AddressSpace *string `pulumi:"addressSpace"`
	// Approval requirements for various actions on the community's resources.
	ApprovalSettings *ApprovalSettingsResponse `pulumi:"approvalSettings"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Community role assignments
	CommunityRoleAssignments []RoleAssignmentItemResponse `pulumi:"communityRoleAssignments"`
	// DNS Servers.
	DnsServers []string `pulumi:"dnsServers"`
	// SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
	FirewallSku *string `pulumi:"firewallSku"`
	// List of services governed by a community.
	GovernedServiceList []GovernedServiceItemResponse `pulumi:"governedServiceList"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Maintenance Mode configuration.
	MaintenanceModeConfiguration *MaintenanceModeConfigurationModelResponse `pulumi:"maintenanceModeConfiguration"`
	// Managed On Behalf Of Configuration.
	ManagedOnBehalfOfConfiguration ManagedOnBehalfOfConfigurationResponse `pulumi:"managedOnBehalfOfConfiguration"`
	// Managed resource group name.
	ManagedResourceGroupName string `pulumi:"managedResourceGroupName"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.
	PolicyOverride *string `pulumi:"policyOverride"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of resource ids created by communities.
	ResourceCollection []string `pulumi:"resourceCollection"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupCommunityResult
func (val *LookupCommunityResult) Defaults() *LookupCommunityResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.FirewallSku == nil {
		firewallSku_ := "Standard"
		tmp.FirewallSku = &firewallSku_
	}
	tmp.MaintenanceModeConfiguration = tmp.MaintenanceModeConfiguration.Defaults()

	return &tmp
}
func LookupCommunityOutput(ctx *pulumi.Context, args LookupCommunityOutputArgs, opts ...pulumi.InvokeOption) LookupCommunityResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCommunityResultOutput, error) {
			args := v.(LookupCommunityArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:mission:getCommunity", args, LookupCommunityResultOutput{}, options).(LookupCommunityResultOutput), nil
		}).(LookupCommunityResultOutput)
}

type LookupCommunityOutputArgs struct {
	// The name of the communityResource Resource
	CommunityName pulumi.StringInput `pulumi:"communityName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCommunityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommunityArgs)(nil)).Elem()
}

// Community Model Resource
type LookupCommunityResultOutput struct{ *pulumi.OutputState }

func (LookupCommunityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommunityResult)(nil)).Elem()
}

func (o LookupCommunityResultOutput) ToLookupCommunityResultOutput() LookupCommunityResultOutput {
	return o
}

func (o LookupCommunityResultOutput) ToLookupCommunityResultOutputWithContext(ctx context.Context) LookupCommunityResultOutput {
	return o
}

// Address Space.
func (o LookupCommunityResultOutput) AddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommunityResult) *string { return v.AddressSpace }).(pulumi.StringPtrOutput)
}

// Approval requirements for various actions on the community's resources.
func (o LookupCommunityResultOutput) ApprovalSettings() ApprovalSettingsResponsePtrOutput {
	return o.ApplyT(func(v LookupCommunityResult) *ApprovalSettingsResponse { return v.ApprovalSettings }).(ApprovalSettingsResponsePtrOutput)
}

// The Azure API version of the resource.
func (o LookupCommunityResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Community role assignments
func (o LookupCommunityResultOutput) CommunityRoleAssignments() RoleAssignmentItemResponseArrayOutput {
	return o.ApplyT(func(v LookupCommunityResult) []RoleAssignmentItemResponse { return v.CommunityRoleAssignments }).(RoleAssignmentItemResponseArrayOutput)
}

// DNS Servers.
func (o LookupCommunityResultOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCommunityResult) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// SKU of the community's Azure Firewall (Basic, Standard, Premium). Standard is the default
func (o LookupCommunityResultOutput) FirewallSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommunityResult) *string { return v.FirewallSku }).(pulumi.StringPtrOutput)
}

// List of services governed by a community.
func (o LookupCommunityResultOutput) GovernedServiceList() GovernedServiceItemResponseArrayOutput {
	return o.ApplyT(func(v LookupCommunityResult) []GovernedServiceItemResponse { return v.GovernedServiceList }).(GovernedServiceItemResponseArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupCommunityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o LookupCommunityResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupCommunityResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupCommunityResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.Location }).(pulumi.StringOutput)
}

// Maintenance Mode configuration.
func (o LookupCommunityResultOutput) MaintenanceModeConfiguration() MaintenanceModeConfigurationModelResponsePtrOutput {
	return o.ApplyT(func(v LookupCommunityResult) *MaintenanceModeConfigurationModelResponse {
		return v.MaintenanceModeConfiguration
	}).(MaintenanceModeConfigurationModelResponsePtrOutput)
}

// Managed On Behalf Of Configuration.
func (o LookupCommunityResultOutput) ManagedOnBehalfOfConfiguration() ManagedOnBehalfOfConfigurationResponseOutput {
	return o.ApplyT(func(v LookupCommunityResult) ManagedOnBehalfOfConfigurationResponse {
		return v.ManagedOnBehalfOfConfiguration
	}).(ManagedOnBehalfOfConfigurationResponseOutput)
}

// Managed resource group name.
func (o LookupCommunityResultOutput) ManagedResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.ManagedResourceGroupName }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCommunityResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.Name }).(pulumi.StringOutput)
}

// Policy override setting for the community. Specifies whether to apply enclave-specific policies or disable policy enforcement.
func (o LookupCommunityResultOutput) PolicyOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommunityResult) *string { return v.PolicyOverride }).(pulumi.StringPtrOutput)
}

// Provisioning State.
func (o LookupCommunityResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of resource ids created by communities.
func (o LookupCommunityResultOutput) ResourceCollection() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCommunityResult) []string { return v.ResourceCollection }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCommunityResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCommunityResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupCommunityResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCommunityResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCommunityResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCommunityResultOutput{})
}
