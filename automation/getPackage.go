// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve the Package identified by Package name.
// Azure REST API version: 2023-05-15-preview.
func LookupPackage(ctx *pulumi.Context, args *LookupPackageArgs, opts ...pulumi.InvokeOption) (*LookupPackageResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPackageResult
	err := ctx.Invoke("azure-native:automation:getPackage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPackageArgs struct {
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The Package name.
	PackageName string `pulumi:"packageName"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Runtime Environment.
	RuntimeEnvironmentName string `pulumi:"runtimeEnvironmentName"`
}

// Definition of the Package type.
type LookupPackageResult struct {
	// Metadata pertaining to creation and last modification of the resource.
	AllOf SystemDataResponse `pulumi:"allOf"`
	// Gets or sets the contentLink of the Package.
	ContentLink *ContentLinkResponse `pulumi:"contentLink"`
	// Gets or sets the isGlobal flag of the package.
	Default *bool `pulumi:"default"`
	// Gets or sets the error info of the Package.
	Error *PackageErrorInfoResponse `pulumi:"error"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets the provisioning state of the Package.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the size in bytes of the Package.
	SizeInBytes *float64 `pulumi:"sizeInBytes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Gets or sets the version of the Package.
	Version *string `pulumi:"version"`
}

func LookupPackageOutput(ctx *pulumi.Context, args LookupPackageOutputArgs, opts ...pulumi.InvokeOption) LookupPackageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPackageResult, error) {
			args := v.(LookupPackageArgs)
			r, err := LookupPackage(ctx, &args, opts...)
			var s LookupPackageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPackageResultOutput)
}

type LookupPackageOutputArgs struct {
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput `pulumi:"automationAccountName"`
	// The Package name.
	PackageName pulumi.StringInput `pulumi:"packageName"`
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Runtime Environment.
	RuntimeEnvironmentName pulumi.StringInput `pulumi:"runtimeEnvironmentName"`
}

func (LookupPackageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPackageArgs)(nil)).Elem()
}

// Definition of the Package type.
type LookupPackageResultOutput struct{ *pulumi.OutputState }

func (LookupPackageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPackageResult)(nil)).Elem()
}

func (o LookupPackageResultOutput) ToLookupPackageResultOutput() LookupPackageResultOutput {
	return o
}

func (o LookupPackageResultOutput) ToLookupPackageResultOutputWithContext(ctx context.Context) LookupPackageResultOutput {
	return o
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupPackageResultOutput) AllOf() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPackageResult) SystemDataResponse { return v.AllOf }).(SystemDataResponseOutput)
}

// Gets or sets the contentLink of the Package.
func (o LookupPackageResultOutput) ContentLink() ContentLinkResponsePtrOutput {
	return o.ApplyT(func(v LookupPackageResult) *ContentLinkResponse { return v.ContentLink }).(ContentLinkResponsePtrOutput)
}

// Gets or sets the isGlobal flag of the package.
func (o LookupPackageResultOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPackageResult) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Gets or sets the error info of the Package.
func (o LookupPackageResultOutput) Error() PackageErrorInfoResponsePtrOutput {
	return o.ApplyT(func(v LookupPackageResult) *PackageErrorInfoResponse { return v.Error }).(PackageErrorInfoResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupPackageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPackageResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupPackageResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPackageResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupPackageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPackageResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state of the Package.
func (o LookupPackageResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPackageResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the size in bytes of the Package.
func (o LookupPackageResultOutput) SizeInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupPackageResult) *float64 { return v.SizeInBytes }).(pulumi.Float64PtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupPackageResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPackageResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupPackageResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPackageResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPackageResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPackageResult) string { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets the version of the Package.
func (o LookupPackageResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPackageResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPackageResultOutput{})
}
