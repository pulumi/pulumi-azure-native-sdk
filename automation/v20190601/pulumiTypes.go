// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// The properties of the create Advanced Schedule.
type AdvancedSchedule struct {
	// Days of the month that the job should execute on. Must be between 1 and 31.
	MonthDays []int `pulumi:"monthDays"`
	// Occurrences of days within a month.
	MonthlyOccurrences []AdvancedScheduleMonthlyOccurrence `pulumi:"monthlyOccurrences"`
	// Days of the week that the job should execute on.
	WeekDays []string `pulumi:"weekDays"`
}

// AdvancedScheduleInput is an input type that accepts AdvancedScheduleArgs and AdvancedScheduleOutput values.
// You can construct a concrete instance of `AdvancedScheduleInput` via:
//
//	AdvancedScheduleArgs{...}
type AdvancedScheduleInput interface {
	pulumi.Input

	ToAdvancedScheduleOutput() AdvancedScheduleOutput
	ToAdvancedScheduleOutputWithContext(context.Context) AdvancedScheduleOutput
}

// The properties of the create Advanced Schedule.
type AdvancedScheduleArgs struct {
	// Days of the month that the job should execute on. Must be between 1 and 31.
	MonthDays pulumi.IntArrayInput `pulumi:"monthDays"`
	// Occurrences of days within a month.
	MonthlyOccurrences AdvancedScheduleMonthlyOccurrenceArrayInput `pulumi:"monthlyOccurrences"`
	// Days of the week that the job should execute on.
	WeekDays pulumi.StringArrayInput `pulumi:"weekDays"`
}

func (AdvancedScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedSchedule)(nil)).Elem()
}

func (i AdvancedScheduleArgs) ToAdvancedScheduleOutput() AdvancedScheduleOutput {
	return i.ToAdvancedScheduleOutputWithContext(context.Background())
}

func (i AdvancedScheduleArgs) ToAdvancedScheduleOutputWithContext(ctx context.Context) AdvancedScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedScheduleOutput)
}

func (i AdvancedScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedSchedule] {
	return pulumix.Output[AdvancedSchedule]{
		OutputState: i.ToAdvancedScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedScheduleArgs) ToAdvancedSchedulePtrOutput() AdvancedSchedulePtrOutput {
	return i.ToAdvancedSchedulePtrOutputWithContext(context.Background())
}

func (i AdvancedScheduleArgs) ToAdvancedSchedulePtrOutputWithContext(ctx context.Context) AdvancedSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedScheduleOutput).ToAdvancedSchedulePtrOutputWithContext(ctx)
}

// AdvancedSchedulePtrInput is an input type that accepts AdvancedScheduleArgs, AdvancedSchedulePtr and AdvancedSchedulePtrOutput values.
// You can construct a concrete instance of `AdvancedSchedulePtrInput` via:
//
//	        AdvancedScheduleArgs{...}
//
//	or:
//
//	        nil
type AdvancedSchedulePtrInput interface {
	pulumi.Input

	ToAdvancedSchedulePtrOutput() AdvancedSchedulePtrOutput
	ToAdvancedSchedulePtrOutputWithContext(context.Context) AdvancedSchedulePtrOutput
}

type advancedSchedulePtrType AdvancedScheduleArgs

func AdvancedSchedulePtr(v *AdvancedScheduleArgs) AdvancedSchedulePtrInput {
	return (*advancedSchedulePtrType)(v)
}

func (*advancedSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedSchedule)(nil)).Elem()
}

func (i *advancedSchedulePtrType) ToAdvancedSchedulePtrOutput() AdvancedSchedulePtrOutput {
	return i.ToAdvancedSchedulePtrOutputWithContext(context.Background())
}

func (i *advancedSchedulePtrType) ToAdvancedSchedulePtrOutputWithContext(ctx context.Context) AdvancedSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedSchedulePtrOutput)
}

func (i *advancedSchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedSchedule] {
	return pulumix.Output[*AdvancedSchedule]{
		OutputState: i.ToAdvancedSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

// The properties of the create Advanced Schedule.
type AdvancedScheduleOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedSchedule)(nil)).Elem()
}

func (o AdvancedScheduleOutput) ToAdvancedScheduleOutput() AdvancedScheduleOutput {
	return o
}

func (o AdvancedScheduleOutput) ToAdvancedScheduleOutputWithContext(ctx context.Context) AdvancedScheduleOutput {
	return o
}

func (o AdvancedScheduleOutput) ToAdvancedSchedulePtrOutput() AdvancedSchedulePtrOutput {
	return o.ToAdvancedSchedulePtrOutputWithContext(context.Background())
}

func (o AdvancedScheduleOutput) ToAdvancedSchedulePtrOutputWithContext(ctx context.Context) AdvancedSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedSchedule) *AdvancedSchedule {
		return &v
	}).(AdvancedSchedulePtrOutput)
}

func (o AdvancedScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedSchedule] {
	return pulumix.Output[AdvancedSchedule]{
		OutputState: o.OutputState,
	}
}

// Days of the month that the job should execute on. Must be between 1 and 31.
func (o AdvancedScheduleOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AdvancedSchedule) []int { return v.MonthDays }).(pulumi.IntArrayOutput)
}

// Occurrences of days within a month.
func (o AdvancedScheduleOutput) MonthlyOccurrences() AdvancedScheduleMonthlyOccurrenceArrayOutput {
	return o.ApplyT(func(v AdvancedSchedule) []AdvancedScheduleMonthlyOccurrence { return v.MonthlyOccurrences }).(AdvancedScheduleMonthlyOccurrenceArrayOutput)
}

// Days of the week that the job should execute on.
func (o AdvancedScheduleOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdvancedSchedule) []string { return v.WeekDays }).(pulumi.StringArrayOutput)
}

type AdvancedSchedulePtrOutput struct{ *pulumi.OutputState }

func (AdvancedSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedSchedule)(nil)).Elem()
}

func (o AdvancedSchedulePtrOutput) ToAdvancedSchedulePtrOutput() AdvancedSchedulePtrOutput {
	return o
}

func (o AdvancedSchedulePtrOutput) ToAdvancedSchedulePtrOutputWithContext(ctx context.Context) AdvancedSchedulePtrOutput {
	return o
}

func (o AdvancedSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedSchedule] {
	return pulumix.Output[*AdvancedSchedule]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedSchedulePtrOutput) Elem() AdvancedScheduleOutput {
	return o.ApplyT(func(v *AdvancedSchedule) AdvancedSchedule {
		if v != nil {
			return *v
		}
		var ret AdvancedSchedule
		return ret
	}).(AdvancedScheduleOutput)
}

// Days of the month that the job should execute on. Must be between 1 and 31.
func (o AdvancedSchedulePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AdvancedSchedule) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// Occurrences of days within a month.
func (o AdvancedSchedulePtrOutput) MonthlyOccurrences() AdvancedScheduleMonthlyOccurrenceArrayOutput {
	return o.ApplyT(func(v *AdvancedSchedule) []AdvancedScheduleMonthlyOccurrence {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrences
	}).(AdvancedScheduleMonthlyOccurrenceArrayOutput)
}

// Days of the week that the job should execute on.
func (o AdvancedSchedulePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AdvancedSchedule) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

// The properties of the create advanced schedule monthly occurrence.
type AdvancedScheduleMonthlyOccurrence struct {
	// Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
	Day *string `pulumi:"day"`
	// Occurrence of the week within the month. Must be between 1 and 5
	Occurrence *int `pulumi:"occurrence"`
}

// AdvancedScheduleMonthlyOccurrenceInput is an input type that accepts AdvancedScheduleMonthlyOccurrenceArgs and AdvancedScheduleMonthlyOccurrenceOutput values.
// You can construct a concrete instance of `AdvancedScheduleMonthlyOccurrenceInput` via:
//
//	AdvancedScheduleMonthlyOccurrenceArgs{...}
type AdvancedScheduleMonthlyOccurrenceInput interface {
	pulumi.Input

	ToAdvancedScheduleMonthlyOccurrenceOutput() AdvancedScheduleMonthlyOccurrenceOutput
	ToAdvancedScheduleMonthlyOccurrenceOutputWithContext(context.Context) AdvancedScheduleMonthlyOccurrenceOutput
}

// The properties of the create advanced schedule monthly occurrence.
type AdvancedScheduleMonthlyOccurrenceArgs struct {
	// Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
	Day pulumi.StringPtrInput `pulumi:"day"`
	// Occurrence of the week within the month. Must be between 1 and 5
	Occurrence pulumi.IntPtrInput `pulumi:"occurrence"`
}

func (AdvancedScheduleMonthlyOccurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedScheduleMonthlyOccurrence)(nil)).Elem()
}

func (i AdvancedScheduleMonthlyOccurrenceArgs) ToAdvancedScheduleMonthlyOccurrenceOutput() AdvancedScheduleMonthlyOccurrenceOutput {
	return i.ToAdvancedScheduleMonthlyOccurrenceOutputWithContext(context.Background())
}

func (i AdvancedScheduleMonthlyOccurrenceArgs) ToAdvancedScheduleMonthlyOccurrenceOutputWithContext(ctx context.Context) AdvancedScheduleMonthlyOccurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedScheduleMonthlyOccurrenceOutput)
}

func (i AdvancedScheduleMonthlyOccurrenceArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedScheduleMonthlyOccurrence] {
	return pulumix.Output[AdvancedScheduleMonthlyOccurrence]{
		OutputState: i.ToAdvancedScheduleMonthlyOccurrenceOutputWithContext(ctx).OutputState,
	}
}

// AdvancedScheduleMonthlyOccurrenceArrayInput is an input type that accepts AdvancedScheduleMonthlyOccurrenceArray and AdvancedScheduleMonthlyOccurrenceArrayOutput values.
// You can construct a concrete instance of `AdvancedScheduleMonthlyOccurrenceArrayInput` via:
//
//	AdvancedScheduleMonthlyOccurrenceArray{ AdvancedScheduleMonthlyOccurrenceArgs{...} }
type AdvancedScheduleMonthlyOccurrenceArrayInput interface {
	pulumi.Input

	ToAdvancedScheduleMonthlyOccurrenceArrayOutput() AdvancedScheduleMonthlyOccurrenceArrayOutput
	ToAdvancedScheduleMonthlyOccurrenceArrayOutputWithContext(context.Context) AdvancedScheduleMonthlyOccurrenceArrayOutput
}

type AdvancedScheduleMonthlyOccurrenceArray []AdvancedScheduleMonthlyOccurrenceInput

func (AdvancedScheduleMonthlyOccurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedScheduleMonthlyOccurrence)(nil)).Elem()
}

func (i AdvancedScheduleMonthlyOccurrenceArray) ToAdvancedScheduleMonthlyOccurrenceArrayOutput() AdvancedScheduleMonthlyOccurrenceArrayOutput {
	return i.ToAdvancedScheduleMonthlyOccurrenceArrayOutputWithContext(context.Background())
}

func (i AdvancedScheduleMonthlyOccurrenceArray) ToAdvancedScheduleMonthlyOccurrenceArrayOutputWithContext(ctx context.Context) AdvancedScheduleMonthlyOccurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedScheduleMonthlyOccurrenceArrayOutput)
}

func (i AdvancedScheduleMonthlyOccurrenceArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedScheduleMonthlyOccurrence] {
	return pulumix.Output[[]AdvancedScheduleMonthlyOccurrence]{
		OutputState: i.ToAdvancedScheduleMonthlyOccurrenceArrayOutputWithContext(ctx).OutputState,
	}
}

// The properties of the create advanced schedule monthly occurrence.
type AdvancedScheduleMonthlyOccurrenceOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleMonthlyOccurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedScheduleMonthlyOccurrence)(nil)).Elem()
}

func (o AdvancedScheduleMonthlyOccurrenceOutput) ToAdvancedScheduleMonthlyOccurrenceOutput() AdvancedScheduleMonthlyOccurrenceOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceOutput) ToAdvancedScheduleMonthlyOccurrenceOutputWithContext(ctx context.Context) AdvancedScheduleMonthlyOccurrenceOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedScheduleMonthlyOccurrence] {
	return pulumix.Output[AdvancedScheduleMonthlyOccurrence]{
		OutputState: o.OutputState,
	}
}

// Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
func (o AdvancedScheduleMonthlyOccurrenceOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedScheduleMonthlyOccurrence) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// Occurrence of the week within the month. Must be between 1 and 5
func (o AdvancedScheduleMonthlyOccurrenceOutput) Occurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedScheduleMonthlyOccurrence) *int { return v.Occurrence }).(pulumi.IntPtrOutput)
}

type AdvancedScheduleMonthlyOccurrenceArrayOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleMonthlyOccurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedScheduleMonthlyOccurrence)(nil)).Elem()
}

func (o AdvancedScheduleMonthlyOccurrenceArrayOutput) ToAdvancedScheduleMonthlyOccurrenceArrayOutput() AdvancedScheduleMonthlyOccurrenceArrayOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceArrayOutput) ToAdvancedScheduleMonthlyOccurrenceArrayOutputWithContext(ctx context.Context) AdvancedScheduleMonthlyOccurrenceArrayOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedScheduleMonthlyOccurrence] {
	return pulumix.Output[[]AdvancedScheduleMonthlyOccurrence]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedScheduleMonthlyOccurrenceArrayOutput) Index(i pulumi.IntInput) AdvancedScheduleMonthlyOccurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedScheduleMonthlyOccurrence {
		return vs[0].([]AdvancedScheduleMonthlyOccurrence)[vs[1].(int)]
	}).(AdvancedScheduleMonthlyOccurrenceOutput)
}

// The properties of the create advanced schedule monthly occurrence.
type AdvancedScheduleMonthlyOccurrenceResponse struct {
	// Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
	Day *string `pulumi:"day"`
	// Occurrence of the week within the month. Must be between 1 and 5
	Occurrence *int `pulumi:"occurrence"`
}

// The properties of the create advanced schedule monthly occurrence.
type AdvancedScheduleMonthlyOccurrenceResponseOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleMonthlyOccurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedScheduleMonthlyOccurrenceResponse)(nil)).Elem()
}

func (o AdvancedScheduleMonthlyOccurrenceResponseOutput) ToAdvancedScheduleMonthlyOccurrenceResponseOutput() AdvancedScheduleMonthlyOccurrenceResponseOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceResponseOutput) ToAdvancedScheduleMonthlyOccurrenceResponseOutputWithContext(ctx context.Context) AdvancedScheduleMonthlyOccurrenceResponseOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedScheduleMonthlyOccurrenceResponse] {
	return pulumix.Output[AdvancedScheduleMonthlyOccurrenceResponse]{
		OutputState: o.OutputState,
	}
}

// Day of the occurrence. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
func (o AdvancedScheduleMonthlyOccurrenceResponseOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedScheduleMonthlyOccurrenceResponse) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// Occurrence of the week within the month. Must be between 1 and 5
func (o AdvancedScheduleMonthlyOccurrenceResponseOutput) Occurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedScheduleMonthlyOccurrenceResponse) *int { return v.Occurrence }).(pulumi.IntPtrOutput)
}

type AdvancedScheduleMonthlyOccurrenceResponseArrayOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleMonthlyOccurrenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedScheduleMonthlyOccurrenceResponse)(nil)).Elem()
}

func (o AdvancedScheduleMonthlyOccurrenceResponseArrayOutput) ToAdvancedScheduleMonthlyOccurrenceResponseArrayOutput() AdvancedScheduleMonthlyOccurrenceResponseArrayOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceResponseArrayOutput) ToAdvancedScheduleMonthlyOccurrenceResponseArrayOutputWithContext(ctx context.Context) AdvancedScheduleMonthlyOccurrenceResponseArrayOutput {
	return o
}

func (o AdvancedScheduleMonthlyOccurrenceResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedScheduleMonthlyOccurrenceResponse] {
	return pulumix.Output[[]AdvancedScheduleMonthlyOccurrenceResponse]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedScheduleMonthlyOccurrenceResponseArrayOutput) Index(i pulumi.IntInput) AdvancedScheduleMonthlyOccurrenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedScheduleMonthlyOccurrenceResponse {
		return vs[0].([]AdvancedScheduleMonthlyOccurrenceResponse)[vs[1].(int)]
	}).(AdvancedScheduleMonthlyOccurrenceResponseOutput)
}

// The properties of the create Advanced Schedule.
type AdvancedScheduleResponse struct {
	// Days of the month that the job should execute on. Must be between 1 and 31.
	MonthDays []int `pulumi:"monthDays"`
	// Occurrences of days within a month.
	MonthlyOccurrences []AdvancedScheduleMonthlyOccurrenceResponse `pulumi:"monthlyOccurrences"`
	// Days of the week that the job should execute on.
	WeekDays []string `pulumi:"weekDays"`
}

// The properties of the create Advanced Schedule.
type AdvancedScheduleResponseOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedScheduleResponse)(nil)).Elem()
}

func (o AdvancedScheduleResponseOutput) ToAdvancedScheduleResponseOutput() AdvancedScheduleResponseOutput {
	return o
}

func (o AdvancedScheduleResponseOutput) ToAdvancedScheduleResponseOutputWithContext(ctx context.Context) AdvancedScheduleResponseOutput {
	return o
}

func (o AdvancedScheduleResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedScheduleResponse] {
	return pulumix.Output[AdvancedScheduleResponse]{
		OutputState: o.OutputState,
	}
}

// Days of the month that the job should execute on. Must be between 1 and 31.
func (o AdvancedScheduleResponseOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AdvancedScheduleResponse) []int { return v.MonthDays }).(pulumi.IntArrayOutput)
}

// Occurrences of days within a month.
func (o AdvancedScheduleResponseOutput) MonthlyOccurrences() AdvancedScheduleMonthlyOccurrenceResponseArrayOutput {
	return o.ApplyT(func(v AdvancedScheduleResponse) []AdvancedScheduleMonthlyOccurrenceResponse {
		return v.MonthlyOccurrences
	}).(AdvancedScheduleMonthlyOccurrenceResponseArrayOutput)
}

// Days of the week that the job should execute on.
func (o AdvancedScheduleResponseOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdvancedScheduleResponse) []string { return v.WeekDays }).(pulumi.StringArrayOutput)
}

type AdvancedScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (AdvancedScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedScheduleResponse)(nil)).Elem()
}

func (o AdvancedScheduleResponsePtrOutput) ToAdvancedScheduleResponsePtrOutput() AdvancedScheduleResponsePtrOutput {
	return o
}

func (o AdvancedScheduleResponsePtrOutput) ToAdvancedScheduleResponsePtrOutputWithContext(ctx context.Context) AdvancedScheduleResponsePtrOutput {
	return o
}

func (o AdvancedScheduleResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedScheduleResponse] {
	return pulumix.Output[*AdvancedScheduleResponse]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedScheduleResponsePtrOutput) Elem() AdvancedScheduleResponseOutput {
	return o.ApplyT(func(v *AdvancedScheduleResponse) AdvancedScheduleResponse {
		if v != nil {
			return *v
		}
		var ret AdvancedScheduleResponse
		return ret
	}).(AdvancedScheduleResponseOutput)
}

// Days of the month that the job should execute on. Must be between 1 and 31.
func (o AdvancedScheduleResponsePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AdvancedScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// Occurrences of days within a month.
func (o AdvancedScheduleResponsePtrOutput) MonthlyOccurrences() AdvancedScheduleMonthlyOccurrenceResponseArrayOutput {
	return o.ApplyT(func(v *AdvancedScheduleResponse) []AdvancedScheduleMonthlyOccurrenceResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrences
	}).(AdvancedScheduleMonthlyOccurrenceResponseArrayOutput)
}

// Days of the week that the job should execute on.
func (o AdvancedScheduleResponsePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AdvancedScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

// Azure query for the update configuration.
type AzureQueryProperties struct {
	// List of locations to scope the query to.
	Locations []string `pulumi:"locations"`
	// List of Subscription or Resource Group ARM Ids.
	Scope []string `pulumi:"scope"`
	// Tag settings for the VM.
	TagSettings *TagSettingsProperties `pulumi:"tagSettings"`
}

// AzureQueryPropertiesInput is an input type that accepts AzureQueryPropertiesArgs and AzureQueryPropertiesOutput values.
// You can construct a concrete instance of `AzureQueryPropertiesInput` via:
//
//	AzureQueryPropertiesArgs{...}
type AzureQueryPropertiesInput interface {
	pulumi.Input

	ToAzureQueryPropertiesOutput() AzureQueryPropertiesOutput
	ToAzureQueryPropertiesOutputWithContext(context.Context) AzureQueryPropertiesOutput
}

// Azure query for the update configuration.
type AzureQueryPropertiesArgs struct {
	// List of locations to scope the query to.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// List of Subscription or Resource Group ARM Ids.
	Scope pulumi.StringArrayInput `pulumi:"scope"`
	// Tag settings for the VM.
	TagSettings TagSettingsPropertiesPtrInput `pulumi:"tagSettings"`
}

func (AzureQueryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueryProperties)(nil)).Elem()
}

func (i AzureQueryPropertiesArgs) ToAzureQueryPropertiesOutput() AzureQueryPropertiesOutput {
	return i.ToAzureQueryPropertiesOutputWithContext(context.Background())
}

func (i AzureQueryPropertiesArgs) ToAzureQueryPropertiesOutputWithContext(ctx context.Context) AzureQueryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureQueryPropertiesOutput)
}

func (i AzureQueryPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[AzureQueryProperties] {
	return pulumix.Output[AzureQueryProperties]{
		OutputState: i.ToAzureQueryPropertiesOutputWithContext(ctx).OutputState,
	}
}

// AzureQueryPropertiesArrayInput is an input type that accepts AzureQueryPropertiesArray and AzureQueryPropertiesArrayOutput values.
// You can construct a concrete instance of `AzureQueryPropertiesArrayInput` via:
//
//	AzureQueryPropertiesArray{ AzureQueryPropertiesArgs{...} }
type AzureQueryPropertiesArrayInput interface {
	pulumi.Input

	ToAzureQueryPropertiesArrayOutput() AzureQueryPropertiesArrayOutput
	ToAzureQueryPropertiesArrayOutputWithContext(context.Context) AzureQueryPropertiesArrayOutput
}

type AzureQueryPropertiesArray []AzureQueryPropertiesInput

func (AzureQueryPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureQueryProperties)(nil)).Elem()
}

func (i AzureQueryPropertiesArray) ToAzureQueryPropertiesArrayOutput() AzureQueryPropertiesArrayOutput {
	return i.ToAzureQueryPropertiesArrayOutputWithContext(context.Background())
}

func (i AzureQueryPropertiesArray) ToAzureQueryPropertiesArrayOutputWithContext(ctx context.Context) AzureQueryPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureQueryPropertiesArrayOutput)
}

func (i AzureQueryPropertiesArray) ToOutput(ctx context.Context) pulumix.Output[[]AzureQueryProperties] {
	return pulumix.Output[[]AzureQueryProperties]{
		OutputState: i.ToAzureQueryPropertiesArrayOutputWithContext(ctx).OutputState,
	}
}

// Azure query for the update configuration.
type AzureQueryPropertiesOutput struct{ *pulumi.OutputState }

func (AzureQueryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueryProperties)(nil)).Elem()
}

func (o AzureQueryPropertiesOutput) ToAzureQueryPropertiesOutput() AzureQueryPropertiesOutput {
	return o
}

func (o AzureQueryPropertiesOutput) ToAzureQueryPropertiesOutputWithContext(ctx context.Context) AzureQueryPropertiesOutput {
	return o
}

func (o AzureQueryPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[AzureQueryProperties] {
	return pulumix.Output[AzureQueryProperties]{
		OutputState: o.OutputState,
	}
}

// List of locations to scope the query to.
func (o AzureQueryPropertiesOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureQueryProperties) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// List of Subscription or Resource Group ARM Ids.
func (o AzureQueryPropertiesOutput) Scope() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureQueryProperties) []string { return v.Scope }).(pulumi.StringArrayOutput)
}

// Tag settings for the VM.
func (o AzureQueryPropertiesOutput) TagSettings() TagSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v AzureQueryProperties) *TagSettingsProperties { return v.TagSettings }).(TagSettingsPropertiesPtrOutput)
}

type AzureQueryPropertiesArrayOutput struct{ *pulumi.OutputState }

func (AzureQueryPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureQueryProperties)(nil)).Elem()
}

func (o AzureQueryPropertiesArrayOutput) ToAzureQueryPropertiesArrayOutput() AzureQueryPropertiesArrayOutput {
	return o
}

func (o AzureQueryPropertiesArrayOutput) ToAzureQueryPropertiesArrayOutputWithContext(ctx context.Context) AzureQueryPropertiesArrayOutput {
	return o
}

func (o AzureQueryPropertiesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AzureQueryProperties] {
	return pulumix.Output[[]AzureQueryProperties]{
		OutputState: o.OutputState,
	}
}

func (o AzureQueryPropertiesArrayOutput) Index(i pulumi.IntInput) AzureQueryPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureQueryProperties {
		return vs[0].([]AzureQueryProperties)[vs[1].(int)]
	}).(AzureQueryPropertiesOutput)
}

// Azure query for the update configuration.
type AzureQueryPropertiesResponse struct {
	// List of locations to scope the query to.
	Locations []string `pulumi:"locations"`
	// List of Subscription or Resource Group ARM Ids.
	Scope []string `pulumi:"scope"`
	// Tag settings for the VM.
	TagSettings *TagSettingsPropertiesResponse `pulumi:"tagSettings"`
}

// Azure query for the update configuration.
type AzureQueryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureQueryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueryPropertiesResponse)(nil)).Elem()
}

func (o AzureQueryPropertiesResponseOutput) ToAzureQueryPropertiesResponseOutput() AzureQueryPropertiesResponseOutput {
	return o
}

func (o AzureQueryPropertiesResponseOutput) ToAzureQueryPropertiesResponseOutputWithContext(ctx context.Context) AzureQueryPropertiesResponseOutput {
	return o
}

func (o AzureQueryPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AzureQueryPropertiesResponse] {
	return pulumix.Output[AzureQueryPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// List of locations to scope the query to.
func (o AzureQueryPropertiesResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureQueryPropertiesResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// List of Subscription or Resource Group ARM Ids.
func (o AzureQueryPropertiesResponseOutput) Scope() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureQueryPropertiesResponse) []string { return v.Scope }).(pulumi.StringArrayOutput)
}

// Tag settings for the VM.
func (o AzureQueryPropertiesResponseOutput) TagSettings() TagSettingsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureQueryPropertiesResponse) *TagSettingsPropertiesResponse { return v.TagSettings }).(TagSettingsPropertiesResponsePtrOutput)
}

type AzureQueryPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureQueryPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureQueryPropertiesResponse)(nil)).Elem()
}

func (o AzureQueryPropertiesResponseArrayOutput) ToAzureQueryPropertiesResponseArrayOutput() AzureQueryPropertiesResponseArrayOutput {
	return o
}

func (o AzureQueryPropertiesResponseArrayOutput) ToAzureQueryPropertiesResponseArrayOutputWithContext(ctx context.Context) AzureQueryPropertiesResponseArrayOutput {
	return o
}

func (o AzureQueryPropertiesResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AzureQueryPropertiesResponse] {
	return pulumix.Output[[]AzureQueryPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o AzureQueryPropertiesResponseArrayOutput) Index(i pulumi.IntInput) AzureQueryPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureQueryPropertiesResponse {
		return vs[0].([]AzureQueryPropertiesResponse)[vs[1].(int)]
	}).(AzureQueryPropertiesResponseOutput)
}

// Error response of an operation failure
type ErrorResponse struct {
	// Error code
	Code *string `pulumi:"code"`
	// Error message indicating why the operation failed.
	Message *string `pulumi:"message"`
}

// ErrorResponseInput is an input type that accepts ErrorResponseArgs and ErrorResponseOutput values.
// You can construct a concrete instance of `ErrorResponseInput` via:
//
//	ErrorResponseArgs{...}
type ErrorResponseInput interface {
	pulumi.Input

	ToErrorResponseOutput() ErrorResponseOutput
	ToErrorResponseOutputWithContext(context.Context) ErrorResponseOutput
}

// Error response of an operation failure
type ErrorResponseArgs struct {
	// Error code
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Error message indicating why the operation failed.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponse)(nil)).Elem()
}

func (i ErrorResponseArgs) ToErrorResponseOutput() ErrorResponseOutput {
	return i.ToErrorResponseOutputWithContext(context.Background())
}

func (i ErrorResponseArgs) ToErrorResponseOutputWithContext(ctx context.Context) ErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseOutput)
}

func (i ErrorResponseArgs) ToOutput(ctx context.Context) pulumix.Output[ErrorResponse] {
	return pulumix.Output[ErrorResponse]{
		OutputState: i.ToErrorResponseOutputWithContext(ctx).OutputState,
	}
}

func (i ErrorResponseArgs) ToErrorResponsePtrOutput() ErrorResponsePtrOutput {
	return i.ToErrorResponsePtrOutputWithContext(context.Background())
}

func (i ErrorResponseArgs) ToErrorResponsePtrOutputWithContext(ctx context.Context) ErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseOutput).ToErrorResponsePtrOutputWithContext(ctx)
}

// ErrorResponsePtrInput is an input type that accepts ErrorResponseArgs, ErrorResponsePtr and ErrorResponsePtrOutput values.
// You can construct a concrete instance of `ErrorResponsePtrInput` via:
//
//	        ErrorResponseArgs{...}
//
//	or:
//
//	        nil
type ErrorResponsePtrInput interface {
	pulumi.Input

	ToErrorResponsePtrOutput() ErrorResponsePtrOutput
	ToErrorResponsePtrOutputWithContext(context.Context) ErrorResponsePtrOutput
}

type errorResponsePtrType ErrorResponseArgs

func ErrorResponsePtr(v *ErrorResponseArgs) ErrorResponsePtrInput {
	return (*errorResponsePtrType)(v)
}

func (*errorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponse)(nil)).Elem()
}

func (i *errorResponsePtrType) ToErrorResponsePtrOutput() ErrorResponsePtrOutput {
	return i.ToErrorResponsePtrOutputWithContext(context.Background())
}

func (i *errorResponsePtrType) ToErrorResponsePtrOutputWithContext(ctx context.Context) ErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponsePtrOutput)
}

func (i *errorResponsePtrType) ToOutput(ctx context.Context) pulumix.Output[*ErrorResponse] {
	return pulumix.Output[*ErrorResponse]{
		OutputState: i.ToErrorResponsePtrOutputWithContext(ctx).OutputState,
	}
}

// Error response of an operation failure
type ErrorResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponse)(nil)).Elem()
}

func (o ErrorResponseOutput) ToErrorResponseOutput() ErrorResponseOutput {
	return o
}

func (o ErrorResponseOutput) ToErrorResponseOutputWithContext(ctx context.Context) ErrorResponseOutput {
	return o
}

func (o ErrorResponseOutput) ToErrorResponsePtrOutput() ErrorResponsePtrOutput {
	return o.ToErrorResponsePtrOutputWithContext(context.Background())
}

func (o ErrorResponseOutput) ToErrorResponsePtrOutputWithContext(ctx context.Context) ErrorResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ErrorResponse) *ErrorResponse {
		return &v
	}).(ErrorResponsePtrOutput)
}

func (o ErrorResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ErrorResponse] {
	return pulumix.Output[ErrorResponse]{
		OutputState: o.OutputState,
	}
}

// Error code
func (o ErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Error message indicating why the operation failed.
func (o ErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponse)(nil)).Elem()
}

func (o ErrorResponsePtrOutput) ToErrorResponsePtrOutput() ErrorResponsePtrOutput {
	return o
}

func (o ErrorResponsePtrOutput) ToErrorResponsePtrOutputWithContext(ctx context.Context) ErrorResponsePtrOutput {
	return o
}

func (o ErrorResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ErrorResponse] {
	return pulumix.Output[*ErrorResponse]{
		OutputState: o.OutputState,
	}
}

func (o ErrorResponsePtrOutput) Elem() ErrorResponseOutput {
	return o.ApplyT(func(v *ErrorResponse) ErrorResponse {
		if v != nil {
			return *v
		}
		var ret ErrorResponse
		return ret
	}).(ErrorResponseOutput)
}

// Error code
func (o ErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Error message indicating why the operation failed.
func (o ErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Error response of an operation failure
type ErrorResponseResponse struct {
	// Error code
	Code *string `pulumi:"code"`
	// Error message indicating why the operation failed.
	Message *string `pulumi:"message"`
}

// Error response of an operation failure
type ErrorResponseResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ErrorResponseResponse] {
	return pulumix.Output[ErrorResponseResponse]{
		OutputState: o.OutputState,
	}
}

// Error code
func (o ErrorResponseResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponseResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Error message indicating why the operation failed.
func (o ErrorResponseResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponseResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ErrorResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ErrorResponseResponse] {
	return pulumix.Output[*ErrorResponseResponse]{
		OutputState: o.OutputState,
	}
}

func (o ErrorResponseResponsePtrOutput) Elem() ErrorResponseResponseOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) ErrorResponseResponse {
		if v != nil {
			return *v
		}
		var ret ErrorResponseResponse
		return ret
	}).(ErrorResponseResponseOutput)
}

// Error code
func (o ErrorResponseResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Error message indicating why the operation failed.
func (o ErrorResponseResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Linux specific update configuration.
type LinuxProperties struct {
	// packages excluded from the software update configuration.
	ExcludedPackageNameMasks []string `pulumi:"excludedPackageNameMasks"`
	// Update classifications included in the software update configuration.
	IncludedPackageClassifications *string `pulumi:"includedPackageClassifications"`
	// packages included from the software update configuration.
	IncludedPackageNameMasks []string `pulumi:"includedPackageNameMasks"`
	// Reboot setting for the software update configuration.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// LinuxPropertiesInput is an input type that accepts LinuxPropertiesArgs and LinuxPropertiesOutput values.
// You can construct a concrete instance of `LinuxPropertiesInput` via:
//
//	LinuxPropertiesArgs{...}
type LinuxPropertiesInput interface {
	pulumi.Input

	ToLinuxPropertiesOutput() LinuxPropertiesOutput
	ToLinuxPropertiesOutputWithContext(context.Context) LinuxPropertiesOutput
}

// Linux specific update configuration.
type LinuxPropertiesArgs struct {
	// packages excluded from the software update configuration.
	ExcludedPackageNameMasks pulumi.StringArrayInput `pulumi:"excludedPackageNameMasks"`
	// Update classifications included in the software update configuration.
	IncludedPackageClassifications pulumi.StringPtrInput `pulumi:"includedPackageClassifications"`
	// packages included from the software update configuration.
	IncludedPackageNameMasks pulumi.StringArrayInput `pulumi:"includedPackageNameMasks"`
	// Reboot setting for the software update configuration.
	RebootSetting pulumi.StringPtrInput `pulumi:"rebootSetting"`
}

func (LinuxPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProperties)(nil)).Elem()
}

func (i LinuxPropertiesArgs) ToLinuxPropertiesOutput() LinuxPropertiesOutput {
	return i.ToLinuxPropertiesOutputWithContext(context.Background())
}

func (i LinuxPropertiesArgs) ToLinuxPropertiesOutputWithContext(ctx context.Context) LinuxPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxPropertiesOutput)
}

func (i LinuxPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[LinuxProperties] {
	return pulumix.Output[LinuxProperties]{
		OutputState: i.ToLinuxPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i LinuxPropertiesArgs) ToLinuxPropertiesPtrOutput() LinuxPropertiesPtrOutput {
	return i.ToLinuxPropertiesPtrOutputWithContext(context.Background())
}

func (i LinuxPropertiesArgs) ToLinuxPropertiesPtrOutputWithContext(ctx context.Context) LinuxPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxPropertiesOutput).ToLinuxPropertiesPtrOutputWithContext(ctx)
}

// LinuxPropertiesPtrInput is an input type that accepts LinuxPropertiesArgs, LinuxPropertiesPtr and LinuxPropertiesPtrOutput values.
// You can construct a concrete instance of `LinuxPropertiesPtrInput` via:
//
//	        LinuxPropertiesArgs{...}
//
//	or:
//
//	        nil
type LinuxPropertiesPtrInput interface {
	pulumi.Input

	ToLinuxPropertiesPtrOutput() LinuxPropertiesPtrOutput
	ToLinuxPropertiesPtrOutputWithContext(context.Context) LinuxPropertiesPtrOutput
}

type linuxPropertiesPtrType LinuxPropertiesArgs

func LinuxPropertiesPtr(v *LinuxPropertiesArgs) LinuxPropertiesPtrInput {
	return (*linuxPropertiesPtrType)(v)
}

func (*linuxPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProperties)(nil)).Elem()
}

func (i *linuxPropertiesPtrType) ToLinuxPropertiesPtrOutput() LinuxPropertiesPtrOutput {
	return i.ToLinuxPropertiesPtrOutputWithContext(context.Background())
}

func (i *linuxPropertiesPtrType) ToLinuxPropertiesPtrOutputWithContext(ctx context.Context) LinuxPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxPropertiesPtrOutput)
}

func (i *linuxPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*LinuxProperties] {
	return pulumix.Output[*LinuxProperties]{
		OutputState: i.ToLinuxPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Linux specific update configuration.
type LinuxPropertiesOutput struct{ *pulumi.OutputState }

func (LinuxPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProperties)(nil)).Elem()
}

func (o LinuxPropertiesOutput) ToLinuxPropertiesOutput() LinuxPropertiesOutput {
	return o
}

func (o LinuxPropertiesOutput) ToLinuxPropertiesOutputWithContext(ctx context.Context) LinuxPropertiesOutput {
	return o
}

func (o LinuxPropertiesOutput) ToLinuxPropertiesPtrOutput() LinuxPropertiesPtrOutput {
	return o.ToLinuxPropertiesPtrOutputWithContext(context.Background())
}

func (o LinuxPropertiesOutput) ToLinuxPropertiesPtrOutputWithContext(ctx context.Context) LinuxPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxProperties) *LinuxProperties {
		return &v
	}).(LinuxPropertiesPtrOutput)
}

func (o LinuxPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[LinuxProperties] {
	return pulumix.Output[LinuxProperties]{
		OutputState: o.OutputState,
	}
}

// packages excluded from the software update configuration.
func (o LinuxPropertiesOutput) ExcludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxProperties) []string { return v.ExcludedPackageNameMasks }).(pulumi.StringArrayOutput)
}

// Update classifications included in the software update configuration.
func (o LinuxPropertiesOutput) IncludedPackageClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxProperties) *string { return v.IncludedPackageClassifications }).(pulumi.StringPtrOutput)
}

// packages included from the software update configuration.
func (o LinuxPropertiesOutput) IncludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxProperties) []string { return v.IncludedPackageNameMasks }).(pulumi.StringArrayOutput)
}

// Reboot setting for the software update configuration.
func (o LinuxPropertiesOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxProperties) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type LinuxPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LinuxPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProperties)(nil)).Elem()
}

func (o LinuxPropertiesPtrOutput) ToLinuxPropertiesPtrOutput() LinuxPropertiesPtrOutput {
	return o
}

func (o LinuxPropertiesPtrOutput) ToLinuxPropertiesPtrOutputWithContext(ctx context.Context) LinuxPropertiesPtrOutput {
	return o
}

func (o LinuxPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LinuxProperties] {
	return pulumix.Output[*LinuxProperties]{
		OutputState: o.OutputState,
	}
}

func (o LinuxPropertiesPtrOutput) Elem() LinuxPropertiesOutput {
	return o.ApplyT(func(v *LinuxProperties) LinuxProperties {
		if v != nil {
			return *v
		}
		var ret LinuxProperties
		return ret
	}).(LinuxPropertiesOutput)
}

// packages excluded from the software update configuration.
func (o LinuxPropertiesPtrOutput) ExcludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinuxProperties) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPackageNameMasks
	}).(pulumi.StringArrayOutput)
}

// Update classifications included in the software update configuration.
func (o LinuxPropertiesPtrOutput) IncludedPackageClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxProperties) *string {
		if v == nil {
			return nil
		}
		return v.IncludedPackageClassifications
	}).(pulumi.StringPtrOutput)
}

// packages included from the software update configuration.
func (o LinuxPropertiesPtrOutput) IncludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinuxProperties) []string {
		if v == nil {
			return nil
		}
		return v.IncludedPackageNameMasks
	}).(pulumi.StringArrayOutput)
}

// Reboot setting for the software update configuration.
func (o LinuxPropertiesPtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxProperties) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

// Linux specific update configuration.
type LinuxPropertiesResponse struct {
	// packages excluded from the software update configuration.
	ExcludedPackageNameMasks []string `pulumi:"excludedPackageNameMasks"`
	// Update classifications included in the software update configuration.
	IncludedPackageClassifications *string `pulumi:"includedPackageClassifications"`
	// packages included from the software update configuration.
	IncludedPackageNameMasks []string `pulumi:"includedPackageNameMasks"`
	// Reboot setting for the software update configuration.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// Linux specific update configuration.
type LinuxPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LinuxPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxPropertiesResponse)(nil)).Elem()
}

func (o LinuxPropertiesResponseOutput) ToLinuxPropertiesResponseOutput() LinuxPropertiesResponseOutput {
	return o
}

func (o LinuxPropertiesResponseOutput) ToLinuxPropertiesResponseOutputWithContext(ctx context.Context) LinuxPropertiesResponseOutput {
	return o
}

func (o LinuxPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[LinuxPropertiesResponse] {
	return pulumix.Output[LinuxPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// packages excluded from the software update configuration.
func (o LinuxPropertiesResponseOutput) ExcludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxPropertiesResponse) []string { return v.ExcludedPackageNameMasks }).(pulumi.StringArrayOutput)
}

// Update classifications included in the software update configuration.
func (o LinuxPropertiesResponseOutput) IncludedPackageClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxPropertiesResponse) *string { return v.IncludedPackageClassifications }).(pulumi.StringPtrOutput)
}

// packages included from the software update configuration.
func (o LinuxPropertiesResponseOutput) IncludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxPropertiesResponse) []string { return v.IncludedPackageNameMasks }).(pulumi.StringArrayOutput)
}

// Reboot setting for the software update configuration.
func (o LinuxPropertiesResponseOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxPropertiesResponse) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type LinuxPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxPropertiesResponse)(nil)).Elem()
}

func (o LinuxPropertiesResponsePtrOutput) ToLinuxPropertiesResponsePtrOutput() LinuxPropertiesResponsePtrOutput {
	return o
}

func (o LinuxPropertiesResponsePtrOutput) ToLinuxPropertiesResponsePtrOutputWithContext(ctx context.Context) LinuxPropertiesResponsePtrOutput {
	return o
}

func (o LinuxPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LinuxPropertiesResponse] {
	return pulumix.Output[*LinuxPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o LinuxPropertiesResponsePtrOutput) Elem() LinuxPropertiesResponseOutput {
	return o.ApplyT(func(v *LinuxPropertiesResponse) LinuxPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LinuxPropertiesResponse
		return ret
	}).(LinuxPropertiesResponseOutput)
}

// packages excluded from the software update configuration.
func (o LinuxPropertiesResponsePtrOutput) ExcludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinuxPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPackageNameMasks
	}).(pulumi.StringArrayOutput)
}

// Update classifications included in the software update configuration.
func (o LinuxPropertiesResponsePtrOutput) IncludedPackageClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IncludedPackageClassifications
	}).(pulumi.StringPtrOutput)
}

// packages included from the software update configuration.
func (o LinuxPropertiesResponsePtrOutput) IncludedPackageNameMasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinuxPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.IncludedPackageNameMasks
	}).(pulumi.StringArrayOutput)
}

// Reboot setting for the software update configuration.
func (o LinuxPropertiesResponsePtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

// Non Azure query for the update configuration.
type NonAzureQueryProperties struct {
	// Log Analytics Saved Search name.
	FunctionAlias *string `pulumi:"functionAlias"`
	// Workspace Id for Log Analytics in which the saved Search is resided.
	WorkspaceId *string `pulumi:"workspaceId"`
}

// NonAzureQueryPropertiesInput is an input type that accepts NonAzureQueryPropertiesArgs and NonAzureQueryPropertiesOutput values.
// You can construct a concrete instance of `NonAzureQueryPropertiesInput` via:
//
//	NonAzureQueryPropertiesArgs{...}
type NonAzureQueryPropertiesInput interface {
	pulumi.Input

	ToNonAzureQueryPropertiesOutput() NonAzureQueryPropertiesOutput
	ToNonAzureQueryPropertiesOutputWithContext(context.Context) NonAzureQueryPropertiesOutput
}

// Non Azure query for the update configuration.
type NonAzureQueryPropertiesArgs struct {
	// Log Analytics Saved Search name.
	FunctionAlias pulumi.StringPtrInput `pulumi:"functionAlias"`
	// Workspace Id for Log Analytics in which the saved Search is resided.
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (NonAzureQueryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NonAzureQueryProperties)(nil)).Elem()
}

func (i NonAzureQueryPropertiesArgs) ToNonAzureQueryPropertiesOutput() NonAzureQueryPropertiesOutput {
	return i.ToNonAzureQueryPropertiesOutputWithContext(context.Background())
}

func (i NonAzureQueryPropertiesArgs) ToNonAzureQueryPropertiesOutputWithContext(ctx context.Context) NonAzureQueryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonAzureQueryPropertiesOutput)
}

func (i NonAzureQueryPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[NonAzureQueryProperties] {
	return pulumix.Output[NonAzureQueryProperties]{
		OutputState: i.ToNonAzureQueryPropertiesOutputWithContext(ctx).OutputState,
	}
}

// NonAzureQueryPropertiesArrayInput is an input type that accepts NonAzureQueryPropertiesArray and NonAzureQueryPropertiesArrayOutput values.
// You can construct a concrete instance of `NonAzureQueryPropertiesArrayInput` via:
//
//	NonAzureQueryPropertiesArray{ NonAzureQueryPropertiesArgs{...} }
type NonAzureQueryPropertiesArrayInput interface {
	pulumi.Input

	ToNonAzureQueryPropertiesArrayOutput() NonAzureQueryPropertiesArrayOutput
	ToNonAzureQueryPropertiesArrayOutputWithContext(context.Context) NonAzureQueryPropertiesArrayOutput
}

type NonAzureQueryPropertiesArray []NonAzureQueryPropertiesInput

func (NonAzureQueryPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonAzureQueryProperties)(nil)).Elem()
}

func (i NonAzureQueryPropertiesArray) ToNonAzureQueryPropertiesArrayOutput() NonAzureQueryPropertiesArrayOutput {
	return i.ToNonAzureQueryPropertiesArrayOutputWithContext(context.Background())
}

func (i NonAzureQueryPropertiesArray) ToNonAzureQueryPropertiesArrayOutputWithContext(ctx context.Context) NonAzureQueryPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonAzureQueryPropertiesArrayOutput)
}

func (i NonAzureQueryPropertiesArray) ToOutput(ctx context.Context) pulumix.Output[[]NonAzureQueryProperties] {
	return pulumix.Output[[]NonAzureQueryProperties]{
		OutputState: i.ToNonAzureQueryPropertiesArrayOutputWithContext(ctx).OutputState,
	}
}

// Non Azure query for the update configuration.
type NonAzureQueryPropertiesOutput struct{ *pulumi.OutputState }

func (NonAzureQueryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonAzureQueryProperties)(nil)).Elem()
}

func (o NonAzureQueryPropertiesOutput) ToNonAzureQueryPropertiesOutput() NonAzureQueryPropertiesOutput {
	return o
}

func (o NonAzureQueryPropertiesOutput) ToNonAzureQueryPropertiesOutputWithContext(ctx context.Context) NonAzureQueryPropertiesOutput {
	return o
}

func (o NonAzureQueryPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[NonAzureQueryProperties] {
	return pulumix.Output[NonAzureQueryProperties]{
		OutputState: o.OutputState,
	}
}

// Log Analytics Saved Search name.
func (o NonAzureQueryPropertiesOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonAzureQueryProperties) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

// Workspace Id for Log Analytics in which the saved Search is resided.
func (o NonAzureQueryPropertiesOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonAzureQueryProperties) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type NonAzureQueryPropertiesArrayOutput struct{ *pulumi.OutputState }

func (NonAzureQueryPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonAzureQueryProperties)(nil)).Elem()
}

func (o NonAzureQueryPropertiesArrayOutput) ToNonAzureQueryPropertiesArrayOutput() NonAzureQueryPropertiesArrayOutput {
	return o
}

func (o NonAzureQueryPropertiesArrayOutput) ToNonAzureQueryPropertiesArrayOutputWithContext(ctx context.Context) NonAzureQueryPropertiesArrayOutput {
	return o
}

func (o NonAzureQueryPropertiesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NonAzureQueryProperties] {
	return pulumix.Output[[]NonAzureQueryProperties]{
		OutputState: o.OutputState,
	}
}

func (o NonAzureQueryPropertiesArrayOutput) Index(i pulumi.IntInput) NonAzureQueryPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NonAzureQueryProperties {
		return vs[0].([]NonAzureQueryProperties)[vs[1].(int)]
	}).(NonAzureQueryPropertiesOutput)
}

// Non Azure query for the update configuration.
type NonAzureQueryPropertiesResponse struct {
	// Log Analytics Saved Search name.
	FunctionAlias *string `pulumi:"functionAlias"`
	// Workspace Id for Log Analytics in which the saved Search is resided.
	WorkspaceId *string `pulumi:"workspaceId"`
}

// Non Azure query for the update configuration.
type NonAzureQueryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NonAzureQueryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonAzureQueryPropertiesResponse)(nil)).Elem()
}

func (o NonAzureQueryPropertiesResponseOutput) ToNonAzureQueryPropertiesResponseOutput() NonAzureQueryPropertiesResponseOutput {
	return o
}

func (o NonAzureQueryPropertiesResponseOutput) ToNonAzureQueryPropertiesResponseOutputWithContext(ctx context.Context) NonAzureQueryPropertiesResponseOutput {
	return o
}

func (o NonAzureQueryPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[NonAzureQueryPropertiesResponse] {
	return pulumix.Output[NonAzureQueryPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Log Analytics Saved Search name.
func (o NonAzureQueryPropertiesResponseOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonAzureQueryPropertiesResponse) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

// Workspace Id for Log Analytics in which the saved Search is resided.
func (o NonAzureQueryPropertiesResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonAzureQueryPropertiesResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type NonAzureQueryPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (NonAzureQueryPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonAzureQueryPropertiesResponse)(nil)).Elem()
}

func (o NonAzureQueryPropertiesResponseArrayOutput) ToNonAzureQueryPropertiesResponseArrayOutput() NonAzureQueryPropertiesResponseArrayOutput {
	return o
}

func (o NonAzureQueryPropertiesResponseArrayOutput) ToNonAzureQueryPropertiesResponseArrayOutputWithContext(ctx context.Context) NonAzureQueryPropertiesResponseArrayOutput {
	return o
}

func (o NonAzureQueryPropertiesResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NonAzureQueryPropertiesResponse] {
	return pulumix.Output[[]NonAzureQueryPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o NonAzureQueryPropertiesResponseArrayOutput) Index(i pulumi.IntInput) NonAzureQueryPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NonAzureQueryPropertiesResponse {
		return vs[0].([]NonAzureQueryPropertiesResponse)[vs[1].(int)]
	}).(NonAzureQueryPropertiesResponseOutput)
}

// Definition of schedule parameters.
type SUCScheduleProperties struct {
	// Gets or sets the advanced schedule.
	AdvancedSchedule *AdvancedSchedule `pulumi:"advancedSchedule"`
	// Gets or sets the creation time.
	CreationTime *string `pulumi:"creationTime"`
	// Gets or sets the description.
	Description *string `pulumi:"description"`
	// Gets or sets the end time of the schedule.
	ExpiryTime *string `pulumi:"expiryTime"`
	// Gets or sets the expiry time's offset in minutes.
	ExpiryTimeOffsetMinutes *float64 `pulumi:"expiryTimeOffsetMinutes"`
	// Gets or sets the frequency of the schedule.
	Frequency *string `pulumi:"frequency"`
	// Gets or sets the interval of the schedule.
	Interval *float64 `pulumi:"interval"`
	// Gets or sets a value indicating whether this schedule is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Gets or sets the last modified time.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Gets or sets the next run time of the schedule.
	NextRun *string `pulumi:"nextRun"`
	// Gets or sets the next run time's offset in minutes.
	NextRunOffsetMinutes *float64 `pulumi:"nextRunOffsetMinutes"`
	// Gets or sets the start time of the schedule.
	StartTime *string `pulumi:"startTime"`
	// Gets or sets the time zone of the schedule.
	TimeZone *string `pulumi:"timeZone"`
}

// Defaults sets the appropriate defaults for SUCScheduleProperties
func (val *SUCScheduleProperties) Defaults() *SUCScheduleProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsEnabled == nil {
		isEnabled_ := false
		tmp.IsEnabled = &isEnabled_
	}
	return &tmp
}

// SUCSchedulePropertiesInput is an input type that accepts SUCSchedulePropertiesArgs and SUCSchedulePropertiesOutput values.
// You can construct a concrete instance of `SUCSchedulePropertiesInput` via:
//
//	SUCSchedulePropertiesArgs{...}
type SUCSchedulePropertiesInput interface {
	pulumi.Input

	ToSUCSchedulePropertiesOutput() SUCSchedulePropertiesOutput
	ToSUCSchedulePropertiesOutputWithContext(context.Context) SUCSchedulePropertiesOutput
}

// Definition of schedule parameters.
type SUCSchedulePropertiesArgs struct {
	// Gets or sets the advanced schedule.
	AdvancedSchedule AdvancedSchedulePtrInput `pulumi:"advancedSchedule"`
	// Gets or sets the creation time.
	CreationTime pulumi.StringPtrInput `pulumi:"creationTime"`
	// Gets or sets the description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the end time of the schedule.
	ExpiryTime pulumi.StringPtrInput `pulumi:"expiryTime"`
	// Gets or sets the expiry time's offset in minutes.
	ExpiryTimeOffsetMinutes pulumi.Float64PtrInput `pulumi:"expiryTimeOffsetMinutes"`
	// Gets or sets the frequency of the schedule.
	Frequency pulumi.StringPtrInput `pulumi:"frequency"`
	// Gets or sets the interval of the schedule.
	Interval pulumi.Float64PtrInput `pulumi:"interval"`
	// Gets or sets a value indicating whether this schedule is enabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Gets or sets the last modified time.
	LastModifiedTime pulumi.StringPtrInput `pulumi:"lastModifiedTime"`
	// Gets or sets the next run time of the schedule.
	NextRun pulumi.StringPtrInput `pulumi:"nextRun"`
	// Gets or sets the next run time's offset in minutes.
	NextRunOffsetMinutes pulumi.Float64PtrInput `pulumi:"nextRunOffsetMinutes"`
	// Gets or sets the start time of the schedule.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Gets or sets the time zone of the schedule.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

// Defaults sets the appropriate defaults for SUCSchedulePropertiesArgs
func (val *SUCSchedulePropertiesArgs) Defaults() *SUCSchedulePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsEnabled == nil {
		tmp.IsEnabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (SUCSchedulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SUCScheduleProperties)(nil)).Elem()
}

func (i SUCSchedulePropertiesArgs) ToSUCSchedulePropertiesOutput() SUCSchedulePropertiesOutput {
	return i.ToSUCSchedulePropertiesOutputWithContext(context.Background())
}

func (i SUCSchedulePropertiesArgs) ToSUCSchedulePropertiesOutputWithContext(ctx context.Context) SUCSchedulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SUCSchedulePropertiesOutput)
}

func (i SUCSchedulePropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[SUCScheduleProperties] {
	return pulumix.Output[SUCScheduleProperties]{
		OutputState: i.ToSUCSchedulePropertiesOutputWithContext(ctx).OutputState,
	}
}

// Definition of schedule parameters.
type SUCSchedulePropertiesOutput struct{ *pulumi.OutputState }

func (SUCSchedulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SUCScheduleProperties)(nil)).Elem()
}

func (o SUCSchedulePropertiesOutput) ToSUCSchedulePropertiesOutput() SUCSchedulePropertiesOutput {
	return o
}

func (o SUCSchedulePropertiesOutput) ToSUCSchedulePropertiesOutputWithContext(ctx context.Context) SUCSchedulePropertiesOutput {
	return o
}

func (o SUCSchedulePropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[SUCScheduleProperties] {
	return pulumix.Output[SUCScheduleProperties]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the advanced schedule.
func (o SUCSchedulePropertiesOutput) AdvancedSchedule() AdvancedSchedulePtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *AdvancedSchedule { return v.AdvancedSchedule }).(AdvancedSchedulePtrOutput)
}

// Gets or sets the creation time.
func (o SUCSchedulePropertiesOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the description.
func (o SUCSchedulePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the end time of the schedule.
func (o SUCSchedulePropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the expiry time's offset in minutes.
func (o SUCSchedulePropertiesOutput) ExpiryTimeOffsetMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *float64 { return v.ExpiryTimeOffsetMinutes }).(pulumi.Float64PtrOutput)
}

// Gets or sets the frequency of the schedule.
func (o SUCSchedulePropertiesOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.Frequency }).(pulumi.StringPtrOutput)
}

// Gets or sets the interval of the schedule.
func (o SUCSchedulePropertiesOutput) Interval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *float64 { return v.Interval }).(pulumi.Float64PtrOutput)
}

// Gets or sets a value indicating whether this schedule is enabled.
func (o SUCSchedulePropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Gets or sets the last modified time.
func (o SUCSchedulePropertiesOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the next run time of the schedule.
func (o SUCSchedulePropertiesOutput) NextRun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.NextRun }).(pulumi.StringPtrOutput)
}

// Gets or sets the next run time's offset in minutes.
func (o SUCSchedulePropertiesOutput) NextRunOffsetMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *float64 { return v.NextRunOffsetMinutes }).(pulumi.Float64PtrOutput)
}

// Gets or sets the start time of the schedule.
func (o SUCSchedulePropertiesOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the time zone of the schedule.
func (o SUCSchedulePropertiesOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCScheduleProperties) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Definition of schedule parameters.
type SUCSchedulePropertiesResponse struct {
	// Gets or sets the advanced schedule.
	AdvancedSchedule *AdvancedScheduleResponse `pulumi:"advancedSchedule"`
	// Gets or sets the creation time.
	CreationTime *string `pulumi:"creationTime"`
	// Gets or sets the description.
	Description *string `pulumi:"description"`
	// Gets or sets the end time of the schedule.
	ExpiryTime *string `pulumi:"expiryTime"`
	// Gets or sets the expiry time's offset in minutes.
	ExpiryTimeOffsetMinutes *float64 `pulumi:"expiryTimeOffsetMinutes"`
	// Gets or sets the frequency of the schedule.
	Frequency *string `pulumi:"frequency"`
	// Gets or sets the interval of the schedule.
	Interval *float64 `pulumi:"interval"`
	// Gets or sets a value indicating whether this schedule is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Gets or sets the last modified time.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Gets or sets the next run time of the schedule.
	NextRun *string `pulumi:"nextRun"`
	// Gets or sets the next run time's offset in minutes.
	NextRunOffsetMinutes *float64 `pulumi:"nextRunOffsetMinutes"`
	// Gets or sets the start time of the schedule.
	StartTime *string `pulumi:"startTime"`
	// Gets the start time's offset in minutes.
	StartTimeOffsetMinutes float64 `pulumi:"startTimeOffsetMinutes"`
	// Gets or sets the time zone of the schedule.
	TimeZone *string `pulumi:"timeZone"`
}

// Defaults sets the appropriate defaults for SUCSchedulePropertiesResponse
func (val *SUCSchedulePropertiesResponse) Defaults() *SUCSchedulePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsEnabled == nil {
		isEnabled_ := false
		tmp.IsEnabled = &isEnabled_
	}
	return &tmp
}

// Definition of schedule parameters.
type SUCSchedulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SUCSchedulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SUCSchedulePropertiesResponse)(nil)).Elem()
}

func (o SUCSchedulePropertiesResponseOutput) ToSUCSchedulePropertiesResponseOutput() SUCSchedulePropertiesResponseOutput {
	return o
}

func (o SUCSchedulePropertiesResponseOutput) ToSUCSchedulePropertiesResponseOutputWithContext(ctx context.Context) SUCSchedulePropertiesResponseOutput {
	return o
}

func (o SUCSchedulePropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SUCSchedulePropertiesResponse] {
	return pulumix.Output[SUCSchedulePropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the advanced schedule.
func (o SUCSchedulePropertiesResponseOutput) AdvancedSchedule() AdvancedScheduleResponsePtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *AdvancedScheduleResponse { return v.AdvancedSchedule }).(AdvancedScheduleResponsePtrOutput)
}

// Gets or sets the creation time.
func (o SUCSchedulePropertiesResponseOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the description.
func (o SUCSchedulePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the end time of the schedule.
func (o SUCSchedulePropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the expiry time's offset in minutes.
func (o SUCSchedulePropertiesResponseOutput) ExpiryTimeOffsetMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *float64 { return v.ExpiryTimeOffsetMinutes }).(pulumi.Float64PtrOutput)
}

// Gets or sets the frequency of the schedule.
func (o SUCSchedulePropertiesResponseOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.Frequency }).(pulumi.StringPtrOutput)
}

// Gets or sets the interval of the schedule.
func (o SUCSchedulePropertiesResponseOutput) Interval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *float64 { return v.Interval }).(pulumi.Float64PtrOutput)
}

// Gets or sets a value indicating whether this schedule is enabled.
func (o SUCSchedulePropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Gets or sets the last modified time.
func (o SUCSchedulePropertiesResponseOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the next run time of the schedule.
func (o SUCSchedulePropertiesResponseOutput) NextRun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.NextRun }).(pulumi.StringPtrOutput)
}

// Gets or sets the next run time's offset in minutes.
func (o SUCSchedulePropertiesResponseOutput) NextRunOffsetMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *float64 { return v.NextRunOffsetMinutes }).(pulumi.Float64PtrOutput)
}

// Gets or sets the start time of the schedule.
func (o SUCSchedulePropertiesResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Gets the start time's offset in minutes.
func (o SUCSchedulePropertiesResponseOutput) StartTimeOffsetMinutes() pulumi.Float64Output {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) float64 { return v.StartTimeOffsetMinutes }).(pulumi.Float64Output)
}

// Gets or sets the time zone of the schedule.
func (o SUCSchedulePropertiesResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SUCSchedulePropertiesResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Task properties of the software update configuration.
type SoftwareUpdateConfigurationTasks struct {
	// Post task properties.
	PostTask *TaskProperties `pulumi:"postTask"`
	// Pre task properties.
	PreTask *TaskProperties `pulumi:"preTask"`
}

// SoftwareUpdateConfigurationTasksInput is an input type that accepts SoftwareUpdateConfigurationTasksArgs and SoftwareUpdateConfigurationTasksOutput values.
// You can construct a concrete instance of `SoftwareUpdateConfigurationTasksInput` via:
//
//	SoftwareUpdateConfigurationTasksArgs{...}
type SoftwareUpdateConfigurationTasksInput interface {
	pulumi.Input

	ToSoftwareUpdateConfigurationTasksOutput() SoftwareUpdateConfigurationTasksOutput
	ToSoftwareUpdateConfigurationTasksOutputWithContext(context.Context) SoftwareUpdateConfigurationTasksOutput
}

// Task properties of the software update configuration.
type SoftwareUpdateConfigurationTasksArgs struct {
	// Post task properties.
	PostTask TaskPropertiesPtrInput `pulumi:"postTask"`
	// Pre task properties.
	PreTask TaskPropertiesPtrInput `pulumi:"preTask"`
}

func (SoftwareUpdateConfigurationTasksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareUpdateConfigurationTasks)(nil)).Elem()
}

func (i SoftwareUpdateConfigurationTasksArgs) ToSoftwareUpdateConfigurationTasksOutput() SoftwareUpdateConfigurationTasksOutput {
	return i.ToSoftwareUpdateConfigurationTasksOutputWithContext(context.Background())
}

func (i SoftwareUpdateConfigurationTasksArgs) ToSoftwareUpdateConfigurationTasksOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareUpdateConfigurationTasksOutput)
}

func (i SoftwareUpdateConfigurationTasksArgs) ToOutput(ctx context.Context) pulumix.Output[SoftwareUpdateConfigurationTasks] {
	return pulumix.Output[SoftwareUpdateConfigurationTasks]{
		OutputState: i.ToSoftwareUpdateConfigurationTasksOutputWithContext(ctx).OutputState,
	}
}

func (i SoftwareUpdateConfigurationTasksArgs) ToSoftwareUpdateConfigurationTasksPtrOutput() SoftwareUpdateConfigurationTasksPtrOutput {
	return i.ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(context.Background())
}

func (i SoftwareUpdateConfigurationTasksArgs) ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareUpdateConfigurationTasksOutput).ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(ctx)
}

// SoftwareUpdateConfigurationTasksPtrInput is an input type that accepts SoftwareUpdateConfigurationTasksArgs, SoftwareUpdateConfigurationTasksPtr and SoftwareUpdateConfigurationTasksPtrOutput values.
// You can construct a concrete instance of `SoftwareUpdateConfigurationTasksPtrInput` via:
//
//	        SoftwareUpdateConfigurationTasksArgs{...}
//
//	or:
//
//	        nil
type SoftwareUpdateConfigurationTasksPtrInput interface {
	pulumi.Input

	ToSoftwareUpdateConfigurationTasksPtrOutput() SoftwareUpdateConfigurationTasksPtrOutput
	ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(context.Context) SoftwareUpdateConfigurationTasksPtrOutput
}

type softwareUpdateConfigurationTasksPtrType SoftwareUpdateConfigurationTasksArgs

func SoftwareUpdateConfigurationTasksPtr(v *SoftwareUpdateConfigurationTasksArgs) SoftwareUpdateConfigurationTasksPtrInput {
	return (*softwareUpdateConfigurationTasksPtrType)(v)
}

func (*softwareUpdateConfigurationTasksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareUpdateConfigurationTasks)(nil)).Elem()
}

func (i *softwareUpdateConfigurationTasksPtrType) ToSoftwareUpdateConfigurationTasksPtrOutput() SoftwareUpdateConfigurationTasksPtrOutput {
	return i.ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(context.Background())
}

func (i *softwareUpdateConfigurationTasksPtrType) ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareUpdateConfigurationTasksPtrOutput)
}

func (i *softwareUpdateConfigurationTasksPtrType) ToOutput(ctx context.Context) pulumix.Output[*SoftwareUpdateConfigurationTasks] {
	return pulumix.Output[*SoftwareUpdateConfigurationTasks]{
		OutputState: i.ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(ctx).OutputState,
	}
}

// Task properties of the software update configuration.
type SoftwareUpdateConfigurationTasksOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateConfigurationTasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareUpdateConfigurationTasks)(nil)).Elem()
}

func (o SoftwareUpdateConfigurationTasksOutput) ToSoftwareUpdateConfigurationTasksOutput() SoftwareUpdateConfigurationTasksOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksOutput) ToSoftwareUpdateConfigurationTasksOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksOutput) ToSoftwareUpdateConfigurationTasksPtrOutput() SoftwareUpdateConfigurationTasksPtrOutput {
	return o.ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(context.Background())
}

func (o SoftwareUpdateConfigurationTasksOutput) ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftwareUpdateConfigurationTasks) *SoftwareUpdateConfigurationTasks {
		return &v
	}).(SoftwareUpdateConfigurationTasksPtrOutput)
}

func (o SoftwareUpdateConfigurationTasksOutput) ToOutput(ctx context.Context) pulumix.Output[SoftwareUpdateConfigurationTasks] {
	return pulumix.Output[SoftwareUpdateConfigurationTasks]{
		OutputState: o.OutputState,
	}
}

// Post task properties.
func (o SoftwareUpdateConfigurationTasksOutput) PostTask() TaskPropertiesPtrOutput {
	return o.ApplyT(func(v SoftwareUpdateConfigurationTasks) *TaskProperties { return v.PostTask }).(TaskPropertiesPtrOutput)
}

// Pre task properties.
func (o SoftwareUpdateConfigurationTasksOutput) PreTask() TaskPropertiesPtrOutput {
	return o.ApplyT(func(v SoftwareUpdateConfigurationTasks) *TaskProperties { return v.PreTask }).(TaskPropertiesPtrOutput)
}

type SoftwareUpdateConfigurationTasksPtrOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateConfigurationTasksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareUpdateConfigurationTasks)(nil)).Elem()
}

func (o SoftwareUpdateConfigurationTasksPtrOutput) ToSoftwareUpdateConfigurationTasksPtrOutput() SoftwareUpdateConfigurationTasksPtrOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksPtrOutput) ToSoftwareUpdateConfigurationTasksPtrOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksPtrOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SoftwareUpdateConfigurationTasks] {
	return pulumix.Output[*SoftwareUpdateConfigurationTasks]{
		OutputState: o.OutputState,
	}
}

func (o SoftwareUpdateConfigurationTasksPtrOutput) Elem() SoftwareUpdateConfigurationTasksOutput {
	return o.ApplyT(func(v *SoftwareUpdateConfigurationTasks) SoftwareUpdateConfigurationTasks {
		if v != nil {
			return *v
		}
		var ret SoftwareUpdateConfigurationTasks
		return ret
	}).(SoftwareUpdateConfigurationTasksOutput)
}

// Post task properties.
func (o SoftwareUpdateConfigurationTasksPtrOutput) PostTask() TaskPropertiesPtrOutput {
	return o.ApplyT(func(v *SoftwareUpdateConfigurationTasks) *TaskProperties {
		if v == nil {
			return nil
		}
		return v.PostTask
	}).(TaskPropertiesPtrOutput)
}

// Pre task properties.
func (o SoftwareUpdateConfigurationTasksPtrOutput) PreTask() TaskPropertiesPtrOutput {
	return o.ApplyT(func(v *SoftwareUpdateConfigurationTasks) *TaskProperties {
		if v == nil {
			return nil
		}
		return v.PreTask
	}).(TaskPropertiesPtrOutput)
}

// Task properties of the software update configuration.
type SoftwareUpdateConfigurationTasksResponse struct {
	// Post task properties.
	PostTask *TaskPropertiesResponse `pulumi:"postTask"`
	// Pre task properties.
	PreTask *TaskPropertiesResponse `pulumi:"preTask"`
}

// Task properties of the software update configuration.
type SoftwareUpdateConfigurationTasksResponseOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateConfigurationTasksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareUpdateConfigurationTasksResponse)(nil)).Elem()
}

func (o SoftwareUpdateConfigurationTasksResponseOutput) ToSoftwareUpdateConfigurationTasksResponseOutput() SoftwareUpdateConfigurationTasksResponseOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksResponseOutput) ToSoftwareUpdateConfigurationTasksResponseOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksResponseOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SoftwareUpdateConfigurationTasksResponse] {
	return pulumix.Output[SoftwareUpdateConfigurationTasksResponse]{
		OutputState: o.OutputState,
	}
}

// Post task properties.
func (o SoftwareUpdateConfigurationTasksResponseOutput) PostTask() TaskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SoftwareUpdateConfigurationTasksResponse) *TaskPropertiesResponse { return v.PostTask }).(TaskPropertiesResponsePtrOutput)
}

// Pre task properties.
func (o SoftwareUpdateConfigurationTasksResponseOutput) PreTask() TaskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SoftwareUpdateConfigurationTasksResponse) *TaskPropertiesResponse { return v.PreTask }).(TaskPropertiesResponsePtrOutput)
}

type SoftwareUpdateConfigurationTasksResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateConfigurationTasksResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareUpdateConfigurationTasksResponse)(nil)).Elem()
}

func (o SoftwareUpdateConfigurationTasksResponsePtrOutput) ToSoftwareUpdateConfigurationTasksResponsePtrOutput() SoftwareUpdateConfigurationTasksResponsePtrOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksResponsePtrOutput) ToSoftwareUpdateConfigurationTasksResponsePtrOutputWithContext(ctx context.Context) SoftwareUpdateConfigurationTasksResponsePtrOutput {
	return o
}

func (o SoftwareUpdateConfigurationTasksResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SoftwareUpdateConfigurationTasksResponse] {
	return pulumix.Output[*SoftwareUpdateConfigurationTasksResponse]{
		OutputState: o.OutputState,
	}
}

func (o SoftwareUpdateConfigurationTasksResponsePtrOutput) Elem() SoftwareUpdateConfigurationTasksResponseOutput {
	return o.ApplyT(func(v *SoftwareUpdateConfigurationTasksResponse) SoftwareUpdateConfigurationTasksResponse {
		if v != nil {
			return *v
		}
		var ret SoftwareUpdateConfigurationTasksResponse
		return ret
	}).(SoftwareUpdateConfigurationTasksResponseOutput)
}

// Post task properties.
func (o SoftwareUpdateConfigurationTasksResponsePtrOutput) PostTask() TaskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SoftwareUpdateConfigurationTasksResponse) *TaskPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PostTask
	}).(TaskPropertiesResponsePtrOutput)
}

// Pre task properties.
func (o SoftwareUpdateConfigurationTasksResponsePtrOutput) PreTask() TaskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SoftwareUpdateConfigurationTasksResponse) *TaskPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PreTask
	}).(TaskPropertiesResponsePtrOutput)
}

// Tag filter information for the VM.
type TagSettingsProperties struct {
	// Filter VMs by Any or All specified tags.
	FilterOperator *TagOperators `pulumi:"filterOperator"`
	// Dictionary of tags with its list of values.
	Tags map[string][]string `pulumi:"tags"`
}

// TagSettingsPropertiesInput is an input type that accepts TagSettingsPropertiesArgs and TagSettingsPropertiesOutput values.
// You can construct a concrete instance of `TagSettingsPropertiesInput` via:
//
//	TagSettingsPropertiesArgs{...}
type TagSettingsPropertiesInput interface {
	pulumi.Input

	ToTagSettingsPropertiesOutput() TagSettingsPropertiesOutput
	ToTagSettingsPropertiesOutputWithContext(context.Context) TagSettingsPropertiesOutput
}

// Tag filter information for the VM.
type TagSettingsPropertiesArgs struct {
	// Filter VMs by Any or All specified tags.
	FilterOperator TagOperatorsPtrInput `pulumi:"filterOperator"`
	// Dictionary of tags with its list of values.
	Tags pulumi.StringArrayMapInput `pulumi:"tags"`
}

func (TagSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagSettingsProperties)(nil)).Elem()
}

func (i TagSettingsPropertiesArgs) ToTagSettingsPropertiesOutput() TagSettingsPropertiesOutput {
	return i.ToTagSettingsPropertiesOutputWithContext(context.Background())
}

func (i TagSettingsPropertiesArgs) ToTagSettingsPropertiesOutputWithContext(ctx context.Context) TagSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSettingsPropertiesOutput)
}

func (i TagSettingsPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[TagSettingsProperties] {
	return pulumix.Output[TagSettingsProperties]{
		OutputState: i.ToTagSettingsPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i TagSettingsPropertiesArgs) ToTagSettingsPropertiesPtrOutput() TagSettingsPropertiesPtrOutput {
	return i.ToTagSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i TagSettingsPropertiesArgs) ToTagSettingsPropertiesPtrOutputWithContext(ctx context.Context) TagSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSettingsPropertiesOutput).ToTagSettingsPropertiesPtrOutputWithContext(ctx)
}

// TagSettingsPropertiesPtrInput is an input type that accepts TagSettingsPropertiesArgs, TagSettingsPropertiesPtr and TagSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `TagSettingsPropertiesPtrInput` via:
//
//	        TagSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type TagSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToTagSettingsPropertiesPtrOutput() TagSettingsPropertiesPtrOutput
	ToTagSettingsPropertiesPtrOutputWithContext(context.Context) TagSettingsPropertiesPtrOutput
}

type tagSettingsPropertiesPtrType TagSettingsPropertiesArgs

func TagSettingsPropertiesPtr(v *TagSettingsPropertiesArgs) TagSettingsPropertiesPtrInput {
	return (*tagSettingsPropertiesPtrType)(v)
}

func (*tagSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSettingsProperties)(nil)).Elem()
}

func (i *tagSettingsPropertiesPtrType) ToTagSettingsPropertiesPtrOutput() TagSettingsPropertiesPtrOutput {
	return i.ToTagSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *tagSettingsPropertiesPtrType) ToTagSettingsPropertiesPtrOutputWithContext(ctx context.Context) TagSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSettingsPropertiesPtrOutput)
}

func (i *tagSettingsPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*TagSettingsProperties] {
	return pulumix.Output[*TagSettingsProperties]{
		OutputState: i.ToTagSettingsPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Tag filter information for the VM.
type TagSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (TagSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagSettingsProperties)(nil)).Elem()
}

func (o TagSettingsPropertiesOutput) ToTagSettingsPropertiesOutput() TagSettingsPropertiesOutput {
	return o
}

func (o TagSettingsPropertiesOutput) ToTagSettingsPropertiesOutputWithContext(ctx context.Context) TagSettingsPropertiesOutput {
	return o
}

func (o TagSettingsPropertiesOutput) ToTagSettingsPropertiesPtrOutput() TagSettingsPropertiesPtrOutput {
	return o.ToTagSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o TagSettingsPropertiesOutput) ToTagSettingsPropertiesPtrOutputWithContext(ctx context.Context) TagSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagSettingsProperties) *TagSettingsProperties {
		return &v
	}).(TagSettingsPropertiesPtrOutput)
}

func (o TagSettingsPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[TagSettingsProperties] {
	return pulumix.Output[TagSettingsProperties]{
		OutputState: o.OutputState,
	}
}

// Filter VMs by Any or All specified tags.
func (o TagSettingsPropertiesOutput) FilterOperator() TagOperatorsPtrOutput {
	return o.ApplyT(func(v TagSettingsProperties) *TagOperators { return v.FilterOperator }).(TagOperatorsPtrOutput)
}

// Dictionary of tags with its list of values.
func (o TagSettingsPropertiesOutput) Tags() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v TagSettingsProperties) map[string][]string { return v.Tags }).(pulumi.StringArrayMapOutput)
}

type TagSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TagSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSettingsProperties)(nil)).Elem()
}

func (o TagSettingsPropertiesPtrOutput) ToTagSettingsPropertiesPtrOutput() TagSettingsPropertiesPtrOutput {
	return o
}

func (o TagSettingsPropertiesPtrOutput) ToTagSettingsPropertiesPtrOutputWithContext(ctx context.Context) TagSettingsPropertiesPtrOutput {
	return o
}

func (o TagSettingsPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TagSettingsProperties] {
	return pulumix.Output[*TagSettingsProperties]{
		OutputState: o.OutputState,
	}
}

func (o TagSettingsPropertiesPtrOutput) Elem() TagSettingsPropertiesOutput {
	return o.ApplyT(func(v *TagSettingsProperties) TagSettingsProperties {
		if v != nil {
			return *v
		}
		var ret TagSettingsProperties
		return ret
	}).(TagSettingsPropertiesOutput)
}

// Filter VMs by Any or All specified tags.
func (o TagSettingsPropertiesPtrOutput) FilterOperator() TagOperatorsPtrOutput {
	return o.ApplyT(func(v *TagSettingsProperties) *TagOperators {
		if v == nil {
			return nil
		}
		return v.FilterOperator
	}).(TagOperatorsPtrOutput)
}

// Dictionary of tags with its list of values.
func (o TagSettingsPropertiesPtrOutput) Tags() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *TagSettingsProperties) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayMapOutput)
}

// Tag filter information for the VM.
type TagSettingsPropertiesResponse struct {
	// Filter VMs by Any or All specified tags.
	FilterOperator *string `pulumi:"filterOperator"`
	// Dictionary of tags with its list of values.
	Tags map[string][]string `pulumi:"tags"`
}

// Tag filter information for the VM.
type TagSettingsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TagSettingsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagSettingsPropertiesResponse)(nil)).Elem()
}

func (o TagSettingsPropertiesResponseOutput) ToTagSettingsPropertiesResponseOutput() TagSettingsPropertiesResponseOutput {
	return o
}

func (o TagSettingsPropertiesResponseOutput) ToTagSettingsPropertiesResponseOutputWithContext(ctx context.Context) TagSettingsPropertiesResponseOutput {
	return o
}

func (o TagSettingsPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[TagSettingsPropertiesResponse] {
	return pulumix.Output[TagSettingsPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Filter VMs by Any or All specified tags.
func (o TagSettingsPropertiesResponseOutput) FilterOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagSettingsPropertiesResponse) *string { return v.FilterOperator }).(pulumi.StringPtrOutput)
}

// Dictionary of tags with its list of values.
func (o TagSettingsPropertiesResponseOutput) Tags() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v TagSettingsPropertiesResponse) map[string][]string { return v.Tags }).(pulumi.StringArrayMapOutput)
}

type TagSettingsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TagSettingsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSettingsPropertiesResponse)(nil)).Elem()
}

func (o TagSettingsPropertiesResponsePtrOutput) ToTagSettingsPropertiesResponsePtrOutput() TagSettingsPropertiesResponsePtrOutput {
	return o
}

func (o TagSettingsPropertiesResponsePtrOutput) ToTagSettingsPropertiesResponsePtrOutputWithContext(ctx context.Context) TagSettingsPropertiesResponsePtrOutput {
	return o
}

func (o TagSettingsPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TagSettingsPropertiesResponse] {
	return pulumix.Output[*TagSettingsPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o TagSettingsPropertiesResponsePtrOutput) Elem() TagSettingsPropertiesResponseOutput {
	return o.ApplyT(func(v *TagSettingsPropertiesResponse) TagSettingsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TagSettingsPropertiesResponse
		return ret
	}).(TagSettingsPropertiesResponseOutput)
}

// Filter VMs by Any or All specified tags.
func (o TagSettingsPropertiesResponsePtrOutput) FilterOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagSettingsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FilterOperator
	}).(pulumi.StringPtrOutput)
}

// Dictionary of tags with its list of values.
func (o TagSettingsPropertiesResponsePtrOutput) Tags() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *TagSettingsPropertiesResponse) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayMapOutput)
}

// Group specific to the update configuration.
type TargetProperties struct {
	// List of Azure queries in the software update configuration.
	AzureQueries []AzureQueryProperties `pulumi:"azureQueries"`
	// List of non Azure queries in the software update configuration.
	NonAzureQueries []NonAzureQueryProperties `pulumi:"nonAzureQueries"`
}

// TargetPropertiesInput is an input type that accepts TargetPropertiesArgs and TargetPropertiesOutput values.
// You can construct a concrete instance of `TargetPropertiesInput` via:
//
//	TargetPropertiesArgs{...}
type TargetPropertiesInput interface {
	pulumi.Input

	ToTargetPropertiesOutput() TargetPropertiesOutput
	ToTargetPropertiesOutputWithContext(context.Context) TargetPropertiesOutput
}

// Group specific to the update configuration.
type TargetPropertiesArgs struct {
	// List of Azure queries in the software update configuration.
	AzureQueries AzureQueryPropertiesArrayInput `pulumi:"azureQueries"`
	// List of non Azure queries in the software update configuration.
	NonAzureQueries NonAzureQueryPropertiesArrayInput `pulumi:"nonAzureQueries"`
}

func (TargetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetProperties)(nil)).Elem()
}

func (i TargetPropertiesArgs) ToTargetPropertiesOutput() TargetPropertiesOutput {
	return i.ToTargetPropertiesOutputWithContext(context.Background())
}

func (i TargetPropertiesArgs) ToTargetPropertiesOutputWithContext(ctx context.Context) TargetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetPropertiesOutput)
}

func (i TargetPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[TargetProperties] {
	return pulumix.Output[TargetProperties]{
		OutputState: i.ToTargetPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i TargetPropertiesArgs) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return i.ToTargetPropertiesPtrOutputWithContext(context.Background())
}

func (i TargetPropertiesArgs) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetPropertiesOutput).ToTargetPropertiesPtrOutputWithContext(ctx)
}

// TargetPropertiesPtrInput is an input type that accepts TargetPropertiesArgs, TargetPropertiesPtr and TargetPropertiesPtrOutput values.
// You can construct a concrete instance of `TargetPropertiesPtrInput` via:
//
//	        TargetPropertiesArgs{...}
//
//	or:
//
//	        nil
type TargetPropertiesPtrInput interface {
	pulumi.Input

	ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput
	ToTargetPropertiesPtrOutputWithContext(context.Context) TargetPropertiesPtrOutput
}

type targetPropertiesPtrType TargetPropertiesArgs

func TargetPropertiesPtr(v *TargetPropertiesArgs) TargetPropertiesPtrInput {
	return (*targetPropertiesPtrType)(v)
}

func (*targetPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetProperties)(nil)).Elem()
}

func (i *targetPropertiesPtrType) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return i.ToTargetPropertiesPtrOutputWithContext(context.Background())
}

func (i *targetPropertiesPtrType) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetPropertiesPtrOutput)
}

func (i *targetPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*TargetProperties] {
	return pulumix.Output[*TargetProperties]{
		OutputState: i.ToTargetPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Group specific to the update configuration.
type TargetPropertiesOutput struct{ *pulumi.OutputState }

func (TargetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetProperties)(nil)).Elem()
}

func (o TargetPropertiesOutput) ToTargetPropertiesOutput() TargetPropertiesOutput {
	return o
}

func (o TargetPropertiesOutput) ToTargetPropertiesOutputWithContext(ctx context.Context) TargetPropertiesOutput {
	return o
}

func (o TargetPropertiesOutput) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return o.ToTargetPropertiesPtrOutputWithContext(context.Background())
}

func (o TargetPropertiesOutput) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetProperties) *TargetProperties {
		return &v
	}).(TargetPropertiesPtrOutput)
}

func (o TargetPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[TargetProperties] {
	return pulumix.Output[TargetProperties]{
		OutputState: o.OutputState,
	}
}

// List of Azure queries in the software update configuration.
func (o TargetPropertiesOutput) AzureQueries() AzureQueryPropertiesArrayOutput {
	return o.ApplyT(func(v TargetProperties) []AzureQueryProperties { return v.AzureQueries }).(AzureQueryPropertiesArrayOutput)
}

// List of non Azure queries in the software update configuration.
func (o TargetPropertiesOutput) NonAzureQueries() NonAzureQueryPropertiesArrayOutput {
	return o.ApplyT(func(v TargetProperties) []NonAzureQueryProperties { return v.NonAzureQueries }).(NonAzureQueryPropertiesArrayOutput)
}

type TargetPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TargetPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetProperties)(nil)).Elem()
}

func (o TargetPropertiesPtrOutput) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return o
}

func (o TargetPropertiesPtrOutput) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return o
}

func (o TargetPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TargetProperties] {
	return pulumix.Output[*TargetProperties]{
		OutputState: o.OutputState,
	}
}

func (o TargetPropertiesPtrOutput) Elem() TargetPropertiesOutput {
	return o.ApplyT(func(v *TargetProperties) TargetProperties {
		if v != nil {
			return *v
		}
		var ret TargetProperties
		return ret
	}).(TargetPropertiesOutput)
}

// List of Azure queries in the software update configuration.
func (o TargetPropertiesPtrOutput) AzureQueries() AzureQueryPropertiesArrayOutput {
	return o.ApplyT(func(v *TargetProperties) []AzureQueryProperties {
		if v == nil {
			return nil
		}
		return v.AzureQueries
	}).(AzureQueryPropertiesArrayOutput)
}

// List of non Azure queries in the software update configuration.
func (o TargetPropertiesPtrOutput) NonAzureQueries() NonAzureQueryPropertiesArrayOutput {
	return o.ApplyT(func(v *TargetProperties) []NonAzureQueryProperties {
		if v == nil {
			return nil
		}
		return v.NonAzureQueries
	}).(NonAzureQueryPropertiesArrayOutput)
}

// Group specific to the update configuration.
type TargetPropertiesResponse struct {
	// List of Azure queries in the software update configuration.
	AzureQueries []AzureQueryPropertiesResponse `pulumi:"azureQueries"`
	// List of non Azure queries in the software update configuration.
	NonAzureQueries []NonAzureQueryPropertiesResponse `pulumi:"nonAzureQueries"`
}

// Group specific to the update configuration.
type TargetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TargetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetPropertiesResponse)(nil)).Elem()
}

func (o TargetPropertiesResponseOutput) ToTargetPropertiesResponseOutput() TargetPropertiesResponseOutput {
	return o
}

func (o TargetPropertiesResponseOutput) ToTargetPropertiesResponseOutputWithContext(ctx context.Context) TargetPropertiesResponseOutput {
	return o
}

func (o TargetPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[TargetPropertiesResponse] {
	return pulumix.Output[TargetPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// List of Azure queries in the software update configuration.
func (o TargetPropertiesResponseOutput) AzureQueries() AzureQueryPropertiesResponseArrayOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) []AzureQueryPropertiesResponse { return v.AzureQueries }).(AzureQueryPropertiesResponseArrayOutput)
}

// List of non Azure queries in the software update configuration.
func (o TargetPropertiesResponseOutput) NonAzureQueries() NonAzureQueryPropertiesResponseArrayOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) []NonAzureQueryPropertiesResponse { return v.NonAzureQueries }).(NonAzureQueryPropertiesResponseArrayOutput)
}

type TargetPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetPropertiesResponse)(nil)).Elem()
}

func (o TargetPropertiesResponsePtrOutput) ToTargetPropertiesResponsePtrOutput() TargetPropertiesResponsePtrOutput {
	return o
}

func (o TargetPropertiesResponsePtrOutput) ToTargetPropertiesResponsePtrOutputWithContext(ctx context.Context) TargetPropertiesResponsePtrOutput {
	return o
}

func (o TargetPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TargetPropertiesResponse] {
	return pulumix.Output[*TargetPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o TargetPropertiesResponsePtrOutput) Elem() TargetPropertiesResponseOutput {
	return o.ApplyT(func(v *TargetPropertiesResponse) TargetPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TargetPropertiesResponse
		return ret
	}).(TargetPropertiesResponseOutput)
}

// List of Azure queries in the software update configuration.
func (o TargetPropertiesResponsePtrOutput) AzureQueries() AzureQueryPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *TargetPropertiesResponse) []AzureQueryPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.AzureQueries
	}).(AzureQueryPropertiesResponseArrayOutput)
}

// List of non Azure queries in the software update configuration.
func (o TargetPropertiesResponsePtrOutput) NonAzureQueries() NonAzureQueryPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *TargetPropertiesResponse) []NonAzureQueryPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NonAzureQueries
	}).(NonAzureQueryPropertiesResponseArrayOutput)
}

// Task properties of the software update configuration.
type TaskProperties struct {
	// Gets or sets the parameters of the task.
	Parameters map[string]string `pulumi:"parameters"`
	// Gets or sets the name of the runbook.
	Source *string `pulumi:"source"`
}

// TaskPropertiesInput is an input type that accepts TaskPropertiesArgs and TaskPropertiesOutput values.
// You can construct a concrete instance of `TaskPropertiesInput` via:
//
//	TaskPropertiesArgs{...}
type TaskPropertiesInput interface {
	pulumi.Input

	ToTaskPropertiesOutput() TaskPropertiesOutput
	ToTaskPropertiesOutputWithContext(context.Context) TaskPropertiesOutput
}

// Task properties of the software update configuration.
type TaskPropertiesArgs struct {
	// Gets or sets the parameters of the task.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Gets or sets the name of the runbook.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (TaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskProperties)(nil)).Elem()
}

func (i TaskPropertiesArgs) ToTaskPropertiesOutput() TaskPropertiesOutput {
	return i.ToTaskPropertiesOutputWithContext(context.Background())
}

func (i TaskPropertiesArgs) ToTaskPropertiesOutputWithContext(ctx context.Context) TaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesOutput)
}

func (i TaskPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[TaskProperties] {
	return pulumix.Output[TaskProperties]{
		OutputState: i.ToTaskPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i TaskPropertiesArgs) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return i.ToTaskPropertiesPtrOutputWithContext(context.Background())
}

func (i TaskPropertiesArgs) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesOutput).ToTaskPropertiesPtrOutputWithContext(ctx)
}

// TaskPropertiesPtrInput is an input type that accepts TaskPropertiesArgs, TaskPropertiesPtr and TaskPropertiesPtrOutput values.
// You can construct a concrete instance of `TaskPropertiesPtrInput` via:
//
//	        TaskPropertiesArgs{...}
//
//	or:
//
//	        nil
type TaskPropertiesPtrInput interface {
	pulumi.Input

	ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput
	ToTaskPropertiesPtrOutputWithContext(context.Context) TaskPropertiesPtrOutput
}

type taskPropertiesPtrType TaskPropertiesArgs

func TaskPropertiesPtr(v *TaskPropertiesArgs) TaskPropertiesPtrInput {
	return (*taskPropertiesPtrType)(v)
}

func (*taskPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskProperties)(nil)).Elem()
}

func (i *taskPropertiesPtrType) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return i.ToTaskPropertiesPtrOutputWithContext(context.Background())
}

func (i *taskPropertiesPtrType) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesPtrOutput)
}

func (i *taskPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*TaskProperties] {
	return pulumix.Output[*TaskProperties]{
		OutputState: i.ToTaskPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Task properties of the software update configuration.
type TaskPropertiesOutput struct{ *pulumi.OutputState }

func (TaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskProperties)(nil)).Elem()
}

func (o TaskPropertiesOutput) ToTaskPropertiesOutput() TaskPropertiesOutput {
	return o
}

func (o TaskPropertiesOutput) ToTaskPropertiesOutputWithContext(ctx context.Context) TaskPropertiesOutput {
	return o
}

func (o TaskPropertiesOutput) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return o.ToTaskPropertiesPtrOutputWithContext(context.Background())
}

func (o TaskPropertiesOutput) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskProperties) *TaskProperties {
		return &v
	}).(TaskPropertiesPtrOutput)
}

func (o TaskPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[TaskProperties] {
	return pulumix.Output[TaskProperties]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the parameters of the task.
func (o TaskPropertiesOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskProperties) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Gets or sets the name of the runbook.
func (o TaskPropertiesOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskProperties) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type TaskPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TaskPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskProperties)(nil)).Elem()
}

func (o TaskPropertiesPtrOutput) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return o
}

func (o TaskPropertiesPtrOutput) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return o
}

func (o TaskPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TaskProperties] {
	return pulumix.Output[*TaskProperties]{
		OutputState: o.OutputState,
	}
}

func (o TaskPropertiesPtrOutput) Elem() TaskPropertiesOutput {
	return o.ApplyT(func(v *TaskProperties) TaskProperties {
		if v != nil {
			return *v
		}
		var ret TaskProperties
		return ret
	}).(TaskPropertiesOutput)
}

// Gets or sets the parameters of the task.
func (o TaskPropertiesPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Gets or sets the name of the runbook.
func (o TaskPropertiesPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// Task properties of the software update configuration.
type TaskPropertiesResponse struct {
	// Gets or sets the parameters of the task.
	Parameters map[string]string `pulumi:"parameters"`
	// Gets or sets the name of the runbook.
	Source *string `pulumi:"source"`
}

// Task properties of the software update configuration.
type TaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskPropertiesResponse)(nil)).Elem()
}

func (o TaskPropertiesResponseOutput) ToTaskPropertiesResponseOutput() TaskPropertiesResponseOutput {
	return o
}

func (o TaskPropertiesResponseOutput) ToTaskPropertiesResponseOutputWithContext(ctx context.Context) TaskPropertiesResponseOutput {
	return o
}

func (o TaskPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[TaskPropertiesResponse] {
	return pulumix.Output[TaskPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the parameters of the task.
func (o TaskPropertiesResponseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Gets or sets the name of the runbook.
func (o TaskPropertiesResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type TaskPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TaskPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskPropertiesResponse)(nil)).Elem()
}

func (o TaskPropertiesResponsePtrOutput) ToTaskPropertiesResponsePtrOutput() TaskPropertiesResponsePtrOutput {
	return o
}

func (o TaskPropertiesResponsePtrOutput) ToTaskPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskPropertiesResponsePtrOutput {
	return o
}

func (o TaskPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TaskPropertiesResponse] {
	return pulumix.Output[*TaskPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o TaskPropertiesResponsePtrOutput) Elem() TaskPropertiesResponseOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) TaskPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TaskPropertiesResponse
		return ret
	}).(TaskPropertiesResponseOutput)
}

// Gets or sets the parameters of the task.
func (o TaskPropertiesResponsePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Gets or sets the name of the runbook.
func (o TaskPropertiesResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// Update specific properties of the software update configuration.
type UpdateConfiguration struct {
	// List of azure resource Ids for azure virtual machines targeted by the software update configuration.
	AzureVirtualMachines []string `pulumi:"azureVirtualMachines"`
	// Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
	Duration *string `pulumi:"duration"`
	// Linux specific update configuration.
	Linux *LinuxProperties `pulumi:"linux"`
	// List of names of non-azure machines targeted by the software update configuration.
	NonAzureComputerNames []string `pulumi:"nonAzureComputerNames"`
	// operating system of target machines
	OperatingSystem OperatingSystemType `pulumi:"operatingSystem"`
	// Group targets for the software update configuration.
	Targets *TargetProperties `pulumi:"targets"`
	// Windows specific update configuration.
	Windows *WindowsProperties `pulumi:"windows"`
}

// UpdateConfigurationInput is an input type that accepts UpdateConfigurationArgs and UpdateConfigurationOutput values.
// You can construct a concrete instance of `UpdateConfigurationInput` via:
//
//	UpdateConfigurationArgs{...}
type UpdateConfigurationInput interface {
	pulumi.Input

	ToUpdateConfigurationOutput() UpdateConfigurationOutput
	ToUpdateConfigurationOutputWithContext(context.Context) UpdateConfigurationOutput
}

// Update specific properties of the software update configuration.
type UpdateConfigurationArgs struct {
	// List of azure resource Ids for azure virtual machines targeted by the software update configuration.
	AzureVirtualMachines pulumi.StringArrayInput `pulumi:"azureVirtualMachines"`
	// Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Linux specific update configuration.
	Linux LinuxPropertiesPtrInput `pulumi:"linux"`
	// List of names of non-azure machines targeted by the software update configuration.
	NonAzureComputerNames pulumi.StringArrayInput `pulumi:"nonAzureComputerNames"`
	// operating system of target machines
	OperatingSystem OperatingSystemTypeInput `pulumi:"operatingSystem"`
	// Group targets for the software update configuration.
	Targets TargetPropertiesPtrInput `pulumi:"targets"`
	// Windows specific update configuration.
	Windows WindowsPropertiesPtrInput `pulumi:"windows"`
}

func (UpdateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateConfiguration)(nil)).Elem()
}

func (i UpdateConfigurationArgs) ToUpdateConfigurationOutput() UpdateConfigurationOutput {
	return i.ToUpdateConfigurationOutputWithContext(context.Background())
}

func (i UpdateConfigurationArgs) ToUpdateConfigurationOutputWithContext(ctx context.Context) UpdateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateConfigurationOutput)
}

func (i UpdateConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[UpdateConfiguration] {
	return pulumix.Output[UpdateConfiguration]{
		OutputState: i.ToUpdateConfigurationOutputWithContext(ctx).OutputState,
	}
}

// Update specific properties of the software update configuration.
type UpdateConfigurationOutput struct{ *pulumi.OutputState }

func (UpdateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateConfiguration)(nil)).Elem()
}

func (o UpdateConfigurationOutput) ToUpdateConfigurationOutput() UpdateConfigurationOutput {
	return o
}

func (o UpdateConfigurationOutput) ToUpdateConfigurationOutputWithContext(ctx context.Context) UpdateConfigurationOutput {
	return o
}

func (o UpdateConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[UpdateConfiguration] {
	return pulumix.Output[UpdateConfiguration]{
		OutputState: o.OutputState,
	}
}

// List of azure resource Ids for azure virtual machines targeted by the software update configuration.
func (o UpdateConfigurationOutput) AzureVirtualMachines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpdateConfiguration) []string { return v.AzureVirtualMachines }).(pulumi.StringArrayOutput)
}

// Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
func (o UpdateConfigurationOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateConfiguration) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Linux specific update configuration.
func (o UpdateConfigurationOutput) Linux() LinuxPropertiesPtrOutput {
	return o.ApplyT(func(v UpdateConfiguration) *LinuxProperties { return v.Linux }).(LinuxPropertiesPtrOutput)
}

// List of names of non-azure machines targeted by the software update configuration.
func (o UpdateConfigurationOutput) NonAzureComputerNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpdateConfiguration) []string { return v.NonAzureComputerNames }).(pulumi.StringArrayOutput)
}

// operating system of target machines
func (o UpdateConfigurationOutput) OperatingSystem() OperatingSystemTypeOutput {
	return o.ApplyT(func(v UpdateConfiguration) OperatingSystemType { return v.OperatingSystem }).(OperatingSystemTypeOutput)
}

// Group targets for the software update configuration.
func (o UpdateConfigurationOutput) Targets() TargetPropertiesPtrOutput {
	return o.ApplyT(func(v UpdateConfiguration) *TargetProperties { return v.Targets }).(TargetPropertiesPtrOutput)
}

// Windows specific update configuration.
func (o UpdateConfigurationOutput) Windows() WindowsPropertiesPtrOutput {
	return o.ApplyT(func(v UpdateConfiguration) *WindowsProperties { return v.Windows }).(WindowsPropertiesPtrOutput)
}

// Update specific properties of the software update configuration.
type UpdateConfigurationResponse struct {
	// List of azure resource Ids for azure virtual machines targeted by the software update configuration.
	AzureVirtualMachines []string `pulumi:"azureVirtualMachines"`
	// Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
	Duration *string `pulumi:"duration"`
	// Linux specific update configuration.
	Linux *LinuxPropertiesResponse `pulumi:"linux"`
	// List of names of non-azure machines targeted by the software update configuration.
	NonAzureComputerNames []string `pulumi:"nonAzureComputerNames"`
	// operating system of target machines
	OperatingSystem string `pulumi:"operatingSystem"`
	// Group targets for the software update configuration.
	Targets *TargetPropertiesResponse `pulumi:"targets"`
	// Windows specific update configuration.
	Windows *WindowsPropertiesResponse `pulumi:"windows"`
}

// Update specific properties of the software update configuration.
type UpdateConfigurationResponseOutput struct{ *pulumi.OutputState }

func (UpdateConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateConfigurationResponse)(nil)).Elem()
}

func (o UpdateConfigurationResponseOutput) ToUpdateConfigurationResponseOutput() UpdateConfigurationResponseOutput {
	return o
}

func (o UpdateConfigurationResponseOutput) ToUpdateConfigurationResponseOutputWithContext(ctx context.Context) UpdateConfigurationResponseOutput {
	return o
}

func (o UpdateConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[UpdateConfigurationResponse] {
	return pulumix.Output[UpdateConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// List of azure resource Ids for azure virtual machines targeted by the software update configuration.
func (o UpdateConfigurationResponseOutput) AzureVirtualMachines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) []string { return v.AzureVirtualMachines }).(pulumi.StringArrayOutput)
}

// Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
func (o UpdateConfigurationResponseOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Linux specific update configuration.
func (o UpdateConfigurationResponseOutput) Linux() LinuxPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) *LinuxPropertiesResponse { return v.Linux }).(LinuxPropertiesResponsePtrOutput)
}

// List of names of non-azure machines targeted by the software update configuration.
func (o UpdateConfigurationResponseOutput) NonAzureComputerNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) []string { return v.NonAzureComputerNames }).(pulumi.StringArrayOutput)
}

// operating system of target machines
func (o UpdateConfigurationResponseOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// Group targets for the software update configuration.
func (o UpdateConfigurationResponseOutput) Targets() TargetPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) *TargetPropertiesResponse { return v.Targets }).(TargetPropertiesResponsePtrOutput)
}

// Windows specific update configuration.
func (o UpdateConfigurationResponseOutput) Windows() WindowsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UpdateConfigurationResponse) *WindowsPropertiesResponse { return v.Windows }).(WindowsPropertiesResponsePtrOutput)
}

// Windows specific update configuration.
type WindowsProperties struct {
	// KB numbers excluded from the software update configuration.
	ExcludedKbNumbers []string `pulumi:"excludedKbNumbers"`
	// KB numbers included from the software update configuration.
	IncludedKbNumbers []string `pulumi:"includedKbNumbers"`
	// Update classification included in the software update configuration. A comma separated string with required values
	IncludedUpdateClassifications *string `pulumi:"includedUpdateClassifications"`
	// Reboot setting for the software update configuration.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// WindowsPropertiesInput is an input type that accepts WindowsPropertiesArgs and WindowsPropertiesOutput values.
// You can construct a concrete instance of `WindowsPropertiesInput` via:
//
//	WindowsPropertiesArgs{...}
type WindowsPropertiesInput interface {
	pulumi.Input

	ToWindowsPropertiesOutput() WindowsPropertiesOutput
	ToWindowsPropertiesOutputWithContext(context.Context) WindowsPropertiesOutput
}

// Windows specific update configuration.
type WindowsPropertiesArgs struct {
	// KB numbers excluded from the software update configuration.
	ExcludedKbNumbers pulumi.StringArrayInput `pulumi:"excludedKbNumbers"`
	// KB numbers included from the software update configuration.
	IncludedKbNumbers pulumi.StringArrayInput `pulumi:"includedKbNumbers"`
	// Update classification included in the software update configuration. A comma separated string with required values
	IncludedUpdateClassifications pulumi.StringPtrInput `pulumi:"includedUpdateClassifications"`
	// Reboot setting for the software update configuration.
	RebootSetting pulumi.StringPtrInput `pulumi:"rebootSetting"`
}

func (WindowsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsProperties)(nil)).Elem()
}

func (i WindowsPropertiesArgs) ToWindowsPropertiesOutput() WindowsPropertiesOutput {
	return i.ToWindowsPropertiesOutputWithContext(context.Background())
}

func (i WindowsPropertiesArgs) ToWindowsPropertiesOutputWithContext(ctx context.Context) WindowsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsPropertiesOutput)
}

func (i WindowsPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[WindowsProperties] {
	return pulumix.Output[WindowsProperties]{
		OutputState: i.ToWindowsPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i WindowsPropertiesArgs) ToWindowsPropertiesPtrOutput() WindowsPropertiesPtrOutput {
	return i.ToWindowsPropertiesPtrOutputWithContext(context.Background())
}

func (i WindowsPropertiesArgs) ToWindowsPropertiesPtrOutputWithContext(ctx context.Context) WindowsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsPropertiesOutput).ToWindowsPropertiesPtrOutputWithContext(ctx)
}

// WindowsPropertiesPtrInput is an input type that accepts WindowsPropertiesArgs, WindowsPropertiesPtr and WindowsPropertiesPtrOutput values.
// You can construct a concrete instance of `WindowsPropertiesPtrInput` via:
//
//	        WindowsPropertiesArgs{...}
//
//	or:
//
//	        nil
type WindowsPropertiesPtrInput interface {
	pulumi.Input

	ToWindowsPropertiesPtrOutput() WindowsPropertiesPtrOutput
	ToWindowsPropertiesPtrOutputWithContext(context.Context) WindowsPropertiesPtrOutput
}

type windowsPropertiesPtrType WindowsPropertiesArgs

func WindowsPropertiesPtr(v *WindowsPropertiesArgs) WindowsPropertiesPtrInput {
	return (*windowsPropertiesPtrType)(v)
}

func (*windowsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsProperties)(nil)).Elem()
}

func (i *windowsPropertiesPtrType) ToWindowsPropertiesPtrOutput() WindowsPropertiesPtrOutput {
	return i.ToWindowsPropertiesPtrOutputWithContext(context.Background())
}

func (i *windowsPropertiesPtrType) ToWindowsPropertiesPtrOutputWithContext(ctx context.Context) WindowsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsPropertiesPtrOutput)
}

func (i *windowsPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*WindowsProperties] {
	return pulumix.Output[*WindowsProperties]{
		OutputState: i.ToWindowsPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Windows specific update configuration.
type WindowsPropertiesOutput struct{ *pulumi.OutputState }

func (WindowsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsProperties)(nil)).Elem()
}

func (o WindowsPropertiesOutput) ToWindowsPropertiesOutput() WindowsPropertiesOutput {
	return o
}

func (o WindowsPropertiesOutput) ToWindowsPropertiesOutputWithContext(ctx context.Context) WindowsPropertiesOutput {
	return o
}

func (o WindowsPropertiesOutput) ToWindowsPropertiesPtrOutput() WindowsPropertiesPtrOutput {
	return o.ToWindowsPropertiesPtrOutputWithContext(context.Background())
}

func (o WindowsPropertiesOutput) ToWindowsPropertiesPtrOutputWithContext(ctx context.Context) WindowsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsProperties) *WindowsProperties {
		return &v
	}).(WindowsPropertiesPtrOutput)
}

func (o WindowsPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[WindowsProperties] {
	return pulumix.Output[WindowsProperties]{
		OutputState: o.OutputState,
	}
}

// KB numbers excluded from the software update configuration.
func (o WindowsPropertiesOutput) ExcludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsProperties) []string { return v.ExcludedKbNumbers }).(pulumi.StringArrayOutput)
}

// KB numbers included from the software update configuration.
func (o WindowsPropertiesOutput) IncludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsProperties) []string { return v.IncludedKbNumbers }).(pulumi.StringArrayOutput)
}

// Update classification included in the software update configuration. A comma separated string with required values
func (o WindowsPropertiesOutput) IncludedUpdateClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsProperties) *string { return v.IncludedUpdateClassifications }).(pulumi.StringPtrOutput)
}

// Reboot setting for the software update configuration.
func (o WindowsPropertiesOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsProperties) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type WindowsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WindowsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsProperties)(nil)).Elem()
}

func (o WindowsPropertiesPtrOutput) ToWindowsPropertiesPtrOutput() WindowsPropertiesPtrOutput {
	return o
}

func (o WindowsPropertiesPtrOutput) ToWindowsPropertiesPtrOutputWithContext(ctx context.Context) WindowsPropertiesPtrOutput {
	return o
}

func (o WindowsPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WindowsProperties] {
	return pulumix.Output[*WindowsProperties]{
		OutputState: o.OutputState,
	}
}

func (o WindowsPropertiesPtrOutput) Elem() WindowsPropertiesOutput {
	return o.ApplyT(func(v *WindowsProperties) WindowsProperties {
		if v != nil {
			return *v
		}
		var ret WindowsProperties
		return ret
	}).(WindowsPropertiesOutput)
}

// KB numbers excluded from the software update configuration.
func (o WindowsPropertiesPtrOutput) ExcludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsProperties) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedKbNumbers
	}).(pulumi.StringArrayOutput)
}

// KB numbers included from the software update configuration.
func (o WindowsPropertiesPtrOutput) IncludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsProperties) []string {
		if v == nil {
			return nil
		}
		return v.IncludedKbNumbers
	}).(pulumi.StringArrayOutput)
}

// Update classification included in the software update configuration. A comma separated string with required values
func (o WindowsPropertiesPtrOutput) IncludedUpdateClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsProperties) *string {
		if v == nil {
			return nil
		}
		return v.IncludedUpdateClassifications
	}).(pulumi.StringPtrOutput)
}

// Reboot setting for the software update configuration.
func (o WindowsPropertiesPtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsProperties) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

// Windows specific update configuration.
type WindowsPropertiesResponse struct {
	// KB numbers excluded from the software update configuration.
	ExcludedKbNumbers []string `pulumi:"excludedKbNumbers"`
	// KB numbers included from the software update configuration.
	IncludedKbNumbers []string `pulumi:"includedKbNumbers"`
	// Update classification included in the software update configuration. A comma separated string with required values
	IncludedUpdateClassifications *string `pulumi:"includedUpdateClassifications"`
	// Reboot setting for the software update configuration.
	RebootSetting *string `pulumi:"rebootSetting"`
}

// Windows specific update configuration.
type WindowsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WindowsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsPropertiesResponse)(nil)).Elem()
}

func (o WindowsPropertiesResponseOutput) ToWindowsPropertiesResponseOutput() WindowsPropertiesResponseOutput {
	return o
}

func (o WindowsPropertiesResponseOutput) ToWindowsPropertiesResponseOutputWithContext(ctx context.Context) WindowsPropertiesResponseOutput {
	return o
}

func (o WindowsPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[WindowsPropertiesResponse] {
	return pulumix.Output[WindowsPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// KB numbers excluded from the software update configuration.
func (o WindowsPropertiesResponseOutput) ExcludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsPropertiesResponse) []string { return v.ExcludedKbNumbers }).(pulumi.StringArrayOutput)
}

// KB numbers included from the software update configuration.
func (o WindowsPropertiesResponseOutput) IncludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsPropertiesResponse) []string { return v.IncludedKbNumbers }).(pulumi.StringArrayOutput)
}

// Update classification included in the software update configuration. A comma separated string with required values
func (o WindowsPropertiesResponseOutput) IncludedUpdateClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsPropertiesResponse) *string { return v.IncludedUpdateClassifications }).(pulumi.StringPtrOutput)
}

// Reboot setting for the software update configuration.
func (o WindowsPropertiesResponseOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsPropertiesResponse) *string { return v.RebootSetting }).(pulumi.StringPtrOutput)
}

type WindowsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsPropertiesResponse)(nil)).Elem()
}

func (o WindowsPropertiesResponsePtrOutput) ToWindowsPropertiesResponsePtrOutput() WindowsPropertiesResponsePtrOutput {
	return o
}

func (o WindowsPropertiesResponsePtrOutput) ToWindowsPropertiesResponsePtrOutputWithContext(ctx context.Context) WindowsPropertiesResponsePtrOutput {
	return o
}

func (o WindowsPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WindowsPropertiesResponse] {
	return pulumix.Output[*WindowsPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o WindowsPropertiesResponsePtrOutput) Elem() WindowsPropertiesResponseOutput {
	return o.ApplyT(func(v *WindowsPropertiesResponse) WindowsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret WindowsPropertiesResponse
		return ret
	}).(WindowsPropertiesResponseOutput)
}

// KB numbers excluded from the software update configuration.
func (o WindowsPropertiesResponsePtrOutput) ExcludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedKbNumbers
	}).(pulumi.StringArrayOutput)
}

// KB numbers included from the software update configuration.
func (o WindowsPropertiesResponsePtrOutput) IncludedKbNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.IncludedKbNumbers
	}).(pulumi.StringArrayOutput)
}

// Update classification included in the software update configuration. A comma separated string with required values
func (o WindowsPropertiesResponsePtrOutput) IncludedUpdateClassifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IncludedUpdateClassifications
	}).(pulumi.StringPtrOutput)
}

// Reboot setting for the software update configuration.
func (o WindowsPropertiesResponsePtrOutput) RebootSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RebootSetting
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdvancedScheduleOutput{})
	pulumi.RegisterOutputType(AdvancedSchedulePtrOutput{})
	pulumi.RegisterOutputType(AdvancedScheduleMonthlyOccurrenceOutput{})
	pulumi.RegisterOutputType(AdvancedScheduleMonthlyOccurrenceArrayOutput{})
	pulumi.RegisterOutputType(AdvancedScheduleMonthlyOccurrenceResponseOutput{})
	pulumi.RegisterOutputType(AdvancedScheduleMonthlyOccurrenceResponseArrayOutput{})
	pulumi.RegisterOutputType(AdvancedScheduleResponseOutput{})
	pulumi.RegisterOutputType(AdvancedScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureQueryPropertiesOutput{})
	pulumi.RegisterOutputType(AzureQueryPropertiesArrayOutput{})
	pulumi.RegisterOutputType(AzureQueryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AzureQueryPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxPropertiesOutput{})
	pulumi.RegisterOutputType(LinuxPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LinuxPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LinuxPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NonAzureQueryPropertiesOutput{})
	pulumi.RegisterOutputType(NonAzureQueryPropertiesArrayOutput{})
	pulumi.RegisterOutputType(NonAzureQueryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NonAzureQueryPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SUCSchedulePropertiesOutput{})
	pulumi.RegisterOutputType(SUCSchedulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateConfigurationTasksOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateConfigurationTasksPtrOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateConfigurationTasksResponseOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateConfigurationTasksResponsePtrOutput{})
	pulumi.RegisterOutputType(TagSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(TagSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TagSettingsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TagSettingsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetPropertiesOutput{})
	pulumi.RegisterOutputType(TargetPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TargetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TargetPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskPropertiesOutput{})
	pulumi.RegisterOutputType(TaskPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TaskPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UpdateConfigurationOutput{})
	pulumi.RegisterOutputType(UpdateConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WindowsPropertiesOutput{})
	pulumi.RegisterOutputType(WindowsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WindowsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WindowsPropertiesResponsePtrOutput{})
}
