// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the module type.
type PowerShell72Module struct {
	pulumi.CustomResourceState

	// Gets the activity count of the module.
	ActivityCount pulumi.IntPtrOutput `pulumi:"activityCount"`
	// Gets the creation time.
	CreationTime pulumi.StringPtrOutput `pulumi:"creationTime"`
	// Gets or sets the description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Gets the error info of the module.
	Error ModuleErrorInfoResponsePtrOutput `pulumi:"error"`
	// Gets the etag of the resource.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Gets type of module, if its composite or not.
	IsComposite pulumi.BoolPtrOutput `pulumi:"isComposite"`
	// Gets the isGlobal flag of the module.
	IsGlobal pulumi.BoolPtrOutput `pulumi:"isGlobal"`
	// Gets the last modified time.
	LastModifiedTime pulumi.StringPtrOutput `pulumi:"lastModifiedTime"`
	// The Azure Region where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets the provisioning state of the module.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Gets the size in bytes of the module.
	SizeInBytes pulumi.Float64PtrOutput `pulumi:"sizeInBytes"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// Gets the version of the module.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewPowerShell72Module registers a new resource with the given unique name, arguments, and options.
func NewPowerShell72Module(ctx *pulumi.Context,
	name string, args *PowerShell72ModuleArgs, opts ...pulumi.ResourceOption) (*PowerShell72Module, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ContentLink == nil {
		return nil, errors.New("invalid value for required argument 'ContentLink'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:automation:PowerShell72Module"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PowerShell72Module
	err := ctx.RegisterResource("azure-native:automation/v20231101:PowerShell72Module", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPowerShell72Module gets an existing PowerShell72Module resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPowerShell72Module(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PowerShell72ModuleState, opts ...pulumi.ResourceOption) (*PowerShell72Module, error) {
	var resource PowerShell72Module
	err := ctx.ReadResource("azure-native:automation/v20231101:PowerShell72Module", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PowerShell72Module resources.
type powerShell72ModuleState struct {
}

type PowerShell72ModuleState struct {
}

func (PowerShell72ModuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*powerShell72ModuleState)(nil)).Elem()
}

type powerShell72ModuleArgs struct {
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// Sets the hash.
	ContentLink ContentLink `pulumi:"contentLink"`
	// Sets the location of the resource.
	Location *string `pulumi:"location"`
	// The name of module.
	ModuleName *string `pulumi:"moduleName"`
	// Sets name of the resource.
	Name *string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Sets the tags attached to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PowerShell72Module resource.
type PowerShell72ModuleArgs struct {
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput
	// Sets the hash.
	ContentLink ContentLinkInput
	// Sets the location of the resource.
	Location pulumi.StringPtrInput
	// The name of module.
	ModuleName pulumi.StringPtrInput
	// Sets name of the resource.
	Name pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Sets the tags attached to the resource.
	Tags pulumi.StringMapInput
}

func (PowerShell72ModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*powerShell72ModuleArgs)(nil)).Elem()
}

type PowerShell72ModuleInput interface {
	pulumi.Input

	ToPowerShell72ModuleOutput() PowerShell72ModuleOutput
	ToPowerShell72ModuleOutputWithContext(ctx context.Context) PowerShell72ModuleOutput
}

func (*PowerShell72Module) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerShell72Module)(nil)).Elem()
}

func (i *PowerShell72Module) ToPowerShell72ModuleOutput() PowerShell72ModuleOutput {
	return i.ToPowerShell72ModuleOutputWithContext(context.Background())
}

func (i *PowerShell72Module) ToPowerShell72ModuleOutputWithContext(ctx context.Context) PowerShell72ModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerShell72ModuleOutput)
}

type PowerShell72ModuleOutput struct{ *pulumi.OutputState }

func (PowerShell72ModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerShell72Module)(nil)).Elem()
}

func (o PowerShell72ModuleOutput) ToPowerShell72ModuleOutput() PowerShell72ModuleOutput {
	return o
}

func (o PowerShell72ModuleOutput) ToPowerShell72ModuleOutputWithContext(ctx context.Context) PowerShell72ModuleOutput {
	return o
}

// Gets the activity count of the module.
func (o PowerShell72ModuleOutput) ActivityCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.IntPtrOutput { return v.ActivityCount }).(pulumi.IntPtrOutput)
}

// Gets the creation time.
func (o PowerShell72ModuleOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the description.
func (o PowerShell72ModuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets the error info of the module.
func (o PowerShell72ModuleOutput) Error() ModuleErrorInfoResponsePtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) ModuleErrorInfoResponsePtrOutput { return v.Error }).(ModuleErrorInfoResponsePtrOutput)
}

// Gets the etag of the resource.
func (o PowerShell72ModuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// Gets type of module, if its composite or not.
func (o PowerShell72ModuleOutput) IsComposite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.BoolPtrOutput { return v.IsComposite }).(pulumi.BoolPtrOutput)
}

// Gets the isGlobal flag of the module.
func (o PowerShell72ModuleOutput) IsGlobal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.BoolPtrOutput { return v.IsGlobal }).(pulumi.BoolPtrOutput)
}

// Gets the last modified time.
func (o PowerShell72ModuleOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// The Azure Region where the resource lives
func (o PowerShell72ModuleOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o PowerShell72ModuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets the provisioning state of the module.
func (o PowerShell72ModuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets the size in bytes of the module.
func (o PowerShell72ModuleOutput) SizeInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.Float64PtrOutput { return v.SizeInBytes }).(pulumi.Float64PtrOutput)
}

// Resource tags.
func (o PowerShell72ModuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o PowerShell72ModuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Gets the version of the module.
func (o PowerShell72ModuleOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerShell72Module) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PowerShell72ModuleOutput{})
}
