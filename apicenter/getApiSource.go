// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apicenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns details of the API source.
//
// Uses Azure REST API version 2024-06-01-preview.
func LookupApiSource(ctx *pulumi.Context, args *LookupApiSourceArgs, opts ...pulumi.InvokeOption) (*LookupApiSourceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupApiSourceResult
	err := ctx.Invoke("azure-native:apicenter:getApiSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupApiSourceArgs struct {
	// The name of the API.
	ApiSourceName string `pulumi:"apiSourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of Azure API Center service.
	ServiceName string `pulumi:"serviceName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// API source entity.
type LookupApiSourceResult struct {
	// API source configuration for Azure API Management.
	AzureApiManagementSource *AzureApiManagementSourceResponse `pulumi:"azureApiManagementSource"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Indicates if the specification should be imported along with metadata.
	ImportSpecification *string `pulumi:"importSpecification"`
	// The state of the API source link
	LinkState LinkStateResponse `pulumi:"linkState"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The target environment resource ID.
	TargetEnvironmentId *string `pulumi:"targetEnvironmentId"`
	// The target lifecycle stage.
	TargetLifecycleStage *string `pulumi:"targetLifecycleStage"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupApiSourceResult
func (val *LookupApiSourceResult) Defaults() *LookupApiSourceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ImportSpecification == nil {
		importSpecification_ := "ondemand"
		tmp.ImportSpecification = &importSpecification_
	}
	return &tmp
}
func LookupApiSourceOutput(ctx *pulumi.Context, args LookupApiSourceOutputArgs, opts ...pulumi.InvokeOption) LookupApiSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiSourceResultOutput, error) {
			args := v.(LookupApiSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:apicenter:getApiSource", args, LookupApiSourceResultOutput{}, options).(LookupApiSourceResultOutput), nil
		}).(LookupApiSourceResultOutput)
}

type LookupApiSourceOutputArgs struct {
	// The name of the API.
	ApiSourceName pulumi.StringInput `pulumi:"apiSourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of Azure API Center service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupApiSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiSourceArgs)(nil)).Elem()
}

// API source entity.
type LookupApiSourceResultOutput struct{ *pulumi.OutputState }

func (LookupApiSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiSourceResult)(nil)).Elem()
}

func (o LookupApiSourceResultOutput) ToLookupApiSourceResultOutput() LookupApiSourceResultOutput {
	return o
}

func (o LookupApiSourceResultOutput) ToLookupApiSourceResultOutputWithContext(ctx context.Context) LookupApiSourceResultOutput {
	return o
}

// API source configuration for Azure API Management.
func (o LookupApiSourceResultOutput) AzureApiManagementSource() AzureApiManagementSourceResponsePtrOutput {
	return o.ApplyT(func(v LookupApiSourceResult) *AzureApiManagementSourceResponse { return v.AzureApiManagementSource }).(AzureApiManagementSourceResponsePtrOutput)
}

// The Azure API version of the resource.
func (o LookupApiSourceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiSourceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupApiSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the specification should be imported along with metadata.
func (o LookupApiSourceResultOutput) ImportSpecification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiSourceResult) *string { return v.ImportSpecification }).(pulumi.StringPtrOutput)
}

// The state of the API source link
func (o LookupApiSourceResultOutput) LinkState() LinkStateResponseOutput {
	return o.ApplyT(func(v LookupApiSourceResult) LinkStateResponse { return v.LinkState }).(LinkStateResponseOutput)
}

// The name of the resource
func (o LookupApiSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupApiSourceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupApiSourceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The target environment resource ID.
func (o LookupApiSourceResultOutput) TargetEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiSourceResult) *string { return v.TargetEnvironmentId }).(pulumi.StringPtrOutput)
}

// The target lifecycle stage.
func (o LookupApiSourceResultOutput) TargetLifecycleStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiSourceResult) *string { return v.TargetLifecycleStage }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupApiSourceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiSourceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiSourceResultOutput{})
}
