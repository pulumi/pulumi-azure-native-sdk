// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The properties of an Arc addon
type AddonArcProperties struct {
	// The type of private cloud addon
	// Expected value is 'Arc'.
	AddonType string `pulumi:"addonType"`
	// The VMware vCenter resource ID
	VCenter *string `pulumi:"vCenter"`
}

// AddonArcPropertiesInput is an input type that accepts AddonArcPropertiesArgs and AddonArcPropertiesOutput values.
// You can construct a concrete instance of `AddonArcPropertiesInput` via:
//
//	AddonArcPropertiesArgs{...}
type AddonArcPropertiesInput interface {
	pulumi.Input

	ToAddonArcPropertiesOutput() AddonArcPropertiesOutput
	ToAddonArcPropertiesOutputWithContext(context.Context) AddonArcPropertiesOutput
}

// The properties of an Arc addon
type AddonArcPropertiesArgs struct {
	// The type of private cloud addon
	// Expected value is 'Arc'.
	AddonType pulumi.StringInput `pulumi:"addonType"`
	// The VMware vCenter resource ID
	VCenter pulumi.StringPtrInput `pulumi:"vCenter"`
}

func (AddonArcPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonArcProperties)(nil)).Elem()
}

func (i AddonArcPropertiesArgs) ToAddonArcPropertiesOutput() AddonArcPropertiesOutput {
	return i.ToAddonArcPropertiesOutputWithContext(context.Background())
}

func (i AddonArcPropertiesArgs) ToAddonArcPropertiesOutputWithContext(ctx context.Context) AddonArcPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonArcPropertiesOutput)
}

func (i AddonArcPropertiesArgs) ToAddonArcPropertiesPtrOutput() AddonArcPropertiesPtrOutput {
	return i.ToAddonArcPropertiesPtrOutputWithContext(context.Background())
}

func (i AddonArcPropertiesArgs) ToAddonArcPropertiesPtrOutputWithContext(ctx context.Context) AddonArcPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonArcPropertiesOutput).ToAddonArcPropertiesPtrOutputWithContext(ctx)
}

// AddonArcPropertiesPtrInput is an input type that accepts AddonArcPropertiesArgs, AddonArcPropertiesPtr and AddonArcPropertiesPtrOutput values.
// You can construct a concrete instance of `AddonArcPropertiesPtrInput` via:
//
//	        AddonArcPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddonArcPropertiesPtrInput interface {
	pulumi.Input

	ToAddonArcPropertiesPtrOutput() AddonArcPropertiesPtrOutput
	ToAddonArcPropertiesPtrOutputWithContext(context.Context) AddonArcPropertiesPtrOutput
}

type addonArcPropertiesPtrType AddonArcPropertiesArgs

func AddonArcPropertiesPtr(v *AddonArcPropertiesArgs) AddonArcPropertiesPtrInput {
	return (*addonArcPropertiesPtrType)(v)
}

func (*addonArcPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonArcProperties)(nil)).Elem()
}

func (i *addonArcPropertiesPtrType) ToAddonArcPropertiesPtrOutput() AddonArcPropertiesPtrOutput {
	return i.ToAddonArcPropertiesPtrOutputWithContext(context.Background())
}

func (i *addonArcPropertiesPtrType) ToAddonArcPropertiesPtrOutputWithContext(ctx context.Context) AddonArcPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonArcPropertiesPtrOutput)
}

// The properties of an Arc addon
type AddonArcPropertiesOutput struct{ *pulumi.OutputState }

func (AddonArcPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonArcProperties)(nil)).Elem()
}

func (o AddonArcPropertiesOutput) ToAddonArcPropertiesOutput() AddonArcPropertiesOutput {
	return o
}

func (o AddonArcPropertiesOutput) ToAddonArcPropertiesOutputWithContext(ctx context.Context) AddonArcPropertiesOutput {
	return o
}

func (o AddonArcPropertiesOutput) ToAddonArcPropertiesPtrOutput() AddonArcPropertiesPtrOutput {
	return o.ToAddonArcPropertiesPtrOutputWithContext(context.Background())
}

func (o AddonArcPropertiesOutput) ToAddonArcPropertiesPtrOutputWithContext(ctx context.Context) AddonArcPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddonArcProperties) *AddonArcProperties {
		return &v
	}).(AddonArcPropertiesPtrOutput)
}

// The type of private cloud addon
// Expected value is 'Arc'.
func (o AddonArcPropertiesOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonArcProperties) string { return v.AddonType }).(pulumi.StringOutput)
}

// The VMware vCenter resource ID
func (o AddonArcPropertiesOutput) VCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonArcProperties) *string { return v.VCenter }).(pulumi.StringPtrOutput)
}

type AddonArcPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddonArcPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonArcProperties)(nil)).Elem()
}

func (o AddonArcPropertiesPtrOutput) ToAddonArcPropertiesPtrOutput() AddonArcPropertiesPtrOutput {
	return o
}

func (o AddonArcPropertiesPtrOutput) ToAddonArcPropertiesPtrOutputWithContext(ctx context.Context) AddonArcPropertiesPtrOutput {
	return o
}

func (o AddonArcPropertiesPtrOutput) Elem() AddonArcPropertiesOutput {
	return o.ApplyT(func(v *AddonArcProperties) AddonArcProperties {
		if v != nil {
			return *v
		}
		var ret AddonArcProperties
		return ret
	}).(AddonArcPropertiesOutput)
}

// The type of private cloud addon
// Expected value is 'Arc'.
func (o AddonArcPropertiesPtrOutput) AddonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonArcProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AddonType
	}).(pulumi.StringPtrOutput)
}

// The VMware vCenter resource ID
func (o AddonArcPropertiesPtrOutput) VCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonArcProperties) *string {
		if v == nil {
			return nil
		}
		return v.VCenter
	}).(pulumi.StringPtrOutput)
}

// The properties of an Arc addon
type AddonArcPropertiesResponse struct {
	// The type of private cloud addon
	// Expected value is 'Arc'.
	AddonType string `pulumi:"addonType"`
	// The state of the addon provisioning
	ProvisioningState string `pulumi:"provisioningState"`
	// The VMware vCenter resource ID
	VCenter *string `pulumi:"vCenter"`
}

// The properties of an Arc addon
type AddonArcPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddonArcPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonArcPropertiesResponse)(nil)).Elem()
}

func (o AddonArcPropertiesResponseOutput) ToAddonArcPropertiesResponseOutput() AddonArcPropertiesResponseOutput {
	return o
}

func (o AddonArcPropertiesResponseOutput) ToAddonArcPropertiesResponseOutputWithContext(ctx context.Context) AddonArcPropertiesResponseOutput {
	return o
}

// The type of private cloud addon
// Expected value is 'Arc'.
func (o AddonArcPropertiesResponseOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonArcPropertiesResponse) string { return v.AddonType }).(pulumi.StringOutput)
}

// The state of the addon provisioning
func (o AddonArcPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AddonArcPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The VMware vCenter resource ID
func (o AddonArcPropertiesResponseOutput) VCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonArcPropertiesResponse) *string { return v.VCenter }).(pulumi.StringPtrOutput)
}

// The properties of an HCX addon
type AddonHcxProperties struct {
	// The type of private cloud addon
	// Expected value is 'HCX'.
	AddonType string `pulumi:"addonType"`
	// The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
	Offer string `pulumi:"offer"`
}

// AddonHcxPropertiesInput is an input type that accepts AddonHcxPropertiesArgs and AddonHcxPropertiesOutput values.
// You can construct a concrete instance of `AddonHcxPropertiesInput` via:
//
//	AddonHcxPropertiesArgs{...}
type AddonHcxPropertiesInput interface {
	pulumi.Input

	ToAddonHcxPropertiesOutput() AddonHcxPropertiesOutput
	ToAddonHcxPropertiesOutputWithContext(context.Context) AddonHcxPropertiesOutput
}

// The properties of an HCX addon
type AddonHcxPropertiesArgs struct {
	// The type of private cloud addon
	// Expected value is 'HCX'.
	AddonType pulumi.StringInput `pulumi:"addonType"`
	// The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
	Offer pulumi.StringInput `pulumi:"offer"`
}

func (AddonHcxPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonHcxProperties)(nil)).Elem()
}

func (i AddonHcxPropertiesArgs) ToAddonHcxPropertiesOutput() AddonHcxPropertiesOutput {
	return i.ToAddonHcxPropertiesOutputWithContext(context.Background())
}

func (i AddonHcxPropertiesArgs) ToAddonHcxPropertiesOutputWithContext(ctx context.Context) AddonHcxPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonHcxPropertiesOutput)
}

func (i AddonHcxPropertiesArgs) ToAddonHcxPropertiesPtrOutput() AddonHcxPropertiesPtrOutput {
	return i.ToAddonHcxPropertiesPtrOutputWithContext(context.Background())
}

func (i AddonHcxPropertiesArgs) ToAddonHcxPropertiesPtrOutputWithContext(ctx context.Context) AddonHcxPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonHcxPropertiesOutput).ToAddonHcxPropertiesPtrOutputWithContext(ctx)
}

// AddonHcxPropertiesPtrInput is an input type that accepts AddonHcxPropertiesArgs, AddonHcxPropertiesPtr and AddonHcxPropertiesPtrOutput values.
// You can construct a concrete instance of `AddonHcxPropertiesPtrInput` via:
//
//	        AddonHcxPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddonHcxPropertiesPtrInput interface {
	pulumi.Input

	ToAddonHcxPropertiesPtrOutput() AddonHcxPropertiesPtrOutput
	ToAddonHcxPropertiesPtrOutputWithContext(context.Context) AddonHcxPropertiesPtrOutput
}

type addonHcxPropertiesPtrType AddonHcxPropertiesArgs

func AddonHcxPropertiesPtr(v *AddonHcxPropertiesArgs) AddonHcxPropertiesPtrInput {
	return (*addonHcxPropertiesPtrType)(v)
}

func (*addonHcxPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonHcxProperties)(nil)).Elem()
}

func (i *addonHcxPropertiesPtrType) ToAddonHcxPropertiesPtrOutput() AddonHcxPropertiesPtrOutput {
	return i.ToAddonHcxPropertiesPtrOutputWithContext(context.Background())
}

func (i *addonHcxPropertiesPtrType) ToAddonHcxPropertiesPtrOutputWithContext(ctx context.Context) AddonHcxPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonHcxPropertiesPtrOutput)
}

// The properties of an HCX addon
type AddonHcxPropertiesOutput struct{ *pulumi.OutputState }

func (AddonHcxPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonHcxProperties)(nil)).Elem()
}

func (o AddonHcxPropertiesOutput) ToAddonHcxPropertiesOutput() AddonHcxPropertiesOutput {
	return o
}

func (o AddonHcxPropertiesOutput) ToAddonHcxPropertiesOutputWithContext(ctx context.Context) AddonHcxPropertiesOutput {
	return o
}

func (o AddonHcxPropertiesOutput) ToAddonHcxPropertiesPtrOutput() AddonHcxPropertiesPtrOutput {
	return o.ToAddonHcxPropertiesPtrOutputWithContext(context.Background())
}

func (o AddonHcxPropertiesOutput) ToAddonHcxPropertiesPtrOutputWithContext(ctx context.Context) AddonHcxPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddonHcxProperties) *AddonHcxProperties {
		return &v
	}).(AddonHcxPropertiesPtrOutput)
}

// The type of private cloud addon
// Expected value is 'HCX'.
func (o AddonHcxPropertiesOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonHcxProperties) string { return v.AddonType }).(pulumi.StringOutput)
}

// The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
func (o AddonHcxPropertiesOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v AddonHcxProperties) string { return v.Offer }).(pulumi.StringOutput)
}

type AddonHcxPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddonHcxPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonHcxProperties)(nil)).Elem()
}

func (o AddonHcxPropertiesPtrOutput) ToAddonHcxPropertiesPtrOutput() AddonHcxPropertiesPtrOutput {
	return o
}

func (o AddonHcxPropertiesPtrOutput) ToAddonHcxPropertiesPtrOutputWithContext(ctx context.Context) AddonHcxPropertiesPtrOutput {
	return o
}

func (o AddonHcxPropertiesPtrOutput) Elem() AddonHcxPropertiesOutput {
	return o.ApplyT(func(v *AddonHcxProperties) AddonHcxProperties {
		if v != nil {
			return *v
		}
		var ret AddonHcxProperties
		return ret
	}).(AddonHcxPropertiesOutput)
}

// The type of private cloud addon
// Expected value is 'HCX'.
func (o AddonHcxPropertiesPtrOutput) AddonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonHcxProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AddonType
	}).(pulumi.StringPtrOutput)
}

// The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
func (o AddonHcxPropertiesPtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonHcxProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// The properties of an HCX addon
type AddonHcxPropertiesResponse struct {
	// The type of private cloud addon
	// Expected value is 'HCX'.
	AddonType string `pulumi:"addonType"`
	// The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
	Offer string `pulumi:"offer"`
	// The state of the addon provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of an HCX addon
type AddonHcxPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddonHcxPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonHcxPropertiesResponse)(nil)).Elem()
}

func (o AddonHcxPropertiesResponseOutput) ToAddonHcxPropertiesResponseOutput() AddonHcxPropertiesResponseOutput {
	return o
}

func (o AddonHcxPropertiesResponseOutput) ToAddonHcxPropertiesResponseOutputWithContext(ctx context.Context) AddonHcxPropertiesResponseOutput {
	return o
}

// The type of private cloud addon
// Expected value is 'HCX'.
func (o AddonHcxPropertiesResponseOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonHcxPropertiesResponse) string { return v.AddonType }).(pulumi.StringOutput)
}

// The HCX offer, example VMware MaaS Cloud Provider (Enterprise)
func (o AddonHcxPropertiesResponseOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v AddonHcxPropertiesResponse) string { return v.Offer }).(pulumi.StringOutput)
}

// The state of the addon provisioning
func (o AddonHcxPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AddonHcxPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties of a Site Recovery Manager (SRM) addon
type AddonSrmProperties struct {
	// The type of private cloud addon
	// Expected value is 'SRM'.
	AddonType string `pulumi:"addonType"`
	// The Site Recovery Manager (SRM) license
	LicenseKey *string `pulumi:"licenseKey"`
}

// AddonSrmPropertiesInput is an input type that accepts AddonSrmPropertiesArgs and AddonSrmPropertiesOutput values.
// You can construct a concrete instance of `AddonSrmPropertiesInput` via:
//
//	AddonSrmPropertiesArgs{...}
type AddonSrmPropertiesInput interface {
	pulumi.Input

	ToAddonSrmPropertiesOutput() AddonSrmPropertiesOutput
	ToAddonSrmPropertiesOutputWithContext(context.Context) AddonSrmPropertiesOutput
}

// The properties of a Site Recovery Manager (SRM) addon
type AddonSrmPropertiesArgs struct {
	// The type of private cloud addon
	// Expected value is 'SRM'.
	AddonType pulumi.StringInput `pulumi:"addonType"`
	// The Site Recovery Manager (SRM) license
	LicenseKey pulumi.StringPtrInput `pulumi:"licenseKey"`
}

func (AddonSrmPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonSrmProperties)(nil)).Elem()
}

func (i AddonSrmPropertiesArgs) ToAddonSrmPropertiesOutput() AddonSrmPropertiesOutput {
	return i.ToAddonSrmPropertiesOutputWithContext(context.Background())
}

func (i AddonSrmPropertiesArgs) ToAddonSrmPropertiesOutputWithContext(ctx context.Context) AddonSrmPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonSrmPropertiesOutput)
}

func (i AddonSrmPropertiesArgs) ToAddonSrmPropertiesPtrOutput() AddonSrmPropertiesPtrOutput {
	return i.ToAddonSrmPropertiesPtrOutputWithContext(context.Background())
}

func (i AddonSrmPropertiesArgs) ToAddonSrmPropertiesPtrOutputWithContext(ctx context.Context) AddonSrmPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonSrmPropertiesOutput).ToAddonSrmPropertiesPtrOutputWithContext(ctx)
}

// AddonSrmPropertiesPtrInput is an input type that accepts AddonSrmPropertiesArgs, AddonSrmPropertiesPtr and AddonSrmPropertiesPtrOutput values.
// You can construct a concrete instance of `AddonSrmPropertiesPtrInput` via:
//
//	        AddonSrmPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddonSrmPropertiesPtrInput interface {
	pulumi.Input

	ToAddonSrmPropertiesPtrOutput() AddonSrmPropertiesPtrOutput
	ToAddonSrmPropertiesPtrOutputWithContext(context.Context) AddonSrmPropertiesPtrOutput
}

type addonSrmPropertiesPtrType AddonSrmPropertiesArgs

func AddonSrmPropertiesPtr(v *AddonSrmPropertiesArgs) AddonSrmPropertiesPtrInput {
	return (*addonSrmPropertiesPtrType)(v)
}

func (*addonSrmPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonSrmProperties)(nil)).Elem()
}

func (i *addonSrmPropertiesPtrType) ToAddonSrmPropertiesPtrOutput() AddonSrmPropertiesPtrOutput {
	return i.ToAddonSrmPropertiesPtrOutputWithContext(context.Background())
}

func (i *addonSrmPropertiesPtrType) ToAddonSrmPropertiesPtrOutputWithContext(ctx context.Context) AddonSrmPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonSrmPropertiesPtrOutput)
}

// The properties of a Site Recovery Manager (SRM) addon
type AddonSrmPropertiesOutput struct{ *pulumi.OutputState }

func (AddonSrmPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonSrmProperties)(nil)).Elem()
}

func (o AddonSrmPropertiesOutput) ToAddonSrmPropertiesOutput() AddonSrmPropertiesOutput {
	return o
}

func (o AddonSrmPropertiesOutput) ToAddonSrmPropertiesOutputWithContext(ctx context.Context) AddonSrmPropertiesOutput {
	return o
}

func (o AddonSrmPropertiesOutput) ToAddonSrmPropertiesPtrOutput() AddonSrmPropertiesPtrOutput {
	return o.ToAddonSrmPropertiesPtrOutputWithContext(context.Background())
}

func (o AddonSrmPropertiesOutput) ToAddonSrmPropertiesPtrOutputWithContext(ctx context.Context) AddonSrmPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddonSrmProperties) *AddonSrmProperties {
		return &v
	}).(AddonSrmPropertiesPtrOutput)
}

// The type of private cloud addon
// Expected value is 'SRM'.
func (o AddonSrmPropertiesOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonSrmProperties) string { return v.AddonType }).(pulumi.StringOutput)
}

// The Site Recovery Manager (SRM) license
func (o AddonSrmPropertiesOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonSrmProperties) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

type AddonSrmPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddonSrmPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonSrmProperties)(nil)).Elem()
}

func (o AddonSrmPropertiesPtrOutput) ToAddonSrmPropertiesPtrOutput() AddonSrmPropertiesPtrOutput {
	return o
}

func (o AddonSrmPropertiesPtrOutput) ToAddonSrmPropertiesPtrOutputWithContext(ctx context.Context) AddonSrmPropertiesPtrOutput {
	return o
}

func (o AddonSrmPropertiesPtrOutput) Elem() AddonSrmPropertiesOutput {
	return o.ApplyT(func(v *AddonSrmProperties) AddonSrmProperties {
		if v != nil {
			return *v
		}
		var ret AddonSrmProperties
		return ret
	}).(AddonSrmPropertiesOutput)
}

// The type of private cloud addon
// Expected value is 'SRM'.
func (o AddonSrmPropertiesPtrOutput) AddonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonSrmProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AddonType
	}).(pulumi.StringPtrOutput)
}

// The Site Recovery Manager (SRM) license
func (o AddonSrmPropertiesPtrOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonSrmProperties) *string {
		if v == nil {
			return nil
		}
		return v.LicenseKey
	}).(pulumi.StringPtrOutput)
}

// The properties of a Site Recovery Manager (SRM) addon
type AddonSrmPropertiesResponse struct {
	// The type of private cloud addon
	// Expected value is 'SRM'.
	AddonType string `pulumi:"addonType"`
	// The Site Recovery Manager (SRM) license
	LicenseKey *string `pulumi:"licenseKey"`
	// The state of the addon provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of a Site Recovery Manager (SRM) addon
type AddonSrmPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddonSrmPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonSrmPropertiesResponse)(nil)).Elem()
}

func (o AddonSrmPropertiesResponseOutput) ToAddonSrmPropertiesResponseOutput() AddonSrmPropertiesResponseOutput {
	return o
}

func (o AddonSrmPropertiesResponseOutput) ToAddonSrmPropertiesResponseOutputWithContext(ctx context.Context) AddonSrmPropertiesResponseOutput {
	return o
}

// The type of private cloud addon
// Expected value is 'SRM'.
func (o AddonSrmPropertiesResponseOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonSrmPropertiesResponse) string { return v.AddonType }).(pulumi.StringOutput)
}

// The Site Recovery Manager (SRM) license
func (o AddonSrmPropertiesResponseOutput) LicenseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonSrmPropertiesResponse) *string { return v.LicenseKey }).(pulumi.StringPtrOutput)
}

// The state of the addon provisioning
func (o AddonSrmPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AddonSrmPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties of a vSphere Replication (VR) addon
type AddonVrProperties struct {
	// The type of private cloud addon
	// Expected value is 'VR'.
	AddonType string `pulumi:"addonType"`
	// The vSphere Replication Server (VRS) count
	VrsCount int `pulumi:"vrsCount"`
}

// AddonVrPropertiesInput is an input type that accepts AddonVrPropertiesArgs and AddonVrPropertiesOutput values.
// You can construct a concrete instance of `AddonVrPropertiesInput` via:
//
//	AddonVrPropertiesArgs{...}
type AddonVrPropertiesInput interface {
	pulumi.Input

	ToAddonVrPropertiesOutput() AddonVrPropertiesOutput
	ToAddonVrPropertiesOutputWithContext(context.Context) AddonVrPropertiesOutput
}

// The properties of a vSphere Replication (VR) addon
type AddonVrPropertiesArgs struct {
	// The type of private cloud addon
	// Expected value is 'VR'.
	AddonType pulumi.StringInput `pulumi:"addonType"`
	// The vSphere Replication Server (VRS) count
	VrsCount pulumi.IntInput `pulumi:"vrsCount"`
}

func (AddonVrPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonVrProperties)(nil)).Elem()
}

func (i AddonVrPropertiesArgs) ToAddonVrPropertiesOutput() AddonVrPropertiesOutput {
	return i.ToAddonVrPropertiesOutputWithContext(context.Background())
}

func (i AddonVrPropertiesArgs) ToAddonVrPropertiesOutputWithContext(ctx context.Context) AddonVrPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonVrPropertiesOutput)
}

func (i AddonVrPropertiesArgs) ToAddonVrPropertiesPtrOutput() AddonVrPropertiesPtrOutput {
	return i.ToAddonVrPropertiesPtrOutputWithContext(context.Background())
}

func (i AddonVrPropertiesArgs) ToAddonVrPropertiesPtrOutputWithContext(ctx context.Context) AddonVrPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonVrPropertiesOutput).ToAddonVrPropertiesPtrOutputWithContext(ctx)
}

// AddonVrPropertiesPtrInput is an input type that accepts AddonVrPropertiesArgs, AddonVrPropertiesPtr and AddonVrPropertiesPtrOutput values.
// You can construct a concrete instance of `AddonVrPropertiesPtrInput` via:
//
//	        AddonVrPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddonVrPropertiesPtrInput interface {
	pulumi.Input

	ToAddonVrPropertiesPtrOutput() AddonVrPropertiesPtrOutput
	ToAddonVrPropertiesPtrOutputWithContext(context.Context) AddonVrPropertiesPtrOutput
}

type addonVrPropertiesPtrType AddonVrPropertiesArgs

func AddonVrPropertiesPtr(v *AddonVrPropertiesArgs) AddonVrPropertiesPtrInput {
	return (*addonVrPropertiesPtrType)(v)
}

func (*addonVrPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonVrProperties)(nil)).Elem()
}

func (i *addonVrPropertiesPtrType) ToAddonVrPropertiesPtrOutput() AddonVrPropertiesPtrOutput {
	return i.ToAddonVrPropertiesPtrOutputWithContext(context.Background())
}

func (i *addonVrPropertiesPtrType) ToAddonVrPropertiesPtrOutputWithContext(ctx context.Context) AddonVrPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonVrPropertiesPtrOutput)
}

// The properties of a vSphere Replication (VR) addon
type AddonVrPropertiesOutput struct{ *pulumi.OutputState }

func (AddonVrPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonVrProperties)(nil)).Elem()
}

func (o AddonVrPropertiesOutput) ToAddonVrPropertiesOutput() AddonVrPropertiesOutput {
	return o
}

func (o AddonVrPropertiesOutput) ToAddonVrPropertiesOutputWithContext(ctx context.Context) AddonVrPropertiesOutput {
	return o
}

func (o AddonVrPropertiesOutput) ToAddonVrPropertiesPtrOutput() AddonVrPropertiesPtrOutput {
	return o.ToAddonVrPropertiesPtrOutputWithContext(context.Background())
}

func (o AddonVrPropertiesOutput) ToAddonVrPropertiesPtrOutputWithContext(ctx context.Context) AddonVrPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddonVrProperties) *AddonVrProperties {
		return &v
	}).(AddonVrPropertiesPtrOutput)
}

// The type of private cloud addon
// Expected value is 'VR'.
func (o AddonVrPropertiesOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonVrProperties) string { return v.AddonType }).(pulumi.StringOutput)
}

// The vSphere Replication Server (VRS) count
func (o AddonVrPropertiesOutput) VrsCount() pulumi.IntOutput {
	return o.ApplyT(func(v AddonVrProperties) int { return v.VrsCount }).(pulumi.IntOutput)
}

type AddonVrPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddonVrPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonVrProperties)(nil)).Elem()
}

func (o AddonVrPropertiesPtrOutput) ToAddonVrPropertiesPtrOutput() AddonVrPropertiesPtrOutput {
	return o
}

func (o AddonVrPropertiesPtrOutput) ToAddonVrPropertiesPtrOutputWithContext(ctx context.Context) AddonVrPropertiesPtrOutput {
	return o
}

func (o AddonVrPropertiesPtrOutput) Elem() AddonVrPropertiesOutput {
	return o.ApplyT(func(v *AddonVrProperties) AddonVrProperties {
		if v != nil {
			return *v
		}
		var ret AddonVrProperties
		return ret
	}).(AddonVrPropertiesOutput)
}

// The type of private cloud addon
// Expected value is 'VR'.
func (o AddonVrPropertiesPtrOutput) AddonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddonVrProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AddonType
	}).(pulumi.StringPtrOutput)
}

// The vSphere Replication Server (VRS) count
func (o AddonVrPropertiesPtrOutput) VrsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddonVrProperties) *int {
		if v == nil {
			return nil
		}
		return &v.VrsCount
	}).(pulumi.IntPtrOutput)
}

// The properties of a vSphere Replication (VR) addon
type AddonVrPropertiesResponse struct {
	// The type of private cloud addon
	// Expected value is 'VR'.
	AddonType string `pulumi:"addonType"`
	// The state of the addon provisioning
	ProvisioningState string `pulumi:"provisioningState"`
	// The vSphere Replication Server (VRS) count
	VrsCount int `pulumi:"vrsCount"`
}

// The properties of a vSphere Replication (VR) addon
type AddonVrPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddonVrPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonVrPropertiesResponse)(nil)).Elem()
}

func (o AddonVrPropertiesResponseOutput) ToAddonVrPropertiesResponseOutput() AddonVrPropertiesResponseOutput {
	return o
}

func (o AddonVrPropertiesResponseOutput) ToAddonVrPropertiesResponseOutputWithContext(ctx context.Context) AddonVrPropertiesResponseOutput {
	return o
}

// The type of private cloud addon
// Expected value is 'VR'.
func (o AddonVrPropertiesResponseOutput) AddonType() pulumi.StringOutput {
	return o.ApplyT(func(v AddonVrPropertiesResponse) string { return v.AddonType }).(pulumi.StringOutput)
}

// The state of the addon provisioning
func (o AddonVrPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AddonVrPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The vSphere Replication Server (VRS) count
func (o AddonVrPropertiesResponseOutput) VrsCount() pulumi.IntOutput {
	return o.ApplyT(func(v AddonVrPropertiesResponse) int { return v.VrsCount }).(pulumi.IntOutput)
}

// The properties describing private cloud availability zone distribution
type AvailabilityProperties struct {
	// The secondary availability zone for the private cloud
	SecondaryZone *int `pulumi:"secondaryZone"`
	// The availability strategy for the private cloud
	Strategy *string `pulumi:"strategy"`
	// The primary availability zone for the private cloud
	Zone *int `pulumi:"zone"`
}

// AvailabilityPropertiesInput is an input type that accepts AvailabilityPropertiesArgs and AvailabilityPropertiesOutput values.
// You can construct a concrete instance of `AvailabilityPropertiesInput` via:
//
//	AvailabilityPropertiesArgs{...}
type AvailabilityPropertiesInput interface {
	pulumi.Input

	ToAvailabilityPropertiesOutput() AvailabilityPropertiesOutput
	ToAvailabilityPropertiesOutputWithContext(context.Context) AvailabilityPropertiesOutput
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesArgs struct {
	// The secondary availability zone for the private cloud
	SecondaryZone pulumi.IntPtrInput `pulumi:"secondaryZone"`
	// The availability strategy for the private cloud
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
	// The primary availability zone for the private cloud
	Zone pulumi.IntPtrInput `pulumi:"zone"`
}

func (AvailabilityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityProperties)(nil)).Elem()
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesOutput() AvailabilityPropertiesOutput {
	return i.ToAvailabilityPropertiesOutputWithContext(context.Background())
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesOutputWithContext(ctx context.Context) AvailabilityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityPropertiesOutput)
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return i.ToAvailabilityPropertiesPtrOutputWithContext(context.Background())
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityPropertiesOutput).ToAvailabilityPropertiesPtrOutputWithContext(ctx)
}

// AvailabilityPropertiesPtrInput is an input type that accepts AvailabilityPropertiesArgs, AvailabilityPropertiesPtr and AvailabilityPropertiesPtrOutput values.
// You can construct a concrete instance of `AvailabilityPropertiesPtrInput` via:
//
//	        AvailabilityPropertiesArgs{...}
//
//	or:
//
//	        nil
type AvailabilityPropertiesPtrInput interface {
	pulumi.Input

	ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput
	ToAvailabilityPropertiesPtrOutputWithContext(context.Context) AvailabilityPropertiesPtrOutput
}

type availabilityPropertiesPtrType AvailabilityPropertiesArgs

func AvailabilityPropertiesPtr(v *AvailabilityPropertiesArgs) AvailabilityPropertiesPtrInput {
	return (*availabilityPropertiesPtrType)(v)
}

func (*availabilityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityProperties)(nil)).Elem()
}

func (i *availabilityPropertiesPtrType) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return i.ToAvailabilityPropertiesPtrOutputWithContext(context.Background())
}

func (i *availabilityPropertiesPtrType) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityPropertiesPtrOutput)
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityProperties)(nil)).Elem()
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesOutput() AvailabilityPropertiesOutput {
	return o
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesOutputWithContext(ctx context.Context) AvailabilityPropertiesOutput {
	return o
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return o.ToAvailabilityPropertiesPtrOutputWithContext(context.Background())
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityProperties) *AvailabilityProperties {
		return &v
	}).(AvailabilityPropertiesPtrOutput)
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityProperties) *int { return v.SecondaryZone }).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityProperties) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityProperties) *int { return v.Zone }).(pulumi.IntPtrOutput)
}

type AvailabilityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityProperties)(nil)).Elem()
}

func (o AvailabilityPropertiesPtrOutput) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return o
}

func (o AvailabilityPropertiesPtrOutput) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return o
}

func (o AvailabilityPropertiesPtrOutput) Elem() AvailabilityPropertiesOutput {
	return o.ApplyT(func(v *AvailabilityProperties) AvailabilityProperties {
		if v != nil {
			return *v
		}
		var ret AvailabilityProperties
		return ret
	}).(AvailabilityPropertiesOutput)
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesPtrOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityProperties) *int {
		if v == nil {
			return nil
		}
		return v.SecondaryZone
	}).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesPtrOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityProperties) *int {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.IntPtrOutput)
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesResponse struct {
	// The secondary availability zone for the private cloud
	SecondaryZone *int `pulumi:"secondaryZone"`
	// The availability strategy for the private cloud
	Strategy *string `pulumi:"strategy"`
	// The primary availability zone for the private cloud
	Zone *int `pulumi:"zone"`
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityPropertiesResponse)(nil)).Elem()
}

func (o AvailabilityPropertiesResponseOutput) ToAvailabilityPropertiesResponseOutput() AvailabilityPropertiesResponseOutput {
	return o
}

func (o AvailabilityPropertiesResponseOutput) ToAvailabilityPropertiesResponseOutputWithContext(ctx context.Context) AvailabilityPropertiesResponseOutput {
	return o
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesResponseOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityPropertiesResponse) *int { return v.SecondaryZone }).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesResponseOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityPropertiesResponse) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesResponseOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityPropertiesResponse) *int { return v.Zone }).(pulumi.IntPtrOutput)
}

type AvailabilityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityPropertiesResponse)(nil)).Elem()
}

func (o AvailabilityPropertiesResponsePtrOutput) ToAvailabilityPropertiesResponsePtrOutput() AvailabilityPropertiesResponsePtrOutput {
	return o
}

func (o AvailabilityPropertiesResponsePtrOutput) ToAvailabilityPropertiesResponsePtrOutputWithContext(ctx context.Context) AvailabilityPropertiesResponsePtrOutput {
	return o
}

func (o AvailabilityPropertiesResponsePtrOutput) Elem() AvailabilityPropertiesResponseOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) AvailabilityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityPropertiesResponse
		return ret
	}).(AvailabilityPropertiesResponseOutput)
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesResponsePtrOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondaryZone
	}).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesResponsePtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesResponsePtrOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.IntPtrOutput)
}

// An ExpressRoute Circuit
type CircuitResponse struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID string `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID string `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet string `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet string `pulumi:"secondarySubnet"`
}

// An ExpressRoute Circuit
type CircuitResponseOutput struct{ *pulumi.OutputState }

func (CircuitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitResponse)(nil)).Elem()
}

func (o CircuitResponseOutput) ToCircuitResponseOutput() CircuitResponseOutput {
	return o
}

func (o CircuitResponseOutput) ToCircuitResponseOutputWithContext(ctx context.Context) CircuitResponseOutput {
	return o
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponseOutput) ExpressRouteID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRouteID }).(pulumi.StringOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponseOutput) ExpressRoutePrivatePeeringID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRoutePrivatePeeringID }).(pulumi.StringOutput)
}

// CIDR of primary subnet
func (o CircuitResponseOutput) PrimarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.PrimarySubnet }).(pulumi.StringOutput)
}

// CIDR of secondary subnet
func (o CircuitResponseOutput) SecondarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.SecondarySubnet }).(pulumi.StringOutput)
}

type CircuitResponsePtrOutput struct{ *pulumi.OutputState }

func (CircuitResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CircuitResponse)(nil)).Elem()
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) Elem() CircuitResponseOutput {
	return o.ApplyT(func(v *CircuitResponse) CircuitResponse {
		if v != nil {
			return *v
		}
		var ret CircuitResponse
		return ret
	}).(CircuitResponseOutput)
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponsePtrOutput) ExpressRouteID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteID
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponsePtrOutput) ExpressRoutePrivatePeeringID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRoutePrivatePeeringID
	}).(pulumi.StringPtrOutput)
}

// CIDR of primary subnet
func (o CircuitResponsePtrOutput) PrimarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimarySubnet
	}).(pulumi.StringPtrOutput)
}

// CIDR of secondary subnet
func (o CircuitResponsePtrOutput) SecondarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondarySubnet
	}).(pulumi.StringPtrOutput)
}

// Zone and associated hosts info
type ClusterZoneResponse struct {
	// List of hosts belonging to the availability zone in a cluster
	Hosts []string `pulumi:"hosts"`
	// Availability zone identifier
	Zone string `pulumi:"zone"`
}

// Zone and associated hosts info
type ClusterZoneResponseOutput struct{ *pulumi.OutputState }

func (ClusterZoneResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterZoneResponse)(nil)).Elem()
}

func (o ClusterZoneResponseOutput) ToClusterZoneResponseOutput() ClusterZoneResponseOutput {
	return o
}

func (o ClusterZoneResponseOutput) ToClusterZoneResponseOutputWithContext(ctx context.Context) ClusterZoneResponseOutput {
	return o
}

// List of hosts belonging to the availability zone in a cluster
func (o ClusterZoneResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterZoneResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Availability zone identifier
func (o ClusterZoneResponseOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterZoneResponse) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterZoneResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterZoneResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterZoneResponse)(nil)).Elem()
}

func (o ClusterZoneResponseArrayOutput) ToClusterZoneResponseArrayOutput() ClusterZoneResponseArrayOutput {
	return o
}

func (o ClusterZoneResponseArrayOutput) ToClusterZoneResponseArrayOutputWithContext(ctx context.Context) ClusterZoneResponseArrayOutput {
	return o
}

func (o ClusterZoneResponseArrayOutput) Index(i pulumi.IntInput) ClusterZoneResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterZoneResponse {
		return vs[0].([]ClusterZoneResponse)[vs[1].(int)]
	}).(ClusterZoneResponseOutput)
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolume struct {
	// Name of the LUN to be used for datastore
	LunName string `pulumi:"lunName"`
	// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
	MountOption *string `pulumi:"mountOption"`
	// Azure resource ID of the iSCSI target
	TargetId string `pulumi:"targetId"`
}

// Defaults sets the appropriate defaults for DiskPoolVolume
func (val *DiskPoolVolume) Defaults() *DiskPoolVolume {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountOption == nil {
		mountOption_ := "MOUNT"
		tmp.MountOption = &mountOption_
	}
	return &tmp
}

// DiskPoolVolumeInput is an input type that accepts DiskPoolVolumeArgs and DiskPoolVolumeOutput values.
// You can construct a concrete instance of `DiskPoolVolumeInput` via:
//
//	DiskPoolVolumeArgs{...}
type DiskPoolVolumeInput interface {
	pulumi.Input

	ToDiskPoolVolumeOutput() DiskPoolVolumeOutput
	ToDiskPoolVolumeOutputWithContext(context.Context) DiskPoolVolumeOutput
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeArgs struct {
	// Name of the LUN to be used for datastore
	LunName pulumi.StringInput `pulumi:"lunName"`
	// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
	MountOption pulumi.StringPtrInput `pulumi:"mountOption"`
	// Azure resource ID of the iSCSI target
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

// Defaults sets the appropriate defaults for DiskPoolVolumeArgs
func (val *DiskPoolVolumeArgs) Defaults() *DiskPoolVolumeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountOption == nil {
		tmp.MountOption = pulumi.StringPtr("MOUNT")
	}
	return &tmp
}
func (DiskPoolVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskPoolVolume)(nil)).Elem()
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumeOutput() DiskPoolVolumeOutput {
	return i.ToDiskPoolVolumeOutputWithContext(context.Background())
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumeOutputWithContext(ctx context.Context) DiskPoolVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPoolVolumeOutput)
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return i.ToDiskPoolVolumePtrOutputWithContext(context.Background())
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPoolVolumeOutput).ToDiskPoolVolumePtrOutputWithContext(ctx)
}

// DiskPoolVolumePtrInput is an input type that accepts DiskPoolVolumeArgs, DiskPoolVolumePtr and DiskPoolVolumePtrOutput values.
// You can construct a concrete instance of `DiskPoolVolumePtrInput` via:
//
//	        DiskPoolVolumeArgs{...}
//
//	or:
//
//	        nil
type DiskPoolVolumePtrInput interface {
	pulumi.Input

	ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput
	ToDiskPoolVolumePtrOutputWithContext(context.Context) DiskPoolVolumePtrOutput
}

type diskPoolVolumePtrType DiskPoolVolumeArgs

func DiskPoolVolumePtr(v *DiskPoolVolumeArgs) DiskPoolVolumePtrInput {
	return (*diskPoolVolumePtrType)(v)
}

func (*diskPoolVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskPoolVolume)(nil)).Elem()
}

func (i *diskPoolVolumePtrType) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return i.ToDiskPoolVolumePtrOutputWithContext(context.Background())
}

func (i *diskPoolVolumePtrType) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPoolVolumePtrOutput)
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskPoolVolume)(nil)).Elem()
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumeOutput() DiskPoolVolumeOutput {
	return o
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumeOutputWithContext(ctx context.Context) DiskPoolVolumeOutput {
	return o
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return o.ToDiskPoolVolumePtrOutputWithContext(context.Background())
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskPoolVolume) *DiskPoolVolume {
		return &v
	}).(DiskPoolVolumePtrOutput)
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumeOutput) LunName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolume) string { return v.LunName }).(pulumi.StringOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
func (o DiskPoolVolumeOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskPoolVolume) *string { return v.MountOption }).(pulumi.StringPtrOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumeOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolume) string { return v.TargetId }).(pulumi.StringOutput)
}

type DiskPoolVolumePtrOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskPoolVolume)(nil)).Elem()
}

func (o DiskPoolVolumePtrOutput) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return o
}

func (o DiskPoolVolumePtrOutput) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return o
}

func (o DiskPoolVolumePtrOutput) Elem() DiskPoolVolumeOutput {
	return o.ApplyT(func(v *DiskPoolVolume) DiskPoolVolume {
		if v != nil {
			return *v
		}
		var ret DiskPoolVolume
		return ret
	}).(DiskPoolVolumeOutput)
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumePtrOutput) LunName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolume) *string {
		if v == nil {
			return nil
		}
		return &v.LunName
	}).(pulumi.StringPtrOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
func (o DiskPoolVolumePtrOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolume) *string {
		if v == nil {
			return nil
		}
		return v.MountOption
	}).(pulumi.StringPtrOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolume) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeResponse struct {
	// Name of the LUN to be used for datastore
	LunName string `pulumi:"lunName"`
	// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
	MountOption *string `pulumi:"mountOption"`
	// Device path
	Path string `pulumi:"path"`
	// Azure resource ID of the iSCSI target
	TargetId string `pulumi:"targetId"`
}

// Defaults sets the appropriate defaults for DiskPoolVolumeResponse
func (val *DiskPoolVolumeResponse) Defaults() *DiskPoolVolumeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountOption == nil {
		mountOption_ := "MOUNT"
		tmp.MountOption = &mountOption_
	}
	return &tmp
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeResponseOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskPoolVolumeResponse)(nil)).Elem()
}

func (o DiskPoolVolumeResponseOutput) ToDiskPoolVolumeResponseOutput() DiskPoolVolumeResponseOutput {
	return o
}

func (o DiskPoolVolumeResponseOutput) ToDiskPoolVolumeResponseOutputWithContext(ctx context.Context) DiskPoolVolumeResponseOutput {
	return o
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumeResponseOutput) LunName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) string { return v.LunName }).(pulumi.StringOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
func (o DiskPoolVolumeResponseOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) *string { return v.MountOption }).(pulumi.StringPtrOutput)
}

// Device path
func (o DiskPoolVolumeResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) string { return v.Path }).(pulumi.StringOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumeResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

type DiskPoolVolumeResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskPoolVolumeResponse)(nil)).Elem()
}

func (o DiskPoolVolumeResponsePtrOutput) ToDiskPoolVolumeResponsePtrOutput() DiskPoolVolumeResponsePtrOutput {
	return o
}

func (o DiskPoolVolumeResponsePtrOutput) ToDiskPoolVolumeResponsePtrOutputWithContext(ctx context.Context) DiskPoolVolumeResponsePtrOutput {
	return o
}

func (o DiskPoolVolumeResponsePtrOutput) Elem() DiskPoolVolumeResponseOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) DiskPoolVolumeResponse {
		if v != nil {
			return *v
		}
		var ret DiskPoolVolumeResponse
		return ret
	}).(DiskPoolVolumeResponseOutput)
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumeResponsePtrOutput) LunName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LunName
	}).(pulumi.StringPtrOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
func (o DiskPoolVolumeResponsePtrOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return v.MountOption
	}).(pulumi.StringPtrOutput)
}

// Device path
func (o DiskPoolVolumeResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumeResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// The properties of customer managed encryption key
type Encryption struct {
	// The key vault where the encryption key is stored
	KeyVaultProperties *EncryptionKeyVaultProperties `pulumi:"keyVaultProperties"`
	// Status of customer managed encryption key
	Status *string `pulumi:"status"`
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//	EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// The properties of customer managed encryption key
type EncryptionArgs struct {
	// The key vault where the encryption key is stored
	KeyVaultProperties EncryptionKeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// Status of customer managed encryption key
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//	        EncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// The properties of customer managed encryption key
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// The key vault where the encryption key is stored
func (o EncryptionOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionKeyVaultProperties { return v.KeyVaultProperties }).(EncryptionKeyVaultPropertiesPtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Encryption) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption {
		if v != nil {
			return *v
		}
		var ret Encryption
		return ret
	}).(EncryptionOutput)
}

// The key vault where the encryption key is stored
func (o EncryptionPtrOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionKeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(EncryptionKeyVaultPropertiesPtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// An Encryption Key
type EncryptionKeyVaultProperties struct {
	// The name of the key.
	KeyName *string `pulumi:"keyName"`
	// The URL of the vault.
	KeyVaultUrl *string `pulumi:"keyVaultUrl"`
	// The version of the key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// EncryptionKeyVaultPropertiesInput is an input type that accepts EncryptionKeyVaultPropertiesArgs and EncryptionKeyVaultPropertiesOutput values.
// You can construct a concrete instance of `EncryptionKeyVaultPropertiesInput` via:
//
//	EncryptionKeyVaultPropertiesArgs{...}
type EncryptionKeyVaultPropertiesInput interface {
	pulumi.Input

	ToEncryptionKeyVaultPropertiesOutput() EncryptionKeyVaultPropertiesOutput
	ToEncryptionKeyVaultPropertiesOutputWithContext(context.Context) EncryptionKeyVaultPropertiesOutput
}

// An Encryption Key
type EncryptionKeyVaultPropertiesArgs struct {
	// The name of the key.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The URL of the vault.
	KeyVaultUrl pulumi.StringPtrInput `pulumi:"keyVaultUrl"`
	// The version of the key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (EncryptionKeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyVaultProperties)(nil)).Elem()
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesOutput() EncryptionKeyVaultPropertiesOutput {
	return i.ToEncryptionKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyVaultPropertiesOutput)
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return i.ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyVaultPropertiesOutput).ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// EncryptionKeyVaultPropertiesPtrInput is an input type that accepts EncryptionKeyVaultPropertiesArgs, EncryptionKeyVaultPropertiesPtr and EncryptionKeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionKeyVaultPropertiesPtrInput` via:
//
//	        EncryptionKeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionKeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput
	ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Context) EncryptionKeyVaultPropertiesPtrOutput
}

type encryptionKeyVaultPropertiesPtrType EncryptionKeyVaultPropertiesArgs

func EncryptionKeyVaultPropertiesPtr(v *EncryptionKeyVaultPropertiesArgs) EncryptionKeyVaultPropertiesPtrInput {
	return (*encryptionKeyVaultPropertiesPtrType)(v)
}

func (*encryptionKeyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyVaultProperties)(nil)).Elem()
}

func (i *encryptionKeyVaultPropertiesPtrType) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return i.ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionKeyVaultPropertiesPtrType) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyVaultPropertiesPtrOutput)
}

// An Encryption Key
type EncryptionKeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyVaultProperties)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesOutput() EncryptionKeyVaultPropertiesOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return o.ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKeyVaultProperties) *EncryptionKeyVaultProperties {
		return &v
	}).(EncryptionKeyVaultPropertiesPtrOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultProperties) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultProperties) *string { return v.KeyVaultUrl }).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultProperties) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type EncryptionKeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyVaultProperties)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesPtrOutput) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesPtrOutput) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesPtrOutput) Elem() EncryptionKeyVaultPropertiesOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) EncryptionKeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyVaultProperties
		return ret
	}).(EncryptionKeyVaultPropertiesOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesPtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// An Encryption Key
type EncryptionKeyVaultPropertiesResponse struct {
	// The auto-detected version of the key if versionType is auto-detected.
	AutoDetectedKeyVersion string `pulumi:"autoDetectedKeyVersion"`
	// The name of the key.
	KeyName *string `pulumi:"keyName"`
	// The state of key provided
	KeyState string `pulumi:"keyState"`
	// The URL of the vault.
	KeyVaultUrl *string `pulumi:"keyVaultUrl"`
	// The version of the key.
	KeyVersion *string `pulumi:"keyVersion"`
	// Property of the key if user provided or auto detected
	VersionType string `pulumi:"versionType"`
}

// An Encryption Key
type EncryptionKeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesResponseOutput) ToEncryptionKeyVaultPropertiesResponseOutput() EncryptionKeyVaultPropertiesResponseOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesResponseOutput) ToEncryptionKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesResponseOutput {
	return o
}

// The auto-detected version of the key if versionType is auto-detected.
func (o EncryptionKeyVaultPropertiesResponseOutput) AutoDetectedKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) string { return v.AutoDetectedKeyVersion }).(pulumi.StringOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The state of key provided
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) string { return v.KeyState }).(pulumi.StringOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) *string { return v.KeyVaultUrl }).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

// Property of the key if user provided or auto detected
func (o EncryptionKeyVaultPropertiesResponseOutput) VersionType() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) string { return v.VersionType }).(pulumi.StringOutput)
}

type EncryptionKeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesResponsePtrOutput) ToEncryptionKeyVaultPropertiesResponsePtrOutput() EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesResponsePtrOutput) ToEncryptionKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesResponsePtrOutput) Elem() EncryptionKeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) EncryptionKeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyVaultPropertiesResponse
		return ret
	}).(EncryptionKeyVaultPropertiesResponseOutput)
}

// The auto-detected version of the key if versionType is auto-detected.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) AutoDetectedKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AutoDetectedKeyVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The state of key provided
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyState
	}).(pulumi.StringPtrOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Property of the key if user provided or auto detected
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) VersionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VersionType
	}).(pulumi.StringPtrOutput)
}

// The properties of customer managed encryption key
type EncryptionResponse struct {
	// The key vault where the encryption key is stored
	KeyVaultProperties *EncryptionKeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Status of customer managed encryption key
	Status *string `pulumi:"status"`
}

// The properties of customer managed encryption key
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

// The key vault where the encryption key is stored
func (o EncryptionResponseOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionKeyVaultPropertiesResponse { return v.KeyVaultProperties }).(EncryptionKeyVaultPropertiesResponsePtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionResponse
		return ret
	}).(EncryptionResponseOutput)
}

// The key vault where the encryption key is stored
func (o EncryptionResponsePtrOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *EncryptionKeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(EncryptionKeyVaultPropertiesResponsePtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Endpoint addresses
type EndpointsResponse struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager string `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager string `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa string `pulumi:"vcsa"`
}

// Endpoint addresses
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

// Endpoint for the HCX Cloud Manager
func (o EndpointsResponseOutput) HcxCloudManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.HcxCloudManager }).(pulumi.StringOutput)
}

// Endpoint for the NSX-T Data Center manager
func (o EndpointsResponseOutput) NsxtManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.NsxtManager }).(pulumi.StringOutput)
}

// Endpoint for Virtual Center Server Appliance
func (o EndpointsResponseOutput) Vcsa() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Vcsa }).(pulumi.StringOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySource struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceInput is an input type that accepts IdentitySourceArgs and IdentitySourceOutput values.
// You can construct a concrete instance of `IdentitySourceInput` via:
//
//	IdentitySourceArgs{...}
type IdentitySourceInput interface {
	pulumi.Input

	ToIdentitySourceOutput() IdentitySourceOutput
	ToIdentitySourceOutputWithContext(context.Context) IdentitySourceOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArgs) ToIdentitySourceOutput() IdentitySourceOutput {
	return i.ToIdentitySourceOutputWithContext(context.Background())
}

func (i IdentitySourceArgs) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOutput)
}

// IdentitySourceArrayInput is an input type that accepts IdentitySourceArray and IdentitySourceArrayOutput values.
// You can construct a concrete instance of `IdentitySourceArrayInput` via:
//
//	IdentitySourceArray{ IdentitySourceArgs{...} }
type IdentitySourceArrayInput interface {
	pulumi.Input

	ToIdentitySourceArrayOutput() IdentitySourceArrayOutput
	ToIdentitySourceArrayOutputWithContext(context.Context) IdentitySourceArrayOutput
}

type IdentitySourceArray []IdentitySourceInput

func (IdentitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return i.ToIdentitySourceArrayOutputWithContext(context.Background())
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceOutput struct{ *pulumi.OutputState }

func (IdentitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (o IdentitySourceOutput) ToIdentitySourceOutput() IdentitySourceOutput {
	return o
}

func (o IdentitySourceOutput) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) Index(i pulumi.IntInput) IdentitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySource {
		return vs[0].([]IdentitySource)[vs[1].(int)]
	}).(IdentitySourceOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponse struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponseOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutput() IdentitySourceResponseOutput {
	return o
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutputWithContext(ctx context.Context) IdentitySourceResponseOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceResponseOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceResponseOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceResponseOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceResponseOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceResponseOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceResponseOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutputWithContext(ctx context.Context) IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) Index(i pulumi.IntInput) IdentitySourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySourceResponse {
		return vs[0].([]IdentitySourceResponse)[vs[1].(int)]
	}).(IdentitySourceResponseOutput)
}

// The properties of a management cluster
type ManagementCluster struct {
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
}

// ManagementClusterInput is an input type that accepts ManagementClusterArgs and ManagementClusterOutput values.
// You can construct a concrete instance of `ManagementClusterInput` via:
//
//	ManagementClusterArgs{...}
type ManagementClusterInput interface {
	pulumi.Input

	ToManagementClusterOutput() ManagementClusterOutput
	ToManagementClusterOutputWithContext(context.Context) ManagementClusterOutput
}

// The properties of a management cluster
type ManagementClusterArgs struct {
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
}

func (ManagementClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (i ManagementClusterArgs) ToManagementClusterOutput() ManagementClusterOutput {
	return i.ToManagementClusterOutputWithContext(context.Background())
}

func (i ManagementClusterArgs) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterOutput)
}

// The properties of a management cluster
type ManagementClusterOutput struct{ *pulumi.OutputState }

func (ManagementClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (o ManagementClusterOutput) ToManagementClusterOutput() ManagementClusterOutput {
	return o
}

func (o ManagementClusterOutput) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return o
}

// The cluster size
func (o ManagementClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The hosts
func (o ManagementClusterOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementCluster) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The properties of a management cluster
type ManagementClusterResponse struct {
	// The identity
	ClusterId int `pulumi:"clusterId"`
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of a management cluster
type ManagementClusterResponseOutput struct{ *pulumi.OutputState }

func (ManagementClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterResponse)(nil)).Elem()
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutput() ManagementClusterResponseOutput {
	return o
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutputWithContext(ctx context.Context) ManagementClusterResponseOutput {
	return o
}

// The identity
func (o ManagementClusterResponseOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterId }).(pulumi.IntOutput)
}

// The cluster size
func (o ManagementClusterResponseOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The hosts
func (o ManagementClusterResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementClusterResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ManagementClusterResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementClusterResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolume struct {
	// Azure resource ID of the NetApp volume
	Id string `pulumi:"id"`
}

// NetAppVolumeInput is an input type that accepts NetAppVolumeArgs and NetAppVolumeOutput values.
// You can construct a concrete instance of `NetAppVolumeInput` via:
//
//	NetAppVolumeArgs{...}
type NetAppVolumeInput interface {
	pulumi.Input

	ToNetAppVolumeOutput() NetAppVolumeOutput
	ToNetAppVolumeOutputWithContext(context.Context) NetAppVolumeOutput
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeArgs struct {
	// Azure resource ID of the NetApp volume
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetAppVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAppVolume)(nil)).Elem()
}

func (i NetAppVolumeArgs) ToNetAppVolumeOutput() NetAppVolumeOutput {
	return i.ToNetAppVolumeOutputWithContext(context.Background())
}

func (i NetAppVolumeArgs) ToNetAppVolumeOutputWithContext(ctx context.Context) NetAppVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAppVolumeOutput)
}

func (i NetAppVolumeArgs) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return i.ToNetAppVolumePtrOutputWithContext(context.Background())
}

func (i NetAppVolumeArgs) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAppVolumeOutput).ToNetAppVolumePtrOutputWithContext(ctx)
}

// NetAppVolumePtrInput is an input type that accepts NetAppVolumeArgs, NetAppVolumePtr and NetAppVolumePtrOutput values.
// You can construct a concrete instance of `NetAppVolumePtrInput` via:
//
//	        NetAppVolumeArgs{...}
//
//	or:
//
//	        nil
type NetAppVolumePtrInput interface {
	pulumi.Input

	ToNetAppVolumePtrOutput() NetAppVolumePtrOutput
	ToNetAppVolumePtrOutputWithContext(context.Context) NetAppVolumePtrOutput
}

type netAppVolumePtrType NetAppVolumeArgs

func NetAppVolumePtr(v *NetAppVolumeArgs) NetAppVolumePtrInput {
	return (*netAppVolumePtrType)(v)
}

func (*netAppVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAppVolume)(nil)).Elem()
}

func (i *netAppVolumePtrType) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return i.ToNetAppVolumePtrOutputWithContext(context.Background())
}

func (i *netAppVolumePtrType) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAppVolumePtrOutput)
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeOutput struct{ *pulumi.OutputState }

func (NetAppVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAppVolume)(nil)).Elem()
}

func (o NetAppVolumeOutput) ToNetAppVolumeOutput() NetAppVolumeOutput {
	return o
}

func (o NetAppVolumeOutput) ToNetAppVolumeOutputWithContext(ctx context.Context) NetAppVolumeOutput {
	return o
}

func (o NetAppVolumeOutput) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return o.ToNetAppVolumePtrOutputWithContext(context.Background())
}

func (o NetAppVolumeOutput) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetAppVolume) *NetAppVolume {
		return &v
	}).(NetAppVolumePtrOutput)
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetAppVolume) string { return v.Id }).(pulumi.StringOutput)
}

type NetAppVolumePtrOutput struct{ *pulumi.OutputState }

func (NetAppVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAppVolume)(nil)).Elem()
}

func (o NetAppVolumePtrOutput) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return o
}

func (o NetAppVolumePtrOutput) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return o
}

func (o NetAppVolumePtrOutput) Elem() NetAppVolumeOutput {
	return o.ApplyT(func(v *NetAppVolume) NetAppVolume {
		if v != nil {
			return *v
		}
		var ret NetAppVolume
		return ret
	}).(NetAppVolumeOutput)
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAppVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeResponse struct {
	// Azure resource ID of the NetApp volume
	Id string `pulumi:"id"`
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeResponseOutput struct{ *pulumi.OutputState }

func (NetAppVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAppVolumeResponse)(nil)).Elem()
}

func (o NetAppVolumeResponseOutput) ToNetAppVolumeResponseOutput() NetAppVolumeResponseOutput {
	return o
}

func (o NetAppVolumeResponseOutput) ToNetAppVolumeResponseOutputWithContext(ctx context.Context) NetAppVolumeResponseOutput {
	return o
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetAppVolumeResponse) string { return v.Id }).(pulumi.StringOutput)
}

type NetAppVolumeResponsePtrOutput struct{ *pulumi.OutputState }

func (NetAppVolumeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAppVolumeResponse)(nil)).Elem()
}

func (o NetAppVolumeResponsePtrOutput) ToNetAppVolumeResponsePtrOutput() NetAppVolumeResponsePtrOutput {
	return o
}

func (o NetAppVolumeResponsePtrOutput) ToNetAppVolumeResponsePtrOutputWithContext(ctx context.Context) NetAppVolumeResponsePtrOutput {
	return o
}

func (o NetAppVolumeResponsePtrOutput) Elem() NetAppVolumeResponseOutput {
	return o.ApplyT(func(v *NetAppVolumeResponse) NetAppVolumeResponse {
		if v != nil {
			return *v
		}
		var ret NetAppVolumeResponse
		return ret
	}).(NetAppVolumeResponseOutput)
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAppVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// a powershell credential object
type PSCredentialExecutionParameter struct {
	// The parameter name
	Name string `pulumi:"name"`
	// password for login
	Password *string `pulumi:"password"`
	// The type of execution parameter
	// Expected value is 'Credential'.
	Type string `pulumi:"type"`
	// username for login
	Username *string `pulumi:"username"`
}

// PSCredentialExecutionParameterInput is an input type that accepts PSCredentialExecutionParameterArgs and PSCredentialExecutionParameterOutput values.
// You can construct a concrete instance of `PSCredentialExecutionParameterInput` via:
//
//	PSCredentialExecutionParameterArgs{...}
type PSCredentialExecutionParameterInput interface {
	pulumi.Input

	ToPSCredentialExecutionParameterOutput() PSCredentialExecutionParameterOutput
	ToPSCredentialExecutionParameterOutputWithContext(context.Context) PSCredentialExecutionParameterOutput
}

// a powershell credential object
type PSCredentialExecutionParameterArgs struct {
	// The parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// password for login
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The type of execution parameter
	// Expected value is 'Credential'.
	Type pulumi.StringInput `pulumi:"type"`
	// username for login
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (PSCredentialExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSCredentialExecutionParameter)(nil)).Elem()
}

func (i PSCredentialExecutionParameterArgs) ToPSCredentialExecutionParameterOutput() PSCredentialExecutionParameterOutput {
	return i.ToPSCredentialExecutionParameterOutputWithContext(context.Background())
}

func (i PSCredentialExecutionParameterArgs) ToPSCredentialExecutionParameterOutputWithContext(ctx context.Context) PSCredentialExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSCredentialExecutionParameterOutput)
}

// a powershell credential object
type PSCredentialExecutionParameterOutput struct{ *pulumi.OutputState }

func (PSCredentialExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSCredentialExecutionParameter)(nil)).Elem()
}

func (o PSCredentialExecutionParameterOutput) ToPSCredentialExecutionParameterOutput() PSCredentialExecutionParameterOutput {
	return o
}

func (o PSCredentialExecutionParameterOutput) ToPSCredentialExecutionParameterOutputWithContext(ctx context.Context) PSCredentialExecutionParameterOutput {
	return o
}

// The parameter name
func (o PSCredentialExecutionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// password for login
func (o PSCredentialExecutionParameterOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The type of execution parameter
// Expected value is 'Credential'.
func (o PSCredentialExecutionParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) string { return v.Type }).(pulumi.StringOutput)
}

// username for login
func (o PSCredentialExecutionParameterOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// a powershell credential object
type PSCredentialExecutionParameterResponse struct {
	// The parameter name
	Name string `pulumi:"name"`
	// password for login
	Password *string `pulumi:"password"`
	// The type of execution parameter
	// Expected value is 'Credential'.
	Type string `pulumi:"type"`
	// username for login
	Username *string `pulumi:"username"`
}

// a powershell credential object
type PSCredentialExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (PSCredentialExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSCredentialExecutionParameterResponse)(nil)).Elem()
}

func (o PSCredentialExecutionParameterResponseOutput) ToPSCredentialExecutionParameterResponseOutput() PSCredentialExecutionParameterResponseOutput {
	return o
}

func (o PSCredentialExecutionParameterResponseOutput) ToPSCredentialExecutionParameterResponseOutputWithContext(ctx context.Context) PSCredentialExecutionParameterResponseOutput {
	return o
}

// The parameter name
func (o PSCredentialExecutionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// password for login
func (o PSCredentialExecutionParameterResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The type of execution parameter
// Expected value is 'Credential'.
func (o PSCredentialExecutionParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

// username for login
func (o PSCredentialExecutionParameterResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Identity for the virtual machine.
type PrivateCloudIdentity struct {
	// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
	Type *string `pulumi:"type"`
}

// PrivateCloudIdentityInput is an input type that accepts PrivateCloudIdentityArgs and PrivateCloudIdentityOutput values.
// You can construct a concrete instance of `PrivateCloudIdentityInput` via:
//
//	PrivateCloudIdentityArgs{...}
type PrivateCloudIdentityInput interface {
	pulumi.Input

	ToPrivateCloudIdentityOutput() PrivateCloudIdentityOutput
	ToPrivateCloudIdentityOutputWithContext(context.Context) PrivateCloudIdentityOutput
}

// Identity for the virtual machine.
type PrivateCloudIdentityArgs struct {
	// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PrivateCloudIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudIdentity)(nil)).Elem()
}

func (i PrivateCloudIdentityArgs) ToPrivateCloudIdentityOutput() PrivateCloudIdentityOutput {
	return i.ToPrivateCloudIdentityOutputWithContext(context.Background())
}

func (i PrivateCloudIdentityArgs) ToPrivateCloudIdentityOutputWithContext(ctx context.Context) PrivateCloudIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudIdentityOutput)
}

func (i PrivateCloudIdentityArgs) ToPrivateCloudIdentityPtrOutput() PrivateCloudIdentityPtrOutput {
	return i.ToPrivateCloudIdentityPtrOutputWithContext(context.Background())
}

func (i PrivateCloudIdentityArgs) ToPrivateCloudIdentityPtrOutputWithContext(ctx context.Context) PrivateCloudIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudIdentityOutput).ToPrivateCloudIdentityPtrOutputWithContext(ctx)
}

// PrivateCloudIdentityPtrInput is an input type that accepts PrivateCloudIdentityArgs, PrivateCloudIdentityPtr and PrivateCloudIdentityPtrOutput values.
// You can construct a concrete instance of `PrivateCloudIdentityPtrInput` via:
//
//	        PrivateCloudIdentityArgs{...}
//
//	or:
//
//	        nil
type PrivateCloudIdentityPtrInput interface {
	pulumi.Input

	ToPrivateCloudIdentityPtrOutput() PrivateCloudIdentityPtrOutput
	ToPrivateCloudIdentityPtrOutputWithContext(context.Context) PrivateCloudIdentityPtrOutput
}

type privateCloudIdentityPtrType PrivateCloudIdentityArgs

func PrivateCloudIdentityPtr(v *PrivateCloudIdentityArgs) PrivateCloudIdentityPtrInput {
	return (*privateCloudIdentityPtrType)(v)
}

func (*privateCloudIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudIdentity)(nil)).Elem()
}

func (i *privateCloudIdentityPtrType) ToPrivateCloudIdentityPtrOutput() PrivateCloudIdentityPtrOutput {
	return i.ToPrivateCloudIdentityPtrOutputWithContext(context.Background())
}

func (i *privateCloudIdentityPtrType) ToPrivateCloudIdentityPtrOutputWithContext(ctx context.Context) PrivateCloudIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudIdentityPtrOutput)
}

// Identity for the virtual machine.
type PrivateCloudIdentityOutput struct{ *pulumi.OutputState }

func (PrivateCloudIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudIdentity)(nil)).Elem()
}

func (o PrivateCloudIdentityOutput) ToPrivateCloudIdentityOutput() PrivateCloudIdentityOutput {
	return o
}

func (o PrivateCloudIdentityOutput) ToPrivateCloudIdentityOutputWithContext(ctx context.Context) PrivateCloudIdentityOutput {
	return o
}

func (o PrivateCloudIdentityOutput) ToPrivateCloudIdentityPtrOutput() PrivateCloudIdentityPtrOutput {
	return o.ToPrivateCloudIdentityPtrOutputWithContext(context.Background())
}

func (o PrivateCloudIdentityOutput) ToPrivateCloudIdentityPtrOutputWithContext(ctx context.Context) PrivateCloudIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateCloudIdentity) *PrivateCloudIdentity {
		return &v
	}).(PrivateCloudIdentityPtrOutput)
}

// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
func (o PrivateCloudIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PrivateCloudIdentityPtrOutput struct{ *pulumi.OutputState }

func (PrivateCloudIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudIdentity)(nil)).Elem()
}

func (o PrivateCloudIdentityPtrOutput) ToPrivateCloudIdentityPtrOutput() PrivateCloudIdentityPtrOutput {
	return o
}

func (o PrivateCloudIdentityPtrOutput) ToPrivateCloudIdentityPtrOutputWithContext(ctx context.Context) PrivateCloudIdentityPtrOutput {
	return o
}

func (o PrivateCloudIdentityPtrOutput) Elem() PrivateCloudIdentityOutput {
	return o.ApplyT(func(v *PrivateCloudIdentity) PrivateCloudIdentity {
		if v != nil {
			return *v
		}
		var ret PrivateCloudIdentity
		return ret
	}).(PrivateCloudIdentityOutput)
}

// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
func (o PrivateCloudIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the virtual machine.
type PrivateCloudIdentityResponse struct {
	// The principal ID of private cloud identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID associated with the private cloud. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
	Type *string `pulumi:"type"`
}

// Identity for the virtual machine.
type PrivateCloudIdentityResponseOutput struct{ *pulumi.OutputState }

func (PrivateCloudIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudIdentityResponse)(nil)).Elem()
}

func (o PrivateCloudIdentityResponseOutput) ToPrivateCloudIdentityResponseOutput() PrivateCloudIdentityResponseOutput {
	return o
}

func (o PrivateCloudIdentityResponseOutput) ToPrivateCloudIdentityResponseOutputWithContext(ctx context.Context) PrivateCloudIdentityResponseOutput {
	return o
}

// The principal ID of private cloud identity. This property will only be provided for a system assigned identity.
func (o PrivateCloudIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID associated with the private cloud. This property will only be provided for a system assigned identity.
func (o PrivateCloudIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
func (o PrivateCloudIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PrivateCloudIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateCloudIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudIdentityResponse)(nil)).Elem()
}

func (o PrivateCloudIdentityResponsePtrOutput) ToPrivateCloudIdentityResponsePtrOutput() PrivateCloudIdentityResponsePtrOutput {
	return o
}

func (o PrivateCloudIdentityResponsePtrOutput) ToPrivateCloudIdentityResponsePtrOutputWithContext(ctx context.Context) PrivateCloudIdentityResponsePtrOutput {
	return o
}

func (o PrivateCloudIdentityResponsePtrOutput) Elem() PrivateCloudIdentityResponseOutput {
	return o.ApplyT(func(v *PrivateCloudIdentityResponse) PrivateCloudIdentityResponse {
		if v != nil {
			return *v
		}
		var ret PrivateCloudIdentityResponse
		return ret
	}).(PrivateCloudIdentityResponseOutput)
}

// The principal ID of private cloud identity. This property will only be provided for a system assigned identity.
func (o PrivateCloudIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID associated with the private cloud. This property will only be provided for a system assigned identity.
func (o PrivateCloudIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
func (o PrivateCloudIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameter struct {
	// The parameter name
	Name string `pulumi:"name"`
	// A secure value for the passed parameter, not to be stored in logs
	SecureValue *string `pulumi:"secureValue"`
	// The type of execution parameter
	// Expected value is 'SecureValue'.
	Type string `pulumi:"type"`
}

// ScriptSecureStringExecutionParameterInput is an input type that accepts ScriptSecureStringExecutionParameterArgs and ScriptSecureStringExecutionParameterOutput values.
// You can construct a concrete instance of `ScriptSecureStringExecutionParameterInput` via:
//
//	ScriptSecureStringExecutionParameterArgs{...}
type ScriptSecureStringExecutionParameterInput interface {
	pulumi.Input

	ToScriptSecureStringExecutionParameterOutput() ScriptSecureStringExecutionParameterOutput
	ToScriptSecureStringExecutionParameterOutputWithContext(context.Context) ScriptSecureStringExecutionParameterOutput
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterArgs struct {
	// The parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// A secure value for the passed parameter, not to be stored in logs
	SecureValue pulumi.StringPtrInput `pulumi:"secureValue"`
	// The type of execution parameter
	// Expected value is 'SecureValue'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScriptSecureStringExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptSecureStringExecutionParameter)(nil)).Elem()
}

func (i ScriptSecureStringExecutionParameterArgs) ToScriptSecureStringExecutionParameterOutput() ScriptSecureStringExecutionParameterOutput {
	return i.ToScriptSecureStringExecutionParameterOutputWithContext(context.Background())
}

func (i ScriptSecureStringExecutionParameterArgs) ToScriptSecureStringExecutionParameterOutputWithContext(ctx context.Context) ScriptSecureStringExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptSecureStringExecutionParameterOutput)
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterOutput struct{ *pulumi.OutputState }

func (ScriptSecureStringExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptSecureStringExecutionParameter)(nil)).Elem()
}

func (o ScriptSecureStringExecutionParameterOutput) ToScriptSecureStringExecutionParameterOutput() ScriptSecureStringExecutionParameterOutput {
	return o
}

func (o ScriptSecureStringExecutionParameterOutput) ToScriptSecureStringExecutionParameterOutputWithContext(ctx context.Context) ScriptSecureStringExecutionParameterOutput {
	return o
}

// The parameter name
func (o ScriptSecureStringExecutionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// A secure value for the passed parameter, not to be stored in logs
func (o ScriptSecureStringExecutionParameterOutput) SecureValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameter) *string { return v.SecureValue }).(pulumi.StringPtrOutput)
}

// The type of execution parameter
// Expected value is 'SecureValue'.
func (o ScriptSecureStringExecutionParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameter) string { return v.Type }).(pulumi.StringOutput)
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterResponse struct {
	// The parameter name
	Name string `pulumi:"name"`
	// A secure value for the passed parameter, not to be stored in logs
	SecureValue *string `pulumi:"secureValue"`
	// The type of execution parameter
	// Expected value is 'SecureValue'.
	Type string `pulumi:"type"`
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (ScriptSecureStringExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptSecureStringExecutionParameterResponse)(nil)).Elem()
}

func (o ScriptSecureStringExecutionParameterResponseOutput) ToScriptSecureStringExecutionParameterResponseOutput() ScriptSecureStringExecutionParameterResponseOutput {
	return o
}

func (o ScriptSecureStringExecutionParameterResponseOutput) ToScriptSecureStringExecutionParameterResponseOutputWithContext(ctx context.Context) ScriptSecureStringExecutionParameterResponseOutput {
	return o
}

// The parameter name
func (o ScriptSecureStringExecutionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A secure value for the passed parameter, not to be stored in logs
func (o ScriptSecureStringExecutionParameterResponseOutput) SecureValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameterResponse) *string { return v.SecureValue }).(pulumi.StringPtrOutput)
}

// The type of execution parameter
// Expected value is 'SecureValue'.
func (o ScriptSecureStringExecutionParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

// a plain text value execution parameter
type ScriptStringExecutionParameter struct {
	// The parameter name
	Name string `pulumi:"name"`
	// The type of execution parameter
	// Expected value is 'Value'.
	Type string `pulumi:"type"`
	// The value for the passed parameter
	Value *string `pulumi:"value"`
}

// ScriptStringExecutionParameterInput is an input type that accepts ScriptStringExecutionParameterArgs and ScriptStringExecutionParameterOutput values.
// You can construct a concrete instance of `ScriptStringExecutionParameterInput` via:
//
//	ScriptStringExecutionParameterArgs{...}
type ScriptStringExecutionParameterInput interface {
	pulumi.Input

	ToScriptStringExecutionParameterOutput() ScriptStringExecutionParameterOutput
	ToScriptStringExecutionParameterOutputWithContext(context.Context) ScriptStringExecutionParameterOutput
}

// a plain text value execution parameter
type ScriptStringExecutionParameterArgs struct {
	// The parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// The type of execution parameter
	// Expected value is 'Value'.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the passed parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScriptStringExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptStringExecutionParameter)(nil)).Elem()
}

func (i ScriptStringExecutionParameterArgs) ToScriptStringExecutionParameterOutput() ScriptStringExecutionParameterOutput {
	return i.ToScriptStringExecutionParameterOutputWithContext(context.Background())
}

func (i ScriptStringExecutionParameterArgs) ToScriptStringExecutionParameterOutputWithContext(ctx context.Context) ScriptStringExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptStringExecutionParameterOutput)
}

// a plain text value execution parameter
type ScriptStringExecutionParameterOutput struct{ *pulumi.OutputState }

func (ScriptStringExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptStringExecutionParameter)(nil)).Elem()
}

func (o ScriptStringExecutionParameterOutput) ToScriptStringExecutionParameterOutput() ScriptStringExecutionParameterOutput {
	return o
}

func (o ScriptStringExecutionParameterOutput) ToScriptStringExecutionParameterOutputWithContext(ctx context.Context) ScriptStringExecutionParameterOutput {
	return o
}

// The parameter name
func (o ScriptStringExecutionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The type of execution parameter
// Expected value is 'Value'.
func (o ScriptStringExecutionParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the passed parameter
func (o ScriptStringExecutionParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// a plain text value execution parameter
type ScriptStringExecutionParameterResponse struct {
	// The parameter name
	Name string `pulumi:"name"`
	// The type of execution parameter
	// Expected value is 'Value'.
	Type string `pulumi:"type"`
	// The value for the passed parameter
	Value *string `pulumi:"value"`
}

// a plain text value execution parameter
type ScriptStringExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (ScriptStringExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptStringExecutionParameterResponse)(nil)).Elem()
}

func (o ScriptStringExecutionParameterResponseOutput) ToScriptStringExecutionParameterResponseOutput() ScriptStringExecutionParameterResponseOutput {
	return o
}

func (o ScriptStringExecutionParameterResponseOutput) ToScriptStringExecutionParameterResponseOutputWithContext(ctx context.Context) ScriptStringExecutionParameterResponseOutput {
	return o
}

// The parameter name
func (o ScriptStringExecutionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of execution parameter
// Expected value is 'Value'.
func (o ScriptStringExecutionParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the passed parameter
func (o ScriptStringExecutionParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The name of the SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The name of the SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// VM-Host placement policy properties
type VmHostPlacementPolicyProperties struct {
	// vm-host placement policy affinity strength (should/must)
	AffinityStrength *string `pulumi:"affinityStrength"`
	// placement policy affinity type
	AffinityType string `pulumi:"affinityType"`
	// placement policy azure hybrid benefit opt-in type
	AzureHybridBenefitType *string `pulumi:"azureHybridBenefitType"`
	// Display name of the placement policy
	DisplayName *string `pulumi:"displayName"`
	// Host members list
	HostMembers []string `pulumi:"hostMembers"`
	// Whether the placement policy is enabled or disabled
	State *string `pulumi:"state"`
	// placement policy type
	// Expected value is 'VmHost'.
	Type string `pulumi:"type"`
	// Virtual machine members list
	VmMembers []string `pulumi:"vmMembers"`
}

// VmHostPlacementPolicyPropertiesInput is an input type that accepts VmHostPlacementPolicyPropertiesArgs and VmHostPlacementPolicyPropertiesOutput values.
// You can construct a concrete instance of `VmHostPlacementPolicyPropertiesInput` via:
//
//	VmHostPlacementPolicyPropertiesArgs{...}
type VmHostPlacementPolicyPropertiesInput interface {
	pulumi.Input

	ToVmHostPlacementPolicyPropertiesOutput() VmHostPlacementPolicyPropertiesOutput
	ToVmHostPlacementPolicyPropertiesOutputWithContext(context.Context) VmHostPlacementPolicyPropertiesOutput
}

// VM-Host placement policy properties
type VmHostPlacementPolicyPropertiesArgs struct {
	// vm-host placement policy affinity strength (should/must)
	AffinityStrength pulumi.StringPtrInput `pulumi:"affinityStrength"`
	// placement policy affinity type
	AffinityType pulumi.StringInput `pulumi:"affinityType"`
	// placement policy azure hybrid benefit opt-in type
	AzureHybridBenefitType pulumi.StringPtrInput `pulumi:"azureHybridBenefitType"`
	// Display name of the placement policy
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Host members list
	HostMembers pulumi.StringArrayInput `pulumi:"hostMembers"`
	// Whether the placement policy is enabled or disabled
	State pulumi.StringPtrInput `pulumi:"state"`
	// placement policy type
	// Expected value is 'VmHost'.
	Type pulumi.StringInput `pulumi:"type"`
	// Virtual machine members list
	VmMembers pulumi.StringArrayInput `pulumi:"vmMembers"`
}

func (VmHostPlacementPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostPlacementPolicyProperties)(nil)).Elem()
}

func (i VmHostPlacementPolicyPropertiesArgs) ToVmHostPlacementPolicyPropertiesOutput() VmHostPlacementPolicyPropertiesOutput {
	return i.ToVmHostPlacementPolicyPropertiesOutputWithContext(context.Background())
}

func (i VmHostPlacementPolicyPropertiesArgs) ToVmHostPlacementPolicyPropertiesOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostPlacementPolicyPropertiesOutput)
}

func (i VmHostPlacementPolicyPropertiesArgs) ToVmHostPlacementPolicyPropertiesPtrOutput() VmHostPlacementPolicyPropertiesPtrOutput {
	return i.ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i VmHostPlacementPolicyPropertiesArgs) ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostPlacementPolicyPropertiesOutput).ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(ctx)
}

// VmHostPlacementPolicyPropertiesPtrInput is an input type that accepts VmHostPlacementPolicyPropertiesArgs, VmHostPlacementPolicyPropertiesPtr and VmHostPlacementPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `VmHostPlacementPolicyPropertiesPtrInput` via:
//
//	        VmHostPlacementPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type VmHostPlacementPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToVmHostPlacementPolicyPropertiesPtrOutput() VmHostPlacementPolicyPropertiesPtrOutput
	ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(context.Context) VmHostPlacementPolicyPropertiesPtrOutput
}

type vmHostPlacementPolicyPropertiesPtrType VmHostPlacementPolicyPropertiesArgs

func VmHostPlacementPolicyPropertiesPtr(v *VmHostPlacementPolicyPropertiesArgs) VmHostPlacementPolicyPropertiesPtrInput {
	return (*vmHostPlacementPolicyPropertiesPtrType)(v)
}

func (*vmHostPlacementPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmHostPlacementPolicyProperties)(nil)).Elem()
}

func (i *vmHostPlacementPolicyPropertiesPtrType) ToVmHostPlacementPolicyPropertiesPtrOutput() VmHostPlacementPolicyPropertiesPtrOutput {
	return i.ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *vmHostPlacementPolicyPropertiesPtrType) ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostPlacementPolicyPropertiesPtrOutput)
}

// VM-Host placement policy properties
type VmHostPlacementPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (VmHostPlacementPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostPlacementPolicyProperties)(nil)).Elem()
}

func (o VmHostPlacementPolicyPropertiesOutput) ToVmHostPlacementPolicyPropertiesOutput() VmHostPlacementPolicyPropertiesOutput {
	return o
}

func (o VmHostPlacementPolicyPropertiesOutput) ToVmHostPlacementPolicyPropertiesOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesOutput {
	return o
}

func (o VmHostPlacementPolicyPropertiesOutput) ToVmHostPlacementPolicyPropertiesPtrOutput() VmHostPlacementPolicyPropertiesPtrOutput {
	return o.ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o VmHostPlacementPolicyPropertiesOutput) ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmHostPlacementPolicyProperties) *VmHostPlacementPolicyProperties {
		return &v
	}).(VmHostPlacementPolicyPropertiesPtrOutput)
}

// vm-host placement policy affinity strength (should/must)
func (o VmHostPlacementPolicyPropertiesOutput) AffinityStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) *string { return v.AffinityStrength }).(pulumi.StringPtrOutput)
}

// placement policy affinity type
func (o VmHostPlacementPolicyPropertiesOutput) AffinityType() pulumi.StringOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) string { return v.AffinityType }).(pulumi.StringOutput)
}

// placement policy azure hybrid benefit opt-in type
func (o VmHostPlacementPolicyPropertiesOutput) AzureHybridBenefitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) *string { return v.AzureHybridBenefitType }).(pulumi.StringPtrOutput)
}

// Display name of the placement policy
func (o VmHostPlacementPolicyPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Host members list
func (o VmHostPlacementPolicyPropertiesOutput) HostMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) []string { return v.HostMembers }).(pulumi.StringArrayOutput)
}

// Whether the placement policy is enabled or disabled
func (o VmHostPlacementPolicyPropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

// placement policy type
// Expected value is 'VmHost'.
func (o VmHostPlacementPolicyPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual machine members list
func (o VmHostPlacementPolicyPropertiesOutput) VmMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyProperties) []string { return v.VmMembers }).(pulumi.StringArrayOutput)
}

type VmHostPlacementPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VmHostPlacementPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmHostPlacementPolicyProperties)(nil)).Elem()
}

func (o VmHostPlacementPolicyPropertiesPtrOutput) ToVmHostPlacementPolicyPropertiesPtrOutput() VmHostPlacementPolicyPropertiesPtrOutput {
	return o
}

func (o VmHostPlacementPolicyPropertiesPtrOutput) ToVmHostPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesPtrOutput {
	return o
}

func (o VmHostPlacementPolicyPropertiesPtrOutput) Elem() VmHostPlacementPolicyPropertiesOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) VmHostPlacementPolicyProperties {
		if v != nil {
			return *v
		}
		var ret VmHostPlacementPolicyProperties
		return ret
	}).(VmHostPlacementPolicyPropertiesOutput)
}

// vm-host placement policy affinity strength (should/must)
func (o VmHostPlacementPolicyPropertiesPtrOutput) AffinityStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AffinityStrength
	}).(pulumi.StringPtrOutput)
}

// placement policy affinity type
func (o VmHostPlacementPolicyPropertiesPtrOutput) AffinityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AffinityType
	}).(pulumi.StringPtrOutput)
}

// placement policy azure hybrid benefit opt-in type
func (o VmHostPlacementPolicyPropertiesPtrOutput) AzureHybridBenefitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureHybridBenefitType
	}).(pulumi.StringPtrOutput)
}

// Display name of the placement policy
func (o VmHostPlacementPolicyPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Host members list
func (o VmHostPlacementPolicyPropertiesPtrOutput) HostMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) []string {
		if v == nil {
			return nil
		}
		return v.HostMembers
	}).(pulumi.StringArrayOutput)
}

// Whether the placement policy is enabled or disabled
func (o VmHostPlacementPolicyPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// placement policy type
// Expected value is 'VmHost'.
func (o VmHostPlacementPolicyPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Virtual machine members list
func (o VmHostPlacementPolicyPropertiesPtrOutput) VmMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VmHostPlacementPolicyProperties) []string {
		if v == nil {
			return nil
		}
		return v.VmMembers
	}).(pulumi.StringArrayOutput)
}

// VM-Host placement policy properties
type VmHostPlacementPolicyPropertiesResponse struct {
	// vm-host placement policy affinity strength (should/must)
	AffinityStrength *string `pulumi:"affinityStrength"`
	// placement policy affinity type
	AffinityType string `pulumi:"affinityType"`
	// placement policy azure hybrid benefit opt-in type
	AzureHybridBenefitType *string `pulumi:"azureHybridBenefitType"`
	// Display name of the placement policy
	DisplayName *string `pulumi:"displayName"`
	// Host members list
	HostMembers []string `pulumi:"hostMembers"`
	// The provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Whether the placement policy is enabled or disabled
	State *string `pulumi:"state"`
	// placement policy type
	// Expected value is 'VmHost'.
	Type string `pulumi:"type"`
	// Virtual machine members list
	VmMembers []string `pulumi:"vmMembers"`
}

// VM-Host placement policy properties
type VmHostPlacementPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VmHostPlacementPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostPlacementPolicyPropertiesResponse)(nil)).Elem()
}

func (o VmHostPlacementPolicyPropertiesResponseOutput) ToVmHostPlacementPolicyPropertiesResponseOutput() VmHostPlacementPolicyPropertiesResponseOutput {
	return o
}

func (o VmHostPlacementPolicyPropertiesResponseOutput) ToVmHostPlacementPolicyPropertiesResponseOutputWithContext(ctx context.Context) VmHostPlacementPolicyPropertiesResponseOutput {
	return o
}

// vm-host placement policy affinity strength (should/must)
func (o VmHostPlacementPolicyPropertiesResponseOutput) AffinityStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) *string { return v.AffinityStrength }).(pulumi.StringPtrOutput)
}

// placement policy affinity type
func (o VmHostPlacementPolicyPropertiesResponseOutput) AffinityType() pulumi.StringOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) string { return v.AffinityType }).(pulumi.StringOutput)
}

// placement policy azure hybrid benefit opt-in type
func (o VmHostPlacementPolicyPropertiesResponseOutput) AzureHybridBenefitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) *string { return v.AzureHybridBenefitType }).(pulumi.StringPtrOutput)
}

// Display name of the placement policy
func (o VmHostPlacementPolicyPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Host members list
func (o VmHostPlacementPolicyPropertiesResponseOutput) HostMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) []string { return v.HostMembers }).(pulumi.StringArrayOutput)
}

// The provisioning state
func (o VmHostPlacementPolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Whether the placement policy is enabled or disabled
func (o VmHostPlacementPolicyPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// placement policy type
// Expected value is 'VmHost'.
func (o VmHostPlacementPolicyPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual machine members list
func (o VmHostPlacementPolicyPropertiesResponseOutput) VmMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmHostPlacementPolicyPropertiesResponse) []string { return v.VmMembers }).(pulumi.StringArrayOutput)
}

// VM-VM placement policy properties
type VmVmPlacementPolicyProperties struct {
	// placement policy affinity type
	AffinityType string `pulumi:"affinityType"`
	// Display name of the placement policy
	DisplayName *string `pulumi:"displayName"`
	// Whether the placement policy is enabled or disabled
	State *string `pulumi:"state"`
	// placement policy type
	// Expected value is 'VmVm'.
	Type string `pulumi:"type"`
	// Virtual machine members list
	VmMembers []string `pulumi:"vmMembers"`
}

// VmVmPlacementPolicyPropertiesInput is an input type that accepts VmVmPlacementPolicyPropertiesArgs and VmVmPlacementPolicyPropertiesOutput values.
// You can construct a concrete instance of `VmVmPlacementPolicyPropertiesInput` via:
//
//	VmVmPlacementPolicyPropertiesArgs{...}
type VmVmPlacementPolicyPropertiesInput interface {
	pulumi.Input

	ToVmVmPlacementPolicyPropertiesOutput() VmVmPlacementPolicyPropertiesOutput
	ToVmVmPlacementPolicyPropertiesOutputWithContext(context.Context) VmVmPlacementPolicyPropertiesOutput
}

// VM-VM placement policy properties
type VmVmPlacementPolicyPropertiesArgs struct {
	// placement policy affinity type
	AffinityType pulumi.StringInput `pulumi:"affinityType"`
	// Display name of the placement policy
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Whether the placement policy is enabled or disabled
	State pulumi.StringPtrInput `pulumi:"state"`
	// placement policy type
	// Expected value is 'VmVm'.
	Type pulumi.StringInput `pulumi:"type"`
	// Virtual machine members list
	VmMembers pulumi.StringArrayInput `pulumi:"vmMembers"`
}

func (VmVmPlacementPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVmPlacementPolicyProperties)(nil)).Elem()
}

func (i VmVmPlacementPolicyPropertiesArgs) ToVmVmPlacementPolicyPropertiesOutput() VmVmPlacementPolicyPropertiesOutput {
	return i.ToVmVmPlacementPolicyPropertiesOutputWithContext(context.Background())
}

func (i VmVmPlacementPolicyPropertiesArgs) ToVmVmPlacementPolicyPropertiesOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVmPlacementPolicyPropertiesOutput)
}

func (i VmVmPlacementPolicyPropertiesArgs) ToVmVmPlacementPolicyPropertiesPtrOutput() VmVmPlacementPolicyPropertiesPtrOutput {
	return i.ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i VmVmPlacementPolicyPropertiesArgs) ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVmPlacementPolicyPropertiesOutput).ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(ctx)
}

// VmVmPlacementPolicyPropertiesPtrInput is an input type that accepts VmVmPlacementPolicyPropertiesArgs, VmVmPlacementPolicyPropertiesPtr and VmVmPlacementPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `VmVmPlacementPolicyPropertiesPtrInput` via:
//
//	        VmVmPlacementPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type VmVmPlacementPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToVmVmPlacementPolicyPropertiesPtrOutput() VmVmPlacementPolicyPropertiesPtrOutput
	ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(context.Context) VmVmPlacementPolicyPropertiesPtrOutput
}

type vmVmPlacementPolicyPropertiesPtrType VmVmPlacementPolicyPropertiesArgs

func VmVmPlacementPolicyPropertiesPtr(v *VmVmPlacementPolicyPropertiesArgs) VmVmPlacementPolicyPropertiesPtrInput {
	return (*vmVmPlacementPolicyPropertiesPtrType)(v)
}

func (*vmVmPlacementPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVmPlacementPolicyProperties)(nil)).Elem()
}

func (i *vmVmPlacementPolicyPropertiesPtrType) ToVmVmPlacementPolicyPropertiesPtrOutput() VmVmPlacementPolicyPropertiesPtrOutput {
	return i.ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *vmVmPlacementPolicyPropertiesPtrType) ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmVmPlacementPolicyPropertiesPtrOutput)
}

// VM-VM placement policy properties
type VmVmPlacementPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (VmVmPlacementPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVmPlacementPolicyProperties)(nil)).Elem()
}

func (o VmVmPlacementPolicyPropertiesOutput) ToVmVmPlacementPolicyPropertiesOutput() VmVmPlacementPolicyPropertiesOutput {
	return o
}

func (o VmVmPlacementPolicyPropertiesOutput) ToVmVmPlacementPolicyPropertiesOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesOutput {
	return o
}

func (o VmVmPlacementPolicyPropertiesOutput) ToVmVmPlacementPolicyPropertiesPtrOutput() VmVmPlacementPolicyPropertiesPtrOutput {
	return o.ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o VmVmPlacementPolicyPropertiesOutput) ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmVmPlacementPolicyProperties) *VmVmPlacementPolicyProperties {
		return &v
	}).(VmVmPlacementPolicyPropertiesPtrOutput)
}

// placement policy affinity type
func (o VmVmPlacementPolicyPropertiesOutput) AffinityType() pulumi.StringOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyProperties) string { return v.AffinityType }).(pulumi.StringOutput)
}

// Display name of the placement policy
func (o VmVmPlacementPolicyPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Whether the placement policy is enabled or disabled
func (o VmVmPlacementPolicyPropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

// placement policy type
// Expected value is 'VmVm'.
func (o VmVmPlacementPolicyPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyProperties) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual machine members list
func (o VmVmPlacementPolicyPropertiesOutput) VmMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyProperties) []string { return v.VmMembers }).(pulumi.StringArrayOutput)
}

type VmVmPlacementPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VmVmPlacementPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmVmPlacementPolicyProperties)(nil)).Elem()
}

func (o VmVmPlacementPolicyPropertiesPtrOutput) ToVmVmPlacementPolicyPropertiesPtrOutput() VmVmPlacementPolicyPropertiesPtrOutput {
	return o
}

func (o VmVmPlacementPolicyPropertiesPtrOutput) ToVmVmPlacementPolicyPropertiesPtrOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesPtrOutput {
	return o
}

func (o VmVmPlacementPolicyPropertiesPtrOutput) Elem() VmVmPlacementPolicyPropertiesOutput {
	return o.ApplyT(func(v *VmVmPlacementPolicyProperties) VmVmPlacementPolicyProperties {
		if v != nil {
			return *v
		}
		var ret VmVmPlacementPolicyProperties
		return ret
	}).(VmVmPlacementPolicyPropertiesOutput)
}

// placement policy affinity type
func (o VmVmPlacementPolicyPropertiesPtrOutput) AffinityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVmPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AffinityType
	}).(pulumi.StringPtrOutput)
}

// Display name of the placement policy
func (o VmVmPlacementPolicyPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVmPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Whether the placement policy is enabled or disabled
func (o VmVmPlacementPolicyPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVmPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// placement policy type
// Expected value is 'VmVm'.
func (o VmVmPlacementPolicyPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmVmPlacementPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Virtual machine members list
func (o VmVmPlacementPolicyPropertiesPtrOutput) VmMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VmVmPlacementPolicyProperties) []string {
		if v == nil {
			return nil
		}
		return v.VmMembers
	}).(pulumi.StringArrayOutput)
}

// VM-VM placement policy properties
type VmVmPlacementPolicyPropertiesResponse struct {
	// placement policy affinity type
	AffinityType string `pulumi:"affinityType"`
	// Display name of the placement policy
	DisplayName *string `pulumi:"displayName"`
	// The provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Whether the placement policy is enabled or disabled
	State *string `pulumi:"state"`
	// placement policy type
	// Expected value is 'VmVm'.
	Type string `pulumi:"type"`
	// Virtual machine members list
	VmMembers []string `pulumi:"vmMembers"`
}

// VM-VM placement policy properties
type VmVmPlacementPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VmVmPlacementPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmVmPlacementPolicyPropertiesResponse)(nil)).Elem()
}

func (o VmVmPlacementPolicyPropertiesResponseOutput) ToVmVmPlacementPolicyPropertiesResponseOutput() VmVmPlacementPolicyPropertiesResponseOutput {
	return o
}

func (o VmVmPlacementPolicyPropertiesResponseOutput) ToVmVmPlacementPolicyPropertiesResponseOutputWithContext(ctx context.Context) VmVmPlacementPolicyPropertiesResponseOutput {
	return o
}

// placement policy affinity type
func (o VmVmPlacementPolicyPropertiesResponseOutput) AffinityType() pulumi.StringOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyPropertiesResponse) string { return v.AffinityType }).(pulumi.StringOutput)
}

// Display name of the placement policy
func (o VmVmPlacementPolicyPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provisioning state
func (o VmVmPlacementPolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Whether the placement policy is enabled or disabled
func (o VmVmPlacementPolicyPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// placement policy type
// Expected value is 'VmVm'.
func (o VmVmPlacementPolicyPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual machine members list
func (o VmVmPlacementPolicyPropertiesResponseOutput) VmMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmVmPlacementPolicyPropertiesResponse) []string { return v.VmMembers }).(pulumi.StringArrayOutput)
}

// NSX DHCP Relay
type WorkloadNetworkDhcpRelay struct {
	// Type of DHCP: SERVER or RELAY.
	// Expected value is 'RELAY'.
	DhcpType string `pulumi:"dhcpType"`
	// Display name of the DHCP entity.
	DisplayName *string `pulumi:"displayName"`
	// NSX revision number.
	Revision *float64 `pulumi:"revision"`
	// DHCP Relay Addresses. Max 3.
	ServerAddresses []string `pulumi:"serverAddresses"`
}

// WorkloadNetworkDhcpRelayInput is an input type that accepts WorkloadNetworkDhcpRelayArgs and WorkloadNetworkDhcpRelayOutput values.
// You can construct a concrete instance of `WorkloadNetworkDhcpRelayInput` via:
//
//	WorkloadNetworkDhcpRelayArgs{...}
type WorkloadNetworkDhcpRelayInput interface {
	pulumi.Input

	ToWorkloadNetworkDhcpRelayOutput() WorkloadNetworkDhcpRelayOutput
	ToWorkloadNetworkDhcpRelayOutputWithContext(context.Context) WorkloadNetworkDhcpRelayOutput
}

// NSX DHCP Relay
type WorkloadNetworkDhcpRelayArgs struct {
	// Type of DHCP: SERVER or RELAY.
	// Expected value is 'RELAY'.
	DhcpType pulumi.StringInput `pulumi:"dhcpType"`
	// Display name of the DHCP entity.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// NSX revision number.
	Revision pulumi.Float64PtrInput `pulumi:"revision"`
	// DHCP Relay Addresses. Max 3.
	ServerAddresses pulumi.StringArrayInput `pulumi:"serverAddresses"`
}

func (WorkloadNetworkDhcpRelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkDhcpRelay)(nil)).Elem()
}

func (i WorkloadNetworkDhcpRelayArgs) ToWorkloadNetworkDhcpRelayOutput() WorkloadNetworkDhcpRelayOutput {
	return i.ToWorkloadNetworkDhcpRelayOutputWithContext(context.Background())
}

func (i WorkloadNetworkDhcpRelayArgs) ToWorkloadNetworkDhcpRelayOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkDhcpRelayOutput)
}

func (i WorkloadNetworkDhcpRelayArgs) ToWorkloadNetworkDhcpRelayPtrOutput() WorkloadNetworkDhcpRelayPtrOutput {
	return i.ToWorkloadNetworkDhcpRelayPtrOutputWithContext(context.Background())
}

func (i WorkloadNetworkDhcpRelayArgs) ToWorkloadNetworkDhcpRelayPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkDhcpRelayOutput).ToWorkloadNetworkDhcpRelayPtrOutputWithContext(ctx)
}

// WorkloadNetworkDhcpRelayPtrInput is an input type that accepts WorkloadNetworkDhcpRelayArgs, WorkloadNetworkDhcpRelayPtr and WorkloadNetworkDhcpRelayPtrOutput values.
// You can construct a concrete instance of `WorkloadNetworkDhcpRelayPtrInput` via:
//
//	        WorkloadNetworkDhcpRelayArgs{...}
//
//	or:
//
//	        nil
type WorkloadNetworkDhcpRelayPtrInput interface {
	pulumi.Input

	ToWorkloadNetworkDhcpRelayPtrOutput() WorkloadNetworkDhcpRelayPtrOutput
	ToWorkloadNetworkDhcpRelayPtrOutputWithContext(context.Context) WorkloadNetworkDhcpRelayPtrOutput
}

type workloadNetworkDhcpRelayPtrType WorkloadNetworkDhcpRelayArgs

func WorkloadNetworkDhcpRelayPtr(v *WorkloadNetworkDhcpRelayArgs) WorkloadNetworkDhcpRelayPtrInput {
	return (*workloadNetworkDhcpRelayPtrType)(v)
}

func (*workloadNetworkDhcpRelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkDhcpRelay)(nil)).Elem()
}

func (i *workloadNetworkDhcpRelayPtrType) ToWorkloadNetworkDhcpRelayPtrOutput() WorkloadNetworkDhcpRelayPtrOutput {
	return i.ToWorkloadNetworkDhcpRelayPtrOutputWithContext(context.Background())
}

func (i *workloadNetworkDhcpRelayPtrType) ToWorkloadNetworkDhcpRelayPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkDhcpRelayPtrOutput)
}

// NSX DHCP Relay
type WorkloadNetworkDhcpRelayOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkDhcpRelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkDhcpRelay)(nil)).Elem()
}

func (o WorkloadNetworkDhcpRelayOutput) ToWorkloadNetworkDhcpRelayOutput() WorkloadNetworkDhcpRelayOutput {
	return o
}

func (o WorkloadNetworkDhcpRelayOutput) ToWorkloadNetworkDhcpRelayOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayOutput {
	return o
}

func (o WorkloadNetworkDhcpRelayOutput) ToWorkloadNetworkDhcpRelayPtrOutput() WorkloadNetworkDhcpRelayPtrOutput {
	return o.ToWorkloadNetworkDhcpRelayPtrOutputWithContext(context.Background())
}

func (o WorkloadNetworkDhcpRelayOutput) ToWorkloadNetworkDhcpRelayPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadNetworkDhcpRelay) *WorkloadNetworkDhcpRelay {
		return &v
	}).(WorkloadNetworkDhcpRelayPtrOutput)
}

// Type of DHCP: SERVER or RELAY.
// Expected value is 'RELAY'.
func (o WorkloadNetworkDhcpRelayOutput) DhcpType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelay) string { return v.DhcpType }).(pulumi.StringOutput)
}

// Display name of the DHCP entity.
func (o WorkloadNetworkDhcpRelayOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelay) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// NSX revision number.
func (o WorkloadNetworkDhcpRelayOutput) Revision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelay) *float64 { return v.Revision }).(pulumi.Float64PtrOutput)
}

// DHCP Relay Addresses. Max 3.
func (o WorkloadNetworkDhcpRelayOutput) ServerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelay) []string { return v.ServerAddresses }).(pulumi.StringArrayOutput)
}

type WorkloadNetworkDhcpRelayPtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkDhcpRelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkDhcpRelay)(nil)).Elem()
}

func (o WorkloadNetworkDhcpRelayPtrOutput) ToWorkloadNetworkDhcpRelayPtrOutput() WorkloadNetworkDhcpRelayPtrOutput {
	return o
}

func (o WorkloadNetworkDhcpRelayPtrOutput) ToWorkloadNetworkDhcpRelayPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayPtrOutput {
	return o
}

func (o WorkloadNetworkDhcpRelayPtrOutput) Elem() WorkloadNetworkDhcpRelayOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpRelay) WorkloadNetworkDhcpRelay {
		if v != nil {
			return *v
		}
		var ret WorkloadNetworkDhcpRelay
		return ret
	}).(WorkloadNetworkDhcpRelayOutput)
}

// Type of DHCP: SERVER or RELAY.
// Expected value is 'RELAY'.
func (o WorkloadNetworkDhcpRelayPtrOutput) DhcpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpRelay) *string {
		if v == nil {
			return nil
		}
		return &v.DhcpType
	}).(pulumi.StringPtrOutput)
}

// Display name of the DHCP entity.
func (o WorkloadNetworkDhcpRelayPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpRelay) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// NSX revision number.
func (o WorkloadNetworkDhcpRelayPtrOutput) Revision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpRelay) *float64 {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.Float64PtrOutput)
}

// DHCP Relay Addresses. Max 3.
func (o WorkloadNetworkDhcpRelayPtrOutput) ServerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpRelay) []string {
		if v == nil {
			return nil
		}
		return v.ServerAddresses
	}).(pulumi.StringArrayOutput)
}

// NSX DHCP Relay
type WorkloadNetworkDhcpRelayResponse struct {
	// Type of DHCP: SERVER or RELAY.
	// Expected value is 'RELAY'.
	DhcpType string `pulumi:"dhcpType"`
	// Display name of the DHCP entity.
	DisplayName *string `pulumi:"displayName"`
	// The provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// NSX revision number.
	Revision *float64 `pulumi:"revision"`
	// NSX Segments consuming DHCP.
	Segments []string `pulumi:"segments"`
	// DHCP Relay Addresses. Max 3.
	ServerAddresses []string `pulumi:"serverAddresses"`
}

// NSX DHCP Relay
type WorkloadNetworkDhcpRelayResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkDhcpRelayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkDhcpRelayResponse)(nil)).Elem()
}

func (o WorkloadNetworkDhcpRelayResponseOutput) ToWorkloadNetworkDhcpRelayResponseOutput() WorkloadNetworkDhcpRelayResponseOutput {
	return o
}

func (o WorkloadNetworkDhcpRelayResponseOutput) ToWorkloadNetworkDhcpRelayResponseOutputWithContext(ctx context.Context) WorkloadNetworkDhcpRelayResponseOutput {
	return o
}

// Type of DHCP: SERVER or RELAY.
// Expected value is 'RELAY'.
func (o WorkloadNetworkDhcpRelayResponseOutput) DhcpType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelayResponse) string { return v.DhcpType }).(pulumi.StringOutput)
}

// Display name of the DHCP entity.
func (o WorkloadNetworkDhcpRelayResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelayResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provisioning state
func (o WorkloadNetworkDhcpRelayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// NSX revision number.
func (o WorkloadNetworkDhcpRelayResponseOutput) Revision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelayResponse) *float64 { return v.Revision }).(pulumi.Float64PtrOutput)
}

// NSX Segments consuming DHCP.
func (o WorkloadNetworkDhcpRelayResponseOutput) Segments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelayResponse) []string { return v.Segments }).(pulumi.StringArrayOutput)
}

// DHCP Relay Addresses. Max 3.
func (o WorkloadNetworkDhcpRelayResponseOutput) ServerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpRelayResponse) []string { return v.ServerAddresses }).(pulumi.StringArrayOutput)
}

// NSX DHCP Server
type WorkloadNetworkDhcpServer struct {
	// Type of DHCP: SERVER or RELAY.
	// Expected value is 'SERVER'.
	DhcpType string `pulumi:"dhcpType"`
	// Display name of the DHCP entity.
	DisplayName *string `pulumi:"displayName"`
	// DHCP Server Lease Time.
	LeaseTime *float64 `pulumi:"leaseTime"`
	// NSX revision number.
	Revision *float64 `pulumi:"revision"`
	// DHCP Server Address.
	ServerAddress *string `pulumi:"serverAddress"`
}

// WorkloadNetworkDhcpServerInput is an input type that accepts WorkloadNetworkDhcpServerArgs and WorkloadNetworkDhcpServerOutput values.
// You can construct a concrete instance of `WorkloadNetworkDhcpServerInput` via:
//
//	WorkloadNetworkDhcpServerArgs{...}
type WorkloadNetworkDhcpServerInput interface {
	pulumi.Input

	ToWorkloadNetworkDhcpServerOutput() WorkloadNetworkDhcpServerOutput
	ToWorkloadNetworkDhcpServerOutputWithContext(context.Context) WorkloadNetworkDhcpServerOutput
}

// NSX DHCP Server
type WorkloadNetworkDhcpServerArgs struct {
	// Type of DHCP: SERVER or RELAY.
	// Expected value is 'SERVER'.
	DhcpType pulumi.StringInput `pulumi:"dhcpType"`
	// Display name of the DHCP entity.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// DHCP Server Lease Time.
	LeaseTime pulumi.Float64PtrInput `pulumi:"leaseTime"`
	// NSX revision number.
	Revision pulumi.Float64PtrInput `pulumi:"revision"`
	// DHCP Server Address.
	ServerAddress pulumi.StringPtrInput `pulumi:"serverAddress"`
}

func (WorkloadNetworkDhcpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkDhcpServer)(nil)).Elem()
}

func (i WorkloadNetworkDhcpServerArgs) ToWorkloadNetworkDhcpServerOutput() WorkloadNetworkDhcpServerOutput {
	return i.ToWorkloadNetworkDhcpServerOutputWithContext(context.Background())
}

func (i WorkloadNetworkDhcpServerArgs) ToWorkloadNetworkDhcpServerOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkDhcpServerOutput)
}

func (i WorkloadNetworkDhcpServerArgs) ToWorkloadNetworkDhcpServerPtrOutput() WorkloadNetworkDhcpServerPtrOutput {
	return i.ToWorkloadNetworkDhcpServerPtrOutputWithContext(context.Background())
}

func (i WorkloadNetworkDhcpServerArgs) ToWorkloadNetworkDhcpServerPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkDhcpServerOutput).ToWorkloadNetworkDhcpServerPtrOutputWithContext(ctx)
}

// WorkloadNetworkDhcpServerPtrInput is an input type that accepts WorkloadNetworkDhcpServerArgs, WorkloadNetworkDhcpServerPtr and WorkloadNetworkDhcpServerPtrOutput values.
// You can construct a concrete instance of `WorkloadNetworkDhcpServerPtrInput` via:
//
//	        WorkloadNetworkDhcpServerArgs{...}
//
//	or:
//
//	        nil
type WorkloadNetworkDhcpServerPtrInput interface {
	pulumi.Input

	ToWorkloadNetworkDhcpServerPtrOutput() WorkloadNetworkDhcpServerPtrOutput
	ToWorkloadNetworkDhcpServerPtrOutputWithContext(context.Context) WorkloadNetworkDhcpServerPtrOutput
}

type workloadNetworkDhcpServerPtrType WorkloadNetworkDhcpServerArgs

func WorkloadNetworkDhcpServerPtr(v *WorkloadNetworkDhcpServerArgs) WorkloadNetworkDhcpServerPtrInput {
	return (*workloadNetworkDhcpServerPtrType)(v)
}

func (*workloadNetworkDhcpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkDhcpServer)(nil)).Elem()
}

func (i *workloadNetworkDhcpServerPtrType) ToWorkloadNetworkDhcpServerPtrOutput() WorkloadNetworkDhcpServerPtrOutput {
	return i.ToWorkloadNetworkDhcpServerPtrOutputWithContext(context.Background())
}

func (i *workloadNetworkDhcpServerPtrType) ToWorkloadNetworkDhcpServerPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkDhcpServerPtrOutput)
}

// NSX DHCP Server
type WorkloadNetworkDhcpServerOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkDhcpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkDhcpServer)(nil)).Elem()
}

func (o WorkloadNetworkDhcpServerOutput) ToWorkloadNetworkDhcpServerOutput() WorkloadNetworkDhcpServerOutput {
	return o
}

func (o WorkloadNetworkDhcpServerOutput) ToWorkloadNetworkDhcpServerOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerOutput {
	return o
}

func (o WorkloadNetworkDhcpServerOutput) ToWorkloadNetworkDhcpServerPtrOutput() WorkloadNetworkDhcpServerPtrOutput {
	return o.ToWorkloadNetworkDhcpServerPtrOutputWithContext(context.Background())
}

func (o WorkloadNetworkDhcpServerOutput) ToWorkloadNetworkDhcpServerPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadNetworkDhcpServer) *WorkloadNetworkDhcpServer {
		return &v
	}).(WorkloadNetworkDhcpServerPtrOutput)
}

// Type of DHCP: SERVER or RELAY.
// Expected value is 'SERVER'.
func (o WorkloadNetworkDhcpServerOutput) DhcpType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServer) string { return v.DhcpType }).(pulumi.StringOutput)
}

// Display name of the DHCP entity.
func (o WorkloadNetworkDhcpServerOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServer) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// DHCP Server Lease Time.
func (o WorkloadNetworkDhcpServerOutput) LeaseTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServer) *float64 { return v.LeaseTime }).(pulumi.Float64PtrOutput)
}

// NSX revision number.
func (o WorkloadNetworkDhcpServerOutput) Revision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServer) *float64 { return v.Revision }).(pulumi.Float64PtrOutput)
}

// DHCP Server Address.
func (o WorkloadNetworkDhcpServerOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServer) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkDhcpServerPtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkDhcpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkDhcpServer)(nil)).Elem()
}

func (o WorkloadNetworkDhcpServerPtrOutput) ToWorkloadNetworkDhcpServerPtrOutput() WorkloadNetworkDhcpServerPtrOutput {
	return o
}

func (o WorkloadNetworkDhcpServerPtrOutput) ToWorkloadNetworkDhcpServerPtrOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerPtrOutput {
	return o
}

func (o WorkloadNetworkDhcpServerPtrOutput) Elem() WorkloadNetworkDhcpServerOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpServer) WorkloadNetworkDhcpServer {
		if v != nil {
			return *v
		}
		var ret WorkloadNetworkDhcpServer
		return ret
	}).(WorkloadNetworkDhcpServerOutput)
}

// Type of DHCP: SERVER or RELAY.
// Expected value is 'SERVER'.
func (o WorkloadNetworkDhcpServerPtrOutput) DhcpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpServer) *string {
		if v == nil {
			return nil
		}
		return &v.DhcpType
	}).(pulumi.StringPtrOutput)
}

// Display name of the DHCP entity.
func (o WorkloadNetworkDhcpServerPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpServer) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// DHCP Server Lease Time.
func (o WorkloadNetworkDhcpServerPtrOutput) LeaseTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpServer) *float64 {
		if v == nil {
			return nil
		}
		return v.LeaseTime
	}).(pulumi.Float64PtrOutput)
}

// NSX revision number.
func (o WorkloadNetworkDhcpServerPtrOutput) Revision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpServer) *float64 {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.Float64PtrOutput)
}

// DHCP Server Address.
func (o WorkloadNetworkDhcpServerPtrOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkDhcpServer) *string {
		if v == nil {
			return nil
		}
		return v.ServerAddress
	}).(pulumi.StringPtrOutput)
}

// NSX DHCP Server
type WorkloadNetworkDhcpServerResponse struct {
	// Type of DHCP: SERVER or RELAY.
	// Expected value is 'SERVER'.
	DhcpType string `pulumi:"dhcpType"`
	// Display name of the DHCP entity.
	DisplayName *string `pulumi:"displayName"`
	// DHCP Server Lease Time.
	LeaseTime *float64 `pulumi:"leaseTime"`
	// The provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// NSX revision number.
	Revision *float64 `pulumi:"revision"`
	// NSX Segments consuming DHCP.
	Segments []string `pulumi:"segments"`
	// DHCP Server Address.
	ServerAddress *string `pulumi:"serverAddress"`
}

// NSX DHCP Server
type WorkloadNetworkDhcpServerResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkDhcpServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkDhcpServerResponse)(nil)).Elem()
}

func (o WorkloadNetworkDhcpServerResponseOutput) ToWorkloadNetworkDhcpServerResponseOutput() WorkloadNetworkDhcpServerResponseOutput {
	return o
}

func (o WorkloadNetworkDhcpServerResponseOutput) ToWorkloadNetworkDhcpServerResponseOutputWithContext(ctx context.Context) WorkloadNetworkDhcpServerResponseOutput {
	return o
}

// Type of DHCP: SERVER or RELAY.
// Expected value is 'SERVER'.
func (o WorkloadNetworkDhcpServerResponseOutput) DhcpType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) string { return v.DhcpType }).(pulumi.StringOutput)
}

// Display name of the DHCP entity.
func (o WorkloadNetworkDhcpServerResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// DHCP Server Lease Time.
func (o WorkloadNetworkDhcpServerResponseOutput) LeaseTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) *float64 { return v.LeaseTime }).(pulumi.Float64PtrOutput)
}

// The provisioning state
func (o WorkloadNetworkDhcpServerResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// NSX revision number.
func (o WorkloadNetworkDhcpServerResponseOutput) Revision() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) *float64 { return v.Revision }).(pulumi.Float64PtrOutput)
}

// NSX Segments consuming DHCP.
func (o WorkloadNetworkDhcpServerResponseOutput) Segments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) []string { return v.Segments }).(pulumi.StringArrayOutput)
}

// DHCP Server Address.
func (o WorkloadNetworkDhcpServerResponseOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkDhcpServerResponse) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponse struct {
	// Name of port or VIF attached to segment.
	PortName *string `pulumi:"portName"`
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifResponseOutput) ToWorkloadNetworkSegmentPortVifResponseOutput() WorkloadNetworkSegmentPortVifResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseOutput) ToWorkloadNetworkSegmentPortVifResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseOutput {
	return o
}

// Name of port or VIF attached to segment.
func (o WorkloadNetworkSegmentPortVifResponseOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentPortVifResponse) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentPortVifResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) ToWorkloadNetworkSegmentPortVifResponseArrayOutput() WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) ToWorkloadNetworkSegmentPortVifResponseArrayOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) Index(i pulumi.IntInput) WorkloadNetworkSegmentPortVifResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadNetworkSegmentPortVifResponse {
		return vs[0].([]WorkloadNetworkSegmentPortVifResponse)[vs[1].(int)]
	}).(WorkloadNetworkSegmentPortVifResponseOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnet struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// WorkloadNetworkSegmentSubnetInput is an input type that accepts WorkloadNetworkSegmentSubnetArgs and WorkloadNetworkSegmentSubnetOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetInput` via:
//
//	WorkloadNetworkSegmentSubnetArgs{...}
type WorkloadNetworkSegmentSubnetInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput
	ToWorkloadNetworkSegmentSubnetOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetOutput
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetArgs struct {
	// DHCP Range assigned for subnet.
	DhcpRanges pulumi.StringArrayInput `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress pulumi.StringPtrInput `pulumi:"gatewayAddress"`
}

func (WorkloadNetworkSegmentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput {
	return i.ToWorkloadNetworkSegmentSubnetOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetOutput)
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetOutput).ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx)
}

// WorkloadNetworkSegmentSubnetPtrInput is an input type that accepts WorkloadNetworkSegmentSubnetArgs, WorkloadNetworkSegmentSubnetPtr and WorkloadNetworkSegmentSubnetPtrOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetPtrInput` via:
//
//	        WorkloadNetworkSegmentSubnetArgs{...}
//
//	or:
//
//	        nil
type WorkloadNetworkSegmentSubnetPtrInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput
	ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetPtrOutput
}

type workloadNetworkSegmentSubnetPtrType WorkloadNetworkSegmentSubnetArgs

func WorkloadNetworkSegmentSubnetPtr(v *WorkloadNetworkSegmentSubnetArgs) WorkloadNetworkSegmentSubnetPtrInput {
	return (*workloadNetworkSegmentSubnetPtrType)(v)
}

func (*workloadNetworkSegmentSubnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (i *workloadNetworkSegmentSubnetPtrType) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (i *workloadNetworkSegmentSubnetPtrType) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return o.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadNetworkSegmentSubnet) *WorkloadNetworkSegmentSubnet {
		return &v
	}).(WorkloadNetworkSegmentSubnetPtrOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentSubnetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) Elem() WorkloadNetworkSegmentSubnetOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) WorkloadNetworkSegmentSubnet {
		if v != nil {
			return *v
		}
		var ret WorkloadNetworkSegmentSubnet
		return ret
	}).(WorkloadNetworkSegmentSubnetOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetPtrOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRanges
	}).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetPtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponse struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponseOutput() WorkloadNetworkSegmentSubnetResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponseOutput {
	return o
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetResponseOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetResponseOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentSubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) Elem() WorkloadNetworkSegmentSubnetResponseOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) WorkloadNetworkSegmentSubnetResponse {
		if v != nil {
			return *v
		}
		var ret WorkloadNetworkSegmentSubnetResponse
		return ret
	}).(WorkloadNetworkSegmentSubnetResponseOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRanges
	}).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AddonArcPropertiesOutput{})
	pulumi.RegisterOutputType(AddonArcPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddonArcPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AddonHcxPropertiesOutput{})
	pulumi.RegisterOutputType(AddonHcxPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddonHcxPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AddonSrmPropertiesOutput{})
	pulumi.RegisterOutputType(AddonSrmPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddonSrmPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AddonVrPropertiesOutput{})
	pulumi.RegisterOutputType(AddonVrPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddonVrPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CircuitResponseOutput{})
	pulumi.RegisterOutputType(CircuitResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterZoneResponseOutput{})
	pulumi.RegisterOutputType(ClusterZoneResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumeOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumePtrOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumeResponseOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumeResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceOutput{})
	pulumi.RegisterOutputType(IdentitySourceArrayOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementClusterOutput{})
	pulumi.RegisterOutputType(ManagementClusterResponseOutput{})
	pulumi.RegisterOutputType(NetAppVolumeOutput{})
	pulumi.RegisterOutputType(NetAppVolumePtrOutput{})
	pulumi.RegisterOutputType(NetAppVolumeResponseOutput{})
	pulumi.RegisterOutputType(NetAppVolumeResponsePtrOutput{})
	pulumi.RegisterOutputType(PSCredentialExecutionParameterOutput{})
	pulumi.RegisterOutputType(PSCredentialExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(PrivateCloudIdentityOutput{})
	pulumi.RegisterOutputType(PrivateCloudIdentityPtrOutput{})
	pulumi.RegisterOutputType(PrivateCloudIdentityResponseOutput{})
	pulumi.RegisterOutputType(PrivateCloudIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ScriptSecureStringExecutionParameterOutput{})
	pulumi.RegisterOutputType(ScriptSecureStringExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(ScriptStringExecutionParameterOutput{})
	pulumi.RegisterOutputType(ScriptStringExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(VmHostPlacementPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(VmHostPlacementPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VmHostPlacementPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VmVmPlacementPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(VmVmPlacementPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VmVmPlacementPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkDhcpRelayOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkDhcpRelayPtrOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkDhcpRelayResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkDhcpServerOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkDhcpServerPtrOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkDhcpServerResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetResponsePtrOutput{})
}
