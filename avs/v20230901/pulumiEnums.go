// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Addon type
type AddonType string

const (
	AddonTypeSRM = AddonType("SRM")
	AddonTypeVR  = AddonType("VR")
	AddonTypeHCX = AddonType("HCX")
	AddonTypeArc = AddonType("Arc")
)

func (AddonType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonType)(nil)).Elem()
}

func (e AddonType) ToAddonTypeOutput() AddonTypeOutput {
	return pulumi.ToOutput(e).(AddonTypeOutput)
}

func (e AddonType) ToAddonTypeOutputWithContext(ctx context.Context) AddonTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddonTypeOutput)
}

func (e AddonType) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return e.ToAddonTypePtrOutputWithContext(context.Background())
}

func (e AddonType) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return AddonType(e).ToAddonTypeOutputWithContext(ctx).ToAddonTypePtrOutputWithContext(ctx)
}

func (e AddonType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddonType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddonType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddonType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddonTypeOutput struct{ *pulumi.OutputState }

func (AddonTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonType)(nil)).Elem()
}

func (o AddonTypeOutput) ToAddonTypeOutput() AddonTypeOutput {
	return o
}

func (o AddonTypeOutput) ToAddonTypeOutputWithContext(ctx context.Context) AddonTypeOutput {
	return o
}

func (o AddonTypeOutput) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return o.ToAddonTypePtrOutputWithContext(context.Background())
}

func (o AddonTypeOutput) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddonType) *AddonType {
		return &v
	}).(AddonTypePtrOutput)
}

func (o AddonTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddonTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddonType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddonTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddonTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddonType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddonTypePtrOutput struct{ *pulumi.OutputState }

func (AddonTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonType)(nil)).Elem()
}

func (o AddonTypePtrOutput) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return o
}

func (o AddonTypePtrOutput) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return o
}

func (o AddonTypePtrOutput) Elem() AddonTypeOutput {
	return o.ApplyT(func(v *AddonType) AddonType {
		if v != nil {
			return *v
		}
		var ret AddonType
		return ret
	}).(AddonTypeOutput)
}

func (o AddonTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddonTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddonType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddonTypeInput is an input type that accepts values of the AddonType enum
// A concrete instance of `AddonTypeInput` can be one of the following:
//
//	AddonTypeSRM
//	AddonTypeVR
//	AddonTypeHCX
//	AddonTypeArc
type AddonTypeInput interface {
	pulumi.Input

	ToAddonTypeOutput() AddonTypeOutput
	ToAddonTypeOutputWithContext(context.Context) AddonTypeOutput
}

var addonTypePtrType = reflect.TypeOf((**AddonType)(nil)).Elem()

type AddonTypePtrInput interface {
	pulumi.Input

	ToAddonTypePtrOutput() AddonTypePtrOutput
	ToAddonTypePtrOutputWithContext(context.Context) AddonTypePtrOutput
}

type addonTypePtr string

func AddonTypePtr(v string) AddonTypePtrInput {
	return (*addonTypePtr)(&v)
}

func (*addonTypePtr) ElementType() reflect.Type {
	return addonTypePtrType
}

func (in *addonTypePtr) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return pulumi.ToOutput(in).(AddonTypePtrOutput)
}

func (in *addonTypePtr) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddonTypePtrOutput)
}

// The availability strategy for the private cloud
type AvailabilityStrategy string

const (
	// in single zone
	AvailabilityStrategySingleZone = AvailabilityStrategy("SingleZone")
	// in two zones
	AvailabilityStrategyDualZone = AvailabilityStrategy("DualZone")
)

func (AvailabilityStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityStrategy)(nil)).Elem()
}

func (e AvailabilityStrategy) ToAvailabilityStrategyOutput() AvailabilityStrategyOutput {
	return pulumi.ToOutput(e).(AvailabilityStrategyOutput)
}

func (e AvailabilityStrategy) ToAvailabilityStrategyOutputWithContext(ctx context.Context) AvailabilityStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AvailabilityStrategyOutput)
}

func (e AvailabilityStrategy) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return e.ToAvailabilityStrategyPtrOutputWithContext(context.Background())
}

func (e AvailabilityStrategy) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return AvailabilityStrategy(e).ToAvailabilityStrategyOutputWithContext(ctx).ToAvailabilityStrategyPtrOutputWithContext(ctx)
}

func (e AvailabilityStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvailabilityStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvailabilityStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AvailabilityStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AvailabilityStrategyOutput struct{ *pulumi.OutputState }

func (AvailabilityStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityStrategy)(nil)).Elem()
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyOutput() AvailabilityStrategyOutput {
	return o
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyOutputWithContext(ctx context.Context) AvailabilityStrategyOutput {
	return o
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return o.ToAvailabilityStrategyPtrOutputWithContext(context.Background())
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityStrategy) *AvailabilityStrategy {
		return &v
	}).(AvailabilityStrategyPtrOutput)
}

func (o AvailabilityStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AvailabilityStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvailabilityStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AvailabilityStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvailabilityStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AvailabilityStrategyPtrOutput struct{ *pulumi.OutputState }

func (AvailabilityStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityStrategy)(nil)).Elem()
}

func (o AvailabilityStrategyPtrOutput) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return o
}

func (o AvailabilityStrategyPtrOutput) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return o
}

func (o AvailabilityStrategyPtrOutput) Elem() AvailabilityStrategyOutput {
	return o.ApplyT(func(v *AvailabilityStrategy) AvailabilityStrategy {
		if v != nil {
			return *v
		}
		var ret AvailabilityStrategy
		return ret
	}).(AvailabilityStrategyOutput)
}

func (o AvailabilityStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AvailabilityStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AvailabilityStrategyInput is an input type that accepts values of the AvailabilityStrategy enum
// A concrete instance of `AvailabilityStrategyInput` can be one of the following:
//
//	AvailabilityStrategySingleZone
//	AvailabilityStrategyDualZone
type AvailabilityStrategyInput interface {
	pulumi.Input

	ToAvailabilityStrategyOutput() AvailabilityStrategyOutput
	ToAvailabilityStrategyOutputWithContext(context.Context) AvailabilityStrategyOutput
}

var availabilityStrategyPtrType = reflect.TypeOf((**AvailabilityStrategy)(nil)).Elem()

type AvailabilityStrategyPtrInput interface {
	pulumi.Input

	ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput
	ToAvailabilityStrategyPtrOutputWithContext(context.Context) AvailabilityStrategyPtrOutput
}

type availabilityStrategyPtr string

func AvailabilityStrategyPtr(v string) AvailabilityStrategyPtrInput {
	return (*availabilityStrategyPtr)(&v)
}

func (*availabilityStrategyPtr) ElementType() reflect.Type {
	return availabilityStrategyPtrType
}

func (in *availabilityStrategyPtr) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return pulumi.ToOutput(in).(AvailabilityStrategyPtrOutput)
}

func (in *availabilityStrategyPtr) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AvailabilityStrategyPtrOutput)
}

// Type of DHCP: SERVER or RELAY.
type DhcpTypeEnum string

const (
	DhcpTypeEnumSERVER = DhcpTypeEnum("SERVER")
	DhcpTypeEnumRELAY  = DhcpTypeEnum("RELAY")
)

func (DhcpTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpTypeEnum)(nil)).Elem()
}

func (e DhcpTypeEnum) ToDhcpTypeEnumOutput() DhcpTypeEnumOutput {
	return pulumi.ToOutput(e).(DhcpTypeEnumOutput)
}

func (e DhcpTypeEnum) ToDhcpTypeEnumOutputWithContext(ctx context.Context) DhcpTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DhcpTypeEnumOutput)
}

func (e DhcpTypeEnum) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return e.ToDhcpTypeEnumPtrOutputWithContext(context.Background())
}

func (e DhcpTypeEnum) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return DhcpTypeEnum(e).ToDhcpTypeEnumOutputWithContext(ctx).ToDhcpTypeEnumPtrOutputWithContext(ctx)
}

func (e DhcpTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DhcpTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DhcpTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DhcpTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DhcpTypeEnumOutput struct{ *pulumi.OutputState }

func (DhcpTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpTypeEnum)(nil)).Elem()
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumOutput() DhcpTypeEnumOutput {
	return o
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumOutputWithContext(ctx context.Context) DhcpTypeEnumOutput {
	return o
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return o.ToDhcpTypeEnumPtrOutputWithContext(context.Background())
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DhcpTypeEnum) *DhcpTypeEnum {
		return &v
	}).(DhcpTypeEnumPtrOutput)
}

func (o DhcpTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DhcpTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DhcpTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DhcpTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DhcpTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DhcpTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DhcpTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (DhcpTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpTypeEnum)(nil)).Elem()
}

func (o DhcpTypeEnumPtrOutput) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return o
}

func (o DhcpTypeEnumPtrOutput) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return o
}

func (o DhcpTypeEnumPtrOutput) Elem() DhcpTypeEnumOutput {
	return o.ApplyT(func(v *DhcpTypeEnum) DhcpTypeEnum {
		if v != nil {
			return *v
		}
		var ret DhcpTypeEnum
		return ret
	}).(DhcpTypeEnumOutput)
}

func (o DhcpTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DhcpTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DhcpTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DhcpTypeEnumInput is an input type that accepts values of the DhcpTypeEnum enum
// A concrete instance of `DhcpTypeEnumInput` can be one of the following:
//
//	DhcpTypeEnumSERVER
//	DhcpTypeEnumRELAY
type DhcpTypeEnumInput interface {
	pulumi.Input

	ToDhcpTypeEnumOutput() DhcpTypeEnumOutput
	ToDhcpTypeEnumOutputWithContext(context.Context) DhcpTypeEnumOutput
}

var dhcpTypeEnumPtrType = reflect.TypeOf((**DhcpTypeEnum)(nil)).Elem()

type DhcpTypeEnumPtrInput interface {
	pulumi.Input

	ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput
	ToDhcpTypeEnumPtrOutputWithContext(context.Context) DhcpTypeEnumPtrOutput
}

type dhcpTypeEnumPtr string

func DhcpTypeEnumPtr(v string) DhcpTypeEnumPtrInput {
	return (*dhcpTypeEnumPtr)(&v)
}

func (*dhcpTypeEnumPtr) ElementType() reflect.Type {
	return dhcpTypeEnumPtrType
}

func (in *dhcpTypeEnumPtr) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(DhcpTypeEnumPtrOutput)
}

func (in *dhcpTypeEnumPtr) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DhcpTypeEnumPtrOutput)
}

// DNS Service log level.
type DnsServiceLogLevelEnum string

const (
	// is debug
	DnsServiceLogLevelEnumDEBUG = DnsServiceLogLevelEnum("DEBUG")
	// is info
	DnsServiceLogLevelEnumINFO = DnsServiceLogLevelEnum("INFO")
	// is warning
	DnsServiceLogLevelEnumWARNING = DnsServiceLogLevelEnum("WARNING")
	// is error
	DnsServiceLogLevelEnumERROR = DnsServiceLogLevelEnum("ERROR")
	// is fatal
	DnsServiceLogLevelEnumFATAL = DnsServiceLogLevelEnum("FATAL")
)

func (DnsServiceLogLevelEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsServiceLogLevelEnum)(nil)).Elem()
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumOutput() DnsServiceLogLevelEnumOutput {
	return pulumi.ToOutput(e).(DnsServiceLogLevelEnumOutput)
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DnsServiceLogLevelEnumOutput)
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return e.ToDnsServiceLogLevelEnumPtrOutputWithContext(context.Background())
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return DnsServiceLogLevelEnum(e).ToDnsServiceLogLevelEnumOutputWithContext(ctx).ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx)
}

func (e DnsServiceLogLevelEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DnsServiceLogLevelEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DnsServiceLogLevelEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DnsServiceLogLevelEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DnsServiceLogLevelEnumOutput struct{ *pulumi.OutputState }

func (DnsServiceLogLevelEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsServiceLogLevelEnum)(nil)).Elem()
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumOutput() DnsServiceLogLevelEnumOutput {
	return o
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumOutput {
	return o
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return o.ToDnsServiceLogLevelEnumPtrOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsServiceLogLevelEnum) *DnsServiceLogLevelEnum {
		return &v
	}).(DnsServiceLogLevelEnumPtrOutput)
}

func (o DnsServiceLogLevelEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DnsServiceLogLevelEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DnsServiceLogLevelEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DnsServiceLogLevelEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DnsServiceLogLevelEnumPtrOutput struct{ *pulumi.OutputState }

func (DnsServiceLogLevelEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsServiceLogLevelEnum)(nil)).Elem()
}

func (o DnsServiceLogLevelEnumPtrOutput) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return o
}

func (o DnsServiceLogLevelEnumPtrOutput) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return o
}

func (o DnsServiceLogLevelEnumPtrOutput) Elem() DnsServiceLogLevelEnumOutput {
	return o.ApplyT(func(v *DnsServiceLogLevelEnum) DnsServiceLogLevelEnum {
		if v != nil {
			return *v
		}
		var ret DnsServiceLogLevelEnum
		return ret
	}).(DnsServiceLogLevelEnumOutput)
}

func (o DnsServiceLogLevelEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DnsServiceLogLevelEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DnsServiceLogLevelEnumInput is an input type that accepts values of the DnsServiceLogLevelEnum enum
// A concrete instance of `DnsServiceLogLevelEnumInput` can be one of the following:
//
//	DnsServiceLogLevelEnumDEBUG
//	DnsServiceLogLevelEnumINFO
//	DnsServiceLogLevelEnumWARNING
//	DnsServiceLogLevelEnumERROR
//	DnsServiceLogLevelEnumFATAL
type DnsServiceLogLevelEnumInput interface {
	pulumi.Input

	ToDnsServiceLogLevelEnumOutput() DnsServiceLogLevelEnumOutput
	ToDnsServiceLogLevelEnumOutputWithContext(context.Context) DnsServiceLogLevelEnumOutput
}

var dnsServiceLogLevelEnumPtrType = reflect.TypeOf((**DnsServiceLogLevelEnum)(nil)).Elem()

type DnsServiceLogLevelEnumPtrInput interface {
	pulumi.Input

	ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput
	ToDnsServiceLogLevelEnumPtrOutputWithContext(context.Context) DnsServiceLogLevelEnumPtrOutput
}

type dnsServiceLogLevelEnumPtr string

func DnsServiceLogLevelEnumPtr(v string) DnsServiceLogLevelEnumPtrInput {
	return (*dnsServiceLogLevelEnumPtr)(&v)
}

func (*dnsServiceLogLevelEnumPtr) ElementType() reflect.Type {
	return dnsServiceLogLevelEnumPtrType
}

func (in *dnsServiceLogLevelEnumPtr) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return pulumi.ToOutput(in).(DnsServiceLogLevelEnumPtrOutput)
}

func (in *dnsServiceLogLevelEnumPtr) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DnsServiceLogLevelEnumPtrOutput)
}

// The type of DNS zone to use.
type DnsZoneType string

const (
	// Primary DNS zone.
	DnsZoneTypePublic = DnsZoneType("Public")
	// Private DNS zone.
	DnsZoneTypePrivate = DnsZoneType("Private")
)

func (DnsZoneType) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsZoneType)(nil)).Elem()
}

func (e DnsZoneType) ToDnsZoneTypeOutput() DnsZoneTypeOutput {
	return pulumi.ToOutput(e).(DnsZoneTypeOutput)
}

func (e DnsZoneType) ToDnsZoneTypeOutputWithContext(ctx context.Context) DnsZoneTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DnsZoneTypeOutput)
}

func (e DnsZoneType) ToDnsZoneTypePtrOutput() DnsZoneTypePtrOutput {
	return e.ToDnsZoneTypePtrOutputWithContext(context.Background())
}

func (e DnsZoneType) ToDnsZoneTypePtrOutputWithContext(ctx context.Context) DnsZoneTypePtrOutput {
	return DnsZoneType(e).ToDnsZoneTypeOutputWithContext(ctx).ToDnsZoneTypePtrOutputWithContext(ctx)
}

func (e DnsZoneType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DnsZoneType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DnsZoneType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DnsZoneType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DnsZoneTypeOutput struct{ *pulumi.OutputState }

func (DnsZoneTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsZoneType)(nil)).Elem()
}

func (o DnsZoneTypeOutput) ToDnsZoneTypeOutput() DnsZoneTypeOutput {
	return o
}

func (o DnsZoneTypeOutput) ToDnsZoneTypeOutputWithContext(ctx context.Context) DnsZoneTypeOutput {
	return o
}

func (o DnsZoneTypeOutput) ToDnsZoneTypePtrOutput() DnsZoneTypePtrOutput {
	return o.ToDnsZoneTypePtrOutputWithContext(context.Background())
}

func (o DnsZoneTypeOutput) ToDnsZoneTypePtrOutputWithContext(ctx context.Context) DnsZoneTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsZoneType) *DnsZoneType {
		return &v
	}).(DnsZoneTypePtrOutput)
}

func (o DnsZoneTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DnsZoneTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DnsZoneType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DnsZoneTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DnsZoneTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DnsZoneType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DnsZoneTypePtrOutput struct{ *pulumi.OutputState }

func (DnsZoneTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsZoneType)(nil)).Elem()
}

func (o DnsZoneTypePtrOutput) ToDnsZoneTypePtrOutput() DnsZoneTypePtrOutput {
	return o
}

func (o DnsZoneTypePtrOutput) ToDnsZoneTypePtrOutputWithContext(ctx context.Context) DnsZoneTypePtrOutput {
	return o
}

func (o DnsZoneTypePtrOutput) Elem() DnsZoneTypeOutput {
	return o.ApplyT(func(v *DnsZoneType) DnsZoneType {
		if v != nil {
			return *v
		}
		var ret DnsZoneType
		return ret
	}).(DnsZoneTypeOutput)
}

func (o DnsZoneTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DnsZoneTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DnsZoneType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DnsZoneTypeInput is an input type that accepts values of the DnsZoneType enum
// A concrete instance of `DnsZoneTypeInput` can be one of the following:
//
//	DnsZoneTypePublic
//	DnsZoneTypePrivate
type DnsZoneTypeInput interface {
	pulumi.Input

	ToDnsZoneTypeOutput() DnsZoneTypeOutput
	ToDnsZoneTypeOutputWithContext(context.Context) DnsZoneTypeOutput
}

var dnsZoneTypePtrType = reflect.TypeOf((**DnsZoneType)(nil)).Elem()

type DnsZoneTypePtrInput interface {
	pulumi.Input

	ToDnsZoneTypePtrOutput() DnsZoneTypePtrOutput
	ToDnsZoneTypePtrOutputWithContext(context.Context) DnsZoneTypePtrOutput
}

type dnsZoneTypePtr string

func DnsZoneTypePtr(v string) DnsZoneTypePtrInput {
	return (*dnsZoneTypePtr)(&v)
}

func (*dnsZoneTypePtr) ElementType() reflect.Type {
	return dnsZoneTypePtrType
}

func (in *dnsZoneTypePtr) ToDnsZoneTypePtrOutput() DnsZoneTypePtrOutput {
	return pulumi.ToOutput(in).(DnsZoneTypePtrOutput)
}

func (in *dnsZoneTypePtr) ToDnsZoneTypePtrOutputWithContext(ctx context.Context) DnsZoneTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DnsZoneTypePtrOutput)
}

// Status of customer managed encryption key
type EncryptionState string

const (
	// is enabled
	EncryptionStateEnabled = EncryptionState("Enabled")
	// is disabled
	EncryptionStateDisabled = EncryptionState("Disabled")
)

func (EncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (e EncryptionState) ToEncryptionStateOutput() EncryptionStateOutput {
	return pulumi.ToOutput(e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return e.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return EncryptionState(e).ToEncryptionStateOutputWithContext(ctx).ToEncryptionStatePtrOutputWithContext(ctx)
}

func (e EncryptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStateOutput struct{ *pulumi.OutputState }

func (EncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (o EncryptionStateOutput) ToEncryptionStateOutput() EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionState) *EncryptionState {
		return &v
	}).(EncryptionStatePtrOutput)
}

func (o EncryptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatePtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionState)(nil)).Elem()
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) Elem() EncryptionStateOutput {
	return o.ApplyT(func(v *EncryptionState) EncryptionState {
		if v != nil {
			return *v
		}
		var ret EncryptionState
		return ret
	}).(EncryptionStateOutput)
}

func (o EncryptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStateInput is an input type that accepts values of the EncryptionState enum
// A concrete instance of `EncryptionStateInput` can be one of the following:
//
//	EncryptionStateEnabled
//	EncryptionStateDisabled
type EncryptionStateInput interface {
	pulumi.Input

	ToEncryptionStateOutput() EncryptionStateOutput
	ToEncryptionStateOutputWithContext(context.Context) EncryptionStateOutput
}

var encryptionStatePtrType = reflect.TypeOf((**EncryptionState)(nil)).Elem()

type EncryptionStatePtrInput interface {
	pulumi.Input

	ToEncryptionStatePtrOutput() EncryptionStatePtrOutput
	ToEncryptionStatePtrOutputWithContext(context.Context) EncryptionStatePtrOutput
}

type encryptionStatePtr string

func EncryptionStatePtr(v string) EncryptionStatePtrInput {
	return (*encryptionStatePtr)(&v)
}

func (*encryptionStatePtr) ElementType() reflect.Type {
	return encryptionStatePtrType
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatePtrOutput)
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatePtrOutput)
}

// Connectivity to internet is enabled or disabled
type InternetEnum string

const (
	// is enabled
	InternetEnumEnabled = InternetEnum("Enabled")
	// is disabled
	InternetEnumDisabled = InternetEnum("Disabled")
)

func (InternetEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetEnum)(nil)).Elem()
}

func (e InternetEnum) ToInternetEnumOutput() InternetEnumOutput {
	return pulumi.ToOutput(e).(InternetEnumOutput)
}

func (e InternetEnum) ToInternetEnumOutputWithContext(ctx context.Context) InternetEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InternetEnumOutput)
}

func (e InternetEnum) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return e.ToInternetEnumPtrOutputWithContext(context.Background())
}

func (e InternetEnum) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return InternetEnum(e).ToInternetEnumOutputWithContext(ctx).ToInternetEnumPtrOutputWithContext(ctx)
}

func (e InternetEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InternetEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InternetEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InternetEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InternetEnumOutput struct{ *pulumi.OutputState }

func (InternetEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetEnum)(nil)).Elem()
}

func (o InternetEnumOutput) ToInternetEnumOutput() InternetEnumOutput {
	return o
}

func (o InternetEnumOutput) ToInternetEnumOutputWithContext(ctx context.Context) InternetEnumOutput {
	return o
}

func (o InternetEnumOutput) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return o.ToInternetEnumPtrOutputWithContext(context.Background())
}

func (o InternetEnumOutput) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetEnum) *InternetEnum {
		return &v
	}).(InternetEnumPtrOutput)
}

func (o InternetEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InternetEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InternetEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InternetEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InternetEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InternetEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InternetEnumPtrOutput struct{ *pulumi.OutputState }

func (InternetEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetEnum)(nil)).Elem()
}

func (o InternetEnumPtrOutput) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return o
}

func (o InternetEnumPtrOutput) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return o
}

func (o InternetEnumPtrOutput) Elem() InternetEnumOutput {
	return o.ApplyT(func(v *InternetEnum) InternetEnum {
		if v != nil {
			return *v
		}
		var ret InternetEnum
		return ret
	}).(InternetEnumOutput)
}

func (o InternetEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InternetEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InternetEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InternetEnumInput is an input type that accepts values of the InternetEnum enum
// A concrete instance of `InternetEnumInput` can be one of the following:
//
//	InternetEnumEnabled
//	InternetEnumDisabled
type InternetEnumInput interface {
	pulumi.Input

	ToInternetEnumOutput() InternetEnumOutput
	ToInternetEnumOutputWithContext(context.Context) InternetEnumOutput
}

var internetEnumPtrType = reflect.TypeOf((**InternetEnum)(nil)).Elem()

type InternetEnumPtrInput interface {
	pulumi.Input

	ToInternetEnumPtrOutput() InternetEnumPtrOutput
	ToInternetEnumPtrOutputWithContext(context.Context) InternetEnumPtrOutput
}

type internetEnumPtr string

func InternetEnumPtr(v string) InternetEnumPtrInput {
	return (*internetEnumPtr)(&v)
}

func (*internetEnumPtr) ElementType() reflect.Type {
	return internetEnumPtrType
}

func (in *internetEnumPtr) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return pulumi.ToOutput(in).(InternetEnumPtrOutput)
}

func (in *internetEnumPtr) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InternetEnumPtrOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or
// attached as a LUN
type MountOptionEnum string

const (
	// is mount
	MountOptionEnumMOUNT = MountOptionEnum("MOUNT")
	// is attach
	MountOptionEnumATTACH = MountOptionEnum("ATTACH")
)

func (MountOptionEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*MountOptionEnum)(nil)).Elem()
}

func (e MountOptionEnum) ToMountOptionEnumOutput() MountOptionEnumOutput {
	return pulumi.ToOutput(e).(MountOptionEnumOutput)
}

func (e MountOptionEnum) ToMountOptionEnumOutputWithContext(ctx context.Context) MountOptionEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MountOptionEnumOutput)
}

func (e MountOptionEnum) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return e.ToMountOptionEnumPtrOutputWithContext(context.Background())
}

func (e MountOptionEnum) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return MountOptionEnum(e).ToMountOptionEnumOutputWithContext(ctx).ToMountOptionEnumPtrOutputWithContext(ctx)
}

func (e MountOptionEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MountOptionEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MountOptionEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MountOptionEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MountOptionEnumOutput struct{ *pulumi.OutputState }

func (MountOptionEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountOptionEnum)(nil)).Elem()
}

func (o MountOptionEnumOutput) ToMountOptionEnumOutput() MountOptionEnumOutput {
	return o
}

func (o MountOptionEnumOutput) ToMountOptionEnumOutputWithContext(ctx context.Context) MountOptionEnumOutput {
	return o
}

func (o MountOptionEnumOutput) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return o.ToMountOptionEnumPtrOutputWithContext(context.Background())
}

func (o MountOptionEnumOutput) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MountOptionEnum) *MountOptionEnum {
		return &v
	}).(MountOptionEnumPtrOutput)
}

func (o MountOptionEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MountOptionEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MountOptionEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MountOptionEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MountOptionEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MountOptionEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MountOptionEnumPtrOutput struct{ *pulumi.OutputState }

func (MountOptionEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MountOptionEnum)(nil)).Elem()
}

func (o MountOptionEnumPtrOutput) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return o
}

func (o MountOptionEnumPtrOutput) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return o
}

func (o MountOptionEnumPtrOutput) Elem() MountOptionEnumOutput {
	return o.ApplyT(func(v *MountOptionEnum) MountOptionEnum {
		if v != nil {
			return *v
		}
		var ret MountOptionEnum
		return ret
	}).(MountOptionEnumOutput)
}

func (o MountOptionEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MountOptionEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MountOptionEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MountOptionEnumInput is an input type that accepts values of the MountOptionEnum enum
// A concrete instance of `MountOptionEnumInput` can be one of the following:
//
//	MountOptionEnumMOUNT
//	MountOptionEnumATTACH
type MountOptionEnumInput interface {
	pulumi.Input

	ToMountOptionEnumOutput() MountOptionEnumOutput
	ToMountOptionEnumOutputWithContext(context.Context) MountOptionEnumOutput
}

var mountOptionEnumPtrType = reflect.TypeOf((**MountOptionEnum)(nil)).Elem()

type MountOptionEnumPtrInput interface {
	pulumi.Input

	ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput
	ToMountOptionEnumPtrOutputWithContext(context.Context) MountOptionEnumPtrOutput
}

type mountOptionEnumPtr string

func MountOptionEnumPtr(v string) MountOptionEnumPtrInput {
	return (*mountOptionEnumPtr)(&v)
}

func (*mountOptionEnumPtr) ElementType() reflect.Type {
	return mountOptionEnumPtrType
}

func (in *mountOptionEnumPtr) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return pulumi.ToOutput(in).(MountOptionEnumPtrOutput)
}

func (in *mountOptionEnumPtr) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MountOptionEnumPtrOutput)
}

// Whether the placement policy is enabled or disabled
type PlacementPolicyStateEnum string

const (
	// is enabled
	PlacementPolicyStateEnumEnabled = PlacementPolicyStateEnum("Enabled")
	// is disabled
	PlacementPolicyStateEnumDisabled = PlacementPolicyStateEnum("Disabled")
)

func (PlacementPolicyStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyStateEnum)(nil)).Elem()
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumOutput() PlacementPolicyStateEnumOutput {
	return pulumi.ToOutput(e).(PlacementPolicyStateEnumOutput)
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumOutputWithContext(ctx context.Context) PlacementPolicyStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlacementPolicyStateEnumOutput)
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return e.ToPlacementPolicyStateEnumPtrOutputWithContext(context.Background())
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return PlacementPolicyStateEnum(e).ToPlacementPolicyStateEnumOutputWithContext(ctx).ToPlacementPolicyStateEnumPtrOutputWithContext(ctx)
}

func (e PlacementPolicyStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlacementPolicyStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlacementPolicyStateEnumOutput struct{ *pulumi.OutputState }

func (PlacementPolicyStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyStateEnum)(nil)).Elem()
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumOutput() PlacementPolicyStateEnumOutput {
	return o
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumOutputWithContext(ctx context.Context) PlacementPolicyStateEnumOutput {
	return o
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return o.ToPlacementPolicyStateEnumPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlacementPolicyStateEnum) *PlacementPolicyStateEnum {
		return &v
	}).(PlacementPolicyStateEnumPtrOutput)
}

func (o PlacementPolicyStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlacementPolicyStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlacementPolicyStateEnumPtrOutput struct{ *pulumi.OutputState }

func (PlacementPolicyStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementPolicyStateEnum)(nil)).Elem()
}

func (o PlacementPolicyStateEnumPtrOutput) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return o
}

func (o PlacementPolicyStateEnumPtrOutput) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return o
}

func (o PlacementPolicyStateEnumPtrOutput) Elem() PlacementPolicyStateEnumOutput {
	return o.ApplyT(func(v *PlacementPolicyStateEnum) PlacementPolicyStateEnum {
		if v != nil {
			return *v
		}
		var ret PlacementPolicyStateEnum
		return ret
	}).(PlacementPolicyStateEnumOutput)
}

func (o PlacementPolicyStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlacementPolicyStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlacementPolicyStateEnumInput is an input type that accepts values of the PlacementPolicyStateEnum enum
// A concrete instance of `PlacementPolicyStateEnumInput` can be one of the following:
//
//	PlacementPolicyStateEnumEnabled
//	PlacementPolicyStateEnumDisabled
type PlacementPolicyStateEnumInput interface {
	pulumi.Input

	ToPlacementPolicyStateEnumOutput() PlacementPolicyStateEnumOutput
	ToPlacementPolicyStateEnumOutputWithContext(context.Context) PlacementPolicyStateEnumOutput
}

var placementPolicyStateEnumPtrType = reflect.TypeOf((**PlacementPolicyStateEnum)(nil)).Elem()

type PlacementPolicyStateEnumPtrInput interface {
	pulumi.Input

	ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput
	ToPlacementPolicyStateEnumPtrOutputWithContext(context.Context) PlacementPolicyStateEnumPtrOutput
}

type placementPolicyStateEnumPtr string

func PlacementPolicyStateEnumPtr(v string) PlacementPolicyStateEnumPtrInput {
	return (*placementPolicyStateEnumPtr)(&v)
}

func (*placementPolicyStateEnumPtr) ElementType() reflect.Type {
	return placementPolicyStateEnumPtrType
}

func (in *placementPolicyStateEnumPtr) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return pulumi.ToOutput(in).(PlacementPolicyStateEnumPtrOutput)
}

func (in *placementPolicyStateEnumPtr) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlacementPolicyStateEnumPtrOutput)
}

// Placement Policy type
type PlacementPolicyType string

const (
	PlacementPolicyTypeVmVm   = PlacementPolicyType("VmVm")
	PlacementPolicyTypeVmHost = PlacementPolicyType("VmHost")
)

func (PlacementPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyType)(nil)).Elem()
}

func (e PlacementPolicyType) ToPlacementPolicyTypeOutput() PlacementPolicyTypeOutput {
	return pulumi.ToOutput(e).(PlacementPolicyTypeOutput)
}

func (e PlacementPolicyType) ToPlacementPolicyTypeOutputWithContext(ctx context.Context) PlacementPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlacementPolicyTypeOutput)
}

func (e PlacementPolicyType) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return e.ToPlacementPolicyTypePtrOutputWithContext(context.Background())
}

func (e PlacementPolicyType) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return PlacementPolicyType(e).ToPlacementPolicyTypeOutputWithContext(ctx).ToPlacementPolicyTypePtrOutputWithContext(ctx)
}

func (e PlacementPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlacementPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlacementPolicyTypeOutput struct{ *pulumi.OutputState }

func (PlacementPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyType)(nil)).Elem()
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypeOutput() PlacementPolicyTypeOutput {
	return o
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypeOutputWithContext(ctx context.Context) PlacementPolicyTypeOutput {
	return o
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return o.ToPlacementPolicyTypePtrOutputWithContext(context.Background())
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlacementPolicyType) *PlacementPolicyType {
		return &v
	}).(PlacementPolicyTypePtrOutput)
}

func (o PlacementPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlacementPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlacementPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlacementPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (PlacementPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementPolicyType)(nil)).Elem()
}

func (o PlacementPolicyTypePtrOutput) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return o
}

func (o PlacementPolicyTypePtrOutput) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return o
}

func (o PlacementPolicyTypePtrOutput) Elem() PlacementPolicyTypeOutput {
	return o.ApplyT(func(v *PlacementPolicyType) PlacementPolicyType {
		if v != nil {
			return *v
		}
		var ret PlacementPolicyType
		return ret
	}).(PlacementPolicyTypeOutput)
}

func (o PlacementPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlacementPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlacementPolicyTypeInput is an input type that accepts values of the PlacementPolicyType enum
// A concrete instance of `PlacementPolicyTypeInput` can be one of the following:
//
//	PlacementPolicyTypeVmVm
//	PlacementPolicyTypeVmHost
type PlacementPolicyTypeInput interface {
	pulumi.Input

	ToPlacementPolicyTypeOutput() PlacementPolicyTypeOutput
	ToPlacementPolicyTypeOutputWithContext(context.Context) PlacementPolicyTypeOutput
}

var placementPolicyTypePtrType = reflect.TypeOf((**PlacementPolicyType)(nil)).Elem()

type PlacementPolicyTypePtrInput interface {
	pulumi.Input

	ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput
	ToPlacementPolicyTypePtrOutputWithContext(context.Context) PlacementPolicyTypePtrOutput
}

type placementPolicyTypePtr string

func PlacementPolicyTypePtr(v string) PlacementPolicyTypePtrInput {
	return (*placementPolicyTypePtr)(&v)
}

func (*placementPolicyTypePtr) ElementType() reflect.Type {
	return placementPolicyTypePtrType
}

func (in *placementPolicyTypePtr) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(PlacementPolicyTypePtrOutput)
}

func (in *placementPolicyTypePtr) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlacementPolicyTypePtrOutput)
}

// Direction of port mirroring profile.
type PortMirroringDirectionEnum string

const (
	// is ingress
	PortMirroringDirectionEnumINGRESS = PortMirroringDirectionEnum("INGRESS")
	// is egress
	PortMirroringDirectionEnumEGRESS = PortMirroringDirectionEnum("EGRESS")
	// is bidirectional
	PortMirroringDirectionEnumBIDIRECTIONAL = PortMirroringDirectionEnum("BIDIRECTIONAL")
)

func (PortMirroringDirectionEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMirroringDirectionEnum)(nil)).Elem()
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumOutput() PortMirroringDirectionEnumOutput {
	return pulumi.ToOutput(e).(PortMirroringDirectionEnumOutput)
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumOutputWithContext(ctx context.Context) PortMirroringDirectionEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PortMirroringDirectionEnumOutput)
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return e.ToPortMirroringDirectionEnumPtrOutputWithContext(context.Background())
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return PortMirroringDirectionEnum(e).ToPortMirroringDirectionEnumOutputWithContext(ctx).ToPortMirroringDirectionEnumPtrOutputWithContext(ctx)
}

func (e PortMirroringDirectionEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PortMirroringDirectionEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PortMirroringDirectionEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PortMirroringDirectionEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PortMirroringDirectionEnumOutput struct{ *pulumi.OutputState }

func (PortMirroringDirectionEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMirroringDirectionEnum)(nil)).Elem()
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumOutput() PortMirroringDirectionEnumOutput {
	return o
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumOutputWithContext(ctx context.Context) PortMirroringDirectionEnumOutput {
	return o
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return o.ToPortMirroringDirectionEnumPtrOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortMirroringDirectionEnum) *PortMirroringDirectionEnum {
		return &v
	}).(PortMirroringDirectionEnumPtrOutput)
}

func (o PortMirroringDirectionEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PortMirroringDirectionEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PortMirroringDirectionEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PortMirroringDirectionEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PortMirroringDirectionEnumPtrOutput struct{ *pulumi.OutputState }

func (PortMirroringDirectionEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortMirroringDirectionEnum)(nil)).Elem()
}

func (o PortMirroringDirectionEnumPtrOutput) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return o
}

func (o PortMirroringDirectionEnumPtrOutput) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return o
}

func (o PortMirroringDirectionEnumPtrOutput) Elem() PortMirroringDirectionEnumOutput {
	return o.ApplyT(func(v *PortMirroringDirectionEnum) PortMirroringDirectionEnum {
		if v != nil {
			return *v
		}
		var ret PortMirroringDirectionEnum
		return ret
	}).(PortMirroringDirectionEnumOutput)
}

func (o PortMirroringDirectionEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PortMirroringDirectionEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PortMirroringDirectionEnumInput is an input type that accepts values of the PortMirroringDirectionEnum enum
// A concrete instance of `PortMirroringDirectionEnumInput` can be one of the following:
//
//	PortMirroringDirectionEnumINGRESS
//	PortMirroringDirectionEnumEGRESS
//	PortMirroringDirectionEnumBIDIRECTIONAL
type PortMirroringDirectionEnumInput interface {
	pulumi.Input

	ToPortMirroringDirectionEnumOutput() PortMirroringDirectionEnumOutput
	ToPortMirroringDirectionEnumOutputWithContext(context.Context) PortMirroringDirectionEnumOutput
}

var portMirroringDirectionEnumPtrType = reflect.TypeOf((**PortMirroringDirectionEnum)(nil)).Elem()

type PortMirroringDirectionEnumPtrInput interface {
	pulumi.Input

	ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput
	ToPortMirroringDirectionEnumPtrOutputWithContext(context.Context) PortMirroringDirectionEnumPtrOutput
}

type portMirroringDirectionEnumPtr string

func PortMirroringDirectionEnumPtr(v string) PortMirroringDirectionEnumPtrInput {
	return (*portMirroringDirectionEnumPtr)(&v)
}

func (*portMirroringDirectionEnumPtr) ElementType() reflect.Type {
	return portMirroringDirectionEnumPtrType
}

func (in *portMirroringDirectionEnumPtr) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return pulumi.ToOutput(in).(PortMirroringDirectionEnumPtrOutput)
}

func (in *portMirroringDirectionEnumPtr) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PortMirroringDirectionEnumPtrOutput)
}

// script execution parameter type
type ScriptExecutionParameterType string

const (
	ScriptExecutionParameterTypeValue       = ScriptExecutionParameterType("Value")
	ScriptExecutionParameterTypeSecureValue = ScriptExecutionParameterType("SecureValue")
	ScriptExecutionParameterTypeCredential  = ScriptExecutionParameterType("Credential")
)

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
type SslEnum string

const (
	// is enabled
	SslEnumEnabled = SslEnum("Enabled")
	// is disabled
	SslEnumDisabled = SslEnum("Disabled")
)

func (SslEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*SslEnum)(nil)).Elem()
}

func (e SslEnum) ToSslEnumOutput() SslEnumOutput {
	return pulumi.ToOutput(e).(SslEnumOutput)
}

func (e SslEnum) ToSslEnumOutputWithContext(ctx context.Context) SslEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslEnumOutput)
}

func (e SslEnum) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return e.ToSslEnumPtrOutputWithContext(context.Background())
}

func (e SslEnum) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return SslEnum(e).ToSslEnumOutputWithContext(ctx).ToSslEnumPtrOutputWithContext(ctx)
}

func (e SslEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslEnumOutput struct{ *pulumi.OutputState }

func (SslEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslEnum)(nil)).Elem()
}

func (o SslEnumOutput) ToSslEnumOutput() SslEnumOutput {
	return o
}

func (o SslEnumOutput) ToSslEnumOutputWithContext(ctx context.Context) SslEnumOutput {
	return o
}

func (o SslEnumOutput) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return o.ToSslEnumPtrOutputWithContext(context.Background())
}

func (o SslEnumOutput) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslEnum) *SslEnum {
		return &v
	}).(SslEnumPtrOutput)
}

func (o SslEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslEnumPtrOutput struct{ *pulumi.OutputState }

func (SslEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslEnum)(nil)).Elem()
}

func (o SslEnumPtrOutput) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return o
}

func (o SslEnumPtrOutput) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return o
}

func (o SslEnumPtrOutput) Elem() SslEnumOutput {
	return o.ApplyT(func(v *SslEnum) SslEnum {
		if v != nil {
			return *v
		}
		var ret SslEnum
		return ret
	}).(SslEnumOutput)
}

func (o SslEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslEnumInput is an input type that accepts values of the SslEnum enum
// A concrete instance of `SslEnumInput` can be one of the following:
//
//	SslEnumEnabled
//	SslEnumDisabled
type SslEnumInput interface {
	pulumi.Input

	ToSslEnumOutput() SslEnumOutput
	ToSslEnumOutputWithContext(context.Context) SslEnumOutput
}

var sslEnumPtrType = reflect.TypeOf((**SslEnum)(nil)).Elem()

type SslEnumPtrInput interface {
	pulumi.Input

	ToSslEnumPtrOutput() SslEnumPtrOutput
	ToSslEnumPtrOutputWithContext(context.Context) SslEnumPtrOutput
}

type sslEnumPtr string

func SslEnumPtr(v string) SslEnumPtrInput {
	return (*sslEnumPtr)(&v)
}

func (*sslEnumPtr) ElementType() reflect.Type {
	return sslEnumPtrType
}

func (in *sslEnumPtr) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return pulumi.ToOutput(in).(SslEnumPtrOutput)
}

func (in *sslEnumPtr) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslEnumPtrOutput)
}

// Type of managed service identity (either system assigned, or none).
type SystemAssignedServiceIdentityType string

const (
	SystemAssignedServiceIdentityTypeNone           = SystemAssignedServiceIdentityType("None")
	SystemAssignedServiceIdentityTypeSystemAssigned = SystemAssignedServiceIdentityType("SystemAssigned")
)

func (SystemAssignedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(SystemAssignedServiceIdentityTypeOutput)
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SystemAssignedServiceIdentityTypeOutput)
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return e.ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e SystemAssignedServiceIdentityType) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return SystemAssignedServiceIdentityType(e).ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx).ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e SystemAssignedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemAssignedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemAssignedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SystemAssignedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SystemAssignedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypeOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypeOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return o.ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAssignedServiceIdentityType) *SystemAssignedServiceIdentityType {
		return &v
	}).(SystemAssignedServiceIdentityTypePtrOutput)
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemAssignedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemAssignedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SystemAssignedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAssignedServiceIdentityType)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityTypePtrOutput) Elem() SystemAssignedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityType) SystemAssignedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret SystemAssignedServiceIdentityType
		return ret
	}).(SystemAssignedServiceIdentityTypeOutput)
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SystemAssignedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SystemAssignedServiceIdentityTypeInput is an input type that accepts values of the SystemAssignedServiceIdentityType enum
// A concrete instance of `SystemAssignedServiceIdentityTypeInput` can be one of the following:
//
//	SystemAssignedServiceIdentityTypeNone
//	SystemAssignedServiceIdentityTypeSystemAssigned
type SystemAssignedServiceIdentityTypeInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityTypeOutput() SystemAssignedServiceIdentityTypeOutput
	ToSystemAssignedServiceIdentityTypeOutputWithContext(context.Context) SystemAssignedServiceIdentityTypeOutput
}

var systemAssignedServiceIdentityTypePtrType = reflect.TypeOf((**SystemAssignedServiceIdentityType)(nil)).Elem()

type SystemAssignedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput
	ToSystemAssignedServiceIdentityTypePtrOutputWithContext(context.Context) SystemAssignedServiceIdentityTypePtrOutput
}

type systemAssignedServiceIdentityTypePtr string

func SystemAssignedServiceIdentityTypePtr(v string) SystemAssignedServiceIdentityTypePtrInput {
	return (*systemAssignedServiceIdentityTypePtr)(&v)
}

func (*systemAssignedServiceIdentityTypePtr) ElementType() reflect.Type {
	return systemAssignedServiceIdentityTypePtrType
}

func (in *systemAssignedServiceIdentityTypePtr) ToSystemAssignedServiceIdentityTypePtrOutput() SystemAssignedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(SystemAssignedServiceIdentityTypePtrOutput)
}

func (in *systemAssignedServiceIdentityTypePtr) ToSystemAssignedServiceIdentityTypePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SystemAssignedServiceIdentityTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AddonTypeOutput{})
	pulumi.RegisterOutputType(AddonTypePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityStrategyOutput{})
	pulumi.RegisterOutputType(AvailabilityStrategyPtrOutput{})
	pulumi.RegisterOutputType(DhcpTypeEnumOutput{})
	pulumi.RegisterOutputType(DhcpTypeEnumPtrOutput{})
	pulumi.RegisterOutputType(DnsServiceLogLevelEnumOutput{})
	pulumi.RegisterOutputType(DnsServiceLogLevelEnumPtrOutput{})
	pulumi.RegisterOutputType(DnsZoneTypeOutput{})
	pulumi.RegisterOutputType(DnsZoneTypePtrOutput{})
	pulumi.RegisterOutputType(EncryptionStateOutput{})
	pulumi.RegisterOutputType(EncryptionStatePtrOutput{})
	pulumi.RegisterOutputType(InternetEnumOutput{})
	pulumi.RegisterOutputType(InternetEnumPtrOutput{})
	pulumi.RegisterOutputType(MountOptionEnumOutput{})
	pulumi.RegisterOutputType(MountOptionEnumPtrOutput{})
	pulumi.RegisterOutputType(PlacementPolicyStateEnumOutput{})
	pulumi.RegisterOutputType(PlacementPolicyStateEnumPtrOutput{})
	pulumi.RegisterOutputType(PlacementPolicyTypeOutput{})
	pulumi.RegisterOutputType(PlacementPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(PortMirroringDirectionEnumOutput{})
	pulumi.RegisterOutputType(PortMirroringDirectionEnumPtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(SslEnumOutput{})
	pulumi.RegisterOutputType(SslEnumPtrOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityTypePtrOutput{})
}
