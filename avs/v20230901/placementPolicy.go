// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A vSphere Distributed Resource Scheduler (DRS) placement policy
type PlacementPolicy struct {
	pulumi.CustomResourceState

	// Display name of the placement policy
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Whether the placement policy is enabled or disabled
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPlacementPolicy registers a new resource with the given unique name, arguments, and options.
func NewPlacementPolicy(ctx *pulumi.Context,
	name string, args *PlacementPolicyArgs, opts ...pulumi.ResourceOption) (*PlacementPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.PrivateCloudName == nil {
		return nil, errors.New("invalid value for required argument 'PrivateCloudName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:avs:PlacementPolicy"),
		},
		{
			Type: pulumi.String("azure-native:avs/v20211201:PlacementPolicy"),
		},
		{
			Type: pulumi.String("azure-native:avs/v20220501:PlacementPolicy"),
		},
		{
			Type: pulumi.String("azure-native:avs/v20230301:PlacementPolicy"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PlacementPolicy
	err := ctx.RegisterResource("azure-native:avs/v20230901:PlacementPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlacementPolicy gets an existing PlacementPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlacementPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlacementPolicyState, opts ...pulumi.ResourceOption) (*PlacementPolicy, error) {
	var resource PlacementPolicy
	err := ctx.ReadResource("azure-native:avs/v20230901:PlacementPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlacementPolicy resources.
type placementPolicyState struct {
}

type PlacementPolicyState struct {
}

func (PlacementPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*placementPolicyState)(nil)).Elem()
}

type placementPolicyArgs struct {
	// Name of the cluster
	ClusterName string `pulumi:"clusterName"`
	// Display name of the placement policy
	DisplayName *string `pulumi:"displayName"`
	// Name of the placement policy.
	PlacementPolicyName *string `pulumi:"placementPolicyName"`
	// Name of the private cloud
	PrivateCloudName string `pulumi:"privateCloudName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Whether the placement policy is enabled or disabled
	State *string `pulumi:"state"`
	// Placement Policy type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a PlacementPolicy resource.
type PlacementPolicyArgs struct {
	// Name of the cluster
	ClusterName pulumi.StringInput
	// Display name of the placement policy
	DisplayName pulumi.StringPtrInput
	// Name of the placement policy.
	PlacementPolicyName pulumi.StringPtrInput
	// Name of the private cloud
	PrivateCloudName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Whether the placement policy is enabled or disabled
	State pulumi.StringPtrInput
	// Placement Policy type
	Type pulumi.StringInput
}

func (PlacementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*placementPolicyArgs)(nil)).Elem()
}

type PlacementPolicyInput interface {
	pulumi.Input

	ToPlacementPolicyOutput() PlacementPolicyOutput
	ToPlacementPolicyOutputWithContext(ctx context.Context) PlacementPolicyOutput
}

func (*PlacementPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementPolicy)(nil)).Elem()
}

func (i *PlacementPolicy) ToPlacementPolicyOutput() PlacementPolicyOutput {
	return i.ToPlacementPolicyOutputWithContext(context.Background())
}

func (i *PlacementPolicy) ToPlacementPolicyOutputWithContext(ctx context.Context) PlacementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementPolicyOutput)
}

type PlacementPolicyOutput struct{ *pulumi.OutputState }

func (PlacementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementPolicy)(nil)).Elem()
}

func (o PlacementPolicyOutput) ToPlacementPolicyOutput() PlacementPolicyOutput {
	return o
}

func (o PlacementPolicyOutput) ToPlacementPolicyOutputWithContext(ctx context.Context) PlacementPolicyOutput {
	return o
}

// Display name of the placement policy
func (o PlacementPolicyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementPolicy) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o PlacementPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state
func (o PlacementPolicyOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementPolicy) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Whether the placement policy is enabled or disabled
func (o PlacementPolicyOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementPolicy) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PlacementPolicyOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *PlacementPolicy) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PlacementPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PlacementPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PlacementPolicyOutput{})
}
