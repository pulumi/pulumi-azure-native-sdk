// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The properties describing private cloud availability zone distribution
type AvailabilityProperties struct {
	// The secondary availability zone for the private cloud
	SecondaryZone *int `pulumi:"secondaryZone"`
	// The availability strategy for the private cloud
	Strategy *string `pulumi:"strategy"`
	// The primary availability zone for the private cloud
	Zone *int `pulumi:"zone"`
}

// AvailabilityPropertiesInput is an input type that accepts AvailabilityPropertiesArgs and AvailabilityPropertiesOutput values.
// You can construct a concrete instance of `AvailabilityPropertiesInput` via:
//
//	AvailabilityPropertiesArgs{...}
type AvailabilityPropertiesInput interface {
	pulumi.Input

	ToAvailabilityPropertiesOutput() AvailabilityPropertiesOutput
	ToAvailabilityPropertiesOutputWithContext(context.Context) AvailabilityPropertiesOutput
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesArgs struct {
	// The secondary availability zone for the private cloud
	SecondaryZone pulumi.IntPtrInput `pulumi:"secondaryZone"`
	// The availability strategy for the private cloud
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
	// The primary availability zone for the private cloud
	Zone pulumi.IntPtrInput `pulumi:"zone"`
}

func (AvailabilityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityProperties)(nil)).Elem()
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesOutput() AvailabilityPropertiesOutput {
	return i.ToAvailabilityPropertiesOutputWithContext(context.Background())
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesOutputWithContext(ctx context.Context) AvailabilityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityPropertiesOutput)
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return i.ToAvailabilityPropertiesPtrOutputWithContext(context.Background())
}

func (i AvailabilityPropertiesArgs) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityPropertiesOutput).ToAvailabilityPropertiesPtrOutputWithContext(ctx)
}

// AvailabilityPropertiesPtrInput is an input type that accepts AvailabilityPropertiesArgs, AvailabilityPropertiesPtr and AvailabilityPropertiesPtrOutput values.
// You can construct a concrete instance of `AvailabilityPropertiesPtrInput` via:
//
//	        AvailabilityPropertiesArgs{...}
//
//	or:
//
//	        nil
type AvailabilityPropertiesPtrInput interface {
	pulumi.Input

	ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput
	ToAvailabilityPropertiesPtrOutputWithContext(context.Context) AvailabilityPropertiesPtrOutput
}

type availabilityPropertiesPtrType AvailabilityPropertiesArgs

func AvailabilityPropertiesPtr(v *AvailabilityPropertiesArgs) AvailabilityPropertiesPtrInput {
	return (*availabilityPropertiesPtrType)(v)
}

func (*availabilityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityProperties)(nil)).Elem()
}

func (i *availabilityPropertiesPtrType) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return i.ToAvailabilityPropertiesPtrOutputWithContext(context.Background())
}

func (i *availabilityPropertiesPtrType) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityPropertiesPtrOutput)
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityProperties)(nil)).Elem()
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesOutput() AvailabilityPropertiesOutput {
	return o
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesOutputWithContext(ctx context.Context) AvailabilityPropertiesOutput {
	return o
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return o.ToAvailabilityPropertiesPtrOutputWithContext(context.Background())
}

func (o AvailabilityPropertiesOutput) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityProperties) *AvailabilityProperties {
		return &v
	}).(AvailabilityPropertiesPtrOutput)
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityProperties) *int { return v.SecondaryZone }).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityProperties) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityProperties) *int { return v.Zone }).(pulumi.IntPtrOutput)
}

type AvailabilityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityProperties)(nil)).Elem()
}

func (o AvailabilityPropertiesPtrOutput) ToAvailabilityPropertiesPtrOutput() AvailabilityPropertiesPtrOutput {
	return o
}

func (o AvailabilityPropertiesPtrOutput) ToAvailabilityPropertiesPtrOutputWithContext(ctx context.Context) AvailabilityPropertiesPtrOutput {
	return o
}

func (o AvailabilityPropertiesPtrOutput) Elem() AvailabilityPropertiesOutput {
	return o.ApplyT(func(v *AvailabilityProperties) AvailabilityProperties {
		if v != nil {
			return *v
		}
		var ret AvailabilityProperties
		return ret
	}).(AvailabilityPropertiesOutput)
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesPtrOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityProperties) *int {
		if v == nil {
			return nil
		}
		return v.SecondaryZone
	}).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesPtrOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityProperties) *int {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.IntPtrOutput)
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesResponse struct {
	// The secondary availability zone for the private cloud
	SecondaryZone *int `pulumi:"secondaryZone"`
	// The availability strategy for the private cloud
	Strategy *string `pulumi:"strategy"`
	// The primary availability zone for the private cloud
	Zone *int `pulumi:"zone"`
}

// The properties describing private cloud availability zone distribution
type AvailabilityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityPropertiesResponse)(nil)).Elem()
}

func (o AvailabilityPropertiesResponseOutput) ToAvailabilityPropertiesResponseOutput() AvailabilityPropertiesResponseOutput {
	return o
}

func (o AvailabilityPropertiesResponseOutput) ToAvailabilityPropertiesResponseOutputWithContext(ctx context.Context) AvailabilityPropertiesResponseOutput {
	return o
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesResponseOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityPropertiesResponse) *int { return v.SecondaryZone }).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesResponseOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityPropertiesResponse) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesResponseOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityPropertiesResponse) *int { return v.Zone }).(pulumi.IntPtrOutput)
}

type AvailabilityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityPropertiesResponse)(nil)).Elem()
}

func (o AvailabilityPropertiesResponsePtrOutput) ToAvailabilityPropertiesResponsePtrOutput() AvailabilityPropertiesResponsePtrOutput {
	return o
}

func (o AvailabilityPropertiesResponsePtrOutput) ToAvailabilityPropertiesResponsePtrOutputWithContext(ctx context.Context) AvailabilityPropertiesResponsePtrOutput {
	return o
}

func (o AvailabilityPropertiesResponsePtrOutput) Elem() AvailabilityPropertiesResponseOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) AvailabilityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityPropertiesResponse
		return ret
	}).(AvailabilityPropertiesResponseOutput)
}

// The secondary availability zone for the private cloud
func (o AvailabilityPropertiesResponsePtrOutput) SecondaryZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondaryZone
	}).(pulumi.IntPtrOutput)
}

// The availability strategy for the private cloud
func (o AvailabilityPropertiesResponsePtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// The primary availability zone for the private cloud
func (o AvailabilityPropertiesResponsePtrOutput) Zone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.IntPtrOutput)
}

// An ExpressRoute Circuit
type CircuitResponse struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID string `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID string `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet string `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet string `pulumi:"secondarySubnet"`
}

// An ExpressRoute Circuit
type CircuitResponseOutput struct{ *pulumi.OutputState }

func (CircuitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitResponse)(nil)).Elem()
}

func (o CircuitResponseOutput) ToCircuitResponseOutput() CircuitResponseOutput {
	return o
}

func (o CircuitResponseOutput) ToCircuitResponseOutputWithContext(ctx context.Context) CircuitResponseOutput {
	return o
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponseOutput) ExpressRouteID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRouteID }).(pulumi.StringOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponseOutput) ExpressRoutePrivatePeeringID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRoutePrivatePeeringID }).(pulumi.StringOutput)
}

// CIDR of primary subnet
func (o CircuitResponseOutput) PrimarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.PrimarySubnet }).(pulumi.StringOutput)
}

// CIDR of secondary subnet
func (o CircuitResponseOutput) SecondarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.SecondarySubnet }).(pulumi.StringOutput)
}

type CircuitResponsePtrOutput struct{ *pulumi.OutputState }

func (CircuitResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CircuitResponse)(nil)).Elem()
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) Elem() CircuitResponseOutput {
	return o.ApplyT(func(v *CircuitResponse) CircuitResponse {
		if v != nil {
			return *v
		}
		var ret CircuitResponse
		return ret
	}).(CircuitResponseOutput)
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponsePtrOutput) ExpressRouteID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteID
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponsePtrOutput) ExpressRoutePrivatePeeringID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRoutePrivatePeeringID
	}).(pulumi.StringPtrOutput)
}

// CIDR of primary subnet
func (o CircuitResponsePtrOutput) PrimarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimarySubnet
	}).(pulumi.StringPtrOutput)
}

// CIDR of secondary subnet
func (o CircuitResponsePtrOutput) SecondarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondarySubnet
	}).(pulumi.StringPtrOutput)
}

// Zone and associated hosts info
type ClusterZoneResponse struct {
	// List of hosts belonging to the availability zone in a cluster
	Hosts []string `pulumi:"hosts"`
	// Availability zone identifier
	Zone string `pulumi:"zone"`
}

// Zone and associated hosts info
type ClusterZoneResponseOutput struct{ *pulumi.OutputState }

func (ClusterZoneResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterZoneResponse)(nil)).Elem()
}

func (o ClusterZoneResponseOutput) ToClusterZoneResponseOutput() ClusterZoneResponseOutput {
	return o
}

func (o ClusterZoneResponseOutput) ToClusterZoneResponseOutputWithContext(ctx context.Context) ClusterZoneResponseOutput {
	return o
}

// List of hosts belonging to the availability zone in a cluster
func (o ClusterZoneResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterZoneResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Availability zone identifier
func (o ClusterZoneResponseOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterZoneResponse) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterZoneResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterZoneResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterZoneResponse)(nil)).Elem()
}

func (o ClusterZoneResponseArrayOutput) ToClusterZoneResponseArrayOutput() ClusterZoneResponseArrayOutput {
	return o
}

func (o ClusterZoneResponseArrayOutput) ToClusterZoneResponseArrayOutputWithContext(ctx context.Context) ClusterZoneResponseArrayOutput {
	return o
}

func (o ClusterZoneResponseArrayOutput) Index(i pulumi.IntInput) ClusterZoneResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterZoneResponse {
		return vs[0].([]ClusterZoneResponse)[vs[1].(int)]
	}).(ClusterZoneResponseOutput)
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolume struct {
	// Name of the LUN to be used for datastore
	LunName string `pulumi:"lunName"`
	// Mode that describes whether the LUN has to be mounted as a datastore or
	// attached as a LUN
	MountOption *string `pulumi:"mountOption"`
	// Azure resource ID of the iSCSI target
	TargetId string `pulumi:"targetId"`
}

// Defaults sets the appropriate defaults for DiskPoolVolume
func (val *DiskPoolVolume) Defaults() *DiskPoolVolume {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountOption == nil {
		mountOption_ := "MOUNT"
		tmp.MountOption = &mountOption_
	}
	return &tmp
}

// DiskPoolVolumeInput is an input type that accepts DiskPoolVolumeArgs and DiskPoolVolumeOutput values.
// You can construct a concrete instance of `DiskPoolVolumeInput` via:
//
//	DiskPoolVolumeArgs{...}
type DiskPoolVolumeInput interface {
	pulumi.Input

	ToDiskPoolVolumeOutput() DiskPoolVolumeOutput
	ToDiskPoolVolumeOutputWithContext(context.Context) DiskPoolVolumeOutput
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeArgs struct {
	// Name of the LUN to be used for datastore
	LunName pulumi.StringInput `pulumi:"lunName"`
	// Mode that describes whether the LUN has to be mounted as a datastore or
	// attached as a LUN
	MountOption pulumi.StringPtrInput `pulumi:"mountOption"`
	// Azure resource ID of the iSCSI target
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

// Defaults sets the appropriate defaults for DiskPoolVolumeArgs
func (val *DiskPoolVolumeArgs) Defaults() *DiskPoolVolumeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountOption == nil {
		tmp.MountOption = pulumi.StringPtr("MOUNT")
	}
	return &tmp
}
func (DiskPoolVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskPoolVolume)(nil)).Elem()
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumeOutput() DiskPoolVolumeOutput {
	return i.ToDiskPoolVolumeOutputWithContext(context.Background())
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumeOutputWithContext(ctx context.Context) DiskPoolVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPoolVolumeOutput)
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return i.ToDiskPoolVolumePtrOutputWithContext(context.Background())
}

func (i DiskPoolVolumeArgs) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPoolVolumeOutput).ToDiskPoolVolumePtrOutputWithContext(ctx)
}

// DiskPoolVolumePtrInput is an input type that accepts DiskPoolVolumeArgs, DiskPoolVolumePtr and DiskPoolVolumePtrOutput values.
// You can construct a concrete instance of `DiskPoolVolumePtrInput` via:
//
//	        DiskPoolVolumeArgs{...}
//
//	or:
//
//	        nil
type DiskPoolVolumePtrInput interface {
	pulumi.Input

	ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput
	ToDiskPoolVolumePtrOutputWithContext(context.Context) DiskPoolVolumePtrOutput
}

type diskPoolVolumePtrType DiskPoolVolumeArgs

func DiskPoolVolumePtr(v *DiskPoolVolumeArgs) DiskPoolVolumePtrInput {
	return (*diskPoolVolumePtrType)(v)
}

func (*diskPoolVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskPoolVolume)(nil)).Elem()
}

func (i *diskPoolVolumePtrType) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return i.ToDiskPoolVolumePtrOutputWithContext(context.Background())
}

func (i *diskPoolVolumePtrType) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskPoolVolumePtrOutput)
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskPoolVolume)(nil)).Elem()
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumeOutput() DiskPoolVolumeOutput {
	return o
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumeOutputWithContext(ctx context.Context) DiskPoolVolumeOutput {
	return o
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return o.ToDiskPoolVolumePtrOutputWithContext(context.Background())
}

func (o DiskPoolVolumeOutput) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskPoolVolume) *DiskPoolVolume {
		return &v
	}).(DiskPoolVolumePtrOutput)
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumeOutput) LunName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolume) string { return v.LunName }).(pulumi.StringOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or
// attached as a LUN
func (o DiskPoolVolumeOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskPoolVolume) *string { return v.MountOption }).(pulumi.StringPtrOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumeOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolume) string { return v.TargetId }).(pulumi.StringOutput)
}

type DiskPoolVolumePtrOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskPoolVolume)(nil)).Elem()
}

func (o DiskPoolVolumePtrOutput) ToDiskPoolVolumePtrOutput() DiskPoolVolumePtrOutput {
	return o
}

func (o DiskPoolVolumePtrOutput) ToDiskPoolVolumePtrOutputWithContext(ctx context.Context) DiskPoolVolumePtrOutput {
	return o
}

func (o DiskPoolVolumePtrOutput) Elem() DiskPoolVolumeOutput {
	return o.ApplyT(func(v *DiskPoolVolume) DiskPoolVolume {
		if v != nil {
			return *v
		}
		var ret DiskPoolVolume
		return ret
	}).(DiskPoolVolumeOutput)
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumePtrOutput) LunName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolume) *string {
		if v == nil {
			return nil
		}
		return &v.LunName
	}).(pulumi.StringPtrOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or
// attached as a LUN
func (o DiskPoolVolumePtrOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolume) *string {
		if v == nil {
			return nil
		}
		return v.MountOption
	}).(pulumi.StringPtrOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolume) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeResponse struct {
	// Name of the LUN to be used for datastore
	LunName string `pulumi:"lunName"`
	// Mode that describes whether the LUN has to be mounted as a datastore or
	// attached as a LUN
	MountOption *string `pulumi:"mountOption"`
	// Device path
	Path string `pulumi:"path"`
	// Azure resource ID of the iSCSI target
	TargetId string `pulumi:"targetId"`
}

// Defaults sets the appropriate defaults for DiskPoolVolumeResponse
func (val *DiskPoolVolumeResponse) Defaults() *DiskPoolVolumeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountOption == nil {
		mountOption_ := "MOUNT"
		tmp.MountOption = &mountOption_
	}
	return &tmp
}

// An iSCSI volume from Microsoft.StoragePool provider
type DiskPoolVolumeResponseOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskPoolVolumeResponse)(nil)).Elem()
}

func (o DiskPoolVolumeResponseOutput) ToDiskPoolVolumeResponseOutput() DiskPoolVolumeResponseOutput {
	return o
}

func (o DiskPoolVolumeResponseOutput) ToDiskPoolVolumeResponseOutputWithContext(ctx context.Context) DiskPoolVolumeResponseOutput {
	return o
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumeResponseOutput) LunName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) string { return v.LunName }).(pulumi.StringOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or
// attached as a LUN
func (o DiskPoolVolumeResponseOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) *string { return v.MountOption }).(pulumi.StringPtrOutput)
}

// Device path
func (o DiskPoolVolumeResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) string { return v.Path }).(pulumi.StringOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumeResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v DiskPoolVolumeResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

type DiskPoolVolumeResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskPoolVolumeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskPoolVolumeResponse)(nil)).Elem()
}

func (o DiskPoolVolumeResponsePtrOutput) ToDiskPoolVolumeResponsePtrOutput() DiskPoolVolumeResponsePtrOutput {
	return o
}

func (o DiskPoolVolumeResponsePtrOutput) ToDiskPoolVolumeResponsePtrOutputWithContext(ctx context.Context) DiskPoolVolumeResponsePtrOutput {
	return o
}

func (o DiskPoolVolumeResponsePtrOutput) Elem() DiskPoolVolumeResponseOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) DiskPoolVolumeResponse {
		if v != nil {
			return *v
		}
		var ret DiskPoolVolumeResponse
		return ret
	}).(DiskPoolVolumeResponseOutput)
}

// Name of the LUN to be used for datastore
func (o DiskPoolVolumeResponsePtrOutput) LunName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LunName
	}).(pulumi.StringPtrOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or
// attached as a LUN
func (o DiskPoolVolumeResponsePtrOutput) MountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return v.MountOption
	}).(pulumi.StringPtrOutput)
}

// Device path
func (o DiskPoolVolumeResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Azure resource ID of the iSCSI target
func (o DiskPoolVolumeResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskPoolVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// An Elastic SAN volume from Microsoft.ElasticSan provider
type ElasticSanVolume struct {
	// Azure resource ID of the Elastic SAN Volume
	TargetId string `pulumi:"targetId"`
}

// ElasticSanVolumeInput is an input type that accepts ElasticSanVolumeArgs and ElasticSanVolumeOutput values.
// You can construct a concrete instance of `ElasticSanVolumeInput` via:
//
//	ElasticSanVolumeArgs{...}
type ElasticSanVolumeInput interface {
	pulumi.Input

	ToElasticSanVolumeOutput() ElasticSanVolumeOutput
	ToElasticSanVolumeOutputWithContext(context.Context) ElasticSanVolumeOutput
}

// An Elastic SAN volume from Microsoft.ElasticSan provider
type ElasticSanVolumeArgs struct {
	// Azure resource ID of the Elastic SAN Volume
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

func (ElasticSanVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSanVolume)(nil)).Elem()
}

func (i ElasticSanVolumeArgs) ToElasticSanVolumeOutput() ElasticSanVolumeOutput {
	return i.ToElasticSanVolumeOutputWithContext(context.Background())
}

func (i ElasticSanVolumeArgs) ToElasticSanVolumeOutputWithContext(ctx context.Context) ElasticSanVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSanVolumeOutput)
}

func (i ElasticSanVolumeArgs) ToElasticSanVolumePtrOutput() ElasticSanVolumePtrOutput {
	return i.ToElasticSanVolumePtrOutputWithContext(context.Background())
}

func (i ElasticSanVolumeArgs) ToElasticSanVolumePtrOutputWithContext(ctx context.Context) ElasticSanVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSanVolumeOutput).ToElasticSanVolumePtrOutputWithContext(ctx)
}

// ElasticSanVolumePtrInput is an input type that accepts ElasticSanVolumeArgs, ElasticSanVolumePtr and ElasticSanVolumePtrOutput values.
// You can construct a concrete instance of `ElasticSanVolumePtrInput` via:
//
//	        ElasticSanVolumeArgs{...}
//
//	or:
//
//	        nil
type ElasticSanVolumePtrInput interface {
	pulumi.Input

	ToElasticSanVolumePtrOutput() ElasticSanVolumePtrOutput
	ToElasticSanVolumePtrOutputWithContext(context.Context) ElasticSanVolumePtrOutput
}

type elasticSanVolumePtrType ElasticSanVolumeArgs

func ElasticSanVolumePtr(v *ElasticSanVolumeArgs) ElasticSanVolumePtrInput {
	return (*elasticSanVolumePtrType)(v)
}

func (*elasticSanVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSanVolume)(nil)).Elem()
}

func (i *elasticSanVolumePtrType) ToElasticSanVolumePtrOutput() ElasticSanVolumePtrOutput {
	return i.ToElasticSanVolumePtrOutputWithContext(context.Background())
}

func (i *elasticSanVolumePtrType) ToElasticSanVolumePtrOutputWithContext(ctx context.Context) ElasticSanVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSanVolumePtrOutput)
}

// An Elastic SAN volume from Microsoft.ElasticSan provider
type ElasticSanVolumeOutput struct{ *pulumi.OutputState }

func (ElasticSanVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSanVolume)(nil)).Elem()
}

func (o ElasticSanVolumeOutput) ToElasticSanVolumeOutput() ElasticSanVolumeOutput {
	return o
}

func (o ElasticSanVolumeOutput) ToElasticSanVolumeOutputWithContext(ctx context.Context) ElasticSanVolumeOutput {
	return o
}

func (o ElasticSanVolumeOutput) ToElasticSanVolumePtrOutput() ElasticSanVolumePtrOutput {
	return o.ToElasticSanVolumePtrOutputWithContext(context.Background())
}

func (o ElasticSanVolumeOutput) ToElasticSanVolumePtrOutputWithContext(ctx context.Context) ElasticSanVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticSanVolume) *ElasticSanVolume {
		return &v
	}).(ElasticSanVolumePtrOutput)
}

// Azure resource ID of the Elastic SAN Volume
func (o ElasticSanVolumeOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSanVolume) string { return v.TargetId }).(pulumi.StringOutput)
}

type ElasticSanVolumePtrOutput struct{ *pulumi.OutputState }

func (ElasticSanVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSanVolume)(nil)).Elem()
}

func (o ElasticSanVolumePtrOutput) ToElasticSanVolumePtrOutput() ElasticSanVolumePtrOutput {
	return o
}

func (o ElasticSanVolumePtrOutput) ToElasticSanVolumePtrOutputWithContext(ctx context.Context) ElasticSanVolumePtrOutput {
	return o
}

func (o ElasticSanVolumePtrOutput) Elem() ElasticSanVolumeOutput {
	return o.ApplyT(func(v *ElasticSanVolume) ElasticSanVolume {
		if v != nil {
			return *v
		}
		var ret ElasticSanVolume
		return ret
	}).(ElasticSanVolumeOutput)
}

// Azure resource ID of the Elastic SAN Volume
func (o ElasticSanVolumePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSanVolume) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// An Elastic SAN volume from Microsoft.ElasticSan provider
type ElasticSanVolumeResponse struct {
	// Azure resource ID of the Elastic SAN Volume
	TargetId string `pulumi:"targetId"`
}

// An Elastic SAN volume from Microsoft.ElasticSan provider
type ElasticSanVolumeResponseOutput struct{ *pulumi.OutputState }

func (ElasticSanVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSanVolumeResponse)(nil)).Elem()
}

func (o ElasticSanVolumeResponseOutput) ToElasticSanVolumeResponseOutput() ElasticSanVolumeResponseOutput {
	return o
}

func (o ElasticSanVolumeResponseOutput) ToElasticSanVolumeResponseOutputWithContext(ctx context.Context) ElasticSanVolumeResponseOutput {
	return o
}

// Azure resource ID of the Elastic SAN Volume
func (o ElasticSanVolumeResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSanVolumeResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

type ElasticSanVolumeResponsePtrOutput struct{ *pulumi.OutputState }

func (ElasticSanVolumeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSanVolumeResponse)(nil)).Elem()
}

func (o ElasticSanVolumeResponsePtrOutput) ToElasticSanVolumeResponsePtrOutput() ElasticSanVolumeResponsePtrOutput {
	return o
}

func (o ElasticSanVolumeResponsePtrOutput) ToElasticSanVolumeResponsePtrOutputWithContext(ctx context.Context) ElasticSanVolumeResponsePtrOutput {
	return o
}

func (o ElasticSanVolumeResponsePtrOutput) Elem() ElasticSanVolumeResponseOutput {
	return o.ApplyT(func(v *ElasticSanVolumeResponse) ElasticSanVolumeResponse {
		if v != nil {
			return *v
		}
		var ret ElasticSanVolumeResponse
		return ret
	}).(ElasticSanVolumeResponseOutput)
}

// Azure resource ID of the Elastic SAN Volume
func (o ElasticSanVolumeResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSanVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// The properties of customer managed encryption key
type Encryption struct {
	// The key vault where the encryption key is stored
	KeyVaultProperties *EncryptionKeyVaultProperties `pulumi:"keyVaultProperties"`
	// Status of customer managed encryption key
	Status *string `pulumi:"status"`
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//	EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// The properties of customer managed encryption key
type EncryptionArgs struct {
	// The key vault where the encryption key is stored
	KeyVaultProperties EncryptionKeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// Status of customer managed encryption key
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//	        EncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// The properties of customer managed encryption key
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// The key vault where the encryption key is stored
func (o EncryptionOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionKeyVaultProperties { return v.KeyVaultProperties }).(EncryptionKeyVaultPropertiesPtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Encryption) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption {
		if v != nil {
			return *v
		}
		var ret Encryption
		return ret
	}).(EncryptionOutput)
}

// The key vault where the encryption key is stored
func (o EncryptionPtrOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionKeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(EncryptionKeyVaultPropertiesPtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// An Encryption Key
type EncryptionKeyVaultProperties struct {
	// The name of the key.
	KeyName *string `pulumi:"keyName"`
	// The URL of the vault.
	KeyVaultUrl *string `pulumi:"keyVaultUrl"`
	// The version of the key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// EncryptionKeyVaultPropertiesInput is an input type that accepts EncryptionKeyVaultPropertiesArgs and EncryptionKeyVaultPropertiesOutput values.
// You can construct a concrete instance of `EncryptionKeyVaultPropertiesInput` via:
//
//	EncryptionKeyVaultPropertiesArgs{...}
type EncryptionKeyVaultPropertiesInput interface {
	pulumi.Input

	ToEncryptionKeyVaultPropertiesOutput() EncryptionKeyVaultPropertiesOutput
	ToEncryptionKeyVaultPropertiesOutputWithContext(context.Context) EncryptionKeyVaultPropertiesOutput
}

// An Encryption Key
type EncryptionKeyVaultPropertiesArgs struct {
	// The name of the key.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The URL of the vault.
	KeyVaultUrl pulumi.StringPtrInput `pulumi:"keyVaultUrl"`
	// The version of the key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (EncryptionKeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyVaultProperties)(nil)).Elem()
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesOutput() EncryptionKeyVaultPropertiesOutput {
	return i.ToEncryptionKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyVaultPropertiesOutput)
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return i.ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionKeyVaultPropertiesArgs) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyVaultPropertiesOutput).ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// EncryptionKeyVaultPropertiesPtrInput is an input type that accepts EncryptionKeyVaultPropertiesArgs, EncryptionKeyVaultPropertiesPtr and EncryptionKeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionKeyVaultPropertiesPtrInput` via:
//
//	        EncryptionKeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionKeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput
	ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Context) EncryptionKeyVaultPropertiesPtrOutput
}

type encryptionKeyVaultPropertiesPtrType EncryptionKeyVaultPropertiesArgs

func EncryptionKeyVaultPropertiesPtr(v *EncryptionKeyVaultPropertiesArgs) EncryptionKeyVaultPropertiesPtrInput {
	return (*encryptionKeyVaultPropertiesPtrType)(v)
}

func (*encryptionKeyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyVaultProperties)(nil)).Elem()
}

func (i *encryptionKeyVaultPropertiesPtrType) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return i.ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionKeyVaultPropertiesPtrType) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyVaultPropertiesPtrOutput)
}

// An Encryption Key
type EncryptionKeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyVaultProperties)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesOutput() EncryptionKeyVaultPropertiesOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return o.ToEncryptionKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyVaultPropertiesOutput) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKeyVaultProperties) *EncryptionKeyVaultProperties {
		return &v
	}).(EncryptionKeyVaultPropertiesPtrOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultProperties) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultProperties) *string { return v.KeyVaultUrl }).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultProperties) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type EncryptionKeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyVaultProperties)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesPtrOutput) ToEncryptionKeyVaultPropertiesPtrOutput() EncryptionKeyVaultPropertiesPtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesPtrOutput) ToEncryptionKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesPtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesPtrOutput) Elem() EncryptionKeyVaultPropertiesOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) EncryptionKeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyVaultProperties
		return ret
	}).(EncryptionKeyVaultPropertiesOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesPtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// An Encryption Key
type EncryptionKeyVaultPropertiesResponse struct {
	// The auto-detected version of the key if versionType is auto-detected.
	AutoDetectedKeyVersion string `pulumi:"autoDetectedKeyVersion"`
	// The name of the key.
	KeyName *string `pulumi:"keyName"`
	// The state of key provided
	KeyState string `pulumi:"keyState"`
	// The URL of the vault.
	KeyVaultUrl *string `pulumi:"keyVaultUrl"`
	// The version of the key.
	KeyVersion *string `pulumi:"keyVersion"`
	// Property of the key if user provided or auto detected
	VersionType string `pulumi:"versionType"`
}

// An Encryption Key
type EncryptionKeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesResponseOutput) ToEncryptionKeyVaultPropertiesResponseOutput() EncryptionKeyVaultPropertiesResponseOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesResponseOutput) ToEncryptionKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesResponseOutput {
	return o
}

// The auto-detected version of the key if versionType is auto-detected.
func (o EncryptionKeyVaultPropertiesResponseOutput) AutoDetectedKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) string { return v.AutoDetectedKeyVersion }).(pulumi.StringOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The state of key provided
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) string { return v.KeyState }).(pulumi.StringOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) *string { return v.KeyVaultUrl }).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesResponseOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

// Property of the key if user provided or auto detected
func (o EncryptionKeyVaultPropertiesResponseOutput) VersionType() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyVaultPropertiesResponse) string { return v.VersionType }).(pulumi.StringOutput)
}

type EncryptionKeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o EncryptionKeyVaultPropertiesResponsePtrOutput) ToEncryptionKeyVaultPropertiesResponsePtrOutput() EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesResponsePtrOutput) ToEncryptionKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionKeyVaultPropertiesResponsePtrOutput) Elem() EncryptionKeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) EncryptionKeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyVaultPropertiesResponse
		return ret
	}).(EncryptionKeyVaultPropertiesResponseOutput)
}

// The auto-detected version of the key if versionType is auto-detected.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) AutoDetectedKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AutoDetectedKeyVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the key.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The state of key provided
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyState
	}).(pulumi.StringPtrOutput)
}

// The URL of the vault.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// The version of the key.
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Property of the key if user provided or auto detected
func (o EncryptionKeyVaultPropertiesResponsePtrOutput) VersionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VersionType
	}).(pulumi.StringPtrOutput)
}

// The properties of customer managed encryption key
type EncryptionResponse struct {
	// The key vault where the encryption key is stored
	KeyVaultProperties *EncryptionKeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Status of customer managed encryption key
	Status *string `pulumi:"status"`
}

// The properties of customer managed encryption key
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

// The key vault where the encryption key is stored
func (o EncryptionResponseOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionKeyVaultPropertiesResponse { return v.KeyVaultProperties }).(EncryptionKeyVaultPropertiesResponsePtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionResponse
		return ret
	}).(EncryptionResponseOutput)
}

// The key vault where the encryption key is stored
func (o EncryptionResponsePtrOutput) KeyVaultProperties() EncryptionKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *EncryptionKeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(EncryptionKeyVaultPropertiesResponsePtrOutput)
}

// Status of customer managed encryption key
func (o EncryptionResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Endpoint addresses
type EndpointsResponse struct {
	// Endpoint FQDN for the HCX Cloud Manager
	HcxCloudManager string `pulumi:"hcxCloudManager"`
	// Endpoint IP for the HCX Cloud Manager
	HcxCloudManagerIp string `pulumi:"hcxCloudManagerIp"`
	// Endpoint FQDN for the NSX-T Data Center manager
	NsxtManager string `pulumi:"nsxtManager"`
	// Endpoint IP for the NSX-T Data Center manager
	NsxtManagerIp string `pulumi:"nsxtManagerIp"`
	// Endpoint IP for Virtual Center Server Appliance
	VcenterIp string `pulumi:"vcenterIp"`
	// Endpoint FQDN for Virtual Center Server Appliance
	Vcsa string `pulumi:"vcsa"`
}

// Endpoint addresses
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

// Endpoint FQDN for the HCX Cloud Manager
func (o EndpointsResponseOutput) HcxCloudManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.HcxCloudManager }).(pulumi.StringOutput)
}

// Endpoint IP for the HCX Cloud Manager
func (o EndpointsResponseOutput) HcxCloudManagerIp() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.HcxCloudManagerIp }).(pulumi.StringOutput)
}

// Endpoint FQDN for the NSX-T Data Center manager
func (o EndpointsResponseOutput) NsxtManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.NsxtManager }).(pulumi.StringOutput)
}

// Endpoint IP for the NSX-T Data Center manager
func (o EndpointsResponseOutput) NsxtManagerIp() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.NsxtManagerIp }).(pulumi.StringOutput)
}

// Endpoint IP for Virtual Center Server Appliance
func (o EndpointsResponseOutput) VcenterIp() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.VcenterIp }).(pulumi.StringOutput)
}

// Endpoint FQDN for Virtual Center Server Appliance
func (o EndpointsResponseOutput) Vcsa() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Vcsa }).(pulumi.StringOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySource struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to
	// Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base
	// DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceInput is an input type that accepts IdentitySourceArgs and IdentitySourceOutput values.
// You can construct a concrete instance of `IdentitySourceInput` via:
//
//	IdentitySourceArgs{...}
type IdentitySourceInput interface {
	pulumi.Input

	ToIdentitySourceOutput() IdentitySourceOutput
	ToIdentitySourceOutputWithContext(context.Context) IdentitySourceOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to
	// Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base
	// DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArgs) ToIdentitySourceOutput() IdentitySourceOutput {
	return i.ToIdentitySourceOutputWithContext(context.Background())
}

func (i IdentitySourceArgs) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOutput)
}

// IdentitySourceArrayInput is an input type that accepts IdentitySourceArray and IdentitySourceArrayOutput values.
// You can construct a concrete instance of `IdentitySourceArrayInput` via:
//
//	IdentitySourceArray{ IdentitySourceArgs{...} }
type IdentitySourceArrayInput interface {
	pulumi.Input

	ToIdentitySourceArrayOutput() IdentitySourceArrayOutput
	ToIdentitySourceArrayOutputWithContext(context.Context) IdentitySourceArrayOutput
}

type IdentitySourceArray []IdentitySourceInput

func (IdentitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return i.ToIdentitySourceArrayOutputWithContext(context.Background())
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceOutput struct{ *pulumi.OutputState }

func (IdentitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (o IdentitySourceOutput) ToIdentitySourceOutput() IdentitySourceOutput {
	return o
}

func (o IdentitySourceOutput) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to
// Base DN for users and groups.
func (o IdentitySourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base
// DN for users and group
func (o IdentitySourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) Index(i pulumi.IntInput) IdentitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySource {
		return vs[0].([]IdentitySource)[vs[1].(int)]
	}).(IdentitySourceOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponse struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to
	// Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base
	// DN for users and group
	Username *string `pulumi:"username"`
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponseOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutput() IdentitySourceResponseOutput {
	return o
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutputWithContext(ctx context.Context) IdentitySourceResponseOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceResponseOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceResponseOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceResponseOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to
// Base DN for users and groups.
func (o IdentitySourceResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceResponseOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceResponseOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceResponseOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base
// DN for users and group
func (o IdentitySourceResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutputWithContext(ctx context.Context) IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) Index(i pulumi.IntInput) IdentitySourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySourceResponse {
		return vs[0].([]IdentitySourceResponse)[vs[1].(int)]
	}).(IdentitySourceResponseOutput)
}

// The properties of a management cluster
type ManagementCluster struct {
	// The cluster size
	ClusterSize *int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
	// Name of the vsan datastore associated with the cluster
	VsanDatastoreName *string `pulumi:"vsanDatastoreName"`
}

// ManagementClusterInput is an input type that accepts ManagementClusterArgs and ManagementClusterOutput values.
// You can construct a concrete instance of `ManagementClusterInput` via:
//
//	ManagementClusterArgs{...}
type ManagementClusterInput interface {
	pulumi.Input

	ToManagementClusterOutput() ManagementClusterOutput
	ToManagementClusterOutputWithContext(context.Context) ManagementClusterOutput
}

// The properties of a management cluster
type ManagementClusterArgs struct {
	// The cluster size
	ClusterSize pulumi.IntPtrInput `pulumi:"clusterSize"`
	// The hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Name of the vsan datastore associated with the cluster
	VsanDatastoreName pulumi.StringPtrInput `pulumi:"vsanDatastoreName"`
}

func (ManagementClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (i ManagementClusterArgs) ToManagementClusterOutput() ManagementClusterOutput {
	return i.ToManagementClusterOutputWithContext(context.Background())
}

func (i ManagementClusterArgs) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterOutput)
}

// The properties of a management cluster
type ManagementClusterOutput struct{ *pulumi.OutputState }

func (ManagementClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (o ManagementClusterOutput) ToManagementClusterOutput() ManagementClusterOutput {
	return o
}

func (o ManagementClusterOutput) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return o
}

// The cluster size
func (o ManagementClusterOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementCluster) *int { return v.ClusterSize }).(pulumi.IntPtrOutput)
}

// The hosts
func (o ManagementClusterOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementCluster) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Name of the vsan datastore associated with the cluster
func (o ManagementClusterOutput) VsanDatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementCluster) *string { return v.VsanDatastoreName }).(pulumi.StringPtrOutput)
}

// The properties of a management cluster
type ManagementClusterResponse struct {
	// The identity
	ClusterId int `pulumi:"clusterId"`
	// The cluster size
	ClusterSize *int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState string `pulumi:"provisioningState"`
	// Name of the vsan datastore associated with the cluster
	VsanDatastoreName *string `pulumi:"vsanDatastoreName"`
}

// The properties of a management cluster
type ManagementClusterResponseOutput struct{ *pulumi.OutputState }

func (ManagementClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterResponse)(nil)).Elem()
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutput() ManagementClusterResponseOutput {
	return o
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutputWithContext(ctx context.Context) ManagementClusterResponseOutput {
	return o
}

// The identity
func (o ManagementClusterResponseOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterId }).(pulumi.IntOutput)
}

// The cluster size
func (o ManagementClusterResponseOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagementClusterResponse) *int { return v.ClusterSize }).(pulumi.IntPtrOutput)
}

// The hosts
func (o ManagementClusterResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementClusterResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ManagementClusterResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementClusterResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Name of the vsan datastore associated with the cluster
func (o ManagementClusterResponseOutput) VsanDatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementClusterResponse) *string { return v.VsanDatastoreName }).(pulumi.StringPtrOutput)
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolume struct {
	// Azure resource ID of the NetApp volume
	Id string `pulumi:"id"`
}

// NetAppVolumeInput is an input type that accepts NetAppVolumeArgs and NetAppVolumeOutput values.
// You can construct a concrete instance of `NetAppVolumeInput` via:
//
//	NetAppVolumeArgs{...}
type NetAppVolumeInput interface {
	pulumi.Input

	ToNetAppVolumeOutput() NetAppVolumeOutput
	ToNetAppVolumeOutputWithContext(context.Context) NetAppVolumeOutput
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeArgs struct {
	// Azure resource ID of the NetApp volume
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetAppVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAppVolume)(nil)).Elem()
}

func (i NetAppVolumeArgs) ToNetAppVolumeOutput() NetAppVolumeOutput {
	return i.ToNetAppVolumeOutputWithContext(context.Background())
}

func (i NetAppVolumeArgs) ToNetAppVolumeOutputWithContext(ctx context.Context) NetAppVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAppVolumeOutput)
}

func (i NetAppVolumeArgs) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return i.ToNetAppVolumePtrOutputWithContext(context.Background())
}

func (i NetAppVolumeArgs) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAppVolumeOutput).ToNetAppVolumePtrOutputWithContext(ctx)
}

// NetAppVolumePtrInput is an input type that accepts NetAppVolumeArgs, NetAppVolumePtr and NetAppVolumePtrOutput values.
// You can construct a concrete instance of `NetAppVolumePtrInput` via:
//
//	        NetAppVolumeArgs{...}
//
//	or:
//
//	        nil
type NetAppVolumePtrInput interface {
	pulumi.Input

	ToNetAppVolumePtrOutput() NetAppVolumePtrOutput
	ToNetAppVolumePtrOutputWithContext(context.Context) NetAppVolumePtrOutput
}

type netAppVolumePtrType NetAppVolumeArgs

func NetAppVolumePtr(v *NetAppVolumeArgs) NetAppVolumePtrInput {
	return (*netAppVolumePtrType)(v)
}

func (*netAppVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAppVolume)(nil)).Elem()
}

func (i *netAppVolumePtrType) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return i.ToNetAppVolumePtrOutputWithContext(context.Background())
}

func (i *netAppVolumePtrType) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetAppVolumePtrOutput)
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeOutput struct{ *pulumi.OutputState }

func (NetAppVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAppVolume)(nil)).Elem()
}

func (o NetAppVolumeOutput) ToNetAppVolumeOutput() NetAppVolumeOutput {
	return o
}

func (o NetAppVolumeOutput) ToNetAppVolumeOutputWithContext(ctx context.Context) NetAppVolumeOutput {
	return o
}

func (o NetAppVolumeOutput) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return o.ToNetAppVolumePtrOutputWithContext(context.Background())
}

func (o NetAppVolumeOutput) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetAppVolume) *NetAppVolume {
		return &v
	}).(NetAppVolumePtrOutput)
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetAppVolume) string { return v.Id }).(pulumi.StringOutput)
}

type NetAppVolumePtrOutput struct{ *pulumi.OutputState }

func (NetAppVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAppVolume)(nil)).Elem()
}

func (o NetAppVolumePtrOutput) ToNetAppVolumePtrOutput() NetAppVolumePtrOutput {
	return o
}

func (o NetAppVolumePtrOutput) ToNetAppVolumePtrOutputWithContext(ctx context.Context) NetAppVolumePtrOutput {
	return o
}

func (o NetAppVolumePtrOutput) Elem() NetAppVolumeOutput {
	return o.ApplyT(func(v *NetAppVolume) NetAppVolume {
		if v != nil {
			return *v
		}
		var ret NetAppVolume
		return ret
	}).(NetAppVolumeOutput)
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAppVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeResponse struct {
	// Azure resource ID of the NetApp volume
	Id string `pulumi:"id"`
}

// An Azure NetApp Files volume from Microsoft.NetApp provider
type NetAppVolumeResponseOutput struct{ *pulumi.OutputState }

func (NetAppVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetAppVolumeResponse)(nil)).Elem()
}

func (o NetAppVolumeResponseOutput) ToNetAppVolumeResponseOutput() NetAppVolumeResponseOutput {
	return o
}

func (o NetAppVolumeResponseOutput) ToNetAppVolumeResponseOutputWithContext(ctx context.Context) NetAppVolumeResponseOutput {
	return o
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetAppVolumeResponse) string { return v.Id }).(pulumi.StringOutput)
}

type NetAppVolumeResponsePtrOutput struct{ *pulumi.OutputState }

func (NetAppVolumeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetAppVolumeResponse)(nil)).Elem()
}

func (o NetAppVolumeResponsePtrOutput) ToNetAppVolumeResponsePtrOutput() NetAppVolumeResponsePtrOutput {
	return o
}

func (o NetAppVolumeResponsePtrOutput) ToNetAppVolumeResponsePtrOutputWithContext(ctx context.Context) NetAppVolumeResponsePtrOutput {
	return o
}

func (o NetAppVolumeResponsePtrOutput) Elem() NetAppVolumeResponseOutput {
	return o.ApplyT(func(v *NetAppVolumeResponse) NetAppVolumeResponse {
		if v != nil {
			return *v
		}
		var ret NetAppVolumeResponse
		return ret
	}).(NetAppVolumeResponseOutput)
}

// Azure resource ID of the NetApp volume
func (o NetAppVolumeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetAppVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// a powershell credential object
type PSCredentialExecutionParameter struct {
	// The parameter name
	Name string `pulumi:"name"`
	// password for login
	Password *string `pulumi:"password"`
	// script execution parameter type
	// Expected value is 'Credential'.
	Type string `pulumi:"type"`
	// username for login
	Username *string `pulumi:"username"`
}

// PSCredentialExecutionParameterInput is an input type that accepts PSCredentialExecutionParameterArgs and PSCredentialExecutionParameterOutput values.
// You can construct a concrete instance of `PSCredentialExecutionParameterInput` via:
//
//	PSCredentialExecutionParameterArgs{...}
type PSCredentialExecutionParameterInput interface {
	pulumi.Input

	ToPSCredentialExecutionParameterOutput() PSCredentialExecutionParameterOutput
	ToPSCredentialExecutionParameterOutputWithContext(context.Context) PSCredentialExecutionParameterOutput
}

// a powershell credential object
type PSCredentialExecutionParameterArgs struct {
	// The parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// password for login
	Password pulumi.StringPtrInput `pulumi:"password"`
	// script execution parameter type
	// Expected value is 'Credential'.
	Type pulumi.StringInput `pulumi:"type"`
	// username for login
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (PSCredentialExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSCredentialExecutionParameter)(nil)).Elem()
}

func (i PSCredentialExecutionParameterArgs) ToPSCredentialExecutionParameterOutput() PSCredentialExecutionParameterOutput {
	return i.ToPSCredentialExecutionParameterOutputWithContext(context.Background())
}

func (i PSCredentialExecutionParameterArgs) ToPSCredentialExecutionParameterOutputWithContext(ctx context.Context) PSCredentialExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSCredentialExecutionParameterOutput)
}

// a powershell credential object
type PSCredentialExecutionParameterOutput struct{ *pulumi.OutputState }

func (PSCredentialExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSCredentialExecutionParameter)(nil)).Elem()
}

func (o PSCredentialExecutionParameterOutput) ToPSCredentialExecutionParameterOutput() PSCredentialExecutionParameterOutput {
	return o
}

func (o PSCredentialExecutionParameterOutput) ToPSCredentialExecutionParameterOutputWithContext(ctx context.Context) PSCredentialExecutionParameterOutput {
	return o
}

// The parameter name
func (o PSCredentialExecutionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// password for login
func (o PSCredentialExecutionParameterOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// script execution parameter type
// Expected value is 'Credential'.
func (o PSCredentialExecutionParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) string { return v.Type }).(pulumi.StringOutput)
}

// username for login
func (o PSCredentialExecutionParameterOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameter) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// a powershell credential object
type PSCredentialExecutionParameterResponse struct {
	// The parameter name
	Name string `pulumi:"name"`
	// password for login
	Password *string `pulumi:"password"`
	// script execution parameter type
	// Expected value is 'Credential'.
	Type string `pulumi:"type"`
	// username for login
	Username *string `pulumi:"username"`
}

// a powershell credential object
type PSCredentialExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (PSCredentialExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSCredentialExecutionParameterResponse)(nil)).Elem()
}

func (o PSCredentialExecutionParameterResponseOutput) ToPSCredentialExecutionParameterResponseOutput() PSCredentialExecutionParameterResponseOutput {
	return o
}

func (o PSCredentialExecutionParameterResponseOutput) ToPSCredentialExecutionParameterResponseOutputWithContext(ctx context.Context) PSCredentialExecutionParameterResponseOutput {
	return o
}

// The parameter name
func (o PSCredentialExecutionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// password for login
func (o PSCredentialExecutionParameterResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// script execution parameter type
// Expected value is 'Credential'.
func (o PSCredentialExecutionParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

// username for login
func (o PSCredentialExecutionParameterResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSCredentialExecutionParameterResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameter struct {
	// The parameter name
	Name string `pulumi:"name"`
	// A secure value for the passed parameter, not to be stored in logs
	SecureValue *string `pulumi:"secureValue"`
	// script execution parameter type
	// Expected value is 'SecureValue'.
	Type string `pulumi:"type"`
}

// ScriptSecureStringExecutionParameterInput is an input type that accepts ScriptSecureStringExecutionParameterArgs and ScriptSecureStringExecutionParameterOutput values.
// You can construct a concrete instance of `ScriptSecureStringExecutionParameterInput` via:
//
//	ScriptSecureStringExecutionParameterArgs{...}
type ScriptSecureStringExecutionParameterInput interface {
	pulumi.Input

	ToScriptSecureStringExecutionParameterOutput() ScriptSecureStringExecutionParameterOutput
	ToScriptSecureStringExecutionParameterOutputWithContext(context.Context) ScriptSecureStringExecutionParameterOutput
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterArgs struct {
	// The parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// A secure value for the passed parameter, not to be stored in logs
	SecureValue pulumi.StringPtrInput `pulumi:"secureValue"`
	// script execution parameter type
	// Expected value is 'SecureValue'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScriptSecureStringExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptSecureStringExecutionParameter)(nil)).Elem()
}

func (i ScriptSecureStringExecutionParameterArgs) ToScriptSecureStringExecutionParameterOutput() ScriptSecureStringExecutionParameterOutput {
	return i.ToScriptSecureStringExecutionParameterOutputWithContext(context.Background())
}

func (i ScriptSecureStringExecutionParameterArgs) ToScriptSecureStringExecutionParameterOutputWithContext(ctx context.Context) ScriptSecureStringExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptSecureStringExecutionParameterOutput)
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterOutput struct{ *pulumi.OutputState }

func (ScriptSecureStringExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptSecureStringExecutionParameter)(nil)).Elem()
}

func (o ScriptSecureStringExecutionParameterOutput) ToScriptSecureStringExecutionParameterOutput() ScriptSecureStringExecutionParameterOutput {
	return o
}

func (o ScriptSecureStringExecutionParameterOutput) ToScriptSecureStringExecutionParameterOutputWithContext(ctx context.Context) ScriptSecureStringExecutionParameterOutput {
	return o
}

// The parameter name
func (o ScriptSecureStringExecutionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// A secure value for the passed parameter, not to be stored in logs
func (o ScriptSecureStringExecutionParameterOutput) SecureValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameter) *string { return v.SecureValue }).(pulumi.StringPtrOutput)
}

// script execution parameter type
// Expected value is 'SecureValue'.
func (o ScriptSecureStringExecutionParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameter) string { return v.Type }).(pulumi.StringOutput)
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterResponse struct {
	// The parameter name
	Name string `pulumi:"name"`
	// A secure value for the passed parameter, not to be stored in logs
	SecureValue *string `pulumi:"secureValue"`
	// script execution parameter type
	// Expected value is 'SecureValue'.
	Type string `pulumi:"type"`
}

// a plain text value execution parameter
type ScriptSecureStringExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (ScriptSecureStringExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptSecureStringExecutionParameterResponse)(nil)).Elem()
}

func (o ScriptSecureStringExecutionParameterResponseOutput) ToScriptSecureStringExecutionParameterResponseOutput() ScriptSecureStringExecutionParameterResponseOutput {
	return o
}

func (o ScriptSecureStringExecutionParameterResponseOutput) ToScriptSecureStringExecutionParameterResponseOutputWithContext(ctx context.Context) ScriptSecureStringExecutionParameterResponseOutput {
	return o
}

// The parameter name
func (o ScriptSecureStringExecutionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A secure value for the passed parameter, not to be stored in logs
func (o ScriptSecureStringExecutionParameterResponseOutput) SecureValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameterResponse) *string { return v.SecureValue }).(pulumi.StringPtrOutput)
}

// script execution parameter type
// Expected value is 'SecureValue'.
func (o ScriptSecureStringExecutionParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptSecureStringExecutionParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

// a plain text value execution parameter
type ScriptStringExecutionParameter struct {
	// The parameter name
	Name string `pulumi:"name"`
	// script execution parameter type
	// Expected value is 'Value'.
	Type string `pulumi:"type"`
	// The value for the passed parameter
	Value *string `pulumi:"value"`
}

// ScriptStringExecutionParameterInput is an input type that accepts ScriptStringExecutionParameterArgs and ScriptStringExecutionParameterOutput values.
// You can construct a concrete instance of `ScriptStringExecutionParameterInput` via:
//
//	ScriptStringExecutionParameterArgs{...}
type ScriptStringExecutionParameterInput interface {
	pulumi.Input

	ToScriptStringExecutionParameterOutput() ScriptStringExecutionParameterOutput
	ToScriptStringExecutionParameterOutputWithContext(context.Context) ScriptStringExecutionParameterOutput
}

// a plain text value execution parameter
type ScriptStringExecutionParameterArgs struct {
	// The parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// script execution parameter type
	// Expected value is 'Value'.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the passed parameter
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScriptStringExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptStringExecutionParameter)(nil)).Elem()
}

func (i ScriptStringExecutionParameterArgs) ToScriptStringExecutionParameterOutput() ScriptStringExecutionParameterOutput {
	return i.ToScriptStringExecutionParameterOutputWithContext(context.Background())
}

func (i ScriptStringExecutionParameterArgs) ToScriptStringExecutionParameterOutputWithContext(ctx context.Context) ScriptStringExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptStringExecutionParameterOutput)
}

// a plain text value execution parameter
type ScriptStringExecutionParameterOutput struct{ *pulumi.OutputState }

func (ScriptStringExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptStringExecutionParameter)(nil)).Elem()
}

func (o ScriptStringExecutionParameterOutput) ToScriptStringExecutionParameterOutput() ScriptStringExecutionParameterOutput {
	return o
}

func (o ScriptStringExecutionParameterOutput) ToScriptStringExecutionParameterOutputWithContext(ctx context.Context) ScriptStringExecutionParameterOutput {
	return o
}

// The parameter name
func (o ScriptStringExecutionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// script execution parameter type
// Expected value is 'Value'.
func (o ScriptStringExecutionParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the passed parameter
func (o ScriptStringExecutionParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// a plain text value execution parameter
type ScriptStringExecutionParameterResponse struct {
	// The parameter name
	Name string `pulumi:"name"`
	// script execution parameter type
	// Expected value is 'Value'.
	Type string `pulumi:"type"`
	// The value for the passed parameter
	Value *string `pulumi:"value"`
}

// a plain text value execution parameter
type ScriptStringExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (ScriptStringExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptStringExecutionParameterResponse)(nil)).Elem()
}

func (o ScriptStringExecutionParameterResponseOutput) ToScriptStringExecutionParameterResponseOutput() ScriptStringExecutionParameterResponseOutput {
	return o
}

func (o ScriptStringExecutionParameterResponseOutput) ToScriptStringExecutionParameterResponseOutputWithContext(ctx context.Context) ScriptStringExecutionParameterResponseOutput {
	return o
}

// The parameter name
func (o ScriptStringExecutionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// script execution parameter type
// Expected value is 'Value'.
func (o ScriptStringExecutionParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the passed parameter
func (o ScriptStringExecutionParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptStringExecutionParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. E.g. P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *SkuTier `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU. E.g. P3. It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier SkuTierPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. E.g. P3. It is typically a letter+number code
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v Sku) *SkuTier { return v.Tier }).(SkuTierPtrOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. E.g. P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. E.g. P3. It is typically a letter+number code
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Managed service identity (either system assigned, or none)
type SystemAssignedServiceIdentity struct {
	// Type of managed service identity (either system assigned, or none).
	Type string `pulumi:"type"`
}

// SystemAssignedServiceIdentityInput is an input type that accepts SystemAssignedServiceIdentityArgs and SystemAssignedServiceIdentityOutput values.
// You can construct a concrete instance of `SystemAssignedServiceIdentityInput` via:
//
//	SystemAssignedServiceIdentityArgs{...}
type SystemAssignedServiceIdentityInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityOutput() SystemAssignedServiceIdentityOutput
	ToSystemAssignedServiceIdentityOutputWithContext(context.Context) SystemAssignedServiceIdentityOutput
}

// Managed service identity (either system assigned, or none)
type SystemAssignedServiceIdentityArgs struct {
	// Type of managed service identity (either system assigned, or none).
	Type pulumi.StringInput `pulumi:"type"`
}

func (SystemAssignedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentity)(nil)).Elem()
}

func (i SystemAssignedServiceIdentityArgs) ToSystemAssignedServiceIdentityOutput() SystemAssignedServiceIdentityOutput {
	return i.ToSystemAssignedServiceIdentityOutputWithContext(context.Background())
}

func (i SystemAssignedServiceIdentityArgs) ToSystemAssignedServiceIdentityOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAssignedServiceIdentityOutput)
}

func (i SystemAssignedServiceIdentityArgs) ToSystemAssignedServiceIdentityPtrOutput() SystemAssignedServiceIdentityPtrOutput {
	return i.ToSystemAssignedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i SystemAssignedServiceIdentityArgs) ToSystemAssignedServiceIdentityPtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAssignedServiceIdentityOutput).ToSystemAssignedServiceIdentityPtrOutputWithContext(ctx)
}

// SystemAssignedServiceIdentityPtrInput is an input type that accepts SystemAssignedServiceIdentityArgs, SystemAssignedServiceIdentityPtr and SystemAssignedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `SystemAssignedServiceIdentityPtrInput` via:
//
//	        SystemAssignedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type SystemAssignedServiceIdentityPtrInput interface {
	pulumi.Input

	ToSystemAssignedServiceIdentityPtrOutput() SystemAssignedServiceIdentityPtrOutput
	ToSystemAssignedServiceIdentityPtrOutputWithContext(context.Context) SystemAssignedServiceIdentityPtrOutput
}

type systemAssignedServiceIdentityPtrType SystemAssignedServiceIdentityArgs

func SystemAssignedServiceIdentityPtr(v *SystemAssignedServiceIdentityArgs) SystemAssignedServiceIdentityPtrInput {
	return (*systemAssignedServiceIdentityPtrType)(v)
}

func (*systemAssignedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAssignedServiceIdentity)(nil)).Elem()
}

func (i *systemAssignedServiceIdentityPtrType) ToSystemAssignedServiceIdentityPtrOutput() SystemAssignedServiceIdentityPtrOutput {
	return i.ToSystemAssignedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *systemAssignedServiceIdentityPtrType) ToSystemAssignedServiceIdentityPtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAssignedServiceIdentityPtrOutput)
}

// Managed service identity (either system assigned, or none)
type SystemAssignedServiceIdentityOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentity)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityOutput) ToSystemAssignedServiceIdentityOutput() SystemAssignedServiceIdentityOutput {
	return o
}

func (o SystemAssignedServiceIdentityOutput) ToSystemAssignedServiceIdentityOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityOutput {
	return o
}

func (o SystemAssignedServiceIdentityOutput) ToSystemAssignedServiceIdentityPtrOutput() SystemAssignedServiceIdentityPtrOutput {
	return o.ToSystemAssignedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o SystemAssignedServiceIdentityOutput) ToSystemAssignedServiceIdentityPtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAssignedServiceIdentity) *SystemAssignedServiceIdentity {
		return &v
	}).(SystemAssignedServiceIdentityPtrOutput)
}

// Type of managed service identity (either system assigned, or none).
func (o SystemAssignedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SystemAssignedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type SystemAssignedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAssignedServiceIdentity)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityPtrOutput) ToSystemAssignedServiceIdentityPtrOutput() SystemAssignedServiceIdentityPtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityPtrOutput) ToSystemAssignedServiceIdentityPtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityPtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityPtrOutput) Elem() SystemAssignedServiceIdentityOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentity) SystemAssignedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret SystemAssignedServiceIdentity
		return ret
	}).(SystemAssignedServiceIdentityOutput)
}

// Type of managed service identity (either system assigned, or none).
func (o SystemAssignedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Managed service identity (either system assigned, or none)
type SystemAssignedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (either system assigned, or none).
	Type string `pulumi:"type"`
}

// Managed service identity (either system assigned, or none)
type SystemAssignedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAssignedServiceIdentityResponse)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityResponseOutput) ToSystemAssignedServiceIdentityResponseOutput() SystemAssignedServiceIdentityResponseOutput {
	return o
}

func (o SystemAssignedServiceIdentityResponseOutput) ToSystemAssignedServiceIdentityResponseOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o SystemAssignedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v SystemAssignedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o SystemAssignedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v SystemAssignedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (either system assigned, or none).
func (o SystemAssignedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SystemAssignedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type SystemAssignedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemAssignedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAssignedServiceIdentityResponse)(nil)).Elem()
}

func (o SystemAssignedServiceIdentityResponsePtrOutput) ToSystemAssignedServiceIdentityResponsePtrOutput() SystemAssignedServiceIdentityResponsePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityResponsePtrOutput) ToSystemAssignedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) SystemAssignedServiceIdentityResponsePtrOutput {
	return o
}

func (o SystemAssignedServiceIdentityResponsePtrOutput) Elem() SystemAssignedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityResponse) SystemAssignedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret SystemAssignedServiceIdentityResponse
		return ret
	}).(SystemAssignedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o SystemAssignedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o SystemAssignedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (either system assigned, or none).
func (o SystemAssignedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAssignedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponse struct {
	// Name of port or VIF attached to segment.
	PortName *string `pulumi:"portName"`
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifResponseOutput) ToWorkloadNetworkSegmentPortVifResponseOutput() WorkloadNetworkSegmentPortVifResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseOutput) ToWorkloadNetworkSegmentPortVifResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseOutput {
	return o
}

// Name of port or VIF attached to segment.
func (o WorkloadNetworkSegmentPortVifResponseOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentPortVifResponse) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentPortVifResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) ToWorkloadNetworkSegmentPortVifResponseArrayOutput() WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) ToWorkloadNetworkSegmentPortVifResponseArrayOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) Index(i pulumi.IntInput) WorkloadNetworkSegmentPortVifResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadNetworkSegmentPortVifResponse {
		return vs[0].([]WorkloadNetworkSegmentPortVifResponse)[vs[1].(int)]
	}).(WorkloadNetworkSegmentPortVifResponseOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnet struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// WorkloadNetworkSegmentSubnetInput is an input type that accepts WorkloadNetworkSegmentSubnetArgs and WorkloadNetworkSegmentSubnetOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetInput` via:
//
//	WorkloadNetworkSegmentSubnetArgs{...}
type WorkloadNetworkSegmentSubnetInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput
	ToWorkloadNetworkSegmentSubnetOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetOutput
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetArgs struct {
	// DHCP Range assigned for subnet.
	DhcpRanges pulumi.StringArrayInput `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress pulumi.StringPtrInput `pulumi:"gatewayAddress"`
}

func (WorkloadNetworkSegmentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput {
	return i.ToWorkloadNetworkSegmentSubnetOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetOutput)
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetOutput).ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx)
}

// WorkloadNetworkSegmentSubnetPtrInput is an input type that accepts WorkloadNetworkSegmentSubnetArgs, WorkloadNetworkSegmentSubnetPtr and WorkloadNetworkSegmentSubnetPtrOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetPtrInput` via:
//
//	        WorkloadNetworkSegmentSubnetArgs{...}
//
//	or:
//
//	        nil
type WorkloadNetworkSegmentSubnetPtrInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput
	ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetPtrOutput
}

type workloadNetworkSegmentSubnetPtrType WorkloadNetworkSegmentSubnetArgs

func WorkloadNetworkSegmentSubnetPtr(v *WorkloadNetworkSegmentSubnetArgs) WorkloadNetworkSegmentSubnetPtrInput {
	return (*workloadNetworkSegmentSubnetPtrType)(v)
}

func (*workloadNetworkSegmentSubnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (i *workloadNetworkSegmentSubnetPtrType) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (i *workloadNetworkSegmentSubnetPtrType) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return o.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadNetworkSegmentSubnet) *WorkloadNetworkSegmentSubnet {
		return &v
	}).(WorkloadNetworkSegmentSubnetPtrOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentSubnetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) Elem() WorkloadNetworkSegmentSubnetOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) WorkloadNetworkSegmentSubnet {
		if v != nil {
			return *v
		}
		var ret WorkloadNetworkSegmentSubnet
		return ret
	}).(WorkloadNetworkSegmentSubnetOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetPtrOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRanges
	}).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetPtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponse struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponseOutput() WorkloadNetworkSegmentSubnetResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponseOutput {
	return o
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetResponseOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetResponseOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentSubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) Elem() WorkloadNetworkSegmentSubnetResponseOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) WorkloadNetworkSegmentSubnetResponse {
		if v != nil {
			return *v
		}
		var ret WorkloadNetworkSegmentSubnetResponse
		return ret
	}).(WorkloadNetworkSegmentSubnetResponseOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRanges
	}).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AvailabilityPropertiesOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CircuitResponseOutput{})
	pulumi.RegisterOutputType(CircuitResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterZoneResponseOutput{})
	pulumi.RegisterOutputType(ClusterZoneResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumeOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumePtrOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumeResponseOutput{})
	pulumi.RegisterOutputType(DiskPoolVolumeResponsePtrOutput{})
	pulumi.RegisterOutputType(ElasticSanVolumeOutput{})
	pulumi.RegisterOutputType(ElasticSanVolumePtrOutput{})
	pulumi.RegisterOutputType(ElasticSanVolumeResponseOutput{})
	pulumi.RegisterOutputType(ElasticSanVolumeResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionKeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceOutput{})
	pulumi.RegisterOutputType(IdentitySourceArrayOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementClusterOutput{})
	pulumi.RegisterOutputType(ManagementClusterResponseOutput{})
	pulumi.RegisterOutputType(NetAppVolumeOutput{})
	pulumi.RegisterOutputType(NetAppVolumePtrOutput{})
	pulumi.RegisterOutputType(NetAppVolumeResponseOutput{})
	pulumi.RegisterOutputType(NetAppVolumeResponsePtrOutput{})
	pulumi.RegisterOutputType(PSCredentialExecutionParameterOutput{})
	pulumi.RegisterOutputType(PSCredentialExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(ScriptSecureStringExecutionParameterOutput{})
	pulumi.RegisterOutputType(ScriptSecureStringExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(ScriptStringExecutionParameterOutput{})
	pulumi.RegisterOutputType(ScriptStringExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(SystemAssignedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetResponsePtrOutput{})
}
