// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The type of private cloud addon
type AddonType string

const (
	AddonTypeSRM = AddonType("SRM")
	AddonTypeVR  = AddonType("VR")
)

func (AddonType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonType)(nil)).Elem()
}

func (e AddonType) ToAddonTypeOutput() AddonTypeOutput {
	return pulumi.ToOutput(e).(AddonTypeOutput)
}

func (e AddonType) ToAddonTypeOutputWithContext(ctx context.Context) AddonTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddonTypeOutput)
}

func (e AddonType) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return e.ToAddonTypePtrOutputWithContext(context.Background())
}

func (e AddonType) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return AddonType(e).ToAddonTypeOutputWithContext(ctx).ToAddonTypePtrOutputWithContext(ctx)
}

func (e AddonType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddonType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddonType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddonType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddonTypeOutput struct{ *pulumi.OutputState }

func (AddonTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonType)(nil)).Elem()
}

func (o AddonTypeOutput) ToAddonTypeOutput() AddonTypeOutput {
	return o
}

func (o AddonTypeOutput) ToAddonTypeOutputWithContext(ctx context.Context) AddonTypeOutput {
	return o
}

func (o AddonTypeOutput) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return o.ToAddonTypePtrOutputWithContext(context.Background())
}

func (o AddonTypeOutput) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddonType) *AddonType {
		return &v
	}).(AddonTypePtrOutput)
}

func (o AddonTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddonTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddonType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddonTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddonTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddonType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddonTypePtrOutput struct{ *pulumi.OutputState }

func (AddonTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddonType)(nil)).Elem()
}

func (o AddonTypePtrOutput) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return o
}

func (o AddonTypePtrOutput) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return o
}

func (o AddonTypePtrOutput) Elem() AddonTypeOutput {
	return o.ApplyT(func(v *AddonType) AddonType {
		if v != nil {
			return *v
		}
		var ret AddonType
		return ret
	}).(AddonTypeOutput)
}

func (o AddonTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddonTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddonType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddonTypeInput is an input type that accepts values of the AddonType enum
// A concrete instance of `AddonTypeInput` can be one of the following:
//
//	AddonTypeSRM
//	AddonTypeVR
type AddonTypeInput interface {
	pulumi.Input

	ToAddonTypeOutput() AddonTypeOutput
	ToAddonTypeOutputWithContext(context.Context) AddonTypeOutput
}

var addonTypePtrType = reflect.TypeOf((**AddonType)(nil)).Elem()

type AddonTypePtrInput interface {
	pulumi.Input

	ToAddonTypePtrOutput() AddonTypePtrOutput
	ToAddonTypePtrOutputWithContext(context.Context) AddonTypePtrOutput
}

type addonTypePtr string

func AddonTypePtr(v string) AddonTypePtrInput {
	return (*addonTypePtr)(&v)
}

func (*addonTypePtr) ElementType() reflect.Type {
	return addonTypePtrType
}

func (in *addonTypePtr) ToAddonTypePtrOutput() AddonTypePtrOutput {
	return pulumi.ToOutput(in).(AddonTypePtrOutput)
}

func (in *addonTypePtr) ToAddonTypePtrOutputWithContext(ctx context.Context) AddonTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddonTypePtrOutput)
}

func (in *addonTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AddonType] {
	return pulumix.Output[*AddonType]{
		OutputState: in.ToAddonTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of DHCP: SERVER or RELAY.
type DhcpTypeEnum string

const (
	DhcpTypeEnum_SERVER_RELAY = DhcpTypeEnum("SERVER, RELAY")
)

func (DhcpTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpTypeEnum)(nil)).Elem()
}

func (e DhcpTypeEnum) ToDhcpTypeEnumOutput() DhcpTypeEnumOutput {
	return pulumi.ToOutput(e).(DhcpTypeEnumOutput)
}

func (e DhcpTypeEnum) ToDhcpTypeEnumOutputWithContext(ctx context.Context) DhcpTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DhcpTypeEnumOutput)
}

func (e DhcpTypeEnum) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return e.ToDhcpTypeEnumPtrOutputWithContext(context.Background())
}

func (e DhcpTypeEnum) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return DhcpTypeEnum(e).ToDhcpTypeEnumOutputWithContext(ctx).ToDhcpTypeEnumPtrOutputWithContext(ctx)
}

func (e DhcpTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DhcpTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DhcpTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DhcpTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DhcpTypeEnumOutput struct{ *pulumi.OutputState }

func (DhcpTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpTypeEnum)(nil)).Elem()
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumOutput() DhcpTypeEnumOutput {
	return o
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumOutputWithContext(ctx context.Context) DhcpTypeEnumOutput {
	return o
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return o.ToDhcpTypeEnumPtrOutputWithContext(context.Background())
}

func (o DhcpTypeEnumOutput) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DhcpTypeEnum) *DhcpTypeEnum {
		return &v
	}).(DhcpTypeEnumPtrOutput)
}

func (o DhcpTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DhcpTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DhcpTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DhcpTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DhcpTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DhcpTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DhcpTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (DhcpTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpTypeEnum)(nil)).Elem()
}

func (o DhcpTypeEnumPtrOutput) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return o
}

func (o DhcpTypeEnumPtrOutput) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return o
}

func (o DhcpTypeEnumPtrOutput) Elem() DhcpTypeEnumOutput {
	return o.ApplyT(func(v *DhcpTypeEnum) DhcpTypeEnum {
		if v != nil {
			return *v
		}
		var ret DhcpTypeEnum
		return ret
	}).(DhcpTypeEnumOutput)
}

func (o DhcpTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DhcpTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DhcpTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DhcpTypeEnumInput is an input type that accepts values of the DhcpTypeEnum enum
// A concrete instance of `DhcpTypeEnumInput` can be one of the following:
//
//	DhcpTypeEnum_SERVER_RELAY
type DhcpTypeEnumInput interface {
	pulumi.Input

	ToDhcpTypeEnumOutput() DhcpTypeEnumOutput
	ToDhcpTypeEnumOutputWithContext(context.Context) DhcpTypeEnumOutput
}

var dhcpTypeEnumPtrType = reflect.TypeOf((**DhcpTypeEnum)(nil)).Elem()

type DhcpTypeEnumPtrInput interface {
	pulumi.Input

	ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput
	ToDhcpTypeEnumPtrOutputWithContext(context.Context) DhcpTypeEnumPtrOutput
}

type dhcpTypeEnumPtr string

func DhcpTypeEnumPtr(v string) DhcpTypeEnumPtrInput {
	return (*dhcpTypeEnumPtr)(&v)
}

func (*dhcpTypeEnumPtr) ElementType() reflect.Type {
	return dhcpTypeEnumPtrType
}

func (in *dhcpTypeEnumPtr) ToDhcpTypeEnumPtrOutput() DhcpTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(DhcpTypeEnumPtrOutput)
}

func (in *dhcpTypeEnumPtr) ToDhcpTypeEnumPtrOutputWithContext(ctx context.Context) DhcpTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DhcpTypeEnumPtrOutput)
}

func (in *dhcpTypeEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*DhcpTypeEnum] {
	return pulumix.Output[*DhcpTypeEnum]{
		OutputState: in.ToDhcpTypeEnumPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AddonTypeOutput{})
	pulumi.RegisterOutputType(AddonTypePtrOutput{})
	pulumi.RegisterOutputType(DhcpTypeEnumOutput{})
	pulumi.RegisterOutputType(DhcpTypeEnumPtrOutput{})
}
