// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package avs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a PureStoragePolicy
//
// Uses Azure REST API version 2024-09-01.
func LookupPureStoragePolicy(ctx *pulumi.Context, args *LookupPureStoragePolicyArgs, opts ...pulumi.InvokeOption) (*LookupPureStoragePolicyResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPureStoragePolicyResult
	err := ctx.Invoke("azure-native:avs:getPureStoragePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPureStoragePolicyArgs struct {
	// Name of the private cloud
	PrivateCloudName string `pulumi:"privateCloudName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the storage policy.
	StoragePolicyName string `pulumi:"storagePolicyName"`
}

// An instance describing a Pure Storage Policy Based Management policy
type LookupPureStoragePolicyResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The state of the Pure Storage Policy Based Management policy provisioning
	ProvisioningState string `pulumi:"provisioningState"`
	// Definition of a Pure Storage Policy Based Management policy
	StoragePolicyDefinition string `pulumi:"storagePolicyDefinition"`
	// Azure resource ID of the Pure Storage Pool associated with the storage policy
	StoragePoolId string `pulumi:"storagePoolId"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupPureStoragePolicyOutput(ctx *pulumi.Context, args LookupPureStoragePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPureStoragePolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPureStoragePolicyResultOutput, error) {
			args := v.(LookupPureStoragePolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:avs:getPureStoragePolicy", args, LookupPureStoragePolicyResultOutput{}, options).(LookupPureStoragePolicyResultOutput), nil
		}).(LookupPureStoragePolicyResultOutput)
}

type LookupPureStoragePolicyOutputArgs struct {
	// Name of the private cloud
	PrivateCloudName pulumi.StringInput `pulumi:"privateCloudName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the storage policy.
	StoragePolicyName pulumi.StringInput `pulumi:"storagePolicyName"`
}

func (LookupPureStoragePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPureStoragePolicyArgs)(nil)).Elem()
}

// An instance describing a Pure Storage Policy Based Management policy
type LookupPureStoragePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPureStoragePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPureStoragePolicyResult)(nil)).Elem()
}

func (o LookupPureStoragePolicyResultOutput) ToLookupPureStoragePolicyResultOutput() LookupPureStoragePolicyResultOutput {
	return o
}

func (o LookupPureStoragePolicyResultOutput) ToLookupPureStoragePolicyResultOutputWithContext(ctx context.Context) LookupPureStoragePolicyResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupPureStoragePolicyResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupPureStoragePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupPureStoragePolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The state of the Pure Storage Policy Based Management policy provisioning
func (o LookupPureStoragePolicyResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Definition of a Pure Storage Policy Based Management policy
func (o LookupPureStoragePolicyResultOutput) StoragePolicyDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.StoragePolicyDefinition }).(pulumi.StringOutput)
}

// Azure resource ID of the Pure Storage Pool associated with the storage policy
func (o LookupPureStoragePolicyResultOutput) StoragePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.StoragePoolId }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupPureStoragePolicyResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPureStoragePolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPureStoragePolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPureStoragePolicyResultOutput{})
}
