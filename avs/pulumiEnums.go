// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package avs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of private cloud addon
type AddonType string

const (
	AddonTypeSRM = AddonType("SRM")
	AddonTypeVR  = AddonType("VR")
	AddonTypeHCX = AddonType("HCX")
	AddonTypeArc = AddonType("Arc")
)

// vm-host placement policy affinity strength (should/must)
type AffinityStrength string

const (
	AffinityStrengthShould = AffinityStrength("Should")
	AffinityStrengthMust   = AffinityStrength("Must")
)

func (AffinityStrength) ElementType() reflect.Type {
	return reflect.TypeOf((*AffinityStrength)(nil)).Elem()
}

func (e AffinityStrength) ToAffinityStrengthOutput() AffinityStrengthOutput {
	return pulumi.ToOutput(e).(AffinityStrengthOutput)
}

func (e AffinityStrength) ToAffinityStrengthOutputWithContext(ctx context.Context) AffinityStrengthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AffinityStrengthOutput)
}

func (e AffinityStrength) ToAffinityStrengthPtrOutput() AffinityStrengthPtrOutput {
	return e.ToAffinityStrengthPtrOutputWithContext(context.Background())
}

func (e AffinityStrength) ToAffinityStrengthPtrOutputWithContext(ctx context.Context) AffinityStrengthPtrOutput {
	return AffinityStrength(e).ToAffinityStrengthOutputWithContext(ctx).ToAffinityStrengthPtrOutputWithContext(ctx)
}

func (e AffinityStrength) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AffinityStrength) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AffinityStrength) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AffinityStrength) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AffinityStrengthOutput struct{ *pulumi.OutputState }

func (AffinityStrengthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AffinityStrength)(nil)).Elem()
}

func (o AffinityStrengthOutput) ToAffinityStrengthOutput() AffinityStrengthOutput {
	return o
}

func (o AffinityStrengthOutput) ToAffinityStrengthOutputWithContext(ctx context.Context) AffinityStrengthOutput {
	return o
}

func (o AffinityStrengthOutput) ToAffinityStrengthPtrOutput() AffinityStrengthPtrOutput {
	return o.ToAffinityStrengthPtrOutputWithContext(context.Background())
}

func (o AffinityStrengthOutput) ToAffinityStrengthPtrOutputWithContext(ctx context.Context) AffinityStrengthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AffinityStrength) *AffinityStrength {
		return &v
	}).(AffinityStrengthPtrOutput)
}

func (o AffinityStrengthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AffinityStrengthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AffinityStrength) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AffinityStrengthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AffinityStrengthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AffinityStrength) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AffinityStrengthPtrOutput struct{ *pulumi.OutputState }

func (AffinityStrengthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AffinityStrength)(nil)).Elem()
}

func (o AffinityStrengthPtrOutput) ToAffinityStrengthPtrOutput() AffinityStrengthPtrOutput {
	return o
}

func (o AffinityStrengthPtrOutput) ToAffinityStrengthPtrOutputWithContext(ctx context.Context) AffinityStrengthPtrOutput {
	return o
}

func (o AffinityStrengthPtrOutput) Elem() AffinityStrengthOutput {
	return o.ApplyT(func(v *AffinityStrength) AffinityStrength {
		if v != nil {
			return *v
		}
		var ret AffinityStrength
		return ret
	}).(AffinityStrengthOutput)
}

func (o AffinityStrengthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AffinityStrengthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AffinityStrength) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AffinityStrengthInput is an input type that accepts values of the AffinityStrength enum
// A concrete instance of `AffinityStrengthInput` can be one of the following:
//
//	AffinityStrengthShould
//	AffinityStrengthMust
type AffinityStrengthInput interface {
	pulumi.Input

	ToAffinityStrengthOutput() AffinityStrengthOutput
	ToAffinityStrengthOutputWithContext(context.Context) AffinityStrengthOutput
}

var affinityStrengthPtrType = reflect.TypeOf((**AffinityStrength)(nil)).Elem()

type AffinityStrengthPtrInput interface {
	pulumi.Input

	ToAffinityStrengthPtrOutput() AffinityStrengthPtrOutput
	ToAffinityStrengthPtrOutputWithContext(context.Context) AffinityStrengthPtrOutput
}

type affinityStrengthPtr string

func AffinityStrengthPtr(v string) AffinityStrengthPtrInput {
	return (*affinityStrengthPtr)(&v)
}

func (*affinityStrengthPtr) ElementType() reflect.Type {
	return affinityStrengthPtrType
}

func (in *affinityStrengthPtr) ToAffinityStrengthPtrOutput() AffinityStrengthPtrOutput {
	return pulumi.ToOutput(in).(AffinityStrengthPtrOutput)
}

func (in *affinityStrengthPtr) ToAffinityStrengthPtrOutputWithContext(ctx context.Context) AffinityStrengthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AffinityStrengthPtrOutput)
}

// placement policy affinity type
type AffinityType string

const (
	AffinityTypeAffinity     = AffinityType("Affinity")
	AffinityTypeAntiAffinity = AffinityType("AntiAffinity")
)

func (AffinityType) ElementType() reflect.Type {
	return reflect.TypeOf((*AffinityType)(nil)).Elem()
}

func (e AffinityType) ToAffinityTypeOutput() AffinityTypeOutput {
	return pulumi.ToOutput(e).(AffinityTypeOutput)
}

func (e AffinityType) ToAffinityTypeOutputWithContext(ctx context.Context) AffinityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AffinityTypeOutput)
}

func (e AffinityType) ToAffinityTypePtrOutput() AffinityTypePtrOutput {
	return e.ToAffinityTypePtrOutputWithContext(context.Background())
}

func (e AffinityType) ToAffinityTypePtrOutputWithContext(ctx context.Context) AffinityTypePtrOutput {
	return AffinityType(e).ToAffinityTypeOutputWithContext(ctx).ToAffinityTypePtrOutputWithContext(ctx)
}

func (e AffinityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AffinityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AffinityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AffinityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AffinityTypeOutput struct{ *pulumi.OutputState }

func (AffinityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AffinityType)(nil)).Elem()
}

func (o AffinityTypeOutput) ToAffinityTypeOutput() AffinityTypeOutput {
	return o
}

func (o AffinityTypeOutput) ToAffinityTypeOutputWithContext(ctx context.Context) AffinityTypeOutput {
	return o
}

func (o AffinityTypeOutput) ToAffinityTypePtrOutput() AffinityTypePtrOutput {
	return o.ToAffinityTypePtrOutputWithContext(context.Background())
}

func (o AffinityTypeOutput) ToAffinityTypePtrOutputWithContext(ctx context.Context) AffinityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AffinityType) *AffinityType {
		return &v
	}).(AffinityTypePtrOutput)
}

func (o AffinityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AffinityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AffinityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AffinityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AffinityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AffinityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AffinityTypePtrOutput struct{ *pulumi.OutputState }

func (AffinityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AffinityType)(nil)).Elem()
}

func (o AffinityTypePtrOutput) ToAffinityTypePtrOutput() AffinityTypePtrOutput {
	return o
}

func (o AffinityTypePtrOutput) ToAffinityTypePtrOutputWithContext(ctx context.Context) AffinityTypePtrOutput {
	return o
}

func (o AffinityTypePtrOutput) Elem() AffinityTypeOutput {
	return o.ApplyT(func(v *AffinityType) AffinityType {
		if v != nil {
			return *v
		}
		var ret AffinityType
		return ret
	}).(AffinityTypeOutput)
}

func (o AffinityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AffinityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AffinityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AffinityTypeInput is an input type that accepts values of the AffinityType enum
// A concrete instance of `AffinityTypeInput` can be one of the following:
//
//	AffinityTypeAffinity
//	AffinityTypeAntiAffinity
type AffinityTypeInput interface {
	pulumi.Input

	ToAffinityTypeOutput() AffinityTypeOutput
	ToAffinityTypeOutputWithContext(context.Context) AffinityTypeOutput
}

var affinityTypePtrType = reflect.TypeOf((**AffinityType)(nil)).Elem()

type AffinityTypePtrInput interface {
	pulumi.Input

	ToAffinityTypePtrOutput() AffinityTypePtrOutput
	ToAffinityTypePtrOutputWithContext(context.Context) AffinityTypePtrOutput
}

type affinityTypePtr string

func AffinityTypePtr(v string) AffinityTypePtrInput {
	return (*affinityTypePtr)(&v)
}

func (*affinityTypePtr) ElementType() reflect.Type {
	return affinityTypePtrType
}

func (in *affinityTypePtr) ToAffinityTypePtrOutput() AffinityTypePtrOutput {
	return pulumi.ToOutput(in).(AffinityTypePtrOutput)
}

func (in *affinityTypePtr) ToAffinityTypePtrOutputWithContext(ctx context.Context) AffinityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AffinityTypePtrOutput)
}

// The availability strategy for the private cloud
type AvailabilityStrategy string

const (
	AvailabilityStrategySingleZone = AvailabilityStrategy("SingleZone")
	AvailabilityStrategyDualZone   = AvailabilityStrategy("DualZone")
)

func (AvailabilityStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityStrategy)(nil)).Elem()
}

func (e AvailabilityStrategy) ToAvailabilityStrategyOutput() AvailabilityStrategyOutput {
	return pulumi.ToOutput(e).(AvailabilityStrategyOutput)
}

func (e AvailabilityStrategy) ToAvailabilityStrategyOutputWithContext(ctx context.Context) AvailabilityStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AvailabilityStrategyOutput)
}

func (e AvailabilityStrategy) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return e.ToAvailabilityStrategyPtrOutputWithContext(context.Background())
}

func (e AvailabilityStrategy) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return AvailabilityStrategy(e).ToAvailabilityStrategyOutputWithContext(ctx).ToAvailabilityStrategyPtrOutputWithContext(ctx)
}

func (e AvailabilityStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvailabilityStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvailabilityStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AvailabilityStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AvailabilityStrategyOutput struct{ *pulumi.OutputState }

func (AvailabilityStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityStrategy)(nil)).Elem()
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyOutput() AvailabilityStrategyOutput {
	return o
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyOutputWithContext(ctx context.Context) AvailabilityStrategyOutput {
	return o
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return o.ToAvailabilityStrategyPtrOutputWithContext(context.Background())
}

func (o AvailabilityStrategyOutput) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityStrategy) *AvailabilityStrategy {
		return &v
	}).(AvailabilityStrategyPtrOutput)
}

func (o AvailabilityStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AvailabilityStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvailabilityStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AvailabilityStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvailabilityStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AvailabilityStrategyPtrOutput struct{ *pulumi.OutputState }

func (AvailabilityStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityStrategy)(nil)).Elem()
}

func (o AvailabilityStrategyPtrOutput) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return o
}

func (o AvailabilityStrategyPtrOutput) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return o
}

func (o AvailabilityStrategyPtrOutput) Elem() AvailabilityStrategyOutput {
	return o.ApplyT(func(v *AvailabilityStrategy) AvailabilityStrategy {
		if v != nil {
			return *v
		}
		var ret AvailabilityStrategy
		return ret
	}).(AvailabilityStrategyOutput)
}

func (o AvailabilityStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AvailabilityStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AvailabilityStrategyInput is an input type that accepts values of the AvailabilityStrategy enum
// A concrete instance of `AvailabilityStrategyInput` can be one of the following:
//
//	AvailabilityStrategySingleZone
//	AvailabilityStrategyDualZone
type AvailabilityStrategyInput interface {
	pulumi.Input

	ToAvailabilityStrategyOutput() AvailabilityStrategyOutput
	ToAvailabilityStrategyOutputWithContext(context.Context) AvailabilityStrategyOutput
}

var availabilityStrategyPtrType = reflect.TypeOf((**AvailabilityStrategy)(nil)).Elem()

type AvailabilityStrategyPtrInput interface {
	pulumi.Input

	ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput
	ToAvailabilityStrategyPtrOutputWithContext(context.Context) AvailabilityStrategyPtrOutput
}

type availabilityStrategyPtr string

func AvailabilityStrategyPtr(v string) AvailabilityStrategyPtrInput {
	return (*availabilityStrategyPtr)(&v)
}

func (*availabilityStrategyPtr) ElementType() reflect.Type {
	return availabilityStrategyPtrType
}

func (in *availabilityStrategyPtr) ToAvailabilityStrategyPtrOutput() AvailabilityStrategyPtrOutput {
	return pulumi.ToOutput(in).(AvailabilityStrategyPtrOutput)
}

func (in *availabilityStrategyPtr) ToAvailabilityStrategyPtrOutputWithContext(ctx context.Context) AvailabilityStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AvailabilityStrategyPtrOutput)
}

// placement policy azure hybrid benefit opt-in type
type AzureHybridBenefitType string

const (
	AzureHybridBenefitTypeSqlHost = AzureHybridBenefitType("SqlHost")
	AzureHybridBenefitTypeNone    = AzureHybridBenefitType("None")
)

func (AzureHybridBenefitType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureHybridBenefitType)(nil)).Elem()
}

func (e AzureHybridBenefitType) ToAzureHybridBenefitTypeOutput() AzureHybridBenefitTypeOutput {
	return pulumi.ToOutput(e).(AzureHybridBenefitTypeOutput)
}

func (e AzureHybridBenefitType) ToAzureHybridBenefitTypeOutputWithContext(ctx context.Context) AzureHybridBenefitTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureHybridBenefitTypeOutput)
}

func (e AzureHybridBenefitType) ToAzureHybridBenefitTypePtrOutput() AzureHybridBenefitTypePtrOutput {
	return e.ToAzureHybridBenefitTypePtrOutputWithContext(context.Background())
}

func (e AzureHybridBenefitType) ToAzureHybridBenefitTypePtrOutputWithContext(ctx context.Context) AzureHybridBenefitTypePtrOutput {
	return AzureHybridBenefitType(e).ToAzureHybridBenefitTypeOutputWithContext(ctx).ToAzureHybridBenefitTypePtrOutputWithContext(ctx)
}

func (e AzureHybridBenefitType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridBenefitType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridBenefitType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureHybridBenefitType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureHybridBenefitTypeOutput struct{ *pulumi.OutputState }

func (AzureHybridBenefitTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureHybridBenefitType)(nil)).Elem()
}

func (o AzureHybridBenefitTypeOutput) ToAzureHybridBenefitTypeOutput() AzureHybridBenefitTypeOutput {
	return o
}

func (o AzureHybridBenefitTypeOutput) ToAzureHybridBenefitTypeOutputWithContext(ctx context.Context) AzureHybridBenefitTypeOutput {
	return o
}

func (o AzureHybridBenefitTypeOutput) ToAzureHybridBenefitTypePtrOutput() AzureHybridBenefitTypePtrOutput {
	return o.ToAzureHybridBenefitTypePtrOutputWithContext(context.Background())
}

func (o AzureHybridBenefitTypeOutput) ToAzureHybridBenefitTypePtrOutputWithContext(ctx context.Context) AzureHybridBenefitTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureHybridBenefitType) *AzureHybridBenefitType {
		return &v
	}).(AzureHybridBenefitTypePtrOutput)
}

func (o AzureHybridBenefitTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureHybridBenefitTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureHybridBenefitType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureHybridBenefitTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureHybridBenefitTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureHybridBenefitType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureHybridBenefitTypePtrOutput struct{ *pulumi.OutputState }

func (AzureHybridBenefitTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureHybridBenefitType)(nil)).Elem()
}

func (o AzureHybridBenefitTypePtrOutput) ToAzureHybridBenefitTypePtrOutput() AzureHybridBenefitTypePtrOutput {
	return o
}

func (o AzureHybridBenefitTypePtrOutput) ToAzureHybridBenefitTypePtrOutputWithContext(ctx context.Context) AzureHybridBenefitTypePtrOutput {
	return o
}

func (o AzureHybridBenefitTypePtrOutput) Elem() AzureHybridBenefitTypeOutput {
	return o.ApplyT(func(v *AzureHybridBenefitType) AzureHybridBenefitType {
		if v != nil {
			return *v
		}
		var ret AzureHybridBenefitType
		return ret
	}).(AzureHybridBenefitTypeOutput)
}

func (o AzureHybridBenefitTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureHybridBenefitTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureHybridBenefitType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureHybridBenefitTypeInput is an input type that accepts values of the AzureHybridBenefitType enum
// A concrete instance of `AzureHybridBenefitTypeInput` can be one of the following:
//
//	AzureHybridBenefitTypeSqlHost
//	AzureHybridBenefitTypeNone
type AzureHybridBenefitTypeInput interface {
	pulumi.Input

	ToAzureHybridBenefitTypeOutput() AzureHybridBenefitTypeOutput
	ToAzureHybridBenefitTypeOutputWithContext(context.Context) AzureHybridBenefitTypeOutput
}

var azureHybridBenefitTypePtrType = reflect.TypeOf((**AzureHybridBenefitType)(nil)).Elem()

type AzureHybridBenefitTypePtrInput interface {
	pulumi.Input

	ToAzureHybridBenefitTypePtrOutput() AzureHybridBenefitTypePtrOutput
	ToAzureHybridBenefitTypePtrOutputWithContext(context.Context) AzureHybridBenefitTypePtrOutput
}

type azureHybridBenefitTypePtr string

func AzureHybridBenefitTypePtr(v string) AzureHybridBenefitTypePtrInput {
	return (*azureHybridBenefitTypePtr)(&v)
}

func (*azureHybridBenefitTypePtr) ElementType() reflect.Type {
	return azureHybridBenefitTypePtrType
}

func (in *azureHybridBenefitTypePtr) ToAzureHybridBenefitTypePtrOutput() AzureHybridBenefitTypePtrOutput {
	return pulumi.ToOutput(in).(AzureHybridBenefitTypePtrOutput)
}

func (in *azureHybridBenefitTypePtr) ToAzureHybridBenefitTypePtrOutputWithContext(ctx context.Context) AzureHybridBenefitTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureHybridBenefitTypePtrOutput)
}

// Type of DHCP: SERVER or RELAY.
type DhcpTypeEnum string

const (
	DhcpTypeEnumSERVER = DhcpTypeEnum("SERVER")
	DhcpTypeEnumRELAY  = DhcpTypeEnum("RELAY")
)

// DNS Service log level.
type DnsServiceLogLevelEnum string

const (
	DnsServiceLogLevelEnumDEBUG   = DnsServiceLogLevelEnum("DEBUG")
	DnsServiceLogLevelEnumINFO    = DnsServiceLogLevelEnum("INFO")
	DnsServiceLogLevelEnumWARNING = DnsServiceLogLevelEnum("WARNING")
	DnsServiceLogLevelEnumERROR   = DnsServiceLogLevelEnum("ERROR")
	DnsServiceLogLevelEnumFATAL   = DnsServiceLogLevelEnum("FATAL")
)

func (DnsServiceLogLevelEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsServiceLogLevelEnum)(nil)).Elem()
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumOutput() DnsServiceLogLevelEnumOutput {
	return pulumi.ToOutput(e).(DnsServiceLogLevelEnumOutput)
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DnsServiceLogLevelEnumOutput)
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return e.ToDnsServiceLogLevelEnumPtrOutputWithContext(context.Background())
}

func (e DnsServiceLogLevelEnum) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return DnsServiceLogLevelEnum(e).ToDnsServiceLogLevelEnumOutputWithContext(ctx).ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx)
}

func (e DnsServiceLogLevelEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DnsServiceLogLevelEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DnsServiceLogLevelEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DnsServiceLogLevelEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DnsServiceLogLevelEnumOutput struct{ *pulumi.OutputState }

func (DnsServiceLogLevelEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsServiceLogLevelEnum)(nil)).Elem()
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumOutput() DnsServiceLogLevelEnumOutput {
	return o
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumOutput {
	return o
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return o.ToDnsServiceLogLevelEnumPtrOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumOutput) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsServiceLogLevelEnum) *DnsServiceLogLevelEnum {
		return &v
	}).(DnsServiceLogLevelEnumPtrOutput)
}

func (o DnsServiceLogLevelEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DnsServiceLogLevelEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DnsServiceLogLevelEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DnsServiceLogLevelEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DnsServiceLogLevelEnumPtrOutput struct{ *pulumi.OutputState }

func (DnsServiceLogLevelEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsServiceLogLevelEnum)(nil)).Elem()
}

func (o DnsServiceLogLevelEnumPtrOutput) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return o
}

func (o DnsServiceLogLevelEnumPtrOutput) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return o
}

func (o DnsServiceLogLevelEnumPtrOutput) Elem() DnsServiceLogLevelEnumOutput {
	return o.ApplyT(func(v *DnsServiceLogLevelEnum) DnsServiceLogLevelEnum {
		if v != nil {
			return *v
		}
		var ret DnsServiceLogLevelEnum
		return ret
	}).(DnsServiceLogLevelEnumOutput)
}

func (o DnsServiceLogLevelEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DnsServiceLogLevelEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DnsServiceLogLevelEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DnsServiceLogLevelEnumInput is an input type that accepts values of the DnsServiceLogLevelEnum enum
// A concrete instance of `DnsServiceLogLevelEnumInput` can be one of the following:
//
//	DnsServiceLogLevelEnumDEBUG
//	DnsServiceLogLevelEnumINFO
//	DnsServiceLogLevelEnumWARNING
//	DnsServiceLogLevelEnumERROR
//	DnsServiceLogLevelEnumFATAL
type DnsServiceLogLevelEnumInput interface {
	pulumi.Input

	ToDnsServiceLogLevelEnumOutput() DnsServiceLogLevelEnumOutput
	ToDnsServiceLogLevelEnumOutputWithContext(context.Context) DnsServiceLogLevelEnumOutput
}

var dnsServiceLogLevelEnumPtrType = reflect.TypeOf((**DnsServiceLogLevelEnum)(nil)).Elem()

type DnsServiceLogLevelEnumPtrInput interface {
	pulumi.Input

	ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput
	ToDnsServiceLogLevelEnumPtrOutputWithContext(context.Context) DnsServiceLogLevelEnumPtrOutput
}

type dnsServiceLogLevelEnumPtr string

func DnsServiceLogLevelEnumPtr(v string) DnsServiceLogLevelEnumPtrInput {
	return (*dnsServiceLogLevelEnumPtr)(&v)
}

func (*dnsServiceLogLevelEnumPtr) ElementType() reflect.Type {
	return dnsServiceLogLevelEnumPtrType
}

func (in *dnsServiceLogLevelEnumPtr) ToDnsServiceLogLevelEnumPtrOutput() DnsServiceLogLevelEnumPtrOutput {
	return pulumi.ToOutput(in).(DnsServiceLogLevelEnumPtrOutput)
}

func (in *dnsServiceLogLevelEnumPtr) ToDnsServiceLogLevelEnumPtrOutputWithContext(ctx context.Context) DnsServiceLogLevelEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DnsServiceLogLevelEnumPtrOutput)
}

// Status of customer managed encryption key
type EncryptionState string

const (
	EncryptionStateEnabled  = EncryptionState("Enabled")
	EncryptionStateDisabled = EncryptionState("Disabled")
)

func (EncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (e EncryptionState) ToEncryptionStateOutput() EncryptionStateOutput {
	return pulumi.ToOutput(e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return e.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return EncryptionState(e).ToEncryptionStateOutputWithContext(ctx).ToEncryptionStatePtrOutputWithContext(ctx)
}

func (e EncryptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStateOutput struct{ *pulumi.OutputState }

func (EncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (o EncryptionStateOutput) ToEncryptionStateOutput() EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionState) *EncryptionState {
		return &v
	}).(EncryptionStatePtrOutput)
}

func (o EncryptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatePtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionState)(nil)).Elem()
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) Elem() EncryptionStateOutput {
	return o.ApplyT(func(v *EncryptionState) EncryptionState {
		if v != nil {
			return *v
		}
		var ret EncryptionState
		return ret
	}).(EncryptionStateOutput)
}

func (o EncryptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStateInput is an input type that accepts values of the EncryptionState enum
// A concrete instance of `EncryptionStateInput` can be one of the following:
//
//	EncryptionStateEnabled
//	EncryptionStateDisabled
type EncryptionStateInput interface {
	pulumi.Input

	ToEncryptionStateOutput() EncryptionStateOutput
	ToEncryptionStateOutputWithContext(context.Context) EncryptionStateOutput
}

var encryptionStatePtrType = reflect.TypeOf((**EncryptionState)(nil)).Elem()

type EncryptionStatePtrInput interface {
	pulumi.Input

	ToEncryptionStatePtrOutput() EncryptionStatePtrOutput
	ToEncryptionStatePtrOutputWithContext(context.Context) EncryptionStatePtrOutput
}

type encryptionStatePtr string

func EncryptionStatePtr(v string) EncryptionStatePtrInput {
	return (*encryptionStatePtr)(&v)
}

func (*encryptionStatePtr) ElementType() reflect.Type {
	return encryptionStatePtrType
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatePtrOutput)
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatePtrOutput)
}

// Connectivity to internet is enabled or disabled
type InternetEnum string

const (
	InternetEnumEnabled  = InternetEnum("Enabled")
	InternetEnumDisabled = InternetEnum("Disabled")
)

func (InternetEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetEnum)(nil)).Elem()
}

func (e InternetEnum) ToInternetEnumOutput() InternetEnumOutput {
	return pulumi.ToOutput(e).(InternetEnumOutput)
}

func (e InternetEnum) ToInternetEnumOutputWithContext(ctx context.Context) InternetEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InternetEnumOutput)
}

func (e InternetEnum) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return e.ToInternetEnumPtrOutputWithContext(context.Background())
}

func (e InternetEnum) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return InternetEnum(e).ToInternetEnumOutputWithContext(ctx).ToInternetEnumPtrOutputWithContext(ctx)
}

func (e InternetEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InternetEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InternetEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InternetEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InternetEnumOutput struct{ *pulumi.OutputState }

func (InternetEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetEnum)(nil)).Elem()
}

func (o InternetEnumOutput) ToInternetEnumOutput() InternetEnumOutput {
	return o
}

func (o InternetEnumOutput) ToInternetEnumOutputWithContext(ctx context.Context) InternetEnumOutput {
	return o
}

func (o InternetEnumOutput) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return o.ToInternetEnumPtrOutputWithContext(context.Background())
}

func (o InternetEnumOutput) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetEnum) *InternetEnum {
		return &v
	}).(InternetEnumPtrOutput)
}

func (o InternetEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InternetEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InternetEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InternetEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InternetEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InternetEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InternetEnumPtrOutput struct{ *pulumi.OutputState }

func (InternetEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetEnum)(nil)).Elem()
}

func (o InternetEnumPtrOutput) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return o
}

func (o InternetEnumPtrOutput) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return o
}

func (o InternetEnumPtrOutput) Elem() InternetEnumOutput {
	return o.ApplyT(func(v *InternetEnum) InternetEnum {
		if v != nil {
			return *v
		}
		var ret InternetEnum
		return ret
	}).(InternetEnumOutput)
}

func (o InternetEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InternetEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InternetEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InternetEnumInput is an input type that accepts values of the InternetEnum enum
// A concrete instance of `InternetEnumInput` can be one of the following:
//
//	InternetEnumEnabled
//	InternetEnumDisabled
type InternetEnumInput interface {
	pulumi.Input

	ToInternetEnumOutput() InternetEnumOutput
	ToInternetEnumOutputWithContext(context.Context) InternetEnumOutput
}

var internetEnumPtrType = reflect.TypeOf((**InternetEnum)(nil)).Elem()

type InternetEnumPtrInput interface {
	pulumi.Input

	ToInternetEnumPtrOutput() InternetEnumPtrOutput
	ToInternetEnumPtrOutputWithContext(context.Context) InternetEnumPtrOutput
}

type internetEnumPtr string

func InternetEnumPtr(v string) InternetEnumPtrInput {
	return (*internetEnumPtr)(&v)
}

func (*internetEnumPtr) ElementType() reflect.Type {
	return internetEnumPtrType
}

func (in *internetEnumPtr) ToInternetEnumPtrOutput() InternetEnumPtrOutput {
	return pulumi.ToOutput(in).(InternetEnumPtrOutput)
}

func (in *internetEnumPtr) ToInternetEnumPtrOutputWithContext(ctx context.Context) InternetEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InternetEnumPtrOutput)
}

// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
type MountOptionEnum string

const (
	MountOptionEnumMOUNT  = MountOptionEnum("MOUNT")
	MountOptionEnumATTACH = MountOptionEnum("ATTACH")
)

func (MountOptionEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*MountOptionEnum)(nil)).Elem()
}

func (e MountOptionEnum) ToMountOptionEnumOutput() MountOptionEnumOutput {
	return pulumi.ToOutput(e).(MountOptionEnumOutput)
}

func (e MountOptionEnum) ToMountOptionEnumOutputWithContext(ctx context.Context) MountOptionEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MountOptionEnumOutput)
}

func (e MountOptionEnum) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return e.ToMountOptionEnumPtrOutputWithContext(context.Background())
}

func (e MountOptionEnum) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return MountOptionEnum(e).ToMountOptionEnumOutputWithContext(ctx).ToMountOptionEnumPtrOutputWithContext(ctx)
}

func (e MountOptionEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MountOptionEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MountOptionEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MountOptionEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MountOptionEnumOutput struct{ *pulumi.OutputState }

func (MountOptionEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountOptionEnum)(nil)).Elem()
}

func (o MountOptionEnumOutput) ToMountOptionEnumOutput() MountOptionEnumOutput {
	return o
}

func (o MountOptionEnumOutput) ToMountOptionEnumOutputWithContext(ctx context.Context) MountOptionEnumOutput {
	return o
}

func (o MountOptionEnumOutput) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return o.ToMountOptionEnumPtrOutputWithContext(context.Background())
}

func (o MountOptionEnumOutput) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MountOptionEnum) *MountOptionEnum {
		return &v
	}).(MountOptionEnumPtrOutput)
}

func (o MountOptionEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MountOptionEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MountOptionEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MountOptionEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MountOptionEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MountOptionEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MountOptionEnumPtrOutput struct{ *pulumi.OutputState }

func (MountOptionEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MountOptionEnum)(nil)).Elem()
}

func (o MountOptionEnumPtrOutput) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return o
}

func (o MountOptionEnumPtrOutput) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return o
}

func (o MountOptionEnumPtrOutput) Elem() MountOptionEnumOutput {
	return o.ApplyT(func(v *MountOptionEnum) MountOptionEnum {
		if v != nil {
			return *v
		}
		var ret MountOptionEnum
		return ret
	}).(MountOptionEnumOutput)
}

func (o MountOptionEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MountOptionEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MountOptionEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MountOptionEnumInput is an input type that accepts values of the MountOptionEnum enum
// A concrete instance of `MountOptionEnumInput` can be one of the following:
//
//	MountOptionEnumMOUNT
//	MountOptionEnumATTACH
type MountOptionEnumInput interface {
	pulumi.Input

	ToMountOptionEnumOutput() MountOptionEnumOutput
	ToMountOptionEnumOutputWithContext(context.Context) MountOptionEnumOutput
}

var mountOptionEnumPtrType = reflect.TypeOf((**MountOptionEnum)(nil)).Elem()

type MountOptionEnumPtrInput interface {
	pulumi.Input

	ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput
	ToMountOptionEnumPtrOutputWithContext(context.Context) MountOptionEnumPtrOutput
}

type mountOptionEnumPtr string

func MountOptionEnumPtr(v string) MountOptionEnumPtrInput {
	return (*mountOptionEnumPtr)(&v)
}

func (*mountOptionEnumPtr) ElementType() reflect.Type {
	return mountOptionEnumPtrType
}

func (in *mountOptionEnumPtr) ToMountOptionEnumPtrOutput() MountOptionEnumPtrOutput {
	return pulumi.ToOutput(in).(MountOptionEnumPtrOutput)
}

func (in *mountOptionEnumPtr) ToMountOptionEnumPtrOutputWithContext(ctx context.Context) MountOptionEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MountOptionEnumPtrOutput)
}

// Whether the placement policy is enabled or disabled
type PlacementPolicyStateEnum string

const (
	PlacementPolicyStateEnumEnabled  = PlacementPolicyStateEnum("Enabled")
	PlacementPolicyStateEnumDisabled = PlacementPolicyStateEnum("Disabled")
)

func (PlacementPolicyStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyStateEnum)(nil)).Elem()
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumOutput() PlacementPolicyStateEnumOutput {
	return pulumi.ToOutput(e).(PlacementPolicyStateEnumOutput)
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumOutputWithContext(ctx context.Context) PlacementPolicyStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlacementPolicyStateEnumOutput)
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return e.ToPlacementPolicyStateEnumPtrOutputWithContext(context.Background())
}

func (e PlacementPolicyStateEnum) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return PlacementPolicyStateEnum(e).ToPlacementPolicyStateEnumOutputWithContext(ctx).ToPlacementPolicyStateEnumPtrOutputWithContext(ctx)
}

func (e PlacementPolicyStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlacementPolicyStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlacementPolicyStateEnumOutput struct{ *pulumi.OutputState }

func (PlacementPolicyStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyStateEnum)(nil)).Elem()
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumOutput() PlacementPolicyStateEnumOutput {
	return o
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumOutputWithContext(ctx context.Context) PlacementPolicyStateEnumOutput {
	return o
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return o.ToPlacementPolicyStateEnumPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumOutput) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlacementPolicyStateEnum) *PlacementPolicyStateEnum {
		return &v
	}).(PlacementPolicyStateEnumPtrOutput)
}

func (o PlacementPolicyStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlacementPolicyStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlacementPolicyStateEnumPtrOutput struct{ *pulumi.OutputState }

func (PlacementPolicyStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementPolicyStateEnum)(nil)).Elem()
}

func (o PlacementPolicyStateEnumPtrOutput) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return o
}

func (o PlacementPolicyStateEnumPtrOutput) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return o
}

func (o PlacementPolicyStateEnumPtrOutput) Elem() PlacementPolicyStateEnumOutput {
	return o.ApplyT(func(v *PlacementPolicyStateEnum) PlacementPolicyStateEnum {
		if v != nil {
			return *v
		}
		var ret PlacementPolicyStateEnum
		return ret
	}).(PlacementPolicyStateEnumOutput)
}

func (o PlacementPolicyStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlacementPolicyStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlacementPolicyStateEnumInput is an input type that accepts values of the PlacementPolicyStateEnum enum
// A concrete instance of `PlacementPolicyStateEnumInput` can be one of the following:
//
//	PlacementPolicyStateEnumEnabled
//	PlacementPolicyStateEnumDisabled
type PlacementPolicyStateEnumInput interface {
	pulumi.Input

	ToPlacementPolicyStateEnumOutput() PlacementPolicyStateEnumOutput
	ToPlacementPolicyStateEnumOutputWithContext(context.Context) PlacementPolicyStateEnumOutput
}

var placementPolicyStateEnumPtrType = reflect.TypeOf((**PlacementPolicyStateEnum)(nil)).Elem()

type PlacementPolicyStateEnumPtrInput interface {
	pulumi.Input

	ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput
	ToPlacementPolicyStateEnumPtrOutputWithContext(context.Context) PlacementPolicyStateEnumPtrOutput
}

type placementPolicyStateEnumPtr string

func PlacementPolicyStateEnumPtr(v string) PlacementPolicyStateEnumPtrInput {
	return (*placementPolicyStateEnumPtr)(&v)
}

func (*placementPolicyStateEnumPtr) ElementType() reflect.Type {
	return placementPolicyStateEnumPtrType
}

func (in *placementPolicyStateEnumPtr) ToPlacementPolicyStateEnumPtrOutput() PlacementPolicyStateEnumPtrOutput {
	return pulumi.ToOutput(in).(PlacementPolicyStateEnumPtrOutput)
}

func (in *placementPolicyStateEnumPtr) ToPlacementPolicyStateEnumPtrOutputWithContext(ctx context.Context) PlacementPolicyStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlacementPolicyStateEnumPtrOutput)
}

// placement policy type
type PlacementPolicyType string

const (
	PlacementPolicyTypeVmVm   = PlacementPolicyType("VmVm")
	PlacementPolicyTypeVmHost = PlacementPolicyType("VmHost")
)

// Direction of port mirroring profile.
type PortMirroringDirectionEnum string

const (
	PortMirroringDirectionEnumINGRESS       = PortMirroringDirectionEnum("INGRESS")
	PortMirroringDirectionEnumEGRESS        = PortMirroringDirectionEnum("EGRESS")
	PortMirroringDirectionEnumBIDIRECTIONAL = PortMirroringDirectionEnum("BIDIRECTIONAL")
)

func (PortMirroringDirectionEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMirroringDirectionEnum)(nil)).Elem()
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumOutput() PortMirroringDirectionEnumOutput {
	return pulumi.ToOutput(e).(PortMirroringDirectionEnumOutput)
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumOutputWithContext(ctx context.Context) PortMirroringDirectionEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PortMirroringDirectionEnumOutput)
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return e.ToPortMirroringDirectionEnumPtrOutputWithContext(context.Background())
}

func (e PortMirroringDirectionEnum) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return PortMirroringDirectionEnum(e).ToPortMirroringDirectionEnumOutputWithContext(ctx).ToPortMirroringDirectionEnumPtrOutputWithContext(ctx)
}

func (e PortMirroringDirectionEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PortMirroringDirectionEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PortMirroringDirectionEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PortMirroringDirectionEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PortMirroringDirectionEnumOutput struct{ *pulumi.OutputState }

func (PortMirroringDirectionEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMirroringDirectionEnum)(nil)).Elem()
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumOutput() PortMirroringDirectionEnumOutput {
	return o
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumOutputWithContext(ctx context.Context) PortMirroringDirectionEnumOutput {
	return o
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return o.ToPortMirroringDirectionEnumPtrOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumOutput) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortMirroringDirectionEnum) *PortMirroringDirectionEnum {
		return &v
	}).(PortMirroringDirectionEnumPtrOutput)
}

func (o PortMirroringDirectionEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PortMirroringDirectionEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PortMirroringDirectionEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PortMirroringDirectionEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PortMirroringDirectionEnumPtrOutput struct{ *pulumi.OutputState }

func (PortMirroringDirectionEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortMirroringDirectionEnum)(nil)).Elem()
}

func (o PortMirroringDirectionEnumPtrOutput) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return o
}

func (o PortMirroringDirectionEnumPtrOutput) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return o
}

func (o PortMirroringDirectionEnumPtrOutput) Elem() PortMirroringDirectionEnumOutput {
	return o.ApplyT(func(v *PortMirroringDirectionEnum) PortMirroringDirectionEnum {
		if v != nil {
			return *v
		}
		var ret PortMirroringDirectionEnum
		return ret
	}).(PortMirroringDirectionEnumOutput)
}

func (o PortMirroringDirectionEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PortMirroringDirectionEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PortMirroringDirectionEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PortMirroringDirectionEnumInput is an input type that accepts values of the PortMirroringDirectionEnum enum
// A concrete instance of `PortMirroringDirectionEnumInput` can be one of the following:
//
//	PortMirroringDirectionEnumINGRESS
//	PortMirroringDirectionEnumEGRESS
//	PortMirroringDirectionEnumBIDIRECTIONAL
type PortMirroringDirectionEnumInput interface {
	pulumi.Input

	ToPortMirroringDirectionEnumOutput() PortMirroringDirectionEnumOutput
	ToPortMirroringDirectionEnumOutputWithContext(context.Context) PortMirroringDirectionEnumOutput
}

var portMirroringDirectionEnumPtrType = reflect.TypeOf((**PortMirroringDirectionEnum)(nil)).Elem()

type PortMirroringDirectionEnumPtrInput interface {
	pulumi.Input

	ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput
	ToPortMirroringDirectionEnumPtrOutputWithContext(context.Context) PortMirroringDirectionEnumPtrOutput
}

type portMirroringDirectionEnumPtr string

func PortMirroringDirectionEnumPtr(v string) PortMirroringDirectionEnumPtrInput {
	return (*portMirroringDirectionEnumPtr)(&v)
}

func (*portMirroringDirectionEnumPtr) ElementType() reflect.Type {
	return portMirroringDirectionEnumPtrType
}

func (in *portMirroringDirectionEnumPtr) ToPortMirroringDirectionEnumPtrOutput() PortMirroringDirectionEnumPtrOutput {
	return pulumi.ToOutput(in).(PortMirroringDirectionEnumPtrOutput)
}

func (in *portMirroringDirectionEnumPtr) ToPortMirroringDirectionEnumPtrOutputWithContext(ctx context.Context) PortMirroringDirectionEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PortMirroringDirectionEnumPtrOutput)
}

// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeNone           = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
//	ResourceIdentityTypeNone
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

// The type of execution parameter
type ScriptExecutionParameterType string

const (
	ScriptExecutionParameterTypeValue       = ScriptExecutionParameterType("Value")
	ScriptExecutionParameterTypeSecureValue = ScriptExecutionParameterType("SecureValue")
	ScriptExecutionParameterTypeCredential  = ScriptExecutionParameterType("Credential")
)

// Protect LDAP communication using SSL certificate (LDAPS)
type SslEnum string

const (
	SslEnumEnabled  = SslEnum("Enabled")
	SslEnumDisabled = SslEnum("Disabled")
)

func (SslEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*SslEnum)(nil)).Elem()
}

func (e SslEnum) ToSslEnumOutput() SslEnumOutput {
	return pulumi.ToOutput(e).(SslEnumOutput)
}

func (e SslEnum) ToSslEnumOutputWithContext(ctx context.Context) SslEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslEnumOutput)
}

func (e SslEnum) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return e.ToSslEnumPtrOutputWithContext(context.Background())
}

func (e SslEnum) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return SslEnum(e).ToSslEnumOutputWithContext(ctx).ToSslEnumPtrOutputWithContext(ctx)
}

func (e SslEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslEnumOutput struct{ *pulumi.OutputState }

func (SslEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslEnum)(nil)).Elem()
}

func (o SslEnumOutput) ToSslEnumOutput() SslEnumOutput {
	return o
}

func (o SslEnumOutput) ToSslEnumOutputWithContext(ctx context.Context) SslEnumOutput {
	return o
}

func (o SslEnumOutput) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return o.ToSslEnumPtrOutputWithContext(context.Background())
}

func (o SslEnumOutput) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslEnum) *SslEnum {
		return &v
	}).(SslEnumPtrOutput)
}

func (o SslEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslEnumPtrOutput struct{ *pulumi.OutputState }

func (SslEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslEnum)(nil)).Elem()
}

func (o SslEnumPtrOutput) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return o
}

func (o SslEnumPtrOutput) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return o
}

func (o SslEnumPtrOutput) Elem() SslEnumOutput {
	return o.ApplyT(func(v *SslEnum) SslEnum {
		if v != nil {
			return *v
		}
		var ret SslEnum
		return ret
	}).(SslEnumOutput)
}

func (o SslEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslEnumInput is an input type that accepts values of the SslEnum enum
// A concrete instance of `SslEnumInput` can be one of the following:
//
//	SslEnumEnabled
//	SslEnumDisabled
type SslEnumInput interface {
	pulumi.Input

	ToSslEnumOutput() SslEnumOutput
	ToSslEnumOutputWithContext(context.Context) SslEnumOutput
}

var sslEnumPtrType = reflect.TypeOf((**SslEnum)(nil)).Elem()

type SslEnumPtrInput interface {
	pulumi.Input

	ToSslEnumPtrOutput() SslEnumPtrOutput
	ToSslEnumPtrOutputWithContext(context.Context) SslEnumPtrOutput
}

type sslEnumPtr string

func SslEnumPtr(v string) SslEnumPtrInput {
	return (*sslEnumPtr)(&v)
}

func (*sslEnumPtr) ElementType() reflect.Type {
	return sslEnumPtrType
}

func (in *sslEnumPtr) ToSslEnumPtrOutput() SslEnumPtrOutput {
	return pulumi.ToOutput(in).(SslEnumPtrOutput)
}

func (in *sslEnumPtr) ToSslEnumPtrOutputWithContext(ctx context.Context) SslEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslEnumPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AffinityStrengthOutput{})
	pulumi.RegisterOutputType(AffinityStrengthPtrOutput{})
	pulumi.RegisterOutputType(AffinityTypeOutput{})
	pulumi.RegisterOutputType(AffinityTypePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityStrategyOutput{})
	pulumi.RegisterOutputType(AvailabilityStrategyPtrOutput{})
	pulumi.RegisterOutputType(AzureHybridBenefitTypeOutput{})
	pulumi.RegisterOutputType(AzureHybridBenefitTypePtrOutput{})
	pulumi.RegisterOutputType(DnsServiceLogLevelEnumOutput{})
	pulumi.RegisterOutputType(DnsServiceLogLevelEnumPtrOutput{})
	pulumi.RegisterOutputType(EncryptionStateOutput{})
	pulumi.RegisterOutputType(EncryptionStatePtrOutput{})
	pulumi.RegisterOutputType(InternetEnumOutput{})
	pulumi.RegisterOutputType(InternetEnumPtrOutput{})
	pulumi.RegisterOutputType(MountOptionEnumOutput{})
	pulumi.RegisterOutputType(MountOptionEnumPtrOutput{})
	pulumi.RegisterOutputType(PlacementPolicyStateEnumOutput{})
	pulumi.RegisterOutputType(PlacementPolicyStateEnumPtrOutput{})
	pulumi.RegisterOutputType(PortMirroringDirectionEnumOutput{})
	pulumi.RegisterOutputType(PortMirroringDirectionEnumPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SslEnumOutput{})
	pulumi.RegisterOutputType(SslEnumPtrOutput{})
}
