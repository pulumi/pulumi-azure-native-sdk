// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Status of the OpenAI Integration
func GetOpenAIStatus(ctx *pulumi.Context, args *GetOpenAIStatusArgs, opts ...pulumi.InvokeOption) (*GetOpenAIStatusResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetOpenAIStatusResult
	err := ctx.Invoke("azure-native:elastic/v20240501preview:getOpenAIStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetOpenAIStatusArgs struct {
	// OpenAI Integration name
	IntegrationName string `pulumi:"integrationName"`
	// Monitor resource name
	MonitorName string `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Status of the OpenAI Integration
type GetOpenAIStatusResult struct {
	// Status of the OpenAI Integration
	Properties OpenAIIntegrationStatusResponsePropertiesResponse `pulumi:"properties"`
}

func GetOpenAIStatusOutput(ctx *pulumi.Context, args GetOpenAIStatusOutputArgs, opts ...pulumi.InvokeOption) GetOpenAIStatusResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOpenAIStatusResult, error) {
			args := v.(GetOpenAIStatusArgs)
			r, err := GetOpenAIStatus(ctx, &args, opts...)
			var s GetOpenAIStatusResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOpenAIStatusResultOutput)
}

type GetOpenAIStatusOutputArgs struct {
	// OpenAI Integration name
	IntegrationName pulumi.StringInput `pulumi:"integrationName"`
	// Monitor resource name
	MonitorName pulumi.StringInput `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetOpenAIStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenAIStatusArgs)(nil)).Elem()
}

// Status of the OpenAI Integration
type GetOpenAIStatusResultOutput struct{ *pulumi.OutputState }

func (GetOpenAIStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenAIStatusResult)(nil)).Elem()
}

func (o GetOpenAIStatusResultOutput) ToGetOpenAIStatusResultOutput() GetOpenAIStatusResultOutput {
	return o
}

func (o GetOpenAIStatusResultOutput) ToGetOpenAIStatusResultOutputWithContext(ctx context.Context) GetOpenAIStatusResultOutput {
	return o
}

// Status of the OpenAI Integration
func (o GetOpenAIStatusResultOutput) Properties() OpenAIIntegrationStatusResponsePropertiesResponseOutput {
	return o.ApplyT(func(v GetOpenAIStatusResult) OpenAIIntegrationStatusResponsePropertiesResponse { return v.Properties }).(OpenAIIntegrationStatusResponsePropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpenAIStatusResultOutput{})
}
