// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220701preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Elastic traffic filter object
type ElasticTrafficFilterResponse struct {
	// Description of the elastic filter
	Description *string `pulumi:"description"`
	// Id of the elastic filter
	Id *string `pulumi:"id"`
	// IncludeByDefault for the elastic filter
	IncludeByDefault *bool `pulumi:"includeByDefault"`
	// Name of the elastic filter
	Name *string `pulumi:"name"`
	// Region of the elastic filter
	Region *string `pulumi:"region"`
	// Rules in the elastic filter
	Rules []ElasticTrafficFilterRuleResponse `pulumi:"rules"`
	// Type of the elastic filter
	Type *string `pulumi:"type"`
}

// Elastic traffic filter object
type ElasticTrafficFilterResponseOutput struct{ *pulumi.OutputState }

func (ElasticTrafficFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticTrafficFilterResponse)(nil)).Elem()
}

func (o ElasticTrafficFilterResponseOutput) ToElasticTrafficFilterResponseOutput() ElasticTrafficFilterResponseOutput {
	return o
}

func (o ElasticTrafficFilterResponseOutput) ToElasticTrafficFilterResponseOutputWithContext(ctx context.Context) ElasticTrafficFilterResponseOutput {
	return o
}

// Description of the elastic filter
func (o ElasticTrafficFilterResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Id of the elastic filter
func (o ElasticTrafficFilterResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IncludeByDefault for the elastic filter
func (o ElasticTrafficFilterResponseOutput) IncludeByDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) *bool { return v.IncludeByDefault }).(pulumi.BoolPtrOutput)
}

// Name of the elastic filter
func (o ElasticTrafficFilterResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Region of the elastic filter
func (o ElasticTrafficFilterResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Rules in the elastic filter
func (o ElasticTrafficFilterResponseOutput) Rules() ElasticTrafficFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) []ElasticTrafficFilterRuleResponse { return v.Rules }).(ElasticTrafficFilterRuleResponseArrayOutput)
}

// Type of the elastic filter
func (o ElasticTrafficFilterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ElasticTrafficFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (ElasticTrafficFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticTrafficFilterResponse)(nil)).Elem()
}

func (o ElasticTrafficFilterResponseArrayOutput) ToElasticTrafficFilterResponseArrayOutput() ElasticTrafficFilterResponseArrayOutput {
	return o
}

func (o ElasticTrafficFilterResponseArrayOutput) ToElasticTrafficFilterResponseArrayOutputWithContext(ctx context.Context) ElasticTrafficFilterResponseArrayOutput {
	return o
}

func (o ElasticTrafficFilterResponseArrayOutput) Index(i pulumi.IntInput) ElasticTrafficFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticTrafficFilterResponse {
		return vs[0].([]ElasticTrafficFilterResponse)[vs[1].(int)]
	}).(ElasticTrafficFilterResponseOutput)
}

// Elastic traffic filter rule object
type ElasticTrafficFilterRuleResponse struct {
	// Guid of Private Endpoint in the elastic filter rule
	AzureEndpointGuid *string `pulumi:"azureEndpointGuid"`
	// Name of the Private Endpoint in the elastic filter rule
	AzureEndpointName *string `pulumi:"azureEndpointName"`
	// Description of the elastic filter rule
	Description *string `pulumi:"description"`
	// Id of the elastic filter rule
	Id *string `pulumi:"id"`
	// IP of the elastic filter rule
	Source *string `pulumi:"source"`
}

// Elastic traffic filter rule object
type ElasticTrafficFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (ElasticTrafficFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticTrafficFilterRuleResponse)(nil)).Elem()
}

func (o ElasticTrafficFilterRuleResponseOutput) ToElasticTrafficFilterRuleResponseOutput() ElasticTrafficFilterRuleResponseOutput {
	return o
}

func (o ElasticTrafficFilterRuleResponseOutput) ToElasticTrafficFilterRuleResponseOutputWithContext(ctx context.Context) ElasticTrafficFilterRuleResponseOutput {
	return o
}

// Guid of Private Endpoint in the elastic filter rule
func (o ElasticTrafficFilterRuleResponseOutput) AzureEndpointGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterRuleResponse) *string { return v.AzureEndpointGuid }).(pulumi.StringPtrOutput)
}

// Name of the Private Endpoint in the elastic filter rule
func (o ElasticTrafficFilterRuleResponseOutput) AzureEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterRuleResponse) *string { return v.AzureEndpointName }).(pulumi.StringPtrOutput)
}

// Description of the elastic filter rule
func (o ElasticTrafficFilterRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Id of the elastic filter rule
func (o ElasticTrafficFilterRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP of the elastic filter rule
func (o ElasticTrafficFilterRuleResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticTrafficFilterRuleResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type ElasticTrafficFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ElasticTrafficFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticTrafficFilterRuleResponse)(nil)).Elem()
}

func (o ElasticTrafficFilterRuleResponseArrayOutput) ToElasticTrafficFilterRuleResponseArrayOutput() ElasticTrafficFilterRuleResponseArrayOutput {
	return o
}

func (o ElasticTrafficFilterRuleResponseArrayOutput) ToElasticTrafficFilterRuleResponseArrayOutputWithContext(ctx context.Context) ElasticTrafficFilterRuleResponseArrayOutput {
	return o
}

func (o ElasticTrafficFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) ElasticTrafficFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticTrafficFilterRuleResponse {
		return vs[0].([]ElasticTrafficFilterRuleResponse)[vs[1].(int)]
	}).(ElasticTrafficFilterRuleResponseOutput)
}

// The properties of a resource currently being monitored by the Elastic monitor resource.
type MonitoredResourceResponse struct {
	// The ARM id of the resource.
	Id *string `pulumi:"id"`
	// Reason for why the resource is sending logs (or why it is not sending).
	ReasonForLogsStatus *string `pulumi:"reasonForLogsStatus"`
	// Flag indicating the status of the resource for sending logs operation to Elastic.
	SendingLogs *string `pulumi:"sendingLogs"`
}

// The properties of a resource currently being monitored by the Elastic monitor resource.
type MonitoredResourceResponseOutput struct{ *pulumi.OutputState }

func (MonitoredResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredResourceResponse)(nil)).Elem()
}

func (o MonitoredResourceResponseOutput) ToMonitoredResourceResponseOutput() MonitoredResourceResponseOutput {
	return o
}

func (o MonitoredResourceResponseOutput) ToMonitoredResourceResponseOutputWithContext(ctx context.Context) MonitoredResourceResponseOutput {
	return o
}

// The ARM id of the resource.
func (o MonitoredResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Reason for why the resource is sending logs (or why it is not sending).
func (o MonitoredResourceResponseOutput) ReasonForLogsStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredResourceResponse) *string { return v.ReasonForLogsStatus }).(pulumi.StringPtrOutput)
}

// Flag indicating the status of the resource for sending logs operation to Elastic.
func (o MonitoredResourceResponseOutput) SendingLogs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredResourceResponse) *string { return v.SendingLogs }).(pulumi.StringPtrOutput)
}

type MonitoredResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (MonitoredResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredResourceResponse)(nil)).Elem()
}

func (o MonitoredResourceResponseArrayOutput) ToMonitoredResourceResponseArrayOutput() MonitoredResourceResponseArrayOutput {
	return o
}

func (o MonitoredResourceResponseArrayOutput) ToMonitoredResourceResponseArrayOutputWithContext(ctx context.Context) MonitoredResourceResponseArrayOutput {
	return o
}

func (o MonitoredResourceResponseArrayOutput) Index(i pulumi.IntInput) MonitoredResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredResourceResponse {
		return vs[0].([]MonitoredResourceResponse)[vs[1].(int)]
	}).(MonitoredResourceResponseOutput)
}

// The vm resource properties that is currently being monitored by the Elastic monitor resource.
type VMResourcesResponse struct {
	// The ARM id of the VM resource.
	VmResourceId *string `pulumi:"vmResourceId"`
}

// The vm resource properties that is currently being monitored by the Elastic monitor resource.
type VMResourcesResponseOutput struct{ *pulumi.OutputState }

func (VMResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMResourcesResponse)(nil)).Elem()
}

func (o VMResourcesResponseOutput) ToVMResourcesResponseOutput() VMResourcesResponseOutput {
	return o
}

func (o VMResourcesResponseOutput) ToVMResourcesResponseOutputWithContext(ctx context.Context) VMResourcesResponseOutput {
	return o
}

// The ARM id of the VM resource.
func (o VMResourcesResponseOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResourcesResponse) *string { return v.VmResourceId }).(pulumi.StringPtrOutput)
}

type VMResourcesResponseArrayOutput struct{ *pulumi.OutputState }

func (VMResourcesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMResourcesResponse)(nil)).Elem()
}

func (o VMResourcesResponseArrayOutput) ToVMResourcesResponseArrayOutput() VMResourcesResponseArrayOutput {
	return o
}

func (o VMResourcesResponseArrayOutput) ToVMResourcesResponseArrayOutputWithContext(ctx context.Context) VMResourcesResponseArrayOutput {
	return o
}

func (o VMResourcesResponseArrayOutput) Index(i pulumi.IntInput) VMResourcesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMResourcesResponse {
		return vs[0].([]VMResourcesResponse)[vs[1].(int)]
	}).(VMResourcesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticTrafficFilterResponseOutput{})
	pulumi.RegisterOutputType(ElasticTrafficFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(ElasticTrafficFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(ElasticTrafficFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(MonitoredResourceResponseOutput{})
	pulumi.RegisterOutputType(MonitoredResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(VMResourcesResponseOutput{})
	pulumi.RegisterOutputType(VMResourcesResponseArrayOutput{})
}
