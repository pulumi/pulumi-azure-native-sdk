// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elastic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource.
//
// Uses Azure REST API version 2024-03-01.
//
// Other available API versions: 2023-06-01, 2023-06-15-preview, 2023-07-01-preview, 2023-10-01-preview, 2023-11-01-preview, 2024-01-01-preview, 2024-05-01-preview, 2024-06-15-preview, 2024-10-01-preview, 2025-01-15-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native elastic [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListDeploymentInfo(ctx *pulumi.Context, args *ListDeploymentInfoArgs, opts ...pulumi.InvokeOption) (*ListDeploymentInfoResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListDeploymentInfoResult
	err := ctx.Invoke("azure-native:elastic:listDeploymentInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDeploymentInfoArgs struct {
	// Monitor resource name
	MonitorName string `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource.
type ListDeploymentInfoResult struct {
	// Deployment URL of the elasticsearch in Elastic cloud deployment.
	DeploymentUrl string `pulumi:"deploymentUrl"`
	// Disk capacity of the elasticsearch in Elastic cloud deployment.
	DiskCapacity string `pulumi:"diskCapacity"`
	// Elasticsearch endpoint in Elastic cloud deployment. This is either the aliased_endpoint if available, or the service_url otherwise.
	ElasticsearchEndPoint string `pulumi:"elasticsearchEndPoint"`
	// Marketplace SaaS Info of the resource.
	MarketplaceSaasInfo MarketplaceSaaSInfoResponse `pulumi:"marketplaceSaasInfo"`
	// RAM capacity of the elasticsearch in Elastic cloud deployment.
	MemoryCapacity string `pulumi:"memoryCapacity"`
	// The Elastic deployment status.
	Status string `pulumi:"status"`
	// Version of the elasticsearch in Elastic cloud deployment.
	Version string `pulumi:"version"`
}

func ListDeploymentInfoOutput(ctx *pulumi.Context, args ListDeploymentInfoOutputArgs, opts ...pulumi.InvokeOption) ListDeploymentInfoResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListDeploymentInfoResultOutput, error) {
			args := v.(ListDeploymentInfoArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:elastic:listDeploymentInfo", args, ListDeploymentInfoResultOutput{}, options).(ListDeploymentInfoResultOutput), nil
		}).(ListDeploymentInfoResultOutput)
}

type ListDeploymentInfoOutputArgs struct {
	// Monitor resource name
	MonitorName pulumi.StringInput `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListDeploymentInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDeploymentInfoArgs)(nil)).Elem()
}

// The properties of deployment in Elastic cloud corresponding to the Elastic monitor resource.
type ListDeploymentInfoResultOutput struct{ *pulumi.OutputState }

func (ListDeploymentInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDeploymentInfoResult)(nil)).Elem()
}

func (o ListDeploymentInfoResultOutput) ToListDeploymentInfoResultOutput() ListDeploymentInfoResultOutput {
	return o
}

func (o ListDeploymentInfoResultOutput) ToListDeploymentInfoResultOutputWithContext(ctx context.Context) ListDeploymentInfoResultOutput {
	return o
}

// Deployment URL of the elasticsearch in Elastic cloud deployment.
func (o ListDeploymentInfoResultOutput) DeploymentUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) string { return v.DeploymentUrl }).(pulumi.StringOutput)
}

// Disk capacity of the elasticsearch in Elastic cloud deployment.
func (o ListDeploymentInfoResultOutput) DiskCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) string { return v.DiskCapacity }).(pulumi.StringOutput)
}

// Elasticsearch endpoint in Elastic cloud deployment. This is either the aliased_endpoint if available, or the service_url otherwise.
func (o ListDeploymentInfoResultOutput) ElasticsearchEndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) string { return v.ElasticsearchEndPoint }).(pulumi.StringOutput)
}

// Marketplace SaaS Info of the resource.
func (o ListDeploymentInfoResultOutput) MarketplaceSaasInfo() MarketplaceSaaSInfoResponseOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) MarketplaceSaaSInfoResponse { return v.MarketplaceSaasInfo }).(MarketplaceSaaSInfoResponseOutput)
}

// RAM capacity of the elasticsearch in Elastic cloud deployment.
func (o ListDeploymentInfoResultOutput) MemoryCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) string { return v.MemoryCapacity }).(pulumi.StringOutput)
}

// The Elastic deployment status.
func (o ListDeploymentInfoResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) string { return v.Status }).(pulumi.StringOutput)
}

// Version of the elasticsearch in Elastic cloud deployment.
func (o ListDeploymentInfoResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ListDeploymentInfoResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDeploymentInfoResultOutput{})
}
