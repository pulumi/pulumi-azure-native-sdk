// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.
type ConsistencyModeTypes string

const (
	ConsistencyModeTypesCrashConsistent       = ConsistencyModeTypes("CrashConsistent")
	ConsistencyModeTypesFileSystemConsistent  = ConsistencyModeTypes("FileSystemConsistent")
	ConsistencyModeTypesApplicationConsistent = ConsistencyModeTypes("ApplicationConsistent")
)

func (ConsistencyModeTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyModeTypes)(nil)).Elem()
}

func (e ConsistencyModeTypes) ToConsistencyModeTypesOutput() ConsistencyModeTypesOutput {
	return pulumi.ToOutput(e).(ConsistencyModeTypesOutput)
}

func (e ConsistencyModeTypes) ToConsistencyModeTypesOutputWithContext(ctx context.Context) ConsistencyModeTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConsistencyModeTypesOutput)
}

func (e ConsistencyModeTypes) ToConsistencyModeTypesPtrOutput() ConsistencyModeTypesPtrOutput {
	return e.ToConsistencyModeTypesPtrOutputWithContext(context.Background())
}

func (e ConsistencyModeTypes) ToConsistencyModeTypesPtrOutputWithContext(ctx context.Context) ConsistencyModeTypesPtrOutput {
	return ConsistencyModeTypes(e).ToConsistencyModeTypesOutputWithContext(ctx).ToConsistencyModeTypesPtrOutputWithContext(ctx)
}

func (e ConsistencyModeTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConsistencyModeTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConsistencyModeTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConsistencyModeTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConsistencyModeTypesOutput struct{ *pulumi.OutputState }

func (ConsistencyModeTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyModeTypes)(nil)).Elem()
}

func (o ConsistencyModeTypesOutput) ToConsistencyModeTypesOutput() ConsistencyModeTypesOutput {
	return o
}

func (o ConsistencyModeTypesOutput) ToConsistencyModeTypesOutputWithContext(ctx context.Context) ConsistencyModeTypesOutput {
	return o
}

func (o ConsistencyModeTypesOutput) ToConsistencyModeTypesPtrOutput() ConsistencyModeTypesPtrOutput {
	return o.ToConsistencyModeTypesPtrOutputWithContext(context.Background())
}

func (o ConsistencyModeTypesOutput) ToConsistencyModeTypesPtrOutputWithContext(ctx context.Context) ConsistencyModeTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConsistencyModeTypes) *ConsistencyModeTypes {
		return &v
	}).(ConsistencyModeTypesPtrOutput)
}

func (o ConsistencyModeTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConsistencyModeTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConsistencyModeTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConsistencyModeTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConsistencyModeTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConsistencyModeTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConsistencyModeTypesPtrOutput struct{ *pulumi.OutputState }

func (ConsistencyModeTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyModeTypes)(nil)).Elem()
}

func (o ConsistencyModeTypesPtrOutput) ToConsistencyModeTypesPtrOutput() ConsistencyModeTypesPtrOutput {
	return o
}

func (o ConsistencyModeTypesPtrOutput) ToConsistencyModeTypesPtrOutputWithContext(ctx context.Context) ConsistencyModeTypesPtrOutput {
	return o
}

func (o ConsistencyModeTypesPtrOutput) Elem() ConsistencyModeTypesOutput {
	return o.ApplyT(func(v *ConsistencyModeTypes) ConsistencyModeTypes {
		if v != nil {
			return *v
		}
		var ret ConsistencyModeTypes
		return ret
	}).(ConsistencyModeTypesOutput)
}

func (o ConsistencyModeTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConsistencyModeTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConsistencyModeTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConsistencyModeTypesInput is an input type that accepts values of the ConsistencyModeTypes enum
// A concrete instance of `ConsistencyModeTypesInput` can be one of the following:
//
//	ConsistencyModeTypesCrashConsistent
//	ConsistencyModeTypesFileSystemConsistent
//	ConsistencyModeTypesApplicationConsistent
type ConsistencyModeTypesInput interface {
	pulumi.Input

	ToConsistencyModeTypesOutput() ConsistencyModeTypesOutput
	ToConsistencyModeTypesOutputWithContext(context.Context) ConsistencyModeTypesOutput
}

var consistencyModeTypesPtrType = reflect.TypeOf((**ConsistencyModeTypes)(nil)).Elem()

type ConsistencyModeTypesPtrInput interface {
	pulumi.Input

	ToConsistencyModeTypesPtrOutput() ConsistencyModeTypesPtrOutput
	ToConsistencyModeTypesPtrOutputWithContext(context.Context) ConsistencyModeTypesPtrOutput
}

type consistencyModeTypesPtr string

func ConsistencyModeTypesPtr(v string) ConsistencyModeTypesPtrInput {
	return (*consistencyModeTypesPtr)(&v)
}

func (*consistencyModeTypesPtr) ElementType() reflect.Type {
	return consistencyModeTypesPtrType
}

func (in *consistencyModeTypesPtr) ToConsistencyModeTypesPtrOutput() ConsistencyModeTypesPtrOutput {
	return pulumi.ToOutput(in).(ConsistencyModeTypesPtrOutput)
}

func (in *consistencyModeTypesPtr) ToConsistencyModeTypesPtrOutputWithContext(ctx context.Context) ConsistencyModeTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConsistencyModeTypesPtrOutput)
}

func (in *consistencyModeTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*ConsistencyModeTypes] {
	return pulumix.Output[*ConsistencyModeTypes]{
		OutputState: in.ToConsistencyModeTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// Interval value in minutes used to create LogAnalytics call rate logs.
type IntervalInMins string

const (
	IntervalInMinsThreeMins  = IntervalInMins("ThreeMins")
	IntervalInMinsFiveMins   = IntervalInMins("FiveMins")
	IntervalInMinsThirtyMins = IntervalInMins("ThirtyMins")
	IntervalInMinsSixtyMins  = IntervalInMins("SixtyMins")
)

func (IntervalInMins) ElementType() reflect.Type {
	return reflect.TypeOf((*IntervalInMins)(nil)).Elem()
}

func (e IntervalInMins) ToIntervalInMinsOutput() IntervalInMinsOutput {
	return pulumi.ToOutput(e).(IntervalInMinsOutput)
}

func (e IntervalInMins) ToIntervalInMinsOutputWithContext(ctx context.Context) IntervalInMinsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntervalInMinsOutput)
}

func (e IntervalInMins) ToIntervalInMinsPtrOutput() IntervalInMinsPtrOutput {
	return e.ToIntervalInMinsPtrOutputWithContext(context.Background())
}

func (e IntervalInMins) ToIntervalInMinsPtrOutputWithContext(ctx context.Context) IntervalInMinsPtrOutput {
	return IntervalInMins(e).ToIntervalInMinsOutputWithContext(ctx).ToIntervalInMinsPtrOutputWithContext(ctx)
}

func (e IntervalInMins) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntervalInMins) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntervalInMins) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntervalInMins) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntervalInMinsOutput struct{ *pulumi.OutputState }

func (IntervalInMinsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntervalInMins)(nil)).Elem()
}

func (o IntervalInMinsOutput) ToIntervalInMinsOutput() IntervalInMinsOutput {
	return o
}

func (o IntervalInMinsOutput) ToIntervalInMinsOutputWithContext(ctx context.Context) IntervalInMinsOutput {
	return o
}

func (o IntervalInMinsOutput) ToIntervalInMinsPtrOutput() IntervalInMinsPtrOutput {
	return o.ToIntervalInMinsPtrOutputWithContext(context.Background())
}

func (o IntervalInMinsOutput) ToIntervalInMinsPtrOutputWithContext(ctx context.Context) IntervalInMinsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntervalInMins) *IntervalInMins {
		return &v
	}).(IntervalInMinsPtrOutput)
}

func (o IntervalInMinsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntervalInMinsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntervalInMins) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntervalInMinsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntervalInMinsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntervalInMins) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntervalInMinsPtrOutput struct{ *pulumi.OutputState }

func (IntervalInMinsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntervalInMins)(nil)).Elem()
}

func (o IntervalInMinsPtrOutput) ToIntervalInMinsPtrOutput() IntervalInMinsPtrOutput {
	return o
}

func (o IntervalInMinsPtrOutput) ToIntervalInMinsPtrOutputWithContext(ctx context.Context) IntervalInMinsPtrOutput {
	return o
}

func (o IntervalInMinsPtrOutput) Elem() IntervalInMinsOutput {
	return o.ApplyT(func(v *IntervalInMins) IntervalInMins {
		if v != nil {
			return *v
		}
		var ret IntervalInMins
		return ret
	}).(IntervalInMinsOutput)
}

func (o IntervalInMinsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntervalInMinsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntervalInMins) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntervalInMinsInput is an input type that accepts values of the IntervalInMins enum
// A concrete instance of `IntervalInMinsInput` can be one of the following:
//
//	IntervalInMinsThreeMins
//	IntervalInMinsFiveMins
//	IntervalInMinsThirtyMins
//	IntervalInMinsSixtyMins
type IntervalInMinsInput interface {
	pulumi.Input

	ToIntervalInMinsOutput() IntervalInMinsOutput
	ToIntervalInMinsOutputWithContext(context.Context) IntervalInMinsOutput
}

var intervalInMinsPtrType = reflect.TypeOf((**IntervalInMins)(nil)).Elem()

type IntervalInMinsPtrInput interface {
	pulumi.Input

	ToIntervalInMinsPtrOutput() IntervalInMinsPtrOutput
	ToIntervalInMinsPtrOutputWithContext(context.Context) IntervalInMinsPtrOutput
}

type intervalInMinsPtr string

func IntervalInMinsPtr(v string) IntervalInMinsPtrInput {
	return (*intervalInMinsPtr)(&v)
}

func (*intervalInMinsPtr) ElementType() reflect.Type {
	return intervalInMinsPtrType
}

func (in *intervalInMinsPtr) ToIntervalInMinsPtrOutput() IntervalInMinsPtrOutput {
	return pulumi.ToOutput(in).(IntervalInMinsPtrOutput)
}

func (in *intervalInMinsPtr) ToIntervalInMinsPtrOutputWithContext(ctx context.Context) IntervalInMinsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntervalInMinsPtrOutput)
}

func (in *intervalInMinsPtr) ToOutput(ctx context.Context) pulumix.Output[*IntervalInMins] {
	return pulumix.Output[*IntervalInMins]{
		OutputState: in.ToIntervalInMinsPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(ConsistencyModeTypesOutput{})
	pulumi.RegisterOutputType(ConsistencyModeTypesPtrOutput{})
	pulumi.RegisterOutputType(IntervalInMinsOutput{})
	pulumi.RegisterOutputType(IntervalInMinsPtrOutput{})
}
