// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230102

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CPU architecture supported by an OS disk.
type Architecture string

const (
	ArchitectureX64   = Architecture("x64")
	ArchitectureArm64 = Architecture("Arm64")
)

func (Architecture) ElementType() reflect.Type {
	return reflect.TypeOf((*Architecture)(nil)).Elem()
}

func (e Architecture) ToArchitectureOutput() ArchitectureOutput {
	return pulumi.ToOutput(e).(ArchitectureOutput)
}

func (e Architecture) ToArchitectureOutputWithContext(ctx context.Context) ArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArchitectureOutput)
}

func (e Architecture) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return e.ToArchitecturePtrOutputWithContext(context.Background())
}

func (e Architecture) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return Architecture(e).ToArchitectureOutputWithContext(ctx).ToArchitecturePtrOutputWithContext(ctx)
}

func (e Architecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Architecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Architecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Architecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArchitectureOutput struct{ *pulumi.OutputState }

func (ArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Architecture)(nil)).Elem()
}

func (o ArchitectureOutput) ToArchitectureOutput() ArchitectureOutput {
	return o
}

func (o ArchitectureOutput) ToArchitectureOutputWithContext(ctx context.Context) ArchitectureOutput {
	return o
}

func (o ArchitectureOutput) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return o.ToArchitecturePtrOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Architecture) *Architecture {
		return &v
	}).(ArchitecturePtrOutput)
}

func (o ArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Architecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Architecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArchitecturePtrOutput struct{ *pulumi.OutputState }

func (ArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Architecture)(nil)).Elem()
}

func (o ArchitecturePtrOutput) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return o
}

func (o ArchitecturePtrOutput) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return o
}

func (o ArchitecturePtrOutput) Elem() ArchitectureOutput {
	return o.ApplyT(func(v *Architecture) Architecture {
		if v != nil {
			return *v
		}
		var ret Architecture
		return ret
	}).(ArchitectureOutput)
}

func (o ArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Architecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArchitectureInput is an input type that accepts values of the Architecture enum
// A concrete instance of `ArchitectureInput` can be one of the following:
//
//	ArchitectureX64
//	ArchitectureArm64
type ArchitectureInput interface {
	pulumi.Input

	ToArchitectureOutput() ArchitectureOutput
	ToArchitectureOutputWithContext(context.Context) ArchitectureOutput
}

var architecturePtrType = reflect.TypeOf((**Architecture)(nil)).Elem()

type ArchitecturePtrInput interface {
	pulumi.Input

	ToArchitecturePtrOutput() ArchitecturePtrOutput
	ToArchitecturePtrOutputWithContext(context.Context) ArchitecturePtrOutput
}

type architecturePtr string

func ArchitecturePtr(v string) ArchitecturePtrInput {
	return (*architecturePtr)(&v)
}

func (*architecturePtr) ElementType() reflect.Type {
	return architecturePtrType
}

func (in *architecturePtr) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return pulumi.ToOutput(in).(ArchitecturePtrOutput)
}

func (in *architecturePtr) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArchitecturePtrOutput)
}

// Indicates the error code if the background copy of a resource created via the CopyStart operation fails.
type CopyCompletionErrorReason string

const (
	// Indicates that the source snapshot was deleted while the background copy of the resource created via CopyStart operation was in progress.
	CopyCompletionErrorReasonCopySourceNotFound = CopyCompletionErrorReason("CopySourceNotFound")
)

func (CopyCompletionErrorReason) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyCompletionErrorReason)(nil)).Elem()
}

func (e CopyCompletionErrorReason) ToCopyCompletionErrorReasonOutput() CopyCompletionErrorReasonOutput {
	return pulumi.ToOutput(e).(CopyCompletionErrorReasonOutput)
}

func (e CopyCompletionErrorReason) ToCopyCompletionErrorReasonOutputWithContext(ctx context.Context) CopyCompletionErrorReasonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CopyCompletionErrorReasonOutput)
}

func (e CopyCompletionErrorReason) ToCopyCompletionErrorReasonPtrOutput() CopyCompletionErrorReasonPtrOutput {
	return e.ToCopyCompletionErrorReasonPtrOutputWithContext(context.Background())
}

func (e CopyCompletionErrorReason) ToCopyCompletionErrorReasonPtrOutputWithContext(ctx context.Context) CopyCompletionErrorReasonPtrOutput {
	return CopyCompletionErrorReason(e).ToCopyCompletionErrorReasonOutputWithContext(ctx).ToCopyCompletionErrorReasonPtrOutputWithContext(ctx)
}

func (e CopyCompletionErrorReason) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CopyCompletionErrorReason) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CopyCompletionErrorReason) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CopyCompletionErrorReason) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CopyCompletionErrorReasonOutput struct{ *pulumi.OutputState }

func (CopyCompletionErrorReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyCompletionErrorReason)(nil)).Elem()
}

func (o CopyCompletionErrorReasonOutput) ToCopyCompletionErrorReasonOutput() CopyCompletionErrorReasonOutput {
	return o
}

func (o CopyCompletionErrorReasonOutput) ToCopyCompletionErrorReasonOutputWithContext(ctx context.Context) CopyCompletionErrorReasonOutput {
	return o
}

func (o CopyCompletionErrorReasonOutput) ToCopyCompletionErrorReasonPtrOutput() CopyCompletionErrorReasonPtrOutput {
	return o.ToCopyCompletionErrorReasonPtrOutputWithContext(context.Background())
}

func (o CopyCompletionErrorReasonOutput) ToCopyCompletionErrorReasonPtrOutputWithContext(ctx context.Context) CopyCompletionErrorReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CopyCompletionErrorReason) *CopyCompletionErrorReason {
		return &v
	}).(CopyCompletionErrorReasonPtrOutput)
}

func (o CopyCompletionErrorReasonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CopyCompletionErrorReasonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CopyCompletionErrorReason) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CopyCompletionErrorReasonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CopyCompletionErrorReasonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CopyCompletionErrorReason) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CopyCompletionErrorReasonPtrOutput struct{ *pulumi.OutputState }

func (CopyCompletionErrorReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CopyCompletionErrorReason)(nil)).Elem()
}

func (o CopyCompletionErrorReasonPtrOutput) ToCopyCompletionErrorReasonPtrOutput() CopyCompletionErrorReasonPtrOutput {
	return o
}

func (o CopyCompletionErrorReasonPtrOutput) ToCopyCompletionErrorReasonPtrOutputWithContext(ctx context.Context) CopyCompletionErrorReasonPtrOutput {
	return o
}

func (o CopyCompletionErrorReasonPtrOutput) Elem() CopyCompletionErrorReasonOutput {
	return o.ApplyT(func(v *CopyCompletionErrorReason) CopyCompletionErrorReason {
		if v != nil {
			return *v
		}
		var ret CopyCompletionErrorReason
		return ret
	}).(CopyCompletionErrorReasonOutput)
}

func (o CopyCompletionErrorReasonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CopyCompletionErrorReasonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CopyCompletionErrorReason) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CopyCompletionErrorReasonInput is an input type that accepts values of the CopyCompletionErrorReason enum
// A concrete instance of `CopyCompletionErrorReasonInput` can be one of the following:
//
//	CopyCompletionErrorReasonCopySourceNotFound
type CopyCompletionErrorReasonInput interface {
	pulumi.Input

	ToCopyCompletionErrorReasonOutput() CopyCompletionErrorReasonOutput
	ToCopyCompletionErrorReasonOutputWithContext(context.Context) CopyCompletionErrorReasonOutput
}

var copyCompletionErrorReasonPtrType = reflect.TypeOf((**CopyCompletionErrorReason)(nil)).Elem()

type CopyCompletionErrorReasonPtrInput interface {
	pulumi.Input

	ToCopyCompletionErrorReasonPtrOutput() CopyCompletionErrorReasonPtrOutput
	ToCopyCompletionErrorReasonPtrOutputWithContext(context.Context) CopyCompletionErrorReasonPtrOutput
}

type copyCompletionErrorReasonPtr string

func CopyCompletionErrorReasonPtr(v string) CopyCompletionErrorReasonPtrInput {
	return (*copyCompletionErrorReasonPtr)(&v)
}

func (*copyCompletionErrorReasonPtr) ElementType() reflect.Type {
	return copyCompletionErrorReasonPtrType
}

func (in *copyCompletionErrorReasonPtr) ToCopyCompletionErrorReasonPtrOutput() CopyCompletionErrorReasonPtrOutput {
	return pulumi.ToOutput(in).(CopyCompletionErrorReasonPtrOutput)
}

func (in *copyCompletionErrorReasonPtr) ToCopyCompletionErrorReasonPtrOutputWithContext(ctx context.Context) CopyCompletionErrorReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CopyCompletionErrorReasonPtrOutput)
}

// Additional authentication requirements when exporting or uploading to a disk or snapshot.
type DataAccessAuthMode string

const (
	// When export/upload URL is used, the system checks if the user has an identity in Azure Active Directory and has necessary permissions to export/upload the data. Please refer to aka.ms/DisksAzureADAuth.
	DataAccessAuthModeAzureActiveDirectory = DataAccessAuthMode("AzureActiveDirectory")
	// No additional authentication would be performed when accessing export/upload URL.
	DataAccessAuthModeNone = DataAccessAuthMode("None")
)

func (DataAccessAuthMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataAccessAuthMode)(nil)).Elem()
}

func (e DataAccessAuthMode) ToDataAccessAuthModeOutput() DataAccessAuthModeOutput {
	return pulumi.ToOutput(e).(DataAccessAuthModeOutput)
}

func (e DataAccessAuthMode) ToDataAccessAuthModeOutputWithContext(ctx context.Context) DataAccessAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataAccessAuthModeOutput)
}

func (e DataAccessAuthMode) ToDataAccessAuthModePtrOutput() DataAccessAuthModePtrOutput {
	return e.ToDataAccessAuthModePtrOutputWithContext(context.Background())
}

func (e DataAccessAuthMode) ToDataAccessAuthModePtrOutputWithContext(ctx context.Context) DataAccessAuthModePtrOutput {
	return DataAccessAuthMode(e).ToDataAccessAuthModeOutputWithContext(ctx).ToDataAccessAuthModePtrOutputWithContext(ctx)
}

func (e DataAccessAuthMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataAccessAuthMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataAccessAuthMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataAccessAuthMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataAccessAuthModeOutput struct{ *pulumi.OutputState }

func (DataAccessAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataAccessAuthMode)(nil)).Elem()
}

func (o DataAccessAuthModeOutput) ToDataAccessAuthModeOutput() DataAccessAuthModeOutput {
	return o
}

func (o DataAccessAuthModeOutput) ToDataAccessAuthModeOutputWithContext(ctx context.Context) DataAccessAuthModeOutput {
	return o
}

func (o DataAccessAuthModeOutput) ToDataAccessAuthModePtrOutput() DataAccessAuthModePtrOutput {
	return o.ToDataAccessAuthModePtrOutputWithContext(context.Background())
}

func (o DataAccessAuthModeOutput) ToDataAccessAuthModePtrOutputWithContext(ctx context.Context) DataAccessAuthModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataAccessAuthMode) *DataAccessAuthMode {
		return &v
	}).(DataAccessAuthModePtrOutput)
}

func (o DataAccessAuthModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataAccessAuthModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataAccessAuthMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataAccessAuthModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataAccessAuthModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataAccessAuthMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataAccessAuthModePtrOutput struct{ *pulumi.OutputState }

func (DataAccessAuthModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataAccessAuthMode)(nil)).Elem()
}

func (o DataAccessAuthModePtrOutput) ToDataAccessAuthModePtrOutput() DataAccessAuthModePtrOutput {
	return o
}

func (o DataAccessAuthModePtrOutput) ToDataAccessAuthModePtrOutputWithContext(ctx context.Context) DataAccessAuthModePtrOutput {
	return o
}

func (o DataAccessAuthModePtrOutput) Elem() DataAccessAuthModeOutput {
	return o.ApplyT(func(v *DataAccessAuthMode) DataAccessAuthMode {
		if v != nil {
			return *v
		}
		var ret DataAccessAuthMode
		return ret
	}).(DataAccessAuthModeOutput)
}

func (o DataAccessAuthModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataAccessAuthModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataAccessAuthMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataAccessAuthModeInput is an input type that accepts values of the DataAccessAuthMode enum
// A concrete instance of `DataAccessAuthModeInput` can be one of the following:
//
//	DataAccessAuthModeAzureActiveDirectory
//	DataAccessAuthModeNone
type DataAccessAuthModeInput interface {
	pulumi.Input

	ToDataAccessAuthModeOutput() DataAccessAuthModeOutput
	ToDataAccessAuthModeOutputWithContext(context.Context) DataAccessAuthModeOutput
}

var dataAccessAuthModePtrType = reflect.TypeOf((**DataAccessAuthMode)(nil)).Elem()

type DataAccessAuthModePtrInput interface {
	pulumi.Input

	ToDataAccessAuthModePtrOutput() DataAccessAuthModePtrOutput
	ToDataAccessAuthModePtrOutputWithContext(context.Context) DataAccessAuthModePtrOutput
}

type dataAccessAuthModePtr string

func DataAccessAuthModePtr(v string) DataAccessAuthModePtrInput {
	return (*dataAccessAuthModePtr)(&v)
}

func (*dataAccessAuthModePtr) ElementType() reflect.Type {
	return dataAccessAuthModePtrType
}

func (in *dataAccessAuthModePtr) ToDataAccessAuthModePtrOutput() DataAccessAuthModePtrOutput {
	return pulumi.ToOutput(in).(DataAccessAuthModePtrOutput)
}

func (in *dataAccessAuthModePtr) ToDataAccessAuthModePtrOutputWithContext(ctx context.Context) DataAccessAuthModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataAccessAuthModePtrOutput)
}

// This enumerates the possible sources of a disk's creation.
type DiskCreateOption string

const (
	// Create an empty data disk of a size given by diskSizeGB.
	DiskCreateOptionEmpty = DiskCreateOption("Empty")
	// Disk will be attached to a VM.
	DiskCreateOptionAttach = DiskCreateOption("Attach")
	// Create a new disk from a platform image specified by the given imageReference or galleryImageReference.
	DiskCreateOptionFromImage = DiskCreateOption("FromImage")
	// Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId.
	DiskCreateOptionImport = DiskCreateOption("Import")
	// Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId.
	DiskCreateOptionCopy = DiskCreateOption("Copy")
	// Create a new disk by copying from a backup recovery point.
	DiskCreateOptionRestore = DiskCreateOption("Restore")
	// Create a new disk by obtaining a write token and using it to directly upload the contents of the disk.
	DiskCreateOptionUpload = DiskCreateOption("Upload")
	// Create a new disk by using a deep copy process, where the resource creation is considered complete only after all data has been copied from the source.
	DiskCreateOptionCopyStart = DiskCreateOption("CopyStart")
	// Similar to Import create option. Create a new Trusted Launch VM or Confidential VM supported disk by importing additional blob for VM guest state specified by securityDataUri in storage account specified by storageAccountId
	DiskCreateOptionImportSecure = DiskCreateOption("ImportSecure")
	// Similar to Upload create option. Create a new Trusted Launch VM or Confidential VM supported disk and upload using write token in both disk and VM guest state
	DiskCreateOptionUploadPreparedSecure = DiskCreateOption("UploadPreparedSecure")
)

func (DiskCreateOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskCreateOption)(nil)).Elem()
}

func (e DiskCreateOption) ToDiskCreateOptionOutput() DiskCreateOptionOutput {
	return pulumi.ToOutput(e).(DiskCreateOptionOutput)
}

func (e DiskCreateOption) ToDiskCreateOptionOutputWithContext(ctx context.Context) DiskCreateOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskCreateOptionOutput)
}

func (e DiskCreateOption) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return e.ToDiskCreateOptionPtrOutputWithContext(context.Background())
}

func (e DiskCreateOption) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return DiskCreateOption(e).ToDiskCreateOptionOutputWithContext(ctx).ToDiskCreateOptionPtrOutputWithContext(ctx)
}

func (e DiskCreateOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskCreateOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskCreateOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskCreateOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskCreateOptionOutput struct{ *pulumi.OutputState }

func (DiskCreateOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskCreateOption)(nil)).Elem()
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionOutput() DiskCreateOptionOutput {
	return o
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionOutputWithContext(ctx context.Context) DiskCreateOptionOutput {
	return o
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return o.ToDiskCreateOptionPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskCreateOption) *DiskCreateOption {
		return &v
	}).(DiskCreateOptionPtrOutput)
}

func (o DiskCreateOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskCreateOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskCreateOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskCreateOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskCreateOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskCreateOptionPtrOutput struct{ *pulumi.OutputState }

func (DiskCreateOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskCreateOption)(nil)).Elem()
}

func (o DiskCreateOptionPtrOutput) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return o
}

func (o DiskCreateOptionPtrOutput) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return o
}

func (o DiskCreateOptionPtrOutput) Elem() DiskCreateOptionOutput {
	return o.ApplyT(func(v *DiskCreateOption) DiskCreateOption {
		if v != nil {
			return *v
		}
		var ret DiskCreateOption
		return ret
	}).(DiskCreateOptionOutput)
}

func (o DiskCreateOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskCreateOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskCreateOptionInput is an input type that accepts values of the DiskCreateOption enum
// A concrete instance of `DiskCreateOptionInput` can be one of the following:
//
//	DiskCreateOptionEmpty
//	DiskCreateOptionAttach
//	DiskCreateOptionFromImage
//	DiskCreateOptionImport
//	DiskCreateOptionCopy
//	DiskCreateOptionRestore
//	DiskCreateOptionUpload
//	DiskCreateOptionCopyStart
//	DiskCreateOptionImportSecure
//	DiskCreateOptionUploadPreparedSecure
type DiskCreateOptionInput interface {
	pulumi.Input

	ToDiskCreateOptionOutput() DiskCreateOptionOutput
	ToDiskCreateOptionOutputWithContext(context.Context) DiskCreateOptionOutput
}

var diskCreateOptionPtrType = reflect.TypeOf((**DiskCreateOption)(nil)).Elem()

type DiskCreateOptionPtrInput interface {
	pulumi.Input

	ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput
	ToDiskCreateOptionPtrOutputWithContext(context.Context) DiskCreateOptionPtrOutput
}

type diskCreateOptionPtr string

func DiskCreateOptionPtr(v string) DiskCreateOptionPtrInput {
	return (*diskCreateOptionPtr)(&v)
}

func (*diskCreateOptionPtr) ElementType() reflect.Type {
	return diskCreateOptionPtrType
}

func (in *diskCreateOptionPtr) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return pulumi.ToOutput(in).(DiskCreateOptionPtrOutput)
}

func (in *diskCreateOptionPtr) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskCreateOptionPtrOutput)
}

// The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
type DiskEncryptionSetIdentityType string

const (
	DiskEncryptionSetIdentityTypeSystemAssigned               = DiskEncryptionSetIdentityType("SystemAssigned")
	DiskEncryptionSetIdentityTypeUserAssigned                 = DiskEncryptionSetIdentityType("UserAssigned")
	DiskEncryptionSetIdentityType_SystemAssigned_UserAssigned = DiskEncryptionSetIdentityType("SystemAssigned, UserAssigned")
	DiskEncryptionSetIdentityTypeNone                         = DiskEncryptionSetIdentityType("None")
)

func (DiskEncryptionSetIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetIdentityType)(nil)).Elem()
}

func (e DiskEncryptionSetIdentityType) ToDiskEncryptionSetIdentityTypeOutput() DiskEncryptionSetIdentityTypeOutput {
	return pulumi.ToOutput(e).(DiskEncryptionSetIdentityTypeOutput)
}

func (e DiskEncryptionSetIdentityType) ToDiskEncryptionSetIdentityTypeOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskEncryptionSetIdentityTypeOutput)
}

func (e DiskEncryptionSetIdentityType) ToDiskEncryptionSetIdentityTypePtrOutput() DiskEncryptionSetIdentityTypePtrOutput {
	return e.ToDiskEncryptionSetIdentityTypePtrOutputWithContext(context.Background())
}

func (e DiskEncryptionSetIdentityType) ToDiskEncryptionSetIdentityTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityTypePtrOutput {
	return DiskEncryptionSetIdentityType(e).ToDiskEncryptionSetIdentityTypeOutputWithContext(ctx).ToDiskEncryptionSetIdentityTypePtrOutputWithContext(ctx)
}

func (e DiskEncryptionSetIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskEncryptionSetIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskEncryptionSetIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskEncryptionSetIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskEncryptionSetIdentityTypeOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetIdentityType)(nil)).Elem()
}

func (o DiskEncryptionSetIdentityTypeOutput) ToDiskEncryptionSetIdentityTypeOutput() DiskEncryptionSetIdentityTypeOutput {
	return o
}

func (o DiskEncryptionSetIdentityTypeOutput) ToDiskEncryptionSetIdentityTypeOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityTypeOutput {
	return o
}

func (o DiskEncryptionSetIdentityTypeOutput) ToDiskEncryptionSetIdentityTypePtrOutput() DiskEncryptionSetIdentityTypePtrOutput {
	return o.ToDiskEncryptionSetIdentityTypePtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetIdentityTypeOutput) ToDiskEncryptionSetIdentityTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskEncryptionSetIdentityType) *DiskEncryptionSetIdentityType {
		return &v
	}).(DiskEncryptionSetIdentityTypePtrOutput)
}

func (o DiskEncryptionSetIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskEncryptionSetIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskEncryptionSetIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskEncryptionSetIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskEncryptionSetIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskEncryptionSetIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetIdentityType)(nil)).Elem()
}

func (o DiskEncryptionSetIdentityTypePtrOutput) ToDiskEncryptionSetIdentityTypePtrOutput() DiskEncryptionSetIdentityTypePtrOutput {
	return o
}

func (o DiskEncryptionSetIdentityTypePtrOutput) ToDiskEncryptionSetIdentityTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityTypePtrOutput {
	return o
}

func (o DiskEncryptionSetIdentityTypePtrOutput) Elem() DiskEncryptionSetIdentityTypeOutput {
	return o.ApplyT(func(v *DiskEncryptionSetIdentityType) DiskEncryptionSetIdentityType {
		if v != nil {
			return *v
		}
		var ret DiskEncryptionSetIdentityType
		return ret
	}).(DiskEncryptionSetIdentityTypeOutput)
}

func (o DiskEncryptionSetIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskEncryptionSetIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskEncryptionSetIdentityTypeInput is an input type that accepts values of the DiskEncryptionSetIdentityType enum
// A concrete instance of `DiskEncryptionSetIdentityTypeInput` can be one of the following:
//
//	DiskEncryptionSetIdentityTypeSystemAssigned
//	DiskEncryptionSetIdentityTypeUserAssigned
//	DiskEncryptionSetIdentityType_SystemAssigned_UserAssigned
//	DiskEncryptionSetIdentityTypeNone
type DiskEncryptionSetIdentityTypeInput interface {
	pulumi.Input

	ToDiskEncryptionSetIdentityTypeOutput() DiskEncryptionSetIdentityTypeOutput
	ToDiskEncryptionSetIdentityTypeOutputWithContext(context.Context) DiskEncryptionSetIdentityTypeOutput
}

var diskEncryptionSetIdentityTypePtrType = reflect.TypeOf((**DiskEncryptionSetIdentityType)(nil)).Elem()

type DiskEncryptionSetIdentityTypePtrInput interface {
	pulumi.Input

	ToDiskEncryptionSetIdentityTypePtrOutput() DiskEncryptionSetIdentityTypePtrOutput
	ToDiskEncryptionSetIdentityTypePtrOutputWithContext(context.Context) DiskEncryptionSetIdentityTypePtrOutput
}

type diskEncryptionSetIdentityTypePtr string

func DiskEncryptionSetIdentityTypePtr(v string) DiskEncryptionSetIdentityTypePtrInput {
	return (*diskEncryptionSetIdentityTypePtr)(&v)
}

func (*diskEncryptionSetIdentityTypePtr) ElementType() reflect.Type {
	return diskEncryptionSetIdentityTypePtrType
}

func (in *diskEncryptionSetIdentityTypePtr) ToDiskEncryptionSetIdentityTypePtrOutput() DiskEncryptionSetIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(DiskEncryptionSetIdentityTypePtrOutput)
}

func (in *diskEncryptionSetIdentityTypePtr) ToDiskEncryptionSetIdentityTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskEncryptionSetIdentityTypePtrOutput)
}

// The type of key used to encrypt the data of the disk.
type DiskEncryptionSetType string

const (
	// Resource using diskEncryptionSet would be encrypted at rest with Customer managed key that can be changed and revoked by a customer.
	DiskEncryptionSetTypeEncryptionAtRestWithCustomerKey = DiskEncryptionSetType("EncryptionAtRestWithCustomerKey")
	// Resource using diskEncryptionSet would be encrypted at rest with two layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
	DiskEncryptionSetTypeEncryptionAtRestWithPlatformAndCustomerKeys = DiskEncryptionSetType("EncryptionAtRestWithPlatformAndCustomerKeys")
	// Confidential VM supported disk and VM guest state would be encrypted with customer managed key.
	DiskEncryptionSetTypeConfidentialVmEncryptedWithCustomerKey = DiskEncryptionSetType("ConfidentialVmEncryptedWithCustomerKey")
)

func (DiskEncryptionSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetType)(nil)).Elem()
}

func (e DiskEncryptionSetType) ToDiskEncryptionSetTypeOutput() DiskEncryptionSetTypeOutput {
	return pulumi.ToOutput(e).(DiskEncryptionSetTypeOutput)
}

func (e DiskEncryptionSetType) ToDiskEncryptionSetTypeOutputWithContext(ctx context.Context) DiskEncryptionSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskEncryptionSetTypeOutput)
}

func (e DiskEncryptionSetType) ToDiskEncryptionSetTypePtrOutput() DiskEncryptionSetTypePtrOutput {
	return e.ToDiskEncryptionSetTypePtrOutputWithContext(context.Background())
}

func (e DiskEncryptionSetType) ToDiskEncryptionSetTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetTypePtrOutput {
	return DiskEncryptionSetType(e).ToDiskEncryptionSetTypeOutputWithContext(ctx).ToDiskEncryptionSetTypePtrOutputWithContext(ctx)
}

func (e DiskEncryptionSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskEncryptionSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskEncryptionSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskEncryptionSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskEncryptionSetTypeOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetType)(nil)).Elem()
}

func (o DiskEncryptionSetTypeOutput) ToDiskEncryptionSetTypeOutput() DiskEncryptionSetTypeOutput {
	return o
}

func (o DiskEncryptionSetTypeOutput) ToDiskEncryptionSetTypeOutputWithContext(ctx context.Context) DiskEncryptionSetTypeOutput {
	return o
}

func (o DiskEncryptionSetTypeOutput) ToDiskEncryptionSetTypePtrOutput() DiskEncryptionSetTypePtrOutput {
	return o.ToDiskEncryptionSetTypePtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetTypeOutput) ToDiskEncryptionSetTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskEncryptionSetType) *DiskEncryptionSetType {
		return &v
	}).(DiskEncryptionSetTypePtrOutput)
}

func (o DiskEncryptionSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskEncryptionSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskEncryptionSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskEncryptionSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskEncryptionSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskEncryptionSetTypePtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetType)(nil)).Elem()
}

func (o DiskEncryptionSetTypePtrOutput) ToDiskEncryptionSetTypePtrOutput() DiskEncryptionSetTypePtrOutput {
	return o
}

func (o DiskEncryptionSetTypePtrOutput) ToDiskEncryptionSetTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetTypePtrOutput {
	return o
}

func (o DiskEncryptionSetTypePtrOutput) Elem() DiskEncryptionSetTypeOutput {
	return o.ApplyT(func(v *DiskEncryptionSetType) DiskEncryptionSetType {
		if v != nil {
			return *v
		}
		var ret DiskEncryptionSetType
		return ret
	}).(DiskEncryptionSetTypeOutput)
}

func (o DiskEncryptionSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskEncryptionSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskEncryptionSetTypeInput is an input type that accepts values of the DiskEncryptionSetType enum
// A concrete instance of `DiskEncryptionSetTypeInput` can be one of the following:
//
//	DiskEncryptionSetTypeEncryptionAtRestWithCustomerKey
//	DiskEncryptionSetTypeEncryptionAtRestWithPlatformAndCustomerKeys
//	DiskEncryptionSetTypeConfidentialVmEncryptedWithCustomerKey
type DiskEncryptionSetTypeInput interface {
	pulumi.Input

	ToDiskEncryptionSetTypeOutput() DiskEncryptionSetTypeOutput
	ToDiskEncryptionSetTypeOutputWithContext(context.Context) DiskEncryptionSetTypeOutput
}

var diskEncryptionSetTypePtrType = reflect.TypeOf((**DiskEncryptionSetType)(nil)).Elem()

type DiskEncryptionSetTypePtrInput interface {
	pulumi.Input

	ToDiskEncryptionSetTypePtrOutput() DiskEncryptionSetTypePtrOutput
	ToDiskEncryptionSetTypePtrOutputWithContext(context.Context) DiskEncryptionSetTypePtrOutput
}

type diskEncryptionSetTypePtr string

func DiskEncryptionSetTypePtr(v string) DiskEncryptionSetTypePtrInput {
	return (*diskEncryptionSetTypePtr)(&v)
}

func (*diskEncryptionSetTypePtr) ElementType() reflect.Type {
	return diskEncryptionSetTypePtrType
}

func (in *diskEncryptionSetTypePtr) ToDiskEncryptionSetTypePtrOutput() DiskEncryptionSetTypePtrOutput {
	return pulumi.ToOutput(in).(DiskEncryptionSetTypePtrOutput)
}

func (in *diskEncryptionSetTypePtr) ToDiskEncryptionSetTypePtrOutputWithContext(ctx context.Context) DiskEncryptionSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskEncryptionSetTypePtrOutput)
}

// Specifies the SecurityType of the VM. Applicable for OS disks only.
type DiskSecurityTypes string

const (
	// Trusted Launch provides security features such as secure boot and virtual Trusted Platform Module (vTPM)
	DiskSecurityTypesTrustedLaunch = DiskSecurityTypes("TrustedLaunch")
	// Indicates Confidential VM disk with only VM guest state encrypted
	DiskSecurityTypes_ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey = DiskSecurityTypes("ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey")
	// Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a platform managed key
	DiskSecurityTypes_ConfidentialVM_DiskEncryptedWithPlatformKey = DiskSecurityTypes("ConfidentialVM_DiskEncryptedWithPlatformKey")
	// Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a customer managed key
	DiskSecurityTypes_ConfidentialVM_DiskEncryptedWithCustomerKey = DiskSecurityTypes("ConfidentialVM_DiskEncryptedWithCustomerKey")
)

func (DiskSecurityTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskSecurityTypes)(nil)).Elem()
}

func (e DiskSecurityTypes) ToDiskSecurityTypesOutput() DiskSecurityTypesOutput {
	return pulumi.ToOutput(e).(DiskSecurityTypesOutput)
}

func (e DiskSecurityTypes) ToDiskSecurityTypesOutputWithContext(ctx context.Context) DiskSecurityTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskSecurityTypesOutput)
}

func (e DiskSecurityTypes) ToDiskSecurityTypesPtrOutput() DiskSecurityTypesPtrOutput {
	return e.ToDiskSecurityTypesPtrOutputWithContext(context.Background())
}

func (e DiskSecurityTypes) ToDiskSecurityTypesPtrOutputWithContext(ctx context.Context) DiskSecurityTypesPtrOutput {
	return DiskSecurityTypes(e).ToDiskSecurityTypesOutputWithContext(ctx).ToDiskSecurityTypesPtrOutputWithContext(ctx)
}

func (e DiskSecurityTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskSecurityTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskSecurityTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskSecurityTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskSecurityTypesOutput struct{ *pulumi.OutputState }

func (DiskSecurityTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskSecurityTypes)(nil)).Elem()
}

func (o DiskSecurityTypesOutput) ToDiskSecurityTypesOutput() DiskSecurityTypesOutput {
	return o
}

func (o DiskSecurityTypesOutput) ToDiskSecurityTypesOutputWithContext(ctx context.Context) DiskSecurityTypesOutput {
	return o
}

func (o DiskSecurityTypesOutput) ToDiskSecurityTypesPtrOutput() DiskSecurityTypesPtrOutput {
	return o.ToDiskSecurityTypesPtrOutputWithContext(context.Background())
}

func (o DiskSecurityTypesOutput) ToDiskSecurityTypesPtrOutputWithContext(ctx context.Context) DiskSecurityTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskSecurityTypes) *DiskSecurityTypes {
		return &v
	}).(DiskSecurityTypesPtrOutput)
}

func (o DiskSecurityTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskSecurityTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskSecurityTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskSecurityTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskSecurityTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskSecurityTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskSecurityTypesPtrOutput struct{ *pulumi.OutputState }

func (DiskSecurityTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskSecurityTypes)(nil)).Elem()
}

func (o DiskSecurityTypesPtrOutput) ToDiskSecurityTypesPtrOutput() DiskSecurityTypesPtrOutput {
	return o
}

func (o DiskSecurityTypesPtrOutput) ToDiskSecurityTypesPtrOutputWithContext(ctx context.Context) DiskSecurityTypesPtrOutput {
	return o
}

func (o DiskSecurityTypesPtrOutput) Elem() DiskSecurityTypesOutput {
	return o.ApplyT(func(v *DiskSecurityTypes) DiskSecurityTypes {
		if v != nil {
			return *v
		}
		var ret DiskSecurityTypes
		return ret
	}).(DiskSecurityTypesOutput)
}

func (o DiskSecurityTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskSecurityTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskSecurityTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskSecurityTypesInput is an input type that accepts values of the DiskSecurityTypes enum
// A concrete instance of `DiskSecurityTypesInput` can be one of the following:
//
//	DiskSecurityTypesTrustedLaunch
//	DiskSecurityTypes_ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey
//	DiskSecurityTypes_ConfidentialVM_DiskEncryptedWithPlatformKey
//	DiskSecurityTypes_ConfidentialVM_DiskEncryptedWithCustomerKey
type DiskSecurityTypesInput interface {
	pulumi.Input

	ToDiskSecurityTypesOutput() DiskSecurityTypesOutput
	ToDiskSecurityTypesOutputWithContext(context.Context) DiskSecurityTypesOutput
}

var diskSecurityTypesPtrType = reflect.TypeOf((**DiskSecurityTypes)(nil)).Elem()

type DiskSecurityTypesPtrInput interface {
	pulumi.Input

	ToDiskSecurityTypesPtrOutput() DiskSecurityTypesPtrOutput
	ToDiskSecurityTypesPtrOutputWithContext(context.Context) DiskSecurityTypesPtrOutput
}

type diskSecurityTypesPtr string

func DiskSecurityTypesPtr(v string) DiskSecurityTypesPtrInput {
	return (*diskSecurityTypesPtr)(&v)
}

func (*diskSecurityTypesPtr) ElementType() reflect.Type {
	return diskSecurityTypesPtrType
}

func (in *diskSecurityTypesPtr) ToDiskSecurityTypesPtrOutput() DiskSecurityTypesPtrOutput {
	return pulumi.ToOutput(in).(DiskSecurityTypesPtrOutput)
}

func (in *diskSecurityTypesPtr) ToDiskSecurityTypesPtrOutputWithContext(ctx context.Context) DiskSecurityTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskSecurityTypesPtrOutput)
}

// The sku name.
type DiskStorageAccountTypes string

const (
	// Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.
	DiskStorageAccountTypes_Standard_LRS = DiskStorageAccountTypes("Standard_LRS")
	// Premium SSD locally redundant storage. Best for production and performance sensitive workloads.
	DiskStorageAccountTypes_Premium_LRS = DiskStorageAccountTypes("Premium_LRS")
	// Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.
	DiskStorageAccountTypes_StandardSSD_LRS = DiskStorageAccountTypes("StandardSSD_LRS")
	// Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads.
	DiskStorageAccountTypes_UltraSSD_LRS = DiskStorageAccountTypes("UltraSSD_LRS")
	// Premium SSD zone redundant storage. Best for the production workloads that need storage resiliency against zone failures.
	DiskStorageAccountTypes_Premium_ZRS = DiskStorageAccountTypes("Premium_ZRS")
	// Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures.
	DiskStorageAccountTypes_StandardSSD_ZRS = DiskStorageAccountTypes("StandardSSD_ZRS")
	// Premium SSD v2 locally redundant storage. Best for production and performance-sensitive workloads that consistently require low latency and high IOPS and throughput.
	DiskStorageAccountTypes_PremiumV2_LRS = DiskStorageAccountTypes("PremiumV2_LRS")
)

func (DiskStorageAccountTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageAccountTypes)(nil)).Elem()
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesOutput() DiskStorageAccountTypesOutput {
	return pulumi.ToOutput(e).(DiskStorageAccountTypesOutput)
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesOutputWithContext(ctx context.Context) DiskStorageAccountTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskStorageAccountTypesOutput)
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return e.ToDiskStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return DiskStorageAccountTypes(e).ToDiskStorageAccountTypesOutputWithContext(ctx).ToDiskStorageAccountTypesPtrOutputWithContext(ctx)
}

func (e DiskStorageAccountTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageAccountTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageAccountTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskStorageAccountTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskStorageAccountTypesOutput struct{ *pulumi.OutputState }

func (DiskStorageAccountTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageAccountTypes)(nil)).Elem()
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesOutput() DiskStorageAccountTypesOutput {
	return o
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesOutputWithContext(ctx context.Context) DiskStorageAccountTypesOutput {
	return o
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return o.ToDiskStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskStorageAccountTypes) *DiskStorageAccountTypes {
		return &v
	}).(DiskStorageAccountTypesPtrOutput)
}

func (o DiskStorageAccountTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageAccountTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskStorageAccountTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageAccountTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskStorageAccountTypesPtrOutput struct{ *pulumi.OutputState }

func (DiskStorageAccountTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskStorageAccountTypes)(nil)).Elem()
}

func (o DiskStorageAccountTypesPtrOutput) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return o
}

func (o DiskStorageAccountTypesPtrOutput) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return o
}

func (o DiskStorageAccountTypesPtrOutput) Elem() DiskStorageAccountTypesOutput {
	return o.ApplyT(func(v *DiskStorageAccountTypes) DiskStorageAccountTypes {
		if v != nil {
			return *v
		}
		var ret DiskStorageAccountTypes
		return ret
	}).(DiskStorageAccountTypesOutput)
}

func (o DiskStorageAccountTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskStorageAccountTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskStorageAccountTypesInput is an input type that accepts values of the DiskStorageAccountTypes enum
// A concrete instance of `DiskStorageAccountTypesInput` can be one of the following:
//
//	DiskStorageAccountTypes_Standard_LRS
//	DiskStorageAccountTypes_Premium_LRS
//	DiskStorageAccountTypes_StandardSSD_LRS
//	DiskStorageAccountTypes_UltraSSD_LRS
//	DiskStorageAccountTypes_Premium_ZRS
//	DiskStorageAccountTypes_StandardSSD_ZRS
//	DiskStorageAccountTypes_PremiumV2_LRS
type DiskStorageAccountTypesInput interface {
	pulumi.Input

	ToDiskStorageAccountTypesOutput() DiskStorageAccountTypesOutput
	ToDiskStorageAccountTypesOutputWithContext(context.Context) DiskStorageAccountTypesOutput
}

var diskStorageAccountTypesPtrType = reflect.TypeOf((**DiskStorageAccountTypes)(nil)).Elem()

type DiskStorageAccountTypesPtrInput interface {
	pulumi.Input

	ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput
	ToDiskStorageAccountTypesPtrOutputWithContext(context.Context) DiskStorageAccountTypesPtrOutput
}

type diskStorageAccountTypesPtr string

func DiskStorageAccountTypesPtr(v string) DiskStorageAccountTypesPtrInput {
	return (*diskStorageAccountTypesPtr)(&v)
}

func (*diskStorageAccountTypesPtr) ElementType() reflect.Type {
	return diskStorageAccountTypesPtrType
}

func (in *diskStorageAccountTypesPtr) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return pulumi.ToOutput(in).(DiskStorageAccountTypesPtrOutput)
}

func (in *diskStorageAccountTypesPtr) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskStorageAccountTypesPtrOutput)
}

// The type of key used to encrypt the data of the disk.
type EncryptionType string

const (
	// Disk is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets.
	EncryptionTypeEncryptionAtRestWithPlatformKey = EncryptionType("EncryptionAtRestWithPlatformKey")
	// Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
	EncryptionTypeEncryptionAtRestWithCustomerKey = EncryptionType("EncryptionAtRestWithCustomerKey")
	// Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
	EncryptionTypeEncryptionAtRestWithPlatformAndCustomerKeys = EncryptionType("EncryptionAtRestWithPlatformAndCustomerKeys")
)

func (EncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionType)(nil)).Elem()
}

func (e EncryptionType) ToEncryptionTypeOutput() EncryptionTypeOutput {
	return pulumi.ToOutput(e).(EncryptionTypeOutput)
}

func (e EncryptionType) ToEncryptionTypeOutputWithContext(ctx context.Context) EncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionTypeOutput)
}

func (e EncryptionType) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return e.ToEncryptionTypePtrOutputWithContext(context.Background())
}

func (e EncryptionType) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return EncryptionType(e).ToEncryptionTypeOutputWithContext(ctx).ToEncryptionTypePtrOutputWithContext(ctx)
}

func (e EncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionTypeOutput struct{ *pulumi.OutputState }

func (EncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionType)(nil)).Elem()
}

func (o EncryptionTypeOutput) ToEncryptionTypeOutput() EncryptionTypeOutput {
	return o
}

func (o EncryptionTypeOutput) ToEncryptionTypeOutputWithContext(ctx context.Context) EncryptionTypeOutput {
	return o
}

func (o EncryptionTypeOutput) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return o.ToEncryptionTypePtrOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionType) *EncryptionType {
		return &v
	}).(EncryptionTypePtrOutput)
}

func (o EncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionType)(nil)).Elem()
}

func (o EncryptionTypePtrOutput) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return o
}

func (o EncryptionTypePtrOutput) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return o
}

func (o EncryptionTypePtrOutput) Elem() EncryptionTypeOutput {
	return o.ApplyT(func(v *EncryptionType) EncryptionType {
		if v != nil {
			return *v
		}
		var ret EncryptionType
		return ret
	}).(EncryptionTypeOutput)
}

func (o EncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionTypeInput is an input type that accepts values of the EncryptionType enum
// A concrete instance of `EncryptionTypeInput` can be one of the following:
//
//	EncryptionTypeEncryptionAtRestWithPlatformKey
//	EncryptionTypeEncryptionAtRestWithCustomerKey
//	EncryptionTypeEncryptionAtRestWithPlatformAndCustomerKeys
type EncryptionTypeInput interface {
	pulumi.Input

	ToEncryptionTypeOutput() EncryptionTypeOutput
	ToEncryptionTypeOutputWithContext(context.Context) EncryptionTypeOutput
}

var encryptionTypePtrType = reflect.TypeOf((**EncryptionType)(nil)).Elem()

type EncryptionTypePtrInput interface {
	pulumi.Input

	ToEncryptionTypePtrOutput() EncryptionTypePtrOutput
	ToEncryptionTypePtrOutputWithContext(context.Context) EncryptionTypePtrOutput
}

type encryptionTypePtr string

func EncryptionTypePtr(v string) EncryptionTypePtrInput {
	return (*encryptionTypePtr)(&v)
}

func (*encryptionTypePtr) ElementType() reflect.Type {
	return encryptionTypePtrType
}

func (in *encryptionTypePtr) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionTypePtrOutput)
}

func (in *encryptionTypePtr) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionTypePtrOutput)
}

// The type of the extended location.
type ExtendedLocationTypes string

const (
	ExtendedLocationTypesEdgeZone = ExtendedLocationTypes("EdgeZone")
)

func (ExtendedLocationTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return e.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return ExtendedLocationTypes(e).ToExtendedLocationTypesOutputWithContext(ctx).ToExtendedLocationTypesPtrOutputWithContext(ctx)
}

func (e ExtendedLocationTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypesOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationTypes) *ExtendedLocationTypes {
		return &v
	}).(ExtendedLocationTypesPtrOutput)
}

func (o ExtendedLocationTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypesPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) Elem() ExtendedLocationTypesOutput {
	return o.ApplyT(func(v *ExtendedLocationTypes) ExtendedLocationTypes {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationTypes
		return ret
	}).(ExtendedLocationTypesOutput)
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypesInput is an input type that accepts values of the ExtendedLocationTypes enum
// A concrete instance of `ExtendedLocationTypesInput` can be one of the following:
//
//	ExtendedLocationTypesEdgeZone
type ExtendedLocationTypesInput interface {
	pulumi.Input

	ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput
	ToExtendedLocationTypesOutputWithContext(context.Context) ExtendedLocationTypesOutput
}

var extendedLocationTypesPtrType = reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()

type ExtendedLocationTypesPtrInput interface {
	pulumi.Input

	ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput
	ToExtendedLocationTypesPtrOutputWithContext(context.Context) ExtendedLocationTypesPtrOutput
}

type extendedLocationTypesPtr string

func ExtendedLocationTypesPtr(v string) ExtendedLocationTypesPtrInput {
	return (*extendedLocationTypesPtr)(&v)
}

func (*extendedLocationTypesPtr) ElementType() reflect.Type {
	return extendedLocationTypesPtrType
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypesPtrOutput)
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypesPtrOutput)
}

// The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
type HyperVGeneration string

const (
	HyperVGenerationV1 = HyperVGeneration("V1")
	HyperVGenerationV2 = HyperVGeneration("V2")
)

func (HyperVGeneration) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVGeneration)(nil)).Elem()
}

func (e HyperVGeneration) ToHyperVGenerationOutput() HyperVGenerationOutput {
	return pulumi.ToOutput(e).(HyperVGenerationOutput)
}

func (e HyperVGeneration) ToHyperVGenerationOutputWithContext(ctx context.Context) HyperVGenerationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HyperVGenerationOutput)
}

func (e HyperVGeneration) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return e.ToHyperVGenerationPtrOutputWithContext(context.Background())
}

func (e HyperVGeneration) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return HyperVGeneration(e).ToHyperVGenerationOutputWithContext(ctx).ToHyperVGenerationPtrOutputWithContext(ctx)
}

func (e HyperVGeneration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HyperVGeneration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HyperVGeneration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HyperVGeneration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HyperVGenerationOutput struct{ *pulumi.OutputState }

func (HyperVGenerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVGeneration)(nil)).Elem()
}

func (o HyperVGenerationOutput) ToHyperVGenerationOutput() HyperVGenerationOutput {
	return o
}

func (o HyperVGenerationOutput) ToHyperVGenerationOutputWithContext(ctx context.Context) HyperVGenerationOutput {
	return o
}

func (o HyperVGenerationOutput) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return o.ToHyperVGenerationPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVGeneration) *HyperVGeneration {
		return &v
	}).(HyperVGenerationPtrOutput)
}

func (o HyperVGenerationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HyperVGeneration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HyperVGenerationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HyperVGeneration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HyperVGenerationPtrOutput struct{ *pulumi.OutputState }

func (HyperVGenerationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVGeneration)(nil)).Elem()
}

func (o HyperVGenerationPtrOutput) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return o
}

func (o HyperVGenerationPtrOutput) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return o
}

func (o HyperVGenerationPtrOutput) Elem() HyperVGenerationOutput {
	return o.ApplyT(func(v *HyperVGeneration) HyperVGeneration {
		if v != nil {
			return *v
		}
		var ret HyperVGeneration
		return ret
	}).(HyperVGenerationOutput)
}

func (o HyperVGenerationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HyperVGeneration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HyperVGenerationInput is an input type that accepts values of the HyperVGeneration enum
// A concrete instance of `HyperVGenerationInput` can be one of the following:
//
//	HyperVGenerationV1
//	HyperVGenerationV2
type HyperVGenerationInput interface {
	pulumi.Input

	ToHyperVGenerationOutput() HyperVGenerationOutput
	ToHyperVGenerationOutputWithContext(context.Context) HyperVGenerationOutput
}

var hyperVGenerationPtrType = reflect.TypeOf((**HyperVGeneration)(nil)).Elem()

type HyperVGenerationPtrInput interface {
	pulumi.Input

	ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput
	ToHyperVGenerationPtrOutputWithContext(context.Context) HyperVGenerationPtrOutput
}

type hyperVGenerationPtr string

func HyperVGenerationPtr(v string) HyperVGenerationPtrInput {
	return (*hyperVGenerationPtr)(&v)
}

func (*hyperVGenerationPtr) ElementType() reflect.Type {
	return hyperVGenerationPtrType
}

func (in *hyperVGenerationPtr) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return pulumi.ToOutput(in).(HyperVGenerationPtrOutput)
}

func (in *hyperVGenerationPtr) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HyperVGenerationPtrOutput)
}

// Policy for accessing the disk via network.
type NetworkAccessPolicy string

const (
	// The disk can be exported or uploaded to from any network.
	NetworkAccessPolicyAllowAll = NetworkAccessPolicy("AllowAll")
	// The disk can be exported or uploaded to using a DiskAccess resource's private endpoints.
	NetworkAccessPolicyAllowPrivate = NetworkAccessPolicy("AllowPrivate")
	// The disk cannot be exported.
	NetworkAccessPolicyDenyAll = NetworkAccessPolicy("DenyAll")
)

func (NetworkAccessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessPolicy)(nil)).Elem()
}

func (e NetworkAccessPolicy) ToNetworkAccessPolicyOutput() NetworkAccessPolicyOutput {
	return pulumi.ToOutput(e).(NetworkAccessPolicyOutput)
}

func (e NetworkAccessPolicy) ToNetworkAccessPolicyOutputWithContext(ctx context.Context) NetworkAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkAccessPolicyOutput)
}

func (e NetworkAccessPolicy) ToNetworkAccessPolicyPtrOutput() NetworkAccessPolicyPtrOutput {
	return e.ToNetworkAccessPolicyPtrOutputWithContext(context.Background())
}

func (e NetworkAccessPolicy) ToNetworkAccessPolicyPtrOutputWithContext(ctx context.Context) NetworkAccessPolicyPtrOutput {
	return NetworkAccessPolicy(e).ToNetworkAccessPolicyOutputWithContext(ctx).ToNetworkAccessPolicyPtrOutputWithContext(ctx)
}

func (e NetworkAccessPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkAccessPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkAccessPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkAccessPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkAccessPolicyOutput struct{ *pulumi.OutputState }

func (NetworkAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessPolicy)(nil)).Elem()
}

func (o NetworkAccessPolicyOutput) ToNetworkAccessPolicyOutput() NetworkAccessPolicyOutput {
	return o
}

func (o NetworkAccessPolicyOutput) ToNetworkAccessPolicyOutputWithContext(ctx context.Context) NetworkAccessPolicyOutput {
	return o
}

func (o NetworkAccessPolicyOutput) ToNetworkAccessPolicyPtrOutput() NetworkAccessPolicyPtrOutput {
	return o.ToNetworkAccessPolicyPtrOutputWithContext(context.Background())
}

func (o NetworkAccessPolicyOutput) ToNetworkAccessPolicyPtrOutputWithContext(ctx context.Context) NetworkAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkAccessPolicy) *NetworkAccessPolicy {
		return &v
	}).(NetworkAccessPolicyPtrOutput)
}

func (o NetworkAccessPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkAccessPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkAccessPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkAccessPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkAccessPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkAccessPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (NetworkAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAccessPolicy)(nil)).Elem()
}

func (o NetworkAccessPolicyPtrOutput) ToNetworkAccessPolicyPtrOutput() NetworkAccessPolicyPtrOutput {
	return o
}

func (o NetworkAccessPolicyPtrOutput) ToNetworkAccessPolicyPtrOutputWithContext(ctx context.Context) NetworkAccessPolicyPtrOutput {
	return o
}

func (o NetworkAccessPolicyPtrOutput) Elem() NetworkAccessPolicyOutput {
	return o.ApplyT(func(v *NetworkAccessPolicy) NetworkAccessPolicy {
		if v != nil {
			return *v
		}
		var ret NetworkAccessPolicy
		return ret
	}).(NetworkAccessPolicyOutput)
}

func (o NetworkAccessPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkAccessPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkAccessPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkAccessPolicyInput is an input type that accepts values of the NetworkAccessPolicy enum
// A concrete instance of `NetworkAccessPolicyInput` can be one of the following:
//
//	NetworkAccessPolicyAllowAll
//	NetworkAccessPolicyAllowPrivate
//	NetworkAccessPolicyDenyAll
type NetworkAccessPolicyInput interface {
	pulumi.Input

	ToNetworkAccessPolicyOutput() NetworkAccessPolicyOutput
	ToNetworkAccessPolicyOutputWithContext(context.Context) NetworkAccessPolicyOutput
}

var networkAccessPolicyPtrType = reflect.TypeOf((**NetworkAccessPolicy)(nil)).Elem()

type NetworkAccessPolicyPtrInput interface {
	pulumi.Input

	ToNetworkAccessPolicyPtrOutput() NetworkAccessPolicyPtrOutput
	ToNetworkAccessPolicyPtrOutputWithContext(context.Context) NetworkAccessPolicyPtrOutput
}

type networkAccessPolicyPtr string

func NetworkAccessPolicyPtr(v string) NetworkAccessPolicyPtrInput {
	return (*networkAccessPolicyPtr)(&v)
}

func (*networkAccessPolicyPtr) ElementType() reflect.Type {
	return networkAccessPolicyPtrType
}

func (in *networkAccessPolicyPtr) ToNetworkAccessPolicyPtrOutput() NetworkAccessPolicyPtrOutput {
	return pulumi.ToOutput(in).(NetworkAccessPolicyPtrOutput)
}

func (in *networkAccessPolicyPtr) ToNetworkAccessPolicyPtrOutputWithContext(ctx context.Context) NetworkAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkAccessPolicyPtrOutput)
}

// The Operating System type.
type OperatingSystemTypes string

const (
	OperatingSystemTypesWindows = OperatingSystemTypes("Windows")
	OperatingSystemTypesLinux   = OperatingSystemTypes("Linux")
)

func (OperatingSystemTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return pulumi.ToOutput(e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return e.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return OperatingSystemTypes(e).ToOperatingSystemTypesOutputWithContext(ctx).ToOperatingSystemTypesPtrOutputWithContext(ctx)
}

func (e OperatingSystemTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatingSystemTypesOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperatingSystemTypes) *OperatingSystemTypes {
		return &v
	}).(OperatingSystemTypesPtrOutput)
}

func (o OperatingSystemTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatingSystemTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatingSystemTypesPtrOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) Elem() OperatingSystemTypesOutput {
	return o.ApplyT(func(v *OperatingSystemTypes) OperatingSystemTypes {
		if v != nil {
			return *v
		}
		var ret OperatingSystemTypes
		return ret
	}).(OperatingSystemTypesOutput)
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperatingSystemTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatingSystemTypesInput is an input type that accepts values of the OperatingSystemTypes enum
// A concrete instance of `OperatingSystemTypesInput` can be one of the following:
//
//	OperatingSystemTypesWindows
//	OperatingSystemTypesLinux
type OperatingSystemTypesInput interface {
	pulumi.Input

	ToOperatingSystemTypesOutput() OperatingSystemTypesOutput
	ToOperatingSystemTypesOutputWithContext(context.Context) OperatingSystemTypesOutput
}

var operatingSystemTypesPtrType = reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()

type OperatingSystemTypesPtrInput interface {
	pulumi.Input

	ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput
	ToOperatingSystemTypesPtrOutputWithContext(context.Context) OperatingSystemTypesPtrOutput
}

type operatingSystemTypesPtr string

func OperatingSystemTypesPtr(v string) OperatingSystemTypesPtrInput {
	return (*operatingSystemTypesPtr)(&v)
}

func (*operatingSystemTypesPtr) ElementType() reflect.Type {
	return operatingSystemTypesPtrType
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return pulumi.ToOutput(in).(OperatingSystemTypesPtrOutput)
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatingSystemTypesPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts values of the PrivateEndpointServiceConnectionStatus enum
// A concrete instance of `PrivateEndpointServiceConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointServiceConnectionStatusPending
//	PrivateEndpointServiceConnectionStatusApproved
//	PrivateEndpointServiceConnectionStatusRejected
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

// Policy for controlling export on the disk.
type PublicNetworkAccess string

const (
	// You can generate a SAS URI to access the underlying data of the disk publicly on the internet when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.
	PublicNetworkAccessEnabled = PublicNetworkAccess("Enabled")
	// You cannot access the underlying data of the disk publicly on the internet even when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// The sku name.
type SnapshotStorageAccountTypes string

const (
	// Standard HDD locally redundant storage
	SnapshotStorageAccountTypes_Standard_LRS = SnapshotStorageAccountTypes("Standard_LRS")
	// Premium SSD locally redundant storage
	SnapshotStorageAccountTypes_Premium_LRS = SnapshotStorageAccountTypes("Premium_LRS")
	// Standard zone redundant storage
	SnapshotStorageAccountTypes_Standard_ZRS = SnapshotStorageAccountTypes("Standard_ZRS")
)

func (SnapshotStorageAccountTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStorageAccountTypes)(nil)).Elem()
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesOutput() SnapshotStorageAccountTypesOutput {
	return pulumi.ToOutput(e).(SnapshotStorageAccountTypesOutput)
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SnapshotStorageAccountTypesOutput)
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return e.ToSnapshotStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return SnapshotStorageAccountTypes(e).ToSnapshotStorageAccountTypesOutputWithContext(ctx).ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx)
}

func (e SnapshotStorageAccountTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotStorageAccountTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotStorageAccountTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SnapshotStorageAccountTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SnapshotStorageAccountTypesOutput struct{ *pulumi.OutputState }

func (SnapshotStorageAccountTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStorageAccountTypes)(nil)).Elem()
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesOutput() SnapshotStorageAccountTypesOutput {
	return o
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesOutput {
	return o
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return o.ToSnapshotStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotStorageAccountTypes) *SnapshotStorageAccountTypes {
		return &v
	}).(SnapshotStorageAccountTypesPtrOutput)
}

func (o SnapshotStorageAccountTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotStorageAccountTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotStorageAccountTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotStorageAccountTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotStorageAccountTypesPtrOutput struct{ *pulumi.OutputState }

func (SnapshotStorageAccountTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotStorageAccountTypes)(nil)).Elem()
}

func (o SnapshotStorageAccountTypesPtrOutput) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return o
}

func (o SnapshotStorageAccountTypesPtrOutput) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return o
}

func (o SnapshotStorageAccountTypesPtrOutput) Elem() SnapshotStorageAccountTypesOutput {
	return o.ApplyT(func(v *SnapshotStorageAccountTypes) SnapshotStorageAccountTypes {
		if v != nil {
			return *v
		}
		var ret SnapshotStorageAccountTypes
		return ret
	}).(SnapshotStorageAccountTypesOutput)
}

func (o SnapshotStorageAccountTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotStorageAccountTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SnapshotStorageAccountTypesInput is an input type that accepts values of the SnapshotStorageAccountTypes enum
// A concrete instance of `SnapshotStorageAccountTypesInput` can be one of the following:
//
//	SnapshotStorageAccountTypes_Standard_LRS
//	SnapshotStorageAccountTypes_Premium_LRS
//	SnapshotStorageAccountTypes_Standard_ZRS
type SnapshotStorageAccountTypesInput interface {
	pulumi.Input

	ToSnapshotStorageAccountTypesOutput() SnapshotStorageAccountTypesOutput
	ToSnapshotStorageAccountTypesOutputWithContext(context.Context) SnapshotStorageAccountTypesOutput
}

var snapshotStorageAccountTypesPtrType = reflect.TypeOf((**SnapshotStorageAccountTypes)(nil)).Elem()

type SnapshotStorageAccountTypesPtrInput interface {
	pulumi.Input

	ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput
	ToSnapshotStorageAccountTypesPtrOutputWithContext(context.Context) SnapshotStorageAccountTypesPtrOutput
}

type snapshotStorageAccountTypesPtr string

func SnapshotStorageAccountTypesPtr(v string) SnapshotStorageAccountTypesPtrInput {
	return (*snapshotStorageAccountTypesPtr)(&v)
}

func (*snapshotStorageAccountTypesPtr) ElementType() reflect.Type {
	return snapshotStorageAccountTypesPtrType
}

func (in *snapshotStorageAccountTypesPtr) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return pulumi.ToOutput(in).(SnapshotStorageAccountTypesPtrOutput)
}

func (in *snapshotStorageAccountTypesPtr) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SnapshotStorageAccountTypesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ArchitectureOutput{})
	pulumi.RegisterOutputType(ArchitecturePtrOutput{})
	pulumi.RegisterOutputType(CopyCompletionErrorReasonOutput{})
	pulumi.RegisterOutputType(CopyCompletionErrorReasonPtrOutput{})
	pulumi.RegisterOutputType(DataAccessAuthModeOutput{})
	pulumi.RegisterOutputType(DataAccessAuthModePtrOutput{})
	pulumi.RegisterOutputType(DiskCreateOptionOutput{})
	pulumi.RegisterOutputType(DiskCreateOptionPtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetIdentityTypeOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetTypeOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetTypePtrOutput{})
	pulumi.RegisterOutputType(DiskSecurityTypesOutput{})
	pulumi.RegisterOutputType(DiskSecurityTypesPtrOutput{})
	pulumi.RegisterOutputType(DiskStorageAccountTypesOutput{})
	pulumi.RegisterOutputType(DiskStorageAccountTypesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionTypeOutput{})
	pulumi.RegisterOutputType(EncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesPtrOutput{})
	pulumi.RegisterOutputType(HyperVGenerationOutput{})
	pulumi.RegisterOutputType(HyperVGenerationPtrOutput{})
	pulumi.RegisterOutputType(NetworkAccessPolicyOutput{})
	pulumi.RegisterOutputType(NetworkAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(SnapshotStorageAccountTypesOutput{})
	pulumi.RegisterOutputType(SnapshotStorageAccountTypesPtrOutput{})
}
