// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220803

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Information of community gallery if current gallery is shared to community
type CommunityGalleryInfo struct {
	// End-user license agreement for community gallery image.
	Eula *string `pulumi:"eula"`
	// The prefix of the gallery name that will be displayed publicly. Visible to all users.
	PublicNamePrefix *string `pulumi:"publicNamePrefix"`
	// Community gallery publisher support email. The email address of the publisher. Visible to all users.
	PublisherContact *string `pulumi:"publisherContact"`
	// The link to the publisher website. Visible to all users.
	PublisherUri *string `pulumi:"publisherUri"`
}

// CommunityGalleryInfoInput is an input type that accepts CommunityGalleryInfoArgs and CommunityGalleryInfoOutput values.
// You can construct a concrete instance of `CommunityGalleryInfoInput` via:
//
//	CommunityGalleryInfoArgs{...}
type CommunityGalleryInfoInput interface {
	pulumi.Input

	ToCommunityGalleryInfoOutput() CommunityGalleryInfoOutput
	ToCommunityGalleryInfoOutputWithContext(context.Context) CommunityGalleryInfoOutput
}

// Information of community gallery if current gallery is shared to community
type CommunityGalleryInfoArgs struct {
	// End-user license agreement for community gallery image.
	Eula pulumi.StringPtrInput `pulumi:"eula"`
	// The prefix of the gallery name that will be displayed publicly. Visible to all users.
	PublicNamePrefix pulumi.StringPtrInput `pulumi:"publicNamePrefix"`
	// Community gallery publisher support email. The email address of the publisher. Visible to all users.
	PublisherContact pulumi.StringPtrInput `pulumi:"publisherContact"`
	// The link to the publisher website. Visible to all users.
	PublisherUri pulumi.StringPtrInput `pulumi:"publisherUri"`
}

func (CommunityGalleryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityGalleryInfo)(nil)).Elem()
}

func (i CommunityGalleryInfoArgs) ToCommunityGalleryInfoOutput() CommunityGalleryInfoOutput {
	return i.ToCommunityGalleryInfoOutputWithContext(context.Background())
}

func (i CommunityGalleryInfoArgs) ToCommunityGalleryInfoOutputWithContext(ctx context.Context) CommunityGalleryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityGalleryInfoOutput)
}

func (i CommunityGalleryInfoArgs) ToCommunityGalleryInfoPtrOutput() CommunityGalleryInfoPtrOutput {
	return i.ToCommunityGalleryInfoPtrOutputWithContext(context.Background())
}

func (i CommunityGalleryInfoArgs) ToCommunityGalleryInfoPtrOutputWithContext(ctx context.Context) CommunityGalleryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityGalleryInfoOutput).ToCommunityGalleryInfoPtrOutputWithContext(ctx)
}

// CommunityGalleryInfoPtrInput is an input type that accepts CommunityGalleryInfoArgs, CommunityGalleryInfoPtr and CommunityGalleryInfoPtrOutput values.
// You can construct a concrete instance of `CommunityGalleryInfoPtrInput` via:
//
//	        CommunityGalleryInfoArgs{...}
//
//	or:
//
//	        nil
type CommunityGalleryInfoPtrInput interface {
	pulumi.Input

	ToCommunityGalleryInfoPtrOutput() CommunityGalleryInfoPtrOutput
	ToCommunityGalleryInfoPtrOutputWithContext(context.Context) CommunityGalleryInfoPtrOutput
}

type communityGalleryInfoPtrType CommunityGalleryInfoArgs

func CommunityGalleryInfoPtr(v *CommunityGalleryInfoArgs) CommunityGalleryInfoPtrInput {
	return (*communityGalleryInfoPtrType)(v)
}

func (*communityGalleryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunityGalleryInfo)(nil)).Elem()
}

func (i *communityGalleryInfoPtrType) ToCommunityGalleryInfoPtrOutput() CommunityGalleryInfoPtrOutput {
	return i.ToCommunityGalleryInfoPtrOutputWithContext(context.Background())
}

func (i *communityGalleryInfoPtrType) ToCommunityGalleryInfoPtrOutputWithContext(ctx context.Context) CommunityGalleryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityGalleryInfoPtrOutput)
}

// Information of community gallery if current gallery is shared to community
type CommunityGalleryInfoOutput struct{ *pulumi.OutputState }

func (CommunityGalleryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityGalleryInfo)(nil)).Elem()
}

func (o CommunityGalleryInfoOutput) ToCommunityGalleryInfoOutput() CommunityGalleryInfoOutput {
	return o
}

func (o CommunityGalleryInfoOutput) ToCommunityGalleryInfoOutputWithContext(ctx context.Context) CommunityGalleryInfoOutput {
	return o
}

func (o CommunityGalleryInfoOutput) ToCommunityGalleryInfoPtrOutput() CommunityGalleryInfoPtrOutput {
	return o.ToCommunityGalleryInfoPtrOutputWithContext(context.Background())
}

func (o CommunityGalleryInfoOutput) ToCommunityGalleryInfoPtrOutputWithContext(ctx context.Context) CommunityGalleryInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommunityGalleryInfo) *CommunityGalleryInfo {
		return &v
	}).(CommunityGalleryInfoPtrOutput)
}

// End-user license agreement for community gallery image.
func (o CommunityGalleryInfoOutput) Eula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfo) *string { return v.Eula }).(pulumi.StringPtrOutput)
}

// The prefix of the gallery name that will be displayed publicly. Visible to all users.
func (o CommunityGalleryInfoOutput) PublicNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfo) *string { return v.PublicNamePrefix }).(pulumi.StringPtrOutput)
}

// Community gallery publisher support email. The email address of the publisher. Visible to all users.
func (o CommunityGalleryInfoOutput) PublisherContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfo) *string { return v.PublisherContact }).(pulumi.StringPtrOutput)
}

// The link to the publisher website. Visible to all users.
func (o CommunityGalleryInfoOutput) PublisherUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfo) *string { return v.PublisherUri }).(pulumi.StringPtrOutput)
}

type CommunityGalleryInfoPtrOutput struct{ *pulumi.OutputState }

func (CommunityGalleryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunityGalleryInfo)(nil)).Elem()
}

func (o CommunityGalleryInfoPtrOutput) ToCommunityGalleryInfoPtrOutput() CommunityGalleryInfoPtrOutput {
	return o
}

func (o CommunityGalleryInfoPtrOutput) ToCommunityGalleryInfoPtrOutputWithContext(ctx context.Context) CommunityGalleryInfoPtrOutput {
	return o
}

func (o CommunityGalleryInfoPtrOutput) Elem() CommunityGalleryInfoOutput {
	return o.ApplyT(func(v *CommunityGalleryInfo) CommunityGalleryInfo {
		if v != nil {
			return *v
		}
		var ret CommunityGalleryInfo
		return ret
	}).(CommunityGalleryInfoOutput)
}

// End-user license agreement for community gallery image.
func (o CommunityGalleryInfoPtrOutput) Eula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfo) *string {
		if v == nil {
			return nil
		}
		return v.Eula
	}).(pulumi.StringPtrOutput)
}

// The prefix of the gallery name that will be displayed publicly. Visible to all users.
func (o CommunityGalleryInfoPtrOutput) PublicNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfo) *string {
		if v == nil {
			return nil
		}
		return v.PublicNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Community gallery publisher support email. The email address of the publisher. Visible to all users.
func (o CommunityGalleryInfoPtrOutput) PublisherContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfo) *string {
		if v == nil {
			return nil
		}
		return v.PublisherContact
	}).(pulumi.StringPtrOutput)
}

// The link to the publisher website. Visible to all users.
func (o CommunityGalleryInfoPtrOutput) PublisherUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfo) *string {
		if v == nil {
			return nil
		}
		return v.PublisherUri
	}).(pulumi.StringPtrOutput)
}

// Information of community gallery if current gallery is shared to community
type CommunityGalleryInfoResponse struct {
	// Contains info about whether community gallery sharing is enabled.
	CommunityGalleryEnabled bool `pulumi:"communityGalleryEnabled"`
	// End-user license agreement for community gallery image.
	Eula *string `pulumi:"eula"`
	// The prefix of the gallery name that will be displayed publicly. Visible to all users.
	PublicNamePrefix *string `pulumi:"publicNamePrefix"`
	// Community gallery public name list.
	PublicNames []string `pulumi:"publicNames"`
	// Community gallery publisher support email. The email address of the publisher. Visible to all users.
	PublisherContact *string `pulumi:"publisherContact"`
	// The link to the publisher website. Visible to all users.
	PublisherUri *string `pulumi:"publisherUri"`
}

// Information of community gallery if current gallery is shared to community
type CommunityGalleryInfoResponseOutput struct{ *pulumi.OutputState }

func (CommunityGalleryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityGalleryInfoResponse)(nil)).Elem()
}

func (o CommunityGalleryInfoResponseOutput) ToCommunityGalleryInfoResponseOutput() CommunityGalleryInfoResponseOutput {
	return o
}

func (o CommunityGalleryInfoResponseOutput) ToCommunityGalleryInfoResponseOutputWithContext(ctx context.Context) CommunityGalleryInfoResponseOutput {
	return o
}

// Contains info about whether community gallery sharing is enabled.
func (o CommunityGalleryInfoResponseOutput) CommunityGalleryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v CommunityGalleryInfoResponse) bool { return v.CommunityGalleryEnabled }).(pulumi.BoolOutput)
}

// End-user license agreement for community gallery image.
func (o CommunityGalleryInfoResponseOutput) Eula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfoResponse) *string { return v.Eula }).(pulumi.StringPtrOutput)
}

// The prefix of the gallery name that will be displayed publicly. Visible to all users.
func (o CommunityGalleryInfoResponseOutput) PublicNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfoResponse) *string { return v.PublicNamePrefix }).(pulumi.StringPtrOutput)
}

// Community gallery public name list.
func (o CommunityGalleryInfoResponseOutput) PublicNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CommunityGalleryInfoResponse) []string { return v.PublicNames }).(pulumi.StringArrayOutput)
}

// Community gallery publisher support email. The email address of the publisher. Visible to all users.
func (o CommunityGalleryInfoResponseOutput) PublisherContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfoResponse) *string { return v.PublisherContact }).(pulumi.StringPtrOutput)
}

// The link to the publisher website. Visible to all users.
func (o CommunityGalleryInfoResponseOutput) PublisherUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommunityGalleryInfoResponse) *string { return v.PublisherUri }).(pulumi.StringPtrOutput)
}

type CommunityGalleryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (CommunityGalleryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunityGalleryInfoResponse)(nil)).Elem()
}

func (o CommunityGalleryInfoResponsePtrOutput) ToCommunityGalleryInfoResponsePtrOutput() CommunityGalleryInfoResponsePtrOutput {
	return o
}

func (o CommunityGalleryInfoResponsePtrOutput) ToCommunityGalleryInfoResponsePtrOutputWithContext(ctx context.Context) CommunityGalleryInfoResponsePtrOutput {
	return o
}

func (o CommunityGalleryInfoResponsePtrOutput) Elem() CommunityGalleryInfoResponseOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) CommunityGalleryInfoResponse {
		if v != nil {
			return *v
		}
		var ret CommunityGalleryInfoResponse
		return ret
	}).(CommunityGalleryInfoResponseOutput)
}

// Contains info about whether community gallery sharing is enabled.
func (o CommunityGalleryInfoResponsePtrOutput) CommunityGalleryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CommunityGalleryEnabled
	}).(pulumi.BoolPtrOutput)
}

// End-user license agreement for community gallery image.
func (o CommunityGalleryInfoResponsePtrOutput) Eula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Eula
	}).(pulumi.StringPtrOutput)
}

// The prefix of the gallery name that will be displayed publicly. Visible to all users.
func (o CommunityGalleryInfoResponsePtrOutput) PublicNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Community gallery public name list.
func (o CommunityGalleryInfoResponsePtrOutput) PublicNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.PublicNames
	}).(pulumi.StringArrayOutput)
}

// Community gallery publisher support email. The email address of the publisher. Visible to all users.
func (o CommunityGalleryInfoResponsePtrOutput) PublisherContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublisherContact
	}).(pulumi.StringPtrOutput)
}

// The link to the publisher website. Visible to all users.
func (o CommunityGalleryInfoResponsePtrOutput) PublisherUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommunityGalleryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublisherUri
	}).(pulumi.StringPtrOutput)
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryption struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
}

// DataDiskImageEncryptionInput is an input type that accepts DataDiskImageEncryptionArgs and DataDiskImageEncryptionOutput values.
// You can construct a concrete instance of `DataDiskImageEncryptionInput` via:
//
//	DataDiskImageEncryptionArgs{...}
type DataDiskImageEncryptionInput interface {
	pulumi.Input

	ToDataDiskImageEncryptionOutput() DataDiskImageEncryptionOutput
	ToDataDiskImageEncryptionOutputWithContext(context.Context) DataDiskImageEncryptionOutput
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionArgs struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
}

func (DataDiskImageEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryption)(nil)).Elem()
}

func (i DataDiskImageEncryptionArgs) ToDataDiskImageEncryptionOutput() DataDiskImageEncryptionOutput {
	return i.ToDataDiskImageEncryptionOutputWithContext(context.Background())
}

func (i DataDiskImageEncryptionArgs) ToDataDiskImageEncryptionOutputWithContext(ctx context.Context) DataDiskImageEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageEncryptionOutput)
}

// DataDiskImageEncryptionArrayInput is an input type that accepts DataDiskImageEncryptionArray and DataDiskImageEncryptionArrayOutput values.
// You can construct a concrete instance of `DataDiskImageEncryptionArrayInput` via:
//
//	DataDiskImageEncryptionArray{ DataDiskImageEncryptionArgs{...} }
type DataDiskImageEncryptionArrayInput interface {
	pulumi.Input

	ToDataDiskImageEncryptionArrayOutput() DataDiskImageEncryptionArrayOutput
	ToDataDiskImageEncryptionArrayOutputWithContext(context.Context) DataDiskImageEncryptionArrayOutput
}

type DataDiskImageEncryptionArray []DataDiskImageEncryptionInput

func (DataDiskImageEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryption)(nil)).Elem()
}

func (i DataDiskImageEncryptionArray) ToDataDiskImageEncryptionArrayOutput() DataDiskImageEncryptionArrayOutput {
	return i.ToDataDiskImageEncryptionArrayOutputWithContext(context.Background())
}

func (i DataDiskImageEncryptionArray) ToDataDiskImageEncryptionArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageEncryptionArrayOutput)
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryption)(nil)).Elem()
}

func (o DataDiskImageEncryptionOutput) ToDataDiskImageEncryptionOutput() DataDiskImageEncryptionOutput {
	return o
}

func (o DataDiskImageEncryptionOutput) ToDataDiskImageEncryptionOutputWithContext(ctx context.Context) DataDiskImageEncryptionOutput {
	return o
}

// A relative URI containing the resource ID of the disk encryption set.
func (o DataDiskImageEncryptionOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskImageEncryption) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o DataDiskImageEncryptionOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageEncryption) int { return v.Lun }).(pulumi.IntOutput)
}

type DataDiskImageEncryptionArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryption)(nil)).Elem()
}

func (o DataDiskImageEncryptionArrayOutput) ToDataDiskImageEncryptionArrayOutput() DataDiskImageEncryptionArrayOutput {
	return o
}

func (o DataDiskImageEncryptionArrayOutput) ToDataDiskImageEncryptionArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionArrayOutput {
	return o
}

func (o DataDiskImageEncryptionArrayOutput) Index(i pulumi.IntInput) DataDiskImageEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageEncryption {
		return vs[0].([]DataDiskImageEncryption)[vs[1].(int)]
	}).(DataDiskImageEncryptionOutput)
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionResponse struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionResponseOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryptionResponse)(nil)).Elem()
}

func (o DataDiskImageEncryptionResponseOutput) ToDataDiskImageEncryptionResponseOutput() DataDiskImageEncryptionResponseOutput {
	return o
}

func (o DataDiskImageEncryptionResponseOutput) ToDataDiskImageEncryptionResponseOutputWithContext(ctx context.Context) DataDiskImageEncryptionResponseOutput {
	return o
}

// A relative URI containing the resource ID of the disk encryption set.
func (o DataDiskImageEncryptionResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskImageEncryptionResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o DataDiskImageEncryptionResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageEncryptionResponse) int { return v.Lun }).(pulumi.IntOutput)
}

type DataDiskImageEncryptionResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryptionResponse)(nil)).Elem()
}

func (o DataDiskImageEncryptionResponseArrayOutput) ToDataDiskImageEncryptionResponseArrayOutput() DataDiskImageEncryptionResponseArrayOutput {
	return o
}

func (o DataDiskImageEncryptionResponseArrayOutput) ToDataDiskImageEncryptionResponseArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionResponseArrayOutput {
	return o
}

func (o DataDiskImageEncryptionResponseArrayOutput) Index(i pulumi.IntInput) DataDiskImageEncryptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageEncryptionResponse {
		return vs[0].([]DataDiskImageEncryptionResponse)[vs[1].(int)]
	}).(DataDiskImageEncryptionResponseOutput)
}

// Describes the disallowed disk types.
type Disallowed struct {
	// A list of disk types.
	DiskTypes []string `pulumi:"diskTypes"`
}

// DisallowedInput is an input type that accepts DisallowedArgs and DisallowedOutput values.
// You can construct a concrete instance of `DisallowedInput` via:
//
//	DisallowedArgs{...}
type DisallowedInput interface {
	pulumi.Input

	ToDisallowedOutput() DisallowedOutput
	ToDisallowedOutputWithContext(context.Context) DisallowedOutput
}

// Describes the disallowed disk types.
type DisallowedArgs struct {
	// A list of disk types.
	DiskTypes pulumi.StringArrayInput `pulumi:"diskTypes"`
}

func (DisallowedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Disallowed)(nil)).Elem()
}

func (i DisallowedArgs) ToDisallowedOutput() DisallowedOutput {
	return i.ToDisallowedOutputWithContext(context.Background())
}

func (i DisallowedArgs) ToDisallowedOutputWithContext(ctx context.Context) DisallowedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedOutput)
}

func (i DisallowedArgs) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return i.ToDisallowedPtrOutputWithContext(context.Background())
}

func (i DisallowedArgs) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedOutput).ToDisallowedPtrOutputWithContext(ctx)
}

// DisallowedPtrInput is an input type that accepts DisallowedArgs, DisallowedPtr and DisallowedPtrOutput values.
// You can construct a concrete instance of `DisallowedPtrInput` via:
//
//	        DisallowedArgs{...}
//
//	or:
//
//	        nil
type DisallowedPtrInput interface {
	pulumi.Input

	ToDisallowedPtrOutput() DisallowedPtrOutput
	ToDisallowedPtrOutputWithContext(context.Context) DisallowedPtrOutput
}

type disallowedPtrType DisallowedArgs

func DisallowedPtr(v *DisallowedArgs) DisallowedPtrInput {
	return (*disallowedPtrType)(v)
}

func (*disallowedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Disallowed)(nil)).Elem()
}

func (i *disallowedPtrType) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return i.ToDisallowedPtrOutputWithContext(context.Background())
}

func (i *disallowedPtrType) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedPtrOutput)
}

// Describes the disallowed disk types.
type DisallowedOutput struct{ *pulumi.OutputState }

func (DisallowedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disallowed)(nil)).Elem()
}

func (o DisallowedOutput) ToDisallowedOutput() DisallowedOutput {
	return o
}

func (o DisallowedOutput) ToDisallowedOutputWithContext(ctx context.Context) DisallowedOutput {
	return o
}

func (o DisallowedOutput) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return o.ToDisallowedPtrOutputWithContext(context.Background())
}

func (o DisallowedOutput) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Disallowed) *Disallowed {
		return &v
	}).(DisallowedPtrOutput)
}

// A list of disk types.
func (o DisallowedOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Disallowed) []string { return v.DiskTypes }).(pulumi.StringArrayOutput)
}

type DisallowedPtrOutput struct{ *pulumi.OutputState }

func (DisallowedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Disallowed)(nil)).Elem()
}

func (o DisallowedPtrOutput) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return o
}

func (o DisallowedPtrOutput) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return o
}

func (o DisallowedPtrOutput) Elem() DisallowedOutput {
	return o.ApplyT(func(v *Disallowed) Disallowed {
		if v != nil {
			return *v
		}
		var ret Disallowed
		return ret
	}).(DisallowedOutput)
}

// A list of disk types.
func (o DisallowedPtrOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Disallowed) []string {
		if v == nil {
			return nil
		}
		return v.DiskTypes
	}).(pulumi.StringArrayOutput)
}

// Describes the disallowed disk types.
type DisallowedResponse struct {
	// A list of disk types.
	DiskTypes []string `pulumi:"diskTypes"`
}

// Describes the disallowed disk types.
type DisallowedResponseOutput struct{ *pulumi.OutputState }

func (DisallowedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisallowedResponse)(nil)).Elem()
}

func (o DisallowedResponseOutput) ToDisallowedResponseOutput() DisallowedResponseOutput {
	return o
}

func (o DisallowedResponseOutput) ToDisallowedResponseOutputWithContext(ctx context.Context) DisallowedResponseOutput {
	return o
}

// A list of disk types.
func (o DisallowedResponseOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DisallowedResponse) []string { return v.DiskTypes }).(pulumi.StringArrayOutput)
}

type DisallowedResponsePtrOutput struct{ *pulumi.OutputState }

func (DisallowedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DisallowedResponse)(nil)).Elem()
}

func (o DisallowedResponsePtrOutput) ToDisallowedResponsePtrOutput() DisallowedResponsePtrOutput {
	return o
}

func (o DisallowedResponsePtrOutput) ToDisallowedResponsePtrOutputWithContext(ctx context.Context) DisallowedResponsePtrOutput {
	return o
}

func (o DisallowedResponsePtrOutput) Elem() DisallowedResponseOutput {
	return o.ApplyT(func(v *DisallowedResponse) DisallowedResponse {
		if v != nil {
			return *v
		}
		var ret DisallowedResponse
		return ret
	}).(DisallowedResponseOutput)
}

// A list of disk types.
func (o DisallowedResponsePtrOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DisallowedResponse) []string {
		if v == nil {
			return nil
		}
		return v.DiskTypes
	}).(pulumi.StringArrayOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImages struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages []DataDiskImageEncryption `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage *OSDiskImageEncryption `pulumi:"osDiskImage"`
}

// EncryptionImagesInput is an input type that accepts EncryptionImagesArgs and EncryptionImagesOutput values.
// You can construct a concrete instance of `EncryptionImagesInput` via:
//
//	EncryptionImagesArgs{...}
type EncryptionImagesInput interface {
	pulumi.Input

	ToEncryptionImagesOutput() EncryptionImagesOutput
	ToEncryptionImagesOutputWithContext(context.Context) EncryptionImagesOutput
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesArgs struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages DataDiskImageEncryptionArrayInput `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage OSDiskImageEncryptionPtrInput `pulumi:"osDiskImage"`
}

func (EncryptionImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImages)(nil)).Elem()
}

func (i EncryptionImagesArgs) ToEncryptionImagesOutput() EncryptionImagesOutput {
	return i.ToEncryptionImagesOutputWithContext(context.Background())
}

func (i EncryptionImagesArgs) ToEncryptionImagesOutputWithContext(ctx context.Context) EncryptionImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesOutput)
}

func (i EncryptionImagesArgs) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return i.ToEncryptionImagesPtrOutputWithContext(context.Background())
}

func (i EncryptionImagesArgs) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesOutput).ToEncryptionImagesPtrOutputWithContext(ctx)
}

// EncryptionImagesPtrInput is an input type that accepts EncryptionImagesArgs, EncryptionImagesPtr and EncryptionImagesPtrOutput values.
// You can construct a concrete instance of `EncryptionImagesPtrInput` via:
//
//	        EncryptionImagesArgs{...}
//
//	or:
//
//	        nil
type EncryptionImagesPtrInput interface {
	pulumi.Input

	ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput
	ToEncryptionImagesPtrOutputWithContext(context.Context) EncryptionImagesPtrOutput
}

type encryptionImagesPtrType EncryptionImagesArgs

func EncryptionImagesPtr(v *EncryptionImagesArgs) EncryptionImagesPtrInput {
	return (*encryptionImagesPtrType)(v)
}

func (*encryptionImagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImages)(nil)).Elem()
}

func (i *encryptionImagesPtrType) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return i.ToEncryptionImagesPtrOutputWithContext(context.Background())
}

func (i *encryptionImagesPtrType) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesPtrOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesOutput struct{ *pulumi.OutputState }

func (EncryptionImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImages)(nil)).Elem()
}

func (o EncryptionImagesOutput) ToEncryptionImagesOutput() EncryptionImagesOutput {
	return o
}

func (o EncryptionImagesOutput) ToEncryptionImagesOutputWithContext(ctx context.Context) EncryptionImagesOutput {
	return o
}

func (o EncryptionImagesOutput) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return o.ToEncryptionImagesPtrOutputWithContext(context.Background())
}

func (o EncryptionImagesOutput) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionImages) *EncryptionImages {
		return &v
	}).(EncryptionImagesPtrOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesOutput) DataDiskImages() DataDiskImageEncryptionArrayOutput {
	return o.ApplyT(func(v EncryptionImages) []DataDiskImageEncryption { return v.DataDiskImages }).(DataDiskImageEncryptionArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesOutput) OsDiskImage() OSDiskImageEncryptionPtrOutput {
	return o.ApplyT(func(v EncryptionImages) *OSDiskImageEncryption { return v.OsDiskImage }).(OSDiskImageEncryptionPtrOutput)
}

type EncryptionImagesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionImagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImages)(nil)).Elem()
}

func (o EncryptionImagesPtrOutput) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return o
}

func (o EncryptionImagesPtrOutput) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return o
}

func (o EncryptionImagesPtrOutput) Elem() EncryptionImagesOutput {
	return o.ApplyT(func(v *EncryptionImages) EncryptionImages {
		if v != nil {
			return *v
		}
		var ret EncryptionImages
		return ret
	}).(EncryptionImagesOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesPtrOutput) DataDiskImages() DataDiskImageEncryptionArrayOutput {
	return o.ApplyT(func(v *EncryptionImages) []DataDiskImageEncryption {
		if v == nil {
			return nil
		}
		return v.DataDiskImages
	}).(DataDiskImageEncryptionArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesPtrOutput) OsDiskImage() OSDiskImageEncryptionPtrOutput {
	return o.ApplyT(func(v *EncryptionImages) *OSDiskImageEncryption {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(OSDiskImageEncryptionPtrOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesResponse struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages []DataDiskImageEncryptionResponse `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage *OSDiskImageEncryptionResponse `pulumi:"osDiskImage"`
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionImagesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImagesResponse)(nil)).Elem()
}

func (o EncryptionImagesResponseOutput) ToEncryptionImagesResponseOutput() EncryptionImagesResponseOutput {
	return o
}

func (o EncryptionImagesResponseOutput) ToEncryptionImagesResponseOutputWithContext(ctx context.Context) EncryptionImagesResponseOutput {
	return o
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesResponseOutput) DataDiskImages() DataDiskImageEncryptionResponseArrayOutput {
	return o.ApplyT(func(v EncryptionImagesResponse) []DataDiskImageEncryptionResponse { return v.DataDiskImages }).(DataDiskImageEncryptionResponseArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesResponseOutput) OsDiskImage() OSDiskImageEncryptionResponsePtrOutput {
	return o.ApplyT(func(v EncryptionImagesResponse) *OSDiskImageEncryptionResponse { return v.OsDiskImage }).(OSDiskImageEncryptionResponsePtrOutput)
}

type EncryptionImagesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionImagesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImagesResponse)(nil)).Elem()
}

func (o EncryptionImagesResponsePtrOutput) ToEncryptionImagesResponsePtrOutput() EncryptionImagesResponsePtrOutput {
	return o
}

func (o EncryptionImagesResponsePtrOutput) ToEncryptionImagesResponsePtrOutputWithContext(ctx context.Context) EncryptionImagesResponsePtrOutput {
	return o
}

func (o EncryptionImagesResponsePtrOutput) Elem() EncryptionImagesResponseOutput {
	return o.ApplyT(func(v *EncryptionImagesResponse) EncryptionImagesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionImagesResponse
		return ret
	}).(EncryptionImagesResponseOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesResponsePtrOutput) DataDiskImages() DataDiskImageEncryptionResponseArrayOutput {
	return o.ApplyT(func(v *EncryptionImagesResponse) []DataDiskImageEncryptionResponse {
		if v == nil {
			return nil
		}
		return v.DataDiskImages
	}).(DataDiskImageEncryptionResponseArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesResponsePtrOutput) OsDiskImage() OSDiskImageEncryptionResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionImagesResponse) *OSDiskImageEncryptionResponse {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(OSDiskImageEncryptionResponsePtrOutput)
}

// A custom action that can be performed with a Gallery Application Version.
type GalleryApplicationCustomAction struct {
	// Description to help the users understand what this custom action does.
	Description *string `pulumi:"description"`
	// The name of the custom action.  Must be unique within the Gallery Application Version.
	Name string `pulumi:"name"`
	// The parameters that this custom action uses
	Parameters []GalleryApplicationCustomActionParameter `pulumi:"parameters"`
	// The script to run when executing this custom action.
	Script string `pulumi:"script"`
}

// GalleryApplicationCustomActionInput is an input type that accepts GalleryApplicationCustomActionArgs and GalleryApplicationCustomActionOutput values.
// You can construct a concrete instance of `GalleryApplicationCustomActionInput` via:
//
//	GalleryApplicationCustomActionArgs{...}
type GalleryApplicationCustomActionInput interface {
	pulumi.Input

	ToGalleryApplicationCustomActionOutput() GalleryApplicationCustomActionOutput
	ToGalleryApplicationCustomActionOutputWithContext(context.Context) GalleryApplicationCustomActionOutput
}

// A custom action that can be performed with a Gallery Application Version.
type GalleryApplicationCustomActionArgs struct {
	// Description to help the users understand what this custom action does.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the custom action.  Must be unique within the Gallery Application Version.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameters that this custom action uses
	Parameters GalleryApplicationCustomActionParameterArrayInput `pulumi:"parameters"`
	// The script to run when executing this custom action.
	Script pulumi.StringInput `pulumi:"script"`
}

func (GalleryApplicationCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationCustomAction)(nil)).Elem()
}

func (i GalleryApplicationCustomActionArgs) ToGalleryApplicationCustomActionOutput() GalleryApplicationCustomActionOutput {
	return i.ToGalleryApplicationCustomActionOutputWithContext(context.Background())
}

func (i GalleryApplicationCustomActionArgs) ToGalleryApplicationCustomActionOutputWithContext(ctx context.Context) GalleryApplicationCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationCustomActionOutput)
}

// GalleryApplicationCustomActionArrayInput is an input type that accepts GalleryApplicationCustomActionArray and GalleryApplicationCustomActionArrayOutput values.
// You can construct a concrete instance of `GalleryApplicationCustomActionArrayInput` via:
//
//	GalleryApplicationCustomActionArray{ GalleryApplicationCustomActionArgs{...} }
type GalleryApplicationCustomActionArrayInput interface {
	pulumi.Input

	ToGalleryApplicationCustomActionArrayOutput() GalleryApplicationCustomActionArrayOutput
	ToGalleryApplicationCustomActionArrayOutputWithContext(context.Context) GalleryApplicationCustomActionArrayOutput
}

type GalleryApplicationCustomActionArray []GalleryApplicationCustomActionInput

func (GalleryApplicationCustomActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryApplicationCustomAction)(nil)).Elem()
}

func (i GalleryApplicationCustomActionArray) ToGalleryApplicationCustomActionArrayOutput() GalleryApplicationCustomActionArrayOutput {
	return i.ToGalleryApplicationCustomActionArrayOutputWithContext(context.Background())
}

func (i GalleryApplicationCustomActionArray) ToGalleryApplicationCustomActionArrayOutputWithContext(ctx context.Context) GalleryApplicationCustomActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationCustomActionArrayOutput)
}

// A custom action that can be performed with a Gallery Application Version.
type GalleryApplicationCustomActionOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationCustomAction)(nil)).Elem()
}

func (o GalleryApplicationCustomActionOutput) ToGalleryApplicationCustomActionOutput() GalleryApplicationCustomActionOutput {
	return o
}

func (o GalleryApplicationCustomActionOutput) ToGalleryApplicationCustomActionOutputWithContext(ctx context.Context) GalleryApplicationCustomActionOutput {
	return o
}

// Description to help the users understand what this custom action does.
func (o GalleryApplicationCustomActionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomAction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the custom action.  Must be unique within the Gallery Application Version.
func (o GalleryApplicationCustomActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationCustomAction) string { return v.Name }).(pulumi.StringOutput)
}

// The parameters that this custom action uses
func (o GalleryApplicationCustomActionOutput) Parameters() GalleryApplicationCustomActionParameterArrayOutput {
	return o.ApplyT(func(v GalleryApplicationCustomAction) []GalleryApplicationCustomActionParameter { return v.Parameters }).(GalleryApplicationCustomActionParameterArrayOutput)
}

// The script to run when executing this custom action.
func (o GalleryApplicationCustomActionOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationCustomAction) string { return v.Script }).(pulumi.StringOutput)
}

type GalleryApplicationCustomActionArrayOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryApplicationCustomAction)(nil)).Elem()
}

func (o GalleryApplicationCustomActionArrayOutput) ToGalleryApplicationCustomActionArrayOutput() GalleryApplicationCustomActionArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionArrayOutput) ToGalleryApplicationCustomActionArrayOutputWithContext(ctx context.Context) GalleryApplicationCustomActionArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionArrayOutput) Index(i pulumi.IntInput) GalleryApplicationCustomActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryApplicationCustomAction {
		return vs[0].([]GalleryApplicationCustomAction)[vs[1].(int)]
	}).(GalleryApplicationCustomActionOutput)
}

// The definition of a parameter that can be passed to a custom action of a Gallery Application Version.
type GalleryApplicationCustomActionParameter struct {
	// The default value of the parameter.  Only applies to string types
	DefaultValue *string `pulumi:"defaultValue"`
	// A description to help users understand what this parameter means
	Description *string `pulumi:"description"`
	// The name of the custom action.  Must be unique within the Gallery Application Version.
	Name string `pulumi:"name"`
	// Indicates whether this parameter must be passed when running the custom action.
	Required *bool `pulumi:"required"`
	// Specifies the type of the custom action parameter. Possible values are: String, ConfigurationDataBlob or LogOutputBlob
	Type *GalleryApplicationCustomActionParameterType `pulumi:"type"`
}

// GalleryApplicationCustomActionParameterInput is an input type that accepts GalleryApplicationCustomActionParameterArgs and GalleryApplicationCustomActionParameterOutput values.
// You can construct a concrete instance of `GalleryApplicationCustomActionParameterInput` via:
//
//	GalleryApplicationCustomActionParameterArgs{...}
type GalleryApplicationCustomActionParameterInput interface {
	pulumi.Input

	ToGalleryApplicationCustomActionParameterOutput() GalleryApplicationCustomActionParameterOutput
	ToGalleryApplicationCustomActionParameterOutputWithContext(context.Context) GalleryApplicationCustomActionParameterOutput
}

// The definition of a parameter that can be passed to a custom action of a Gallery Application Version.
type GalleryApplicationCustomActionParameterArgs struct {
	// The default value of the parameter.  Only applies to string types
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description to help users understand what this parameter means
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the custom action.  Must be unique within the Gallery Application Version.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether this parameter must be passed when running the custom action.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Specifies the type of the custom action parameter. Possible values are: String, ConfigurationDataBlob or LogOutputBlob
	Type GalleryApplicationCustomActionParameterTypePtrInput `pulumi:"type"`
}

func (GalleryApplicationCustomActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationCustomActionParameter)(nil)).Elem()
}

func (i GalleryApplicationCustomActionParameterArgs) ToGalleryApplicationCustomActionParameterOutput() GalleryApplicationCustomActionParameterOutput {
	return i.ToGalleryApplicationCustomActionParameterOutputWithContext(context.Background())
}

func (i GalleryApplicationCustomActionParameterArgs) ToGalleryApplicationCustomActionParameterOutputWithContext(ctx context.Context) GalleryApplicationCustomActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationCustomActionParameterOutput)
}

// GalleryApplicationCustomActionParameterArrayInput is an input type that accepts GalleryApplicationCustomActionParameterArray and GalleryApplicationCustomActionParameterArrayOutput values.
// You can construct a concrete instance of `GalleryApplicationCustomActionParameterArrayInput` via:
//
//	GalleryApplicationCustomActionParameterArray{ GalleryApplicationCustomActionParameterArgs{...} }
type GalleryApplicationCustomActionParameterArrayInput interface {
	pulumi.Input

	ToGalleryApplicationCustomActionParameterArrayOutput() GalleryApplicationCustomActionParameterArrayOutput
	ToGalleryApplicationCustomActionParameterArrayOutputWithContext(context.Context) GalleryApplicationCustomActionParameterArrayOutput
}

type GalleryApplicationCustomActionParameterArray []GalleryApplicationCustomActionParameterInput

func (GalleryApplicationCustomActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryApplicationCustomActionParameter)(nil)).Elem()
}

func (i GalleryApplicationCustomActionParameterArray) ToGalleryApplicationCustomActionParameterArrayOutput() GalleryApplicationCustomActionParameterArrayOutput {
	return i.ToGalleryApplicationCustomActionParameterArrayOutputWithContext(context.Background())
}

func (i GalleryApplicationCustomActionParameterArray) ToGalleryApplicationCustomActionParameterArrayOutputWithContext(ctx context.Context) GalleryApplicationCustomActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationCustomActionParameterArrayOutput)
}

// The definition of a parameter that can be passed to a custom action of a Gallery Application Version.
type GalleryApplicationCustomActionParameterOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationCustomActionParameter)(nil)).Elem()
}

func (o GalleryApplicationCustomActionParameterOutput) ToGalleryApplicationCustomActionParameterOutput() GalleryApplicationCustomActionParameterOutput {
	return o
}

func (o GalleryApplicationCustomActionParameterOutput) ToGalleryApplicationCustomActionParameterOutputWithContext(ctx context.Context) GalleryApplicationCustomActionParameterOutput {
	return o
}

// The default value of the parameter.  Only applies to string types
func (o GalleryApplicationCustomActionParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description to help users understand what this parameter means
func (o GalleryApplicationCustomActionParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the custom action.  Must be unique within the Gallery Application Version.
func (o GalleryApplicationCustomActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether this parameter must be passed when running the custom action.
func (o GalleryApplicationCustomActionParameterOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameter) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Specifies the type of the custom action parameter. Possible values are: String, ConfigurationDataBlob or LogOutputBlob
func (o GalleryApplicationCustomActionParameterOutput) Type() GalleryApplicationCustomActionParameterTypePtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameter) *GalleryApplicationCustomActionParameterType {
		return v.Type
	}).(GalleryApplicationCustomActionParameterTypePtrOutput)
}

type GalleryApplicationCustomActionParameterArrayOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryApplicationCustomActionParameter)(nil)).Elem()
}

func (o GalleryApplicationCustomActionParameterArrayOutput) ToGalleryApplicationCustomActionParameterArrayOutput() GalleryApplicationCustomActionParameterArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionParameterArrayOutput) ToGalleryApplicationCustomActionParameterArrayOutputWithContext(ctx context.Context) GalleryApplicationCustomActionParameterArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionParameterArrayOutput) Index(i pulumi.IntInput) GalleryApplicationCustomActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryApplicationCustomActionParameter {
		return vs[0].([]GalleryApplicationCustomActionParameter)[vs[1].(int)]
	}).(GalleryApplicationCustomActionParameterOutput)
}

// The definition of a parameter that can be passed to a custom action of a Gallery Application Version.
type GalleryApplicationCustomActionParameterResponse struct {
	// The default value of the parameter.  Only applies to string types
	DefaultValue *string `pulumi:"defaultValue"`
	// A description to help users understand what this parameter means
	Description *string `pulumi:"description"`
	// The name of the custom action.  Must be unique within the Gallery Application Version.
	Name string `pulumi:"name"`
	// Indicates whether this parameter must be passed when running the custom action.
	Required *bool `pulumi:"required"`
	// Specifies the type of the custom action parameter. Possible values are: String, ConfigurationDataBlob or LogOutputBlob
	Type *string `pulumi:"type"`
}

// The definition of a parameter that can be passed to a custom action of a Gallery Application Version.
type GalleryApplicationCustomActionParameterResponseOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationCustomActionParameterResponse)(nil)).Elem()
}

func (o GalleryApplicationCustomActionParameterResponseOutput) ToGalleryApplicationCustomActionParameterResponseOutput() GalleryApplicationCustomActionParameterResponseOutput {
	return o
}

func (o GalleryApplicationCustomActionParameterResponseOutput) ToGalleryApplicationCustomActionParameterResponseOutputWithContext(ctx context.Context) GalleryApplicationCustomActionParameterResponseOutput {
	return o
}

// The default value of the parameter.  Only applies to string types
func (o GalleryApplicationCustomActionParameterResponseOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameterResponse) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description to help users understand what this parameter means
func (o GalleryApplicationCustomActionParameterResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameterResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the custom action.  Must be unique within the Gallery Application Version.
func (o GalleryApplicationCustomActionParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether this parameter must be passed when running the custom action.
func (o GalleryApplicationCustomActionParameterResponseOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameterResponse) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Specifies the type of the custom action parameter. Possible values are: String, ConfigurationDataBlob or LogOutputBlob
func (o GalleryApplicationCustomActionParameterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionParameterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GalleryApplicationCustomActionParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryApplicationCustomActionParameterResponse)(nil)).Elem()
}

func (o GalleryApplicationCustomActionParameterResponseArrayOutput) ToGalleryApplicationCustomActionParameterResponseArrayOutput() GalleryApplicationCustomActionParameterResponseArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionParameterResponseArrayOutput) ToGalleryApplicationCustomActionParameterResponseArrayOutputWithContext(ctx context.Context) GalleryApplicationCustomActionParameterResponseArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionParameterResponseArrayOutput) Index(i pulumi.IntInput) GalleryApplicationCustomActionParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryApplicationCustomActionParameterResponse {
		return vs[0].([]GalleryApplicationCustomActionParameterResponse)[vs[1].(int)]
	}).(GalleryApplicationCustomActionParameterResponseOutput)
}

// A custom action that can be performed with a Gallery Application Version.
type GalleryApplicationCustomActionResponse struct {
	// Description to help the users understand what this custom action does.
	Description *string `pulumi:"description"`
	// The name of the custom action.  Must be unique within the Gallery Application Version.
	Name string `pulumi:"name"`
	// The parameters that this custom action uses
	Parameters []GalleryApplicationCustomActionParameterResponse `pulumi:"parameters"`
	// The script to run when executing this custom action.
	Script string `pulumi:"script"`
}

// A custom action that can be performed with a Gallery Application Version.
type GalleryApplicationCustomActionResponseOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationCustomActionResponse)(nil)).Elem()
}

func (o GalleryApplicationCustomActionResponseOutput) ToGalleryApplicationCustomActionResponseOutput() GalleryApplicationCustomActionResponseOutput {
	return o
}

func (o GalleryApplicationCustomActionResponseOutput) ToGalleryApplicationCustomActionResponseOutputWithContext(ctx context.Context) GalleryApplicationCustomActionResponseOutput {
	return o
}

// Description to help the users understand what this custom action does.
func (o GalleryApplicationCustomActionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the custom action.  Must be unique within the Gallery Application Version.
func (o GalleryApplicationCustomActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The parameters that this custom action uses
func (o GalleryApplicationCustomActionResponseOutput) Parameters() GalleryApplicationCustomActionParameterResponseArrayOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionResponse) []GalleryApplicationCustomActionParameterResponse {
		return v.Parameters
	}).(GalleryApplicationCustomActionParameterResponseArrayOutput)
}

// The script to run when executing this custom action.
func (o GalleryApplicationCustomActionResponseOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationCustomActionResponse) string { return v.Script }).(pulumi.StringOutput)
}

type GalleryApplicationCustomActionResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryApplicationCustomActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryApplicationCustomActionResponse)(nil)).Elem()
}

func (o GalleryApplicationCustomActionResponseArrayOutput) ToGalleryApplicationCustomActionResponseArrayOutput() GalleryApplicationCustomActionResponseArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionResponseArrayOutput) ToGalleryApplicationCustomActionResponseArrayOutputWithContext(ctx context.Context) GalleryApplicationCustomActionResponseArrayOutput {
	return o
}

func (o GalleryApplicationCustomActionResponseArrayOutput) Index(i pulumi.IntInput) GalleryApplicationCustomActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryApplicationCustomActionResponse {
		return vs[0].([]GalleryApplicationCustomActionResponse)[vs[1].(int)]
	}).(GalleryApplicationCustomActionResponseOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfile struct {
	// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
	AdvancedSettings map[string]string `pulumi:"advancedSettings"`
	// A list of custom actions that can be performed with this Gallery Application Version.
	CustomActions []GalleryApplicationCustomAction `pulumi:"customActions"`
	// Optional. Whether or not this application reports health.
	EnableHealthCheck *bool `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool               `pulumi:"excludeFromLatest"`
	ManageActions     *UserArtifactManage `pulumi:"manageActions"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
	ReplicationMode *string `pulumi:"replicationMode"`
	// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
	Settings *UserArtifactSettings `pulumi:"settings"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSource `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
	TargetExtendedLocations []GalleryTargetExtendedLocation `pulumi:"targetExtendedLocations"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegion `pulumi:"targetRegions"`
}

// GalleryApplicationVersionPublishingProfileInput is an input type that accepts GalleryApplicationVersionPublishingProfileArgs and GalleryApplicationVersionPublishingProfileOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionPublishingProfileInput` via:
//
//	GalleryApplicationVersionPublishingProfileArgs{...}
type GalleryApplicationVersionPublishingProfileInput interface {
	pulumi.Input

	ToGalleryApplicationVersionPublishingProfileOutput() GalleryApplicationVersionPublishingProfileOutput
	ToGalleryApplicationVersionPublishingProfileOutputWithContext(context.Context) GalleryApplicationVersionPublishingProfileOutput
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileArgs struct {
	// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
	AdvancedSettings pulumi.StringMapInput `pulumi:"advancedSettings"`
	// A list of custom actions that can be performed with this Gallery Application Version.
	CustomActions GalleryApplicationCustomActionArrayInput `pulumi:"customActions"`
	// Optional. Whether or not this application reports health.
	EnableHealthCheck pulumi.BoolPtrInput `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate pulumi.StringPtrInput `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest pulumi.BoolPtrInput        `pulumi:"excludeFromLatest"`
	ManageActions     UserArtifactManagePtrInput `pulumi:"manageActions"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount pulumi.IntPtrInput `pulumi:"replicaCount"`
	// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
	ReplicationMode pulumi.StringPtrInput `pulumi:"replicationMode"`
	// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
	Settings UserArtifactSettingsPtrInput `pulumi:"settings"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSourceInput `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
	// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
	TargetExtendedLocations GalleryTargetExtendedLocationArrayInput `pulumi:"targetExtendedLocations"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions TargetRegionArrayInput `pulumi:"targetRegions"`
}

func (GalleryApplicationVersionPublishingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfile)(nil)).Elem()
}

func (i GalleryApplicationVersionPublishingProfileArgs) ToGalleryApplicationVersionPublishingProfileOutput() GalleryApplicationVersionPublishingProfileOutput {
	return i.ToGalleryApplicationVersionPublishingProfileOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionPublishingProfileArgs) ToGalleryApplicationVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfileOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionPublishingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryApplicationVersionPublishingProfileOutput) ToGalleryApplicationVersionPublishingProfileOutput() GalleryApplicationVersionPublishingProfileOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileOutput) ToGalleryApplicationVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileOutput {
	return o
}

// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
func (o GalleryApplicationVersionPublishingProfileOutput) AdvancedSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) map[string]string { return v.AdvancedSettings }).(pulumi.StringMapOutput)
}

// A list of custom actions that can be performed with this Gallery Application Version.
func (o GalleryApplicationVersionPublishingProfileOutput) CustomActions() GalleryApplicationCustomActionArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) []GalleryApplicationCustomAction {
		return v.CustomActions
	}).(GalleryApplicationCustomActionArrayOutput)
}

// Optional. Whether or not this application reports health.
func (o GalleryApplicationVersionPublishingProfileOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *bool { return v.EnableHealthCheck }).(pulumi.BoolPtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryApplicationVersionPublishingProfileOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

func (o GalleryApplicationVersionPublishingProfileOutput) ManageActions() UserArtifactManagePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *UserArtifactManage { return v.ManageActions }).(UserArtifactManagePtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *string { return v.ReplicationMode }).(pulumi.StringPtrOutput)
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
func (o GalleryApplicationVersionPublishingProfileOutput) Settings() UserArtifactSettingsPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *UserArtifactSettings { return v.Settings }).(UserArtifactSettingsPtrOutput)
}

// The source image from which the Image Version is going to be created.
func (o GalleryApplicationVersionPublishingProfileOutput) Source() UserArtifactSourceOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) UserArtifactSource { return v.Source }).(UserArtifactSourceOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) TargetExtendedLocations() GalleryTargetExtendedLocationArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) []GalleryTargetExtendedLocation {
		return v.TargetExtendedLocations
	}).(GalleryTargetExtendedLocationArrayOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) []TargetRegion { return v.TargetRegions }).(TargetRegionArrayOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileResponse struct {
	// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
	AdvancedSettings map[string]string `pulumi:"advancedSettings"`
	// A list of custom actions that can be performed with this Gallery Application Version.
	CustomActions []GalleryApplicationCustomActionResponse `pulumi:"customActions"`
	// Optional. Whether or not this application reports health.
	EnableHealthCheck *bool `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool                       `pulumi:"excludeFromLatest"`
	ManageActions     *UserArtifactManageResponse `pulumi:"manageActions"`
	// The timestamp for when the gallery image version is published.
	PublishedDate string `pulumi:"publishedDate"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
	ReplicationMode *string `pulumi:"replicationMode"`
	// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
	Settings *UserArtifactSettingsResponse `pulumi:"settings"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSourceResponse `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
	TargetExtendedLocations []GalleryTargetExtendedLocationResponse `pulumi:"targetExtendedLocations"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegionResponse `pulumi:"targetRegions"`
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionPublishingProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ToGalleryApplicationVersionPublishingProfileResponseOutput() GalleryApplicationVersionPublishingProfileResponseOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ToGalleryApplicationVersionPublishingProfileResponseOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponseOutput {
	return o
}

// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) AdvancedSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) map[string]string {
		return v.AdvancedSettings
	}).(pulumi.StringMapOutput)
}

// A list of custom actions that can be performed with this Gallery Application Version.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) CustomActions() GalleryApplicationCustomActionResponseArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) []GalleryApplicationCustomActionResponse {
		return v.CustomActions
	}).(GalleryApplicationCustomActionResponseArrayOutput)
}

// Optional. Whether or not this application reports health.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *bool { return v.EnableHealthCheck }).(pulumi.BoolPtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ManageActions() UserArtifactManageResponsePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *UserArtifactManageResponse {
		return v.ManageActions
	}).(UserArtifactManageResponsePtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) PublishedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) string { return v.PublishedDate }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *string { return v.ReplicationMode }).(pulumi.StringPtrOutput)
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) Settings() UserArtifactSettingsResponsePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *UserArtifactSettingsResponse {
		return v.Settings
	}).(UserArtifactSettingsResponsePtrOutput)
}

// The source image from which the Image Version is going to be created.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) Source() UserArtifactSourceResponseOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) UserArtifactSourceResponse { return v.Source }).(UserArtifactSourceResponseOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) TargetExtendedLocations() GalleryTargetExtendedLocationResponseArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) []GalleryTargetExtendedLocationResponse {
		return v.TargetExtendedLocations
	}).(GalleryTargetExtendedLocationResponseArrayOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) []TargetRegionResponse {
		return v.TargetRegions
	}).(TargetRegionResponseArrayOutput)
}

// The safety profile of the Gallery Application Version.
type GalleryApplicationVersionSafetyProfile struct {
	// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
	AllowDeletionOfReplicatedLocations *bool `pulumi:"allowDeletionOfReplicatedLocations"`
}

// GalleryApplicationVersionSafetyProfileInput is an input type that accepts GalleryApplicationVersionSafetyProfileArgs and GalleryApplicationVersionSafetyProfileOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionSafetyProfileInput` via:
//
//	GalleryApplicationVersionSafetyProfileArgs{...}
type GalleryApplicationVersionSafetyProfileInput interface {
	pulumi.Input

	ToGalleryApplicationVersionSafetyProfileOutput() GalleryApplicationVersionSafetyProfileOutput
	ToGalleryApplicationVersionSafetyProfileOutputWithContext(context.Context) GalleryApplicationVersionSafetyProfileOutput
}

// The safety profile of the Gallery Application Version.
type GalleryApplicationVersionSafetyProfileArgs struct {
	// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
	AllowDeletionOfReplicatedLocations pulumi.BoolPtrInput `pulumi:"allowDeletionOfReplicatedLocations"`
}

func (GalleryApplicationVersionSafetyProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionSafetyProfile)(nil)).Elem()
}

func (i GalleryApplicationVersionSafetyProfileArgs) ToGalleryApplicationVersionSafetyProfileOutput() GalleryApplicationVersionSafetyProfileOutput {
	return i.ToGalleryApplicationVersionSafetyProfileOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionSafetyProfileArgs) ToGalleryApplicationVersionSafetyProfileOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionSafetyProfileOutput)
}

func (i GalleryApplicationVersionSafetyProfileArgs) ToGalleryApplicationVersionSafetyProfilePtrOutput() GalleryApplicationVersionSafetyProfilePtrOutput {
	return i.ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionSafetyProfileArgs) ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionSafetyProfileOutput).ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(ctx)
}

// GalleryApplicationVersionSafetyProfilePtrInput is an input type that accepts GalleryApplicationVersionSafetyProfileArgs, GalleryApplicationVersionSafetyProfilePtr and GalleryApplicationVersionSafetyProfilePtrOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionSafetyProfilePtrInput` via:
//
//	        GalleryApplicationVersionSafetyProfileArgs{...}
//
//	or:
//
//	        nil
type GalleryApplicationVersionSafetyProfilePtrInput interface {
	pulumi.Input

	ToGalleryApplicationVersionSafetyProfilePtrOutput() GalleryApplicationVersionSafetyProfilePtrOutput
	ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(context.Context) GalleryApplicationVersionSafetyProfilePtrOutput
}

type galleryApplicationVersionSafetyProfilePtrType GalleryApplicationVersionSafetyProfileArgs

func GalleryApplicationVersionSafetyProfilePtr(v *GalleryApplicationVersionSafetyProfileArgs) GalleryApplicationVersionSafetyProfilePtrInput {
	return (*galleryApplicationVersionSafetyProfilePtrType)(v)
}

func (*galleryApplicationVersionSafetyProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionSafetyProfile)(nil)).Elem()
}

func (i *galleryApplicationVersionSafetyProfilePtrType) ToGalleryApplicationVersionSafetyProfilePtrOutput() GalleryApplicationVersionSafetyProfilePtrOutput {
	return i.ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(context.Background())
}

func (i *galleryApplicationVersionSafetyProfilePtrType) ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionSafetyProfilePtrOutput)
}

// The safety profile of the Gallery Application Version.
type GalleryApplicationVersionSafetyProfileOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionSafetyProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionSafetyProfile)(nil)).Elem()
}

func (o GalleryApplicationVersionSafetyProfileOutput) ToGalleryApplicationVersionSafetyProfileOutput() GalleryApplicationVersionSafetyProfileOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfileOutput) ToGalleryApplicationVersionSafetyProfileOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfileOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfileOutput) ToGalleryApplicationVersionSafetyProfilePtrOutput() GalleryApplicationVersionSafetyProfilePtrOutput {
	return o.ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(context.Background())
}

func (o GalleryApplicationVersionSafetyProfileOutput) ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryApplicationVersionSafetyProfile) *GalleryApplicationVersionSafetyProfile {
		return &v
	}).(GalleryApplicationVersionSafetyProfilePtrOutput)
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryApplicationVersionSafetyProfileOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionSafetyProfile) *bool { return v.AllowDeletionOfReplicatedLocations }).(pulumi.BoolPtrOutput)
}

type GalleryApplicationVersionSafetyProfilePtrOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionSafetyProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionSafetyProfile)(nil)).Elem()
}

func (o GalleryApplicationVersionSafetyProfilePtrOutput) ToGalleryApplicationVersionSafetyProfilePtrOutput() GalleryApplicationVersionSafetyProfilePtrOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfilePtrOutput) ToGalleryApplicationVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfilePtrOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfilePtrOutput) Elem() GalleryApplicationVersionSafetyProfileOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionSafetyProfile) GalleryApplicationVersionSafetyProfile {
		if v != nil {
			return *v
		}
		var ret GalleryApplicationVersionSafetyProfile
		return ret
	}).(GalleryApplicationVersionSafetyProfileOutput)
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryApplicationVersionSafetyProfilePtrOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionSafetyProfile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDeletionOfReplicatedLocations
	}).(pulumi.BoolPtrOutput)
}

// The safety profile of the Gallery Application Version.
type GalleryApplicationVersionSafetyProfileResponse struct {
	// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
	AllowDeletionOfReplicatedLocations *bool `pulumi:"allowDeletionOfReplicatedLocations"`
}

// The safety profile of the Gallery Application Version.
type GalleryApplicationVersionSafetyProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionSafetyProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionSafetyProfileResponse)(nil)).Elem()
}

func (o GalleryApplicationVersionSafetyProfileResponseOutput) ToGalleryApplicationVersionSafetyProfileResponseOutput() GalleryApplicationVersionSafetyProfileResponseOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfileResponseOutput) ToGalleryApplicationVersionSafetyProfileResponseOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfileResponseOutput {
	return o
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryApplicationVersionSafetyProfileResponseOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionSafetyProfileResponse) *bool {
		return v.AllowDeletionOfReplicatedLocations
	}).(pulumi.BoolPtrOutput)
}

type GalleryApplicationVersionSafetyProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionSafetyProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionSafetyProfileResponse)(nil)).Elem()
}

func (o GalleryApplicationVersionSafetyProfileResponsePtrOutput) ToGalleryApplicationVersionSafetyProfileResponsePtrOutput() GalleryApplicationVersionSafetyProfileResponsePtrOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfileResponsePtrOutput) ToGalleryApplicationVersionSafetyProfileResponsePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionSafetyProfileResponsePtrOutput {
	return o
}

func (o GalleryApplicationVersionSafetyProfileResponsePtrOutput) Elem() GalleryApplicationVersionSafetyProfileResponseOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionSafetyProfileResponse) GalleryApplicationVersionSafetyProfileResponse {
		if v != nil {
			return *v
		}
		var ret GalleryApplicationVersionSafetyProfileResponse
		return ret
	}).(GalleryApplicationVersionSafetyProfileResponseOutput)
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryApplicationVersionSafetyProfileResponsePtrOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionSafetyProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDeletionOfReplicatedLocations
	}).(pulumi.BoolPtrOutput)
}

// The source of the gallery artifact version.
type GalleryArtifactVersionFullSource struct {
	// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
	CommunityGalleryImageId *string `pulumi:"communityGalleryImageId"`
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id *string `pulumi:"id"`
}

// GalleryArtifactVersionFullSourceInput is an input type that accepts GalleryArtifactVersionFullSourceArgs and GalleryArtifactVersionFullSourceOutput values.
// You can construct a concrete instance of `GalleryArtifactVersionFullSourceInput` via:
//
//	GalleryArtifactVersionFullSourceArgs{...}
type GalleryArtifactVersionFullSourceInput interface {
	pulumi.Input

	ToGalleryArtifactVersionFullSourceOutput() GalleryArtifactVersionFullSourceOutput
	ToGalleryArtifactVersionFullSourceOutputWithContext(context.Context) GalleryArtifactVersionFullSourceOutput
}

// The source of the gallery artifact version.
type GalleryArtifactVersionFullSourceArgs struct {
	// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
	CommunityGalleryImageId pulumi.StringPtrInput `pulumi:"communityGalleryImageId"`
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GalleryArtifactVersionFullSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionFullSource)(nil)).Elem()
}

func (i GalleryArtifactVersionFullSourceArgs) ToGalleryArtifactVersionFullSourceOutput() GalleryArtifactVersionFullSourceOutput {
	return i.ToGalleryArtifactVersionFullSourceOutputWithContext(context.Background())
}

func (i GalleryArtifactVersionFullSourceArgs) ToGalleryArtifactVersionFullSourceOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionFullSourceOutput)
}

func (i GalleryArtifactVersionFullSourceArgs) ToGalleryArtifactVersionFullSourcePtrOutput() GalleryArtifactVersionFullSourcePtrOutput {
	return i.ToGalleryArtifactVersionFullSourcePtrOutputWithContext(context.Background())
}

func (i GalleryArtifactVersionFullSourceArgs) ToGalleryArtifactVersionFullSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionFullSourceOutput).ToGalleryArtifactVersionFullSourcePtrOutputWithContext(ctx)
}

// GalleryArtifactVersionFullSourcePtrInput is an input type that accepts GalleryArtifactVersionFullSourceArgs, GalleryArtifactVersionFullSourcePtr and GalleryArtifactVersionFullSourcePtrOutput values.
// You can construct a concrete instance of `GalleryArtifactVersionFullSourcePtrInput` via:
//
//	        GalleryArtifactVersionFullSourceArgs{...}
//
//	or:
//
//	        nil
type GalleryArtifactVersionFullSourcePtrInput interface {
	pulumi.Input

	ToGalleryArtifactVersionFullSourcePtrOutput() GalleryArtifactVersionFullSourcePtrOutput
	ToGalleryArtifactVersionFullSourcePtrOutputWithContext(context.Context) GalleryArtifactVersionFullSourcePtrOutput
}

type galleryArtifactVersionFullSourcePtrType GalleryArtifactVersionFullSourceArgs

func GalleryArtifactVersionFullSourcePtr(v *GalleryArtifactVersionFullSourceArgs) GalleryArtifactVersionFullSourcePtrInput {
	return (*galleryArtifactVersionFullSourcePtrType)(v)
}

func (*galleryArtifactVersionFullSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionFullSource)(nil)).Elem()
}

func (i *galleryArtifactVersionFullSourcePtrType) ToGalleryArtifactVersionFullSourcePtrOutput() GalleryArtifactVersionFullSourcePtrOutput {
	return i.ToGalleryArtifactVersionFullSourcePtrOutputWithContext(context.Background())
}

func (i *galleryArtifactVersionFullSourcePtrType) ToGalleryArtifactVersionFullSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionFullSourcePtrOutput)
}

// The source of the gallery artifact version.
type GalleryArtifactVersionFullSourceOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionFullSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionFullSource)(nil)).Elem()
}

func (o GalleryArtifactVersionFullSourceOutput) ToGalleryArtifactVersionFullSourceOutput() GalleryArtifactVersionFullSourceOutput {
	return o
}

func (o GalleryArtifactVersionFullSourceOutput) ToGalleryArtifactVersionFullSourceOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourceOutput {
	return o
}

func (o GalleryArtifactVersionFullSourceOutput) ToGalleryArtifactVersionFullSourcePtrOutput() GalleryArtifactVersionFullSourcePtrOutput {
	return o.ToGalleryArtifactVersionFullSourcePtrOutputWithContext(context.Background())
}

func (o GalleryArtifactVersionFullSourceOutput) ToGalleryArtifactVersionFullSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryArtifactVersionFullSource) *GalleryArtifactVersionFullSource {
		return &v
	}).(GalleryArtifactVersionFullSourcePtrOutput)
}

// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
func (o GalleryArtifactVersionFullSourceOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionFullSource) *string { return v.CommunityGalleryImageId }).(pulumi.StringPtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionFullSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionFullSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GalleryArtifactVersionFullSourcePtrOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionFullSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionFullSource)(nil)).Elem()
}

func (o GalleryArtifactVersionFullSourcePtrOutput) ToGalleryArtifactVersionFullSourcePtrOutput() GalleryArtifactVersionFullSourcePtrOutput {
	return o
}

func (o GalleryArtifactVersionFullSourcePtrOutput) ToGalleryArtifactVersionFullSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourcePtrOutput {
	return o
}

func (o GalleryArtifactVersionFullSourcePtrOutput) Elem() GalleryArtifactVersionFullSourceOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionFullSource) GalleryArtifactVersionFullSource {
		if v != nil {
			return *v
		}
		var ret GalleryArtifactVersionFullSource
		return ret
	}).(GalleryArtifactVersionFullSourceOutput)
}

// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
func (o GalleryArtifactVersionFullSourcePtrOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionFullSource) *string {
		if v == nil {
			return nil
		}
		return v.CommunityGalleryImageId
	}).(pulumi.StringPtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionFullSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionFullSource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The source of the gallery artifact version.
type GalleryArtifactVersionFullSourceResponse struct {
	// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
	CommunityGalleryImageId *string `pulumi:"communityGalleryImageId"`
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id *string `pulumi:"id"`
}

// The source of the gallery artifact version.
type GalleryArtifactVersionFullSourceResponseOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionFullSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionFullSourceResponse)(nil)).Elem()
}

func (o GalleryArtifactVersionFullSourceResponseOutput) ToGalleryArtifactVersionFullSourceResponseOutput() GalleryArtifactVersionFullSourceResponseOutput {
	return o
}

func (o GalleryArtifactVersionFullSourceResponseOutput) ToGalleryArtifactVersionFullSourceResponseOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourceResponseOutput {
	return o
}

// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
func (o GalleryArtifactVersionFullSourceResponseOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionFullSourceResponse) *string { return v.CommunityGalleryImageId }).(pulumi.StringPtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionFullSourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionFullSourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GalleryArtifactVersionFullSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionFullSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionFullSourceResponse)(nil)).Elem()
}

func (o GalleryArtifactVersionFullSourceResponsePtrOutput) ToGalleryArtifactVersionFullSourceResponsePtrOutput() GalleryArtifactVersionFullSourceResponsePtrOutput {
	return o
}

func (o GalleryArtifactVersionFullSourceResponsePtrOutput) ToGalleryArtifactVersionFullSourceResponsePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionFullSourceResponsePtrOutput {
	return o
}

func (o GalleryArtifactVersionFullSourceResponsePtrOutput) Elem() GalleryArtifactVersionFullSourceResponseOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionFullSourceResponse) GalleryArtifactVersionFullSourceResponse {
		if v != nil {
			return *v
		}
		var ret GalleryArtifactVersionFullSourceResponse
		return ret
	}).(GalleryArtifactVersionFullSourceResponseOutput)
}

// The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
func (o GalleryArtifactVersionFullSourceResponsePtrOutput) CommunityGalleryImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionFullSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommunityGalleryImageId
	}).(pulumi.StringPtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionFullSourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionFullSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// This is the data disk image.
type GalleryDataDiskImage struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *HostCaching `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
	// The source for the disk image.
	Source *GalleryDiskImageSource `pulumi:"source"`
}

// GalleryDataDiskImageInput is an input type that accepts GalleryDataDiskImageArgs and GalleryDataDiskImageOutput values.
// You can construct a concrete instance of `GalleryDataDiskImageInput` via:
//
//	GalleryDataDiskImageArgs{...}
type GalleryDataDiskImageInput interface {
	pulumi.Input

	ToGalleryDataDiskImageOutput() GalleryDataDiskImageOutput
	ToGalleryDataDiskImageOutputWithContext(context.Context) GalleryDataDiskImageOutput
}

// This is the data disk image.
type GalleryDataDiskImageArgs struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching HostCachingPtrInput `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The source for the disk image.
	Source GalleryDiskImageSourcePtrInput `pulumi:"source"`
}

func (GalleryDataDiskImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImage)(nil)).Elem()
}

func (i GalleryDataDiskImageArgs) ToGalleryDataDiskImageOutput() GalleryDataDiskImageOutput {
	return i.ToGalleryDataDiskImageOutputWithContext(context.Background())
}

func (i GalleryDataDiskImageArgs) ToGalleryDataDiskImageOutputWithContext(ctx context.Context) GalleryDataDiskImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDataDiskImageOutput)
}

// GalleryDataDiskImageArrayInput is an input type that accepts GalleryDataDiskImageArray and GalleryDataDiskImageArrayOutput values.
// You can construct a concrete instance of `GalleryDataDiskImageArrayInput` via:
//
//	GalleryDataDiskImageArray{ GalleryDataDiskImageArgs{...} }
type GalleryDataDiskImageArrayInput interface {
	pulumi.Input

	ToGalleryDataDiskImageArrayOutput() GalleryDataDiskImageArrayOutput
	ToGalleryDataDiskImageArrayOutputWithContext(context.Context) GalleryDataDiskImageArrayOutput
}

type GalleryDataDiskImageArray []GalleryDataDiskImageInput

func (GalleryDataDiskImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImage)(nil)).Elem()
}

func (i GalleryDataDiskImageArray) ToGalleryDataDiskImageArrayOutput() GalleryDataDiskImageArrayOutput {
	return i.ToGalleryDataDiskImageArrayOutputWithContext(context.Background())
}

func (i GalleryDataDiskImageArray) ToGalleryDataDiskImageArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDataDiskImageArrayOutput)
}

// This is the data disk image.
type GalleryDataDiskImageOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImage)(nil)).Elem()
}

func (o GalleryDataDiskImageOutput) ToGalleryDataDiskImageOutput() GalleryDataDiskImageOutput {
	return o
}

func (o GalleryDataDiskImageOutput) ToGalleryDataDiskImageOutputWithContext(ctx context.Context) GalleryDataDiskImageOutput {
	return o
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryDataDiskImageOutput) HostCaching() HostCachingPtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImage) *HostCaching { return v.HostCaching }).(HostCachingPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o GalleryDataDiskImageOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryDataDiskImage) int { return v.Lun }).(pulumi.IntOutput)
}

// The source for the disk image.
func (o GalleryDataDiskImageOutput) Source() GalleryDiskImageSourcePtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImage) *GalleryDiskImageSource { return v.Source }).(GalleryDiskImageSourcePtrOutput)
}

type GalleryDataDiskImageArrayOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImage)(nil)).Elem()
}

func (o GalleryDataDiskImageArrayOutput) ToGalleryDataDiskImageArrayOutput() GalleryDataDiskImageArrayOutput {
	return o
}

func (o GalleryDataDiskImageArrayOutput) ToGalleryDataDiskImageArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageArrayOutput {
	return o
}

func (o GalleryDataDiskImageArrayOutput) Index(i pulumi.IntInput) GalleryDataDiskImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryDataDiskImage {
		return vs[0].([]GalleryDataDiskImage)[vs[1].(int)]
	}).(GalleryDataDiskImageOutput)
}

// This is the data disk image.
type GalleryDataDiskImageResponse struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *string `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
	// This property indicates the size of the VHD to be created.
	SizeInGB int `pulumi:"sizeInGB"`
	// The source for the disk image.
	Source *GalleryDiskImageSourceResponse `pulumi:"source"`
}

// This is the data disk image.
type GalleryDataDiskImageResponseOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImageResponse)(nil)).Elem()
}

func (o GalleryDataDiskImageResponseOutput) ToGalleryDataDiskImageResponseOutput() GalleryDataDiskImageResponseOutput {
	return o
}

func (o GalleryDataDiskImageResponseOutput) ToGalleryDataDiskImageResponseOutputWithContext(ctx context.Context) GalleryDataDiskImageResponseOutput {
	return o
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryDataDiskImageResponseOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o GalleryDataDiskImageResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryDataDiskImageResponseOutput) SizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) int { return v.SizeInGB }).(pulumi.IntOutput)
}

// The source for the disk image.
func (o GalleryDataDiskImageResponseOutput) Source() GalleryDiskImageSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) *GalleryDiskImageSourceResponse { return v.Source }).(GalleryDiskImageSourceResponsePtrOutput)
}

type GalleryDataDiskImageResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImageResponse)(nil)).Elem()
}

func (o GalleryDataDiskImageResponseArrayOutput) ToGalleryDataDiskImageResponseArrayOutput() GalleryDataDiskImageResponseArrayOutput {
	return o
}

func (o GalleryDataDiskImageResponseArrayOutput) ToGalleryDataDiskImageResponseArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageResponseArrayOutput {
	return o
}

func (o GalleryDataDiskImageResponseArrayOutput) Index(i pulumi.IntInput) GalleryDataDiskImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryDataDiskImageResponse {
		return vs[0].([]GalleryDataDiskImageResponse)[vs[1].(int)]
	}).(GalleryDataDiskImageResponseOutput)
}

// The source for the disk image.
type GalleryDiskImageSource struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id *string `pulumi:"id"`
	// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri *string `pulumi:"uri"`
}

// GalleryDiskImageSourceInput is an input type that accepts GalleryDiskImageSourceArgs and GalleryDiskImageSourceOutput values.
// You can construct a concrete instance of `GalleryDiskImageSourceInput` via:
//
//	GalleryDiskImageSourceArgs{...}
type GalleryDiskImageSourceInput interface {
	pulumi.Input

	ToGalleryDiskImageSourceOutput() GalleryDiskImageSourceOutput
	ToGalleryDiskImageSourceOutputWithContext(context.Context) GalleryDiskImageSourceOutput
}

// The source for the disk image.
type GalleryDiskImageSourceArgs struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GalleryDiskImageSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDiskImageSource)(nil)).Elem()
}

func (i GalleryDiskImageSourceArgs) ToGalleryDiskImageSourceOutput() GalleryDiskImageSourceOutput {
	return i.ToGalleryDiskImageSourceOutputWithContext(context.Background())
}

func (i GalleryDiskImageSourceArgs) ToGalleryDiskImageSourceOutputWithContext(ctx context.Context) GalleryDiskImageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDiskImageSourceOutput)
}

func (i GalleryDiskImageSourceArgs) ToGalleryDiskImageSourcePtrOutput() GalleryDiskImageSourcePtrOutput {
	return i.ToGalleryDiskImageSourcePtrOutputWithContext(context.Background())
}

func (i GalleryDiskImageSourceArgs) ToGalleryDiskImageSourcePtrOutputWithContext(ctx context.Context) GalleryDiskImageSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDiskImageSourceOutput).ToGalleryDiskImageSourcePtrOutputWithContext(ctx)
}

// GalleryDiskImageSourcePtrInput is an input type that accepts GalleryDiskImageSourceArgs, GalleryDiskImageSourcePtr and GalleryDiskImageSourcePtrOutput values.
// You can construct a concrete instance of `GalleryDiskImageSourcePtrInput` via:
//
//	        GalleryDiskImageSourceArgs{...}
//
//	or:
//
//	        nil
type GalleryDiskImageSourcePtrInput interface {
	pulumi.Input

	ToGalleryDiskImageSourcePtrOutput() GalleryDiskImageSourcePtrOutput
	ToGalleryDiskImageSourcePtrOutputWithContext(context.Context) GalleryDiskImageSourcePtrOutput
}

type galleryDiskImageSourcePtrType GalleryDiskImageSourceArgs

func GalleryDiskImageSourcePtr(v *GalleryDiskImageSourceArgs) GalleryDiskImageSourcePtrInput {
	return (*galleryDiskImageSourcePtrType)(v)
}

func (*galleryDiskImageSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryDiskImageSource)(nil)).Elem()
}

func (i *galleryDiskImageSourcePtrType) ToGalleryDiskImageSourcePtrOutput() GalleryDiskImageSourcePtrOutput {
	return i.ToGalleryDiskImageSourcePtrOutputWithContext(context.Background())
}

func (i *galleryDiskImageSourcePtrType) ToGalleryDiskImageSourcePtrOutputWithContext(ctx context.Context) GalleryDiskImageSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDiskImageSourcePtrOutput)
}

// The source for the disk image.
type GalleryDiskImageSourceOutput struct{ *pulumi.OutputState }

func (GalleryDiskImageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDiskImageSource)(nil)).Elem()
}

func (o GalleryDiskImageSourceOutput) ToGalleryDiskImageSourceOutput() GalleryDiskImageSourceOutput {
	return o
}

func (o GalleryDiskImageSourceOutput) ToGalleryDiskImageSourceOutputWithContext(ctx context.Context) GalleryDiskImageSourceOutput {
	return o
}

func (o GalleryDiskImageSourceOutput) ToGalleryDiskImageSourcePtrOutput() GalleryDiskImageSourcePtrOutput {
	return o.ToGalleryDiskImageSourcePtrOutputWithContext(context.Background())
}

func (o GalleryDiskImageSourceOutput) ToGalleryDiskImageSourcePtrOutputWithContext(ctx context.Context) GalleryDiskImageSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryDiskImageSource) *GalleryDiskImageSource {
		return &v
	}).(GalleryDiskImageSourcePtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryDiskImageSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDiskImageSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
func (o GalleryDiskImageSourceOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDiskImageSource) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryDiskImageSourceOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDiskImageSource) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GalleryDiskImageSourcePtrOutput struct{ *pulumi.OutputState }

func (GalleryDiskImageSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryDiskImageSource)(nil)).Elem()
}

func (o GalleryDiskImageSourcePtrOutput) ToGalleryDiskImageSourcePtrOutput() GalleryDiskImageSourcePtrOutput {
	return o
}

func (o GalleryDiskImageSourcePtrOutput) ToGalleryDiskImageSourcePtrOutputWithContext(ctx context.Context) GalleryDiskImageSourcePtrOutput {
	return o
}

func (o GalleryDiskImageSourcePtrOutput) Elem() GalleryDiskImageSourceOutput {
	return o.ApplyT(func(v *GalleryDiskImageSource) GalleryDiskImageSource {
		if v != nil {
			return *v
		}
		var ret GalleryDiskImageSource
		return ret
	}).(GalleryDiskImageSourceOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryDiskImageSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryDiskImageSource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
func (o GalleryDiskImageSourcePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryDiskImageSource) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryDiskImageSourcePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryDiskImageSource) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The source for the disk image.
type GalleryDiskImageSourceResponse struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id *string `pulumi:"id"`
	// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri *string `pulumi:"uri"`
}

// The source for the disk image.
type GalleryDiskImageSourceResponseOutput struct{ *pulumi.OutputState }

func (GalleryDiskImageSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDiskImageSourceResponse)(nil)).Elem()
}

func (o GalleryDiskImageSourceResponseOutput) ToGalleryDiskImageSourceResponseOutput() GalleryDiskImageSourceResponseOutput {
	return o
}

func (o GalleryDiskImageSourceResponseOutput) ToGalleryDiskImageSourceResponseOutputWithContext(ctx context.Context) GalleryDiskImageSourceResponseOutput {
	return o
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryDiskImageSourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDiskImageSourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
func (o GalleryDiskImageSourceResponseOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDiskImageSourceResponse) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryDiskImageSourceResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDiskImageSourceResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GalleryDiskImageSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryDiskImageSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryDiskImageSourceResponse)(nil)).Elem()
}

func (o GalleryDiskImageSourceResponsePtrOutput) ToGalleryDiskImageSourceResponsePtrOutput() GalleryDiskImageSourceResponsePtrOutput {
	return o
}

func (o GalleryDiskImageSourceResponsePtrOutput) ToGalleryDiskImageSourceResponsePtrOutputWithContext(ctx context.Context) GalleryDiskImageSourceResponsePtrOutput {
	return o
}

func (o GalleryDiskImageSourceResponsePtrOutput) Elem() GalleryDiskImageSourceResponseOutput {
	return o.ApplyT(func(v *GalleryDiskImageSourceResponse) GalleryDiskImageSourceResponse {
		if v != nil {
			return *v
		}
		var ret GalleryDiskImageSourceResponse
		return ret
	}).(GalleryDiskImageSourceResponseOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryDiskImageSourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryDiskImageSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
func (o GalleryDiskImageSourceResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryDiskImageSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryDiskImageSourceResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryDiskImageSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The name of the extended location.
type GalleryExtendedLocation struct {
	Name *string `pulumi:"name"`
	// It is type of the extended location.
	Type *string `pulumi:"type"`
}

// GalleryExtendedLocationInput is an input type that accepts GalleryExtendedLocationArgs and GalleryExtendedLocationOutput values.
// You can construct a concrete instance of `GalleryExtendedLocationInput` via:
//
//	GalleryExtendedLocationArgs{...}
type GalleryExtendedLocationInput interface {
	pulumi.Input

	ToGalleryExtendedLocationOutput() GalleryExtendedLocationOutput
	ToGalleryExtendedLocationOutputWithContext(context.Context) GalleryExtendedLocationOutput
}

// The name of the extended location.
type GalleryExtendedLocationArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	// It is type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GalleryExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryExtendedLocation)(nil)).Elem()
}

func (i GalleryExtendedLocationArgs) ToGalleryExtendedLocationOutput() GalleryExtendedLocationOutput {
	return i.ToGalleryExtendedLocationOutputWithContext(context.Background())
}

func (i GalleryExtendedLocationArgs) ToGalleryExtendedLocationOutputWithContext(ctx context.Context) GalleryExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryExtendedLocationOutput)
}

func (i GalleryExtendedLocationArgs) ToGalleryExtendedLocationPtrOutput() GalleryExtendedLocationPtrOutput {
	return i.ToGalleryExtendedLocationPtrOutputWithContext(context.Background())
}

func (i GalleryExtendedLocationArgs) ToGalleryExtendedLocationPtrOutputWithContext(ctx context.Context) GalleryExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryExtendedLocationOutput).ToGalleryExtendedLocationPtrOutputWithContext(ctx)
}

// GalleryExtendedLocationPtrInput is an input type that accepts GalleryExtendedLocationArgs, GalleryExtendedLocationPtr and GalleryExtendedLocationPtrOutput values.
// You can construct a concrete instance of `GalleryExtendedLocationPtrInput` via:
//
//	        GalleryExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type GalleryExtendedLocationPtrInput interface {
	pulumi.Input

	ToGalleryExtendedLocationPtrOutput() GalleryExtendedLocationPtrOutput
	ToGalleryExtendedLocationPtrOutputWithContext(context.Context) GalleryExtendedLocationPtrOutput
}

type galleryExtendedLocationPtrType GalleryExtendedLocationArgs

func GalleryExtendedLocationPtr(v *GalleryExtendedLocationArgs) GalleryExtendedLocationPtrInput {
	return (*galleryExtendedLocationPtrType)(v)
}

func (*galleryExtendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryExtendedLocation)(nil)).Elem()
}

func (i *galleryExtendedLocationPtrType) ToGalleryExtendedLocationPtrOutput() GalleryExtendedLocationPtrOutput {
	return i.ToGalleryExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *galleryExtendedLocationPtrType) ToGalleryExtendedLocationPtrOutputWithContext(ctx context.Context) GalleryExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryExtendedLocationPtrOutput)
}

// The name of the extended location.
type GalleryExtendedLocationOutput struct{ *pulumi.OutputState }

func (GalleryExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryExtendedLocation)(nil)).Elem()
}

func (o GalleryExtendedLocationOutput) ToGalleryExtendedLocationOutput() GalleryExtendedLocationOutput {
	return o
}

func (o GalleryExtendedLocationOutput) ToGalleryExtendedLocationOutputWithContext(ctx context.Context) GalleryExtendedLocationOutput {
	return o
}

func (o GalleryExtendedLocationOutput) ToGalleryExtendedLocationPtrOutput() GalleryExtendedLocationPtrOutput {
	return o.ToGalleryExtendedLocationPtrOutputWithContext(context.Background())
}

func (o GalleryExtendedLocationOutput) ToGalleryExtendedLocationPtrOutputWithContext(ctx context.Context) GalleryExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryExtendedLocation) *GalleryExtendedLocation {
		return &v
	}).(GalleryExtendedLocationPtrOutput)
}

func (o GalleryExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// It is type of the extended location.
func (o GalleryExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GalleryExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (GalleryExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryExtendedLocation)(nil)).Elem()
}

func (o GalleryExtendedLocationPtrOutput) ToGalleryExtendedLocationPtrOutput() GalleryExtendedLocationPtrOutput {
	return o
}

func (o GalleryExtendedLocationPtrOutput) ToGalleryExtendedLocationPtrOutputWithContext(ctx context.Context) GalleryExtendedLocationPtrOutput {
	return o
}

func (o GalleryExtendedLocationPtrOutput) Elem() GalleryExtendedLocationOutput {
	return o.ApplyT(func(v *GalleryExtendedLocation) GalleryExtendedLocation {
		if v != nil {
			return *v
		}
		var ret GalleryExtendedLocation
		return ret
	}).(GalleryExtendedLocationOutput)
}

func (o GalleryExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// It is type of the extended location.
func (o GalleryExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The name of the extended location.
type GalleryExtendedLocationResponse struct {
	Name *string `pulumi:"name"`
	// It is type of the extended location.
	Type *string `pulumi:"type"`
}

// The name of the extended location.
type GalleryExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (GalleryExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryExtendedLocationResponse)(nil)).Elem()
}

func (o GalleryExtendedLocationResponseOutput) ToGalleryExtendedLocationResponseOutput() GalleryExtendedLocationResponseOutput {
	return o
}

func (o GalleryExtendedLocationResponseOutput) ToGalleryExtendedLocationResponseOutputWithContext(ctx context.Context) GalleryExtendedLocationResponseOutput {
	return o
}

func (o GalleryExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// It is type of the extended location.
func (o GalleryExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GalleryExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryExtendedLocationResponse)(nil)).Elem()
}

func (o GalleryExtendedLocationResponsePtrOutput) ToGalleryExtendedLocationResponsePtrOutput() GalleryExtendedLocationResponsePtrOutput {
	return o
}

func (o GalleryExtendedLocationResponsePtrOutput) ToGalleryExtendedLocationResponsePtrOutputWithContext(ctx context.Context) GalleryExtendedLocationResponsePtrOutput {
	return o
}

func (o GalleryExtendedLocationResponsePtrOutput) Elem() GalleryExtendedLocationResponseOutput {
	return o.ApplyT(func(v *GalleryExtendedLocationResponse) GalleryExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret GalleryExtendedLocationResponse
		return ret
	}).(GalleryExtendedLocationResponseOutput)
}

func (o GalleryExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// It is type of the extended location.
func (o GalleryExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes the gallery unique name.
type GalleryIdentifierResponse struct {
	// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
	UniqueName string `pulumi:"uniqueName"`
}

// Describes the gallery unique name.
type GalleryIdentifierResponseOutput struct{ *pulumi.OutputState }

func (GalleryIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryIdentifierResponse)(nil)).Elem()
}

func (o GalleryIdentifierResponseOutput) ToGalleryIdentifierResponseOutput() GalleryIdentifierResponseOutput {
	return o
}

func (o GalleryIdentifierResponseOutput) ToGalleryIdentifierResponseOutputWithContext(ctx context.Context) GalleryIdentifierResponseOutput {
	return o
}

// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
func (o GalleryIdentifierResponseOutput) UniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryIdentifierResponse) string { return v.UniqueName }).(pulumi.StringOutput)
}

type GalleryIdentifierResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryIdentifierResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryIdentifierResponse)(nil)).Elem()
}

func (o GalleryIdentifierResponsePtrOutput) ToGalleryIdentifierResponsePtrOutput() GalleryIdentifierResponsePtrOutput {
	return o
}

func (o GalleryIdentifierResponsePtrOutput) ToGalleryIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryIdentifierResponsePtrOutput {
	return o
}

func (o GalleryIdentifierResponsePtrOutput) Elem() GalleryIdentifierResponseOutput {
	return o.ApplyT(func(v *GalleryIdentifierResponse) GalleryIdentifierResponse {
		if v != nil {
			return *v
		}
		var ret GalleryIdentifierResponse
		return ret
	}).(GalleryIdentifierResponseOutput)
}

// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
func (o GalleryIdentifierResponsePtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// A feature for gallery image.
type GalleryImageFeature struct {
	// The name of the gallery image feature.
	Name *string `pulumi:"name"`
	// The value of the gallery image feature.
	Value *string `pulumi:"value"`
}

// GalleryImageFeatureInput is an input type that accepts GalleryImageFeatureArgs and GalleryImageFeatureOutput values.
// You can construct a concrete instance of `GalleryImageFeatureInput` via:
//
//	GalleryImageFeatureArgs{...}
type GalleryImageFeatureInput interface {
	pulumi.Input

	ToGalleryImageFeatureOutput() GalleryImageFeatureOutput
	ToGalleryImageFeatureOutputWithContext(context.Context) GalleryImageFeatureOutput
}

// A feature for gallery image.
type GalleryImageFeatureArgs struct {
	// The name of the gallery image feature.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the gallery image feature.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GalleryImageFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeature)(nil)).Elem()
}

func (i GalleryImageFeatureArgs) ToGalleryImageFeatureOutput() GalleryImageFeatureOutput {
	return i.ToGalleryImageFeatureOutputWithContext(context.Background())
}

func (i GalleryImageFeatureArgs) ToGalleryImageFeatureOutputWithContext(ctx context.Context) GalleryImageFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageFeatureOutput)
}

// GalleryImageFeatureArrayInput is an input type that accepts GalleryImageFeatureArray and GalleryImageFeatureArrayOutput values.
// You can construct a concrete instance of `GalleryImageFeatureArrayInput` via:
//
//	GalleryImageFeatureArray{ GalleryImageFeatureArgs{...} }
type GalleryImageFeatureArrayInput interface {
	pulumi.Input

	ToGalleryImageFeatureArrayOutput() GalleryImageFeatureArrayOutput
	ToGalleryImageFeatureArrayOutputWithContext(context.Context) GalleryImageFeatureArrayOutput
}

type GalleryImageFeatureArray []GalleryImageFeatureInput

func (GalleryImageFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeature)(nil)).Elem()
}

func (i GalleryImageFeatureArray) ToGalleryImageFeatureArrayOutput() GalleryImageFeatureArrayOutput {
	return i.ToGalleryImageFeatureArrayOutputWithContext(context.Background())
}

func (i GalleryImageFeatureArray) ToGalleryImageFeatureArrayOutputWithContext(ctx context.Context) GalleryImageFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageFeatureArrayOutput)
}

// A feature for gallery image.
type GalleryImageFeatureOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeature)(nil)).Elem()
}

func (o GalleryImageFeatureOutput) ToGalleryImageFeatureOutput() GalleryImageFeatureOutput {
	return o
}

func (o GalleryImageFeatureOutput) ToGalleryImageFeatureOutputWithContext(ctx context.Context) GalleryImageFeatureOutput {
	return o
}

// The name of the gallery image feature.
func (o GalleryImageFeatureOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeature) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the gallery image feature.
func (o GalleryImageFeatureOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeature) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GalleryImageFeatureArrayOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeature)(nil)).Elem()
}

func (o GalleryImageFeatureArrayOutput) ToGalleryImageFeatureArrayOutput() GalleryImageFeatureArrayOutput {
	return o
}

func (o GalleryImageFeatureArrayOutput) ToGalleryImageFeatureArrayOutputWithContext(ctx context.Context) GalleryImageFeatureArrayOutput {
	return o
}

func (o GalleryImageFeatureArrayOutput) Index(i pulumi.IntInput) GalleryImageFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryImageFeature {
		return vs[0].([]GalleryImageFeature)[vs[1].(int)]
	}).(GalleryImageFeatureOutput)
}

// A feature for gallery image.
type GalleryImageFeatureResponse struct {
	// The name of the gallery image feature.
	Name *string `pulumi:"name"`
	// The value of the gallery image feature.
	Value *string `pulumi:"value"`
}

// A feature for gallery image.
type GalleryImageFeatureResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeatureResponse)(nil)).Elem()
}

func (o GalleryImageFeatureResponseOutput) ToGalleryImageFeatureResponseOutput() GalleryImageFeatureResponseOutput {
	return o
}

func (o GalleryImageFeatureResponseOutput) ToGalleryImageFeatureResponseOutputWithContext(ctx context.Context) GalleryImageFeatureResponseOutput {
	return o
}

// The name of the gallery image feature.
func (o GalleryImageFeatureResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeatureResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the gallery image feature.
func (o GalleryImageFeatureResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeatureResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GalleryImageFeatureResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeatureResponse)(nil)).Elem()
}

func (o GalleryImageFeatureResponseArrayOutput) ToGalleryImageFeatureResponseArrayOutput() GalleryImageFeatureResponseArrayOutput {
	return o
}

func (o GalleryImageFeatureResponseArrayOutput) ToGalleryImageFeatureResponseArrayOutputWithContext(ctx context.Context) GalleryImageFeatureResponseArrayOutput {
	return o
}

func (o GalleryImageFeatureResponseArrayOutput) Index(i pulumi.IntInput) GalleryImageFeatureResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryImageFeatureResponse {
		return vs[0].([]GalleryImageFeatureResponse)[vs[1].(int)]
	}).(GalleryImageFeatureResponseOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifier struct {
	// The name of the gallery image definition offer.
	Offer string `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher string `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku string `pulumi:"sku"`
}

// GalleryImageIdentifierInput is an input type that accepts GalleryImageIdentifierArgs and GalleryImageIdentifierOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierInput` via:
//
//	GalleryImageIdentifierArgs{...}
type GalleryImageIdentifierInput interface {
	pulumi.Input

	ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput
	ToGalleryImageIdentifierOutputWithContext(context.Context) GalleryImageIdentifierOutput
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierArgs struct {
	// The name of the gallery image definition offer.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GalleryImageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifier)(nil)).Elem()
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput {
	return i.ToGalleryImageIdentifierOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierOutputWithContext(ctx context.Context) GalleryImageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifier)(nil)).Elem()
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput {
	return o
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierOutputWithContext(ctx context.Context) GalleryImageIdentifierOutput {
	return o
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Publisher }).(pulumi.StringOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Sku }).(pulumi.StringOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponse struct {
	// The name of the gallery image definition offer.
	Offer string `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher string `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku string `pulumi:"sku"`
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifierResponse)(nil)).Elem()
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponseOutput() GalleryImageIdentifierResponseOutput {
	return o
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponseOutputWithContext(ctx context.Context) GalleryImageIdentifierResponseOutput {
	return o
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierResponseOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierResponseOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Sku }).(pulumi.StringOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfile struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
	ReplicationMode *string `pulumi:"replicationMode"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
	TargetExtendedLocations []GalleryTargetExtendedLocation `pulumi:"targetExtendedLocations"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegion `pulumi:"targetRegions"`
}

// GalleryImageVersionPublishingProfileInput is an input type that accepts GalleryImageVersionPublishingProfileArgs and GalleryImageVersionPublishingProfileOutput values.
// You can construct a concrete instance of `GalleryImageVersionPublishingProfileInput` via:
//
//	GalleryImageVersionPublishingProfileArgs{...}
type GalleryImageVersionPublishingProfileInput interface {
	pulumi.Input

	ToGalleryImageVersionPublishingProfileOutput() GalleryImageVersionPublishingProfileOutput
	ToGalleryImageVersionPublishingProfileOutputWithContext(context.Context) GalleryImageVersionPublishingProfileOutput
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileArgs struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate pulumi.StringPtrInput `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest pulumi.BoolPtrInput `pulumi:"excludeFromLatest"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount pulumi.IntPtrInput `pulumi:"replicaCount"`
	// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
	ReplicationMode pulumi.StringPtrInput `pulumi:"replicationMode"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
	// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
	TargetExtendedLocations GalleryTargetExtendedLocationArrayInput `pulumi:"targetExtendedLocations"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions TargetRegionArrayInput `pulumi:"targetRegions"`
}

func (GalleryImageVersionPublishingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfileOutput() GalleryImageVersionPublishingProfileOutput {
	return i.ToGalleryImageVersionPublishingProfileOutputWithContext(context.Background())
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileOutput)
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return i.ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileOutput).ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx)
}

// GalleryImageVersionPublishingProfilePtrInput is an input type that accepts GalleryImageVersionPublishingProfileArgs, GalleryImageVersionPublishingProfilePtr and GalleryImageVersionPublishingProfilePtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionPublishingProfilePtrInput` via:
//
//	        GalleryImageVersionPublishingProfileArgs{...}
//
//	or:
//
//	        nil
type GalleryImageVersionPublishingProfilePtrInput interface {
	pulumi.Input

	ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput
	ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Context) GalleryImageVersionPublishingProfilePtrOutput
}

type galleryImageVersionPublishingProfilePtrType GalleryImageVersionPublishingProfileArgs

func GalleryImageVersionPublishingProfilePtr(v *GalleryImageVersionPublishingProfileArgs) GalleryImageVersionPublishingProfilePtrInput {
	return (*galleryImageVersionPublishingProfilePtrType)(v)
}

func (*galleryImageVersionPublishingProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (i *galleryImageVersionPublishingProfilePtrType) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return i.ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionPublishingProfilePtrType) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfilePtrOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfileOutput() GalleryImageVersionPublishingProfileOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return o.ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryImageVersionPublishingProfile) *GalleryImageVersionPublishingProfile {
		return &v
	}).(GalleryImageVersionPublishingProfilePtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfileOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
func (o GalleryImageVersionPublishingProfileOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *string { return v.ReplicationMode }).(pulumi.StringPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfileOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) TargetExtendedLocations() GalleryTargetExtendedLocationArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) []GalleryTargetExtendedLocation {
		return v.TargetExtendedLocations
	}).(GalleryTargetExtendedLocationArrayOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) []TargetRegion { return v.TargetRegions }).(TargetRegionArrayOutput)
}

type GalleryImageVersionPublishingProfilePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfilePtrOutput) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfilePtrOutput) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfilePtrOutput) Elem() GalleryImageVersionPublishingProfileOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) GalleryImageVersionPublishingProfile {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionPublishingProfile
		return ret
	}).(GalleryImageVersionPublishingProfileOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.EndOfLifeDate
	}).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfilePtrOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFromLatest
	}).(pulumi.BoolPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationMode
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) TargetExtendedLocations() GalleryTargetExtendedLocationArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) []GalleryTargetExtendedLocation {
		if v == nil {
			return nil
		}
		return v.TargetExtendedLocations
	}).(GalleryTargetExtendedLocationArrayOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) []TargetRegion {
		if v == nil {
			return nil
		}
		return v.TargetRegions
	}).(TargetRegionArrayOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileResponse struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The timestamp for when the gallery image version is published.
	PublishedDate string `pulumi:"publishedDate"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
	ReplicationMode *string `pulumi:"replicationMode"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
	TargetExtendedLocations []GalleryTargetExtendedLocationResponse `pulumi:"targetExtendedLocations"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegionResponse `pulumi:"targetRegions"`
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfileResponseOutput) ToGalleryImageVersionPublishingProfileResponseOutput() GalleryImageVersionPublishingProfileResponseOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponseOutput) ToGalleryImageVersionPublishingProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponseOutput {
	return o
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfileResponseOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryImageVersionPublishingProfileResponseOutput) PublishedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) string { return v.PublishedDate }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *string { return v.ReplicationMode }).(pulumi.StringPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) TargetExtendedLocations() GalleryTargetExtendedLocationResponseArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) []GalleryTargetExtendedLocationResponse {
		return v.TargetExtendedLocations
	}).(GalleryTargetExtendedLocationResponseArrayOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) []TargetRegionResponse { return v.TargetRegions }).(TargetRegionResponseArrayOutput)
}

type GalleryImageVersionPublishingProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ToGalleryImageVersionPublishingProfileResponsePtrOutput() GalleryImageVersionPublishingProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponsePtrOutput) Elem() GalleryImageVersionPublishingProfileResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) GalleryImageVersionPublishingProfileResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionPublishingProfileResponse
		return ret
	}).(GalleryImageVersionPublishingProfileResponseOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndOfLifeDate
	}).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFromLatest
	}).(pulumi.BoolPtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) PublishedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublishedDate
	}).(pulumi.StringPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationMode
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) TargetExtendedLocations() GalleryTargetExtendedLocationResponseArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) []GalleryTargetExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.TargetExtendedLocations
	}).(GalleryTargetExtendedLocationResponseArrayOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) []TargetRegionResponse {
		if v == nil {
			return nil
		}
		return v.TargetRegions
	}).(TargetRegionResponseArrayOutput)
}

// This is the safety profile of the Gallery Image Version.
type GalleryImageVersionSafetyProfile struct {
	// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
	AllowDeletionOfReplicatedLocations *bool `pulumi:"allowDeletionOfReplicatedLocations"`
}

// GalleryImageVersionSafetyProfileInput is an input type that accepts GalleryImageVersionSafetyProfileArgs and GalleryImageVersionSafetyProfileOutput values.
// You can construct a concrete instance of `GalleryImageVersionSafetyProfileInput` via:
//
//	GalleryImageVersionSafetyProfileArgs{...}
type GalleryImageVersionSafetyProfileInput interface {
	pulumi.Input

	ToGalleryImageVersionSafetyProfileOutput() GalleryImageVersionSafetyProfileOutput
	ToGalleryImageVersionSafetyProfileOutputWithContext(context.Context) GalleryImageVersionSafetyProfileOutput
}

// This is the safety profile of the Gallery Image Version.
type GalleryImageVersionSafetyProfileArgs struct {
	// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
	AllowDeletionOfReplicatedLocations pulumi.BoolPtrInput `pulumi:"allowDeletionOfReplicatedLocations"`
}

func (GalleryImageVersionSafetyProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionSafetyProfile)(nil)).Elem()
}

func (i GalleryImageVersionSafetyProfileArgs) ToGalleryImageVersionSafetyProfileOutput() GalleryImageVersionSafetyProfileOutput {
	return i.ToGalleryImageVersionSafetyProfileOutputWithContext(context.Background())
}

func (i GalleryImageVersionSafetyProfileArgs) ToGalleryImageVersionSafetyProfileOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionSafetyProfileOutput)
}

func (i GalleryImageVersionSafetyProfileArgs) ToGalleryImageVersionSafetyProfilePtrOutput() GalleryImageVersionSafetyProfilePtrOutput {
	return i.ToGalleryImageVersionSafetyProfilePtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionSafetyProfileArgs) ToGalleryImageVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionSafetyProfileOutput).ToGalleryImageVersionSafetyProfilePtrOutputWithContext(ctx)
}

// GalleryImageVersionSafetyProfilePtrInput is an input type that accepts GalleryImageVersionSafetyProfileArgs, GalleryImageVersionSafetyProfilePtr and GalleryImageVersionSafetyProfilePtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionSafetyProfilePtrInput` via:
//
//	        GalleryImageVersionSafetyProfileArgs{...}
//
//	or:
//
//	        nil
type GalleryImageVersionSafetyProfilePtrInput interface {
	pulumi.Input

	ToGalleryImageVersionSafetyProfilePtrOutput() GalleryImageVersionSafetyProfilePtrOutput
	ToGalleryImageVersionSafetyProfilePtrOutputWithContext(context.Context) GalleryImageVersionSafetyProfilePtrOutput
}

type galleryImageVersionSafetyProfilePtrType GalleryImageVersionSafetyProfileArgs

func GalleryImageVersionSafetyProfilePtr(v *GalleryImageVersionSafetyProfileArgs) GalleryImageVersionSafetyProfilePtrInput {
	return (*galleryImageVersionSafetyProfilePtrType)(v)
}

func (*galleryImageVersionSafetyProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionSafetyProfile)(nil)).Elem()
}

func (i *galleryImageVersionSafetyProfilePtrType) ToGalleryImageVersionSafetyProfilePtrOutput() GalleryImageVersionSafetyProfilePtrOutput {
	return i.ToGalleryImageVersionSafetyProfilePtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionSafetyProfilePtrType) ToGalleryImageVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionSafetyProfilePtrOutput)
}

// This is the safety profile of the Gallery Image Version.
type GalleryImageVersionSafetyProfileOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionSafetyProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionSafetyProfile)(nil)).Elem()
}

func (o GalleryImageVersionSafetyProfileOutput) ToGalleryImageVersionSafetyProfileOutput() GalleryImageVersionSafetyProfileOutput {
	return o
}

func (o GalleryImageVersionSafetyProfileOutput) ToGalleryImageVersionSafetyProfileOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfileOutput {
	return o
}

func (o GalleryImageVersionSafetyProfileOutput) ToGalleryImageVersionSafetyProfilePtrOutput() GalleryImageVersionSafetyProfilePtrOutput {
	return o.ToGalleryImageVersionSafetyProfilePtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionSafetyProfileOutput) ToGalleryImageVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryImageVersionSafetyProfile) *GalleryImageVersionSafetyProfile {
		return &v
	}).(GalleryImageVersionSafetyProfilePtrOutput)
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryImageVersionSafetyProfileOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionSafetyProfile) *bool { return v.AllowDeletionOfReplicatedLocations }).(pulumi.BoolPtrOutput)
}

type GalleryImageVersionSafetyProfilePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionSafetyProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionSafetyProfile)(nil)).Elem()
}

func (o GalleryImageVersionSafetyProfilePtrOutput) ToGalleryImageVersionSafetyProfilePtrOutput() GalleryImageVersionSafetyProfilePtrOutput {
	return o
}

func (o GalleryImageVersionSafetyProfilePtrOutput) ToGalleryImageVersionSafetyProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfilePtrOutput {
	return o
}

func (o GalleryImageVersionSafetyProfilePtrOutput) Elem() GalleryImageVersionSafetyProfileOutput {
	return o.ApplyT(func(v *GalleryImageVersionSafetyProfile) GalleryImageVersionSafetyProfile {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionSafetyProfile
		return ret
	}).(GalleryImageVersionSafetyProfileOutput)
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryImageVersionSafetyProfilePtrOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionSafetyProfile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDeletionOfReplicatedLocations
	}).(pulumi.BoolPtrOutput)
}

// This is the safety profile of the Gallery Image Version.
type GalleryImageVersionSafetyProfileResponse struct {
	// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
	AllowDeletionOfReplicatedLocations *bool `pulumi:"allowDeletionOfReplicatedLocations"`
	// A list of Policy Violations that have been reported for this Gallery Image Version.
	PolicyViolations []PolicyViolationResponse `pulumi:"policyViolations"`
	// Indicates whether this image has been reported as violating Microsoft's policies.
	ReportedForPolicyViolation bool `pulumi:"reportedForPolicyViolation"`
}

// This is the safety profile of the Gallery Image Version.
type GalleryImageVersionSafetyProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionSafetyProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionSafetyProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionSafetyProfileResponseOutput) ToGalleryImageVersionSafetyProfileResponseOutput() GalleryImageVersionSafetyProfileResponseOutput {
	return o
}

func (o GalleryImageVersionSafetyProfileResponseOutput) ToGalleryImageVersionSafetyProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfileResponseOutput {
	return o
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryImageVersionSafetyProfileResponseOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionSafetyProfileResponse) *bool { return v.AllowDeletionOfReplicatedLocations }).(pulumi.BoolPtrOutput)
}

// A list of Policy Violations that have been reported for this Gallery Image Version.
func (o GalleryImageVersionSafetyProfileResponseOutput) PolicyViolations() PolicyViolationResponseArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionSafetyProfileResponse) []PolicyViolationResponse { return v.PolicyViolations }).(PolicyViolationResponseArrayOutput)
}

// Indicates whether this image has been reported as violating Microsoft's policies.
func (o GalleryImageVersionSafetyProfileResponseOutput) ReportedForPolicyViolation() pulumi.BoolOutput {
	return o.ApplyT(func(v GalleryImageVersionSafetyProfileResponse) bool { return v.ReportedForPolicyViolation }).(pulumi.BoolOutput)
}

type GalleryImageVersionSafetyProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionSafetyProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionSafetyProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionSafetyProfileResponsePtrOutput) ToGalleryImageVersionSafetyProfileResponsePtrOutput() GalleryImageVersionSafetyProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionSafetyProfileResponsePtrOutput) ToGalleryImageVersionSafetyProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionSafetyProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionSafetyProfileResponsePtrOutput) Elem() GalleryImageVersionSafetyProfileResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionSafetyProfileResponse) GalleryImageVersionSafetyProfileResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionSafetyProfileResponse
		return ret
	}).(GalleryImageVersionSafetyProfileResponseOutput)
}

// Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
func (o GalleryImageVersionSafetyProfileResponsePtrOutput) AllowDeletionOfReplicatedLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionSafetyProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowDeletionOfReplicatedLocations
	}).(pulumi.BoolPtrOutput)
}

// A list of Policy Violations that have been reported for this Gallery Image Version.
func (o GalleryImageVersionSafetyProfileResponsePtrOutput) PolicyViolations() PolicyViolationResponseArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionSafetyProfileResponse) []PolicyViolationResponse {
		if v == nil {
			return nil
		}
		return v.PolicyViolations
	}).(PolicyViolationResponseArrayOutput)
}

// Indicates whether this image has been reported as violating Microsoft's policies.
func (o GalleryImageVersionSafetyProfileResponsePtrOutput) ReportedForPolicyViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionSafetyProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ReportedForPolicyViolation
	}).(pulumi.BoolPtrOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfile struct {
	// A list of data disk images.
	DataDiskImages []GalleryDataDiskImage `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage *GalleryOSDiskImage `pulumi:"osDiskImage"`
	// The source of the gallery artifact version.
	Source *GalleryArtifactVersionFullSource `pulumi:"source"`
}

// GalleryImageVersionStorageProfileInput is an input type that accepts GalleryImageVersionStorageProfileArgs and GalleryImageVersionStorageProfileOutput values.
// You can construct a concrete instance of `GalleryImageVersionStorageProfileInput` via:
//
//	GalleryImageVersionStorageProfileArgs{...}
type GalleryImageVersionStorageProfileInput interface {
	pulumi.Input

	ToGalleryImageVersionStorageProfileOutput() GalleryImageVersionStorageProfileOutput
	ToGalleryImageVersionStorageProfileOutputWithContext(context.Context) GalleryImageVersionStorageProfileOutput
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileArgs struct {
	// A list of data disk images.
	DataDiskImages GalleryDataDiskImageArrayInput `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage GalleryOSDiskImagePtrInput `pulumi:"osDiskImage"`
	// The source of the gallery artifact version.
	Source GalleryArtifactVersionFullSourcePtrInput `pulumi:"source"`
}

func (GalleryImageVersionStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfile)(nil)).Elem()
}

func (i GalleryImageVersionStorageProfileArgs) ToGalleryImageVersionStorageProfileOutput() GalleryImageVersionStorageProfileOutput {
	return i.ToGalleryImageVersionStorageProfileOutputWithContext(context.Background())
}

func (i GalleryImageVersionStorageProfileArgs) ToGalleryImageVersionStorageProfileOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfileOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfile)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileOutput) ToGalleryImageVersionStorageProfileOutput() GalleryImageVersionStorageProfileOutput {
	return o
}

func (o GalleryImageVersionStorageProfileOutput) ToGalleryImageVersionStorageProfileOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileOutput {
	return o
}

// A list of data disk images.
func (o GalleryImageVersionStorageProfileOutput) DataDiskImages() GalleryDataDiskImageArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) []GalleryDataDiskImage { return v.DataDiskImages }).(GalleryDataDiskImageArrayOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileOutput) OsDiskImage() GalleryOSDiskImagePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) *GalleryOSDiskImage { return v.OsDiskImage }).(GalleryOSDiskImagePtrOutput)
}

// The source of the gallery artifact version.
func (o GalleryImageVersionStorageProfileOutput) Source() GalleryArtifactVersionFullSourcePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) *GalleryArtifactVersionFullSource { return v.Source }).(GalleryArtifactVersionFullSourcePtrOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponse struct {
	// A list of data disk images.
	DataDiskImages []GalleryDataDiskImageResponse `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage *GalleryOSDiskImageResponse `pulumi:"osDiskImage"`
	// The source of the gallery artifact version.
	Source *GalleryArtifactVersionFullSourceResponse `pulumi:"source"`
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponseOutput() GalleryImageVersionStorageProfileResponseOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponseOutput {
	return o
}

// A list of data disk images.
func (o GalleryImageVersionStorageProfileResponseOutput) DataDiskImages() GalleryDataDiskImageResponseArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) []GalleryDataDiskImageResponse {
		return v.DataDiskImages
	}).(GalleryDataDiskImageResponseArrayOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileResponseOutput) OsDiskImage() GalleryOSDiskImageResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) *GalleryOSDiskImageResponse { return v.OsDiskImage }).(GalleryOSDiskImageResponsePtrOutput)
}

// The source of the gallery artifact version.
func (o GalleryImageVersionStorageProfileResponseOutput) Source() GalleryArtifactVersionFullSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) *GalleryArtifactVersionFullSourceResponse {
		return v.Source
	}).(GalleryArtifactVersionFullSourceResponsePtrOutput)
}

// Contains UEFI settings for the image version.
type GalleryImageVersionUefiSettings struct {
	// Additional UEFI key signatures that will be added to the image in addition to the signature templates
	AdditionalSignatures *UefiKeySignatures `pulumi:"additionalSignatures"`
	// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
	SignatureTemplateNames []string `pulumi:"signatureTemplateNames"`
}

// GalleryImageVersionUefiSettingsInput is an input type that accepts GalleryImageVersionUefiSettingsArgs and GalleryImageVersionUefiSettingsOutput values.
// You can construct a concrete instance of `GalleryImageVersionUefiSettingsInput` via:
//
//	GalleryImageVersionUefiSettingsArgs{...}
type GalleryImageVersionUefiSettingsInput interface {
	pulumi.Input

	ToGalleryImageVersionUefiSettingsOutput() GalleryImageVersionUefiSettingsOutput
	ToGalleryImageVersionUefiSettingsOutputWithContext(context.Context) GalleryImageVersionUefiSettingsOutput
}

// Contains UEFI settings for the image version.
type GalleryImageVersionUefiSettingsArgs struct {
	// Additional UEFI key signatures that will be added to the image in addition to the signature templates
	AdditionalSignatures UefiKeySignaturesPtrInput `pulumi:"additionalSignatures"`
	// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
	SignatureTemplateNames pulumi.StringArrayInput `pulumi:"signatureTemplateNames"`
}

func (GalleryImageVersionUefiSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionUefiSettings)(nil)).Elem()
}

func (i GalleryImageVersionUefiSettingsArgs) ToGalleryImageVersionUefiSettingsOutput() GalleryImageVersionUefiSettingsOutput {
	return i.ToGalleryImageVersionUefiSettingsOutputWithContext(context.Background())
}

func (i GalleryImageVersionUefiSettingsArgs) ToGalleryImageVersionUefiSettingsOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionUefiSettingsOutput)
}

func (i GalleryImageVersionUefiSettingsArgs) ToGalleryImageVersionUefiSettingsPtrOutput() GalleryImageVersionUefiSettingsPtrOutput {
	return i.ToGalleryImageVersionUefiSettingsPtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionUefiSettingsArgs) ToGalleryImageVersionUefiSettingsPtrOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionUefiSettingsOutput).ToGalleryImageVersionUefiSettingsPtrOutputWithContext(ctx)
}

// GalleryImageVersionUefiSettingsPtrInput is an input type that accepts GalleryImageVersionUefiSettingsArgs, GalleryImageVersionUefiSettingsPtr and GalleryImageVersionUefiSettingsPtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionUefiSettingsPtrInput` via:
//
//	        GalleryImageVersionUefiSettingsArgs{...}
//
//	or:
//
//	        nil
type GalleryImageVersionUefiSettingsPtrInput interface {
	pulumi.Input

	ToGalleryImageVersionUefiSettingsPtrOutput() GalleryImageVersionUefiSettingsPtrOutput
	ToGalleryImageVersionUefiSettingsPtrOutputWithContext(context.Context) GalleryImageVersionUefiSettingsPtrOutput
}

type galleryImageVersionUefiSettingsPtrType GalleryImageVersionUefiSettingsArgs

func GalleryImageVersionUefiSettingsPtr(v *GalleryImageVersionUefiSettingsArgs) GalleryImageVersionUefiSettingsPtrInput {
	return (*galleryImageVersionUefiSettingsPtrType)(v)
}

func (*galleryImageVersionUefiSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionUefiSettings)(nil)).Elem()
}

func (i *galleryImageVersionUefiSettingsPtrType) ToGalleryImageVersionUefiSettingsPtrOutput() GalleryImageVersionUefiSettingsPtrOutput {
	return i.ToGalleryImageVersionUefiSettingsPtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionUefiSettingsPtrType) ToGalleryImageVersionUefiSettingsPtrOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionUefiSettingsPtrOutput)
}

// Contains UEFI settings for the image version.
type GalleryImageVersionUefiSettingsOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionUefiSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionUefiSettings)(nil)).Elem()
}

func (o GalleryImageVersionUefiSettingsOutput) ToGalleryImageVersionUefiSettingsOutput() GalleryImageVersionUefiSettingsOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsOutput) ToGalleryImageVersionUefiSettingsOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsOutput) ToGalleryImageVersionUefiSettingsPtrOutput() GalleryImageVersionUefiSettingsPtrOutput {
	return o.ToGalleryImageVersionUefiSettingsPtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionUefiSettingsOutput) ToGalleryImageVersionUefiSettingsPtrOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryImageVersionUefiSettings) *GalleryImageVersionUefiSettings {
		return &v
	}).(GalleryImageVersionUefiSettingsPtrOutput)
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
func (o GalleryImageVersionUefiSettingsOutput) AdditionalSignatures() UefiKeySignaturesPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionUefiSettings) *UefiKeySignatures { return v.AdditionalSignatures }).(UefiKeySignaturesPtrOutput)
}

// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
func (o GalleryImageVersionUefiSettingsOutput) SignatureTemplateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionUefiSettings) []string { return v.SignatureTemplateNames }).(pulumi.StringArrayOutput)
}

type GalleryImageVersionUefiSettingsPtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionUefiSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionUefiSettings)(nil)).Elem()
}

func (o GalleryImageVersionUefiSettingsPtrOutput) ToGalleryImageVersionUefiSettingsPtrOutput() GalleryImageVersionUefiSettingsPtrOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsPtrOutput) ToGalleryImageVersionUefiSettingsPtrOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsPtrOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsPtrOutput) Elem() GalleryImageVersionUefiSettingsOutput {
	return o.ApplyT(func(v *GalleryImageVersionUefiSettings) GalleryImageVersionUefiSettings {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionUefiSettings
		return ret
	}).(GalleryImageVersionUefiSettingsOutput)
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
func (o GalleryImageVersionUefiSettingsPtrOutput) AdditionalSignatures() UefiKeySignaturesPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionUefiSettings) *UefiKeySignatures {
		if v == nil {
			return nil
		}
		return v.AdditionalSignatures
	}).(UefiKeySignaturesPtrOutput)
}

// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
func (o GalleryImageVersionUefiSettingsPtrOutput) SignatureTemplateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionUefiSettings) []string {
		if v == nil {
			return nil
		}
		return v.SignatureTemplateNames
	}).(pulumi.StringArrayOutput)
}

// Contains UEFI settings for the image version.
type GalleryImageVersionUefiSettingsResponse struct {
	// Additional UEFI key signatures that will be added to the image in addition to the signature templates
	AdditionalSignatures *UefiKeySignaturesResponse `pulumi:"additionalSignatures"`
	// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
	SignatureTemplateNames []string `pulumi:"signatureTemplateNames"`
}

// Contains UEFI settings for the image version.
type GalleryImageVersionUefiSettingsResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionUefiSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionUefiSettingsResponse)(nil)).Elem()
}

func (o GalleryImageVersionUefiSettingsResponseOutput) ToGalleryImageVersionUefiSettingsResponseOutput() GalleryImageVersionUefiSettingsResponseOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsResponseOutput) ToGalleryImageVersionUefiSettingsResponseOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsResponseOutput {
	return o
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
func (o GalleryImageVersionUefiSettingsResponseOutput) AdditionalSignatures() UefiKeySignaturesResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionUefiSettingsResponse) *UefiKeySignaturesResponse {
		return v.AdditionalSignatures
	}).(UefiKeySignaturesResponsePtrOutput)
}

// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
func (o GalleryImageVersionUefiSettingsResponseOutput) SignatureTemplateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionUefiSettingsResponse) []string { return v.SignatureTemplateNames }).(pulumi.StringArrayOutput)
}

type GalleryImageVersionUefiSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionUefiSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionUefiSettingsResponse)(nil)).Elem()
}

func (o GalleryImageVersionUefiSettingsResponsePtrOutput) ToGalleryImageVersionUefiSettingsResponsePtrOutput() GalleryImageVersionUefiSettingsResponsePtrOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsResponsePtrOutput) ToGalleryImageVersionUefiSettingsResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionUefiSettingsResponsePtrOutput {
	return o
}

func (o GalleryImageVersionUefiSettingsResponsePtrOutput) Elem() GalleryImageVersionUefiSettingsResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionUefiSettingsResponse) GalleryImageVersionUefiSettingsResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionUefiSettingsResponse
		return ret
	}).(GalleryImageVersionUefiSettingsResponseOutput)
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
func (o GalleryImageVersionUefiSettingsResponsePtrOutput) AdditionalSignatures() UefiKeySignaturesResponsePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionUefiSettingsResponse) *UefiKeySignaturesResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalSignatures
	}).(UefiKeySignaturesResponsePtrOutput)
}

// The name of the template(s) that contains default UEFI key signatures that will be added to the image.
func (o GalleryImageVersionUefiSettingsResponsePtrOutput) SignatureTemplateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionUefiSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.SignatureTemplateNames
	}).(pulumi.StringArrayOutput)
}

// This is the OS disk image.
type GalleryOSDiskImage struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *HostCaching `pulumi:"hostCaching"`
	// The source for the disk image.
	Source *GalleryDiskImageSource `pulumi:"source"`
}

// GalleryOSDiskImageInput is an input type that accepts GalleryOSDiskImageArgs and GalleryOSDiskImageOutput values.
// You can construct a concrete instance of `GalleryOSDiskImageInput` via:
//
//	GalleryOSDiskImageArgs{...}
type GalleryOSDiskImageInput interface {
	pulumi.Input

	ToGalleryOSDiskImageOutput() GalleryOSDiskImageOutput
	ToGalleryOSDiskImageOutputWithContext(context.Context) GalleryOSDiskImageOutput
}

// This is the OS disk image.
type GalleryOSDiskImageArgs struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching HostCachingPtrInput `pulumi:"hostCaching"`
	// The source for the disk image.
	Source GalleryDiskImageSourcePtrInput `pulumi:"source"`
}

func (GalleryOSDiskImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImage)(nil)).Elem()
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImageOutput() GalleryOSDiskImageOutput {
	return i.ToGalleryOSDiskImageOutputWithContext(context.Background())
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImageOutputWithContext(ctx context.Context) GalleryOSDiskImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageOutput)
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return i.ToGalleryOSDiskImagePtrOutputWithContext(context.Background())
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageOutput).ToGalleryOSDiskImagePtrOutputWithContext(ctx)
}

// GalleryOSDiskImagePtrInput is an input type that accepts GalleryOSDiskImageArgs, GalleryOSDiskImagePtr and GalleryOSDiskImagePtrOutput values.
// You can construct a concrete instance of `GalleryOSDiskImagePtrInput` via:
//
//	        GalleryOSDiskImageArgs{...}
//
//	or:
//
//	        nil
type GalleryOSDiskImagePtrInput interface {
	pulumi.Input

	ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput
	ToGalleryOSDiskImagePtrOutputWithContext(context.Context) GalleryOSDiskImagePtrOutput
}

type galleryOSDiskImagePtrType GalleryOSDiskImageArgs

func GalleryOSDiskImagePtr(v *GalleryOSDiskImageArgs) GalleryOSDiskImagePtrInput {
	return (*galleryOSDiskImagePtrType)(v)
}

func (*galleryOSDiskImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImage)(nil)).Elem()
}

func (i *galleryOSDiskImagePtrType) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return i.ToGalleryOSDiskImagePtrOutputWithContext(context.Background())
}

func (i *galleryOSDiskImagePtrType) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImagePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImageOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImage)(nil)).Elem()
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImageOutput() GalleryOSDiskImageOutput {
	return o
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImageOutputWithContext(ctx context.Context) GalleryOSDiskImageOutput {
	return o
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return o.ToGalleryOSDiskImagePtrOutputWithContext(context.Background())
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryOSDiskImage) *GalleryOSDiskImage {
		return &v
	}).(GalleryOSDiskImagePtrOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImageOutput) HostCaching() HostCachingPtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImage) *HostCaching { return v.HostCaching }).(HostCachingPtrOutput)
}

// The source for the disk image.
func (o GalleryOSDiskImageOutput) Source() GalleryDiskImageSourcePtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImage) *GalleryDiskImageSource { return v.Source }).(GalleryDiskImageSourcePtrOutput)
}

type GalleryOSDiskImagePtrOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImage)(nil)).Elem()
}

func (o GalleryOSDiskImagePtrOutput) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return o
}

func (o GalleryOSDiskImagePtrOutput) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return o
}

func (o GalleryOSDiskImagePtrOutput) Elem() GalleryOSDiskImageOutput {
	return o.ApplyT(func(v *GalleryOSDiskImage) GalleryOSDiskImage {
		if v != nil {
			return *v
		}
		var ret GalleryOSDiskImage
		return ret
	}).(GalleryOSDiskImageOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImagePtrOutput) HostCaching() HostCachingPtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImage) *HostCaching {
		if v == nil {
			return nil
		}
		return v.HostCaching
	}).(HostCachingPtrOutput)
}

// The source for the disk image.
func (o GalleryOSDiskImagePtrOutput) Source() GalleryDiskImageSourcePtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImage) *GalleryDiskImageSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GalleryDiskImageSourcePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImageResponse struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *string `pulumi:"hostCaching"`
	// This property indicates the size of the VHD to be created.
	SizeInGB int `pulumi:"sizeInGB"`
	// The source for the disk image.
	Source *GalleryDiskImageSourceResponse `pulumi:"source"`
}

// This is the OS disk image.
type GalleryOSDiskImageResponseOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImageResponse)(nil)).Elem()
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponseOutput() GalleryOSDiskImageResponseOutput {
	return o
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponseOutputWithContext(ctx context.Context) GalleryOSDiskImageResponseOutput {
	return o
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImageResponseOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryOSDiskImageResponseOutput) SizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) int { return v.SizeInGB }).(pulumi.IntOutput)
}

// The source for the disk image.
func (o GalleryOSDiskImageResponseOutput) Source() GalleryDiskImageSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) *GalleryDiskImageSourceResponse { return v.Source }).(GalleryDiskImageSourceResponsePtrOutput)
}

type GalleryOSDiskImageResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImageResponse)(nil)).Elem()
}

func (o GalleryOSDiskImageResponsePtrOutput) ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput {
	return o
}

func (o GalleryOSDiskImageResponsePtrOutput) ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx context.Context) GalleryOSDiskImageResponsePtrOutput {
	return o
}

func (o GalleryOSDiskImageResponsePtrOutput) Elem() GalleryOSDiskImageResponseOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) GalleryOSDiskImageResponse {
		if v != nil {
			return *v
		}
		var ret GalleryOSDiskImageResponse
		return ret
	}).(GalleryOSDiskImageResponseOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImageResponsePtrOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostCaching
	}).(pulumi.StringPtrOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryOSDiskImageResponsePtrOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SizeInGB
	}).(pulumi.IntPtrOutput)
}

// The source for the disk image.
func (o GalleryOSDiskImageResponsePtrOutput) Source() GalleryDiskImageSourceResponsePtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *GalleryDiskImageSourceResponse {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GalleryDiskImageSourceResponsePtrOutput)
}

type GalleryTargetExtendedLocation struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption *EncryptionImages `pulumi:"encryption"`
	// The name of the extended location.
	ExtendedLocation *GalleryExtendedLocation `pulumi:"extendedLocation"`
	// The number of replicas of the Image Version to be created per extended location. This property is updatable.
	ExtendedLocationReplicaCount *int `pulumi:"extendedLocationReplicaCount"`
	// The name of the region.
	Name *string `pulumi:"name"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// GalleryTargetExtendedLocationInput is an input type that accepts GalleryTargetExtendedLocationArgs and GalleryTargetExtendedLocationOutput values.
// You can construct a concrete instance of `GalleryTargetExtendedLocationInput` via:
//
//	GalleryTargetExtendedLocationArgs{...}
type GalleryTargetExtendedLocationInput interface {
	pulumi.Input

	ToGalleryTargetExtendedLocationOutput() GalleryTargetExtendedLocationOutput
	ToGalleryTargetExtendedLocationOutputWithContext(context.Context) GalleryTargetExtendedLocationOutput
}

type GalleryTargetExtendedLocationArgs struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption EncryptionImagesPtrInput `pulumi:"encryption"`
	// The name of the extended location.
	ExtendedLocation GalleryExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// The number of replicas of the Image Version to be created per extended location. This property is updatable.
	ExtendedLocationReplicaCount pulumi.IntPtrInput `pulumi:"extendedLocationReplicaCount"`
	// The name of the region.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (GalleryTargetExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryTargetExtendedLocation)(nil)).Elem()
}

func (i GalleryTargetExtendedLocationArgs) ToGalleryTargetExtendedLocationOutput() GalleryTargetExtendedLocationOutput {
	return i.ToGalleryTargetExtendedLocationOutputWithContext(context.Background())
}

func (i GalleryTargetExtendedLocationArgs) ToGalleryTargetExtendedLocationOutputWithContext(ctx context.Context) GalleryTargetExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryTargetExtendedLocationOutput)
}

// GalleryTargetExtendedLocationArrayInput is an input type that accepts GalleryTargetExtendedLocationArray and GalleryTargetExtendedLocationArrayOutput values.
// You can construct a concrete instance of `GalleryTargetExtendedLocationArrayInput` via:
//
//	GalleryTargetExtendedLocationArray{ GalleryTargetExtendedLocationArgs{...} }
type GalleryTargetExtendedLocationArrayInput interface {
	pulumi.Input

	ToGalleryTargetExtendedLocationArrayOutput() GalleryTargetExtendedLocationArrayOutput
	ToGalleryTargetExtendedLocationArrayOutputWithContext(context.Context) GalleryTargetExtendedLocationArrayOutput
}

type GalleryTargetExtendedLocationArray []GalleryTargetExtendedLocationInput

func (GalleryTargetExtendedLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryTargetExtendedLocation)(nil)).Elem()
}

func (i GalleryTargetExtendedLocationArray) ToGalleryTargetExtendedLocationArrayOutput() GalleryTargetExtendedLocationArrayOutput {
	return i.ToGalleryTargetExtendedLocationArrayOutputWithContext(context.Background())
}

func (i GalleryTargetExtendedLocationArray) ToGalleryTargetExtendedLocationArrayOutputWithContext(ctx context.Context) GalleryTargetExtendedLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryTargetExtendedLocationArrayOutput)
}

type GalleryTargetExtendedLocationOutput struct{ *pulumi.OutputState }

func (GalleryTargetExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryTargetExtendedLocation)(nil)).Elem()
}

func (o GalleryTargetExtendedLocationOutput) ToGalleryTargetExtendedLocationOutput() GalleryTargetExtendedLocationOutput {
	return o
}

func (o GalleryTargetExtendedLocationOutput) ToGalleryTargetExtendedLocationOutputWithContext(ctx context.Context) GalleryTargetExtendedLocationOutput {
	return o
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
func (o GalleryTargetExtendedLocationOutput) Encryption() EncryptionImagesPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocation) *EncryptionImages { return v.Encryption }).(EncryptionImagesPtrOutput)
}

// The name of the extended location.
func (o GalleryTargetExtendedLocationOutput) ExtendedLocation() GalleryExtendedLocationPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocation) *GalleryExtendedLocation { return v.ExtendedLocation }).(GalleryExtendedLocationPtrOutput)
}

// The number of replicas of the Image Version to be created per extended location. This property is updatable.
func (o GalleryTargetExtendedLocationOutput) ExtendedLocationReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocation) *int { return v.ExtendedLocationReplicaCount }).(pulumi.IntPtrOutput)
}

// The name of the region.
func (o GalleryTargetExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryTargetExtendedLocationOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocation) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type GalleryTargetExtendedLocationArrayOutput struct{ *pulumi.OutputState }

func (GalleryTargetExtendedLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryTargetExtendedLocation)(nil)).Elem()
}

func (o GalleryTargetExtendedLocationArrayOutput) ToGalleryTargetExtendedLocationArrayOutput() GalleryTargetExtendedLocationArrayOutput {
	return o
}

func (o GalleryTargetExtendedLocationArrayOutput) ToGalleryTargetExtendedLocationArrayOutputWithContext(ctx context.Context) GalleryTargetExtendedLocationArrayOutput {
	return o
}

func (o GalleryTargetExtendedLocationArrayOutput) Index(i pulumi.IntInput) GalleryTargetExtendedLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryTargetExtendedLocation {
		return vs[0].([]GalleryTargetExtendedLocation)[vs[1].(int)]
	}).(GalleryTargetExtendedLocationOutput)
}

type GalleryTargetExtendedLocationResponse struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption *EncryptionImagesResponse `pulumi:"encryption"`
	// The name of the extended location.
	ExtendedLocation *GalleryExtendedLocationResponse `pulumi:"extendedLocation"`
	// The number of replicas of the Image Version to be created per extended location. This property is updatable.
	ExtendedLocationReplicaCount *int `pulumi:"extendedLocationReplicaCount"`
	// The name of the region.
	Name *string `pulumi:"name"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

type GalleryTargetExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (GalleryTargetExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryTargetExtendedLocationResponse)(nil)).Elem()
}

func (o GalleryTargetExtendedLocationResponseOutput) ToGalleryTargetExtendedLocationResponseOutput() GalleryTargetExtendedLocationResponseOutput {
	return o
}

func (o GalleryTargetExtendedLocationResponseOutput) ToGalleryTargetExtendedLocationResponseOutputWithContext(ctx context.Context) GalleryTargetExtendedLocationResponseOutput {
	return o
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
func (o GalleryTargetExtendedLocationResponseOutput) Encryption() EncryptionImagesResponsePtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocationResponse) *EncryptionImagesResponse { return v.Encryption }).(EncryptionImagesResponsePtrOutput)
}

// The name of the extended location.
func (o GalleryTargetExtendedLocationResponseOutput) ExtendedLocation() GalleryExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocationResponse) *GalleryExtendedLocationResponse {
		return v.ExtendedLocation
	}).(GalleryExtendedLocationResponsePtrOutput)
}

// The number of replicas of the Image Version to be created per extended location. This property is updatable.
func (o GalleryTargetExtendedLocationResponseOutput) ExtendedLocationReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocationResponse) *int { return v.ExtendedLocationReplicaCount }).(pulumi.IntPtrOutput)
}

// The name of the region.
func (o GalleryTargetExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryTargetExtendedLocationResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryTargetExtendedLocationResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type GalleryTargetExtendedLocationResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryTargetExtendedLocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryTargetExtendedLocationResponse)(nil)).Elem()
}

func (o GalleryTargetExtendedLocationResponseArrayOutput) ToGalleryTargetExtendedLocationResponseArrayOutput() GalleryTargetExtendedLocationResponseArrayOutput {
	return o
}

func (o GalleryTargetExtendedLocationResponseArrayOutput) ToGalleryTargetExtendedLocationResponseArrayOutputWithContext(ctx context.Context) GalleryTargetExtendedLocationResponseArrayOutput {
	return o
}

func (o GalleryTargetExtendedLocationResponseArrayOutput) Index(i pulumi.IntInput) GalleryTargetExtendedLocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryTargetExtendedLocationResponse {
		return vs[0].([]GalleryTargetExtendedLocationResponse)[vs[1].(int)]
	}).(GalleryTargetExtendedLocationResponseOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlan struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// The product ID.
	Product *string `pulumi:"product"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// ImagePurchasePlanInput is an input type that accepts ImagePurchasePlanArgs and ImagePurchasePlanOutput values.
// You can construct a concrete instance of `ImagePurchasePlanInput` via:
//
//	ImagePurchasePlanArgs{...}
type ImagePurchasePlanInput interface {
	pulumi.Input

	ToImagePurchasePlanOutput() ImagePurchasePlanOutput
	ToImagePurchasePlanOutputWithContext(context.Context) ImagePurchasePlanOutput
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The product ID.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The publisher ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (ImagePurchasePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlan)(nil)).Elem()
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanOutput() ImagePurchasePlanOutput {
	return i.ToImagePurchasePlanOutputWithContext(context.Background())
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanOutputWithContext(ctx context.Context) ImagePurchasePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanOutput)
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return i.ToImagePurchasePlanPtrOutputWithContext(context.Background())
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanOutput).ToImagePurchasePlanPtrOutputWithContext(ctx)
}

// ImagePurchasePlanPtrInput is an input type that accepts ImagePurchasePlanArgs, ImagePurchasePlanPtr and ImagePurchasePlanPtrOutput values.
// You can construct a concrete instance of `ImagePurchasePlanPtrInput` via:
//
//	        ImagePurchasePlanArgs{...}
//
//	or:
//
//	        nil
type ImagePurchasePlanPtrInput interface {
	pulumi.Input

	ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput
	ToImagePurchasePlanPtrOutputWithContext(context.Context) ImagePurchasePlanPtrOutput
}

type imagePurchasePlanPtrType ImagePurchasePlanArgs

func ImagePurchasePlanPtr(v *ImagePurchasePlanArgs) ImagePurchasePlanPtrInput {
	return (*imagePurchasePlanPtrType)(v)
}

func (*imagePurchasePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlan)(nil)).Elem()
}

func (i *imagePurchasePlanPtrType) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return i.ToImagePurchasePlanPtrOutputWithContext(context.Background())
}

func (i *imagePurchasePlanPtrType) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanPtrOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlan)(nil)).Elem()
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanOutput() ImagePurchasePlanOutput {
	return o
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanOutputWithContext(ctx context.Context) ImagePurchasePlanOutput {
	return o
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return o.ToImagePurchasePlanPtrOutputWithContext(context.Background())
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagePurchasePlan) *ImagePurchasePlan {
		return &v
	}).(ImagePurchasePlanPtrOutput)
}

// The plan ID.
func (o ImagePurchasePlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type ImagePurchasePlanPtrOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlan)(nil)).Elem()
}

func (o ImagePurchasePlanPtrOutput) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return o
}

func (o ImagePurchasePlanPtrOutput) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return o
}

func (o ImagePurchasePlanPtrOutput) Elem() ImagePurchasePlanOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) ImagePurchasePlan {
		if v != nil {
			return *v
		}
		var ret ImagePurchasePlan
		return ret
	}).(ImagePurchasePlanOutput)
}

// The plan ID.
func (o ImagePurchasePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanResponse struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// The product ID.
	Product *string `pulumi:"product"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanResponseOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlanResponse)(nil)).Elem()
}

func (o ImagePurchasePlanResponseOutput) ToImagePurchasePlanResponseOutput() ImagePurchasePlanResponseOutput {
	return o
}

func (o ImagePurchasePlanResponseOutput) ToImagePurchasePlanResponseOutputWithContext(ctx context.Context) ImagePurchasePlanResponseOutput {
	return o
}

// The plan ID.
func (o ImagePurchasePlanResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type ImagePurchasePlanResponsePtrOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlanResponse)(nil)).Elem()
}

func (o ImagePurchasePlanResponsePtrOutput) ToImagePurchasePlanResponsePtrOutput() ImagePurchasePlanResponsePtrOutput {
	return o
}

func (o ImagePurchasePlanResponsePtrOutput) ToImagePurchasePlanResponsePtrOutputWithContext(ctx context.Context) ImagePurchasePlanResponsePtrOutput {
	return o
}

func (o ImagePurchasePlanResponsePtrOutput) Elem() ImagePurchasePlanResponseOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) ImagePurchasePlanResponse {
		if v != nil {
			return *v
		}
		var ret ImagePurchasePlanResponse
		return ret
	}).(ImagePurchasePlanResponseOutput)
}

// The plan ID.
func (o ImagePurchasePlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The security profile of a gallery image version
type ImageVersionSecurityProfile struct {
	// Contains UEFI settings for the image version.
	UefiSettings *GalleryImageVersionUefiSettings `pulumi:"uefiSettings"`
}

// ImageVersionSecurityProfileInput is an input type that accepts ImageVersionSecurityProfileArgs and ImageVersionSecurityProfileOutput values.
// You can construct a concrete instance of `ImageVersionSecurityProfileInput` via:
//
//	ImageVersionSecurityProfileArgs{...}
type ImageVersionSecurityProfileInput interface {
	pulumi.Input

	ToImageVersionSecurityProfileOutput() ImageVersionSecurityProfileOutput
	ToImageVersionSecurityProfileOutputWithContext(context.Context) ImageVersionSecurityProfileOutput
}

// The security profile of a gallery image version
type ImageVersionSecurityProfileArgs struct {
	// Contains UEFI settings for the image version.
	UefiSettings GalleryImageVersionUefiSettingsPtrInput `pulumi:"uefiSettings"`
}

func (ImageVersionSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageVersionSecurityProfile)(nil)).Elem()
}

func (i ImageVersionSecurityProfileArgs) ToImageVersionSecurityProfileOutput() ImageVersionSecurityProfileOutput {
	return i.ToImageVersionSecurityProfileOutputWithContext(context.Background())
}

func (i ImageVersionSecurityProfileArgs) ToImageVersionSecurityProfileOutputWithContext(ctx context.Context) ImageVersionSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageVersionSecurityProfileOutput)
}

func (i ImageVersionSecurityProfileArgs) ToImageVersionSecurityProfilePtrOutput() ImageVersionSecurityProfilePtrOutput {
	return i.ToImageVersionSecurityProfilePtrOutputWithContext(context.Background())
}

func (i ImageVersionSecurityProfileArgs) ToImageVersionSecurityProfilePtrOutputWithContext(ctx context.Context) ImageVersionSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageVersionSecurityProfileOutput).ToImageVersionSecurityProfilePtrOutputWithContext(ctx)
}

// ImageVersionSecurityProfilePtrInput is an input type that accepts ImageVersionSecurityProfileArgs, ImageVersionSecurityProfilePtr and ImageVersionSecurityProfilePtrOutput values.
// You can construct a concrete instance of `ImageVersionSecurityProfilePtrInput` via:
//
//	        ImageVersionSecurityProfileArgs{...}
//
//	or:
//
//	        nil
type ImageVersionSecurityProfilePtrInput interface {
	pulumi.Input

	ToImageVersionSecurityProfilePtrOutput() ImageVersionSecurityProfilePtrOutput
	ToImageVersionSecurityProfilePtrOutputWithContext(context.Context) ImageVersionSecurityProfilePtrOutput
}

type imageVersionSecurityProfilePtrType ImageVersionSecurityProfileArgs

func ImageVersionSecurityProfilePtr(v *ImageVersionSecurityProfileArgs) ImageVersionSecurityProfilePtrInput {
	return (*imageVersionSecurityProfilePtrType)(v)
}

func (*imageVersionSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageVersionSecurityProfile)(nil)).Elem()
}

func (i *imageVersionSecurityProfilePtrType) ToImageVersionSecurityProfilePtrOutput() ImageVersionSecurityProfilePtrOutput {
	return i.ToImageVersionSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *imageVersionSecurityProfilePtrType) ToImageVersionSecurityProfilePtrOutputWithContext(ctx context.Context) ImageVersionSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageVersionSecurityProfilePtrOutput)
}

// The security profile of a gallery image version
type ImageVersionSecurityProfileOutput struct{ *pulumi.OutputState }

func (ImageVersionSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageVersionSecurityProfile)(nil)).Elem()
}

func (o ImageVersionSecurityProfileOutput) ToImageVersionSecurityProfileOutput() ImageVersionSecurityProfileOutput {
	return o
}

func (o ImageVersionSecurityProfileOutput) ToImageVersionSecurityProfileOutputWithContext(ctx context.Context) ImageVersionSecurityProfileOutput {
	return o
}

func (o ImageVersionSecurityProfileOutput) ToImageVersionSecurityProfilePtrOutput() ImageVersionSecurityProfilePtrOutput {
	return o.ToImageVersionSecurityProfilePtrOutputWithContext(context.Background())
}

func (o ImageVersionSecurityProfileOutput) ToImageVersionSecurityProfilePtrOutputWithContext(ctx context.Context) ImageVersionSecurityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageVersionSecurityProfile) *ImageVersionSecurityProfile {
		return &v
	}).(ImageVersionSecurityProfilePtrOutput)
}

// Contains UEFI settings for the image version.
func (o ImageVersionSecurityProfileOutput) UefiSettings() GalleryImageVersionUefiSettingsPtrOutput {
	return o.ApplyT(func(v ImageVersionSecurityProfile) *GalleryImageVersionUefiSettings { return v.UefiSettings }).(GalleryImageVersionUefiSettingsPtrOutput)
}

type ImageVersionSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (ImageVersionSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageVersionSecurityProfile)(nil)).Elem()
}

func (o ImageVersionSecurityProfilePtrOutput) ToImageVersionSecurityProfilePtrOutput() ImageVersionSecurityProfilePtrOutput {
	return o
}

func (o ImageVersionSecurityProfilePtrOutput) ToImageVersionSecurityProfilePtrOutputWithContext(ctx context.Context) ImageVersionSecurityProfilePtrOutput {
	return o
}

func (o ImageVersionSecurityProfilePtrOutput) Elem() ImageVersionSecurityProfileOutput {
	return o.ApplyT(func(v *ImageVersionSecurityProfile) ImageVersionSecurityProfile {
		if v != nil {
			return *v
		}
		var ret ImageVersionSecurityProfile
		return ret
	}).(ImageVersionSecurityProfileOutput)
}

// Contains UEFI settings for the image version.
func (o ImageVersionSecurityProfilePtrOutput) UefiSettings() GalleryImageVersionUefiSettingsPtrOutput {
	return o.ApplyT(func(v *ImageVersionSecurityProfile) *GalleryImageVersionUefiSettings {
		if v == nil {
			return nil
		}
		return v.UefiSettings
	}).(GalleryImageVersionUefiSettingsPtrOutput)
}

// The security profile of a gallery image version
type ImageVersionSecurityProfileResponse struct {
	// Contains UEFI settings for the image version.
	UefiSettings *GalleryImageVersionUefiSettingsResponse `pulumi:"uefiSettings"`
}

// The security profile of a gallery image version
type ImageVersionSecurityProfileResponseOutput struct{ *pulumi.OutputState }

func (ImageVersionSecurityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageVersionSecurityProfileResponse)(nil)).Elem()
}

func (o ImageVersionSecurityProfileResponseOutput) ToImageVersionSecurityProfileResponseOutput() ImageVersionSecurityProfileResponseOutput {
	return o
}

func (o ImageVersionSecurityProfileResponseOutput) ToImageVersionSecurityProfileResponseOutputWithContext(ctx context.Context) ImageVersionSecurityProfileResponseOutput {
	return o
}

// Contains UEFI settings for the image version.
func (o ImageVersionSecurityProfileResponseOutput) UefiSettings() GalleryImageVersionUefiSettingsResponsePtrOutput {
	return o.ApplyT(func(v ImageVersionSecurityProfileResponse) *GalleryImageVersionUefiSettingsResponse {
		return v.UefiSettings
	}).(GalleryImageVersionUefiSettingsResponsePtrOutput)
}

type ImageVersionSecurityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageVersionSecurityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageVersionSecurityProfileResponse)(nil)).Elem()
}

func (o ImageVersionSecurityProfileResponsePtrOutput) ToImageVersionSecurityProfileResponsePtrOutput() ImageVersionSecurityProfileResponsePtrOutput {
	return o
}

func (o ImageVersionSecurityProfileResponsePtrOutput) ToImageVersionSecurityProfileResponsePtrOutputWithContext(ctx context.Context) ImageVersionSecurityProfileResponsePtrOutput {
	return o
}

func (o ImageVersionSecurityProfileResponsePtrOutput) Elem() ImageVersionSecurityProfileResponseOutput {
	return o.ApplyT(func(v *ImageVersionSecurityProfileResponse) ImageVersionSecurityProfileResponse {
		if v != nil {
			return *v
		}
		var ret ImageVersionSecurityProfileResponse
		return ret
	}).(ImageVersionSecurityProfileResponseOutput)
}

// Contains UEFI settings for the image version.
func (o ImageVersionSecurityProfileResponsePtrOutput) UefiSettings() GalleryImageVersionUefiSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ImageVersionSecurityProfileResponse) *GalleryImageVersionUefiSettingsResponse {
		if v == nil {
			return nil
		}
		return v.UefiSettings
	}).(GalleryImageVersionUefiSettingsResponsePtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryption struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// This property specifies the security profile of an OS disk image.
	SecurityProfile *OSDiskImageSecurityProfile `pulumi:"securityProfile"`
}

// OSDiskImageEncryptionInput is an input type that accepts OSDiskImageEncryptionArgs and OSDiskImageEncryptionOutput values.
// You can construct a concrete instance of `OSDiskImageEncryptionInput` via:
//
//	OSDiskImageEncryptionArgs{...}
type OSDiskImageEncryptionInput interface {
	pulumi.Input

	ToOSDiskImageEncryptionOutput() OSDiskImageEncryptionOutput
	ToOSDiskImageEncryptionOutputWithContext(context.Context) OSDiskImageEncryptionOutput
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionArgs struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// This property specifies the security profile of an OS disk image.
	SecurityProfile OSDiskImageSecurityProfilePtrInput `pulumi:"securityProfile"`
}

func (OSDiskImageEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryption)(nil)).Elem()
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionOutput() OSDiskImageEncryptionOutput {
	return i.ToOSDiskImageEncryptionOutputWithContext(context.Background())
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionOutputWithContext(ctx context.Context) OSDiskImageEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionOutput)
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return i.ToOSDiskImageEncryptionPtrOutputWithContext(context.Background())
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionOutput).ToOSDiskImageEncryptionPtrOutputWithContext(ctx)
}

// OSDiskImageEncryptionPtrInput is an input type that accepts OSDiskImageEncryptionArgs, OSDiskImageEncryptionPtr and OSDiskImageEncryptionPtrOutput values.
// You can construct a concrete instance of `OSDiskImageEncryptionPtrInput` via:
//
//	        OSDiskImageEncryptionArgs{...}
//
//	or:
//
//	        nil
type OSDiskImageEncryptionPtrInput interface {
	pulumi.Input

	ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput
	ToOSDiskImageEncryptionPtrOutputWithContext(context.Context) OSDiskImageEncryptionPtrOutput
}

type osdiskImageEncryptionPtrType OSDiskImageEncryptionArgs

func OSDiskImageEncryptionPtr(v *OSDiskImageEncryptionArgs) OSDiskImageEncryptionPtrInput {
	return (*osdiskImageEncryptionPtrType)(v)
}

func (*osdiskImageEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryption)(nil)).Elem()
}

func (i *osdiskImageEncryptionPtrType) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return i.ToOSDiskImageEncryptionPtrOutputWithContext(context.Background())
}

func (i *osdiskImageEncryptionPtrType) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionPtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryption)(nil)).Elem()
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionOutput() OSDiskImageEncryptionOutput {
	return o
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionOutputWithContext(ctx context.Context) OSDiskImageEncryptionOutput {
	return o
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return o.ToOSDiskImageEncryptionPtrOutputWithContext(context.Background())
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSDiskImageEncryption) *OSDiskImageEncryption {
		return &v
	}).(OSDiskImageEncryptionPtrOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryption) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// This property specifies the security profile of an OS disk image.
func (o OSDiskImageEncryptionOutput) SecurityProfile() OSDiskImageSecurityProfilePtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryption) *OSDiskImageSecurityProfile { return v.SecurityProfile }).(OSDiskImageSecurityProfilePtrOutput)
}

type OSDiskImageEncryptionPtrOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryption)(nil)).Elem()
}

func (o OSDiskImageEncryptionPtrOutput) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return o
}

func (o OSDiskImageEncryptionPtrOutput) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return o
}

func (o OSDiskImageEncryptionPtrOutput) Elem() OSDiskImageEncryptionOutput {
	return o.ApplyT(func(v *OSDiskImageEncryption) OSDiskImageEncryption {
		if v != nil {
			return *v
		}
		var ret OSDiskImageEncryption
		return ret
	}).(OSDiskImageEncryptionOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageEncryption) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// This property specifies the security profile of an OS disk image.
func (o OSDiskImageEncryptionPtrOutput) SecurityProfile() OSDiskImageSecurityProfilePtrOutput {
	return o.ApplyT(func(v *OSDiskImageEncryption) *OSDiskImageSecurityProfile {
		if v == nil {
			return nil
		}
		return v.SecurityProfile
	}).(OSDiskImageSecurityProfilePtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionResponse struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// This property specifies the security profile of an OS disk image.
	SecurityProfile *OSDiskImageSecurityProfileResponse `pulumi:"securityProfile"`
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionResponseOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryptionResponse)(nil)).Elem()
}

func (o OSDiskImageEncryptionResponseOutput) ToOSDiskImageEncryptionResponseOutput() OSDiskImageEncryptionResponseOutput {
	return o
}

func (o OSDiskImageEncryptionResponseOutput) ToOSDiskImageEncryptionResponseOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponseOutput {
	return o
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryptionResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// This property specifies the security profile of an OS disk image.
func (o OSDiskImageEncryptionResponseOutput) SecurityProfile() OSDiskImageSecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryptionResponse) *OSDiskImageSecurityProfileResponse { return v.SecurityProfile }).(OSDiskImageSecurityProfileResponsePtrOutput)
}

type OSDiskImageEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryptionResponse)(nil)).Elem()
}

func (o OSDiskImageEncryptionResponsePtrOutput) ToOSDiskImageEncryptionResponsePtrOutput() OSDiskImageEncryptionResponsePtrOutput {
	return o
}

func (o OSDiskImageEncryptionResponsePtrOutput) ToOSDiskImageEncryptionResponsePtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponsePtrOutput {
	return o
}

func (o OSDiskImageEncryptionResponsePtrOutput) Elem() OSDiskImageEncryptionResponseOutput {
	return o.ApplyT(func(v *OSDiskImageEncryptionResponse) OSDiskImageEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret OSDiskImageEncryptionResponse
		return ret
	}).(OSDiskImageEncryptionResponseOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionResponsePtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// This property specifies the security profile of an OS disk image.
func (o OSDiskImageEncryptionResponsePtrOutput) SecurityProfile() OSDiskImageSecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskImageEncryptionResponse) *OSDiskImageSecurityProfileResponse {
		if v == nil {
			return nil
		}
		return v.SecurityProfile
	}).(OSDiskImageSecurityProfileResponsePtrOutput)
}

// Contains security profile for an OS disk image.
type OSDiskImageSecurityProfile struct {
	// confidential VM encryption types
	ConfidentialVMEncryptionType *string `pulumi:"confidentialVMEncryptionType"`
	// secure VM disk encryption set id
	SecureVMDiskEncryptionSetId *string `pulumi:"secureVMDiskEncryptionSetId"`
}

// OSDiskImageSecurityProfileInput is an input type that accepts OSDiskImageSecurityProfileArgs and OSDiskImageSecurityProfileOutput values.
// You can construct a concrete instance of `OSDiskImageSecurityProfileInput` via:
//
//	OSDiskImageSecurityProfileArgs{...}
type OSDiskImageSecurityProfileInput interface {
	pulumi.Input

	ToOSDiskImageSecurityProfileOutput() OSDiskImageSecurityProfileOutput
	ToOSDiskImageSecurityProfileOutputWithContext(context.Context) OSDiskImageSecurityProfileOutput
}

// Contains security profile for an OS disk image.
type OSDiskImageSecurityProfileArgs struct {
	// confidential VM encryption types
	ConfidentialVMEncryptionType pulumi.StringPtrInput `pulumi:"confidentialVMEncryptionType"`
	// secure VM disk encryption set id
	SecureVMDiskEncryptionSetId pulumi.StringPtrInput `pulumi:"secureVMDiskEncryptionSetId"`
}

func (OSDiskImageSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageSecurityProfile)(nil)).Elem()
}

func (i OSDiskImageSecurityProfileArgs) ToOSDiskImageSecurityProfileOutput() OSDiskImageSecurityProfileOutput {
	return i.ToOSDiskImageSecurityProfileOutputWithContext(context.Background())
}

func (i OSDiskImageSecurityProfileArgs) ToOSDiskImageSecurityProfileOutputWithContext(ctx context.Context) OSDiskImageSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageSecurityProfileOutput)
}

func (i OSDiskImageSecurityProfileArgs) ToOSDiskImageSecurityProfilePtrOutput() OSDiskImageSecurityProfilePtrOutput {
	return i.ToOSDiskImageSecurityProfilePtrOutputWithContext(context.Background())
}

func (i OSDiskImageSecurityProfileArgs) ToOSDiskImageSecurityProfilePtrOutputWithContext(ctx context.Context) OSDiskImageSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageSecurityProfileOutput).ToOSDiskImageSecurityProfilePtrOutputWithContext(ctx)
}

// OSDiskImageSecurityProfilePtrInput is an input type that accepts OSDiskImageSecurityProfileArgs, OSDiskImageSecurityProfilePtr and OSDiskImageSecurityProfilePtrOutput values.
// You can construct a concrete instance of `OSDiskImageSecurityProfilePtrInput` via:
//
//	        OSDiskImageSecurityProfileArgs{...}
//
//	or:
//
//	        nil
type OSDiskImageSecurityProfilePtrInput interface {
	pulumi.Input

	ToOSDiskImageSecurityProfilePtrOutput() OSDiskImageSecurityProfilePtrOutput
	ToOSDiskImageSecurityProfilePtrOutputWithContext(context.Context) OSDiskImageSecurityProfilePtrOutput
}

type osdiskImageSecurityProfilePtrType OSDiskImageSecurityProfileArgs

func OSDiskImageSecurityProfilePtr(v *OSDiskImageSecurityProfileArgs) OSDiskImageSecurityProfilePtrInput {
	return (*osdiskImageSecurityProfilePtrType)(v)
}

func (*osdiskImageSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageSecurityProfile)(nil)).Elem()
}

func (i *osdiskImageSecurityProfilePtrType) ToOSDiskImageSecurityProfilePtrOutput() OSDiskImageSecurityProfilePtrOutput {
	return i.ToOSDiskImageSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *osdiskImageSecurityProfilePtrType) ToOSDiskImageSecurityProfilePtrOutputWithContext(ctx context.Context) OSDiskImageSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageSecurityProfilePtrOutput)
}

// Contains security profile for an OS disk image.
type OSDiskImageSecurityProfileOutput struct{ *pulumi.OutputState }

func (OSDiskImageSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageSecurityProfile)(nil)).Elem()
}

func (o OSDiskImageSecurityProfileOutput) ToOSDiskImageSecurityProfileOutput() OSDiskImageSecurityProfileOutput {
	return o
}

func (o OSDiskImageSecurityProfileOutput) ToOSDiskImageSecurityProfileOutputWithContext(ctx context.Context) OSDiskImageSecurityProfileOutput {
	return o
}

func (o OSDiskImageSecurityProfileOutput) ToOSDiskImageSecurityProfilePtrOutput() OSDiskImageSecurityProfilePtrOutput {
	return o.ToOSDiskImageSecurityProfilePtrOutputWithContext(context.Background())
}

func (o OSDiskImageSecurityProfileOutput) ToOSDiskImageSecurityProfilePtrOutputWithContext(ctx context.Context) OSDiskImageSecurityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSDiskImageSecurityProfile) *OSDiskImageSecurityProfile {
		return &v
	}).(OSDiskImageSecurityProfilePtrOutput)
}

// confidential VM encryption types
func (o OSDiskImageSecurityProfileOutput) ConfidentialVMEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageSecurityProfile) *string { return v.ConfidentialVMEncryptionType }).(pulumi.StringPtrOutput)
}

// secure VM disk encryption set id
func (o OSDiskImageSecurityProfileOutput) SecureVMDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageSecurityProfile) *string { return v.SecureVMDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

type OSDiskImageSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (OSDiskImageSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageSecurityProfile)(nil)).Elem()
}

func (o OSDiskImageSecurityProfilePtrOutput) ToOSDiskImageSecurityProfilePtrOutput() OSDiskImageSecurityProfilePtrOutput {
	return o
}

func (o OSDiskImageSecurityProfilePtrOutput) ToOSDiskImageSecurityProfilePtrOutputWithContext(ctx context.Context) OSDiskImageSecurityProfilePtrOutput {
	return o
}

func (o OSDiskImageSecurityProfilePtrOutput) Elem() OSDiskImageSecurityProfileOutput {
	return o.ApplyT(func(v *OSDiskImageSecurityProfile) OSDiskImageSecurityProfile {
		if v != nil {
			return *v
		}
		var ret OSDiskImageSecurityProfile
		return ret
	}).(OSDiskImageSecurityProfileOutput)
}

// confidential VM encryption types
func (o OSDiskImageSecurityProfilePtrOutput) ConfidentialVMEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.ConfidentialVMEncryptionType
	}).(pulumi.StringPtrOutput)
}

// secure VM disk encryption set id
func (o OSDiskImageSecurityProfilePtrOutput) SecureVMDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SecureVMDiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// Contains security profile for an OS disk image.
type OSDiskImageSecurityProfileResponse struct {
	// confidential VM encryption types
	ConfidentialVMEncryptionType *string `pulumi:"confidentialVMEncryptionType"`
	// secure VM disk encryption set id
	SecureVMDiskEncryptionSetId *string `pulumi:"secureVMDiskEncryptionSetId"`
}

// Contains security profile for an OS disk image.
type OSDiskImageSecurityProfileResponseOutput struct{ *pulumi.OutputState }

func (OSDiskImageSecurityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageSecurityProfileResponse)(nil)).Elem()
}

func (o OSDiskImageSecurityProfileResponseOutput) ToOSDiskImageSecurityProfileResponseOutput() OSDiskImageSecurityProfileResponseOutput {
	return o
}

func (o OSDiskImageSecurityProfileResponseOutput) ToOSDiskImageSecurityProfileResponseOutputWithContext(ctx context.Context) OSDiskImageSecurityProfileResponseOutput {
	return o
}

// confidential VM encryption types
func (o OSDiskImageSecurityProfileResponseOutput) ConfidentialVMEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageSecurityProfileResponse) *string { return v.ConfidentialVMEncryptionType }).(pulumi.StringPtrOutput)
}

// secure VM disk encryption set id
func (o OSDiskImageSecurityProfileResponseOutput) SecureVMDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageSecurityProfileResponse) *string { return v.SecureVMDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

type OSDiskImageSecurityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskImageSecurityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageSecurityProfileResponse)(nil)).Elem()
}

func (o OSDiskImageSecurityProfileResponsePtrOutput) ToOSDiskImageSecurityProfileResponsePtrOutput() OSDiskImageSecurityProfileResponsePtrOutput {
	return o
}

func (o OSDiskImageSecurityProfileResponsePtrOutput) ToOSDiskImageSecurityProfileResponsePtrOutputWithContext(ctx context.Context) OSDiskImageSecurityProfileResponsePtrOutput {
	return o
}

func (o OSDiskImageSecurityProfileResponsePtrOutput) Elem() OSDiskImageSecurityProfileResponseOutput {
	return o.ApplyT(func(v *OSDiskImageSecurityProfileResponse) OSDiskImageSecurityProfileResponse {
		if v != nil {
			return *v
		}
		var ret OSDiskImageSecurityProfileResponse
		return ret
	}).(OSDiskImageSecurityProfileResponseOutput)
}

// confidential VM encryption types
func (o OSDiskImageSecurityProfileResponsePtrOutput) ConfidentialVMEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageSecurityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfidentialVMEncryptionType
	}).(pulumi.StringPtrOutput)
}

// secure VM disk encryption set id
func (o OSDiskImageSecurityProfileResponsePtrOutput) SecureVMDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageSecurityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecureVMDiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// A policy violation reported against a gallery artifact.
type PolicyViolationResponse struct {
	// Describes the nature of the policy violation.
	Category *string `pulumi:"category"`
	// Describes specific details about why this policy violation was reported.
	Details *string `pulumi:"details"`
}

// A policy violation reported against a gallery artifact.
type PolicyViolationResponseOutput struct{ *pulumi.OutputState }

func (PolicyViolationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyViolationResponse)(nil)).Elem()
}

func (o PolicyViolationResponseOutput) ToPolicyViolationResponseOutput() PolicyViolationResponseOutput {
	return o
}

func (o PolicyViolationResponseOutput) ToPolicyViolationResponseOutputWithContext(ctx context.Context) PolicyViolationResponseOutput {
	return o
}

// Describes the nature of the policy violation.
func (o PolicyViolationResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyViolationResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Describes specific details about why this policy violation was reported.
func (o PolicyViolationResponseOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyViolationResponse) *string { return v.Details }).(pulumi.StringPtrOutput)
}

type PolicyViolationResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyViolationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyViolationResponse)(nil)).Elem()
}

func (o PolicyViolationResponseArrayOutput) ToPolicyViolationResponseArrayOutput() PolicyViolationResponseArrayOutput {
	return o
}

func (o PolicyViolationResponseArrayOutput) ToPolicyViolationResponseArrayOutputWithContext(ctx context.Context) PolicyViolationResponseArrayOutput {
	return o
}

func (o PolicyViolationResponseArrayOutput) Index(i pulumi.IntInput) PolicyViolationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyViolationResponse {
		return vs[0].([]PolicyViolationResponse)[vs[1].(int)]
	}).(PolicyViolationResponseOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfiguration struct {
	// Describes the resource range.
	Memory *ResourceRange `pulumi:"memory"`
	// Describes the resource range.
	VCPUs *ResourceRange `pulumi:"vCPUs"`
}

// RecommendedMachineConfigurationInput is an input type that accepts RecommendedMachineConfigurationArgs and RecommendedMachineConfigurationOutput values.
// You can construct a concrete instance of `RecommendedMachineConfigurationInput` via:
//
//	RecommendedMachineConfigurationArgs{...}
type RecommendedMachineConfigurationInput interface {
	pulumi.Input

	ToRecommendedMachineConfigurationOutput() RecommendedMachineConfigurationOutput
	ToRecommendedMachineConfigurationOutputWithContext(context.Context) RecommendedMachineConfigurationOutput
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationArgs struct {
	// Describes the resource range.
	Memory ResourceRangePtrInput `pulumi:"memory"`
	// Describes the resource range.
	VCPUs ResourceRangePtrInput `pulumi:"vCPUs"`
}

func (RecommendedMachineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfiguration)(nil)).Elem()
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationOutput() RecommendedMachineConfigurationOutput {
	return i.ToRecommendedMachineConfigurationOutputWithContext(context.Background())
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationOutputWithContext(ctx context.Context) RecommendedMachineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationOutput)
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return i.ToRecommendedMachineConfigurationPtrOutputWithContext(context.Background())
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationOutput).ToRecommendedMachineConfigurationPtrOutputWithContext(ctx)
}

// RecommendedMachineConfigurationPtrInput is an input type that accepts RecommendedMachineConfigurationArgs, RecommendedMachineConfigurationPtr and RecommendedMachineConfigurationPtrOutput values.
// You can construct a concrete instance of `RecommendedMachineConfigurationPtrInput` via:
//
//	        RecommendedMachineConfigurationArgs{...}
//
//	or:
//
//	        nil
type RecommendedMachineConfigurationPtrInput interface {
	pulumi.Input

	ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput
	ToRecommendedMachineConfigurationPtrOutputWithContext(context.Context) RecommendedMachineConfigurationPtrOutput
}

type recommendedMachineConfigurationPtrType RecommendedMachineConfigurationArgs

func RecommendedMachineConfigurationPtr(v *RecommendedMachineConfigurationArgs) RecommendedMachineConfigurationPtrInput {
	return (*recommendedMachineConfigurationPtrType)(v)
}

func (*recommendedMachineConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfiguration)(nil)).Elem()
}

func (i *recommendedMachineConfigurationPtrType) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return i.ToRecommendedMachineConfigurationPtrOutputWithContext(context.Background())
}

func (i *recommendedMachineConfigurationPtrType) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationPtrOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfiguration)(nil)).Elem()
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationOutput() RecommendedMachineConfigurationOutput {
	return o
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationOutputWithContext(ctx context.Context) RecommendedMachineConfigurationOutput {
	return o
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return o.ToRecommendedMachineConfigurationPtrOutputWithContext(context.Background())
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecommendedMachineConfiguration) *RecommendedMachineConfiguration {
		return &v
	}).(RecommendedMachineConfigurationPtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationOutput) Memory() ResourceRangePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfiguration) *ResourceRange { return v.Memory }).(ResourceRangePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationOutput) VCPUs() ResourceRangePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfiguration) *ResourceRange { return v.VCPUs }).(ResourceRangePtrOutput)
}

type RecommendedMachineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfiguration)(nil)).Elem()
}

func (o RecommendedMachineConfigurationPtrOutput) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return o
}

func (o RecommendedMachineConfigurationPtrOutput) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return o
}

func (o RecommendedMachineConfigurationPtrOutput) Elem() RecommendedMachineConfigurationOutput {
	return o.ApplyT(func(v *RecommendedMachineConfiguration) RecommendedMachineConfiguration {
		if v != nil {
			return *v
		}
		var ret RecommendedMachineConfiguration
		return ret
	}).(RecommendedMachineConfigurationOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationPtrOutput) Memory() ResourceRangePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfiguration) *ResourceRange {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(ResourceRangePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationPtrOutput) VCPUs() ResourceRangePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfiguration) *ResourceRange {
		if v == nil {
			return nil
		}
		return v.VCPUs
	}).(ResourceRangePtrOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationResponse struct {
	// Describes the resource range.
	Memory *ResourceRangeResponse `pulumi:"memory"`
	// Describes the resource range.
	VCPUs *ResourceRangeResponse `pulumi:"vCPUs"`
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfigurationResponse)(nil)).Elem()
}

func (o RecommendedMachineConfigurationResponseOutput) ToRecommendedMachineConfigurationResponseOutput() RecommendedMachineConfigurationResponseOutput {
	return o
}

func (o RecommendedMachineConfigurationResponseOutput) ToRecommendedMachineConfigurationResponseOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponseOutput {
	return o
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponseOutput) Memory() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfigurationResponse) *ResourceRangeResponse { return v.Memory }).(ResourceRangeResponsePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponseOutput) VCPUs() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfigurationResponse) *ResourceRangeResponse { return v.VCPUs }).(ResourceRangeResponsePtrOutput)
}

type RecommendedMachineConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfigurationResponse)(nil)).Elem()
}

func (o RecommendedMachineConfigurationResponsePtrOutput) ToRecommendedMachineConfigurationResponsePtrOutput() RecommendedMachineConfigurationResponsePtrOutput {
	return o
}

func (o RecommendedMachineConfigurationResponsePtrOutput) ToRecommendedMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponsePtrOutput {
	return o
}

func (o RecommendedMachineConfigurationResponsePtrOutput) Elem() RecommendedMachineConfigurationResponseOutput {
	return o.ApplyT(func(v *RecommendedMachineConfigurationResponse) RecommendedMachineConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret RecommendedMachineConfigurationResponse
		return ret
	}).(RecommendedMachineConfigurationResponseOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponsePtrOutput) Memory() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfigurationResponse) *ResourceRangeResponse {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(ResourceRangeResponsePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponsePtrOutput) VCPUs() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfigurationResponse) *ResourceRangeResponse {
		if v == nil {
			return nil
		}
		return v.VCPUs
	}).(ResourceRangeResponsePtrOutput)
}

// This is the regional replication status.
type RegionalReplicationStatusResponse struct {
	// The details of the replication status.
	Details string `pulumi:"details"`
	// It indicates progress of the replication job.
	Progress int `pulumi:"progress"`
	// The region to which the gallery image version is being replicated to.
	Region string `pulumi:"region"`
	// This is the regional replication state.
	State string `pulumi:"state"`
}

// This is the regional replication status.
type RegionalReplicationStatusResponseOutput struct{ *pulumi.OutputState }

func (RegionalReplicationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalReplicationStatusResponse)(nil)).Elem()
}

func (o RegionalReplicationStatusResponseOutput) ToRegionalReplicationStatusResponseOutput() RegionalReplicationStatusResponseOutput {
	return o
}

func (o RegionalReplicationStatusResponseOutput) ToRegionalReplicationStatusResponseOutputWithContext(ctx context.Context) RegionalReplicationStatusResponseOutput {
	return o
}

// The details of the replication status.
func (o RegionalReplicationStatusResponseOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) string { return v.Details }).(pulumi.StringOutput)
}

// It indicates progress of the replication job.
func (o RegionalReplicationStatusResponseOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) int { return v.Progress }).(pulumi.IntOutput)
}

// The region to which the gallery image version is being replicated to.
func (o RegionalReplicationStatusResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) string { return v.Region }).(pulumi.StringOutput)
}

// This is the regional replication state.
func (o RegionalReplicationStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

type RegionalReplicationStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (RegionalReplicationStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionalReplicationStatusResponse)(nil)).Elem()
}

func (o RegionalReplicationStatusResponseArrayOutput) ToRegionalReplicationStatusResponseArrayOutput() RegionalReplicationStatusResponseArrayOutput {
	return o
}

func (o RegionalReplicationStatusResponseArrayOutput) ToRegionalReplicationStatusResponseArrayOutputWithContext(ctx context.Context) RegionalReplicationStatusResponseArrayOutput {
	return o
}

func (o RegionalReplicationStatusResponseArrayOutput) Index(i pulumi.IntInput) RegionalReplicationStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionalReplicationStatusResponse {
		return vs[0].([]RegionalReplicationStatusResponse)[vs[1].(int)]
	}).(RegionalReplicationStatusResponseOutput)
}

// Gallery regional sharing status
type RegionalSharingStatusResponse struct {
	// Details of gallery regional sharing failure.
	Details *string `pulumi:"details"`
	// Region name
	Region *string `pulumi:"region"`
	// Gallery sharing state in current region
	State string `pulumi:"state"`
}

// Gallery regional sharing status
type RegionalSharingStatusResponseOutput struct{ *pulumi.OutputState }

func (RegionalSharingStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalSharingStatusResponse)(nil)).Elem()
}

func (o RegionalSharingStatusResponseOutput) ToRegionalSharingStatusResponseOutput() RegionalSharingStatusResponseOutput {
	return o
}

func (o RegionalSharingStatusResponseOutput) ToRegionalSharingStatusResponseOutputWithContext(ctx context.Context) RegionalSharingStatusResponseOutput {
	return o
}

// Details of gallery regional sharing failure.
func (o RegionalSharingStatusResponseOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionalSharingStatusResponse) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// Region name
func (o RegionalSharingStatusResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionalSharingStatusResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Gallery sharing state in current region
func (o RegionalSharingStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalSharingStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

type RegionalSharingStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (RegionalSharingStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionalSharingStatusResponse)(nil)).Elem()
}

func (o RegionalSharingStatusResponseArrayOutput) ToRegionalSharingStatusResponseArrayOutput() RegionalSharingStatusResponseArrayOutput {
	return o
}

func (o RegionalSharingStatusResponseArrayOutput) ToRegionalSharingStatusResponseArrayOutputWithContext(ctx context.Context) RegionalSharingStatusResponseArrayOutput {
	return o
}

func (o RegionalSharingStatusResponseArrayOutput) Index(i pulumi.IntInput) RegionalSharingStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionalSharingStatusResponse {
		return vs[0].([]RegionalSharingStatusResponse)[vs[1].(int)]
	}).(RegionalSharingStatusResponseOutput)
}

// This is the replication status of the gallery image version.
type ReplicationStatusResponse struct {
	// This is the aggregated replication status based on all the regional replication status flags.
	AggregatedState string `pulumi:"aggregatedState"`
	// This is a summary of replication status for each region.
	Summary []RegionalReplicationStatusResponse `pulumi:"summary"`
}

// This is the replication status of the gallery image version.
type ReplicationStatusResponseOutput struct{ *pulumi.OutputState }

func (ReplicationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationStatusResponse)(nil)).Elem()
}

func (o ReplicationStatusResponseOutput) ToReplicationStatusResponseOutput() ReplicationStatusResponseOutput {
	return o
}

func (o ReplicationStatusResponseOutput) ToReplicationStatusResponseOutputWithContext(ctx context.Context) ReplicationStatusResponseOutput {
	return o
}

// This is the aggregated replication status based on all the regional replication status flags.
func (o ReplicationStatusResponseOutput) AggregatedState() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationStatusResponse) string { return v.AggregatedState }).(pulumi.StringOutput)
}

// This is a summary of replication status for each region.
func (o ReplicationStatusResponseOutput) Summary() RegionalReplicationStatusResponseArrayOutput {
	return o.ApplyT(func(v ReplicationStatusResponse) []RegionalReplicationStatusResponse { return v.Summary }).(RegionalReplicationStatusResponseArrayOutput)
}

// Describes the resource range.
type ResourceRange struct {
	// The maximum number of the resource.
	Max *int `pulumi:"max"`
	// The minimum number of the resource.
	Min *int `pulumi:"min"`
}

// ResourceRangeInput is an input type that accepts ResourceRangeArgs and ResourceRangeOutput values.
// You can construct a concrete instance of `ResourceRangeInput` via:
//
//	ResourceRangeArgs{...}
type ResourceRangeInput interface {
	pulumi.Input

	ToResourceRangeOutput() ResourceRangeOutput
	ToResourceRangeOutputWithContext(context.Context) ResourceRangeOutput
}

// Describes the resource range.
type ResourceRangeArgs struct {
	// The maximum number of the resource.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimum number of the resource.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ResourceRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRange)(nil)).Elem()
}

func (i ResourceRangeArgs) ToResourceRangeOutput() ResourceRangeOutput {
	return i.ToResourceRangeOutputWithContext(context.Background())
}

func (i ResourceRangeArgs) ToResourceRangeOutputWithContext(ctx context.Context) ResourceRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeOutput)
}

func (i ResourceRangeArgs) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return i.ToResourceRangePtrOutputWithContext(context.Background())
}

func (i ResourceRangeArgs) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeOutput).ToResourceRangePtrOutputWithContext(ctx)
}

// ResourceRangePtrInput is an input type that accepts ResourceRangeArgs, ResourceRangePtr and ResourceRangePtrOutput values.
// You can construct a concrete instance of `ResourceRangePtrInput` via:
//
//	        ResourceRangeArgs{...}
//
//	or:
//
//	        nil
type ResourceRangePtrInput interface {
	pulumi.Input

	ToResourceRangePtrOutput() ResourceRangePtrOutput
	ToResourceRangePtrOutputWithContext(context.Context) ResourceRangePtrOutput
}

type resourceRangePtrType ResourceRangeArgs

func ResourceRangePtr(v *ResourceRangeArgs) ResourceRangePtrInput {
	return (*resourceRangePtrType)(v)
}

func (*resourceRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRange)(nil)).Elem()
}

func (i *resourceRangePtrType) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return i.ToResourceRangePtrOutputWithContext(context.Background())
}

func (i *resourceRangePtrType) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangePtrOutput)
}

// Describes the resource range.
type ResourceRangeOutput struct{ *pulumi.OutputState }

func (ResourceRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRange)(nil)).Elem()
}

func (o ResourceRangeOutput) ToResourceRangeOutput() ResourceRangeOutput {
	return o
}

func (o ResourceRangeOutput) ToResourceRangeOutputWithContext(ctx context.Context) ResourceRangeOutput {
	return o
}

func (o ResourceRangeOutput) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return o.ToResourceRangePtrOutputWithContext(context.Background())
}

func (o ResourceRangeOutput) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceRange) *ResourceRange {
		return &v
	}).(ResourceRangePtrOutput)
}

// The maximum number of the resource.
func (o ResourceRangeOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRange) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangeOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRange) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ResourceRangePtrOutput struct{ *pulumi.OutputState }

func (ResourceRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRange)(nil)).Elem()
}

func (o ResourceRangePtrOutput) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return o
}

func (o ResourceRangePtrOutput) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return o
}

func (o ResourceRangePtrOutput) Elem() ResourceRangeOutput {
	return o.ApplyT(func(v *ResourceRange) ResourceRange {
		if v != nil {
			return *v
		}
		var ret ResourceRange
		return ret
	}).(ResourceRangeOutput)
}

// The maximum number of the resource.
func (o ResourceRangePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRange) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRange) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Describes the resource range.
type ResourceRangeResponse struct {
	// The maximum number of the resource.
	Max *int `pulumi:"max"`
	// The minimum number of the resource.
	Min *int `pulumi:"min"`
}

// Describes the resource range.
type ResourceRangeResponseOutput struct{ *pulumi.OutputState }

func (ResourceRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRangeResponse)(nil)).Elem()
}

func (o ResourceRangeResponseOutput) ToResourceRangeResponseOutput() ResourceRangeResponseOutput {
	return o
}

func (o ResourceRangeResponseOutput) ToResourceRangeResponseOutputWithContext(ctx context.Context) ResourceRangeResponseOutput {
	return o
}

// The maximum number of the resource.
func (o ResourceRangeResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRangeResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangeResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRangeResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ResourceRangeResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceRangeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRangeResponse)(nil)).Elem()
}

func (o ResourceRangeResponsePtrOutput) ToResourceRangeResponsePtrOutput() ResourceRangeResponsePtrOutput {
	return o
}

func (o ResourceRangeResponsePtrOutput) ToResourceRangeResponsePtrOutputWithContext(ctx context.Context) ResourceRangeResponsePtrOutput {
	return o
}

func (o ResourceRangeResponsePtrOutput) Elem() ResourceRangeResponseOutput {
	return o.ApplyT(func(v *ResourceRangeResponse) ResourceRangeResponse {
		if v != nil {
			return *v
		}
		var ret ResourceRangeResponse
		return ret
	}).(ResourceRangeResponseOutput)
}

// The maximum number of the resource.
func (o ResourceRangeResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRangeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangeResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRangeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfile struct {
	// Information of community gallery if current gallery is shared to community.
	CommunityGalleryInfo *CommunityGalleryInfo `pulumi:"communityGalleryInfo"`
	// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
	Permissions *string `pulumi:"permissions"`
}

// SharingProfileInput is an input type that accepts SharingProfileArgs and SharingProfileOutput values.
// You can construct a concrete instance of `SharingProfileInput` via:
//
//	SharingProfileArgs{...}
type SharingProfileInput interface {
	pulumi.Input

	ToSharingProfileOutput() SharingProfileOutput
	ToSharingProfileOutputWithContext(context.Context) SharingProfileOutput
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileArgs struct {
	// Information of community gallery if current gallery is shared to community.
	CommunityGalleryInfo CommunityGalleryInfoPtrInput `pulumi:"communityGalleryInfo"`
	// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
}

func (SharingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfile)(nil)).Elem()
}

func (i SharingProfileArgs) ToSharingProfileOutput() SharingProfileOutput {
	return i.ToSharingProfileOutputWithContext(context.Background())
}

func (i SharingProfileArgs) ToSharingProfileOutputWithContext(ctx context.Context) SharingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileOutput)
}

func (i SharingProfileArgs) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return i.ToSharingProfilePtrOutputWithContext(context.Background())
}

func (i SharingProfileArgs) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileOutput).ToSharingProfilePtrOutputWithContext(ctx)
}

// SharingProfilePtrInput is an input type that accepts SharingProfileArgs, SharingProfilePtr and SharingProfilePtrOutput values.
// You can construct a concrete instance of `SharingProfilePtrInput` via:
//
//	        SharingProfileArgs{...}
//
//	or:
//
//	        nil
type SharingProfilePtrInput interface {
	pulumi.Input

	ToSharingProfilePtrOutput() SharingProfilePtrOutput
	ToSharingProfilePtrOutputWithContext(context.Context) SharingProfilePtrOutput
}

type sharingProfilePtrType SharingProfileArgs

func SharingProfilePtr(v *SharingProfileArgs) SharingProfilePtrInput {
	return (*sharingProfilePtrType)(v)
}

func (*sharingProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfile)(nil)).Elem()
}

func (i *sharingProfilePtrType) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return i.ToSharingProfilePtrOutputWithContext(context.Background())
}

func (i *sharingProfilePtrType) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfilePtrOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileOutput struct{ *pulumi.OutputState }

func (SharingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfile)(nil)).Elem()
}

func (o SharingProfileOutput) ToSharingProfileOutput() SharingProfileOutput {
	return o
}

func (o SharingProfileOutput) ToSharingProfileOutputWithContext(ctx context.Context) SharingProfileOutput {
	return o
}

func (o SharingProfileOutput) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return o.ToSharingProfilePtrOutputWithContext(context.Background())
}

func (o SharingProfileOutput) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SharingProfile) *SharingProfile {
		return &v
	}).(SharingProfilePtrOutput)
}

// Information of community gallery if current gallery is shared to community.
func (o SharingProfileOutput) CommunityGalleryInfo() CommunityGalleryInfoPtrOutput {
	return o.ApplyT(func(v SharingProfile) *CommunityGalleryInfo { return v.CommunityGalleryInfo }).(CommunityGalleryInfoPtrOutput)
}

// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
func (o SharingProfileOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharingProfile) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type SharingProfilePtrOutput struct{ *pulumi.OutputState }

func (SharingProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfile)(nil)).Elem()
}

func (o SharingProfilePtrOutput) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return o
}

func (o SharingProfilePtrOutput) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return o
}

func (o SharingProfilePtrOutput) Elem() SharingProfileOutput {
	return o.ApplyT(func(v *SharingProfile) SharingProfile {
		if v != nil {
			return *v
		}
		var ret SharingProfile
		return ret
	}).(SharingProfileOutput)
}

// Information of community gallery if current gallery is shared to community.
func (o SharingProfilePtrOutput) CommunityGalleryInfo() CommunityGalleryInfoPtrOutput {
	return o.ApplyT(func(v *SharingProfile) *CommunityGalleryInfo {
		if v == nil {
			return nil
		}
		return v.CommunityGalleryInfo
	}).(CommunityGalleryInfoPtrOutput)
}

// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
func (o SharingProfilePtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharingProfile) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Group of the gallery sharing profile
type SharingProfileGroupResponse struct {
	// A list of subscription/tenant ids the gallery is aimed to be shared to.
	Ids []string `pulumi:"ids"`
	// This property allows you to specify the type of sharing group. Possible values are: **Subscriptions,** **AADTenants.**
	Type *string `pulumi:"type"`
}

// Group of the gallery sharing profile
type SharingProfileGroupResponseOutput struct{ *pulumi.OutputState }

func (SharingProfileGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfileGroupResponse)(nil)).Elem()
}

func (o SharingProfileGroupResponseOutput) ToSharingProfileGroupResponseOutput() SharingProfileGroupResponseOutput {
	return o
}

func (o SharingProfileGroupResponseOutput) ToSharingProfileGroupResponseOutputWithContext(ctx context.Context) SharingProfileGroupResponseOutput {
	return o
}

// A list of subscription/tenant ids the gallery is aimed to be shared to.
func (o SharingProfileGroupResponseOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SharingProfileGroupResponse) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// This property allows you to specify the type of sharing group. Possible values are: **Subscriptions,** **AADTenants.**
func (o SharingProfileGroupResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharingProfileGroupResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SharingProfileGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (SharingProfileGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharingProfileGroupResponse)(nil)).Elem()
}

func (o SharingProfileGroupResponseArrayOutput) ToSharingProfileGroupResponseArrayOutput() SharingProfileGroupResponseArrayOutput {
	return o
}

func (o SharingProfileGroupResponseArrayOutput) ToSharingProfileGroupResponseArrayOutputWithContext(ctx context.Context) SharingProfileGroupResponseArrayOutput {
	return o
}

func (o SharingProfileGroupResponseArrayOutput) Index(i pulumi.IntInput) SharingProfileGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharingProfileGroupResponse {
		return vs[0].([]SharingProfileGroupResponse)[vs[1].(int)]
	}).(SharingProfileGroupResponseOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileResponse struct {
	// Information of community gallery if current gallery is shared to community.
	CommunityGalleryInfo *CommunityGalleryInfoResponse `pulumi:"communityGalleryInfo"`
	// A list of sharing profile groups.
	Groups []SharingProfileGroupResponse `pulumi:"groups"`
	// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
	Permissions *string `pulumi:"permissions"`
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileResponseOutput struct{ *pulumi.OutputState }

func (SharingProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfileResponse)(nil)).Elem()
}

func (o SharingProfileResponseOutput) ToSharingProfileResponseOutput() SharingProfileResponseOutput {
	return o
}

func (o SharingProfileResponseOutput) ToSharingProfileResponseOutputWithContext(ctx context.Context) SharingProfileResponseOutput {
	return o
}

// Information of community gallery if current gallery is shared to community.
func (o SharingProfileResponseOutput) CommunityGalleryInfo() CommunityGalleryInfoResponsePtrOutput {
	return o.ApplyT(func(v SharingProfileResponse) *CommunityGalleryInfoResponse { return v.CommunityGalleryInfo }).(CommunityGalleryInfoResponsePtrOutput)
}

// A list of sharing profile groups.
func (o SharingProfileResponseOutput) Groups() SharingProfileGroupResponseArrayOutput {
	return o.ApplyT(func(v SharingProfileResponse) []SharingProfileGroupResponse { return v.Groups }).(SharingProfileGroupResponseArrayOutput)
}

// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
func (o SharingProfileResponseOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharingProfileResponse) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type SharingProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (SharingProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfileResponse)(nil)).Elem()
}

func (o SharingProfileResponsePtrOutput) ToSharingProfileResponsePtrOutput() SharingProfileResponsePtrOutput {
	return o
}

func (o SharingProfileResponsePtrOutput) ToSharingProfileResponsePtrOutputWithContext(ctx context.Context) SharingProfileResponsePtrOutput {
	return o
}

func (o SharingProfileResponsePtrOutput) Elem() SharingProfileResponseOutput {
	return o.ApplyT(func(v *SharingProfileResponse) SharingProfileResponse {
		if v != nil {
			return *v
		}
		var ret SharingProfileResponse
		return ret
	}).(SharingProfileResponseOutput)
}

// Information of community gallery if current gallery is shared to community.
func (o SharingProfileResponsePtrOutput) CommunityGalleryInfo() CommunityGalleryInfoResponsePtrOutput {
	return o.ApplyT(func(v *SharingProfileResponse) *CommunityGalleryInfoResponse {
		if v == nil {
			return nil
		}
		return v.CommunityGalleryInfo
	}).(CommunityGalleryInfoResponsePtrOutput)
}

// A list of sharing profile groups.
func (o SharingProfileResponsePtrOutput) Groups() SharingProfileGroupResponseArrayOutput {
	return o.ApplyT(func(v *SharingProfileResponse) []SharingProfileGroupResponse {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(SharingProfileGroupResponseArrayOutput)
}

// This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**
func (o SharingProfileResponsePtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Sharing status of current gallery.
type SharingStatusResponse struct {
	// Aggregated sharing state of current gallery.
	AggregatedState string `pulumi:"aggregatedState"`
	// Summary of all regional sharing status.
	Summary []RegionalSharingStatusResponse `pulumi:"summary"`
}

// Sharing status of current gallery.
type SharingStatusResponseOutput struct{ *pulumi.OutputState }

func (SharingStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingStatusResponse)(nil)).Elem()
}

func (o SharingStatusResponseOutput) ToSharingStatusResponseOutput() SharingStatusResponseOutput {
	return o
}

func (o SharingStatusResponseOutput) ToSharingStatusResponseOutputWithContext(ctx context.Context) SharingStatusResponseOutput {
	return o
}

// Aggregated sharing state of current gallery.
func (o SharingStatusResponseOutput) AggregatedState() pulumi.StringOutput {
	return o.ApplyT(func(v SharingStatusResponse) string { return v.AggregatedState }).(pulumi.StringOutput)
}

// Summary of all regional sharing status.
func (o SharingStatusResponseOutput) Summary() RegionalSharingStatusResponseArrayOutput {
	return o.ApplyT(func(v SharingStatusResponse) []RegionalSharingStatusResponse { return v.Summary }).(RegionalSharingStatusResponseArrayOutput)
}

// Contains information about the soft deletion policy of the gallery.
type SoftDeletePolicy struct {
	// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
	IsSoftDeleteEnabled *bool `pulumi:"isSoftDeleteEnabled"`
}

// SoftDeletePolicyInput is an input type that accepts SoftDeletePolicyArgs and SoftDeletePolicyOutput values.
// You can construct a concrete instance of `SoftDeletePolicyInput` via:
//
//	SoftDeletePolicyArgs{...}
type SoftDeletePolicyInput interface {
	pulumi.Input

	ToSoftDeletePolicyOutput() SoftDeletePolicyOutput
	ToSoftDeletePolicyOutputWithContext(context.Context) SoftDeletePolicyOutput
}

// Contains information about the soft deletion policy of the gallery.
type SoftDeletePolicyArgs struct {
	// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
	IsSoftDeleteEnabled pulumi.BoolPtrInput `pulumi:"isSoftDeleteEnabled"`
}

func (SoftDeletePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeletePolicy)(nil)).Elem()
}

func (i SoftDeletePolicyArgs) ToSoftDeletePolicyOutput() SoftDeletePolicyOutput {
	return i.ToSoftDeletePolicyOutputWithContext(context.Background())
}

func (i SoftDeletePolicyArgs) ToSoftDeletePolicyOutputWithContext(ctx context.Context) SoftDeletePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeletePolicyOutput)
}

func (i SoftDeletePolicyArgs) ToSoftDeletePolicyPtrOutput() SoftDeletePolicyPtrOutput {
	return i.ToSoftDeletePolicyPtrOutputWithContext(context.Background())
}

func (i SoftDeletePolicyArgs) ToSoftDeletePolicyPtrOutputWithContext(ctx context.Context) SoftDeletePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeletePolicyOutput).ToSoftDeletePolicyPtrOutputWithContext(ctx)
}

// SoftDeletePolicyPtrInput is an input type that accepts SoftDeletePolicyArgs, SoftDeletePolicyPtr and SoftDeletePolicyPtrOutput values.
// You can construct a concrete instance of `SoftDeletePolicyPtrInput` via:
//
//	        SoftDeletePolicyArgs{...}
//
//	or:
//
//	        nil
type SoftDeletePolicyPtrInput interface {
	pulumi.Input

	ToSoftDeletePolicyPtrOutput() SoftDeletePolicyPtrOutput
	ToSoftDeletePolicyPtrOutputWithContext(context.Context) SoftDeletePolicyPtrOutput
}

type softDeletePolicyPtrType SoftDeletePolicyArgs

func SoftDeletePolicyPtr(v *SoftDeletePolicyArgs) SoftDeletePolicyPtrInput {
	return (*softDeletePolicyPtrType)(v)
}

func (*softDeletePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeletePolicy)(nil)).Elem()
}

func (i *softDeletePolicyPtrType) ToSoftDeletePolicyPtrOutput() SoftDeletePolicyPtrOutput {
	return i.ToSoftDeletePolicyPtrOutputWithContext(context.Background())
}

func (i *softDeletePolicyPtrType) ToSoftDeletePolicyPtrOutputWithContext(ctx context.Context) SoftDeletePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeletePolicyPtrOutput)
}

// Contains information about the soft deletion policy of the gallery.
type SoftDeletePolicyOutput struct{ *pulumi.OutputState }

func (SoftDeletePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeletePolicy)(nil)).Elem()
}

func (o SoftDeletePolicyOutput) ToSoftDeletePolicyOutput() SoftDeletePolicyOutput {
	return o
}

func (o SoftDeletePolicyOutput) ToSoftDeletePolicyOutputWithContext(ctx context.Context) SoftDeletePolicyOutput {
	return o
}

func (o SoftDeletePolicyOutput) ToSoftDeletePolicyPtrOutput() SoftDeletePolicyPtrOutput {
	return o.ToSoftDeletePolicyPtrOutputWithContext(context.Background())
}

func (o SoftDeletePolicyOutput) ToSoftDeletePolicyPtrOutputWithContext(ctx context.Context) SoftDeletePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftDeletePolicy) *SoftDeletePolicy {
		return &v
	}).(SoftDeletePolicyPtrOutput)
}

// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
func (o SoftDeletePolicyOutput) IsSoftDeleteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SoftDeletePolicy) *bool { return v.IsSoftDeleteEnabled }).(pulumi.BoolPtrOutput)
}

type SoftDeletePolicyPtrOutput struct{ *pulumi.OutputState }

func (SoftDeletePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeletePolicy)(nil)).Elem()
}

func (o SoftDeletePolicyPtrOutput) ToSoftDeletePolicyPtrOutput() SoftDeletePolicyPtrOutput {
	return o
}

func (o SoftDeletePolicyPtrOutput) ToSoftDeletePolicyPtrOutputWithContext(ctx context.Context) SoftDeletePolicyPtrOutput {
	return o
}

func (o SoftDeletePolicyPtrOutput) Elem() SoftDeletePolicyOutput {
	return o.ApplyT(func(v *SoftDeletePolicy) SoftDeletePolicy {
		if v != nil {
			return *v
		}
		var ret SoftDeletePolicy
		return ret
	}).(SoftDeletePolicyOutput)
}

// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
func (o SoftDeletePolicyPtrOutput) IsSoftDeleteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SoftDeletePolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsSoftDeleteEnabled
	}).(pulumi.BoolPtrOutput)
}

// Contains information about the soft deletion policy of the gallery.
type SoftDeletePolicyResponse struct {
	// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
	IsSoftDeleteEnabled *bool `pulumi:"isSoftDeleteEnabled"`
}

// Contains information about the soft deletion policy of the gallery.
type SoftDeletePolicyResponseOutput struct{ *pulumi.OutputState }

func (SoftDeletePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeletePolicyResponse)(nil)).Elem()
}

func (o SoftDeletePolicyResponseOutput) ToSoftDeletePolicyResponseOutput() SoftDeletePolicyResponseOutput {
	return o
}

func (o SoftDeletePolicyResponseOutput) ToSoftDeletePolicyResponseOutputWithContext(ctx context.Context) SoftDeletePolicyResponseOutput {
	return o
}

// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
func (o SoftDeletePolicyResponseOutput) IsSoftDeleteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SoftDeletePolicyResponse) *bool { return v.IsSoftDeleteEnabled }).(pulumi.BoolPtrOutput)
}

type SoftDeletePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftDeletePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeletePolicyResponse)(nil)).Elem()
}

func (o SoftDeletePolicyResponsePtrOutput) ToSoftDeletePolicyResponsePtrOutput() SoftDeletePolicyResponsePtrOutput {
	return o
}

func (o SoftDeletePolicyResponsePtrOutput) ToSoftDeletePolicyResponsePtrOutputWithContext(ctx context.Context) SoftDeletePolicyResponsePtrOutput {
	return o
}

func (o SoftDeletePolicyResponsePtrOutput) Elem() SoftDeletePolicyResponseOutput {
	return o.ApplyT(func(v *SoftDeletePolicyResponse) SoftDeletePolicyResponse {
		if v != nil {
			return *v
		}
		var ret SoftDeletePolicyResponse
		return ret
	}).(SoftDeletePolicyResponseOutput)
}

// Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
func (o SoftDeletePolicyResponsePtrOutput) IsSoftDeleteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SoftDeletePolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsSoftDeleteEnabled
	}).(pulumi.BoolPtrOutput)
}

// Describes the target region information.
type TargetRegion struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption *EncryptionImages `pulumi:"encryption"`
	// Contains the flag setting to hide an image when users specify version='latest'
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The name of the region.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount *int `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// TargetRegionInput is an input type that accepts TargetRegionArgs and TargetRegionOutput values.
// You can construct a concrete instance of `TargetRegionInput` via:
//
//	TargetRegionArgs{...}
type TargetRegionInput interface {
	pulumi.Input

	ToTargetRegionOutput() TargetRegionOutput
	ToTargetRegionOutputWithContext(context.Context) TargetRegionOutput
}

// Describes the target region information.
type TargetRegionArgs struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption EncryptionImagesPtrInput `pulumi:"encryption"`
	// Contains the flag setting to hide an image when users specify version='latest'
	ExcludeFromLatest pulumi.BoolPtrInput `pulumi:"excludeFromLatest"`
	// The name of the region.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount pulumi.IntPtrInput `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (TargetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegion)(nil)).Elem()
}

func (i TargetRegionArgs) ToTargetRegionOutput() TargetRegionOutput {
	return i.ToTargetRegionOutputWithContext(context.Background())
}

func (i TargetRegionArgs) ToTargetRegionOutputWithContext(ctx context.Context) TargetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetRegionOutput)
}

// TargetRegionArrayInput is an input type that accepts TargetRegionArray and TargetRegionArrayOutput values.
// You can construct a concrete instance of `TargetRegionArrayInput` via:
//
//	TargetRegionArray{ TargetRegionArgs{...} }
type TargetRegionArrayInput interface {
	pulumi.Input

	ToTargetRegionArrayOutput() TargetRegionArrayOutput
	ToTargetRegionArrayOutputWithContext(context.Context) TargetRegionArrayOutput
}

type TargetRegionArray []TargetRegionInput

func (TargetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegion)(nil)).Elem()
}

func (i TargetRegionArray) ToTargetRegionArrayOutput() TargetRegionArrayOutput {
	return i.ToTargetRegionArrayOutputWithContext(context.Background())
}

func (i TargetRegionArray) ToTargetRegionArrayOutputWithContext(ctx context.Context) TargetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetRegionArrayOutput)
}

// Describes the target region information.
type TargetRegionOutput struct{ *pulumi.OutputState }

func (TargetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegion)(nil)).Elem()
}

func (o TargetRegionOutput) ToTargetRegionOutput() TargetRegionOutput {
	return o
}

func (o TargetRegionOutput) ToTargetRegionOutputWithContext(ctx context.Context) TargetRegionOutput {
	return o
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
func (o TargetRegionOutput) Encryption() EncryptionImagesPtrOutput {
	return o.ApplyT(func(v TargetRegion) *EncryptionImages { return v.Encryption }).(EncryptionImagesPtrOutput)
}

// Contains the flag setting to hide an image when users specify version='latest'
func (o TargetRegionOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetRegion) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o TargetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property is updatable.
func (o TargetRegionOutput) RegionalReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetRegion) *int { return v.RegionalReplicaCount }).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o TargetRegionOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetRegion) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type TargetRegionArrayOutput struct{ *pulumi.OutputState }

func (TargetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegion)(nil)).Elem()
}

func (o TargetRegionArrayOutput) ToTargetRegionArrayOutput() TargetRegionArrayOutput {
	return o
}

func (o TargetRegionArrayOutput) ToTargetRegionArrayOutputWithContext(ctx context.Context) TargetRegionArrayOutput {
	return o
}

func (o TargetRegionArrayOutput) Index(i pulumi.IntInput) TargetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetRegion {
		return vs[0].([]TargetRegion)[vs[1].(int)]
	}).(TargetRegionOutput)
}

// Describes the target region information.
type TargetRegionResponse struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption *EncryptionImagesResponse `pulumi:"encryption"`
	// Contains the flag setting to hide an image when users specify version='latest'
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The name of the region.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount *int `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// Describes the target region information.
type TargetRegionResponseOutput struct{ *pulumi.OutputState }

func (TargetRegionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegionResponse)(nil)).Elem()
}

func (o TargetRegionResponseOutput) ToTargetRegionResponseOutput() TargetRegionResponseOutput {
	return o
}

func (o TargetRegionResponseOutput) ToTargetRegionResponseOutputWithContext(ctx context.Context) TargetRegionResponseOutput {
	return o
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
func (o TargetRegionResponseOutput) Encryption() EncryptionImagesResponsePtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *EncryptionImagesResponse { return v.Encryption }).(EncryptionImagesResponsePtrOutput)
}

// Contains the flag setting to hide an image when users specify version='latest'
func (o TargetRegionResponseOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o TargetRegionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetRegionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property is updatable.
func (o TargetRegionResponseOutput) RegionalReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *int { return v.RegionalReplicaCount }).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o TargetRegionResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type TargetRegionResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetRegionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegionResponse)(nil)).Elem()
}

func (o TargetRegionResponseArrayOutput) ToTargetRegionResponseArrayOutput() TargetRegionResponseArrayOutput {
	return o
}

func (o TargetRegionResponseArrayOutput) ToTargetRegionResponseArrayOutputWithContext(ctx context.Context) TargetRegionResponseArrayOutput {
	return o
}

func (o TargetRegionResponseArrayOutput) Index(i pulumi.IntInput) TargetRegionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetRegionResponse {
		return vs[0].([]TargetRegionResponse)[vs[1].(int)]
	}).(TargetRegionResponseOutput)
}

// A UEFI key signature.
type UefiKey struct {
	// The type of key signature.
	Type *string `pulumi:"type"`
	// The value of the key signature.
	Value []string `pulumi:"value"`
}

// UefiKeyInput is an input type that accepts UefiKeyArgs and UefiKeyOutput values.
// You can construct a concrete instance of `UefiKeyInput` via:
//
//	UefiKeyArgs{...}
type UefiKeyInput interface {
	pulumi.Input

	ToUefiKeyOutput() UefiKeyOutput
	ToUefiKeyOutputWithContext(context.Context) UefiKeyOutput
}

// A UEFI key signature.
type UefiKeyArgs struct {
	// The type of key signature.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the key signature.
	Value pulumi.StringArrayInput `pulumi:"value"`
}

func (UefiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiKey)(nil)).Elem()
}

func (i UefiKeyArgs) ToUefiKeyOutput() UefiKeyOutput {
	return i.ToUefiKeyOutputWithContext(context.Background())
}

func (i UefiKeyArgs) ToUefiKeyOutputWithContext(ctx context.Context) UefiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeyOutput)
}

func (i UefiKeyArgs) ToUefiKeyPtrOutput() UefiKeyPtrOutput {
	return i.ToUefiKeyPtrOutputWithContext(context.Background())
}

func (i UefiKeyArgs) ToUefiKeyPtrOutputWithContext(ctx context.Context) UefiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeyOutput).ToUefiKeyPtrOutputWithContext(ctx)
}

// UefiKeyPtrInput is an input type that accepts UefiKeyArgs, UefiKeyPtr and UefiKeyPtrOutput values.
// You can construct a concrete instance of `UefiKeyPtrInput` via:
//
//	        UefiKeyArgs{...}
//
//	or:
//
//	        nil
type UefiKeyPtrInput interface {
	pulumi.Input

	ToUefiKeyPtrOutput() UefiKeyPtrOutput
	ToUefiKeyPtrOutputWithContext(context.Context) UefiKeyPtrOutput
}

type uefiKeyPtrType UefiKeyArgs

func UefiKeyPtr(v *UefiKeyArgs) UefiKeyPtrInput {
	return (*uefiKeyPtrType)(v)
}

func (*uefiKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiKey)(nil)).Elem()
}

func (i *uefiKeyPtrType) ToUefiKeyPtrOutput() UefiKeyPtrOutput {
	return i.ToUefiKeyPtrOutputWithContext(context.Background())
}

func (i *uefiKeyPtrType) ToUefiKeyPtrOutputWithContext(ctx context.Context) UefiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeyPtrOutput)
}

// UefiKeyArrayInput is an input type that accepts UefiKeyArray and UefiKeyArrayOutput values.
// You can construct a concrete instance of `UefiKeyArrayInput` via:
//
//	UefiKeyArray{ UefiKeyArgs{...} }
type UefiKeyArrayInput interface {
	pulumi.Input

	ToUefiKeyArrayOutput() UefiKeyArrayOutput
	ToUefiKeyArrayOutputWithContext(context.Context) UefiKeyArrayOutput
}

type UefiKeyArray []UefiKeyInput

func (UefiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UefiKey)(nil)).Elem()
}

func (i UefiKeyArray) ToUefiKeyArrayOutput() UefiKeyArrayOutput {
	return i.ToUefiKeyArrayOutputWithContext(context.Background())
}

func (i UefiKeyArray) ToUefiKeyArrayOutputWithContext(ctx context.Context) UefiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeyArrayOutput)
}

// A UEFI key signature.
type UefiKeyOutput struct{ *pulumi.OutputState }

func (UefiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiKey)(nil)).Elem()
}

func (o UefiKeyOutput) ToUefiKeyOutput() UefiKeyOutput {
	return o
}

func (o UefiKeyOutput) ToUefiKeyOutputWithContext(ctx context.Context) UefiKeyOutput {
	return o
}

func (o UefiKeyOutput) ToUefiKeyPtrOutput() UefiKeyPtrOutput {
	return o.ToUefiKeyPtrOutputWithContext(context.Background())
}

func (o UefiKeyOutput) ToUefiKeyPtrOutputWithContext(ctx context.Context) UefiKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UefiKey) *UefiKey {
		return &v
	}).(UefiKeyPtrOutput)
}

// The type of key signature.
func (o UefiKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UefiKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the key signature.
func (o UefiKeyOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UefiKey) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type UefiKeyPtrOutput struct{ *pulumi.OutputState }

func (UefiKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiKey)(nil)).Elem()
}

func (o UefiKeyPtrOutput) ToUefiKeyPtrOutput() UefiKeyPtrOutput {
	return o
}

func (o UefiKeyPtrOutput) ToUefiKeyPtrOutputWithContext(ctx context.Context) UefiKeyPtrOutput {
	return o
}

func (o UefiKeyPtrOutput) Elem() UefiKeyOutput {
	return o.ApplyT(func(v *UefiKey) UefiKey {
		if v != nil {
			return *v
		}
		var ret UefiKey
		return ret
	}).(UefiKeyOutput)
}

// The type of key signature.
func (o UefiKeyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UefiKey) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the key signature.
func (o UefiKeyPtrOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UefiKey) []string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringArrayOutput)
}

type UefiKeyArrayOutput struct{ *pulumi.OutputState }

func (UefiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UefiKey)(nil)).Elem()
}

func (o UefiKeyArrayOutput) ToUefiKeyArrayOutput() UefiKeyArrayOutput {
	return o
}

func (o UefiKeyArrayOutput) ToUefiKeyArrayOutputWithContext(ctx context.Context) UefiKeyArrayOutput {
	return o
}

func (o UefiKeyArrayOutput) Index(i pulumi.IntInput) UefiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UefiKey {
		return vs[0].([]UefiKey)[vs[1].(int)]
	}).(UefiKeyOutput)
}

// A UEFI key signature.
type UefiKeyResponse struct {
	// The type of key signature.
	Type *string `pulumi:"type"`
	// The value of the key signature.
	Value []string `pulumi:"value"`
}

// A UEFI key signature.
type UefiKeyResponseOutput struct{ *pulumi.OutputState }

func (UefiKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiKeyResponse)(nil)).Elem()
}

func (o UefiKeyResponseOutput) ToUefiKeyResponseOutput() UefiKeyResponseOutput {
	return o
}

func (o UefiKeyResponseOutput) ToUefiKeyResponseOutputWithContext(ctx context.Context) UefiKeyResponseOutput {
	return o
}

// The type of key signature.
func (o UefiKeyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UefiKeyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the key signature.
func (o UefiKeyResponseOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UefiKeyResponse) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type UefiKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (UefiKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiKeyResponse)(nil)).Elem()
}

func (o UefiKeyResponsePtrOutput) ToUefiKeyResponsePtrOutput() UefiKeyResponsePtrOutput {
	return o
}

func (o UefiKeyResponsePtrOutput) ToUefiKeyResponsePtrOutputWithContext(ctx context.Context) UefiKeyResponsePtrOutput {
	return o
}

func (o UefiKeyResponsePtrOutput) Elem() UefiKeyResponseOutput {
	return o.ApplyT(func(v *UefiKeyResponse) UefiKeyResponse {
		if v != nil {
			return *v
		}
		var ret UefiKeyResponse
		return ret
	}).(UefiKeyResponseOutput)
}

// The type of key signature.
func (o UefiKeyResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UefiKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the key signature.
func (o UefiKeyResponsePtrOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UefiKeyResponse) []string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringArrayOutput)
}

type UefiKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UefiKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UefiKeyResponse)(nil)).Elem()
}

func (o UefiKeyResponseArrayOutput) ToUefiKeyResponseArrayOutput() UefiKeyResponseArrayOutput {
	return o
}

func (o UefiKeyResponseArrayOutput) ToUefiKeyResponseArrayOutputWithContext(ctx context.Context) UefiKeyResponseArrayOutput {
	return o
}

func (o UefiKeyResponseArrayOutput) Index(i pulumi.IntInput) UefiKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UefiKeyResponse {
		return vs[0].([]UefiKeyResponse)[vs[1].(int)]
	}).(UefiKeyResponseOutput)
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
type UefiKeySignatures struct {
	// The database of UEFI keys for this image version.
	Db []UefiKey `pulumi:"db"`
	// The database of revoked UEFI keys for this image version.
	Dbx []UefiKey `pulumi:"dbx"`
	// The Key Encryption Keys of this image version.
	Kek []UefiKey `pulumi:"kek"`
	// The Platform Key of this image version.
	Pk *UefiKey `pulumi:"pk"`
}

// UefiKeySignaturesInput is an input type that accepts UefiKeySignaturesArgs and UefiKeySignaturesOutput values.
// You can construct a concrete instance of `UefiKeySignaturesInput` via:
//
//	UefiKeySignaturesArgs{...}
type UefiKeySignaturesInput interface {
	pulumi.Input

	ToUefiKeySignaturesOutput() UefiKeySignaturesOutput
	ToUefiKeySignaturesOutputWithContext(context.Context) UefiKeySignaturesOutput
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
type UefiKeySignaturesArgs struct {
	// The database of UEFI keys for this image version.
	Db UefiKeyArrayInput `pulumi:"db"`
	// The database of revoked UEFI keys for this image version.
	Dbx UefiKeyArrayInput `pulumi:"dbx"`
	// The Key Encryption Keys of this image version.
	Kek UefiKeyArrayInput `pulumi:"kek"`
	// The Platform Key of this image version.
	Pk UefiKeyPtrInput `pulumi:"pk"`
}

func (UefiKeySignaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiKeySignatures)(nil)).Elem()
}

func (i UefiKeySignaturesArgs) ToUefiKeySignaturesOutput() UefiKeySignaturesOutput {
	return i.ToUefiKeySignaturesOutputWithContext(context.Background())
}

func (i UefiKeySignaturesArgs) ToUefiKeySignaturesOutputWithContext(ctx context.Context) UefiKeySignaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeySignaturesOutput)
}

func (i UefiKeySignaturesArgs) ToUefiKeySignaturesPtrOutput() UefiKeySignaturesPtrOutput {
	return i.ToUefiKeySignaturesPtrOutputWithContext(context.Background())
}

func (i UefiKeySignaturesArgs) ToUefiKeySignaturesPtrOutputWithContext(ctx context.Context) UefiKeySignaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeySignaturesOutput).ToUefiKeySignaturesPtrOutputWithContext(ctx)
}

// UefiKeySignaturesPtrInput is an input type that accepts UefiKeySignaturesArgs, UefiKeySignaturesPtr and UefiKeySignaturesPtrOutput values.
// You can construct a concrete instance of `UefiKeySignaturesPtrInput` via:
//
//	        UefiKeySignaturesArgs{...}
//
//	or:
//
//	        nil
type UefiKeySignaturesPtrInput interface {
	pulumi.Input

	ToUefiKeySignaturesPtrOutput() UefiKeySignaturesPtrOutput
	ToUefiKeySignaturesPtrOutputWithContext(context.Context) UefiKeySignaturesPtrOutput
}

type uefiKeySignaturesPtrType UefiKeySignaturesArgs

func UefiKeySignaturesPtr(v *UefiKeySignaturesArgs) UefiKeySignaturesPtrInput {
	return (*uefiKeySignaturesPtrType)(v)
}

func (*uefiKeySignaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiKeySignatures)(nil)).Elem()
}

func (i *uefiKeySignaturesPtrType) ToUefiKeySignaturesPtrOutput() UefiKeySignaturesPtrOutput {
	return i.ToUefiKeySignaturesPtrOutputWithContext(context.Background())
}

func (i *uefiKeySignaturesPtrType) ToUefiKeySignaturesPtrOutputWithContext(ctx context.Context) UefiKeySignaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UefiKeySignaturesPtrOutput)
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
type UefiKeySignaturesOutput struct{ *pulumi.OutputState }

func (UefiKeySignaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiKeySignatures)(nil)).Elem()
}

func (o UefiKeySignaturesOutput) ToUefiKeySignaturesOutput() UefiKeySignaturesOutput {
	return o
}

func (o UefiKeySignaturesOutput) ToUefiKeySignaturesOutputWithContext(ctx context.Context) UefiKeySignaturesOutput {
	return o
}

func (o UefiKeySignaturesOutput) ToUefiKeySignaturesPtrOutput() UefiKeySignaturesPtrOutput {
	return o.ToUefiKeySignaturesPtrOutputWithContext(context.Background())
}

func (o UefiKeySignaturesOutput) ToUefiKeySignaturesPtrOutputWithContext(ctx context.Context) UefiKeySignaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UefiKeySignatures) *UefiKeySignatures {
		return &v
	}).(UefiKeySignaturesPtrOutput)
}

// The database of UEFI keys for this image version.
func (o UefiKeySignaturesOutput) Db() UefiKeyArrayOutput {
	return o.ApplyT(func(v UefiKeySignatures) []UefiKey { return v.Db }).(UefiKeyArrayOutput)
}

// The database of revoked UEFI keys for this image version.
func (o UefiKeySignaturesOutput) Dbx() UefiKeyArrayOutput {
	return o.ApplyT(func(v UefiKeySignatures) []UefiKey { return v.Dbx }).(UefiKeyArrayOutput)
}

// The Key Encryption Keys of this image version.
func (o UefiKeySignaturesOutput) Kek() UefiKeyArrayOutput {
	return o.ApplyT(func(v UefiKeySignatures) []UefiKey { return v.Kek }).(UefiKeyArrayOutput)
}

// The Platform Key of this image version.
func (o UefiKeySignaturesOutput) Pk() UefiKeyPtrOutput {
	return o.ApplyT(func(v UefiKeySignatures) *UefiKey { return v.Pk }).(UefiKeyPtrOutput)
}

type UefiKeySignaturesPtrOutput struct{ *pulumi.OutputState }

func (UefiKeySignaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiKeySignatures)(nil)).Elem()
}

func (o UefiKeySignaturesPtrOutput) ToUefiKeySignaturesPtrOutput() UefiKeySignaturesPtrOutput {
	return o
}

func (o UefiKeySignaturesPtrOutput) ToUefiKeySignaturesPtrOutputWithContext(ctx context.Context) UefiKeySignaturesPtrOutput {
	return o
}

func (o UefiKeySignaturesPtrOutput) Elem() UefiKeySignaturesOutput {
	return o.ApplyT(func(v *UefiKeySignatures) UefiKeySignatures {
		if v != nil {
			return *v
		}
		var ret UefiKeySignatures
		return ret
	}).(UefiKeySignaturesOutput)
}

// The database of UEFI keys for this image version.
func (o UefiKeySignaturesPtrOutput) Db() UefiKeyArrayOutput {
	return o.ApplyT(func(v *UefiKeySignatures) []UefiKey {
		if v == nil {
			return nil
		}
		return v.Db
	}).(UefiKeyArrayOutput)
}

// The database of revoked UEFI keys for this image version.
func (o UefiKeySignaturesPtrOutput) Dbx() UefiKeyArrayOutput {
	return o.ApplyT(func(v *UefiKeySignatures) []UefiKey {
		if v == nil {
			return nil
		}
		return v.Dbx
	}).(UefiKeyArrayOutput)
}

// The Key Encryption Keys of this image version.
func (o UefiKeySignaturesPtrOutput) Kek() UefiKeyArrayOutput {
	return o.ApplyT(func(v *UefiKeySignatures) []UefiKey {
		if v == nil {
			return nil
		}
		return v.Kek
	}).(UefiKeyArrayOutput)
}

// The Platform Key of this image version.
func (o UefiKeySignaturesPtrOutput) Pk() UefiKeyPtrOutput {
	return o.ApplyT(func(v *UefiKeySignatures) *UefiKey {
		if v == nil {
			return nil
		}
		return v.Pk
	}).(UefiKeyPtrOutput)
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
type UefiKeySignaturesResponse struct {
	// The database of UEFI keys for this image version.
	Db []UefiKeyResponse `pulumi:"db"`
	// The database of revoked UEFI keys for this image version.
	Dbx []UefiKeyResponse `pulumi:"dbx"`
	// The Key Encryption Keys of this image version.
	Kek []UefiKeyResponse `pulumi:"kek"`
	// The Platform Key of this image version.
	Pk *UefiKeyResponse `pulumi:"pk"`
}

// Additional UEFI key signatures that will be added to the image in addition to the signature templates
type UefiKeySignaturesResponseOutput struct{ *pulumi.OutputState }

func (UefiKeySignaturesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UefiKeySignaturesResponse)(nil)).Elem()
}

func (o UefiKeySignaturesResponseOutput) ToUefiKeySignaturesResponseOutput() UefiKeySignaturesResponseOutput {
	return o
}

func (o UefiKeySignaturesResponseOutput) ToUefiKeySignaturesResponseOutputWithContext(ctx context.Context) UefiKeySignaturesResponseOutput {
	return o
}

// The database of UEFI keys for this image version.
func (o UefiKeySignaturesResponseOutput) Db() UefiKeyResponseArrayOutput {
	return o.ApplyT(func(v UefiKeySignaturesResponse) []UefiKeyResponse { return v.Db }).(UefiKeyResponseArrayOutput)
}

// The database of revoked UEFI keys for this image version.
func (o UefiKeySignaturesResponseOutput) Dbx() UefiKeyResponseArrayOutput {
	return o.ApplyT(func(v UefiKeySignaturesResponse) []UefiKeyResponse { return v.Dbx }).(UefiKeyResponseArrayOutput)
}

// The Key Encryption Keys of this image version.
func (o UefiKeySignaturesResponseOutput) Kek() UefiKeyResponseArrayOutput {
	return o.ApplyT(func(v UefiKeySignaturesResponse) []UefiKeyResponse { return v.Kek }).(UefiKeyResponseArrayOutput)
}

// The Platform Key of this image version.
func (o UefiKeySignaturesResponseOutput) Pk() UefiKeyResponsePtrOutput {
	return o.ApplyT(func(v UefiKeySignaturesResponse) *UefiKeyResponse { return v.Pk }).(UefiKeyResponsePtrOutput)
}

type UefiKeySignaturesResponsePtrOutput struct{ *pulumi.OutputState }

func (UefiKeySignaturesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UefiKeySignaturesResponse)(nil)).Elem()
}

func (o UefiKeySignaturesResponsePtrOutput) ToUefiKeySignaturesResponsePtrOutput() UefiKeySignaturesResponsePtrOutput {
	return o
}

func (o UefiKeySignaturesResponsePtrOutput) ToUefiKeySignaturesResponsePtrOutputWithContext(ctx context.Context) UefiKeySignaturesResponsePtrOutput {
	return o
}

func (o UefiKeySignaturesResponsePtrOutput) Elem() UefiKeySignaturesResponseOutput {
	return o.ApplyT(func(v *UefiKeySignaturesResponse) UefiKeySignaturesResponse {
		if v != nil {
			return *v
		}
		var ret UefiKeySignaturesResponse
		return ret
	}).(UefiKeySignaturesResponseOutput)
}

// The database of UEFI keys for this image version.
func (o UefiKeySignaturesResponsePtrOutput) Db() UefiKeyResponseArrayOutput {
	return o.ApplyT(func(v *UefiKeySignaturesResponse) []UefiKeyResponse {
		if v == nil {
			return nil
		}
		return v.Db
	}).(UefiKeyResponseArrayOutput)
}

// The database of revoked UEFI keys for this image version.
func (o UefiKeySignaturesResponsePtrOutput) Dbx() UefiKeyResponseArrayOutput {
	return o.ApplyT(func(v *UefiKeySignaturesResponse) []UefiKeyResponse {
		if v == nil {
			return nil
		}
		return v.Dbx
	}).(UefiKeyResponseArrayOutput)
}

// The Key Encryption Keys of this image version.
func (o UefiKeySignaturesResponsePtrOutput) Kek() UefiKeyResponseArrayOutput {
	return o.ApplyT(func(v *UefiKeySignaturesResponse) []UefiKeyResponse {
		if v == nil {
			return nil
		}
		return v.Kek
	}).(UefiKeyResponseArrayOutput)
}

// The Platform Key of this image version.
func (o UefiKeySignaturesResponsePtrOutput) Pk() UefiKeyResponsePtrOutput {
	return o.ApplyT(func(v *UefiKeySignaturesResponse) *UefiKeyResponse {
		if v == nil {
			return nil
		}
		return v.Pk
	}).(UefiKeyResponsePtrOutput)
}

type UserArtifactManage struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install string `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove string `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update *string `pulumi:"update"`
}

// UserArtifactManageInput is an input type that accepts UserArtifactManageArgs and UserArtifactManageOutput values.
// You can construct a concrete instance of `UserArtifactManageInput` via:
//
//	UserArtifactManageArgs{...}
type UserArtifactManageInput interface {
	pulumi.Input

	ToUserArtifactManageOutput() UserArtifactManageOutput
	ToUserArtifactManageOutputWithContext(context.Context) UserArtifactManageOutput
}

type UserArtifactManageArgs struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install pulumi.StringInput `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove pulumi.StringInput `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (UserArtifactManageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManage)(nil)).Elem()
}

func (i UserArtifactManageArgs) ToUserArtifactManageOutput() UserArtifactManageOutput {
	return i.ToUserArtifactManageOutputWithContext(context.Background())
}

func (i UserArtifactManageArgs) ToUserArtifactManageOutputWithContext(ctx context.Context) UserArtifactManageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageOutput)
}

func (i UserArtifactManageArgs) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return i.ToUserArtifactManagePtrOutputWithContext(context.Background())
}

func (i UserArtifactManageArgs) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageOutput).ToUserArtifactManagePtrOutputWithContext(ctx)
}

// UserArtifactManagePtrInput is an input type that accepts UserArtifactManageArgs, UserArtifactManagePtr and UserArtifactManagePtrOutput values.
// You can construct a concrete instance of `UserArtifactManagePtrInput` via:
//
//	        UserArtifactManageArgs{...}
//
//	or:
//
//	        nil
type UserArtifactManagePtrInput interface {
	pulumi.Input

	ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput
	ToUserArtifactManagePtrOutputWithContext(context.Context) UserArtifactManagePtrOutput
}

type userArtifactManagePtrType UserArtifactManageArgs

func UserArtifactManagePtr(v *UserArtifactManageArgs) UserArtifactManagePtrInput {
	return (*userArtifactManagePtrType)(v)
}

func (*userArtifactManagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManage)(nil)).Elem()
}

func (i *userArtifactManagePtrType) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return i.ToUserArtifactManagePtrOutputWithContext(context.Background())
}

func (i *userArtifactManagePtrType) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManagePtrOutput)
}

type UserArtifactManageOutput struct{ *pulumi.OutputState }

func (UserArtifactManageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManage)(nil)).Elem()
}

func (o UserArtifactManageOutput) ToUserArtifactManageOutput() UserArtifactManageOutput {
	return o
}

func (o UserArtifactManageOutput) ToUserArtifactManageOutputWithContext(ctx context.Context) UserArtifactManageOutput {
	return o
}

func (o UserArtifactManageOutput) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return o.ToUserArtifactManagePtrOutputWithContext(context.Background())
}

func (o UserArtifactManageOutput) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserArtifactManage) *UserArtifactManage {
		return &v
	}).(UserArtifactManagePtrOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageOutput) Install() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManage) string { return v.Install }).(pulumi.StringOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageOutput) Remove() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManage) string { return v.Remove }).(pulumi.StringOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactManage) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type UserArtifactManagePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactManagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManage)(nil)).Elem()
}

func (o UserArtifactManagePtrOutput) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return o
}

func (o UserArtifactManagePtrOutput) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return o
}

func (o UserArtifactManagePtrOutput) Elem() UserArtifactManageOutput {
	return o.ApplyT(func(v *UserArtifactManage) UserArtifactManage {
		if v != nil {
			return *v
		}
		var ret UserArtifactManage
		return ret
	}).(UserArtifactManageOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManagePtrOutput) Install() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManage) *string {
		if v == nil {
			return nil
		}
		return &v.Install
	}).(pulumi.StringPtrOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManagePtrOutput) Remove() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManage) *string {
		if v == nil {
			return nil
		}
		return &v.Remove
	}).(pulumi.StringPtrOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManagePtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManage) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type UserArtifactManageResponse struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install string `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove string `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update *string `pulumi:"update"`
}

type UserArtifactManageResponseOutput struct{ *pulumi.OutputState }

func (UserArtifactManageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManageResponse)(nil)).Elem()
}

func (o UserArtifactManageResponseOutput) ToUserArtifactManageResponseOutput() UserArtifactManageResponseOutput {
	return o
}

func (o UserArtifactManageResponseOutput) ToUserArtifactManageResponseOutputWithContext(ctx context.Context) UserArtifactManageResponseOutput {
	return o
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponseOutput) Install() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) string { return v.Install }).(pulumi.StringOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponseOutput) Remove() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) string { return v.Remove }).(pulumi.StringOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponseOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type UserArtifactManageResponsePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactManageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManageResponse)(nil)).Elem()
}

func (o UserArtifactManageResponsePtrOutput) ToUserArtifactManageResponsePtrOutput() UserArtifactManageResponsePtrOutput {
	return o
}

func (o UserArtifactManageResponsePtrOutput) ToUserArtifactManageResponsePtrOutputWithContext(ctx context.Context) UserArtifactManageResponsePtrOutput {
	return o
}

func (o UserArtifactManageResponsePtrOutput) Elem() UserArtifactManageResponseOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) UserArtifactManageResponse {
		if v != nil {
			return *v
		}
		var ret UserArtifactManageResponse
		return ret
	}).(UserArtifactManageResponseOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponsePtrOutput) Install() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Install
	}).(pulumi.StringPtrOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponsePtrOutput) Remove() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Remove
	}).(pulumi.StringPtrOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponsePtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
type UserArtifactSettings struct {
	// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
	ConfigFileName *string `pulumi:"configFileName"`
	// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
	PackageFileName *string `pulumi:"packageFileName"`
}

// UserArtifactSettingsInput is an input type that accepts UserArtifactSettingsArgs and UserArtifactSettingsOutput values.
// You can construct a concrete instance of `UserArtifactSettingsInput` via:
//
//	UserArtifactSettingsArgs{...}
type UserArtifactSettingsInput interface {
	pulumi.Input

	ToUserArtifactSettingsOutput() UserArtifactSettingsOutput
	ToUserArtifactSettingsOutputWithContext(context.Context) UserArtifactSettingsOutput
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
type UserArtifactSettingsArgs struct {
	// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
	ConfigFileName pulumi.StringPtrInput `pulumi:"configFileName"`
	// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
	PackageFileName pulumi.StringPtrInput `pulumi:"packageFileName"`
}

func (UserArtifactSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSettings)(nil)).Elem()
}

func (i UserArtifactSettingsArgs) ToUserArtifactSettingsOutput() UserArtifactSettingsOutput {
	return i.ToUserArtifactSettingsOutputWithContext(context.Background())
}

func (i UserArtifactSettingsArgs) ToUserArtifactSettingsOutputWithContext(ctx context.Context) UserArtifactSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSettingsOutput)
}

func (i UserArtifactSettingsArgs) ToUserArtifactSettingsPtrOutput() UserArtifactSettingsPtrOutput {
	return i.ToUserArtifactSettingsPtrOutputWithContext(context.Background())
}

func (i UserArtifactSettingsArgs) ToUserArtifactSettingsPtrOutputWithContext(ctx context.Context) UserArtifactSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSettingsOutput).ToUserArtifactSettingsPtrOutputWithContext(ctx)
}

// UserArtifactSettingsPtrInput is an input type that accepts UserArtifactSettingsArgs, UserArtifactSettingsPtr and UserArtifactSettingsPtrOutput values.
// You can construct a concrete instance of `UserArtifactSettingsPtrInput` via:
//
//	        UserArtifactSettingsArgs{...}
//
//	or:
//
//	        nil
type UserArtifactSettingsPtrInput interface {
	pulumi.Input

	ToUserArtifactSettingsPtrOutput() UserArtifactSettingsPtrOutput
	ToUserArtifactSettingsPtrOutputWithContext(context.Context) UserArtifactSettingsPtrOutput
}

type userArtifactSettingsPtrType UserArtifactSettingsArgs

func UserArtifactSettingsPtr(v *UserArtifactSettingsArgs) UserArtifactSettingsPtrInput {
	return (*userArtifactSettingsPtrType)(v)
}

func (*userArtifactSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSettings)(nil)).Elem()
}

func (i *userArtifactSettingsPtrType) ToUserArtifactSettingsPtrOutput() UserArtifactSettingsPtrOutput {
	return i.ToUserArtifactSettingsPtrOutputWithContext(context.Background())
}

func (i *userArtifactSettingsPtrType) ToUserArtifactSettingsPtrOutputWithContext(ctx context.Context) UserArtifactSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSettingsPtrOutput)
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
type UserArtifactSettingsOutput struct{ *pulumi.OutputState }

func (UserArtifactSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSettings)(nil)).Elem()
}

func (o UserArtifactSettingsOutput) ToUserArtifactSettingsOutput() UserArtifactSettingsOutput {
	return o
}

func (o UserArtifactSettingsOutput) ToUserArtifactSettingsOutputWithContext(ctx context.Context) UserArtifactSettingsOutput {
	return o
}

func (o UserArtifactSettingsOutput) ToUserArtifactSettingsPtrOutput() UserArtifactSettingsPtrOutput {
	return o.ToUserArtifactSettingsPtrOutputWithContext(context.Background())
}

func (o UserArtifactSettingsOutput) ToUserArtifactSettingsPtrOutputWithContext(ctx context.Context) UserArtifactSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserArtifactSettings) *UserArtifactSettings {
		return &v
	}).(UserArtifactSettingsPtrOutput)
}

// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
func (o UserArtifactSettingsOutput) ConfigFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSettings) *string { return v.ConfigFileName }).(pulumi.StringPtrOutput)
}

// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
func (o UserArtifactSettingsOutput) PackageFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSettings) *string { return v.PackageFileName }).(pulumi.StringPtrOutput)
}

type UserArtifactSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserArtifactSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSettings)(nil)).Elem()
}

func (o UserArtifactSettingsPtrOutput) ToUserArtifactSettingsPtrOutput() UserArtifactSettingsPtrOutput {
	return o
}

func (o UserArtifactSettingsPtrOutput) ToUserArtifactSettingsPtrOutputWithContext(ctx context.Context) UserArtifactSettingsPtrOutput {
	return o
}

func (o UserArtifactSettingsPtrOutput) Elem() UserArtifactSettingsOutput {
	return o.ApplyT(func(v *UserArtifactSettings) UserArtifactSettings {
		if v != nil {
			return *v
		}
		var ret UserArtifactSettings
		return ret
	}).(UserArtifactSettingsOutput)
}

// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
func (o UserArtifactSettingsPtrOutput) ConfigFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFileName
	}).(pulumi.StringPtrOutput)
}

// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
func (o UserArtifactSettingsPtrOutput) PackageFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSettings) *string {
		if v == nil {
			return nil
		}
		return v.PackageFileName
	}).(pulumi.StringPtrOutput)
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
type UserArtifactSettingsResponse struct {
	// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
	ConfigFileName *string `pulumi:"configFileName"`
	// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
	PackageFileName *string `pulumi:"packageFileName"`
}

// Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
type UserArtifactSettingsResponseOutput struct{ *pulumi.OutputState }

func (UserArtifactSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSettingsResponse)(nil)).Elem()
}

func (o UserArtifactSettingsResponseOutput) ToUserArtifactSettingsResponseOutput() UserArtifactSettingsResponseOutput {
	return o
}

func (o UserArtifactSettingsResponseOutput) ToUserArtifactSettingsResponseOutputWithContext(ctx context.Context) UserArtifactSettingsResponseOutput {
	return o
}

// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
func (o UserArtifactSettingsResponseOutput) ConfigFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSettingsResponse) *string { return v.ConfigFileName }).(pulumi.StringPtrOutput)
}

// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
func (o UserArtifactSettingsResponseOutput) PackageFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSettingsResponse) *string { return v.PackageFileName }).(pulumi.StringPtrOutput)
}

type UserArtifactSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSettingsResponse)(nil)).Elem()
}

func (o UserArtifactSettingsResponsePtrOutput) ToUserArtifactSettingsResponsePtrOutput() UserArtifactSettingsResponsePtrOutput {
	return o
}

func (o UserArtifactSettingsResponsePtrOutput) ToUserArtifactSettingsResponsePtrOutputWithContext(ctx context.Context) UserArtifactSettingsResponsePtrOutput {
	return o
}

func (o UserArtifactSettingsResponsePtrOutput) Elem() UserArtifactSettingsResponseOutput {
	return o.ApplyT(func(v *UserArtifactSettingsResponse) UserArtifactSettingsResponse {
		if v != nil {
			return *v
		}
		var ret UserArtifactSettingsResponse
		return ret
	}).(UserArtifactSettingsResponseOutput)
}

// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
func (o UserArtifactSettingsResponsePtrOutput) ConfigFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFileName
	}).(pulumi.StringPtrOutput)
}

// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
func (o UserArtifactSettingsResponsePtrOutput) PackageFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PackageFileName
	}).(pulumi.StringPtrOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSource struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink *string `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink string `pulumi:"mediaLink"`
}

// UserArtifactSourceInput is an input type that accepts UserArtifactSourceArgs and UserArtifactSourceOutput values.
// You can construct a concrete instance of `UserArtifactSourceInput` via:
//
//	UserArtifactSourceArgs{...}
type UserArtifactSourceInput interface {
	pulumi.Input

	ToUserArtifactSourceOutput() UserArtifactSourceOutput
	ToUserArtifactSourceOutputWithContext(context.Context) UserArtifactSourceOutput
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceArgs struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink pulumi.StringPtrInput `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink pulumi.StringInput `pulumi:"mediaLink"`
}

func (UserArtifactSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSource)(nil)).Elem()
}

func (i UserArtifactSourceArgs) ToUserArtifactSourceOutput() UserArtifactSourceOutput {
	return i.ToUserArtifactSourceOutputWithContext(context.Background())
}

func (i UserArtifactSourceArgs) ToUserArtifactSourceOutputWithContext(ctx context.Context) UserArtifactSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourceOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceOutput struct{ *pulumi.OutputState }

func (UserArtifactSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSource)(nil)).Elem()
}

func (o UserArtifactSourceOutput) ToUserArtifactSourceOutput() UserArtifactSourceOutput {
	return o
}

func (o UserArtifactSourceOutput) ToUserArtifactSourceOutputWithContext(ctx context.Context) UserArtifactSourceOutput {
	return o
}

// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceOutput) DefaultConfigurationLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSource) *string { return v.DefaultConfigurationLink }).(pulumi.StringPtrOutput)
}

// Required. The mediaLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceOutput) MediaLink() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactSource) string { return v.MediaLink }).(pulumi.StringOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceResponse struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink *string `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink string `pulumi:"mediaLink"`
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceResponseOutput struct{ *pulumi.OutputState }

func (UserArtifactSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSourceResponse)(nil)).Elem()
}

func (o UserArtifactSourceResponseOutput) ToUserArtifactSourceResponseOutput() UserArtifactSourceResponseOutput {
	return o
}

func (o UserArtifactSourceResponseOutput) ToUserArtifactSourceResponseOutputWithContext(ctx context.Context) UserArtifactSourceResponseOutput {
	return o
}

// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceResponseOutput) DefaultConfigurationLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSourceResponse) *string { return v.DefaultConfigurationLink }).(pulumi.StringPtrOutput)
}

// Required. The mediaLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceResponseOutput) MediaLink() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactSourceResponse) string { return v.MediaLink }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CommunityGalleryInfoOutput{})
	pulumi.RegisterOutputType(CommunityGalleryInfoPtrOutput{})
	pulumi.RegisterOutputType(CommunityGalleryInfoResponseOutput{})
	pulumi.RegisterOutputType(CommunityGalleryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionArrayOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionResponseOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionResponseArrayOutput{})
	pulumi.RegisterOutputType(DisallowedOutput{})
	pulumi.RegisterOutputType(DisallowedPtrOutput{})
	pulumi.RegisterOutputType(DisallowedResponseOutput{})
	pulumi.RegisterOutputType(DisallowedResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionImagesOutput{})
	pulumi.RegisterOutputType(EncryptionImagesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionImagesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionImagesResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionArrayOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionParameterOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionParameterArrayOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionParameterResponseOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionResponseOutput{})
	pulumi.RegisterOutputType(GalleryApplicationCustomActionResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionPublishingProfileOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionPublishingProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionSafetyProfileOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionSafetyProfilePtrOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionSafetyProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionSafetyProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionFullSourceOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionFullSourcePtrOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionFullSourceResponseOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionFullSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageArrayOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageResponseOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryDiskImageSourceOutput{})
	pulumi.RegisterOutputType(GalleryDiskImageSourcePtrOutput{})
	pulumi.RegisterOutputType(GalleryDiskImageSourceResponseOutput{})
	pulumi.RegisterOutputType(GalleryDiskImageSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryExtendedLocationOutput{})
	pulumi.RegisterOutputType(GalleryExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(GalleryExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(GalleryExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryIdentifierResponseOutput{})
	pulumi.RegisterOutputType(GalleryIdentifierResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureArrayOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfileOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfilePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionSafetyProfileOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionSafetyProfilePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionSafetyProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionSafetyProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionUefiSettingsOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionUefiSettingsPtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionUefiSettingsResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionUefiSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImagePtrOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageResponseOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryTargetExtendedLocationOutput{})
	pulumi.RegisterOutputType(GalleryTargetExtendedLocationArrayOutput{})
	pulumi.RegisterOutputType(GalleryTargetExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(GalleryTargetExtendedLocationResponseArrayOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanPtrOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanResponseOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageVersionSecurityProfileOutput{})
	pulumi.RegisterOutputType(ImageVersionSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(ImageVersionSecurityProfileResponseOutput{})
	pulumi.RegisterOutputType(ImageVersionSecurityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionPtrOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionResponseOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskImageSecurityProfileOutput{})
	pulumi.RegisterOutputType(OSDiskImageSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(OSDiskImageSecurityProfileResponseOutput{})
	pulumi.RegisterOutputType(OSDiskImageSecurityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyViolationResponseOutput{})
	pulumi.RegisterOutputType(PolicyViolationResponseArrayOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RegionalReplicationStatusResponseOutput{})
	pulumi.RegisterOutputType(RegionalReplicationStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(RegionalSharingStatusResponseOutput{})
	pulumi.RegisterOutputType(RegionalSharingStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(ReplicationStatusResponseOutput{})
	pulumi.RegisterOutputType(ResourceRangeOutput{})
	pulumi.RegisterOutputType(ResourceRangePtrOutput{})
	pulumi.RegisterOutputType(ResourceRangeResponseOutput{})
	pulumi.RegisterOutputType(ResourceRangeResponsePtrOutput{})
	pulumi.RegisterOutputType(SharingProfileOutput{})
	pulumi.RegisterOutputType(SharingProfilePtrOutput{})
	pulumi.RegisterOutputType(SharingProfileGroupResponseOutput{})
	pulumi.RegisterOutputType(SharingProfileGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(SharingProfileResponseOutput{})
	pulumi.RegisterOutputType(SharingProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(SharingStatusResponseOutput{})
	pulumi.RegisterOutputType(SoftDeletePolicyOutput{})
	pulumi.RegisterOutputType(SoftDeletePolicyPtrOutput{})
	pulumi.RegisterOutputType(SoftDeletePolicyResponseOutput{})
	pulumi.RegisterOutputType(SoftDeletePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetRegionOutput{})
	pulumi.RegisterOutputType(TargetRegionArrayOutput{})
	pulumi.RegisterOutputType(TargetRegionResponseOutput{})
	pulumi.RegisterOutputType(TargetRegionResponseArrayOutput{})
	pulumi.RegisterOutputType(UefiKeyOutput{})
	pulumi.RegisterOutputType(UefiKeyPtrOutput{})
	pulumi.RegisterOutputType(UefiKeyArrayOutput{})
	pulumi.RegisterOutputType(UefiKeyResponseOutput{})
	pulumi.RegisterOutputType(UefiKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(UefiKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(UefiKeySignaturesOutput{})
	pulumi.RegisterOutputType(UefiKeySignaturesPtrOutput{})
	pulumi.RegisterOutputType(UefiKeySignaturesResponseOutput{})
	pulumi.RegisterOutputType(UefiKeySignaturesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactManageOutput{})
	pulumi.RegisterOutputType(UserArtifactManagePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactManageResponseOutput{})
	pulumi.RegisterOutputType(UserArtifactManageResponsePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactSettingsOutput{})
	pulumi.RegisterOutputType(UserArtifactSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserArtifactSettingsResponseOutput{})
	pulumi.RegisterOutputType(UserArtifactSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactSourceOutput{})
	pulumi.RegisterOutputType(UserArtifactSourceResponseOutput{})
}
