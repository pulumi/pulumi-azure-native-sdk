// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a VMware collector.
// Azure REST API version: 2019-10-01.
func LookupAssessmentProjectsVMwareCollector(ctx *pulumi.Context, args *LookupAssessmentProjectsVMwareCollectorArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentProjectsVMwareCollectorResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentProjectsVMwareCollectorResult
	err := ctx.Invoke("azure-native:migrate:getAssessmentProjectsVMwareCollector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentProjectsVMwareCollectorArgs struct {
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Unique name of a VMware collector within a project.
	VmWareCollectorName string `pulumi:"vmWareCollectorName"`
}

type LookupAssessmentProjectsVMwareCollectorResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string                      `pulumi:"azureApiVersion"`
	ETag            *string                     `pulumi:"eTag"`
	Id              string                      `pulumi:"id"`
	Name            string                      `pulumi:"name"`
	Properties      CollectorPropertiesResponse `pulumi:"properties"`
	Type            string                      `pulumi:"type"`
}

func LookupAssessmentProjectsVMwareCollectorOutput(ctx *pulumi.Context, args LookupAssessmentProjectsVMwareCollectorOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentProjectsVMwareCollectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAssessmentProjectsVMwareCollectorResultOutput, error) {
			args := v.(LookupAssessmentProjectsVMwareCollectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getAssessmentProjectsVMwareCollector", args, LookupAssessmentProjectsVMwareCollectorResultOutput{}, options).(LookupAssessmentProjectsVMwareCollectorResultOutput), nil
		}).(LookupAssessmentProjectsVMwareCollectorResultOutput)
}

type LookupAssessmentProjectsVMwareCollectorOutputArgs struct {
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Unique name of a VMware collector within a project.
	VmWareCollectorName pulumi.StringInput `pulumi:"vmWareCollectorName"`
}

func (LookupAssessmentProjectsVMwareCollectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsVMwareCollectorArgs)(nil)).Elem()
}

type LookupAssessmentProjectsVMwareCollectorResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentProjectsVMwareCollectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsVMwareCollectorResult)(nil)).Elem()
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) ToLookupAssessmentProjectsVMwareCollectorResultOutput() LookupAssessmentProjectsVMwareCollectorResultOutput {
	return o
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) ToLookupAssessmentProjectsVMwareCollectorResultOutputWithContext(ctx context.Context) LookupAssessmentProjectsVMwareCollectorResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAssessmentProjectsVMwareCollectorResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsVMwareCollectorResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsVMwareCollectorResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsVMwareCollectorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsVMwareCollectorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) Properties() CollectorPropertiesResponseOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsVMwareCollectorResult) CollectorPropertiesResponse { return v.Properties }).(CollectorPropertiesResponseOutput)
}

func (o LookupAssessmentProjectsVMwareCollectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsVMwareCollectorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentProjectsVMwareCollectorResultOutput{})
}
