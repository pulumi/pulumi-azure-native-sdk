// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Group
// Azure REST API version: 2023-03-15.
func LookupGroupsOperation(ctx *pulumi.Context, args *LookupGroupsOperationArgs, opts ...pulumi.InvokeOption) (*LookupGroupsOperationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupsOperationResult
	err := ctx.Invoke("azure-native:migrate:getGroupsOperation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGroupsOperationArgs struct {
	// Group ARM name
	GroupName string `pulumi:"groupName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Group resource.
type LookupGroupsOperationResult struct {
	// If the assessments are in running state.
	AreAssessmentsRunning bool `pulumi:"areAssessmentsRunning"`
	// List of References to Assessments created on this group.
	Assessments []string `pulumi:"assessments"`
	// Time when this group was created. Date-Time represented in ISO-8601 format.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// Whether the group has been created and is valid.
	GroupStatus string `pulumi:"groupStatus"`
	// The type of group.
	GroupType *string `pulumi:"groupType"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Number of machines part of this group.
	MachineCount int `pulumi:"machineCount"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// List of assessment types supported on this group.
	SupportedAssessmentTypes []string `pulumi:"supportedAssessmentTypes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Time when this group was last updated. Date-Time represented in ISO-8601 format.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
}

func LookupGroupsOperationOutput(ctx *pulumi.Context, args LookupGroupsOperationOutputArgs, opts ...pulumi.InvokeOption) LookupGroupsOperationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroupsOperationResult, error) {
			args := v.(LookupGroupsOperationArgs)
			r, err := LookupGroupsOperation(ctx, &args, opts...)
			var s LookupGroupsOperationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGroupsOperationResultOutput)
}

type LookupGroupsOperationOutputArgs struct {
	// Group ARM name
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Assessment Project Name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupGroupsOperationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupsOperationArgs)(nil)).Elem()
}

// Group resource.
type LookupGroupsOperationResultOutput struct{ *pulumi.OutputState }

func (LookupGroupsOperationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupsOperationResult)(nil)).Elem()
}

func (o LookupGroupsOperationResultOutput) ToLookupGroupsOperationResultOutput() LookupGroupsOperationResultOutput {
	return o
}

func (o LookupGroupsOperationResultOutput) ToLookupGroupsOperationResultOutputWithContext(ctx context.Context) LookupGroupsOperationResultOutput {
	return o
}

// If the assessments are in running state.
func (o LookupGroupsOperationResultOutput) AreAssessmentsRunning() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) bool { return v.AreAssessmentsRunning }).(pulumi.BoolOutput)
}

// List of References to Assessments created on this group.
func (o LookupGroupsOperationResultOutput) Assessments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) []string { return v.Assessments }).(pulumi.StringArrayOutput)
}

// Time when this group was created. Date-Time represented in ISO-8601 format.
func (o LookupGroupsOperationResultOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Whether the group has been created and is valid.
func (o LookupGroupsOperationResultOutput) GroupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) string { return v.GroupStatus }).(pulumi.StringOutput)
}

// The type of group.
func (o LookupGroupsOperationResultOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupGroupsOperationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Number of machines part of this group.
func (o LookupGroupsOperationResultOutput) MachineCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) int { return v.MachineCount }).(pulumi.IntOutput)
}

// The name of the resource
func (o LookupGroupsOperationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupGroupsOperationResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// List of assessment types supported on this group.
func (o LookupGroupsOperationResultOutput) SupportedAssessmentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) []string { return v.SupportedAssessmentTypes }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupGroupsOperationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupGroupsOperationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Time when this group was last updated. Date-Time represented in ISO-8601 format.
func (o LookupGroupsOperationResultOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupsOperationResult) string { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupsOperationResultOutput{})
}
