// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:migrate:AssessmentProjectsAksAssessmentOperation":
		r = &AssessmentProjectsAksAssessmentOperation{}
	case "azure-native:migrate:AssessmentProjectsAssessment":
		r = &AssessmentProjectsAssessment{}
	case "azure-native:migrate:AssessmentProjectsAssessmentsOperation":
		r = &AssessmentProjectsAssessmentsOperation{}
	case "azure-native:migrate:AssessmentProjectsAvsAssessmentsOperation":
		r = &AssessmentProjectsAvsAssessmentsOperation{}
	case "azure-native:migrate:AssessmentProjectsBusinessCaseOperation":
		r = &AssessmentProjectsBusinessCaseOperation{}
	case "azure-native:migrate:AssessmentProjectsGroup":
		r = &AssessmentProjectsGroup{}
	case "azure-native:migrate:AssessmentProjectsGroupsOperation":
		r = &AssessmentProjectsGroupsOperation{}
	case "azure-native:migrate:AssessmentProjectsHyperVCollector":
		r = &AssessmentProjectsHyperVCollector{}
	case "azure-native:migrate:AssessmentProjectsHypervCollectorsOperation":
		r = &AssessmentProjectsHypervCollectorsOperation{}
	case "azure-native:migrate:AssessmentProjectsImportCollector":
		r = &AssessmentProjectsImportCollector{}
	case "azure-native:migrate:AssessmentProjectsImportCollectorsOperation":
		r = &AssessmentProjectsImportCollectorsOperation{}
	case "azure-native:migrate:AssessmentProjectsOperation":
		r = &AssessmentProjectsOperation{}
	case "azure-native:migrate:AssessmentProjectsPrivateEndpointConnection":
		r = &AssessmentProjectsPrivateEndpointConnection{}
	case "azure-native:migrate:AssessmentProjectsPrivateEndpointConnectionOperation":
		r = &AssessmentProjectsPrivateEndpointConnectionOperation{}
	case "azure-native:migrate:AssessmentProjectsProject":
		r = &AssessmentProjectsProject{}
	case "azure-native:migrate:AssessmentProjectsServerCollector":
		r = &AssessmentProjectsServerCollector{}
	case "azure-native:migrate:AssessmentProjectsServerCollectorsOperation":
		r = &AssessmentProjectsServerCollectorsOperation{}
	case "azure-native:migrate:AssessmentProjectsSqlAssessmentV2Operation":
		r = &AssessmentProjectsSqlAssessmentV2Operation{}
	case "azure-native:migrate:AssessmentProjectsSqlCollectorOperation":
		r = &AssessmentProjectsSqlCollectorOperation{}
	case "azure-native:migrate:AssessmentProjectsVMwareCollector":
		r = &AssessmentProjectsVMwareCollector{}
	case "azure-native:migrate:AssessmentProjectsVmwareCollectorsOperation":
		r = &AssessmentProjectsVmwareCollectorsOperation{}
	case "azure-native:migrate:AssessmentProjectsWebAppAssessmentV2Operation":
		r = &AssessmentProjectsWebAppAssessmentV2Operation{}
	case "azure-native:migrate:AssessmentProjectsWebAppCollectorOperation":
		r = &AssessmentProjectsWebAppCollectorOperation{}
	case "azure-native:migrate:MigrateAgent":
		r = &MigrateAgent{}
	case "azure-native:migrate:MigrateProject":
		r = &MigrateProject{}
	case "azure-native:migrate:MigrateProjectsControllerMigrateProject":
		r = &MigrateProjectsControllerMigrateProject{}
	case "azure-native:migrate:ModernizeProject":
		r = &ModernizeProject{}
	case "azure-native:migrate:MoveCollection":
		r = &MoveCollection{}
	case "azure-native:migrate:MoveResource":
		r = &MoveResource{}
	case "azure-native:migrate:PrivateEndpointConnectionControllerPrivateEndpointConnection":
		r = &PrivateEndpointConnectionControllerPrivateEndpointConnection{}
	case "azure-native:migrate:Solution":
		r = &Solution{}
	case "azure-native:migrate:WorkloadDeployment":
		r = &WorkloadDeployment{}
	case "azure-native:migrate:WorkloadInstance":
		r = &WorkloadInstance{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"migrate",
		&module{version},
	)
}
