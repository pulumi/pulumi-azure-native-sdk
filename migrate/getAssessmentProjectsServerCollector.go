// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Server collector.
// Azure REST API version: 2019-10-01.
func LookupAssessmentProjectsServerCollector(ctx *pulumi.Context, args *LookupAssessmentProjectsServerCollectorArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentProjectsServerCollectorResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentProjectsServerCollectorResult
	err := ctx.Invoke("azure-native:migrate:getAssessmentProjectsServerCollector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentProjectsServerCollectorArgs struct {
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Unique name of a Server collector within a project.
	ServerCollectorName string `pulumi:"serverCollectorName"`
}

type LookupAssessmentProjectsServerCollectorResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string                      `pulumi:"azureApiVersion"`
	ETag            *string                     `pulumi:"eTag"`
	Id              string                      `pulumi:"id"`
	Name            string                      `pulumi:"name"`
	Properties      CollectorPropertiesResponse `pulumi:"properties"`
	Type            string                      `pulumi:"type"`
}

func LookupAssessmentProjectsServerCollectorOutput(ctx *pulumi.Context, args LookupAssessmentProjectsServerCollectorOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentProjectsServerCollectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAssessmentProjectsServerCollectorResultOutput, error) {
			args := v.(LookupAssessmentProjectsServerCollectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getAssessmentProjectsServerCollector", args, LookupAssessmentProjectsServerCollectorResultOutput{}, options).(LookupAssessmentProjectsServerCollectorResultOutput), nil
		}).(LookupAssessmentProjectsServerCollectorResultOutput)
}

type LookupAssessmentProjectsServerCollectorOutputArgs struct {
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Unique name of a Server collector within a project.
	ServerCollectorName pulumi.StringInput `pulumi:"serverCollectorName"`
}

func (LookupAssessmentProjectsServerCollectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsServerCollectorArgs)(nil)).Elem()
}

type LookupAssessmentProjectsServerCollectorResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentProjectsServerCollectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsServerCollectorResult)(nil)).Elem()
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) ToLookupAssessmentProjectsServerCollectorResultOutput() LookupAssessmentProjectsServerCollectorResultOutput {
	return o
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) ToLookupAssessmentProjectsServerCollectorResultOutputWithContext(ctx context.Context) LookupAssessmentProjectsServerCollectorResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAssessmentProjectsServerCollectorResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsServerCollectorResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsServerCollectorResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsServerCollectorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsServerCollectorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) Properties() CollectorPropertiesResponseOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsServerCollectorResult) CollectorPropertiesResponse { return v.Properties }).(CollectorPropertiesResponseOutput)
}

func (o LookupAssessmentProjectsServerCollectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsServerCollectorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentProjectsServerCollectorResultOutput{})
}
