// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Class representing the config for the solution in the migrate project.
// Azure REST API version: 2023-01-01.
func GetSolutionsControllerConfig(ctx *pulumi.Context, args *GetSolutionsControllerConfigArgs, opts ...pulumi.InvokeOption) (*GetSolutionsControllerConfigResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetSolutionsControllerConfigResult
	err := ctx.Invoke("azure-native:migrate:getSolutionsControllerConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSolutionsControllerConfigArgs struct {
	// Name of the Azure Migrate project.
	MigrateProjectName string `pulumi:"migrateProjectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Unique name of a migration solution within a migrate project.
	SolutionName string `pulumi:"solutionName"`
}

// Class representing the config for the solution in the migrate project.
type GetSolutionsControllerConfigResult struct {
	// Gets or sets the publisher sas uri for the solution.
	PublisherSasUri *string `pulumi:"publisherSasUri"`
}

func GetSolutionsControllerConfigOutput(ctx *pulumi.Context, args GetSolutionsControllerConfigOutputArgs, opts ...pulumi.InvokeOption) GetSolutionsControllerConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSolutionsControllerConfigResult, error) {
			args := v.(GetSolutionsControllerConfigArgs)
			r, err := GetSolutionsControllerConfig(ctx, &args, opts...)
			var s GetSolutionsControllerConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSolutionsControllerConfigResultOutput)
}

type GetSolutionsControllerConfigOutputArgs struct {
	// Name of the Azure Migrate project.
	MigrateProjectName pulumi.StringInput `pulumi:"migrateProjectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Unique name of a migration solution within a migrate project.
	SolutionName pulumi.StringInput `pulumi:"solutionName"`
}

func (GetSolutionsControllerConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionsControllerConfigArgs)(nil)).Elem()
}

// Class representing the config for the solution in the migrate project.
type GetSolutionsControllerConfigResultOutput struct{ *pulumi.OutputState }

func (GetSolutionsControllerConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionsControllerConfigResult)(nil)).Elem()
}

func (o GetSolutionsControllerConfigResultOutput) ToGetSolutionsControllerConfigResultOutput() GetSolutionsControllerConfigResultOutput {
	return o
}

func (o GetSolutionsControllerConfigResultOutput) ToGetSolutionsControllerConfigResultOutputWithContext(ctx context.Context) GetSolutionsControllerConfigResultOutput {
	return o
}

// Gets or sets the publisher sas uri for the solution.
func (o GetSolutionsControllerConfigResultOutput) PublisherSasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSolutionsControllerConfigResult) *string { return v.PublisherSasUri }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSolutionsControllerConfigResultOutput{})
}
