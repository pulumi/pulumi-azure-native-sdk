// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Business case resource.
// Azure REST API version: 2024-01-01-preview.
type AssessmentProjectsBusinessCaseOperation struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Gets the state of business case reports.
	ReportStatusDetails ReportDetailsResponseArrayOutput `pulumi:"reportStatusDetails"`
	// Business case settings.
	Settings SettingsResponsePtrOutput `pulumi:"settings"`
	// Business case state.
	State pulumi.StringOutput `pulumi:"state"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAssessmentProjectsBusinessCaseOperation registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectsBusinessCaseOperation(ctx *pulumi.Context,
	name string, args *AssessmentProjectsBusinessCaseOperationArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectsBusinessCaseOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Settings != nil {
		args.Settings = args.Settings.ToSettingsPtrOutput().ApplyT(func(v *Settings) *Settings { return v.Defaults() }).(SettingsPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AssessmentProjectsBusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:BusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AssessmentProjectsBusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:BusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AssessmentProjectsBusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:BusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AssessmentProjectsBusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:BusinessCaseOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate:BusinessCaseOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AssessmentProjectsBusinessCaseOperation
	err := ctx.RegisterResource("azure-native:migrate:AssessmentProjectsBusinessCaseOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectsBusinessCaseOperation gets an existing AssessmentProjectsBusinessCaseOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectsBusinessCaseOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectsBusinessCaseOperationState, opts ...pulumi.ResourceOption) (*AssessmentProjectsBusinessCaseOperation, error) {
	var resource AssessmentProjectsBusinessCaseOperation
	err := ctx.ReadResource("azure-native:migrate:AssessmentProjectsBusinessCaseOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectsBusinessCaseOperation resources.
type assessmentProjectsBusinessCaseOperationState struct {
}

type AssessmentProjectsBusinessCaseOperationState struct {
}

func (AssessmentProjectsBusinessCaseOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsBusinessCaseOperationState)(nil)).Elem()
}

type assessmentProjectsBusinessCaseOperationArgs struct {
	// Business case ARM name
	BusinessCaseName *string `pulumi:"businessCaseName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Business case settings.
	Settings *Settings `pulumi:"settings"`
}

// The set of arguments for constructing a AssessmentProjectsBusinessCaseOperation resource.
type AssessmentProjectsBusinessCaseOperationArgs struct {
	// Business case ARM name
	BusinessCaseName pulumi.StringPtrInput
	// Assessment Project Name
	ProjectName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Business case settings.
	Settings SettingsPtrInput
}

func (AssessmentProjectsBusinessCaseOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsBusinessCaseOperationArgs)(nil)).Elem()
}

type AssessmentProjectsBusinessCaseOperationInput interface {
	pulumi.Input

	ToAssessmentProjectsBusinessCaseOperationOutput() AssessmentProjectsBusinessCaseOperationOutput
	ToAssessmentProjectsBusinessCaseOperationOutputWithContext(ctx context.Context) AssessmentProjectsBusinessCaseOperationOutput
}

func (*AssessmentProjectsBusinessCaseOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsBusinessCaseOperation)(nil)).Elem()
}

func (i *AssessmentProjectsBusinessCaseOperation) ToAssessmentProjectsBusinessCaseOperationOutput() AssessmentProjectsBusinessCaseOperationOutput {
	return i.ToAssessmentProjectsBusinessCaseOperationOutputWithContext(context.Background())
}

func (i *AssessmentProjectsBusinessCaseOperation) ToAssessmentProjectsBusinessCaseOperationOutputWithContext(ctx context.Context) AssessmentProjectsBusinessCaseOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentProjectsBusinessCaseOperationOutput)
}

type AssessmentProjectsBusinessCaseOperationOutput struct{ *pulumi.OutputState }

func (AssessmentProjectsBusinessCaseOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsBusinessCaseOperation)(nil)).Elem()
}

func (o AssessmentProjectsBusinessCaseOperationOutput) ToAssessmentProjectsBusinessCaseOperationOutput() AssessmentProjectsBusinessCaseOperationOutput {
	return o
}

func (o AssessmentProjectsBusinessCaseOperationOutput) ToAssessmentProjectsBusinessCaseOperationOutputWithContext(ctx context.Context) AssessmentProjectsBusinessCaseOperationOutput {
	return o
}

// The Azure API version of the resource.
func (o AssessmentProjectsBusinessCaseOperationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o AssessmentProjectsBusinessCaseOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o AssessmentProjectsBusinessCaseOperationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the state of business case reports.
func (o AssessmentProjectsBusinessCaseOperationOutput) ReportStatusDetails() ReportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) ReportDetailsResponseArrayOutput {
		return v.ReportStatusDetails
	}).(ReportDetailsResponseArrayOutput)
}

// Business case settings.
func (o AssessmentProjectsBusinessCaseOperationOutput) Settings() SettingsResponsePtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) SettingsResponsePtrOutput { return v.Settings }).(SettingsResponsePtrOutput)
}

// Business case state.
func (o AssessmentProjectsBusinessCaseOperationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AssessmentProjectsBusinessCaseOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AssessmentProjectsBusinessCaseOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsBusinessCaseOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentProjectsBusinessCaseOperationOutput{})
}
