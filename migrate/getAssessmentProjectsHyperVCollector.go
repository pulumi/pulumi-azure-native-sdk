// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Hyper-V collector.
// Azure REST API version: 2019-10-01.
func LookupAssessmentProjectsHyperVCollector(ctx *pulumi.Context, args *LookupAssessmentProjectsHyperVCollectorArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentProjectsHyperVCollectorResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentProjectsHyperVCollectorResult
	err := ctx.Invoke("azure-native:migrate:getAssessmentProjectsHyperVCollector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentProjectsHyperVCollectorArgs struct {
	// Unique name of a Hyper-V collector within a project.
	HyperVCollectorName string `pulumi:"hyperVCollectorName"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

type LookupAssessmentProjectsHyperVCollectorResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string                      `pulumi:"azureApiVersion"`
	ETag            *string                     `pulumi:"eTag"`
	Id              string                      `pulumi:"id"`
	Name            string                      `pulumi:"name"`
	Properties      CollectorPropertiesResponse `pulumi:"properties"`
	Type            string                      `pulumi:"type"`
}

func LookupAssessmentProjectsHyperVCollectorOutput(ctx *pulumi.Context, args LookupAssessmentProjectsHyperVCollectorOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentProjectsHyperVCollectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAssessmentProjectsHyperVCollectorResultOutput, error) {
			args := v.(LookupAssessmentProjectsHyperVCollectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getAssessmentProjectsHyperVCollector", args, LookupAssessmentProjectsHyperVCollectorResultOutput{}, options).(LookupAssessmentProjectsHyperVCollectorResultOutput), nil
		}).(LookupAssessmentProjectsHyperVCollectorResultOutput)
}

type LookupAssessmentProjectsHyperVCollectorOutputArgs struct {
	// Unique name of a Hyper-V collector within a project.
	HyperVCollectorName pulumi.StringInput `pulumi:"hyperVCollectorName"`
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssessmentProjectsHyperVCollectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsHyperVCollectorArgs)(nil)).Elem()
}

type LookupAssessmentProjectsHyperVCollectorResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentProjectsHyperVCollectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsHyperVCollectorResult)(nil)).Elem()
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) ToLookupAssessmentProjectsHyperVCollectorResultOutput() LookupAssessmentProjectsHyperVCollectorResultOutput {
	return o
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) ToLookupAssessmentProjectsHyperVCollectorResultOutputWithContext(ctx context.Context) LookupAssessmentProjectsHyperVCollectorResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAssessmentProjectsHyperVCollectorResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsHyperVCollectorResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsHyperVCollectorResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsHyperVCollectorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsHyperVCollectorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) Properties() CollectorPropertiesResponseOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsHyperVCollectorResult) CollectorPropertiesResponse { return v.Properties }).(CollectorPropertiesResponseOutput)
}

func (o LookupAssessmentProjectsHyperVCollectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsHyperVCollectorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentProjectsHyperVCollectorResultOutput{})
}
