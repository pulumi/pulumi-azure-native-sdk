// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets or sets the cleanup state of the solution.
type CleanupState string

const (
	CleanupStateNone       = CleanupState("None")
	CleanupStateStarted    = CleanupState("Started")
	CleanupStateInProgress = CleanupState("InProgress")
	CleanupStateCompleted  = CleanupState("Completed")
	CleanupStateFailed     = CleanupState("Failed")
)

func (CleanupState) ElementType() reflect.Type {
	return reflect.TypeOf((*CleanupState)(nil)).Elem()
}

func (e CleanupState) ToCleanupStateOutput() CleanupStateOutput {
	return pulumi.ToOutput(e).(CleanupStateOutput)
}

func (e CleanupState) ToCleanupStateOutputWithContext(ctx context.Context) CleanupStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CleanupStateOutput)
}

func (e CleanupState) ToCleanupStatePtrOutput() CleanupStatePtrOutput {
	return e.ToCleanupStatePtrOutputWithContext(context.Background())
}

func (e CleanupState) ToCleanupStatePtrOutputWithContext(ctx context.Context) CleanupStatePtrOutput {
	return CleanupState(e).ToCleanupStateOutputWithContext(ctx).ToCleanupStatePtrOutputWithContext(ctx)
}

func (e CleanupState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CleanupState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CleanupState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CleanupState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CleanupStateOutput struct{ *pulumi.OutputState }

func (CleanupStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CleanupState)(nil)).Elem()
}

func (o CleanupStateOutput) ToCleanupStateOutput() CleanupStateOutput {
	return o
}

func (o CleanupStateOutput) ToCleanupStateOutputWithContext(ctx context.Context) CleanupStateOutput {
	return o
}

func (o CleanupStateOutput) ToCleanupStatePtrOutput() CleanupStatePtrOutput {
	return o.ToCleanupStatePtrOutputWithContext(context.Background())
}

func (o CleanupStateOutput) ToCleanupStatePtrOutputWithContext(ctx context.Context) CleanupStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CleanupState) *CleanupState {
		return &v
	}).(CleanupStatePtrOutput)
}

func (o CleanupStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CleanupStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CleanupState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CleanupStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CleanupStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CleanupState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CleanupStatePtrOutput struct{ *pulumi.OutputState }

func (CleanupStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CleanupState)(nil)).Elem()
}

func (o CleanupStatePtrOutput) ToCleanupStatePtrOutput() CleanupStatePtrOutput {
	return o
}

func (o CleanupStatePtrOutput) ToCleanupStatePtrOutputWithContext(ctx context.Context) CleanupStatePtrOutput {
	return o
}

func (o CleanupStatePtrOutput) Elem() CleanupStateOutput {
	return o.ApplyT(func(v *CleanupState) CleanupState {
		if v != nil {
			return *v
		}
		var ret CleanupState
		return ret
	}).(CleanupStateOutput)
}

func (o CleanupStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CleanupStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CleanupState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CleanupStateInput is an input type that accepts values of the CleanupState enum
// A concrete instance of `CleanupStateInput` can be one of the following:
//
//	CleanupStateNone
//	CleanupStateStarted
//	CleanupStateInProgress
//	CleanupStateCompleted
//	CleanupStateFailed
type CleanupStateInput interface {
	pulumi.Input

	ToCleanupStateOutput() CleanupStateOutput
	ToCleanupStateOutputWithContext(context.Context) CleanupStateOutput
}

var cleanupStatePtrType = reflect.TypeOf((**CleanupState)(nil)).Elem()

type CleanupStatePtrInput interface {
	pulumi.Input

	ToCleanupStatePtrOutput() CleanupStatePtrOutput
	ToCleanupStatePtrOutputWithContext(context.Context) CleanupStatePtrOutput
}

type cleanupStatePtr string

func CleanupStatePtr(v string) CleanupStatePtrInput {
	return (*cleanupStatePtr)(&v)
}

func (*cleanupStatePtr) ElementType() reflect.Type {
	return cleanupStatePtrType
}

func (in *cleanupStatePtr) ToCleanupStatePtrOutput() CleanupStatePtrOutput {
	return pulumi.ToOutput(in).(CleanupStatePtrOutput)
}

func (in *cleanupStatePtr) ToCleanupStatePtrOutputWithContext(ctx context.Context) CleanupStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CleanupStatePtrOutput)
}

func (in *cleanupStatePtr) ToOutput(ctx context.Context) pulumix.Output[*CleanupState] {
	return pulumix.Output[*CleanupState]{
		OutputState: in.ToCleanupStatePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the goal of the solution.
type Goal string

const (
	GoalServers               = Goal("Servers")
	GoalDatabases             = Goal("Databases")
	GoalDesktopVirtualization = Goal("DesktopVirtualization")
	GoalWebApplications       = Goal("WebApplications")
	GoalDataCenter            = Goal("DataCenter")
)

func (Goal) ElementType() reflect.Type {
	return reflect.TypeOf((*Goal)(nil)).Elem()
}

func (e Goal) ToGoalOutput() GoalOutput {
	return pulumi.ToOutput(e).(GoalOutput)
}

func (e Goal) ToGoalOutputWithContext(ctx context.Context) GoalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoalOutput)
}

func (e Goal) ToGoalPtrOutput() GoalPtrOutput {
	return e.ToGoalPtrOutputWithContext(context.Background())
}

func (e Goal) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return Goal(e).ToGoalOutputWithContext(ctx).ToGoalPtrOutputWithContext(ctx)
}

func (e Goal) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Goal) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Goal) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Goal) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoalOutput struct{ *pulumi.OutputState }

func (GoalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Goal)(nil)).Elem()
}

func (o GoalOutput) ToGoalOutput() GoalOutput {
	return o
}

func (o GoalOutput) ToGoalOutputWithContext(ctx context.Context) GoalOutput {
	return o
}

func (o GoalOutput) ToGoalPtrOutput() GoalPtrOutput {
	return o.ToGoalPtrOutputWithContext(context.Background())
}

func (o GoalOutput) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Goal) *Goal {
		return &v
	}).(GoalPtrOutput)
}

func (o GoalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Goal) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Goal) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoalPtrOutput struct{ *pulumi.OutputState }

func (GoalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Goal)(nil)).Elem()
}

func (o GoalPtrOutput) ToGoalPtrOutput() GoalPtrOutput {
	return o
}

func (o GoalPtrOutput) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return o
}

func (o GoalPtrOutput) Elem() GoalOutput {
	return o.ApplyT(func(v *Goal) Goal {
		if v != nil {
			return *v
		}
		var ret Goal
		return ret
	}).(GoalOutput)
}

func (o GoalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Goal) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoalInput is an input type that accepts values of the Goal enum
// A concrete instance of `GoalInput` can be one of the following:
//
//	GoalServers
//	GoalDatabases
//	GoalDesktopVirtualization
//	GoalWebApplications
//	GoalDataCenter
type GoalInput interface {
	pulumi.Input

	ToGoalOutput() GoalOutput
	ToGoalOutputWithContext(context.Context) GoalOutput
}

var goalPtrType = reflect.TypeOf((**Goal)(nil)).Elem()

type GoalPtrInput interface {
	pulumi.Input

	ToGoalPtrOutput() GoalPtrOutput
	ToGoalPtrOutputWithContext(context.Context) GoalPtrOutput
}

type goalPtr string

func GoalPtr(v string) GoalPtrInput {
	return (*goalPtr)(&v)
}

func (*goalPtr) ElementType() reflect.Type {
	return goalPtrType
}

func (in *goalPtr) ToGoalPtrOutput() GoalPtrOutput {
	return pulumi.ToOutput(in).(GoalPtrOutput)
}

func (in *goalPtr) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoalPtrOutput)
}

func (in *goalPtr) ToOutput(ctx context.Context) pulumix.Output[*Goal] {
	return pulumix.Output[*Goal]{
		OutputState: in.ToGoalPtrOutputWithContext(ctx).OutputState,
	}
}

// Private link connection state.
type PrivateLinkServiceConnectionStateStatus string

const (
	PrivateLinkServiceConnectionStateStatusApproved     = PrivateLinkServiceConnectionStateStatus("Approved")
	PrivateLinkServiceConnectionStateStatusPending      = PrivateLinkServiceConnectionStateStatus("Pending")
	PrivateLinkServiceConnectionStateStatusRejected     = PrivateLinkServiceConnectionStateStatus("Rejected")
	PrivateLinkServiceConnectionStateStatusDisconnected = PrivateLinkServiceConnectionStateStatus("Disconnected")
)

func (PrivateLinkServiceConnectionStateStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateStatus)(nil)).Elem()
}

func (e PrivateLinkServiceConnectionStateStatus) ToPrivateLinkServiceConnectionStateStatusOutput() PrivateLinkServiceConnectionStateStatusOutput {
	return pulumi.ToOutput(e).(PrivateLinkServiceConnectionStateStatusOutput)
}

func (e PrivateLinkServiceConnectionStateStatus) ToPrivateLinkServiceConnectionStateStatusOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateLinkServiceConnectionStateStatusOutput)
}

func (e PrivateLinkServiceConnectionStateStatus) ToPrivateLinkServiceConnectionStateStatusPtrOutput() PrivateLinkServiceConnectionStateStatusPtrOutput {
	return e.ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(context.Background())
}

func (e PrivateLinkServiceConnectionStateStatus) ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateStatusPtrOutput {
	return PrivateLinkServiceConnectionStateStatus(e).ToPrivateLinkServiceConnectionStateStatusOutputWithContext(ctx).ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(ctx)
}

func (e PrivateLinkServiceConnectionStateStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkServiceConnectionStateStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkServiceConnectionStateStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateLinkServiceConnectionStateStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateLinkServiceConnectionStateStatusOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateStatus)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToPrivateLinkServiceConnectionStateStatusOutput() PrivateLinkServiceConnectionStateStatusOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToPrivateLinkServiceConnectionStateStatusOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateStatusOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToPrivateLinkServiceConnectionStateStatusPtrOutput() PrivateLinkServiceConnectionStateStatusPtrOutput {
	return o.ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionStateStatus) *PrivateLinkServiceConnectionStateStatus {
		return &v
	}).(PrivateLinkServiceConnectionStateStatusPtrOutput)
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkServiceConnectionStateStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkServiceConnectionStateStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateStatus)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateStatusPtrOutput) ToPrivateLinkServiceConnectionStateStatusPtrOutput() PrivateLinkServiceConnectionStateStatusPtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateStatusPtrOutput) ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateStatusPtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateStatusPtrOutput) Elem() PrivateLinkServiceConnectionStateStatusOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateStatus) PrivateLinkServiceConnectionStateStatus {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateStatus
		return ret
	}).(PrivateLinkServiceConnectionStateStatusOutput)
}

func (o PrivateLinkServiceConnectionStateStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateLinkServiceConnectionStateStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkServiceConnectionStateStatusInput is an input type that accepts values of the PrivateLinkServiceConnectionStateStatus enum
// A concrete instance of `PrivateLinkServiceConnectionStateStatusInput` can be one of the following:
//
//	PrivateLinkServiceConnectionStateStatusApproved
//	PrivateLinkServiceConnectionStateStatusPending
//	PrivateLinkServiceConnectionStateStatusRejected
//	PrivateLinkServiceConnectionStateStatusDisconnected
type PrivateLinkServiceConnectionStateStatusInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateStatusOutput() PrivateLinkServiceConnectionStateStatusOutput
	ToPrivateLinkServiceConnectionStateStatusOutputWithContext(context.Context) PrivateLinkServiceConnectionStateStatusOutput
}

var privateLinkServiceConnectionStateStatusPtrType = reflect.TypeOf((**PrivateLinkServiceConnectionStateStatus)(nil)).Elem()

type PrivateLinkServiceConnectionStateStatusPtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateStatusPtrOutput() PrivateLinkServiceConnectionStateStatusPtrOutput
	ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStateStatusPtrOutput
}

type privateLinkServiceConnectionStateStatusPtr string

func PrivateLinkServiceConnectionStateStatusPtr(v string) PrivateLinkServiceConnectionStateStatusPtrInput {
	return (*privateLinkServiceConnectionStateStatusPtr)(&v)
}

func (*privateLinkServiceConnectionStateStatusPtr) ElementType() reflect.Type {
	return privateLinkServiceConnectionStateStatusPtrType
}

func (in *privateLinkServiceConnectionStateStatusPtr) ToPrivateLinkServiceConnectionStateStatusPtrOutput() PrivateLinkServiceConnectionStateStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateLinkServiceConnectionStateStatusPtrOutput)
}

func (in *privateLinkServiceConnectionStateStatusPtr) ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateLinkServiceConnectionStateStatusPtrOutput)
}

func (in *privateLinkServiceConnectionStateStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*PrivateLinkServiceConnectionStateStatus] {
	return pulumix.Output[*PrivateLinkServiceConnectionStateStatus]{
		OutputState: in.ToPrivateLinkServiceConnectionStateStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the state of public network access.
type PublicNetworkAccess string

const (
	PublicNetworkAccessNotSpecified = PublicNetworkAccess("NotSpecified")
	PublicNetworkAccessEnabled      = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled     = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessNotSpecified
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*PublicNetworkAccess] {
	return pulumix.Output[*PublicNetworkAccess]{
		OutputState: in.ToPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the purpose of the solution.
type Purpose string

const (
	PurposeDiscovery  = Purpose("Discovery")
	PurposeAssessment = Purpose("Assessment")
	PurposeMigration  = Purpose("Migration")
)

func (Purpose) ElementType() reflect.Type {
	return reflect.TypeOf((*Purpose)(nil)).Elem()
}

func (e Purpose) ToPurposeOutput() PurposeOutput {
	return pulumi.ToOutput(e).(PurposeOutput)
}

func (e Purpose) ToPurposeOutputWithContext(ctx context.Context) PurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PurposeOutput)
}

func (e Purpose) ToPurposePtrOutput() PurposePtrOutput {
	return e.ToPurposePtrOutputWithContext(context.Background())
}

func (e Purpose) ToPurposePtrOutputWithContext(ctx context.Context) PurposePtrOutput {
	return Purpose(e).ToPurposeOutputWithContext(ctx).ToPurposePtrOutputWithContext(ctx)
}

func (e Purpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Purpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Purpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Purpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PurposeOutput struct{ *pulumi.OutputState }

func (PurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Purpose)(nil)).Elem()
}

func (o PurposeOutput) ToPurposeOutput() PurposeOutput {
	return o
}

func (o PurposeOutput) ToPurposeOutputWithContext(ctx context.Context) PurposeOutput {
	return o
}

func (o PurposeOutput) ToPurposePtrOutput() PurposePtrOutput {
	return o.ToPurposePtrOutputWithContext(context.Background())
}

func (o PurposeOutput) ToPurposePtrOutputWithContext(ctx context.Context) PurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Purpose) *Purpose {
		return &v
	}).(PurposePtrOutput)
}

func (o PurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Purpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Purpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PurposePtrOutput struct{ *pulumi.OutputState }

func (PurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Purpose)(nil)).Elem()
}

func (o PurposePtrOutput) ToPurposePtrOutput() PurposePtrOutput {
	return o
}

func (o PurposePtrOutput) ToPurposePtrOutputWithContext(ctx context.Context) PurposePtrOutput {
	return o
}

func (o PurposePtrOutput) Elem() PurposeOutput {
	return o.ApplyT(func(v *Purpose) Purpose {
		if v != nil {
			return *v
		}
		var ret Purpose
		return ret
	}).(PurposeOutput)
}

func (o PurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Purpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PurposeInput is an input type that accepts values of the Purpose enum
// A concrete instance of `PurposeInput` can be one of the following:
//
//	PurposeDiscovery
//	PurposeAssessment
//	PurposeMigration
type PurposeInput interface {
	pulumi.Input

	ToPurposeOutput() PurposeOutput
	ToPurposeOutputWithContext(context.Context) PurposeOutput
}

var purposePtrType = reflect.TypeOf((**Purpose)(nil)).Elem()

type PurposePtrInput interface {
	pulumi.Input

	ToPurposePtrOutput() PurposePtrOutput
	ToPurposePtrOutputWithContext(context.Context) PurposePtrOutput
}

type purposePtr string

func PurposePtr(v string) PurposePtrInput {
	return (*purposePtr)(&v)
}

func (*purposePtr) ElementType() reflect.Type {
	return purposePtrType
}

func (in *purposePtr) ToPurposePtrOutput() PurposePtrOutput {
	return pulumi.ToOutput(in).(PurposePtrOutput)
}

func (in *purposePtr) ToPurposePtrOutputWithContext(ctx context.Context) PurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PurposePtrOutput)
}

func (in *purposePtr) ToOutput(ctx context.Context) pulumix.Output[*Purpose] {
	return pulumix.Output[*Purpose]{
		OutputState: in.ToPurposePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the current status of the solution.
type Status string

const (
	StatusInactive = Status("Inactive")
	StatusActive   = Status("Active")
)

func (Status) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (e Status) ToStatusOutput() StatusOutput {
	return pulumi.ToOutput(e).(StatusOutput)
}

func (e Status) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusOutput)
}

func (e Status) ToStatusPtrOutput() StatusPtrOutput {
	return e.ToStatusPtrOutputWithContext(context.Background())
}

func (e Status) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return Status(e).ToStatusOutputWithContext(ctx).ToStatusPtrOutputWithContext(ctx)
}

func (e Status) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Status) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusInput is an input type that accepts values of the Status enum
// A concrete instance of `StatusInput` can be one of the following:
//
//	StatusInactive
//	StatusActive
type StatusInput interface {
	pulumi.Input

	ToStatusOutput() StatusOutput
	ToStatusOutputWithContext(context.Context) StatusOutput
}

var statusPtrType = reflect.TypeOf((**Status)(nil)).Elem()

type StatusPtrInput interface {
	pulumi.Input

	ToStatusPtrOutput() StatusPtrOutput
	ToStatusPtrOutputWithContext(context.Context) StatusPtrOutput
}

type statusPtr string

func StatusPtr(v string) StatusPtrInput {
	return (*statusPtr)(&v)
}

func (*statusPtr) ElementType() reflect.Type {
	return statusPtrType
}

func (in *statusPtr) ToStatusPtrOutput() StatusPtrOutput {
	return pulumi.ToOutput(in).(StatusPtrOutput)
}

func (in *statusPtr) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusPtrOutput)
}

func (in *statusPtr) ToOutput(ctx context.Context) pulumix.Output[*Status] {
	return pulumix.Output[*Status]{
		OutputState: in.ToStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the tool being used in the solution.
type Tool string

const (
	ToolServerDiscovery                  = Tool("ServerDiscovery")
	ToolServerAssessment                 = Tool("ServerAssessment")
	ToolServerMigration                  = Tool("ServerMigration")
	ToolCloudamize                       = Tool("Cloudamize")
	ToolTurbonomic                       = Tool("Turbonomic")
	ToolZerto                            = Tool("Zerto")
	ToolCorentTech                       = Tool("CorentTech")
	ToolServerAssessmentV1               = Tool("ServerAssessmentV1")
	Tool_ServerMigration_Replication     = Tool("ServerMigration_Replication")
	ToolCarbonite                        = Tool("Carbonite")
	ToolDataMigrationAssistant           = Tool("DataMigrationAssistant")
	ToolDatabaseMigrationService         = Tool("DatabaseMigrationService")
	ToolDevice42                         = Tool("Device42")
	ToolJetStream                        = Tool("JetStream")
	ToolRackWare                         = Tool("RackWare")
	ToolUnifyCloud                       = Tool("UnifyCloud")
	ToolFlexera                          = Tool("Flexera")
	Tool_ServerDiscovery_Import          = Tool("ServerDiscovery_Import")
	ToolLakeside                         = Tool("Lakeside")
	ToolAppServiceMigrationAssistant     = Tool("AppServiceMigrationAssistant")
	ToolMovere                           = Tool("Movere")
	ToolCloudSphere                      = Tool("CloudSphere")
	ToolModernization                    = Tool("Modernization")
	Tool_ServerMigration_DataReplication = Tool("ServerMigration_DataReplication")
	ToolUnknown                          = Tool("Unknown")
)

func (Tool) ElementType() reflect.Type {
	return reflect.TypeOf((*Tool)(nil)).Elem()
}

func (e Tool) ToToolOutput() ToolOutput {
	return pulumi.ToOutput(e).(ToolOutput)
}

func (e Tool) ToToolOutputWithContext(ctx context.Context) ToolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ToolOutput)
}

func (e Tool) ToToolPtrOutput() ToolPtrOutput {
	return e.ToToolPtrOutputWithContext(context.Background())
}

func (e Tool) ToToolPtrOutputWithContext(ctx context.Context) ToolPtrOutput {
	return Tool(e).ToToolOutputWithContext(ctx).ToToolPtrOutputWithContext(ctx)
}

func (e Tool) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tool) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tool) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Tool) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ToolOutput struct{ *pulumi.OutputState }

func (ToolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tool)(nil)).Elem()
}

func (o ToolOutput) ToToolOutput() ToolOutput {
	return o
}

func (o ToolOutput) ToToolOutputWithContext(ctx context.Context) ToolOutput {
	return o
}

func (o ToolOutput) ToToolPtrOutput() ToolPtrOutput {
	return o.ToToolPtrOutputWithContext(context.Background())
}

func (o ToolOutput) ToToolPtrOutputWithContext(ctx context.Context) ToolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Tool) *Tool {
		return &v
	}).(ToolPtrOutput)
}

func (o ToolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ToolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Tool) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ToolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ToolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Tool) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ToolPtrOutput struct{ *pulumi.OutputState }

func (ToolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tool)(nil)).Elem()
}

func (o ToolPtrOutput) ToToolPtrOutput() ToolPtrOutput {
	return o
}

func (o ToolPtrOutput) ToToolPtrOutputWithContext(ctx context.Context) ToolPtrOutput {
	return o
}

func (o ToolPtrOutput) Elem() ToolOutput {
	return o.ApplyT(func(v *Tool) Tool {
		if v != nil {
			return *v
		}
		var ret Tool
		return ret
	}).(ToolOutput)
}

func (o ToolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ToolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Tool) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ToolInput is an input type that accepts values of the Tool enum
// A concrete instance of `ToolInput` can be one of the following:
//
//	ToolServerDiscovery
//	ToolServerAssessment
//	ToolServerMigration
//	ToolCloudamize
//	ToolTurbonomic
//	ToolZerto
//	ToolCorentTech
//	ToolServerAssessmentV1
//	Tool_ServerMigration_Replication
//	ToolCarbonite
//	ToolDataMigrationAssistant
//	ToolDatabaseMigrationService
//	ToolDevice42
//	ToolJetStream
//	ToolRackWare
//	ToolUnifyCloud
//	ToolFlexera
//	Tool_ServerDiscovery_Import
//	ToolLakeside
//	ToolAppServiceMigrationAssistant
//	ToolMovere
//	ToolCloudSphere
//	ToolModernization
//	Tool_ServerMigration_DataReplication
//	ToolUnknown
type ToolInput interface {
	pulumi.Input

	ToToolOutput() ToolOutput
	ToToolOutputWithContext(context.Context) ToolOutput
}

var toolPtrType = reflect.TypeOf((**Tool)(nil)).Elem()

type ToolPtrInput interface {
	pulumi.Input

	ToToolPtrOutput() ToolPtrOutput
	ToToolPtrOutputWithContext(context.Context) ToolPtrOutput
}

type toolPtr string

func ToolPtr(v string) ToolPtrInput {
	return (*toolPtr)(&v)
}

func (*toolPtr) ElementType() reflect.Type {
	return toolPtrType
}

func (in *toolPtr) ToToolPtrOutput() ToolPtrOutput {
	return pulumi.ToOutput(in).(ToolPtrOutput)
}

func (in *toolPtr) ToToolPtrOutputWithContext(ctx context.Context) ToolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ToolPtrOutput)
}

func (in *toolPtr) ToOutput(ctx context.Context) pulumix.Output[*Tool] {
	return pulumix.Output[*Tool]{
		OutputState: in.ToToolPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(CleanupStateOutput{})
	pulumi.RegisterOutputType(CleanupStatePtrOutput{})
	pulumi.RegisterOutputType(GoalOutput{})
	pulumi.RegisterOutputType(GoalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateStatusOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(PurposeOutput{})
	pulumi.RegisterOutputType(PurposePtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(ToolOutput{})
	pulumi.RegisterOutputType(ToolPtrOutput{})
}
