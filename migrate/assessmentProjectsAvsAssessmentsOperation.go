// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AVS assessment resource.
// Azure REST API version: 2024-01-01-preview.
type AssessmentProjectsAvsAssessmentsOperation struct {
	pulumi.CustomResourceState

	// Gets the assessment error summary.
	//             This is the number of machines
	// affected by each type of error in this assessment.
	AssessmentErrorSummary pulumi.IntMapOutput `pulumi:"assessmentErrorSummary"`
	// Assessment type of the assessment.
	AssessmentType pulumi.StringOutput `pulumi:"assessmentType"`
	// AVS Assessment Scenario.
	AvsAssessmentScenario pulumi.StringPtrOutput `pulumi:"avsAssessmentScenario"`
	// Estimated External Storage for Assessment.
	AvsEstimatedExternalStorages AvsEstimatedExternalStorageResponseArrayOutput `pulumi:"avsEstimatedExternalStorages"`
	// Estimated External Storage for Assessment.
	AvsEstimatedNetworks AvsEstimatedNetworkResponseArrayOutput `pulumi:"avsEstimatedNetworks"`
	// Estimated AVS SKU for Assessment.
	AvsEstimatedNodes AvsEstimatedNodeResponseArrayOutput `pulumi:"avsEstimatedNodes"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation pulumi.StringPtrOutput `pulumi:"azureLocation"`
	// Azure Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringPtrOutput `pulumi:"azureOfferCode"`
	// Confidence Rating in Percentage.
	ConfidenceRatingInPercentage pulumi.Float64Output `pulumi:"confidenceRatingInPercentage"`
	// collection of cost components.
	CostComponents CostComponentResponseArrayOutput `pulumi:"costComponents"`
	// Percentage of CPU capacity reserved for processing additional workloads.
	CpuHeadroom pulumi.Float64PtrOutput `pulumi:"cpuHeadroom"`
	// Predicted CPU utilization.
	CpuUtilization pulumi.Float64Output `pulumi:"cpuUtilization"`
	// Date and Time when assessment was created.
	CreatedTimestamp pulumi.StringOutput `pulumi:"createdTimestamp"`
	// Currency in which prices should be reported.
	Currency pulumi.StringPtrOutput `pulumi:"currency"`
	// De-duplication compression.
	DedupeCompression pulumi.Float64PtrOutput `pulumi:"dedupeCompression"`
	// Custom discount percentage.
	DiscountPercentage pulumi.Float64PtrOutput `pulumi:"discountPercentage"`
	// List of AVS external storage types.
	ExternalStorageTypes pulumi.StringArrayOutput `pulumi:"externalStorageTypes"`
	// Failures to tolerate and RAID level in a common property.
	FailuresToTolerateAndRaidLevel pulumi.StringPtrOutput `pulumi:"failuresToTolerateAndRaidLevel"`
	// List of Failures to tolerate and RAID levels in a common property.
	FailuresToTolerateAndRaidLevelList pulumi.StringArrayOutput `pulumi:"failuresToTolerateAndRaidLevelList"`
	// Gets the group type for the assessment.
	GroupType pulumi.StringOutput `pulumi:"groupType"`
	// Is Stretch Cluster Enabled.
	IsStretchClusterEnabled pulumi.BoolPtrOutput `pulumi:"isStretchClusterEnabled"`
	// Is VCF license applied
	IsVcfByolEnabled pulumi.BoolPtrOutput `pulumi:"isVcfByolEnabled"`
	// Limiting factor.
	LimitingFactor pulumi.StringOutput `pulumi:"limitingFactor"`
	// Memory overcommit.
	MemOvercommit pulumi.Float64PtrOutput `pulumi:"memOvercommit"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// AVS node type.
	NodeType pulumi.StringPtrOutput `pulumi:"nodeType"`
	// AVS node types.
	NodeTypes pulumi.StringArrayOutput `pulumi:"nodeTypes"`
	// Number of machines part of the assessment.
	NumberOfMachines pulumi.IntOutput `pulumi:"numberOfMachines"`
	// Recommended number of nodes.
	NumberOfNodes pulumi.IntOutput `pulumi:"numberOfNodes"`
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile pulumi.StringPtrOutput `pulumi:"percentile"`
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime pulumi.StringPtrOutput `pulumi:"perfDataEndTime"`
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime pulumi.StringPtrOutput `pulumi:"perfDataStartTime"`
	// Time when the Azure Prices were queried. Date-Time represented in ISO-8601
	// format.
	PricesTimestamp pulumi.StringOutput `pulumi:"pricesTimestamp"`
	// The status of the last operation.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Predicted RAM utilization.
	RamUtilization pulumi.Float64Output `pulumi:"ramUtilization"`
	// Reserved instance.
	ReservedInstance pulumi.StringPtrOutput `pulumi:"reservedInstance"`
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor pulumi.Float64PtrOutput `pulumi:"scalingFactor"`
	// Schema version.
	SchemaVersion pulumi.StringOutput `pulumi:"schemaVersion"`
	// Assessment sizing criterion.
	SizingCriterion pulumi.StringPtrOutput `pulumi:"sizingCriterion"`
	// User configurable setting to display the Stage of Assessment.
	Stage pulumi.StringOutput `pulumi:"stage"`
	// Whether assessment is in valid state and all machines have been assessed.
	Status pulumi.StringOutput `pulumi:"status"`
	// Predicted storage utilization.
	StorageUtilization pulumi.Float64Output `pulumi:"storageUtilization"`
	// Gets or sets the Assessment cloud suitability.
	Suitability pulumi.StringOutput `pulumi:"suitability"`
	// Gets or sets the Assessment suitability explanation.
	SuitabilityExplanation pulumi.StringOutput `pulumi:"suitabilityExplanation"`
	// Cloud suitability summary for all the machines in the assessment.
	SuitabilitySummary pulumi.IntMapOutput `pulumi:"suitabilitySummary"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange pulumi.StringPtrOutput `pulumi:"timeRange"`
	// Predicted total CPU cores used.
	TotalCpuCores pulumi.Float64Output `pulumi:"totalCpuCores"`
	// Total monthly cost.
	TotalMonthlyCost pulumi.Float64Output `pulumi:"totalMonthlyCost"`
	// Predicted total RAM used in GB.
	TotalRamInGB pulumi.Float64Output `pulumi:"totalRamInGB"`
	// Predicted total Storage used in GB.
	TotalStorageInGB pulumi.Float64Output `pulumi:"totalStorageInGB"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Date and Time when assessment was last updated.
	UpdatedTimestamp pulumi.StringOutput `pulumi:"updatedTimestamp"`
	// VCPU over subscription.
	VcpuOversubscription pulumi.Float64PtrOutput `pulumi:"vcpuOversubscription"`
}

// NewAssessmentProjectsAvsAssessmentsOperation registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectsAvsAssessmentsOperation(ctx *pulumi.Context,
	name string, args *AssessmentProjectsAvsAssessmentsOperationArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectsAvsAssessmentsOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20230315:AssessmentProjectsAvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230315:AvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AssessmentProjectsAvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AssessmentProjectsAvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AssessmentProjectsAvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AssessmentProjectsAvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AvsAssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate:AvsAssessmentsOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AssessmentProjectsAvsAssessmentsOperation
	err := ctx.RegisterResource("azure-native:migrate:AssessmentProjectsAvsAssessmentsOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectsAvsAssessmentsOperation gets an existing AssessmentProjectsAvsAssessmentsOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectsAvsAssessmentsOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectsAvsAssessmentsOperationState, opts ...pulumi.ResourceOption) (*AssessmentProjectsAvsAssessmentsOperation, error) {
	var resource AssessmentProjectsAvsAssessmentsOperation
	err := ctx.ReadResource("azure-native:migrate:AssessmentProjectsAvsAssessmentsOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectsAvsAssessmentsOperation resources.
type assessmentProjectsAvsAssessmentsOperationState struct {
}

type AssessmentProjectsAvsAssessmentsOperationState struct {
}

func (AssessmentProjectsAvsAssessmentsOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsAvsAssessmentsOperationState)(nil)).Elem()
}

type assessmentProjectsAvsAssessmentsOperationArgs struct {
	// AVS Assessment ARM name
	AssessmentName *string `pulumi:"assessmentName"`
	// AVS Assessment Scenario.
	AvsAssessmentScenario *string `pulumi:"avsAssessmentScenario"`
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation *string `pulumi:"azureLocation"`
	// Azure Offer code according to which cost estimation is done.
	AzureOfferCode *string `pulumi:"azureOfferCode"`
	// Percentage of CPU capacity reserved for processing additional workloads.
	CpuHeadroom *float64 `pulumi:"cpuHeadroom"`
	// Currency in which prices should be reported.
	Currency *string `pulumi:"currency"`
	// De-duplication compression.
	DedupeCompression *float64 `pulumi:"dedupeCompression"`
	// Custom discount percentage.
	DiscountPercentage *float64 `pulumi:"discountPercentage"`
	// List of AVS external storage types.
	ExternalStorageTypes []string `pulumi:"externalStorageTypes"`
	// Failures to tolerate and RAID level in a common property.
	FailuresToTolerateAndRaidLevel *string `pulumi:"failuresToTolerateAndRaidLevel"`
	// List of Failures to tolerate and RAID levels in a common property.
	FailuresToTolerateAndRaidLevelList []string `pulumi:"failuresToTolerateAndRaidLevelList"`
	// Group ARM name
	GroupName string `pulumi:"groupName"`
	// Is Stretch Cluster Enabled.
	IsStretchClusterEnabled *bool `pulumi:"isStretchClusterEnabled"`
	// Is VCF license applied
	IsVcfByolEnabled *bool `pulumi:"isVcfByolEnabled"`
	// Memory overcommit.
	MemOvercommit *float64 `pulumi:"memOvercommit"`
	// AVS node type.
	NodeType *string `pulumi:"nodeType"`
	// AVS node types.
	NodeTypes []string `pulumi:"nodeTypes"`
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile *string `pulumi:"percentile"`
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime *string `pulumi:"perfDataEndTime"`
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime *string `pulumi:"perfDataStartTime"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The status of the last operation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reserved instance.
	ReservedInstance *string `pulumi:"reservedInstance"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor *float64 `pulumi:"scalingFactor"`
	// Assessment sizing criterion.
	SizingCriterion *string `pulumi:"sizingCriterion"`
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange *string `pulumi:"timeRange"`
	// VCPU over subscription.
	VcpuOversubscription *float64 `pulumi:"vcpuOversubscription"`
}

// The set of arguments for constructing a AssessmentProjectsAvsAssessmentsOperation resource.
type AssessmentProjectsAvsAssessmentsOperationArgs struct {
	// AVS Assessment ARM name
	AssessmentName pulumi.StringPtrInput
	// AVS Assessment Scenario.
	AvsAssessmentScenario pulumi.StringPtrInput
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation pulumi.StringPtrInput
	// Azure Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringPtrInput
	// Percentage of CPU capacity reserved for processing additional workloads.
	CpuHeadroom pulumi.Float64PtrInput
	// Currency in which prices should be reported.
	Currency pulumi.StringPtrInput
	// De-duplication compression.
	DedupeCompression pulumi.Float64PtrInput
	// Custom discount percentage.
	DiscountPercentage pulumi.Float64PtrInput
	// List of AVS external storage types.
	ExternalStorageTypes pulumi.StringArrayInput
	// Failures to tolerate and RAID level in a common property.
	FailuresToTolerateAndRaidLevel pulumi.StringPtrInput
	// List of Failures to tolerate and RAID levels in a common property.
	FailuresToTolerateAndRaidLevelList pulumi.StringArrayInput
	// Group ARM name
	GroupName pulumi.StringInput
	// Is Stretch Cluster Enabled.
	IsStretchClusterEnabled pulumi.BoolPtrInput
	// Is VCF license applied
	IsVcfByolEnabled pulumi.BoolPtrInput
	// Memory overcommit.
	MemOvercommit pulumi.Float64PtrInput
	// AVS node type.
	NodeType pulumi.StringPtrInput
	// AVS node types.
	NodeTypes pulumi.StringArrayInput
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile pulumi.StringPtrInput
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime pulumi.StringPtrInput
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime pulumi.StringPtrInput
	// Assessment Project Name
	ProjectName pulumi.StringInput
	// The status of the last operation.
	ProvisioningState pulumi.StringPtrInput
	// Reserved instance.
	ReservedInstance pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor pulumi.Float64PtrInput
	// Assessment sizing criterion.
	SizingCriterion pulumi.StringPtrInput
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange pulumi.StringPtrInput
	// VCPU over subscription.
	VcpuOversubscription pulumi.Float64PtrInput
}

func (AssessmentProjectsAvsAssessmentsOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsAvsAssessmentsOperationArgs)(nil)).Elem()
}

type AssessmentProjectsAvsAssessmentsOperationInput interface {
	pulumi.Input

	ToAssessmentProjectsAvsAssessmentsOperationOutput() AssessmentProjectsAvsAssessmentsOperationOutput
	ToAssessmentProjectsAvsAssessmentsOperationOutputWithContext(ctx context.Context) AssessmentProjectsAvsAssessmentsOperationOutput
}

func (*AssessmentProjectsAvsAssessmentsOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsAvsAssessmentsOperation)(nil)).Elem()
}

func (i *AssessmentProjectsAvsAssessmentsOperation) ToAssessmentProjectsAvsAssessmentsOperationOutput() AssessmentProjectsAvsAssessmentsOperationOutput {
	return i.ToAssessmentProjectsAvsAssessmentsOperationOutputWithContext(context.Background())
}

func (i *AssessmentProjectsAvsAssessmentsOperation) ToAssessmentProjectsAvsAssessmentsOperationOutputWithContext(ctx context.Context) AssessmentProjectsAvsAssessmentsOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentProjectsAvsAssessmentsOperationOutput)
}

type AssessmentProjectsAvsAssessmentsOperationOutput struct{ *pulumi.OutputState }

func (AssessmentProjectsAvsAssessmentsOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsAvsAssessmentsOperation)(nil)).Elem()
}

func (o AssessmentProjectsAvsAssessmentsOperationOutput) ToAssessmentProjectsAvsAssessmentsOperationOutput() AssessmentProjectsAvsAssessmentsOperationOutput {
	return o
}

func (o AssessmentProjectsAvsAssessmentsOperationOutput) ToAssessmentProjectsAvsAssessmentsOperationOutputWithContext(ctx context.Context) AssessmentProjectsAvsAssessmentsOperationOutput {
	return o
}

// Gets the assessment error summary.
//
//	This is the number of machines
//
// affected by each type of error in this assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AssessmentErrorSummary() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.IntMapOutput {
		return v.AssessmentErrorSummary
	}).(pulumi.IntMapOutput)
}

// Assessment type of the assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AssessmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.AssessmentType }).(pulumi.StringOutput)
}

// AVS Assessment Scenario.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AvsAssessmentScenario() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput {
		return v.AvsAssessmentScenario
	}).(pulumi.StringPtrOutput)
}

// Estimated External Storage for Assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AvsEstimatedExternalStorages() AvsEstimatedExternalStorageResponseArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) AvsEstimatedExternalStorageResponseArrayOutput {
		return v.AvsEstimatedExternalStorages
	}).(AvsEstimatedExternalStorageResponseArrayOutput)
}

// Estimated External Storage for Assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AvsEstimatedNetworks() AvsEstimatedNetworkResponseArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) AvsEstimatedNetworkResponseArrayOutput {
		return v.AvsEstimatedNetworks
	}).(AvsEstimatedNetworkResponseArrayOutput)
}

// Estimated AVS SKU for Assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AvsEstimatedNodes() AvsEstimatedNodeResponseArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) AvsEstimatedNodeResponseArrayOutput {
		return v.AvsEstimatedNodes
	}).(AvsEstimatedNodeResponseArrayOutput)
}

// The Azure API version of the resource.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Azure Location or Azure region where to which the machines will be migrated.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AzureLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.AzureLocation }).(pulumi.StringPtrOutput)
}

// Azure Offer code according to which cost estimation is done.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) AzureOfferCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.AzureOfferCode }).(pulumi.StringPtrOutput)
}

// Confidence Rating in Percentage.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) ConfidenceRatingInPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output {
		return v.ConfidenceRatingInPercentage
	}).(pulumi.Float64Output)
}

// collection of cost components.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) CostComponents() CostComponentResponseArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) CostComponentResponseArrayOutput {
		return v.CostComponents
	}).(CostComponentResponseArrayOutput)
}

// Percentage of CPU capacity reserved for processing additional workloads.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) CpuHeadroom() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64PtrOutput { return v.CpuHeadroom }).(pulumi.Float64PtrOutput)
}

// Predicted CPU utilization.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) CpuUtilization() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.CpuUtilization }).(pulumi.Float64Output)
}

// Date and Time when assessment was created.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Currency in which prices should be reported.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.Currency }).(pulumi.StringPtrOutput)
}

// De-duplication compression.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) DedupeCompression() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64PtrOutput { return v.DedupeCompression }).(pulumi.Float64PtrOutput)
}

// Custom discount percentage.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) DiscountPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64PtrOutput {
		return v.DiscountPercentage
	}).(pulumi.Float64PtrOutput)
}

// List of AVS external storage types.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) ExternalStorageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringArrayOutput {
		return v.ExternalStorageTypes
	}).(pulumi.StringArrayOutput)
}

// Failures to tolerate and RAID level in a common property.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) FailuresToTolerateAndRaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput {
		return v.FailuresToTolerateAndRaidLevel
	}).(pulumi.StringPtrOutput)
}

// List of Failures to tolerate and RAID levels in a common property.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) FailuresToTolerateAndRaidLevelList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringArrayOutput {
		return v.FailuresToTolerateAndRaidLevelList
	}).(pulumi.StringArrayOutput)
}

// Gets the group type for the assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.GroupType }).(pulumi.StringOutput)
}

// Is Stretch Cluster Enabled.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) IsStretchClusterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.BoolPtrOutput {
		return v.IsStretchClusterEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is VCF license applied
func (o AssessmentProjectsAvsAssessmentsOperationOutput) IsVcfByolEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.BoolPtrOutput { return v.IsVcfByolEnabled }).(pulumi.BoolPtrOutput)
}

// Limiting factor.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) LimitingFactor() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.LimitingFactor }).(pulumi.StringOutput)
}

// Memory overcommit.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) MemOvercommit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64PtrOutput { return v.MemOvercommit }).(pulumi.Float64PtrOutput)
}

// The name of the resource
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// AVS node type.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.NodeType }).(pulumi.StringPtrOutput)
}

// AVS node types.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) NodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringArrayOutput { return v.NodeTypes }).(pulumi.StringArrayOutput)
}

// Number of machines part of the assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) NumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.IntOutput { return v.NumberOfMachines }).(pulumi.IntOutput)
}

// Recommended number of nodes.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) NumberOfNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.IntOutput { return v.NumberOfNodes }).(pulumi.IntOutput)
}

// Percentile of the utilization data values to be considered while assessing
// machines.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Percentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.Percentile }).(pulumi.StringPtrOutput)
}

// Gets or sets the end time to consider performance data for assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) PerfDataEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.PerfDataEndTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the start time to consider performance data for assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) PerfDataStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.PerfDataStartTime }).(pulumi.StringPtrOutput)
}

// Time when the Azure Prices were queried. Date-Time represented in ISO-8601
// format.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) PricesTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.PricesTimestamp }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Predicted RAM utilization.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) RamUtilization() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.RamUtilization }).(pulumi.Float64Output)
}

// Reserved instance.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) ReservedInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.ReservedInstance }).(pulumi.StringPtrOutput)
}

// Percentage of buffer that user wants on performance metrics when recommending
// Azure sizes.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) ScalingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64PtrOutput { return v.ScalingFactor }).(pulumi.Float64PtrOutput)
}

// Schema version.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.SchemaVersion }).(pulumi.StringOutput)
}

// Assessment sizing criterion.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) SizingCriterion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.SizingCriterion }).(pulumi.StringPtrOutput)
}

// User configurable setting to display the Stage of Assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.Stage }).(pulumi.StringOutput)
}

// Whether assessment is in valid state and all machines have been assessed.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Predicted storage utilization.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) StorageUtilization() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.StorageUtilization }).(pulumi.Float64Output)
}

// Gets or sets the Assessment cloud suitability.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Suitability() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.Suitability }).(pulumi.StringOutput)
}

// Gets or sets the Assessment suitability explanation.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) SuitabilityExplanation() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput {
		return v.SuitabilityExplanation
	}).(pulumi.StringOutput)
}

// Cloud suitability summary for all the machines in the assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) SuitabilitySummary() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.IntMapOutput { return v.SuitabilitySummary }).(pulumi.IntMapOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Time Range for which the historic utilization data should be considered for
// assessment.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringPtrOutput { return v.TimeRange }).(pulumi.StringPtrOutput)
}

// Predicted total CPU cores used.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) TotalCpuCores() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.TotalCpuCores }).(pulumi.Float64Output)
}

// Total monthly cost.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) TotalMonthlyCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.TotalMonthlyCost }).(pulumi.Float64Output)
}

// Predicted total RAM used in GB.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) TotalRamInGB() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.TotalRamInGB }).(pulumi.Float64Output)
}

// Predicted total Storage used in GB.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) TotalStorageInGB() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64Output { return v.TotalStorageInGB }).(pulumi.Float64Output)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AssessmentProjectsAvsAssessmentsOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Date and Time when assessment was last updated.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.StringOutput { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

// VCPU over subscription.
func (o AssessmentProjectsAvsAssessmentsOperationOutput) VcpuOversubscription() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAvsAssessmentsOperation) pulumi.Float64PtrOutput {
		return v.VcpuOversubscription
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentProjectsAvsAssessmentsOperationOutput{})
}
