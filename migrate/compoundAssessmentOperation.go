// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Compound assessment resource.
//
// Uses Azure REST API version 2024-03-03-preview.
type CompoundAssessmentOperation struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties CompoundAssessmentPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCompoundAssessmentOperation registers a new resource with the given unique name, arguments, and options.
func NewCompoundAssessmentOperation(ctx *pulumi.Context,
	name string, args *CompoundAssessmentOperationArgs, opts ...pulumi.ResourceOption) (*CompoundAssessmentOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20240303preview:CompoundAssessmentOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CompoundAssessmentOperation
	err := ctx.RegisterResource("azure-native:migrate:CompoundAssessmentOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCompoundAssessmentOperation gets an existing CompoundAssessmentOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCompoundAssessmentOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CompoundAssessmentOperationState, opts ...pulumi.ResourceOption) (*CompoundAssessmentOperation, error) {
	var resource CompoundAssessmentOperation
	err := ctx.ReadResource("azure-native:migrate:CompoundAssessmentOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CompoundAssessmentOperation resources.
type compoundAssessmentOperationState struct {
}

type CompoundAssessmentOperationState struct {
}

func (CompoundAssessmentOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*compoundAssessmentOperationState)(nil)).Elem()
}

type compoundAssessmentOperationArgs struct {
	// Compound Assessment ARM name
	CompoundAssessmentName *string `pulumi:"compoundAssessmentName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The resource-specific properties for this resource.
	Properties *CompoundAssessmentProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a CompoundAssessmentOperation resource.
type CompoundAssessmentOperationArgs struct {
	// Compound Assessment ARM name
	CompoundAssessmentName pulumi.StringPtrInput
	// Assessment Project Name
	ProjectName pulumi.StringInput
	// The resource-specific properties for this resource.
	Properties CompoundAssessmentPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (CompoundAssessmentOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*compoundAssessmentOperationArgs)(nil)).Elem()
}

type CompoundAssessmentOperationInput interface {
	pulumi.Input

	ToCompoundAssessmentOperationOutput() CompoundAssessmentOperationOutput
	ToCompoundAssessmentOperationOutputWithContext(ctx context.Context) CompoundAssessmentOperationOutput
}

func (*CompoundAssessmentOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**CompoundAssessmentOperation)(nil)).Elem()
}

func (i *CompoundAssessmentOperation) ToCompoundAssessmentOperationOutput() CompoundAssessmentOperationOutput {
	return i.ToCompoundAssessmentOperationOutputWithContext(context.Background())
}

func (i *CompoundAssessmentOperation) ToCompoundAssessmentOperationOutputWithContext(ctx context.Context) CompoundAssessmentOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompoundAssessmentOperationOutput)
}

type CompoundAssessmentOperationOutput struct{ *pulumi.OutputState }

func (CompoundAssessmentOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompoundAssessmentOperation)(nil)).Elem()
}

func (o CompoundAssessmentOperationOutput) ToCompoundAssessmentOperationOutput() CompoundAssessmentOperationOutput {
	return o
}

func (o CompoundAssessmentOperationOutput) ToCompoundAssessmentOperationOutputWithContext(ctx context.Context) CompoundAssessmentOperationOutput {
	return o
}

// The Azure API version of the resource.
func (o CompoundAssessmentOperationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CompoundAssessmentOperation) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o CompoundAssessmentOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CompoundAssessmentOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o CompoundAssessmentOperationOutput) Properties() CompoundAssessmentPropertiesResponseOutput {
	return o.ApplyT(func(v *CompoundAssessmentOperation) CompoundAssessmentPropertiesResponseOutput { return v.Properties }).(CompoundAssessmentPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CompoundAssessmentOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CompoundAssessmentOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CompoundAssessmentOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CompoundAssessmentOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CompoundAssessmentOperationOutput{})
}
