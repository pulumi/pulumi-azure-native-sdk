// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information related to a specific group in the project. Returns a json object of type 'group' as specified in the models section.
// Azure REST API version: 2019-10-01.
func LookupAssessmentProjectsGroup(ctx *pulumi.Context, args *LookupAssessmentProjectsGroupArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentProjectsGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentProjectsGroupResult
	err := ctx.Invoke("azure-native:migrate:getAssessmentProjectsGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentProjectsGroupArgs struct {
	// Unique name of a group within a project.
	GroupName string `pulumi:"groupName"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A group created in a Migration project.
type LookupAssessmentProjectsGroupResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}
	Id string `pulumi:"id"`
	// Name of the group.
	Name string `pulumi:"name"`
	// Properties of the group.
	Properties GroupPropertiesResponse `pulumi:"properties"`
	// Type of the object = [Microsoft.Migrate/assessmentProjects/groups].
	Type string `pulumi:"type"`
}

func LookupAssessmentProjectsGroupOutput(ctx *pulumi.Context, args LookupAssessmentProjectsGroupOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentProjectsGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAssessmentProjectsGroupResultOutput, error) {
			args := v.(LookupAssessmentProjectsGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getAssessmentProjectsGroup", args, LookupAssessmentProjectsGroupResultOutput{}, options).(LookupAssessmentProjectsGroupResultOutput), nil
		}).(LookupAssessmentProjectsGroupResultOutput)
}

type LookupAssessmentProjectsGroupOutputArgs struct {
	// Unique name of a group within a project.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssessmentProjectsGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsGroupArgs)(nil)).Elem()
}

// A group created in a Migration project.
type LookupAssessmentProjectsGroupResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentProjectsGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsGroupResult)(nil)).Elem()
}

func (o LookupAssessmentProjectsGroupResultOutput) ToLookupAssessmentProjectsGroupResultOutput() LookupAssessmentProjectsGroupResultOutput {
	return o
}

func (o LookupAssessmentProjectsGroupResultOutput) ToLookupAssessmentProjectsGroupResultOutputWithContext(ctx context.Context) LookupAssessmentProjectsGroupResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAssessmentProjectsGroupResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsGroupResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// For optimistic concurrency control.
func (o LookupAssessmentProjectsGroupResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsGroupResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}
func (o LookupAssessmentProjectsGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the group.
func (o LookupAssessmentProjectsGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the group.
func (o LookupAssessmentProjectsGroupResultOutput) Properties() GroupPropertiesResponseOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsGroupResult) GroupPropertiesResponse { return v.Properties }).(GroupPropertiesResponseOutput)
}

// Type of the object = [Microsoft.Migrate/assessmentProjects/groups].
func (o LookupAssessmentProjectsGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentProjectsGroupResultOutput{})
}
