// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure REST API version: 2019-10-01.
type AssessmentProjectsImportCollector struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput                     `pulumi:"azureApiVersion"`
	ETag            pulumi.StringPtrOutput                  `pulumi:"eTag"`
	Name            pulumi.StringOutput                     `pulumi:"name"`
	Properties      ImportCollectorPropertiesResponseOutput `pulumi:"properties"`
	Type            pulumi.StringOutput                     `pulumi:"type"`
}

// NewAssessmentProjectsImportCollector registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectsImportCollector(ctx *pulumi.Context,
	name string, args *AssessmentProjectsImportCollectorArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectsImportCollector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20191001:AssessmentProjectsImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20191001:ImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230315:AssessmentProjectsImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230315:ImportCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AssessmentProjectsImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:ImportCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AssessmentProjectsImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:ImportCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AssessmentProjectsImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:ImportCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AssessmentProjectsImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:ImportCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate:ImportCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate:ImportCollectorsOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AssessmentProjectsImportCollector
	err := ctx.RegisterResource("azure-native:migrate:AssessmentProjectsImportCollector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectsImportCollector gets an existing AssessmentProjectsImportCollector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectsImportCollector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectsImportCollectorState, opts ...pulumi.ResourceOption) (*AssessmentProjectsImportCollector, error) {
	var resource AssessmentProjectsImportCollector
	err := ctx.ReadResource("azure-native:migrate:AssessmentProjectsImportCollector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectsImportCollector resources.
type assessmentProjectsImportCollectorState struct {
}

type AssessmentProjectsImportCollectorState struct {
}

func (AssessmentProjectsImportCollectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsImportCollectorState)(nil)).Elem()
}

type assessmentProjectsImportCollectorArgs struct {
	ETag *string `pulumi:"eTag"`
	// Unique name of a Import collector within a project.
	ImportCollectorName *string `pulumi:"importCollectorName"`
	// Name of the Azure Migrate project.
	ProjectName string                     `pulumi:"projectName"`
	Properties  *ImportCollectorProperties `pulumi:"properties"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AssessmentProjectsImportCollector resource.
type AssessmentProjectsImportCollectorArgs struct {
	ETag pulumi.StringPtrInput
	// Unique name of a Import collector within a project.
	ImportCollectorName pulumi.StringPtrInput
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput
	Properties  ImportCollectorPropertiesPtrInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
}

func (AssessmentProjectsImportCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsImportCollectorArgs)(nil)).Elem()
}

type AssessmentProjectsImportCollectorInput interface {
	pulumi.Input

	ToAssessmentProjectsImportCollectorOutput() AssessmentProjectsImportCollectorOutput
	ToAssessmentProjectsImportCollectorOutputWithContext(ctx context.Context) AssessmentProjectsImportCollectorOutput
}

func (*AssessmentProjectsImportCollector) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsImportCollector)(nil)).Elem()
}

func (i *AssessmentProjectsImportCollector) ToAssessmentProjectsImportCollectorOutput() AssessmentProjectsImportCollectorOutput {
	return i.ToAssessmentProjectsImportCollectorOutputWithContext(context.Background())
}

func (i *AssessmentProjectsImportCollector) ToAssessmentProjectsImportCollectorOutputWithContext(ctx context.Context) AssessmentProjectsImportCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentProjectsImportCollectorOutput)
}

type AssessmentProjectsImportCollectorOutput struct{ *pulumi.OutputState }

func (AssessmentProjectsImportCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsImportCollector)(nil)).Elem()
}

func (o AssessmentProjectsImportCollectorOutput) ToAssessmentProjectsImportCollectorOutput() AssessmentProjectsImportCollectorOutput {
	return o
}

func (o AssessmentProjectsImportCollectorOutput) ToAssessmentProjectsImportCollectorOutputWithContext(ctx context.Context) AssessmentProjectsImportCollectorOutput {
	return o
}

// The Azure API version of the resource.
func (o AssessmentProjectsImportCollectorOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsImportCollector) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o AssessmentProjectsImportCollectorOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsImportCollector) pulumi.StringPtrOutput { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o AssessmentProjectsImportCollectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsImportCollector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AssessmentProjectsImportCollectorOutput) Properties() ImportCollectorPropertiesResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsImportCollector) ImportCollectorPropertiesResponseOutput {
		return v.Properties
	}).(ImportCollectorPropertiesResponseOutput)
}

func (o AssessmentProjectsImportCollectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsImportCollector) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentProjectsImportCollectorOutput{})
}
