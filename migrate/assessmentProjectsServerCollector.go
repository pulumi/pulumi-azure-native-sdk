// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure REST API version: 2019-10-01.
type AssessmentProjectsServerCollector struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput               `pulumi:"azureApiVersion"`
	ETag            pulumi.StringPtrOutput            `pulumi:"eTag"`
	Name            pulumi.StringOutput               `pulumi:"name"`
	Properties      CollectorPropertiesResponseOutput `pulumi:"properties"`
	Type            pulumi.StringOutput               `pulumi:"type"`
}

// NewAssessmentProjectsServerCollector registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectsServerCollector(ctx *pulumi.Context,
	name string, args *AssessmentProjectsServerCollectorArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectsServerCollector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20191001:AssessmentProjectsServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20191001:ServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230315:AssessmentProjectsServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230315:ServerCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AssessmentProjectsServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:ServerCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AssessmentProjectsServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:ServerCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AssessmentProjectsServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:ServerCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AssessmentProjectsServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:ServerCollectorsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate:ServerCollector"),
		},
		{
			Type: pulumi.String("azure-native:migrate:ServerCollectorsOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AssessmentProjectsServerCollector
	err := ctx.RegisterResource("azure-native:migrate:AssessmentProjectsServerCollector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectsServerCollector gets an existing AssessmentProjectsServerCollector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectsServerCollector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectsServerCollectorState, opts ...pulumi.ResourceOption) (*AssessmentProjectsServerCollector, error) {
	var resource AssessmentProjectsServerCollector
	err := ctx.ReadResource("azure-native:migrate:AssessmentProjectsServerCollector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectsServerCollector resources.
type assessmentProjectsServerCollectorState struct {
}

type AssessmentProjectsServerCollectorState struct {
}

func (AssessmentProjectsServerCollectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsServerCollectorState)(nil)).Elem()
}

type assessmentProjectsServerCollectorArgs struct {
	ETag *string `pulumi:"eTag"`
	// Name of the Azure Migrate project.
	ProjectName string               `pulumi:"projectName"`
	Properties  *CollectorProperties `pulumi:"properties"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Unique name of a Server collector within a project.
	ServerCollectorName *string `pulumi:"serverCollectorName"`
}

// The set of arguments for constructing a AssessmentProjectsServerCollector resource.
type AssessmentProjectsServerCollectorArgs struct {
	ETag pulumi.StringPtrInput
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput
	Properties  CollectorPropertiesPtrInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
	// Unique name of a Server collector within a project.
	ServerCollectorName pulumi.StringPtrInput
}

func (AssessmentProjectsServerCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsServerCollectorArgs)(nil)).Elem()
}

type AssessmentProjectsServerCollectorInput interface {
	pulumi.Input

	ToAssessmentProjectsServerCollectorOutput() AssessmentProjectsServerCollectorOutput
	ToAssessmentProjectsServerCollectorOutputWithContext(ctx context.Context) AssessmentProjectsServerCollectorOutput
}

func (*AssessmentProjectsServerCollector) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsServerCollector)(nil)).Elem()
}

func (i *AssessmentProjectsServerCollector) ToAssessmentProjectsServerCollectorOutput() AssessmentProjectsServerCollectorOutput {
	return i.ToAssessmentProjectsServerCollectorOutputWithContext(context.Background())
}

func (i *AssessmentProjectsServerCollector) ToAssessmentProjectsServerCollectorOutputWithContext(ctx context.Context) AssessmentProjectsServerCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentProjectsServerCollectorOutput)
}

type AssessmentProjectsServerCollectorOutput struct{ *pulumi.OutputState }

func (AssessmentProjectsServerCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsServerCollector)(nil)).Elem()
}

func (o AssessmentProjectsServerCollectorOutput) ToAssessmentProjectsServerCollectorOutput() AssessmentProjectsServerCollectorOutput {
	return o
}

func (o AssessmentProjectsServerCollectorOutput) ToAssessmentProjectsServerCollectorOutputWithContext(ctx context.Context) AssessmentProjectsServerCollectorOutput {
	return o
}

// The Azure API version of the resource.
func (o AssessmentProjectsServerCollectorOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsServerCollector) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o AssessmentProjectsServerCollectorOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsServerCollector) pulumi.StringPtrOutput { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o AssessmentProjectsServerCollectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsServerCollector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AssessmentProjectsServerCollectorOutput) Properties() CollectorPropertiesResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsServerCollector) CollectorPropertiesResponseOutput { return v.Properties }).(CollectorPropertiesResponseOutput)
}

func (o AssessmentProjectsServerCollectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsServerCollector) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentProjectsServerCollectorOutput{})
}
