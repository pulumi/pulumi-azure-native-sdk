// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Import collector.
//
// Uses Azure REST API version 2019-10-01.
func LookupImportCollector(ctx *pulumi.Context, args *LookupImportCollectorArgs, opts ...pulumi.InvokeOption) (*LookupImportCollectorResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupImportCollectorResult
	err := ctx.Invoke("azure-native:migrate:getImportCollector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupImportCollectorArgs struct {
	// Unique name of a Import collector within a project.
	ImportCollectorName string `pulumi:"importCollectorName"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

type LookupImportCollectorResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string                            `pulumi:"azureApiVersion"`
	ETag            *string                           `pulumi:"eTag"`
	Id              string                            `pulumi:"id"`
	Name            string                            `pulumi:"name"`
	Properties      ImportCollectorPropertiesResponse `pulumi:"properties"`
	Type            string                            `pulumi:"type"`
}

func LookupImportCollectorOutput(ctx *pulumi.Context, args LookupImportCollectorOutputArgs, opts ...pulumi.InvokeOption) LookupImportCollectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupImportCollectorResultOutput, error) {
			args := v.(LookupImportCollectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getImportCollector", args, LookupImportCollectorResultOutput{}, options).(LookupImportCollectorResultOutput), nil
		}).(LookupImportCollectorResultOutput)
}

type LookupImportCollectorOutputArgs struct {
	// Unique name of a Import collector within a project.
	ImportCollectorName pulumi.StringInput `pulumi:"importCollectorName"`
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupImportCollectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImportCollectorArgs)(nil)).Elem()
}

type LookupImportCollectorResultOutput struct{ *pulumi.OutputState }

func (LookupImportCollectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImportCollectorResult)(nil)).Elem()
}

func (o LookupImportCollectorResultOutput) ToLookupImportCollectorResultOutput() LookupImportCollectorResultOutput {
	return o
}

func (o LookupImportCollectorResultOutput) ToLookupImportCollectorResultOutputWithContext(ctx context.Context) LookupImportCollectorResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupImportCollectorResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImportCollectorResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o LookupImportCollectorResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImportCollectorResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o LookupImportCollectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImportCollectorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImportCollectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImportCollectorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupImportCollectorResultOutput) Properties() ImportCollectorPropertiesResponseOutput {
	return o.ApplyT(func(v LookupImportCollectorResult) ImportCollectorPropertiesResponse { return v.Properties }).(ImportCollectorPropertiesResponseOutput)
}

func (o LookupImportCollectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImportCollectorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImportCollectorResultOutput{})
}
