// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Assessment
func LookupAssessmentsOperation(ctx *pulumi.Context, args *LookupAssessmentsOperationArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentsOperationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentsOperationResult
	err := ctx.Invoke("azure-native:migrate/v20230315:getAssessmentsOperation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentsOperationArgs struct {
	// Machine Assessment ARM name
	AssessmentName string `pulumi:"assessmentName"`
	// Group ARM name
	GroupName string `pulumi:"groupName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Machine assessment resource.
type LookupAssessmentsOperationResult struct {
	// Gets or sets the assessment error summary.
	//             This is the number of
	// machines affected by each type of error in this assessment.
	AssessmentErrorSummary map[string]int `pulumi:"assessmentErrorSummary"`
	// Assessment type of the assessment.
	AssessmentType string `pulumi:"assessmentType"`
	// Gets or sets the azure storage type. Premium, Standard etc.
	AzureDiskTypes []string `pulumi:"azureDiskTypes"`
	// Gets or sets the user configurable setting to display the azure hybrid use
	// benefit.
	AzureHybridUseBenefit *string `pulumi:"azureHybridUseBenefit"`
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation *string `pulumi:"azureLocation"`
	// Azure Offer Code.
	AzureOfferCode *string `pulumi:"azureOfferCode"`
	// Gets or sets Azure Pricing Tier - Free, Basic, etc.
	AzurePricingTier *string `pulumi:"azurePricingTier"`
	// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
	AzureStorageRedundancy *string `pulumi:"azureStorageRedundancy"`
	// Gets or sets the Azure VM families.
	AzureVmFamilies []string `pulumi:"azureVmFamilies"`
	// Confidence Rating in Percentage.
	ConfidenceRatingInPercentage float64 `pulumi:"confidenceRatingInPercentage"`
	// Gets the collection of cost components.
	CostComponents []CostComponentResponse `pulumi:"costComponents"`
	// Date and Time when assessment was created.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// Currency in which prices should be reported.
	Currency *string `pulumi:"currency"`
	// Custom discount percentage.
	DiscountPercentage *float64 `pulumi:"discountPercentage"`
	// Gets the distribution by os name.
	DistributionByOsName map[string]int `pulumi:"distributionByOsName"`
	// Gets the distribution distribution of sqlInstances by service pack insight.
	DistributionByServicePackInsight map[string]int `pulumi:"distributionByServicePackInsight"`
	// Gets the distribution of sqlInstances by support status.
	DistributionBySupportStatus map[string]int `pulumi:"distributionBySupportStatus"`
	// Gets or sets enterprise agreement subscription id.
	EaSubscriptionId *string `pulumi:"eaSubscriptionId"`
	// Gets the group type for the assessment.
	GroupType string `pulumi:"groupType"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Gets or sets the aggregate Bandwidth Cost for all machines in the assessment.
	MonthlyBandwidthCost float64 `pulumi:"monthlyBandwidthCost"`
	// Gets or sets the aggregate Compute Cost for all machines in the assessment.
	MonthlyComputeCost float64 `pulumi:"monthlyComputeCost"`
	// Gets or sets the aggregate premium storage cost for all machines in the
	// assessment.
	MonthlyPremiumStorageCost float64 `pulumi:"monthlyPremiumStorageCost"`
	// Gets or sets the aggregate standard SSD storage cost for all the machines in
	// the assessment.
	MonthlyStandardSsdStorageCost float64 `pulumi:"monthlyStandardSsdStorageCost"`
	// Gets or sets the aggregate Storage Cost for all machines in the assessment.
	MonthlyStorageCost float64 `pulumi:"monthlyStorageCost"`
	// Gets or sets the aggregate ultra storage cost for all machines in the
	// assessment.
	MonthlyUltraStorageCost float64 `pulumi:"monthlyUltraStorageCost"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets the Number of machines part of the assessment.
	NumberOfMachines int `pulumi:"numberOfMachines"`
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile *string `pulumi:"percentile"`
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime *string `pulumi:"perfDataEndTime"`
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime *string `pulumi:"perfDataStartTime"`
	// Last time when rates were queried.
	PricesTimestamp string `pulumi:"pricesTimestamp"`
	// The status of the last operation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
	ReservedInstance *string `pulumi:"reservedInstance"`
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor *float64 `pulumi:"scalingFactor"`
	// Schema version.
	SchemaVersion string `pulumi:"schemaVersion"`
	// Assessment sizing criterion.
	SizingCriterion *string `pulumi:"sizingCriterion"`
	// User configurable setting to display the Stage of Assessment.
	Stage string `pulumi:"stage"`
	// Whether assessment is in valid state and all machines have been assessed.
	Status string `pulumi:"status"`
	// Gets or sets the Cloud suitability summary for all the machines in the
	// assessment.
	SuitabilitySummary map[string]int `pulumi:"suitabilitySummary"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange *string `pulumi:"timeRange"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Date and Time when assessment was last updated.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
	// Gets or sets the duration for which the VMs are up in the on-premises
	// environment.
	VmUptime *VmUptimeResponse `pulumi:"vmUptime"`
}

func LookupAssessmentsOperationOutput(ctx *pulumi.Context, args LookupAssessmentsOperationOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentsOperationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAssessmentsOperationResult, error) {
			args := v.(LookupAssessmentsOperationArgs)
			r, err := LookupAssessmentsOperation(ctx, &args, opts...)
			var s LookupAssessmentsOperationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAssessmentsOperationResultOutput)
}

type LookupAssessmentsOperationOutputArgs struct {
	// Machine Assessment ARM name
	AssessmentName pulumi.StringInput `pulumi:"assessmentName"`
	// Group ARM name
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Assessment Project Name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssessmentsOperationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentsOperationArgs)(nil)).Elem()
}

// Machine assessment resource.
type LookupAssessmentsOperationResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentsOperationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentsOperationResult)(nil)).Elem()
}

func (o LookupAssessmentsOperationResultOutput) ToLookupAssessmentsOperationResultOutput() LookupAssessmentsOperationResultOutput {
	return o
}

func (o LookupAssessmentsOperationResultOutput) ToLookupAssessmentsOperationResultOutputWithContext(ctx context.Context) LookupAssessmentsOperationResultOutput {
	return o
}

// Gets or sets the assessment error summary.
//
//	This is the number of
//
// machines affected by each type of error in this assessment.
func (o LookupAssessmentsOperationResultOutput) AssessmentErrorSummary() pulumi.IntMapOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) map[string]int { return v.AssessmentErrorSummary }).(pulumi.IntMapOutput)
}

// Assessment type of the assessment.
func (o LookupAssessmentsOperationResultOutput) AssessmentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.AssessmentType }).(pulumi.StringOutput)
}

// Gets or sets the azure storage type. Premium, Standard etc.
func (o LookupAssessmentsOperationResultOutput) AzureDiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) []string { return v.AzureDiskTypes }).(pulumi.StringArrayOutput)
}

// Gets or sets the user configurable setting to display the azure hybrid use
// benefit.
func (o LookupAssessmentsOperationResultOutput) AzureHybridUseBenefit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.AzureHybridUseBenefit }).(pulumi.StringPtrOutput)
}

// Azure Location or Azure region where to which the machines will be migrated.
func (o LookupAssessmentsOperationResultOutput) AzureLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.AzureLocation }).(pulumi.StringPtrOutput)
}

// Azure Offer Code.
func (o LookupAssessmentsOperationResultOutput) AzureOfferCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.AzureOfferCode }).(pulumi.StringPtrOutput)
}

// Gets or sets Azure Pricing Tier - Free, Basic, etc.
func (o LookupAssessmentsOperationResultOutput) AzurePricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.AzurePricingTier }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
func (o LookupAssessmentsOperationResultOutput) AzureStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.AzureStorageRedundancy }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure VM families.
func (o LookupAssessmentsOperationResultOutput) AzureVmFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) []string { return v.AzureVmFamilies }).(pulumi.StringArrayOutput)
}

// Confidence Rating in Percentage.
func (o LookupAssessmentsOperationResultOutput) ConfidenceRatingInPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.ConfidenceRatingInPercentage }).(pulumi.Float64Output)
}

// Gets the collection of cost components.
func (o LookupAssessmentsOperationResultOutput) CostComponents() CostComponentResponseArrayOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) []CostComponentResponse { return v.CostComponents }).(CostComponentResponseArrayOutput)
}

// Date and Time when assessment was created.
func (o LookupAssessmentsOperationResultOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Currency in which prices should be reported.
func (o LookupAssessmentsOperationResultOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.Currency }).(pulumi.StringPtrOutput)
}

// Custom discount percentage.
func (o LookupAssessmentsOperationResultOutput) DiscountPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *float64 { return v.DiscountPercentage }).(pulumi.Float64PtrOutput)
}

// Gets the distribution by os name.
func (o LookupAssessmentsOperationResultOutput) DistributionByOsName() pulumi.IntMapOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) map[string]int { return v.DistributionByOsName }).(pulumi.IntMapOutput)
}

// Gets the distribution distribution of sqlInstances by service pack insight.
func (o LookupAssessmentsOperationResultOutput) DistributionByServicePackInsight() pulumi.IntMapOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) map[string]int { return v.DistributionByServicePackInsight }).(pulumi.IntMapOutput)
}

// Gets the distribution of sqlInstances by support status.
func (o LookupAssessmentsOperationResultOutput) DistributionBySupportStatus() pulumi.IntMapOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) map[string]int { return v.DistributionBySupportStatus }).(pulumi.IntMapOutput)
}

// Gets or sets enterprise agreement subscription id.
func (o LookupAssessmentsOperationResultOutput) EaSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.EaSubscriptionId }).(pulumi.StringPtrOutput)
}

// Gets the group type for the assessment.
func (o LookupAssessmentsOperationResultOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.GroupType }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAssessmentsOperationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets the aggregate Bandwidth Cost for all machines in the assessment.
func (o LookupAssessmentsOperationResultOutput) MonthlyBandwidthCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.MonthlyBandwidthCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate Compute Cost for all machines in the assessment.
func (o LookupAssessmentsOperationResultOutput) MonthlyComputeCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.MonthlyComputeCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate premium storage cost for all machines in the
// assessment.
func (o LookupAssessmentsOperationResultOutput) MonthlyPremiumStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.MonthlyPremiumStorageCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate standard SSD storage cost for all the machines in
// the assessment.
func (o LookupAssessmentsOperationResultOutput) MonthlyStandardSsdStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.MonthlyStandardSsdStorageCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate Storage Cost for all machines in the assessment.
func (o LookupAssessmentsOperationResultOutput) MonthlyStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.MonthlyStorageCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate ultra storage cost for all machines in the
// assessment.
func (o LookupAssessmentsOperationResultOutput) MonthlyUltraStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) float64 { return v.MonthlyUltraStorageCost }).(pulumi.Float64Output)
}

// The name of the resource
func (o LookupAssessmentsOperationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the Number of machines part of the assessment.
func (o LookupAssessmentsOperationResultOutput) NumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) int { return v.NumberOfMachines }).(pulumi.IntOutput)
}

// Percentile of the utilization data values to be considered while assessing
// machines.
func (o LookupAssessmentsOperationResultOutput) Percentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.Percentile }).(pulumi.StringPtrOutput)
}

// Gets or sets the end time to consider performance data for assessment.
func (o LookupAssessmentsOperationResultOutput) PerfDataEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.PerfDataEndTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the start time to consider performance data for assessment.
func (o LookupAssessmentsOperationResultOutput) PerfDataStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.PerfDataStartTime }).(pulumi.StringPtrOutput)
}

// Last time when rates were queried.
func (o LookupAssessmentsOperationResultOutput) PricesTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.PricesTimestamp }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupAssessmentsOperationResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
func (o LookupAssessmentsOperationResultOutput) ReservedInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.ReservedInstance }).(pulumi.StringPtrOutput)
}

// Percentage of buffer that user wants on performance metrics when recommending
// Azure sizes.
func (o LookupAssessmentsOperationResultOutput) ScalingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *float64 { return v.ScalingFactor }).(pulumi.Float64PtrOutput)
}

// Schema version.
func (o LookupAssessmentsOperationResultOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.SchemaVersion }).(pulumi.StringOutput)
}

// Assessment sizing criterion.
func (o LookupAssessmentsOperationResultOutput) SizingCriterion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.SizingCriterion }).(pulumi.StringPtrOutput)
}

// User configurable setting to display the Stage of Assessment.
func (o LookupAssessmentsOperationResultOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.Stage }).(pulumi.StringOutput)
}

// Whether assessment is in valid state and all machines have been assessed.
func (o LookupAssessmentsOperationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.Status }).(pulumi.StringOutput)
}

// Gets or sets the Cloud suitability summary for all the machines in the
// assessment.
func (o LookupAssessmentsOperationResultOutput) SuitabilitySummary() pulumi.IntMapOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) map[string]int { return v.SuitabilitySummary }).(pulumi.IntMapOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAssessmentsOperationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Time Range for which the historic utilization data should be considered for
// assessment.
func (o LookupAssessmentsOperationResultOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAssessmentsOperationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Date and Time when assessment was last updated.
func (o LookupAssessmentsOperationResultOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) string { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

// Gets or sets the duration for which the VMs are up in the on-premises
// environment.
func (o LookupAssessmentsOperationResultOutput) VmUptime() VmUptimeResponsePtrOutput {
	return o.ApplyT(func(v LookupAssessmentsOperationResult) *VmUptimeResponse { return v.VmUptime }).(VmUptimeResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentsOperationResultOutput{})
}
