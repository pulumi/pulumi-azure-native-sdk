// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Machine assessment resource.
type AssessmentsOperation struct {
	pulumi.CustomResourceState

	// Gets or sets the assessment error summary.
	//             This is the number of
	// machines affected by each type of error in this assessment.
	AssessmentErrorSummary pulumi.IntMapOutput `pulumi:"assessmentErrorSummary"`
	// Assessment type of the assessment.
	AssessmentType pulumi.StringOutput `pulumi:"assessmentType"`
	// Gets or sets the azure storage type. Premium, Standard etc.
	AzureDiskTypes pulumi.StringArrayOutput `pulumi:"azureDiskTypes"`
	// Gets or sets the user configurable setting to display the azure hybrid use
	// benefit.
	AzureHybridUseBenefit pulumi.StringPtrOutput `pulumi:"azureHybridUseBenefit"`
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation pulumi.StringPtrOutput `pulumi:"azureLocation"`
	// Azure Offer Code.
	AzureOfferCode pulumi.StringPtrOutput `pulumi:"azureOfferCode"`
	// Gets or sets Azure Pricing Tier - Free, Basic, etc.
	AzurePricingTier pulumi.StringPtrOutput `pulumi:"azurePricingTier"`
	// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
	AzureStorageRedundancy pulumi.StringPtrOutput `pulumi:"azureStorageRedundancy"`
	// Gets or sets the Azure VM families.
	AzureVmFamilies pulumi.StringArrayOutput `pulumi:"azureVmFamilies"`
	// Confidence Rating in Percentage.
	ConfidenceRatingInPercentage pulumi.Float64Output `pulumi:"confidenceRatingInPercentage"`
	// Gets the collection of cost components.
	CostComponents CostComponentResponseArrayOutput `pulumi:"costComponents"`
	// Date and Time when assessment was created.
	CreatedTimestamp pulumi.StringOutput `pulumi:"createdTimestamp"`
	// Currency in which prices should be reported.
	Currency pulumi.StringPtrOutput `pulumi:"currency"`
	// Custom discount percentage.
	DiscountPercentage pulumi.Float64PtrOutput `pulumi:"discountPercentage"`
	// Gets the distribution by os name.
	DistributionByOsName pulumi.IntMapOutput `pulumi:"distributionByOsName"`
	// Gets the distribution distribution of sqlInstances by service pack insight.
	DistributionByServicePackInsight pulumi.IntMapOutput `pulumi:"distributionByServicePackInsight"`
	// Gets the distribution of sqlInstances by support status.
	DistributionBySupportStatus pulumi.IntMapOutput `pulumi:"distributionBySupportStatus"`
	// Gets or sets enterprise agreement subscription id.
	EaSubscriptionId pulumi.StringPtrOutput `pulumi:"eaSubscriptionId"`
	// Gets the group type for the assessment.
	GroupType pulumi.StringOutput `pulumi:"groupType"`
	// Gets or sets the aggregate Bandwidth Cost for all machines in the assessment.
	MonthlyBandwidthCost pulumi.Float64Output `pulumi:"monthlyBandwidthCost"`
	// Gets or sets the aggregate Compute Cost for all machines in the assessment.
	MonthlyComputeCost pulumi.Float64Output `pulumi:"monthlyComputeCost"`
	// Gets or sets the aggregate premium storage cost for all machines in the
	// assessment.
	MonthlyPremiumStorageCost pulumi.Float64Output `pulumi:"monthlyPremiumStorageCost"`
	// Gets or sets the aggregate standard SSD storage cost for all the machines in
	// the assessment.
	MonthlyStandardSsdStorageCost pulumi.Float64Output `pulumi:"monthlyStandardSsdStorageCost"`
	// Gets or sets the aggregate Storage Cost for all machines in the assessment.
	MonthlyStorageCost pulumi.Float64Output `pulumi:"monthlyStorageCost"`
	// Gets or sets the aggregate ultra storage cost for all machines in the
	// assessment.
	MonthlyUltraStorageCost pulumi.Float64Output `pulumi:"monthlyUltraStorageCost"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the Number of machines part of the assessment.
	NumberOfMachines pulumi.IntOutput `pulumi:"numberOfMachines"`
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile pulumi.StringPtrOutput `pulumi:"percentile"`
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime pulumi.StringPtrOutput `pulumi:"perfDataEndTime"`
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime pulumi.StringPtrOutput `pulumi:"perfDataStartTime"`
	// Last time when rates were queried.
	PricesTimestamp pulumi.StringOutput `pulumi:"pricesTimestamp"`
	// The status of the last operation.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
	ReservedInstance pulumi.StringPtrOutput `pulumi:"reservedInstance"`
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor pulumi.Float64PtrOutput `pulumi:"scalingFactor"`
	// Schema version.
	SchemaVersion pulumi.StringOutput `pulumi:"schemaVersion"`
	// Assessment sizing criterion.
	SizingCriterion pulumi.StringPtrOutput `pulumi:"sizingCriterion"`
	// User configurable setting to display the Stage of Assessment.
	Stage pulumi.StringOutput `pulumi:"stage"`
	// Whether assessment is in valid state and all machines have been assessed.
	Status pulumi.StringOutput `pulumi:"status"`
	// Gets or sets the Cloud suitability summary for all the machines in the
	// assessment.
	SuitabilitySummary pulumi.IntMapOutput `pulumi:"suitabilitySummary"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange pulumi.StringPtrOutput `pulumi:"timeRange"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Date and Time when assessment was last updated.
	UpdatedTimestamp pulumi.StringOutput `pulumi:"updatedTimestamp"`
	// Gets or sets the duration for which the VMs are up in the on-premises
	// environment.
	VmUptime VmUptimeResponsePtrOutput `pulumi:"vmUptime"`
}

// NewAssessmentsOperation registers a new resource with the given unique name, arguments, and options.
func NewAssessmentsOperation(ctx *pulumi.Context,
	name string, args *AssessmentsOperationArgs, opts ...pulumi.ResourceOption) (*AssessmentsOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate:AssessmentsOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20191001:AssessmentsOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AssessmentsOperation
	err := ctx.RegisterResource("azure-native:migrate/v20230315:AssessmentsOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentsOperation gets an existing AssessmentsOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentsOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentsOperationState, opts ...pulumi.ResourceOption) (*AssessmentsOperation, error) {
	var resource AssessmentsOperation
	err := ctx.ReadResource("azure-native:migrate/v20230315:AssessmentsOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentsOperation resources.
type assessmentsOperationState struct {
}

type AssessmentsOperationState struct {
}

func (AssessmentsOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentsOperationState)(nil)).Elem()
}

type assessmentsOperationArgs struct {
	// Machine Assessment ARM name
	AssessmentName *string `pulumi:"assessmentName"`
	// Gets or sets the azure storage type. Premium, Standard etc.
	AzureDiskTypes []string `pulumi:"azureDiskTypes"`
	// Gets or sets the user configurable setting to display the azure hybrid use
	// benefit.
	AzureHybridUseBenefit *string `pulumi:"azureHybridUseBenefit"`
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation *string `pulumi:"azureLocation"`
	// Azure Offer Code.
	AzureOfferCode *string `pulumi:"azureOfferCode"`
	// Gets or sets Azure Pricing Tier - Free, Basic, etc.
	AzurePricingTier *string `pulumi:"azurePricingTier"`
	// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
	AzureStorageRedundancy *string `pulumi:"azureStorageRedundancy"`
	// Gets or sets the Azure VM families.
	AzureVmFamilies []string `pulumi:"azureVmFamilies"`
	// Currency in which prices should be reported.
	Currency *string `pulumi:"currency"`
	// Custom discount percentage.
	DiscountPercentage *float64 `pulumi:"discountPercentage"`
	// Gets or sets enterprise agreement subscription id.
	EaSubscriptionId *string `pulumi:"eaSubscriptionId"`
	// Group ARM name
	GroupName string `pulumi:"groupName"`
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile *string `pulumi:"percentile"`
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime *string `pulumi:"perfDataEndTime"`
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime *string `pulumi:"perfDataStartTime"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The status of the last operation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
	ReservedInstance *string `pulumi:"reservedInstance"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor *float64 `pulumi:"scalingFactor"`
	// Assessment sizing criterion.
	SizingCriterion *string `pulumi:"sizingCriterion"`
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange *string `pulumi:"timeRange"`
	// Gets or sets the duration for which the VMs are up in the on-premises
	// environment.
	VmUptime *VmUptime `pulumi:"vmUptime"`
}

// The set of arguments for constructing a AssessmentsOperation resource.
type AssessmentsOperationArgs struct {
	// Machine Assessment ARM name
	AssessmentName pulumi.StringPtrInput
	// Gets or sets the azure storage type. Premium, Standard etc.
	AzureDiskTypes pulumi.StringArrayInput
	// Gets or sets the user configurable setting to display the azure hybrid use
	// benefit.
	AzureHybridUseBenefit pulumi.StringPtrInput
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation pulumi.StringPtrInput
	// Azure Offer Code.
	AzureOfferCode pulumi.StringPtrInput
	// Gets or sets Azure Pricing Tier - Free, Basic, etc.
	AzurePricingTier pulumi.StringPtrInput
	// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
	AzureStorageRedundancy pulumi.StringPtrInput
	// Gets or sets the Azure VM families.
	AzureVmFamilies pulumi.StringArrayInput
	// Currency in which prices should be reported.
	Currency pulumi.StringPtrInput
	// Custom discount percentage.
	DiscountPercentage pulumi.Float64PtrInput
	// Gets or sets enterprise agreement subscription id.
	EaSubscriptionId pulumi.StringPtrInput
	// Group ARM name
	GroupName pulumi.StringInput
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile pulumi.StringPtrInput
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime pulumi.StringPtrInput
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime pulumi.StringPtrInput
	// Assessment Project Name
	ProjectName pulumi.StringInput
	// The status of the last operation.
	ProvisioningState pulumi.StringPtrInput
	// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
	ReservedInstance pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor pulumi.Float64PtrInput
	// Assessment sizing criterion.
	SizingCriterion pulumi.StringPtrInput
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange pulumi.StringPtrInput
	// Gets or sets the duration for which the VMs are up in the on-premises
	// environment.
	VmUptime VmUptimePtrInput
}

func (AssessmentsOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentsOperationArgs)(nil)).Elem()
}

type AssessmentsOperationInput interface {
	pulumi.Input

	ToAssessmentsOperationOutput() AssessmentsOperationOutput
	ToAssessmentsOperationOutputWithContext(ctx context.Context) AssessmentsOperationOutput
}

func (*AssessmentsOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentsOperation)(nil)).Elem()
}

func (i *AssessmentsOperation) ToAssessmentsOperationOutput() AssessmentsOperationOutput {
	return i.ToAssessmentsOperationOutputWithContext(context.Background())
}

func (i *AssessmentsOperation) ToAssessmentsOperationOutputWithContext(ctx context.Context) AssessmentsOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentsOperationOutput)
}

type AssessmentsOperationOutput struct{ *pulumi.OutputState }

func (AssessmentsOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentsOperation)(nil)).Elem()
}

func (o AssessmentsOperationOutput) ToAssessmentsOperationOutput() AssessmentsOperationOutput {
	return o
}

func (o AssessmentsOperationOutput) ToAssessmentsOperationOutputWithContext(ctx context.Context) AssessmentsOperationOutput {
	return o
}

// Gets or sets the assessment error summary.
//
//	This is the number of
//
// machines affected by each type of error in this assessment.
func (o AssessmentsOperationOutput) AssessmentErrorSummary() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.IntMapOutput { return v.AssessmentErrorSummary }).(pulumi.IntMapOutput)
}

// Assessment type of the assessment.
func (o AssessmentsOperationOutput) AssessmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.AssessmentType }).(pulumi.StringOutput)
}

// Gets or sets the azure storage type. Premium, Standard etc.
func (o AssessmentsOperationOutput) AzureDiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringArrayOutput { return v.AzureDiskTypes }).(pulumi.StringArrayOutput)
}

// Gets or sets the user configurable setting to display the azure hybrid use
// benefit.
func (o AssessmentsOperationOutput) AzureHybridUseBenefit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.AzureHybridUseBenefit }).(pulumi.StringPtrOutput)
}

// Azure Location or Azure region where to which the machines will be migrated.
func (o AssessmentsOperationOutput) AzureLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.AzureLocation }).(pulumi.StringPtrOutput)
}

// Azure Offer Code.
func (o AssessmentsOperationOutput) AzureOfferCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.AzureOfferCode }).(pulumi.StringPtrOutput)
}

// Gets or sets Azure Pricing Tier - Free, Basic, etc.
func (o AssessmentsOperationOutput) AzurePricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.AzurePricingTier }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
func (o AssessmentsOperationOutput) AzureStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.AzureStorageRedundancy }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure VM families.
func (o AssessmentsOperationOutput) AzureVmFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringArrayOutput { return v.AzureVmFamilies }).(pulumi.StringArrayOutput)
}

// Confidence Rating in Percentage.
func (o AssessmentsOperationOutput) ConfidenceRatingInPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.ConfidenceRatingInPercentage }).(pulumi.Float64Output)
}

// Gets the collection of cost components.
func (o AssessmentsOperationOutput) CostComponents() CostComponentResponseArrayOutput {
	return o.ApplyT(func(v *AssessmentsOperation) CostComponentResponseArrayOutput { return v.CostComponents }).(CostComponentResponseArrayOutput)
}

// Date and Time when assessment was created.
func (o AssessmentsOperationOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Currency in which prices should be reported.
func (o AssessmentsOperationOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.Currency }).(pulumi.StringPtrOutput)
}

// Custom discount percentage.
func (o AssessmentsOperationOutput) DiscountPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64PtrOutput { return v.DiscountPercentage }).(pulumi.Float64PtrOutput)
}

// Gets the distribution by os name.
func (o AssessmentsOperationOutput) DistributionByOsName() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.IntMapOutput { return v.DistributionByOsName }).(pulumi.IntMapOutput)
}

// Gets the distribution distribution of sqlInstances by service pack insight.
func (o AssessmentsOperationOutput) DistributionByServicePackInsight() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.IntMapOutput { return v.DistributionByServicePackInsight }).(pulumi.IntMapOutput)
}

// Gets the distribution of sqlInstances by support status.
func (o AssessmentsOperationOutput) DistributionBySupportStatus() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.IntMapOutput { return v.DistributionBySupportStatus }).(pulumi.IntMapOutput)
}

// Gets or sets enterprise agreement subscription id.
func (o AssessmentsOperationOutput) EaSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.EaSubscriptionId }).(pulumi.StringPtrOutput)
}

// Gets the group type for the assessment.
func (o AssessmentsOperationOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.GroupType }).(pulumi.StringOutput)
}

// Gets or sets the aggregate Bandwidth Cost for all machines in the assessment.
func (o AssessmentsOperationOutput) MonthlyBandwidthCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.MonthlyBandwidthCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate Compute Cost for all machines in the assessment.
func (o AssessmentsOperationOutput) MonthlyComputeCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.MonthlyComputeCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate premium storage cost for all machines in the
// assessment.
func (o AssessmentsOperationOutput) MonthlyPremiumStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.MonthlyPremiumStorageCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate standard SSD storage cost for all the machines in
// the assessment.
func (o AssessmentsOperationOutput) MonthlyStandardSsdStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.MonthlyStandardSsdStorageCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate Storage Cost for all machines in the assessment.
func (o AssessmentsOperationOutput) MonthlyStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.MonthlyStorageCost }).(pulumi.Float64Output)
}

// Gets or sets the aggregate ultra storage cost for all machines in the
// assessment.
func (o AssessmentsOperationOutput) MonthlyUltraStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64Output { return v.MonthlyUltraStorageCost }).(pulumi.Float64Output)
}

// The name of the resource
func (o AssessmentsOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the Number of machines part of the assessment.
func (o AssessmentsOperationOutput) NumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.IntOutput { return v.NumberOfMachines }).(pulumi.IntOutput)
}

// Percentile of the utilization data values to be considered while assessing
// machines.
func (o AssessmentsOperationOutput) Percentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.Percentile }).(pulumi.StringPtrOutput)
}

// Gets or sets the end time to consider performance data for assessment.
func (o AssessmentsOperationOutput) PerfDataEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.PerfDataEndTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the start time to consider performance data for assessment.
func (o AssessmentsOperationOutput) PerfDataStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.PerfDataStartTime }).(pulumi.StringPtrOutput)
}

// Last time when rates were queried.
func (o AssessmentsOperationOutput) PricesTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.PricesTimestamp }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o AssessmentsOperationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure Reserved Instance - 1-Year, 3-Year.
func (o AssessmentsOperationOutput) ReservedInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.ReservedInstance }).(pulumi.StringPtrOutput)
}

// Percentage of buffer that user wants on performance metrics when recommending
// Azure sizes.
func (o AssessmentsOperationOutput) ScalingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.Float64PtrOutput { return v.ScalingFactor }).(pulumi.Float64PtrOutput)
}

// Schema version.
func (o AssessmentsOperationOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.SchemaVersion }).(pulumi.StringOutput)
}

// Assessment sizing criterion.
func (o AssessmentsOperationOutput) SizingCriterion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.SizingCriterion }).(pulumi.StringPtrOutput)
}

// User configurable setting to display the Stage of Assessment.
func (o AssessmentsOperationOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.Stage }).(pulumi.StringOutput)
}

// Whether assessment is in valid state and all machines have been assessed.
func (o AssessmentsOperationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Gets or sets the Cloud suitability summary for all the machines in the
// assessment.
func (o AssessmentsOperationOutput) SuitabilitySummary() pulumi.IntMapOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.IntMapOutput { return v.SuitabilitySummary }).(pulumi.IntMapOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AssessmentsOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AssessmentsOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Time Range for which the historic utilization data should be considered for
// assessment.
func (o AssessmentsOperationOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringPtrOutput { return v.TimeRange }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AssessmentsOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Date and Time when assessment was last updated.
func (o AssessmentsOperationOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentsOperation) pulumi.StringOutput { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

// Gets or sets the duration for which the VMs are up in the on-premises
// environment.
func (o AssessmentsOperationOutput) VmUptime() VmUptimeResponsePtrOutput {
	return o.ApplyT(func(v *AssessmentsOperation) VmUptimeResponsePtrOutput { return v.VmUptime }).(VmUptimeResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentsOperationOutput{})
}
