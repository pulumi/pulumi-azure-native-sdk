// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Assessment sizing criterion.
type AssessmentSizingCriterion string

const (
	// Performance Data based Sizing.
	AssessmentSizingCriterionPerformanceBased = AssessmentSizingCriterion("PerformanceBased")
	// As On Premises or Static Data based Sizing.
	AssessmentSizingCriterionAsOnPremises = AssessmentSizingCriterion("AsOnPremises")
)

func (AssessmentSizingCriterion) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentSizingCriterion)(nil)).Elem()
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionOutput() AssessmentSizingCriterionOutput {
	return pulumi.ToOutput(e).(AssessmentSizingCriterionOutput)
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionOutputWithContext(ctx context.Context) AssessmentSizingCriterionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentSizingCriterionOutput)
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return e.ToAssessmentSizingCriterionPtrOutputWithContext(context.Background())
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return AssessmentSizingCriterion(e).ToAssessmentSizingCriterionOutputWithContext(ctx).ToAssessmentSizingCriterionPtrOutputWithContext(ctx)
}

func (e AssessmentSizingCriterion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentSizingCriterion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentSizingCriterion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentSizingCriterion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentSizingCriterionOutput struct{ *pulumi.OutputState }

func (AssessmentSizingCriterionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentSizingCriterion)(nil)).Elem()
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionOutput() AssessmentSizingCriterionOutput {
	return o
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionOutputWithContext(ctx context.Context) AssessmentSizingCriterionOutput {
	return o
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return o.ToAssessmentSizingCriterionPtrOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentSizingCriterion) *AssessmentSizingCriterion {
		return &v
	}).(AssessmentSizingCriterionPtrOutput)
}

func (o AssessmentSizingCriterionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentSizingCriterion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentSizingCriterionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentSizingCriterion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentSizingCriterionPtrOutput struct{ *pulumi.OutputState }

func (AssessmentSizingCriterionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentSizingCriterion)(nil)).Elem()
}

func (o AssessmentSizingCriterionPtrOutput) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return o
}

func (o AssessmentSizingCriterionPtrOutput) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return o
}

func (o AssessmentSizingCriterionPtrOutput) Elem() AssessmentSizingCriterionOutput {
	return o.ApplyT(func(v *AssessmentSizingCriterion) AssessmentSizingCriterion {
		if v != nil {
			return *v
		}
		var ret AssessmentSizingCriterion
		return ret
	}).(AssessmentSizingCriterionOutput)
}

func (o AssessmentSizingCriterionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentSizingCriterion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentSizingCriterionInput is an input type that accepts values of the AssessmentSizingCriterion enum
// A concrete instance of `AssessmentSizingCriterionInput` can be one of the following:
//
//	AssessmentSizingCriterionPerformanceBased
//	AssessmentSizingCriterionAsOnPremises
type AssessmentSizingCriterionInput interface {
	pulumi.Input

	ToAssessmentSizingCriterionOutput() AssessmentSizingCriterionOutput
	ToAssessmentSizingCriterionOutputWithContext(context.Context) AssessmentSizingCriterionOutput
}

var assessmentSizingCriterionPtrType = reflect.TypeOf((**AssessmentSizingCriterion)(nil)).Elem()

type AssessmentSizingCriterionPtrInput interface {
	pulumi.Input

	ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput
	ToAssessmentSizingCriterionPtrOutputWithContext(context.Context) AssessmentSizingCriterionPtrOutput
}

type assessmentSizingCriterionPtr string

func AssessmentSizingCriterionPtr(v string) AssessmentSizingCriterionPtrInput {
	return (*assessmentSizingCriterionPtr)(&v)
}

func (*assessmentSizingCriterionPtr) ElementType() reflect.Type {
	return assessmentSizingCriterionPtrType
}

func (in *assessmentSizingCriterionPtr) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return pulumi.ToOutput(in).(AssessmentSizingCriterionPtrOutput)
}

func (in *assessmentSizingCriterionPtr) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentSizingCriterionPtrOutput)
}

// Assessment type of the assessment.
type AssessmentType string

const (
	AssessmentTypeUnknown           = AssessmentType("Unknown")
	AssessmentTypeMachineAssessment = AssessmentType("MachineAssessment")
	AssessmentTypeAvsAssessment     = AssessmentType("AvsAssessment")
	AssessmentTypeSqlAssessment     = AssessmentType("SqlAssessment")
	AssessmentTypeWebAppAssessment  = AssessmentType("WebAppAssessment")
)

func (AssessmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentType)(nil)).Elem()
}

func (e AssessmentType) ToAssessmentTypeOutput() AssessmentTypeOutput {
	return pulumi.ToOutput(e).(AssessmentTypeOutput)
}

func (e AssessmentType) ToAssessmentTypeOutputWithContext(ctx context.Context) AssessmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentTypeOutput)
}

func (e AssessmentType) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return e.ToAssessmentTypePtrOutputWithContext(context.Background())
}

func (e AssessmentType) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return AssessmentType(e).ToAssessmentTypeOutputWithContext(ctx).ToAssessmentTypePtrOutputWithContext(ctx)
}

func (e AssessmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentTypeOutput struct{ *pulumi.OutputState }

func (AssessmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentType)(nil)).Elem()
}

func (o AssessmentTypeOutput) ToAssessmentTypeOutput() AssessmentTypeOutput {
	return o
}

func (o AssessmentTypeOutput) ToAssessmentTypeOutputWithContext(ctx context.Context) AssessmentTypeOutput {
	return o
}

func (o AssessmentTypeOutput) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return o.ToAssessmentTypePtrOutputWithContext(context.Background())
}

func (o AssessmentTypeOutput) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentType) *AssessmentType {
		return &v
	}).(AssessmentTypePtrOutput)
}

func (o AssessmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentTypePtrOutput struct{ *pulumi.OutputState }

func (AssessmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentType)(nil)).Elem()
}

func (o AssessmentTypePtrOutput) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return o
}

func (o AssessmentTypePtrOutput) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return o
}

func (o AssessmentTypePtrOutput) Elem() AssessmentTypeOutput {
	return o.ApplyT(func(v *AssessmentType) AssessmentType {
		if v != nil {
			return *v
		}
		var ret AssessmentType
		return ret
	}).(AssessmentTypeOutput)
}

func (o AssessmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentTypeInput is an input type that accepts values of the AssessmentType enum
// A concrete instance of `AssessmentTypeInput` can be one of the following:
//
//	AssessmentTypeUnknown
//	AssessmentTypeMachineAssessment
//	AssessmentTypeAvsAssessment
//	AssessmentTypeSqlAssessment
//	AssessmentTypeWebAppAssessment
type AssessmentTypeInput interface {
	pulumi.Input

	ToAssessmentTypeOutput() AssessmentTypeOutput
	ToAssessmentTypeOutputWithContext(context.Context) AssessmentTypeOutput
}

var assessmentTypePtrType = reflect.TypeOf((**AssessmentType)(nil)).Elem()

type AssessmentTypePtrInput interface {
	pulumi.Input

	ToAssessmentTypePtrOutput() AssessmentTypePtrOutput
	ToAssessmentTypePtrOutputWithContext(context.Context) AssessmentTypePtrOutput
}

type assessmentTypePtr string

func AssessmentTypePtr(v string) AssessmentTypePtrInput {
	return (*assessmentTypePtr)(&v)
}

func (*assessmentTypePtr) ElementType() reflect.Type {
	return assessmentTypePtrType
}

func (in *assessmentTypePtr) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return pulumi.ToOutput(in).(AssessmentTypePtrOutput)
}

func (in *assessmentTypePtr) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentTypePtrOutput)
}

// Gets or sets user preference indicating intent of async commit mode.
type AsyncCommitModeIntent string

const (
	AsyncCommitModeIntentNone             = AsyncCommitModeIntent("None")
	AsyncCommitModeIntentHighAvailability = AsyncCommitModeIntent("HighAvailability")
	AsyncCommitModeIntentDisasterRecovery = AsyncCommitModeIntent("DisasterRecovery")
)

func (AsyncCommitModeIntent) ElementType() reflect.Type {
	return reflect.TypeOf((*AsyncCommitModeIntent)(nil)).Elem()
}

func (e AsyncCommitModeIntent) ToAsyncCommitModeIntentOutput() AsyncCommitModeIntentOutput {
	return pulumi.ToOutput(e).(AsyncCommitModeIntentOutput)
}

func (e AsyncCommitModeIntent) ToAsyncCommitModeIntentOutputWithContext(ctx context.Context) AsyncCommitModeIntentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AsyncCommitModeIntentOutput)
}

func (e AsyncCommitModeIntent) ToAsyncCommitModeIntentPtrOutput() AsyncCommitModeIntentPtrOutput {
	return e.ToAsyncCommitModeIntentPtrOutputWithContext(context.Background())
}

func (e AsyncCommitModeIntent) ToAsyncCommitModeIntentPtrOutputWithContext(ctx context.Context) AsyncCommitModeIntentPtrOutput {
	return AsyncCommitModeIntent(e).ToAsyncCommitModeIntentOutputWithContext(ctx).ToAsyncCommitModeIntentPtrOutputWithContext(ctx)
}

func (e AsyncCommitModeIntent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AsyncCommitModeIntent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AsyncCommitModeIntent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AsyncCommitModeIntent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AsyncCommitModeIntentOutput struct{ *pulumi.OutputState }

func (AsyncCommitModeIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsyncCommitModeIntent)(nil)).Elem()
}

func (o AsyncCommitModeIntentOutput) ToAsyncCommitModeIntentOutput() AsyncCommitModeIntentOutput {
	return o
}

func (o AsyncCommitModeIntentOutput) ToAsyncCommitModeIntentOutputWithContext(ctx context.Context) AsyncCommitModeIntentOutput {
	return o
}

func (o AsyncCommitModeIntentOutput) ToAsyncCommitModeIntentPtrOutput() AsyncCommitModeIntentPtrOutput {
	return o.ToAsyncCommitModeIntentPtrOutputWithContext(context.Background())
}

func (o AsyncCommitModeIntentOutput) ToAsyncCommitModeIntentPtrOutputWithContext(ctx context.Context) AsyncCommitModeIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsyncCommitModeIntent) *AsyncCommitModeIntent {
		return &v
	}).(AsyncCommitModeIntentPtrOutput)
}

func (o AsyncCommitModeIntentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AsyncCommitModeIntentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AsyncCommitModeIntent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AsyncCommitModeIntentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AsyncCommitModeIntentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AsyncCommitModeIntent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AsyncCommitModeIntentPtrOutput struct{ *pulumi.OutputState }

func (AsyncCommitModeIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsyncCommitModeIntent)(nil)).Elem()
}

func (o AsyncCommitModeIntentPtrOutput) ToAsyncCommitModeIntentPtrOutput() AsyncCommitModeIntentPtrOutput {
	return o
}

func (o AsyncCommitModeIntentPtrOutput) ToAsyncCommitModeIntentPtrOutputWithContext(ctx context.Context) AsyncCommitModeIntentPtrOutput {
	return o
}

func (o AsyncCommitModeIntentPtrOutput) Elem() AsyncCommitModeIntentOutput {
	return o.ApplyT(func(v *AsyncCommitModeIntent) AsyncCommitModeIntent {
		if v != nil {
			return *v
		}
		var ret AsyncCommitModeIntent
		return ret
	}).(AsyncCommitModeIntentOutput)
}

func (o AsyncCommitModeIntentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AsyncCommitModeIntentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AsyncCommitModeIntent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AsyncCommitModeIntentInput is an input type that accepts values of the AsyncCommitModeIntent enum
// A concrete instance of `AsyncCommitModeIntentInput` can be one of the following:
//
//	AsyncCommitModeIntentNone
//	AsyncCommitModeIntentHighAvailability
//	AsyncCommitModeIntentDisasterRecovery
type AsyncCommitModeIntentInput interface {
	pulumi.Input

	ToAsyncCommitModeIntentOutput() AsyncCommitModeIntentOutput
	ToAsyncCommitModeIntentOutputWithContext(context.Context) AsyncCommitModeIntentOutput
}

var asyncCommitModeIntentPtrType = reflect.TypeOf((**AsyncCommitModeIntent)(nil)).Elem()

type AsyncCommitModeIntentPtrInput interface {
	pulumi.Input

	ToAsyncCommitModeIntentPtrOutput() AsyncCommitModeIntentPtrOutput
	ToAsyncCommitModeIntentPtrOutputWithContext(context.Context) AsyncCommitModeIntentPtrOutput
}

type asyncCommitModeIntentPtr string

func AsyncCommitModeIntentPtr(v string) AsyncCommitModeIntentPtrInput {
	return (*asyncCommitModeIntentPtr)(&v)
}

func (*asyncCommitModeIntentPtr) ElementType() reflect.Type {
	return asyncCommitModeIntentPtrType
}

func (in *asyncCommitModeIntentPtr) ToAsyncCommitModeIntentPtrOutput() AsyncCommitModeIntentPtrOutput {
	return pulumi.ToOutput(in).(AsyncCommitModeIntentPtrOutput)
}

func (in *asyncCommitModeIntentPtr) ToAsyncCommitModeIntentPtrOutputWithContext(ctx context.Context) AsyncCommitModeIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AsyncCommitModeIntentPtrOutput)
}

// AVS node type.
type AzureAvsNodeType string

const (
	AzureAvsNodeTypeUnknown = AzureAvsNodeType("Unknown")
	AzureAvsNodeTypeAV36    = AzureAvsNodeType("AV36")
)

func (AzureAvsNodeType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAvsNodeType)(nil)).Elem()
}

func (e AzureAvsNodeType) ToAzureAvsNodeTypeOutput() AzureAvsNodeTypeOutput {
	return pulumi.ToOutput(e).(AzureAvsNodeTypeOutput)
}

func (e AzureAvsNodeType) ToAzureAvsNodeTypeOutputWithContext(ctx context.Context) AzureAvsNodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureAvsNodeTypeOutput)
}

func (e AzureAvsNodeType) ToAzureAvsNodeTypePtrOutput() AzureAvsNodeTypePtrOutput {
	return e.ToAzureAvsNodeTypePtrOutputWithContext(context.Background())
}

func (e AzureAvsNodeType) ToAzureAvsNodeTypePtrOutputWithContext(ctx context.Context) AzureAvsNodeTypePtrOutput {
	return AzureAvsNodeType(e).ToAzureAvsNodeTypeOutputWithContext(ctx).ToAzureAvsNodeTypePtrOutputWithContext(ctx)
}

func (e AzureAvsNodeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureAvsNodeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureAvsNodeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureAvsNodeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureAvsNodeTypeOutput struct{ *pulumi.OutputState }

func (AzureAvsNodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAvsNodeType)(nil)).Elem()
}

func (o AzureAvsNodeTypeOutput) ToAzureAvsNodeTypeOutput() AzureAvsNodeTypeOutput {
	return o
}

func (o AzureAvsNodeTypeOutput) ToAzureAvsNodeTypeOutputWithContext(ctx context.Context) AzureAvsNodeTypeOutput {
	return o
}

func (o AzureAvsNodeTypeOutput) ToAzureAvsNodeTypePtrOutput() AzureAvsNodeTypePtrOutput {
	return o.ToAzureAvsNodeTypePtrOutputWithContext(context.Background())
}

func (o AzureAvsNodeTypeOutput) ToAzureAvsNodeTypePtrOutputWithContext(ctx context.Context) AzureAvsNodeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureAvsNodeType) *AzureAvsNodeType {
		return &v
	}).(AzureAvsNodeTypePtrOutput)
}

func (o AzureAvsNodeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureAvsNodeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureAvsNodeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureAvsNodeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureAvsNodeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureAvsNodeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureAvsNodeTypePtrOutput struct{ *pulumi.OutputState }

func (AzureAvsNodeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureAvsNodeType)(nil)).Elem()
}

func (o AzureAvsNodeTypePtrOutput) ToAzureAvsNodeTypePtrOutput() AzureAvsNodeTypePtrOutput {
	return o
}

func (o AzureAvsNodeTypePtrOutput) ToAzureAvsNodeTypePtrOutputWithContext(ctx context.Context) AzureAvsNodeTypePtrOutput {
	return o
}

func (o AzureAvsNodeTypePtrOutput) Elem() AzureAvsNodeTypeOutput {
	return o.ApplyT(func(v *AzureAvsNodeType) AzureAvsNodeType {
		if v != nil {
			return *v
		}
		var ret AzureAvsNodeType
		return ret
	}).(AzureAvsNodeTypeOutput)
}

func (o AzureAvsNodeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureAvsNodeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureAvsNodeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureAvsNodeTypeInput is an input type that accepts values of the AzureAvsNodeType enum
// A concrete instance of `AzureAvsNodeTypeInput` can be one of the following:
//
//	AzureAvsNodeTypeUnknown
//	AzureAvsNodeTypeAV36
type AzureAvsNodeTypeInput interface {
	pulumi.Input

	ToAzureAvsNodeTypeOutput() AzureAvsNodeTypeOutput
	ToAzureAvsNodeTypeOutputWithContext(context.Context) AzureAvsNodeTypeOutput
}

var azureAvsNodeTypePtrType = reflect.TypeOf((**AzureAvsNodeType)(nil)).Elem()

type AzureAvsNodeTypePtrInput interface {
	pulumi.Input

	ToAzureAvsNodeTypePtrOutput() AzureAvsNodeTypePtrOutput
	ToAzureAvsNodeTypePtrOutputWithContext(context.Context) AzureAvsNodeTypePtrOutput
}

type azureAvsNodeTypePtr string

func AzureAvsNodeTypePtr(v string) AzureAvsNodeTypePtrInput {
	return (*azureAvsNodeTypePtr)(&v)
}

func (*azureAvsNodeTypePtr) ElementType() reflect.Type {
	return azureAvsNodeTypePtrType
}

func (in *azureAvsNodeTypePtr) ToAzureAvsNodeTypePtrOutput() AzureAvsNodeTypePtrOutput {
	return pulumi.ToOutput(in).(AzureAvsNodeTypePtrOutput)
}

func (in *azureAvsNodeTypePtr) ToAzureAvsNodeTypePtrOutputWithContext(ctx context.Context) AzureAvsNodeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureAvsNodeTypePtrOutput)
}

// Currency in which prices should be reported.
type AzureCurrency string

const (
	AzureCurrencyUnknown = AzureCurrency("Unknown")
	AzureCurrencyUSD     = AzureCurrency("USD")
	AzureCurrencyDKK     = AzureCurrency("DKK")
	AzureCurrencyCAD     = AzureCurrency("CAD")
	AzureCurrencyIDR     = AzureCurrency("IDR")
	AzureCurrencyJPY     = AzureCurrency("JPY")
	AzureCurrencyKRW     = AzureCurrency("KRW")
	AzureCurrencyNZD     = AzureCurrency("NZD")
	AzureCurrencyNOK     = AzureCurrency("NOK")
	AzureCurrencyRUB     = AzureCurrency("RUB")
	AzureCurrencySAR     = AzureCurrency("SAR")
	AzureCurrencyZAR     = AzureCurrency("ZAR")
	AzureCurrencySEK     = AzureCurrency("SEK")
	AzureCurrencyTRY     = AzureCurrency("TRY")
	AzureCurrencyGBP     = AzureCurrency("GBP")
	AzureCurrencyMXN     = AzureCurrency("MXN")
	AzureCurrencyMYR     = AzureCurrency("MYR")
	AzureCurrencyINR     = AzureCurrency("INR")
	AzureCurrencyHKD     = AzureCurrency("HKD")
	AzureCurrencyBRL     = AzureCurrency("BRL")
	AzureCurrencyTWD     = AzureCurrency("TWD")
	AzureCurrencyEUR     = AzureCurrency("EUR")
	AzureCurrencyCHF     = AzureCurrency("CHF")
	AzureCurrencyARS     = AzureCurrency("ARS")
	AzureCurrencyAUD     = AzureCurrency("AUD")
	AzureCurrencyCNY     = AzureCurrency("CNY")
)

func (AzureCurrency) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureCurrency)(nil)).Elem()
}

func (e AzureCurrency) ToAzureCurrencyOutput() AzureCurrencyOutput {
	return pulumi.ToOutput(e).(AzureCurrencyOutput)
}

func (e AzureCurrency) ToAzureCurrencyOutputWithContext(ctx context.Context) AzureCurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureCurrencyOutput)
}

func (e AzureCurrency) ToAzureCurrencyPtrOutput() AzureCurrencyPtrOutput {
	return e.ToAzureCurrencyPtrOutputWithContext(context.Background())
}

func (e AzureCurrency) ToAzureCurrencyPtrOutputWithContext(ctx context.Context) AzureCurrencyPtrOutput {
	return AzureCurrency(e).ToAzureCurrencyOutputWithContext(ctx).ToAzureCurrencyPtrOutputWithContext(ctx)
}

func (e AzureCurrency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureCurrency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureCurrency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureCurrency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureCurrencyOutput struct{ *pulumi.OutputState }

func (AzureCurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureCurrency)(nil)).Elem()
}

func (o AzureCurrencyOutput) ToAzureCurrencyOutput() AzureCurrencyOutput {
	return o
}

func (o AzureCurrencyOutput) ToAzureCurrencyOutputWithContext(ctx context.Context) AzureCurrencyOutput {
	return o
}

func (o AzureCurrencyOutput) ToAzureCurrencyPtrOutput() AzureCurrencyPtrOutput {
	return o.ToAzureCurrencyPtrOutputWithContext(context.Background())
}

func (o AzureCurrencyOutput) ToAzureCurrencyPtrOutputWithContext(ctx context.Context) AzureCurrencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureCurrency) *AzureCurrency {
		return &v
	}).(AzureCurrencyPtrOutput)
}

func (o AzureCurrencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureCurrencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureCurrency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureCurrencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureCurrencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureCurrency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureCurrencyPtrOutput struct{ *pulumi.OutputState }

func (AzureCurrencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureCurrency)(nil)).Elem()
}

func (o AzureCurrencyPtrOutput) ToAzureCurrencyPtrOutput() AzureCurrencyPtrOutput {
	return o
}

func (o AzureCurrencyPtrOutput) ToAzureCurrencyPtrOutputWithContext(ctx context.Context) AzureCurrencyPtrOutput {
	return o
}

func (o AzureCurrencyPtrOutput) Elem() AzureCurrencyOutput {
	return o.ApplyT(func(v *AzureCurrency) AzureCurrency {
		if v != nil {
			return *v
		}
		var ret AzureCurrency
		return ret
	}).(AzureCurrencyOutput)
}

func (o AzureCurrencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureCurrencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureCurrency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureCurrencyInput is an input type that accepts values of the AzureCurrency enum
// A concrete instance of `AzureCurrencyInput` can be one of the following:
//
//	AzureCurrencyUnknown
//	AzureCurrencyUSD
//	AzureCurrencyDKK
//	AzureCurrencyCAD
//	AzureCurrencyIDR
//	AzureCurrencyJPY
//	AzureCurrencyKRW
//	AzureCurrencyNZD
//	AzureCurrencyNOK
//	AzureCurrencyRUB
//	AzureCurrencySAR
//	AzureCurrencyZAR
//	AzureCurrencySEK
//	AzureCurrencyTRY
//	AzureCurrencyGBP
//	AzureCurrencyMXN
//	AzureCurrencyMYR
//	AzureCurrencyINR
//	AzureCurrencyHKD
//	AzureCurrencyBRL
//	AzureCurrencyTWD
//	AzureCurrencyEUR
//	AzureCurrencyCHF
//	AzureCurrencyARS
//	AzureCurrencyAUD
//	AzureCurrencyCNY
type AzureCurrencyInput interface {
	pulumi.Input

	ToAzureCurrencyOutput() AzureCurrencyOutput
	ToAzureCurrencyOutputWithContext(context.Context) AzureCurrencyOutput
}

var azureCurrencyPtrType = reflect.TypeOf((**AzureCurrency)(nil)).Elem()

type AzureCurrencyPtrInput interface {
	pulumi.Input

	ToAzureCurrencyPtrOutput() AzureCurrencyPtrOutput
	ToAzureCurrencyPtrOutputWithContext(context.Context) AzureCurrencyPtrOutput
}

type azureCurrencyPtr string

func AzureCurrencyPtr(v string) AzureCurrencyPtrInput {
	return (*azureCurrencyPtr)(&v)
}

func (*azureCurrencyPtr) ElementType() reflect.Type {
	return azureCurrencyPtrType
}

func (in *azureCurrencyPtr) ToAzureCurrencyPtrOutput() AzureCurrencyPtrOutput {
	return pulumi.ToOutput(in).(AzureCurrencyPtrOutput)
}

func (in *azureCurrencyPtr) ToAzureCurrencyPtrOutputWithContext(ctx context.Context) AzureCurrencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureCurrencyPtrOutput)
}

type AzureDiskType string

const (
	AzureDiskTypeUnknown           = AzureDiskType("Unknown")
	AzureDiskTypeStandard          = AzureDiskType("Standard")
	AzureDiskTypeStandardSSD       = AzureDiskType("StandardSSD")
	AzureDiskTypePremium           = AzureDiskType("Premium")
	AzureDiskTypeStandardOrPremium = AzureDiskType("StandardOrPremium")
	AzureDiskTypeUltra             = AzureDiskType("Ultra")
	AzureDiskTypePremiumV2         = AzureDiskType("PremiumV2")
)

func (AzureDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDiskType)(nil)).Elem()
}

func (e AzureDiskType) ToAzureDiskTypeOutput() AzureDiskTypeOutput {
	return pulumi.ToOutput(e).(AzureDiskTypeOutput)
}

func (e AzureDiskType) ToAzureDiskTypeOutputWithContext(ctx context.Context) AzureDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureDiskTypeOutput)
}

func (e AzureDiskType) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return e.ToAzureDiskTypePtrOutputWithContext(context.Background())
}

func (e AzureDiskType) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return AzureDiskType(e).ToAzureDiskTypeOutputWithContext(ctx).ToAzureDiskTypePtrOutputWithContext(ctx)
}

func (e AzureDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureDiskTypeOutput struct{ *pulumi.OutputState }

func (AzureDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDiskType)(nil)).Elem()
}

func (o AzureDiskTypeOutput) ToAzureDiskTypeOutput() AzureDiskTypeOutput {
	return o
}

func (o AzureDiskTypeOutput) ToAzureDiskTypeOutputWithContext(ctx context.Context) AzureDiskTypeOutput {
	return o
}

func (o AzureDiskTypeOutput) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return o.ToAzureDiskTypePtrOutputWithContext(context.Background())
}

func (o AzureDiskTypeOutput) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDiskType) *AzureDiskType {
		return &v
	}).(AzureDiskTypePtrOutput)
}

func (o AzureDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureDiskTypePtrOutput struct{ *pulumi.OutputState }

func (AzureDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDiskType)(nil)).Elem()
}

func (o AzureDiskTypePtrOutput) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return o
}

func (o AzureDiskTypePtrOutput) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return o
}

func (o AzureDiskTypePtrOutput) Elem() AzureDiskTypeOutput {
	return o.ApplyT(func(v *AzureDiskType) AzureDiskType {
		if v != nil {
			return *v
		}
		var ret AzureDiskType
		return ret
	}).(AzureDiskTypeOutput)
}

func (o AzureDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureDiskTypeInput is an input type that accepts values of the AzureDiskType enum
// A concrete instance of `AzureDiskTypeInput` can be one of the following:
//
//	AzureDiskTypeUnknown
//	AzureDiskTypeStandard
//	AzureDiskTypeStandardSSD
//	AzureDiskTypePremium
//	AzureDiskTypeStandardOrPremium
//	AzureDiskTypeUltra
//	AzureDiskTypePremiumV2
type AzureDiskTypeInput interface {
	pulumi.Input

	ToAzureDiskTypeOutput() AzureDiskTypeOutput
	ToAzureDiskTypeOutputWithContext(context.Context) AzureDiskTypeOutput
}

var azureDiskTypePtrType = reflect.TypeOf((**AzureDiskType)(nil)).Elem()

type AzureDiskTypePtrInput interface {
	pulumi.Input

	ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput
	ToAzureDiskTypePtrOutputWithContext(context.Context) AzureDiskTypePtrOutput
}

type azureDiskTypePtr string

func AzureDiskTypePtr(v string) AzureDiskTypePtrInput {
	return (*azureDiskTypePtr)(&v)
}

func (*azureDiskTypePtr) ElementType() reflect.Type {
	return azureDiskTypePtrType
}

func (in *azureDiskTypePtr) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return pulumi.ToOutput(in).(AzureDiskTypePtrOutput)
}

func (in *azureDiskTypePtr) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureDiskTypePtrOutput)
}

// Gets or sets the user configurable setting to display the azure hybrid use
// benefit.
type AzureHybridUseBenefit string

const (
	AzureHybridUseBenefitUnknown = AzureHybridUseBenefit("Unknown")
	AzureHybridUseBenefitYes     = AzureHybridUseBenefit("Yes")
	AzureHybridUseBenefitNo      = AzureHybridUseBenefit("No")
)

func (AzureHybridUseBenefit) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureHybridUseBenefit)(nil)).Elem()
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitOutput() AzureHybridUseBenefitOutput {
	return pulumi.ToOutput(e).(AzureHybridUseBenefitOutput)
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitOutputWithContext(ctx context.Context) AzureHybridUseBenefitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureHybridUseBenefitOutput)
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return e.ToAzureHybridUseBenefitPtrOutputWithContext(context.Background())
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return AzureHybridUseBenefit(e).ToAzureHybridUseBenefitOutputWithContext(ctx).ToAzureHybridUseBenefitPtrOutputWithContext(ctx)
}

func (e AzureHybridUseBenefit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridUseBenefit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridUseBenefit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureHybridUseBenefit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureHybridUseBenefitOutput struct{ *pulumi.OutputState }

func (AzureHybridUseBenefitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureHybridUseBenefit)(nil)).Elem()
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitOutput() AzureHybridUseBenefitOutput {
	return o
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitOutputWithContext(ctx context.Context) AzureHybridUseBenefitOutput {
	return o
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return o.ToAzureHybridUseBenefitPtrOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureHybridUseBenefit) *AzureHybridUseBenefit {
		return &v
	}).(AzureHybridUseBenefitPtrOutput)
}

func (o AzureHybridUseBenefitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureHybridUseBenefit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureHybridUseBenefitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureHybridUseBenefit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureHybridUseBenefitPtrOutput struct{ *pulumi.OutputState }

func (AzureHybridUseBenefitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureHybridUseBenefit)(nil)).Elem()
}

func (o AzureHybridUseBenefitPtrOutput) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return o
}

func (o AzureHybridUseBenefitPtrOutput) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return o
}

func (o AzureHybridUseBenefitPtrOutput) Elem() AzureHybridUseBenefitOutput {
	return o.ApplyT(func(v *AzureHybridUseBenefit) AzureHybridUseBenefit {
		if v != nil {
			return *v
		}
		var ret AzureHybridUseBenefit
		return ret
	}).(AzureHybridUseBenefitOutput)
}

func (o AzureHybridUseBenefitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureHybridUseBenefit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureHybridUseBenefitInput is an input type that accepts values of the AzureHybridUseBenefit enum
// A concrete instance of `AzureHybridUseBenefitInput` can be one of the following:
//
//	AzureHybridUseBenefitUnknown
//	AzureHybridUseBenefitYes
//	AzureHybridUseBenefitNo
type AzureHybridUseBenefitInput interface {
	pulumi.Input

	ToAzureHybridUseBenefitOutput() AzureHybridUseBenefitOutput
	ToAzureHybridUseBenefitOutputWithContext(context.Context) AzureHybridUseBenefitOutput
}

var azureHybridUseBenefitPtrType = reflect.TypeOf((**AzureHybridUseBenefit)(nil)).Elem()

type AzureHybridUseBenefitPtrInput interface {
	pulumi.Input

	ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput
	ToAzureHybridUseBenefitPtrOutputWithContext(context.Context) AzureHybridUseBenefitPtrOutput
}

type azureHybridUseBenefitPtr string

func AzureHybridUseBenefitPtr(v string) AzureHybridUseBenefitPtrInput {
	return (*azureHybridUseBenefitPtr)(&v)
}

func (*azureHybridUseBenefitPtr) ElementType() reflect.Type {
	return azureHybridUseBenefitPtrType
}

func (in *azureHybridUseBenefitPtr) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return pulumi.ToOutput(in).(AzureHybridUseBenefitPtrOutput)
}

func (in *azureHybridUseBenefitPtr) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureHybridUseBenefitPtrOutput)
}

// Gets or sets the Azure Location or Azure region where to which the machines
// will be migrated.
type AzureLocation string

const (
	AzureLocationUnknown            = AzureLocation("Unknown")
	AzureLocationEastAsia           = AzureLocation("EastAsia")
	AzureLocationSoutheastAsia      = AzureLocation("SoutheastAsia")
	AzureLocationAustraliaEast      = AzureLocation("AustraliaEast")
	AzureLocationAustraliaSoutheast = AzureLocation("AustraliaSoutheast")
	AzureLocationBrazilSouth        = AzureLocation("BrazilSouth")
	AzureLocationCanadaCentral      = AzureLocation("CanadaCentral")
	AzureLocationCanadaEast         = AzureLocation("CanadaEast")
	AzureLocationWestEurope         = AzureLocation("WestEurope")
	AzureLocationNorthEurope        = AzureLocation("NorthEurope")
	AzureLocationCentralIndia       = AzureLocation("CentralIndia")
	AzureLocationSouthIndia         = AzureLocation("SouthIndia")
	AzureLocationWestIndia          = AzureLocation("WestIndia")
	AzureLocationJapanEast          = AzureLocation("JapanEast")
	AzureLocationJapanWest          = AzureLocation("JapanWest")
	AzureLocationKoreaCentral       = AzureLocation("KoreaCentral")
	AzureLocationKoreaSouth         = AzureLocation("KoreaSouth")
	AzureLocationUkWest             = AzureLocation("UkWest")
	AzureLocationUkSouth            = AzureLocation("UkSouth")
	AzureLocationNorthCentralUs     = AzureLocation("NorthCentralUs")
	AzureLocationEastUs             = AzureLocation("EastUs")
	AzureLocationWestUs2            = AzureLocation("WestUs2")
	AzureLocationSouthCentralUs     = AzureLocation("SouthCentralUs")
	AzureLocationCentralUs          = AzureLocation("CentralUs")
	AzureLocationEastUs2            = AzureLocation("EastUs2")
	AzureLocationWestUs             = AzureLocation("WestUs")
	AzureLocationWestCentralUs      = AzureLocation("WestCentralUs")
	AzureLocationGermanyCentral     = AzureLocation("GermanyCentral")
	AzureLocationGermanyNortheast   = AzureLocation("GermanyNortheast")
	AzureLocationChinaNorth         = AzureLocation("ChinaNorth")
	AzureLocationChinaEast          = AzureLocation("ChinaEast")
	AzureLocationUSGovArizona       = AzureLocation("USGovArizona")
	AzureLocationUSGovTexas         = AzureLocation("USGovTexas")
	AzureLocationUSGovIowa          = AzureLocation("USGovIowa")
	AzureLocationUSGovVirginia      = AzureLocation("USGovVirginia")
	AzureLocationUSDoDCentral       = AzureLocation("USDoDCentral")
	AzureLocationUSDoDEast          = AzureLocation("USDoDEast")
	AzureLocationFranceCentral      = AzureLocation("FranceCentral")
	AzureLocationAustraliaCentral   = AzureLocation("AustraliaCentral")
	AzureLocationSouthAfricaNorth   = AzureLocation("SouthAfricaNorth")
	AzureLocationFranceSouth        = AzureLocation("FranceSouth")
	AzureLocationAustraliaCentral2  = AzureLocation("AustraliaCentral2")
	AzureLocationSouthAfricaWest    = AzureLocation("SouthAfricaWest")
	AzureLocationGermanyNorth       = AzureLocation("GermanyNorth")
	AzureLocationGermanyWestCentral = AzureLocation("GermanyWestCentral")
	AzureLocationNorwayEast         = AzureLocation("NorwayEast")
	AzureLocationNorwayWest         = AzureLocation("NorwayWest")
	AzureLocationChinaEast2         = AzureLocation("ChinaEast2")
	AzureLocationChinaNorth2        = AzureLocation("ChinaNorth2")
	AzureLocationSwitzerlandNorth   = AzureLocation("SwitzerlandNorth")
	AzureLocationSwitzerlandWest    = AzureLocation("SwitzerlandWest")
	AzureLocationUAENorth           = AzureLocation("UAENorth")
	AzureLocationUAECentral         = AzureLocation("UAECentral")
	AzureLocationUsNatEast          = AzureLocation("UsNatEast")
	AzureLocationUsNatWest          = AzureLocation("UsNatWest")
	AzureLocationUsSecEast          = AzureLocation("UsSecEast")
	AzureLocationUsSecCentral       = AzureLocation("UsSecCentral")
	AzureLocationUsSecWest          = AzureLocation("UsSecWest")
	AzureLocationSwedenCentral      = AzureLocation("SwedenCentral")
	AzureLocationQatarCentral       = AzureLocation("QatarCentral")
)

func (AzureLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureLocation)(nil)).Elem()
}

func (e AzureLocation) ToAzureLocationOutput() AzureLocationOutput {
	return pulumi.ToOutput(e).(AzureLocationOutput)
}

func (e AzureLocation) ToAzureLocationOutputWithContext(ctx context.Context) AzureLocationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureLocationOutput)
}

func (e AzureLocation) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return e.ToAzureLocationPtrOutputWithContext(context.Background())
}

func (e AzureLocation) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return AzureLocation(e).ToAzureLocationOutputWithContext(ctx).ToAzureLocationPtrOutputWithContext(ctx)
}

func (e AzureLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureLocationOutput struct{ *pulumi.OutputState }

func (AzureLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureLocation)(nil)).Elem()
}

func (o AzureLocationOutput) ToAzureLocationOutput() AzureLocationOutput {
	return o
}

func (o AzureLocationOutput) ToAzureLocationOutputWithContext(ctx context.Context) AzureLocationOutput {
	return o
}

func (o AzureLocationOutput) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return o.ToAzureLocationPtrOutputWithContext(context.Background())
}

func (o AzureLocationOutput) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureLocation) *AzureLocation {
		return &v
	}).(AzureLocationPtrOutput)
}

func (o AzureLocationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureLocationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureLocation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureLocationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureLocationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureLocation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureLocationPtrOutput struct{ *pulumi.OutputState }

func (AzureLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLocation)(nil)).Elem()
}

func (o AzureLocationPtrOutput) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return o
}

func (o AzureLocationPtrOutput) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return o
}

func (o AzureLocationPtrOutput) Elem() AzureLocationOutput {
	return o.ApplyT(func(v *AzureLocation) AzureLocation {
		if v != nil {
			return *v
		}
		var ret AzureLocation
		return ret
	}).(AzureLocationOutput)
}

func (o AzureLocationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureLocationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureLocation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureLocationInput is an input type that accepts values of the AzureLocation enum
// A concrete instance of `AzureLocationInput` can be one of the following:
//
//	AzureLocationUnknown
//	AzureLocationEastAsia
//	AzureLocationSoutheastAsia
//	AzureLocationAustraliaEast
//	AzureLocationAustraliaSoutheast
//	AzureLocationBrazilSouth
//	AzureLocationCanadaCentral
//	AzureLocationCanadaEast
//	AzureLocationWestEurope
//	AzureLocationNorthEurope
//	AzureLocationCentralIndia
//	AzureLocationSouthIndia
//	AzureLocationWestIndia
//	AzureLocationJapanEast
//	AzureLocationJapanWest
//	AzureLocationKoreaCentral
//	AzureLocationKoreaSouth
//	AzureLocationUkWest
//	AzureLocationUkSouth
//	AzureLocationNorthCentralUs
//	AzureLocationEastUs
//	AzureLocationWestUs2
//	AzureLocationSouthCentralUs
//	AzureLocationCentralUs
//	AzureLocationEastUs2
//	AzureLocationWestUs
//	AzureLocationWestCentralUs
//	AzureLocationGermanyCentral
//	AzureLocationGermanyNortheast
//	AzureLocationChinaNorth
//	AzureLocationChinaEast
//	AzureLocationUSGovArizona
//	AzureLocationUSGovTexas
//	AzureLocationUSGovIowa
//	AzureLocationUSGovVirginia
//	AzureLocationUSDoDCentral
//	AzureLocationUSDoDEast
//	AzureLocationFranceCentral
//	AzureLocationAustraliaCentral
//	AzureLocationSouthAfricaNorth
//	AzureLocationFranceSouth
//	AzureLocationAustraliaCentral2
//	AzureLocationSouthAfricaWest
//	AzureLocationGermanyNorth
//	AzureLocationGermanyWestCentral
//	AzureLocationNorwayEast
//	AzureLocationNorwayWest
//	AzureLocationChinaEast2
//	AzureLocationChinaNorth2
//	AzureLocationSwitzerlandNorth
//	AzureLocationSwitzerlandWest
//	AzureLocationUAENorth
//	AzureLocationUAECentral
//	AzureLocationUsNatEast
//	AzureLocationUsNatWest
//	AzureLocationUsSecEast
//	AzureLocationUsSecCentral
//	AzureLocationUsSecWest
//	AzureLocationSwedenCentral
//	AzureLocationQatarCentral
type AzureLocationInput interface {
	pulumi.Input

	ToAzureLocationOutput() AzureLocationOutput
	ToAzureLocationOutputWithContext(context.Context) AzureLocationOutput
}

var azureLocationPtrType = reflect.TypeOf((**AzureLocation)(nil)).Elem()

type AzureLocationPtrInput interface {
	pulumi.Input

	ToAzureLocationPtrOutput() AzureLocationPtrOutput
	ToAzureLocationPtrOutputWithContext(context.Context) AzureLocationPtrOutput
}

type azureLocationPtr string

func AzureLocationPtr(v string) AzureLocationPtrInput {
	return (*azureLocationPtr)(&v)
}

func (*azureLocationPtr) ElementType() reflect.Type {
	return azureLocationPtrType
}

func (in *azureLocationPtr) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return pulumi.ToOutput(in).(AzureLocationPtrOutput)
}

func (in *azureLocationPtr) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureLocationPtrOutput)
}

// Gets or sets Azure Offer Code for VM.
type AzureOfferCode string

const (
	AzureOfferCodeUnknown          = AzureOfferCode("Unknown")
	AzureOfferCodeMsazr0003P       = AzureOfferCode("MSAZR0003P")
	AzureOfferCodeMsazr0044P       = AzureOfferCode("MSAZR0044P")
	AzureOfferCodeMsazr0059P       = AzureOfferCode("MSAZR0059P")
	AzureOfferCodeMsazr0060P       = AzureOfferCode("MSAZR0060P")
	AzureOfferCodeMsazr0062P       = AzureOfferCode("MSAZR0062P")
	AzureOfferCodeMsazr0063P       = AzureOfferCode("MSAZR0063P")
	AzureOfferCodeMsazr0064P       = AzureOfferCode("MSAZR0064P")
	AzureOfferCodeMsazr0029P       = AzureOfferCode("MSAZR0029P")
	AzureOfferCodeMsazr0022P       = AzureOfferCode("MSAZR0022P")
	AzureOfferCodeMsazr0023P       = AzureOfferCode("MSAZR0023P")
	AzureOfferCodeMsazr0148P       = AzureOfferCode("MSAZR0148P")
	AzureOfferCodeMsazr0025P       = AzureOfferCode("MSAZR0025P")
	AzureOfferCodeMsazr0036P       = AzureOfferCode("MSAZR0036P")
	AzureOfferCodeMsazr0120P       = AzureOfferCode("MSAZR0120P")
	AzureOfferCodeMsazr0121P       = AzureOfferCode("MSAZR0121P")
	AzureOfferCodeMsazr0122P       = AzureOfferCode("MSAZR0122P")
	AzureOfferCodeMsazr0123P       = AzureOfferCode("MSAZR0123P")
	AzureOfferCodeMsazr0124P       = AzureOfferCode("MSAZR0124P")
	AzureOfferCodeMsazr0125P       = AzureOfferCode("MSAZR0125P")
	AzureOfferCodeMsazr0126P       = AzureOfferCode("MSAZR0126P")
	AzureOfferCodeMsazr0127P       = AzureOfferCode("MSAZR0127P")
	AzureOfferCodeMsazr0128P       = AzureOfferCode("MSAZR0128P")
	AzureOfferCodeMsazr0129P       = AzureOfferCode("MSAZR0129P")
	AzureOfferCodeMsazr0130P       = AzureOfferCode("MSAZR0130P")
	AzureOfferCodeMsazr0111P       = AzureOfferCode("MSAZR0111P")
	AzureOfferCodeMsazr0144P       = AzureOfferCode("MSAZR0144P")
	AzureOfferCodeMsazr0149P       = AzureOfferCode("MSAZR0149P")
	AzureOfferCodeMsmcazr0044P     = AzureOfferCode("MSMCAZR0044P")
	AzureOfferCodeMsmcazr0059P     = AzureOfferCode("MSMCAZR0059P")
	AzureOfferCodeMsmcazr0060P     = AzureOfferCode("MSMCAZR0060P")
	AzureOfferCodeMsmcazr0063P     = AzureOfferCode("MSMCAZR0063P")
	AzureOfferCodeMsmcazr0120P     = AzureOfferCode("MSMCAZR0120P")
	AzureOfferCodeMsmcazr0121P     = AzureOfferCode("MSMCAZR0121P")
	AzureOfferCodeMsmcazr0125P     = AzureOfferCode("MSMCAZR0125P")
	AzureOfferCodeMsmcazr0128P     = AzureOfferCode("MSMCAZR0128P")
	AzureOfferCodeMsazrde0003P     = AzureOfferCode("MSAZRDE0003P")
	AzureOfferCodeMsazrde0044P     = AzureOfferCode("MSAZRDE0044P")
	AzureOfferCodeMsazrusgov0003P  = AzureOfferCode("MSAZRUSGOV0003P")
	AzureOfferCodeEA               = AzureOfferCode("EA")
	AzureOfferCodeMsazr0243P       = AzureOfferCode("MSAZR0243P")
	AzureOfferCodeSavingsPlan1Year = AzureOfferCode("SavingsPlan1Year")
	AzureOfferCodeSavingsPlan3Year = AzureOfferCode("SavingsPlan3Year")
)

func (AzureOfferCode) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOfferCode)(nil)).Elem()
}

func (e AzureOfferCode) ToAzureOfferCodeOutput() AzureOfferCodeOutput {
	return pulumi.ToOutput(e).(AzureOfferCodeOutput)
}

func (e AzureOfferCode) ToAzureOfferCodeOutputWithContext(ctx context.Context) AzureOfferCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureOfferCodeOutput)
}

func (e AzureOfferCode) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return e.ToAzureOfferCodePtrOutputWithContext(context.Background())
}

func (e AzureOfferCode) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return AzureOfferCode(e).ToAzureOfferCodeOutputWithContext(ctx).ToAzureOfferCodePtrOutputWithContext(ctx)
}

func (e AzureOfferCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureOfferCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureOfferCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureOfferCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureOfferCodeOutput struct{ *pulumi.OutputState }

func (AzureOfferCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOfferCode)(nil)).Elem()
}

func (o AzureOfferCodeOutput) ToAzureOfferCodeOutput() AzureOfferCodeOutput {
	return o
}

func (o AzureOfferCodeOutput) ToAzureOfferCodeOutputWithContext(ctx context.Context) AzureOfferCodeOutput {
	return o
}

func (o AzureOfferCodeOutput) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return o.ToAzureOfferCodePtrOutputWithContext(context.Background())
}

func (o AzureOfferCodeOutput) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureOfferCode) *AzureOfferCode {
		return &v
	}).(AzureOfferCodePtrOutput)
}

func (o AzureOfferCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureOfferCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureOfferCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureOfferCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureOfferCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureOfferCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureOfferCodePtrOutput struct{ *pulumi.OutputState }

func (AzureOfferCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOfferCode)(nil)).Elem()
}

func (o AzureOfferCodePtrOutput) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return o
}

func (o AzureOfferCodePtrOutput) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return o
}

func (o AzureOfferCodePtrOutput) Elem() AzureOfferCodeOutput {
	return o.ApplyT(func(v *AzureOfferCode) AzureOfferCode {
		if v != nil {
			return *v
		}
		var ret AzureOfferCode
		return ret
	}).(AzureOfferCodeOutput)
}

func (o AzureOfferCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureOfferCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureOfferCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureOfferCodeInput is an input type that accepts values of the AzureOfferCode enum
// A concrete instance of `AzureOfferCodeInput` can be one of the following:
//
//	AzureOfferCodeUnknown
//	AzureOfferCodeMsazr0003P
//	AzureOfferCodeMsazr0044P
//	AzureOfferCodeMsazr0059P
//	AzureOfferCodeMsazr0060P
//	AzureOfferCodeMsazr0062P
//	AzureOfferCodeMsazr0063P
//	AzureOfferCodeMsazr0064P
//	AzureOfferCodeMsazr0029P
//	AzureOfferCodeMsazr0022P
//	AzureOfferCodeMsazr0023P
//	AzureOfferCodeMsazr0148P
//	AzureOfferCodeMsazr0025P
//	AzureOfferCodeMsazr0036P
//	AzureOfferCodeMsazr0120P
//	AzureOfferCodeMsazr0121P
//	AzureOfferCodeMsazr0122P
//	AzureOfferCodeMsazr0123P
//	AzureOfferCodeMsazr0124P
//	AzureOfferCodeMsazr0125P
//	AzureOfferCodeMsazr0126P
//	AzureOfferCodeMsazr0127P
//	AzureOfferCodeMsazr0128P
//	AzureOfferCodeMsazr0129P
//	AzureOfferCodeMsazr0130P
//	AzureOfferCodeMsazr0111P
//	AzureOfferCodeMsazr0144P
//	AzureOfferCodeMsazr0149P
//	AzureOfferCodeMsmcazr0044P
//	AzureOfferCodeMsmcazr0059P
//	AzureOfferCodeMsmcazr0060P
//	AzureOfferCodeMsmcazr0063P
//	AzureOfferCodeMsmcazr0120P
//	AzureOfferCodeMsmcazr0121P
//	AzureOfferCodeMsmcazr0125P
//	AzureOfferCodeMsmcazr0128P
//	AzureOfferCodeMsazrde0003P
//	AzureOfferCodeMsazrde0044P
//	AzureOfferCodeMsazrusgov0003P
//	AzureOfferCodeEA
//	AzureOfferCodeMsazr0243P
//	AzureOfferCodeSavingsPlan1Year
//	AzureOfferCodeSavingsPlan3Year
type AzureOfferCodeInput interface {
	pulumi.Input

	ToAzureOfferCodeOutput() AzureOfferCodeOutput
	ToAzureOfferCodeOutputWithContext(context.Context) AzureOfferCodeOutput
}

var azureOfferCodePtrType = reflect.TypeOf((**AzureOfferCode)(nil)).Elem()

type AzureOfferCodePtrInput interface {
	pulumi.Input

	ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput
	ToAzureOfferCodePtrOutputWithContext(context.Context) AzureOfferCodePtrOutput
}

type azureOfferCodePtr string

func AzureOfferCodePtr(v string) AzureOfferCodePtrInput {
	return (*azureOfferCodePtr)(&v)
}

func (*azureOfferCodePtr) ElementType() reflect.Type {
	return azureOfferCodePtrType
}

func (in *azureOfferCodePtr) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return pulumi.ToOutput(in).(AzureOfferCodePtrOutput)
}

func (in *azureOfferCodePtr) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureOfferCodePtrOutput)
}

// Gets or sets Azure Pricing Tier - Free, Basic, etc.
type AzurePricingTier string

const (
	AzurePricingTierStandard = AzurePricingTier("Standard")
	AzurePricingTierBasic    = AzurePricingTier("Basic")
)

func (AzurePricingTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePricingTier)(nil)).Elem()
}

func (e AzurePricingTier) ToAzurePricingTierOutput() AzurePricingTierOutput {
	return pulumi.ToOutput(e).(AzurePricingTierOutput)
}

func (e AzurePricingTier) ToAzurePricingTierOutputWithContext(ctx context.Context) AzurePricingTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzurePricingTierOutput)
}

func (e AzurePricingTier) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return e.ToAzurePricingTierPtrOutputWithContext(context.Background())
}

func (e AzurePricingTier) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return AzurePricingTier(e).ToAzurePricingTierOutputWithContext(ctx).ToAzurePricingTierPtrOutputWithContext(ctx)
}

func (e AzurePricingTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzurePricingTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzurePricingTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzurePricingTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzurePricingTierOutput struct{ *pulumi.OutputState }

func (AzurePricingTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePricingTier)(nil)).Elem()
}

func (o AzurePricingTierOutput) ToAzurePricingTierOutput() AzurePricingTierOutput {
	return o
}

func (o AzurePricingTierOutput) ToAzurePricingTierOutputWithContext(ctx context.Context) AzurePricingTierOutput {
	return o
}

func (o AzurePricingTierOutput) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return o.ToAzurePricingTierPtrOutputWithContext(context.Background())
}

func (o AzurePricingTierOutput) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzurePricingTier) *AzurePricingTier {
		return &v
	}).(AzurePricingTierPtrOutput)
}

func (o AzurePricingTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzurePricingTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzurePricingTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzurePricingTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzurePricingTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzurePricingTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzurePricingTierPtrOutput struct{ *pulumi.OutputState }

func (AzurePricingTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePricingTier)(nil)).Elem()
}

func (o AzurePricingTierPtrOutput) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return o
}

func (o AzurePricingTierPtrOutput) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return o
}

func (o AzurePricingTierPtrOutput) Elem() AzurePricingTierOutput {
	return o.ApplyT(func(v *AzurePricingTier) AzurePricingTier {
		if v != nil {
			return *v
		}
		var ret AzurePricingTier
		return ret
	}).(AzurePricingTierOutput)
}

func (o AzurePricingTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzurePricingTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzurePricingTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzurePricingTierInput is an input type that accepts values of the AzurePricingTier enum
// A concrete instance of `AzurePricingTierInput` can be one of the following:
//
//	AzurePricingTierStandard
//	AzurePricingTierBasic
type AzurePricingTierInput interface {
	pulumi.Input

	ToAzurePricingTierOutput() AzurePricingTierOutput
	ToAzurePricingTierOutputWithContext(context.Context) AzurePricingTierOutput
}

var azurePricingTierPtrType = reflect.TypeOf((**AzurePricingTier)(nil)).Elem()

type AzurePricingTierPtrInput interface {
	pulumi.Input

	ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput
	ToAzurePricingTierPtrOutputWithContext(context.Context) AzurePricingTierPtrOutput
}

type azurePricingTierPtr string

func AzurePricingTierPtr(v string) AzurePricingTierPtrInput {
	return (*azurePricingTierPtr)(&v)
}

func (*azurePricingTierPtr) ElementType() reflect.Type {
	return azurePricingTierPtrType
}

func (in *azurePricingTierPtr) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return pulumi.ToOutput(in).(AzurePricingTierPtrOutput)
}

func (in *azurePricingTierPtr) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzurePricingTierPtrOutput)
}

// Gets or sets azure reserved instance for VM.
type AzureReservedInstance string

const (
	AzureReservedInstanceNone    = AzureReservedInstance("None")
	AzureReservedInstanceRI1Year = AzureReservedInstance("RI1Year")
	AzureReservedInstanceRI3Year = AzureReservedInstance("RI3Year")
)

func (AzureReservedInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureReservedInstance)(nil)).Elem()
}

func (e AzureReservedInstance) ToAzureReservedInstanceOutput() AzureReservedInstanceOutput {
	return pulumi.ToOutput(e).(AzureReservedInstanceOutput)
}

func (e AzureReservedInstance) ToAzureReservedInstanceOutputWithContext(ctx context.Context) AzureReservedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureReservedInstanceOutput)
}

func (e AzureReservedInstance) ToAzureReservedInstancePtrOutput() AzureReservedInstancePtrOutput {
	return e.ToAzureReservedInstancePtrOutputWithContext(context.Background())
}

func (e AzureReservedInstance) ToAzureReservedInstancePtrOutputWithContext(ctx context.Context) AzureReservedInstancePtrOutput {
	return AzureReservedInstance(e).ToAzureReservedInstanceOutputWithContext(ctx).ToAzureReservedInstancePtrOutputWithContext(ctx)
}

func (e AzureReservedInstance) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureReservedInstance) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureReservedInstance) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureReservedInstance) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureReservedInstanceOutput struct{ *pulumi.OutputState }

func (AzureReservedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureReservedInstance)(nil)).Elem()
}

func (o AzureReservedInstanceOutput) ToAzureReservedInstanceOutput() AzureReservedInstanceOutput {
	return o
}

func (o AzureReservedInstanceOutput) ToAzureReservedInstanceOutputWithContext(ctx context.Context) AzureReservedInstanceOutput {
	return o
}

func (o AzureReservedInstanceOutput) ToAzureReservedInstancePtrOutput() AzureReservedInstancePtrOutput {
	return o.ToAzureReservedInstancePtrOutputWithContext(context.Background())
}

func (o AzureReservedInstanceOutput) ToAzureReservedInstancePtrOutputWithContext(ctx context.Context) AzureReservedInstancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureReservedInstance) *AzureReservedInstance {
		return &v
	}).(AzureReservedInstancePtrOutput)
}

func (o AzureReservedInstanceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureReservedInstanceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureReservedInstance) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureReservedInstanceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureReservedInstanceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureReservedInstance) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureReservedInstancePtrOutput struct{ *pulumi.OutputState }

func (AzureReservedInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureReservedInstance)(nil)).Elem()
}

func (o AzureReservedInstancePtrOutput) ToAzureReservedInstancePtrOutput() AzureReservedInstancePtrOutput {
	return o
}

func (o AzureReservedInstancePtrOutput) ToAzureReservedInstancePtrOutputWithContext(ctx context.Context) AzureReservedInstancePtrOutput {
	return o
}

func (o AzureReservedInstancePtrOutput) Elem() AzureReservedInstanceOutput {
	return o.ApplyT(func(v *AzureReservedInstance) AzureReservedInstance {
		if v != nil {
			return *v
		}
		var ret AzureReservedInstance
		return ret
	}).(AzureReservedInstanceOutput)
}

func (o AzureReservedInstancePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureReservedInstancePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureReservedInstance) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureReservedInstanceInput is an input type that accepts values of the AzureReservedInstance enum
// A concrete instance of `AzureReservedInstanceInput` can be one of the following:
//
//	AzureReservedInstanceNone
//	AzureReservedInstanceRI1Year
//	AzureReservedInstanceRI3Year
type AzureReservedInstanceInput interface {
	pulumi.Input

	ToAzureReservedInstanceOutput() AzureReservedInstanceOutput
	ToAzureReservedInstanceOutputWithContext(context.Context) AzureReservedInstanceOutput
}

var azureReservedInstancePtrType = reflect.TypeOf((**AzureReservedInstance)(nil)).Elem()

type AzureReservedInstancePtrInput interface {
	pulumi.Input

	ToAzureReservedInstancePtrOutput() AzureReservedInstancePtrOutput
	ToAzureReservedInstancePtrOutputWithContext(context.Context) AzureReservedInstancePtrOutput
}

type azureReservedInstancePtr string

func AzureReservedInstancePtr(v string) AzureReservedInstancePtrInput {
	return (*azureReservedInstancePtr)(&v)
}

func (*azureReservedInstancePtr) ElementType() reflect.Type {
	return azureReservedInstancePtrType
}

func (in *azureReservedInstancePtr) ToAzureReservedInstancePtrOutput() AzureReservedInstancePtrOutput {
	return pulumi.ToOutput(in).(AzureReservedInstancePtrOutput)
}

func (in *azureReservedInstancePtr) ToAzureReservedInstancePtrOutputWithContext(ctx context.Context) AzureReservedInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureReservedInstancePtrOutput)
}

// Gets or sets a value indicating azure security offering type.
type AzureSecurityOfferingType string

const (
	AzureSecurityOfferingTypeNO  = AzureSecurityOfferingType("NO")
	AzureSecurityOfferingTypeMDC = AzureSecurityOfferingType("MDC")
)

func (AzureSecurityOfferingType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSecurityOfferingType)(nil)).Elem()
}

func (e AzureSecurityOfferingType) ToAzureSecurityOfferingTypeOutput() AzureSecurityOfferingTypeOutput {
	return pulumi.ToOutput(e).(AzureSecurityOfferingTypeOutput)
}

func (e AzureSecurityOfferingType) ToAzureSecurityOfferingTypeOutputWithContext(ctx context.Context) AzureSecurityOfferingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSecurityOfferingTypeOutput)
}

func (e AzureSecurityOfferingType) ToAzureSecurityOfferingTypePtrOutput() AzureSecurityOfferingTypePtrOutput {
	return e.ToAzureSecurityOfferingTypePtrOutputWithContext(context.Background())
}

func (e AzureSecurityOfferingType) ToAzureSecurityOfferingTypePtrOutputWithContext(ctx context.Context) AzureSecurityOfferingTypePtrOutput {
	return AzureSecurityOfferingType(e).ToAzureSecurityOfferingTypeOutputWithContext(ctx).ToAzureSecurityOfferingTypePtrOutputWithContext(ctx)
}

func (e AzureSecurityOfferingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSecurityOfferingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSecurityOfferingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSecurityOfferingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSecurityOfferingTypeOutput struct{ *pulumi.OutputState }

func (AzureSecurityOfferingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSecurityOfferingType)(nil)).Elem()
}

func (o AzureSecurityOfferingTypeOutput) ToAzureSecurityOfferingTypeOutput() AzureSecurityOfferingTypeOutput {
	return o
}

func (o AzureSecurityOfferingTypeOutput) ToAzureSecurityOfferingTypeOutputWithContext(ctx context.Context) AzureSecurityOfferingTypeOutput {
	return o
}

func (o AzureSecurityOfferingTypeOutput) ToAzureSecurityOfferingTypePtrOutput() AzureSecurityOfferingTypePtrOutput {
	return o.ToAzureSecurityOfferingTypePtrOutputWithContext(context.Background())
}

func (o AzureSecurityOfferingTypeOutput) ToAzureSecurityOfferingTypePtrOutputWithContext(ctx context.Context) AzureSecurityOfferingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSecurityOfferingType) *AzureSecurityOfferingType {
		return &v
	}).(AzureSecurityOfferingTypePtrOutput)
}

func (o AzureSecurityOfferingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSecurityOfferingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSecurityOfferingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSecurityOfferingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSecurityOfferingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSecurityOfferingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSecurityOfferingTypePtrOutput struct{ *pulumi.OutputState }

func (AzureSecurityOfferingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSecurityOfferingType)(nil)).Elem()
}

func (o AzureSecurityOfferingTypePtrOutput) ToAzureSecurityOfferingTypePtrOutput() AzureSecurityOfferingTypePtrOutput {
	return o
}

func (o AzureSecurityOfferingTypePtrOutput) ToAzureSecurityOfferingTypePtrOutputWithContext(ctx context.Context) AzureSecurityOfferingTypePtrOutput {
	return o
}

func (o AzureSecurityOfferingTypePtrOutput) Elem() AzureSecurityOfferingTypeOutput {
	return o.ApplyT(func(v *AzureSecurityOfferingType) AzureSecurityOfferingType {
		if v != nil {
			return *v
		}
		var ret AzureSecurityOfferingType
		return ret
	}).(AzureSecurityOfferingTypeOutput)
}

func (o AzureSecurityOfferingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSecurityOfferingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSecurityOfferingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSecurityOfferingTypeInput is an input type that accepts values of the AzureSecurityOfferingType enum
// A concrete instance of `AzureSecurityOfferingTypeInput` can be one of the following:
//
//	AzureSecurityOfferingTypeNO
//	AzureSecurityOfferingTypeMDC
type AzureSecurityOfferingTypeInput interface {
	pulumi.Input

	ToAzureSecurityOfferingTypeOutput() AzureSecurityOfferingTypeOutput
	ToAzureSecurityOfferingTypeOutputWithContext(context.Context) AzureSecurityOfferingTypeOutput
}

var azureSecurityOfferingTypePtrType = reflect.TypeOf((**AzureSecurityOfferingType)(nil)).Elem()

type AzureSecurityOfferingTypePtrInput interface {
	pulumi.Input

	ToAzureSecurityOfferingTypePtrOutput() AzureSecurityOfferingTypePtrOutput
	ToAzureSecurityOfferingTypePtrOutputWithContext(context.Context) AzureSecurityOfferingTypePtrOutput
}

type azureSecurityOfferingTypePtr string

func AzureSecurityOfferingTypePtr(v string) AzureSecurityOfferingTypePtrInput {
	return (*azureSecurityOfferingTypePtr)(&v)
}

func (*azureSecurityOfferingTypePtr) ElementType() reflect.Type {
	return azureSecurityOfferingTypePtrType
}

func (in *azureSecurityOfferingTypePtr) ToAzureSecurityOfferingTypePtrOutput() AzureSecurityOfferingTypePtrOutput {
	return pulumi.ToOutput(in).(AzureSecurityOfferingTypePtrOutput)
}

func (in *azureSecurityOfferingTypePtr) ToAzureSecurityOfferingTypePtrOutputWithContext(ctx context.Context) AzureSecurityOfferingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSecurityOfferingTypePtrOutput)
}

// Gets or sets the azure PAAS SQL instance type.
type AzureSqlDataBaseType string

const (
	AzureSqlDataBaseTypeUnknown        = AzureSqlDataBaseType("Unknown")
	AzureSqlDataBaseTypeAutomatic      = AzureSqlDataBaseType("Automatic")
	AzureSqlDataBaseTypeSingleDatabase = AzureSqlDataBaseType("SingleDatabase")
	AzureSqlDataBaseTypeElasticPool    = AzureSqlDataBaseType("ElasticPool")
)

func (AzureSqlDataBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDataBaseType)(nil)).Elem()
}

func (e AzureSqlDataBaseType) ToAzureSqlDataBaseTypeOutput() AzureSqlDataBaseTypeOutput {
	return pulumi.ToOutput(e).(AzureSqlDataBaseTypeOutput)
}

func (e AzureSqlDataBaseType) ToAzureSqlDataBaseTypeOutputWithContext(ctx context.Context) AzureSqlDataBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSqlDataBaseTypeOutput)
}

func (e AzureSqlDataBaseType) ToAzureSqlDataBaseTypePtrOutput() AzureSqlDataBaseTypePtrOutput {
	return e.ToAzureSqlDataBaseTypePtrOutputWithContext(context.Background())
}

func (e AzureSqlDataBaseType) ToAzureSqlDataBaseTypePtrOutputWithContext(ctx context.Context) AzureSqlDataBaseTypePtrOutput {
	return AzureSqlDataBaseType(e).ToAzureSqlDataBaseTypeOutputWithContext(ctx).ToAzureSqlDataBaseTypePtrOutputWithContext(ctx)
}

func (e AzureSqlDataBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlDataBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlDataBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSqlDataBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSqlDataBaseTypeOutput struct{ *pulumi.OutputState }

func (AzureSqlDataBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDataBaseType)(nil)).Elem()
}

func (o AzureSqlDataBaseTypeOutput) ToAzureSqlDataBaseTypeOutput() AzureSqlDataBaseTypeOutput {
	return o
}

func (o AzureSqlDataBaseTypeOutput) ToAzureSqlDataBaseTypeOutputWithContext(ctx context.Context) AzureSqlDataBaseTypeOutput {
	return o
}

func (o AzureSqlDataBaseTypeOutput) ToAzureSqlDataBaseTypePtrOutput() AzureSqlDataBaseTypePtrOutput {
	return o.ToAzureSqlDataBaseTypePtrOutputWithContext(context.Background())
}

func (o AzureSqlDataBaseTypeOutput) ToAzureSqlDataBaseTypePtrOutputWithContext(ctx context.Context) AzureSqlDataBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlDataBaseType) *AzureSqlDataBaseType {
		return &v
	}).(AzureSqlDataBaseTypePtrOutput)
}

func (o AzureSqlDataBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSqlDataBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlDataBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSqlDataBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlDataBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlDataBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSqlDataBaseTypePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlDataBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDataBaseType)(nil)).Elem()
}

func (o AzureSqlDataBaseTypePtrOutput) ToAzureSqlDataBaseTypePtrOutput() AzureSqlDataBaseTypePtrOutput {
	return o
}

func (o AzureSqlDataBaseTypePtrOutput) ToAzureSqlDataBaseTypePtrOutputWithContext(ctx context.Context) AzureSqlDataBaseTypePtrOutput {
	return o
}

func (o AzureSqlDataBaseTypePtrOutput) Elem() AzureSqlDataBaseTypeOutput {
	return o.ApplyT(func(v *AzureSqlDataBaseType) AzureSqlDataBaseType {
		if v != nil {
			return *v
		}
		var ret AzureSqlDataBaseType
		return ret
	}).(AzureSqlDataBaseTypeOutput)
}

func (o AzureSqlDataBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlDataBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSqlDataBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSqlDataBaseTypeInput is an input type that accepts values of the AzureSqlDataBaseType enum
// A concrete instance of `AzureSqlDataBaseTypeInput` can be one of the following:
//
//	AzureSqlDataBaseTypeUnknown
//	AzureSqlDataBaseTypeAutomatic
//	AzureSqlDataBaseTypeSingleDatabase
//	AzureSqlDataBaseTypeElasticPool
type AzureSqlDataBaseTypeInput interface {
	pulumi.Input

	ToAzureSqlDataBaseTypeOutput() AzureSqlDataBaseTypeOutput
	ToAzureSqlDataBaseTypeOutputWithContext(context.Context) AzureSqlDataBaseTypeOutput
}

var azureSqlDataBaseTypePtrType = reflect.TypeOf((**AzureSqlDataBaseType)(nil)).Elem()

type AzureSqlDataBaseTypePtrInput interface {
	pulumi.Input

	ToAzureSqlDataBaseTypePtrOutput() AzureSqlDataBaseTypePtrOutput
	ToAzureSqlDataBaseTypePtrOutputWithContext(context.Context) AzureSqlDataBaseTypePtrOutput
}

type azureSqlDataBaseTypePtr string

func AzureSqlDataBaseTypePtr(v string) AzureSqlDataBaseTypePtrInput {
	return (*azureSqlDataBaseTypePtr)(&v)
}

func (*azureSqlDataBaseTypePtr) ElementType() reflect.Type {
	return azureSqlDataBaseTypePtrType
}

func (in *azureSqlDataBaseTypePtr) ToAzureSqlDataBaseTypePtrOutput() AzureSqlDataBaseTypePtrOutput {
	return pulumi.ToOutput(in).(AzureSqlDataBaseTypePtrOutput)
}

func (in *azureSqlDataBaseTypePtr) ToAzureSqlDataBaseTypePtrOutputWithContext(ctx context.Context) AzureSqlDataBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSqlDataBaseTypePtrOutput)
}

// Gets or sets the azure PAAS SQL instance type.
type AzureSqlInstanceType string

const (
	AzureSqlInstanceTypeUnknown        = AzureSqlInstanceType("Unknown")
	AzureSqlInstanceTypeAutomatic      = AzureSqlInstanceType("Automatic")
	AzureSqlInstanceTypeSingleInstance = AzureSqlInstanceType("SingleInstance")
	AzureSqlInstanceTypeInstancePools  = AzureSqlInstanceType("InstancePools")
)

func (AzureSqlInstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlInstanceType)(nil)).Elem()
}

func (e AzureSqlInstanceType) ToAzureSqlInstanceTypeOutput() AzureSqlInstanceTypeOutput {
	return pulumi.ToOutput(e).(AzureSqlInstanceTypeOutput)
}

func (e AzureSqlInstanceType) ToAzureSqlInstanceTypeOutputWithContext(ctx context.Context) AzureSqlInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSqlInstanceTypeOutput)
}

func (e AzureSqlInstanceType) ToAzureSqlInstanceTypePtrOutput() AzureSqlInstanceTypePtrOutput {
	return e.ToAzureSqlInstanceTypePtrOutputWithContext(context.Background())
}

func (e AzureSqlInstanceType) ToAzureSqlInstanceTypePtrOutputWithContext(ctx context.Context) AzureSqlInstanceTypePtrOutput {
	return AzureSqlInstanceType(e).ToAzureSqlInstanceTypeOutputWithContext(ctx).ToAzureSqlInstanceTypePtrOutputWithContext(ctx)
}

func (e AzureSqlInstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlInstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlInstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSqlInstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSqlInstanceTypeOutput struct{ *pulumi.OutputState }

func (AzureSqlInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlInstanceType)(nil)).Elem()
}

func (o AzureSqlInstanceTypeOutput) ToAzureSqlInstanceTypeOutput() AzureSqlInstanceTypeOutput {
	return o
}

func (o AzureSqlInstanceTypeOutput) ToAzureSqlInstanceTypeOutputWithContext(ctx context.Context) AzureSqlInstanceTypeOutput {
	return o
}

func (o AzureSqlInstanceTypeOutput) ToAzureSqlInstanceTypePtrOutput() AzureSqlInstanceTypePtrOutput {
	return o.ToAzureSqlInstanceTypePtrOutputWithContext(context.Background())
}

func (o AzureSqlInstanceTypeOutput) ToAzureSqlInstanceTypePtrOutputWithContext(ctx context.Context) AzureSqlInstanceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlInstanceType) *AzureSqlInstanceType {
		return &v
	}).(AzureSqlInstanceTypePtrOutput)
}

func (o AzureSqlInstanceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSqlInstanceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlInstanceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSqlInstanceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlInstanceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlInstanceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSqlInstanceTypePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlInstanceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlInstanceType)(nil)).Elem()
}

func (o AzureSqlInstanceTypePtrOutput) ToAzureSqlInstanceTypePtrOutput() AzureSqlInstanceTypePtrOutput {
	return o
}

func (o AzureSqlInstanceTypePtrOutput) ToAzureSqlInstanceTypePtrOutputWithContext(ctx context.Context) AzureSqlInstanceTypePtrOutput {
	return o
}

func (o AzureSqlInstanceTypePtrOutput) Elem() AzureSqlInstanceTypeOutput {
	return o.ApplyT(func(v *AzureSqlInstanceType) AzureSqlInstanceType {
		if v != nil {
			return *v
		}
		var ret AzureSqlInstanceType
		return ret
	}).(AzureSqlInstanceTypeOutput)
}

func (o AzureSqlInstanceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlInstanceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSqlInstanceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSqlInstanceTypeInput is an input type that accepts values of the AzureSqlInstanceType enum
// A concrete instance of `AzureSqlInstanceTypeInput` can be one of the following:
//
//	AzureSqlInstanceTypeUnknown
//	AzureSqlInstanceTypeAutomatic
//	AzureSqlInstanceTypeSingleInstance
//	AzureSqlInstanceTypeInstancePools
type AzureSqlInstanceTypeInput interface {
	pulumi.Input

	ToAzureSqlInstanceTypeOutput() AzureSqlInstanceTypeOutput
	ToAzureSqlInstanceTypeOutputWithContext(context.Context) AzureSqlInstanceTypeOutput
}

var azureSqlInstanceTypePtrType = reflect.TypeOf((**AzureSqlInstanceType)(nil)).Elem()

type AzureSqlInstanceTypePtrInput interface {
	pulumi.Input

	ToAzureSqlInstanceTypePtrOutput() AzureSqlInstanceTypePtrOutput
	ToAzureSqlInstanceTypePtrOutputWithContext(context.Context) AzureSqlInstanceTypePtrOutput
}

type azureSqlInstanceTypePtr string

func AzureSqlInstanceTypePtr(v string) AzureSqlInstanceTypePtrInput {
	return (*azureSqlInstanceTypePtr)(&v)
}

func (*azureSqlInstanceTypePtr) ElementType() reflect.Type {
	return azureSqlInstanceTypePtrType
}

func (in *azureSqlInstanceTypePtr) ToAzureSqlInstanceTypePtrOutput() AzureSqlInstanceTypePtrOutput {
	return pulumi.ToOutput(in).(AzureSqlInstanceTypePtrOutput)
}

func (in *azureSqlInstanceTypePtr) ToAzureSqlInstanceTypePtrOutputWithContext(ctx context.Context) AzureSqlInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSqlInstanceTypePtrOutput)
}

// Gets or sets the azure SQL purchase model.
type AzureSqlPurchaseModel string

const (
	AzureSqlPurchaseModelUnknown = AzureSqlPurchaseModel("Unknown")
	AzureSqlPurchaseModelVCore   = AzureSqlPurchaseModel("VCore")
	AzureSqlPurchaseModelDTU     = AzureSqlPurchaseModel("DTU")
)

func (AzureSqlPurchaseModel) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlPurchaseModel)(nil)).Elem()
}

func (e AzureSqlPurchaseModel) ToAzureSqlPurchaseModelOutput() AzureSqlPurchaseModelOutput {
	return pulumi.ToOutput(e).(AzureSqlPurchaseModelOutput)
}

func (e AzureSqlPurchaseModel) ToAzureSqlPurchaseModelOutputWithContext(ctx context.Context) AzureSqlPurchaseModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSqlPurchaseModelOutput)
}

func (e AzureSqlPurchaseModel) ToAzureSqlPurchaseModelPtrOutput() AzureSqlPurchaseModelPtrOutput {
	return e.ToAzureSqlPurchaseModelPtrOutputWithContext(context.Background())
}

func (e AzureSqlPurchaseModel) ToAzureSqlPurchaseModelPtrOutputWithContext(ctx context.Context) AzureSqlPurchaseModelPtrOutput {
	return AzureSqlPurchaseModel(e).ToAzureSqlPurchaseModelOutputWithContext(ctx).ToAzureSqlPurchaseModelPtrOutputWithContext(ctx)
}

func (e AzureSqlPurchaseModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlPurchaseModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlPurchaseModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSqlPurchaseModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSqlPurchaseModelOutput struct{ *pulumi.OutputState }

func (AzureSqlPurchaseModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlPurchaseModel)(nil)).Elem()
}

func (o AzureSqlPurchaseModelOutput) ToAzureSqlPurchaseModelOutput() AzureSqlPurchaseModelOutput {
	return o
}

func (o AzureSqlPurchaseModelOutput) ToAzureSqlPurchaseModelOutputWithContext(ctx context.Context) AzureSqlPurchaseModelOutput {
	return o
}

func (o AzureSqlPurchaseModelOutput) ToAzureSqlPurchaseModelPtrOutput() AzureSqlPurchaseModelPtrOutput {
	return o.ToAzureSqlPurchaseModelPtrOutputWithContext(context.Background())
}

func (o AzureSqlPurchaseModelOutput) ToAzureSqlPurchaseModelPtrOutputWithContext(ctx context.Context) AzureSqlPurchaseModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlPurchaseModel) *AzureSqlPurchaseModel {
		return &v
	}).(AzureSqlPurchaseModelPtrOutput)
}

func (o AzureSqlPurchaseModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSqlPurchaseModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlPurchaseModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSqlPurchaseModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlPurchaseModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlPurchaseModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSqlPurchaseModelPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlPurchaseModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlPurchaseModel)(nil)).Elem()
}

func (o AzureSqlPurchaseModelPtrOutput) ToAzureSqlPurchaseModelPtrOutput() AzureSqlPurchaseModelPtrOutput {
	return o
}

func (o AzureSqlPurchaseModelPtrOutput) ToAzureSqlPurchaseModelPtrOutputWithContext(ctx context.Context) AzureSqlPurchaseModelPtrOutput {
	return o
}

func (o AzureSqlPurchaseModelPtrOutput) Elem() AzureSqlPurchaseModelOutput {
	return o.ApplyT(func(v *AzureSqlPurchaseModel) AzureSqlPurchaseModel {
		if v != nil {
			return *v
		}
		var ret AzureSqlPurchaseModel
		return ret
	}).(AzureSqlPurchaseModelOutput)
}

func (o AzureSqlPurchaseModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlPurchaseModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSqlPurchaseModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSqlPurchaseModelInput is an input type that accepts values of the AzureSqlPurchaseModel enum
// A concrete instance of `AzureSqlPurchaseModelInput` can be one of the following:
//
//	AzureSqlPurchaseModelUnknown
//	AzureSqlPurchaseModelVCore
//	AzureSqlPurchaseModelDTU
type AzureSqlPurchaseModelInput interface {
	pulumi.Input

	ToAzureSqlPurchaseModelOutput() AzureSqlPurchaseModelOutput
	ToAzureSqlPurchaseModelOutputWithContext(context.Context) AzureSqlPurchaseModelOutput
}

var azureSqlPurchaseModelPtrType = reflect.TypeOf((**AzureSqlPurchaseModel)(nil)).Elem()

type AzureSqlPurchaseModelPtrInput interface {
	pulumi.Input

	ToAzureSqlPurchaseModelPtrOutput() AzureSqlPurchaseModelPtrOutput
	ToAzureSqlPurchaseModelPtrOutputWithContext(context.Context) AzureSqlPurchaseModelPtrOutput
}

type azureSqlPurchaseModelPtr string

func AzureSqlPurchaseModelPtr(v string) AzureSqlPurchaseModelPtrInput {
	return (*azureSqlPurchaseModelPtr)(&v)
}

func (*azureSqlPurchaseModelPtr) ElementType() reflect.Type {
	return azureSqlPurchaseModelPtrType
}

func (in *azureSqlPurchaseModelPtr) ToAzureSqlPurchaseModelPtrOutput() AzureSqlPurchaseModelPtrOutput {
	return pulumi.ToOutput(in).(AzureSqlPurchaseModelPtrOutput)
}

func (in *azureSqlPurchaseModelPtr) ToAzureSqlPurchaseModelPtrOutputWithContext(ctx context.Context) AzureSqlPurchaseModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSqlPurchaseModelPtrOutput)
}

// Gets or sets the azure SQL service tier.
type AzureSqlServiceTier string

const (
	AzureSqlServiceTierUnknown          = AzureSqlServiceTier("Unknown")
	AzureSqlServiceTierAutomatic        = AzureSqlServiceTier("Automatic")
	AzureSqlServiceTierGeneralPurpose   = AzureSqlServiceTier("GeneralPurpose")
	AzureSqlServiceTierBusinessCritical = AzureSqlServiceTier("BusinessCritical")
	AzureSqlServiceTierHyperScale       = AzureSqlServiceTier("HyperScale")
)

func (AzureSqlServiceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServiceTier)(nil)).Elem()
}

func (e AzureSqlServiceTier) ToAzureSqlServiceTierOutput() AzureSqlServiceTierOutput {
	return pulumi.ToOutput(e).(AzureSqlServiceTierOutput)
}

func (e AzureSqlServiceTier) ToAzureSqlServiceTierOutputWithContext(ctx context.Context) AzureSqlServiceTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSqlServiceTierOutput)
}

func (e AzureSqlServiceTier) ToAzureSqlServiceTierPtrOutput() AzureSqlServiceTierPtrOutput {
	return e.ToAzureSqlServiceTierPtrOutputWithContext(context.Background())
}

func (e AzureSqlServiceTier) ToAzureSqlServiceTierPtrOutputWithContext(ctx context.Context) AzureSqlServiceTierPtrOutput {
	return AzureSqlServiceTier(e).ToAzureSqlServiceTierOutputWithContext(ctx).ToAzureSqlServiceTierPtrOutputWithContext(ctx)
}

func (e AzureSqlServiceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlServiceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSqlServiceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSqlServiceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSqlServiceTierOutput struct{ *pulumi.OutputState }

func (AzureSqlServiceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServiceTier)(nil)).Elem()
}

func (o AzureSqlServiceTierOutput) ToAzureSqlServiceTierOutput() AzureSqlServiceTierOutput {
	return o
}

func (o AzureSqlServiceTierOutput) ToAzureSqlServiceTierOutputWithContext(ctx context.Context) AzureSqlServiceTierOutput {
	return o
}

func (o AzureSqlServiceTierOutput) ToAzureSqlServiceTierPtrOutput() AzureSqlServiceTierPtrOutput {
	return o.ToAzureSqlServiceTierPtrOutputWithContext(context.Background())
}

func (o AzureSqlServiceTierOutput) ToAzureSqlServiceTierPtrOutputWithContext(ctx context.Context) AzureSqlServiceTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlServiceTier) *AzureSqlServiceTier {
		return &v
	}).(AzureSqlServiceTierPtrOutput)
}

func (o AzureSqlServiceTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSqlServiceTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlServiceTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSqlServiceTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlServiceTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSqlServiceTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSqlServiceTierPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlServiceTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlServiceTier)(nil)).Elem()
}

func (o AzureSqlServiceTierPtrOutput) ToAzureSqlServiceTierPtrOutput() AzureSqlServiceTierPtrOutput {
	return o
}

func (o AzureSqlServiceTierPtrOutput) ToAzureSqlServiceTierPtrOutputWithContext(ctx context.Context) AzureSqlServiceTierPtrOutput {
	return o
}

func (o AzureSqlServiceTierPtrOutput) Elem() AzureSqlServiceTierOutput {
	return o.ApplyT(func(v *AzureSqlServiceTier) AzureSqlServiceTier {
		if v != nil {
			return *v
		}
		var ret AzureSqlServiceTier
		return ret
	}).(AzureSqlServiceTierOutput)
}

func (o AzureSqlServiceTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSqlServiceTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSqlServiceTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSqlServiceTierInput is an input type that accepts values of the AzureSqlServiceTier enum
// A concrete instance of `AzureSqlServiceTierInput` can be one of the following:
//
//	AzureSqlServiceTierUnknown
//	AzureSqlServiceTierAutomatic
//	AzureSqlServiceTierGeneralPurpose
//	AzureSqlServiceTierBusinessCritical
//	AzureSqlServiceTierHyperScale
type AzureSqlServiceTierInput interface {
	pulumi.Input

	ToAzureSqlServiceTierOutput() AzureSqlServiceTierOutput
	ToAzureSqlServiceTierOutputWithContext(context.Context) AzureSqlServiceTierOutput
}

var azureSqlServiceTierPtrType = reflect.TypeOf((**AzureSqlServiceTier)(nil)).Elem()

type AzureSqlServiceTierPtrInput interface {
	pulumi.Input

	ToAzureSqlServiceTierPtrOutput() AzureSqlServiceTierPtrOutput
	ToAzureSqlServiceTierPtrOutputWithContext(context.Context) AzureSqlServiceTierPtrOutput
}

type azureSqlServiceTierPtr string

func AzureSqlServiceTierPtr(v string) AzureSqlServiceTierPtrInput {
	return (*azureSqlServiceTierPtr)(&v)
}

func (*azureSqlServiceTierPtr) ElementType() reflect.Type {
	return azureSqlServiceTierPtrType
}

func (in *azureSqlServiceTierPtr) ToAzureSqlServiceTierPtrOutput() AzureSqlServiceTierPtrOutput {
	return pulumi.ToOutput(in).(AzureSqlServiceTierPtrOutput)
}

func (in *azureSqlServiceTierPtr) ToAzureSqlServiceTierPtrOutputWithContext(ctx context.Context) AzureSqlServiceTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSqlServiceTierPtrOutput)
}

// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
type AzureStorageRedundancy string

const (
	AzureStorageRedundancyUnknown                = AzureStorageRedundancy("Unknown")
	AzureStorageRedundancyLocallyRedundant       = AzureStorageRedundancy("LocallyRedundant")
	AzureStorageRedundancyZoneRedundant          = AzureStorageRedundancy("ZoneRedundant")
	AzureStorageRedundancyGeoRedundant           = AzureStorageRedundancy("GeoRedundant")
	AzureStorageRedundancyReadAccessGeoRedundant = AzureStorageRedundancy("ReadAccessGeoRedundant")
)

func (AzureStorageRedundancy) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageRedundancy)(nil)).Elem()
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyOutput() AzureStorageRedundancyOutput {
	return pulumi.ToOutput(e).(AzureStorageRedundancyOutput)
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyOutputWithContext(ctx context.Context) AzureStorageRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureStorageRedundancyOutput)
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return e.ToAzureStorageRedundancyPtrOutputWithContext(context.Background())
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return AzureStorageRedundancy(e).ToAzureStorageRedundancyOutputWithContext(ctx).ToAzureStorageRedundancyPtrOutputWithContext(ctx)
}

func (e AzureStorageRedundancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageRedundancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageRedundancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureStorageRedundancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureStorageRedundancyOutput struct{ *pulumi.OutputState }

func (AzureStorageRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageRedundancy)(nil)).Elem()
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyOutput() AzureStorageRedundancyOutput {
	return o
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyOutputWithContext(ctx context.Context) AzureStorageRedundancyOutput {
	return o
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return o.ToAzureStorageRedundancyPtrOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStorageRedundancy) *AzureStorageRedundancy {
		return &v
	}).(AzureStorageRedundancyPtrOutput)
}

func (o AzureStorageRedundancyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureStorageRedundancy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureStorageRedundancyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureStorageRedundancy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureStorageRedundancyPtrOutput struct{ *pulumi.OutputState }

func (AzureStorageRedundancyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageRedundancy)(nil)).Elem()
}

func (o AzureStorageRedundancyPtrOutput) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return o
}

func (o AzureStorageRedundancyPtrOutput) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return o
}

func (o AzureStorageRedundancyPtrOutput) Elem() AzureStorageRedundancyOutput {
	return o.ApplyT(func(v *AzureStorageRedundancy) AzureStorageRedundancy {
		if v != nil {
			return *v
		}
		var ret AzureStorageRedundancy
		return ret
	}).(AzureStorageRedundancyOutput)
}

func (o AzureStorageRedundancyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureStorageRedundancy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureStorageRedundancyInput is an input type that accepts values of the AzureStorageRedundancy enum
// A concrete instance of `AzureStorageRedundancyInput` can be one of the following:
//
//	AzureStorageRedundancyUnknown
//	AzureStorageRedundancyLocallyRedundant
//	AzureStorageRedundancyZoneRedundant
//	AzureStorageRedundancyGeoRedundant
//	AzureStorageRedundancyReadAccessGeoRedundant
type AzureStorageRedundancyInput interface {
	pulumi.Input

	ToAzureStorageRedundancyOutput() AzureStorageRedundancyOutput
	ToAzureStorageRedundancyOutputWithContext(context.Context) AzureStorageRedundancyOutput
}

var azureStorageRedundancyPtrType = reflect.TypeOf((**AzureStorageRedundancy)(nil)).Elem()

type AzureStorageRedundancyPtrInput interface {
	pulumi.Input

	ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput
	ToAzureStorageRedundancyPtrOutputWithContext(context.Context) AzureStorageRedundancyPtrOutput
}

type azureStorageRedundancyPtr string

func AzureStorageRedundancyPtr(v string) AzureStorageRedundancyPtrInput {
	return (*azureStorageRedundancyPtr)(&v)
}

func (*azureStorageRedundancyPtr) ElementType() reflect.Type {
	return azureStorageRedundancyPtrType
}

func (in *azureStorageRedundancyPtr) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return pulumi.ToOutput(in).(AzureStorageRedundancyPtrOutput)
}

func (in *azureStorageRedundancyPtr) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureStorageRedundancyPtrOutput)
}

type AzureVmFamily string

const (
	AzureVmFamilyUnknown       = AzureVmFamily("Unknown")
	AzureVmFamilyBasicA0A4     = AzureVmFamily("Basic_A0_A4")
	AzureVmFamilyStandardA0A7  = AzureVmFamily("Standard_A0_A7")
	AzureVmFamilyStandardA8A11 = AzureVmFamily("Standard_A8_A11")
	AzureVmFamilyAv2Series     = AzureVmFamily("Av2_series")
	AzureVmFamilyDSeries       = AzureVmFamily("D_series")
	AzureVmFamilyDv2Series     = AzureVmFamily("Dv2_series")
	AzureVmFamilyDSSeries      = AzureVmFamily("DS_series")
	AzureVmFamilyDSv2Series    = AzureVmFamily("DSv2_series")
	AzureVmFamilyFSeries       = AzureVmFamily("F_series")
	AzureVmFamilyFsSeries      = AzureVmFamily("Fs_series")
	AzureVmFamilyGSeries       = AzureVmFamily("G_series")
	AzureVmFamilyGSSeries      = AzureVmFamily("GS_series")
	AzureVmFamilyHSeries       = AzureVmFamily("H_series")
	AzureVmFamilyLsSeries      = AzureVmFamily("Ls_series")
	AzureVmFamilyDsv3Series    = AzureVmFamily("Dsv3_series")
	AzureVmFamilyDv3Series     = AzureVmFamily("Dv3_series")
	AzureVmFamilyFsv2Series    = AzureVmFamily("Fsv2_series")
	AzureVmFamilyEv3Series     = AzureVmFamily("Ev3_series")
	AzureVmFamilyEsv3Series    = AzureVmFamily("Esv3_series")
	AzureVmFamilyMSeries       = AzureVmFamily("M_series")
	AzureVmFamilyDCSeries      = AzureVmFamily("DC_Series")
	AzureVmFamilyLsv2Series    = AzureVmFamily("Lsv2_series")
	AzureVmFamilyEv4Series     = AzureVmFamily("Ev4_series")
	AzureVmFamilyEsv4Series    = AzureVmFamily("Esv4_series")
	AzureVmFamilyEdv4Series    = AzureVmFamily("Edv4_series")
	AzureVmFamilyEdsv4Series   = AzureVmFamily("Edsv4_series")
	AzureVmFamilyDv4Series     = AzureVmFamily("Dv4_series")
	AzureVmFamilyDsv4Series    = AzureVmFamily("Dsv4_series")
	AzureVmFamilyDdv4Series    = AzureVmFamily("Ddv4_series")
	AzureVmFamilyDdsv4Series   = AzureVmFamily("Ddsv4_series")
	AzureVmFamilyEasv4Series   = AzureVmFamily("Easv4_series")
	AzureVmFamilyDasv4Series   = AzureVmFamily("Dasv4_series")
	AzureVmFamilyMv2Series     = AzureVmFamily("Mv2_series")
	AzureVmFamilyEav4Series    = AzureVmFamily("Eav4_series")
	AzureVmFamilyDav4Series    = AzureVmFamily("Dav4_series")
	AzureVmFamilyMsv2Series    = AzureVmFamily("Msv2_series")
	AzureVmFamilyMdsv2Series   = AzureVmFamily("Mdsv2_series")
	AzureVmFamilyDv5Series     = AzureVmFamily("Dv5_series")
	AzureVmFamilyDsv5Series    = AzureVmFamily("Dsv5_series")
	AzureVmFamilyDdv5Series    = AzureVmFamily("Ddv5_series")
	AzureVmFamilyDdsv5Series   = AzureVmFamily("Ddsv5_series")
	AzureVmFamilyDasv5Series   = AzureVmFamily("Dasv5_series")
	AzureVmFamilyDadsv5Series  = AzureVmFamily("Dadsv5_series")
	AzureVmFamilyEv5Series     = AzureVmFamily("Ev5_series")
	AzureVmFamilyEsv5Series    = AzureVmFamily("Esv5_series")
	AzureVmFamilyEdv5Series    = AzureVmFamily("Edv5_series")
	AzureVmFamilyEdsv5Series   = AzureVmFamily("Edsv5_series")
	AzureVmFamilyEasv5Series   = AzureVmFamily("Easv5_series")
	AzureVmFamilyEadsv5Series  = AzureVmFamily("Eadsv5_series")
	AzureVmFamilyEbsv5Series   = AzureVmFamily("Ebsv5_series")
	AzureVmFamilyEbdsv5Series  = AzureVmFamily("Ebdsv5_series")
)

func (AzureVmFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmFamily)(nil)).Elem()
}

func (e AzureVmFamily) ToAzureVmFamilyOutput() AzureVmFamilyOutput {
	return pulumi.ToOutput(e).(AzureVmFamilyOutput)
}

func (e AzureVmFamily) ToAzureVmFamilyOutputWithContext(ctx context.Context) AzureVmFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureVmFamilyOutput)
}

func (e AzureVmFamily) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return e.ToAzureVmFamilyPtrOutputWithContext(context.Background())
}

func (e AzureVmFamily) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return AzureVmFamily(e).ToAzureVmFamilyOutputWithContext(ctx).ToAzureVmFamilyPtrOutputWithContext(ctx)
}

func (e AzureVmFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureVmFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureVmFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureVmFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureVmFamilyOutput struct{ *pulumi.OutputState }

func (AzureVmFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmFamily)(nil)).Elem()
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyOutput() AzureVmFamilyOutput {
	return o
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyOutputWithContext(ctx context.Context) AzureVmFamilyOutput {
	return o
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return o.ToAzureVmFamilyPtrOutputWithContext(context.Background())
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmFamily) *AzureVmFamily {
		return &v
	}).(AzureVmFamilyPtrOutput)
}

func (o AzureVmFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureVmFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureVmFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureVmFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureVmFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureVmFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureVmFamilyPtrOutput struct{ *pulumi.OutputState }

func (AzureVmFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmFamily)(nil)).Elem()
}

func (o AzureVmFamilyPtrOutput) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return o
}

func (o AzureVmFamilyPtrOutput) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return o
}

func (o AzureVmFamilyPtrOutput) Elem() AzureVmFamilyOutput {
	return o.ApplyT(func(v *AzureVmFamily) AzureVmFamily {
		if v != nil {
			return *v
		}
		var ret AzureVmFamily
		return ret
	}).(AzureVmFamilyOutput)
}

func (o AzureVmFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureVmFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureVmFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureVmFamilyInput is an input type that accepts values of the AzureVmFamily enum
// A concrete instance of `AzureVmFamilyInput` can be one of the following:
//
//	AzureVmFamilyUnknown
//	AzureVmFamilyBasicA0A4
//	AzureVmFamilyStandardA0A7
//	AzureVmFamilyStandardA8A11
//	AzureVmFamilyAv2Series
//	AzureVmFamilyDSeries
//	AzureVmFamilyDv2Series
//	AzureVmFamilyDSSeries
//	AzureVmFamilyDSv2Series
//	AzureVmFamilyFSeries
//	AzureVmFamilyFsSeries
//	AzureVmFamilyGSeries
//	AzureVmFamilyGSSeries
//	AzureVmFamilyHSeries
//	AzureVmFamilyLsSeries
//	AzureVmFamilyDsv3Series
//	AzureVmFamilyDv3Series
//	AzureVmFamilyFsv2Series
//	AzureVmFamilyEv3Series
//	AzureVmFamilyEsv3Series
//	AzureVmFamilyMSeries
//	AzureVmFamilyDCSeries
//	AzureVmFamilyLsv2Series
//	AzureVmFamilyEv4Series
//	AzureVmFamilyEsv4Series
//	AzureVmFamilyEdv4Series
//	AzureVmFamilyEdsv4Series
//	AzureVmFamilyDv4Series
//	AzureVmFamilyDsv4Series
//	AzureVmFamilyDdv4Series
//	AzureVmFamilyDdsv4Series
//	AzureVmFamilyEasv4Series
//	AzureVmFamilyDasv4Series
//	AzureVmFamilyMv2Series
//	AzureVmFamilyEav4Series
//	AzureVmFamilyDav4Series
//	AzureVmFamilyMsv2Series
//	AzureVmFamilyMdsv2Series
//	AzureVmFamilyDv5Series
//	AzureVmFamilyDsv5Series
//	AzureVmFamilyDdv5Series
//	AzureVmFamilyDdsv5Series
//	AzureVmFamilyDasv5Series
//	AzureVmFamilyDadsv5Series
//	AzureVmFamilyEv5Series
//	AzureVmFamilyEsv5Series
//	AzureVmFamilyEdv5Series
//	AzureVmFamilyEdsv5Series
//	AzureVmFamilyEasv5Series
//	AzureVmFamilyEadsv5Series
//	AzureVmFamilyEbsv5Series
//	AzureVmFamilyEbdsv5Series
type AzureVmFamilyInput interface {
	pulumi.Input

	ToAzureVmFamilyOutput() AzureVmFamilyOutput
	ToAzureVmFamilyOutputWithContext(context.Context) AzureVmFamilyOutput
}

var azureVmFamilyPtrType = reflect.TypeOf((**AzureVmFamily)(nil)).Elem()

type AzureVmFamilyPtrInput interface {
	pulumi.Input

	ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput
	ToAzureVmFamilyPtrOutputWithContext(context.Context) AzureVmFamilyPtrOutput
}

type azureVmFamilyPtr string

func AzureVmFamilyPtr(v string) AzureVmFamilyPtrInput {
	return (*azureVmFamilyPtr)(&v)
}

func (*azureVmFamilyPtr) ElementType() reflect.Type {
	return azureVmFamilyPtrType
}

func (in *azureVmFamilyPtr) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return pulumi.ToOutput(in).(AzureVmFamilyPtrOutput)
}

func (in *azureVmFamilyPtr) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureVmFamilyPtrOutput)
}

// Gets or sets the azure SQL compute tier.
type ComputeTier string

const (
	ComputeTierUnknown     = ComputeTier("Unknown")
	ComputeTierAutomatic   = ComputeTier("Automatic")
	ComputeTierProvisioned = ComputeTier("Provisioned")
	ComputeTierServerless  = ComputeTier("Serverless")
)

func (ComputeTier) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeTier)(nil)).Elem()
}

func (e ComputeTier) ToComputeTierOutput() ComputeTierOutput {
	return pulumi.ToOutput(e).(ComputeTierOutput)
}

func (e ComputeTier) ToComputeTierOutputWithContext(ctx context.Context) ComputeTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeTierOutput)
}

func (e ComputeTier) ToComputeTierPtrOutput() ComputeTierPtrOutput {
	return e.ToComputeTierPtrOutputWithContext(context.Background())
}

func (e ComputeTier) ToComputeTierPtrOutputWithContext(ctx context.Context) ComputeTierPtrOutput {
	return ComputeTier(e).ToComputeTierOutputWithContext(ctx).ToComputeTierPtrOutputWithContext(ctx)
}

func (e ComputeTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeTierOutput struct{ *pulumi.OutputState }

func (ComputeTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeTier)(nil)).Elem()
}

func (o ComputeTierOutput) ToComputeTierOutput() ComputeTierOutput {
	return o
}

func (o ComputeTierOutput) ToComputeTierOutputWithContext(ctx context.Context) ComputeTierOutput {
	return o
}

func (o ComputeTierOutput) ToComputeTierPtrOutput() ComputeTierPtrOutput {
	return o.ToComputeTierPtrOutputWithContext(context.Background())
}

func (o ComputeTierOutput) ToComputeTierPtrOutputWithContext(ctx context.Context) ComputeTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeTier) *ComputeTier {
		return &v
	}).(ComputeTierPtrOutput)
}

func (o ComputeTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeTierPtrOutput struct{ *pulumi.OutputState }

func (ComputeTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeTier)(nil)).Elem()
}

func (o ComputeTierPtrOutput) ToComputeTierPtrOutput() ComputeTierPtrOutput {
	return o
}

func (o ComputeTierPtrOutput) ToComputeTierPtrOutputWithContext(ctx context.Context) ComputeTierPtrOutput {
	return o
}

func (o ComputeTierPtrOutput) Elem() ComputeTierOutput {
	return o.ApplyT(func(v *ComputeTier) ComputeTier {
		if v != nil {
			return *v
		}
		var ret ComputeTier
		return ret
	}).(ComputeTierOutput)
}

func (o ComputeTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeTierInput is an input type that accepts values of the ComputeTier enum
// A concrete instance of `ComputeTierInput` can be one of the following:
//
//	ComputeTierUnknown
//	ComputeTierAutomatic
//	ComputeTierProvisioned
//	ComputeTierServerless
type ComputeTierInput interface {
	pulumi.Input

	ToComputeTierOutput() ComputeTierOutput
	ToComputeTierOutputWithContext(context.Context) ComputeTierOutput
}

var computeTierPtrType = reflect.TypeOf((**ComputeTier)(nil)).Elem()

type ComputeTierPtrInput interface {
	pulumi.Input

	ToComputeTierPtrOutput() ComputeTierPtrOutput
	ToComputeTierPtrOutputWithContext(context.Context) ComputeTierPtrOutput
}

type computeTierPtr string

func ComputeTierPtr(v string) ComputeTierPtrInput {
	return (*computeTierPtr)(&v)
}

func (*computeTierPtr) ElementType() reflect.Type {
	return computeTierPtrType
}

func (in *computeTierPtr) ToComputeTierPtrOutput() ComputeTierPtrOutput {
	return pulumi.ToOutput(in).(ComputeTierPtrOutput)
}

func (in *computeTierPtr) ToComputeTierPtrOutputWithContext(ctx context.Context) ComputeTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeTierPtrOutput)
}

// Gets or sets user configurable setting to display the environment type.
type EnvironmentType string

const (
	EnvironmentTypeProduction = EnvironmentType("Production")
	EnvironmentTypeTest       = EnvironmentType("Test")
)

func (EnvironmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (e EnvironmentType) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return pulumi.ToOutput(e).(EnvironmentTypeOutput)
}

func (e EnvironmentType) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentTypeOutput)
}

func (e EnvironmentType) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return e.ToEnvironmentTypePtrOutputWithContext(context.Background())
}

func (e EnvironmentType) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return EnvironmentType(e).ToEnvironmentTypeOutputWithContext(ctx).ToEnvironmentTypePtrOutputWithContext(ctx)
}

func (e EnvironmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return o.ToEnvironmentTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeOutput) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentType) *EnvironmentType {
		return &v
	}).(EnvironmentTypePtrOutput)
}

func (o EnvironmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypePtrOutput) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return o
}

func (o EnvironmentTypePtrOutput) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return o
}

func (o EnvironmentTypePtrOutput) Elem() EnvironmentTypeOutput {
	return o.ApplyT(func(v *EnvironmentType) EnvironmentType {
		if v != nil {
			return *v
		}
		var ret EnvironmentType
		return ret
	}).(EnvironmentTypeOutput)
}

func (o EnvironmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentTypeInput is an input type that accepts values of the EnvironmentType enum
// A concrete instance of `EnvironmentTypeInput` can be one of the following:
//
//	EnvironmentTypeProduction
//	EnvironmentTypeTest
type EnvironmentTypeInput interface {
	pulumi.Input

	ToEnvironmentTypeOutput() EnvironmentTypeOutput
	ToEnvironmentTypeOutputWithContext(context.Context) EnvironmentTypeOutput
}

var environmentTypePtrType = reflect.TypeOf((**EnvironmentType)(nil)).Elem()

type EnvironmentTypePtrInput interface {
	pulumi.Input

	ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput
	ToEnvironmentTypePtrOutputWithContext(context.Context) EnvironmentTypePtrOutput
}

type environmentTypePtr string

func EnvironmentTypePtr(v string) EnvironmentTypePtrInput {
	return (*environmentTypePtr)(&v)
}

func (*environmentTypePtr) ElementType() reflect.Type {
	return environmentTypePtrType
}

func (in *environmentTypePtr) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentTypePtrOutput)
}

func (in *environmentTypePtr) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentTypePtrOutput)
}

// Failures to tolerate and RAID level in a common property.
type FttAndRaidLevel string

const (
	FttAndRaidLevelUnknown   = FttAndRaidLevel("Unknown")
	FttAndRaidLevelFtt1Raid1 = FttAndRaidLevel("Ftt1Raid1")
	FttAndRaidLevelFtt1Raid5 = FttAndRaidLevel("Ftt1Raid5")
	FttAndRaidLevelFtt2Raid1 = FttAndRaidLevel("Ftt2Raid1")
	FttAndRaidLevelFtt2Raid6 = FttAndRaidLevel("Ftt2Raid6")
	FttAndRaidLevelFtt3Raid1 = FttAndRaidLevel("Ftt3Raid1")
)

func (FttAndRaidLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*FttAndRaidLevel)(nil)).Elem()
}

func (e FttAndRaidLevel) ToFttAndRaidLevelOutput() FttAndRaidLevelOutput {
	return pulumi.ToOutput(e).(FttAndRaidLevelOutput)
}

func (e FttAndRaidLevel) ToFttAndRaidLevelOutputWithContext(ctx context.Context) FttAndRaidLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FttAndRaidLevelOutput)
}

func (e FttAndRaidLevel) ToFttAndRaidLevelPtrOutput() FttAndRaidLevelPtrOutput {
	return e.ToFttAndRaidLevelPtrOutputWithContext(context.Background())
}

func (e FttAndRaidLevel) ToFttAndRaidLevelPtrOutputWithContext(ctx context.Context) FttAndRaidLevelPtrOutput {
	return FttAndRaidLevel(e).ToFttAndRaidLevelOutputWithContext(ctx).ToFttAndRaidLevelPtrOutputWithContext(ctx)
}

func (e FttAndRaidLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FttAndRaidLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FttAndRaidLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FttAndRaidLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FttAndRaidLevelOutput struct{ *pulumi.OutputState }

func (FttAndRaidLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FttAndRaidLevel)(nil)).Elem()
}

func (o FttAndRaidLevelOutput) ToFttAndRaidLevelOutput() FttAndRaidLevelOutput {
	return o
}

func (o FttAndRaidLevelOutput) ToFttAndRaidLevelOutputWithContext(ctx context.Context) FttAndRaidLevelOutput {
	return o
}

func (o FttAndRaidLevelOutput) ToFttAndRaidLevelPtrOutput() FttAndRaidLevelPtrOutput {
	return o.ToFttAndRaidLevelPtrOutputWithContext(context.Background())
}

func (o FttAndRaidLevelOutput) ToFttAndRaidLevelPtrOutputWithContext(ctx context.Context) FttAndRaidLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FttAndRaidLevel) *FttAndRaidLevel {
		return &v
	}).(FttAndRaidLevelPtrOutput)
}

func (o FttAndRaidLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FttAndRaidLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FttAndRaidLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FttAndRaidLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FttAndRaidLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FttAndRaidLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FttAndRaidLevelPtrOutput struct{ *pulumi.OutputState }

func (FttAndRaidLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FttAndRaidLevel)(nil)).Elem()
}

func (o FttAndRaidLevelPtrOutput) ToFttAndRaidLevelPtrOutput() FttAndRaidLevelPtrOutput {
	return o
}

func (o FttAndRaidLevelPtrOutput) ToFttAndRaidLevelPtrOutputWithContext(ctx context.Context) FttAndRaidLevelPtrOutput {
	return o
}

func (o FttAndRaidLevelPtrOutput) Elem() FttAndRaidLevelOutput {
	return o.ApplyT(func(v *FttAndRaidLevel) FttAndRaidLevel {
		if v != nil {
			return *v
		}
		var ret FttAndRaidLevel
		return ret
	}).(FttAndRaidLevelOutput)
}

func (o FttAndRaidLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FttAndRaidLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FttAndRaidLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FttAndRaidLevelInput is an input type that accepts values of the FttAndRaidLevel enum
// A concrete instance of `FttAndRaidLevelInput` can be one of the following:
//
//	FttAndRaidLevelUnknown
//	FttAndRaidLevelFtt1Raid1
//	FttAndRaidLevelFtt1Raid5
//	FttAndRaidLevelFtt2Raid1
//	FttAndRaidLevelFtt2Raid6
//	FttAndRaidLevelFtt3Raid1
type FttAndRaidLevelInput interface {
	pulumi.Input

	ToFttAndRaidLevelOutput() FttAndRaidLevelOutput
	ToFttAndRaidLevelOutputWithContext(context.Context) FttAndRaidLevelOutput
}

var fttAndRaidLevelPtrType = reflect.TypeOf((**FttAndRaidLevel)(nil)).Elem()

type FttAndRaidLevelPtrInput interface {
	pulumi.Input

	ToFttAndRaidLevelPtrOutput() FttAndRaidLevelPtrOutput
	ToFttAndRaidLevelPtrOutputWithContext(context.Context) FttAndRaidLevelPtrOutput
}

type fttAndRaidLevelPtr string

func FttAndRaidLevelPtr(v string) FttAndRaidLevelPtrInput {
	return (*fttAndRaidLevelPtr)(&v)
}

func (*fttAndRaidLevelPtr) ElementType() reflect.Type {
	return fttAndRaidLevelPtrType
}

func (in *fttAndRaidLevelPtr) ToFttAndRaidLevelPtrOutput() FttAndRaidLevelPtrOutput {
	return pulumi.ToOutput(in).(FttAndRaidLevelPtrOutput)
}

func (in *fttAndRaidLevelPtr) ToFttAndRaidLevelPtrOutputWithContext(ctx context.Context) FttAndRaidLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FttAndRaidLevelPtrOutput)
}

// Gets the group type for the assessment.
type GroupType string

const (
	GroupTypeDefault = GroupType("Default")
	GroupTypeImport  = GroupType("Import")
)

func (GroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupType)(nil)).Elem()
}

func (e GroupType) ToGroupTypeOutput() GroupTypeOutput {
	return pulumi.ToOutput(e).(GroupTypeOutput)
}

func (e GroupType) ToGroupTypeOutputWithContext(ctx context.Context) GroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GroupTypeOutput)
}

func (e GroupType) ToGroupTypePtrOutput() GroupTypePtrOutput {
	return e.ToGroupTypePtrOutputWithContext(context.Background())
}

func (e GroupType) ToGroupTypePtrOutputWithContext(ctx context.Context) GroupTypePtrOutput {
	return GroupType(e).ToGroupTypeOutputWithContext(ctx).ToGroupTypePtrOutputWithContext(ctx)
}

func (e GroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GroupTypeOutput struct{ *pulumi.OutputState }

func (GroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupType)(nil)).Elem()
}

func (o GroupTypeOutput) ToGroupTypeOutput() GroupTypeOutput {
	return o
}

func (o GroupTypeOutput) ToGroupTypeOutputWithContext(ctx context.Context) GroupTypeOutput {
	return o
}

func (o GroupTypeOutput) ToGroupTypePtrOutput() GroupTypePtrOutput {
	return o.ToGroupTypePtrOutputWithContext(context.Background())
}

func (o GroupTypeOutput) ToGroupTypePtrOutputWithContext(ctx context.Context) GroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupType) *GroupType {
		return &v
	}).(GroupTypePtrOutput)
}

func (o GroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GroupTypePtrOutput struct{ *pulumi.OutputState }

func (GroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupType)(nil)).Elem()
}

func (o GroupTypePtrOutput) ToGroupTypePtrOutput() GroupTypePtrOutput {
	return o
}

func (o GroupTypePtrOutput) ToGroupTypePtrOutputWithContext(ctx context.Context) GroupTypePtrOutput {
	return o
}

func (o GroupTypePtrOutput) Elem() GroupTypeOutput {
	return o.ApplyT(func(v *GroupType) GroupType {
		if v != nil {
			return *v
		}
		var ret GroupType
		return ret
	}).(GroupTypeOutput)
}

func (o GroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GroupTypeInput is an input type that accepts values of the GroupType enum
// A concrete instance of `GroupTypeInput` can be one of the following:
//
//	GroupTypeDefault
//	GroupTypeImport
type GroupTypeInput interface {
	pulumi.Input

	ToGroupTypeOutput() GroupTypeOutput
	ToGroupTypeOutputWithContext(context.Context) GroupTypeOutput
}

var groupTypePtrType = reflect.TypeOf((**GroupType)(nil)).Elem()

type GroupTypePtrInput interface {
	pulumi.Input

	ToGroupTypePtrOutput() GroupTypePtrOutput
	ToGroupTypePtrOutputWithContext(context.Context) GroupTypePtrOutput
}

type groupTypePtr string

func GroupTypePtr(v string) GroupTypePtrInput {
	return (*groupTypePtr)(&v)
}

func (*groupTypePtr) ElementType() reflect.Type {
	return groupTypePtrType
}

func (in *groupTypePtr) ToGroupTypePtrOutput() GroupTypePtrOutput {
	return pulumi.ToOutput(in).(GroupTypePtrOutput)
}

func (in *groupTypePtr) ToGroupTypePtrOutputWithContext(ctx context.Context) GroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GroupTypePtrOutput)
}

// Gets or sets user preference indicating intent of multi-subnet configuration.
type MultiSubnetIntent string

const (
	MultiSubnetIntentNone             = MultiSubnetIntent("None")
	MultiSubnetIntentHighAvailability = MultiSubnetIntent("HighAvailability")
	MultiSubnetIntentDisasterRecovery = MultiSubnetIntent("DisasterRecovery")
)

func (MultiSubnetIntent) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiSubnetIntent)(nil)).Elem()
}

func (e MultiSubnetIntent) ToMultiSubnetIntentOutput() MultiSubnetIntentOutput {
	return pulumi.ToOutput(e).(MultiSubnetIntentOutput)
}

func (e MultiSubnetIntent) ToMultiSubnetIntentOutputWithContext(ctx context.Context) MultiSubnetIntentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MultiSubnetIntentOutput)
}

func (e MultiSubnetIntent) ToMultiSubnetIntentPtrOutput() MultiSubnetIntentPtrOutput {
	return e.ToMultiSubnetIntentPtrOutputWithContext(context.Background())
}

func (e MultiSubnetIntent) ToMultiSubnetIntentPtrOutputWithContext(ctx context.Context) MultiSubnetIntentPtrOutput {
	return MultiSubnetIntent(e).ToMultiSubnetIntentOutputWithContext(ctx).ToMultiSubnetIntentPtrOutputWithContext(ctx)
}

func (e MultiSubnetIntent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiSubnetIntent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiSubnetIntent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MultiSubnetIntent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MultiSubnetIntentOutput struct{ *pulumi.OutputState }

func (MultiSubnetIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiSubnetIntent)(nil)).Elem()
}

func (o MultiSubnetIntentOutput) ToMultiSubnetIntentOutput() MultiSubnetIntentOutput {
	return o
}

func (o MultiSubnetIntentOutput) ToMultiSubnetIntentOutputWithContext(ctx context.Context) MultiSubnetIntentOutput {
	return o
}

func (o MultiSubnetIntentOutput) ToMultiSubnetIntentPtrOutput() MultiSubnetIntentPtrOutput {
	return o.ToMultiSubnetIntentPtrOutputWithContext(context.Background())
}

func (o MultiSubnetIntentOutput) ToMultiSubnetIntentPtrOutputWithContext(ctx context.Context) MultiSubnetIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiSubnetIntent) *MultiSubnetIntent {
		return &v
	}).(MultiSubnetIntentPtrOutput)
}

func (o MultiSubnetIntentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiSubnetIntentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiSubnetIntent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiSubnetIntentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiSubnetIntentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiSubnetIntent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiSubnetIntentPtrOutput struct{ *pulumi.OutputState }

func (MultiSubnetIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiSubnetIntent)(nil)).Elem()
}

func (o MultiSubnetIntentPtrOutput) ToMultiSubnetIntentPtrOutput() MultiSubnetIntentPtrOutput {
	return o
}

func (o MultiSubnetIntentPtrOutput) ToMultiSubnetIntentPtrOutputWithContext(ctx context.Context) MultiSubnetIntentPtrOutput {
	return o
}

func (o MultiSubnetIntentPtrOutput) Elem() MultiSubnetIntentOutput {
	return o.ApplyT(func(v *MultiSubnetIntent) MultiSubnetIntent {
		if v != nil {
			return *v
		}
		var ret MultiSubnetIntent
		return ret
	}).(MultiSubnetIntentOutput)
}

func (o MultiSubnetIntentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiSubnetIntentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiSubnetIntent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MultiSubnetIntentInput is an input type that accepts values of the MultiSubnetIntent enum
// A concrete instance of `MultiSubnetIntentInput` can be one of the following:
//
//	MultiSubnetIntentNone
//	MultiSubnetIntentHighAvailability
//	MultiSubnetIntentDisasterRecovery
type MultiSubnetIntentInput interface {
	pulumi.Input

	ToMultiSubnetIntentOutput() MultiSubnetIntentOutput
	ToMultiSubnetIntentOutputWithContext(context.Context) MultiSubnetIntentOutput
}

var multiSubnetIntentPtrType = reflect.TypeOf((**MultiSubnetIntent)(nil)).Elem()

type MultiSubnetIntentPtrInput interface {
	pulumi.Input

	ToMultiSubnetIntentPtrOutput() MultiSubnetIntentPtrOutput
	ToMultiSubnetIntentPtrOutputWithContext(context.Context) MultiSubnetIntentPtrOutput
}

type multiSubnetIntentPtr string

func MultiSubnetIntentPtr(v string) MultiSubnetIntentPtrInput {
	return (*multiSubnetIntentPtr)(&v)
}

func (*multiSubnetIntentPtr) ElementType() reflect.Type {
	return multiSubnetIntentPtrType
}

func (in *multiSubnetIntentPtr) ToMultiSubnetIntentPtrOutput() MultiSubnetIntentPtrOutput {
	return pulumi.ToOutput(in).(MultiSubnetIntentPtrOutput)
}

func (in *multiSubnetIntentPtr) ToMultiSubnetIntentPtrOutputWithContext(ctx context.Context) MultiSubnetIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MultiSubnetIntentPtrOutput)
}

// Gets or sets SQL optimization logic.
type OptimizationLogic string

const (
	OptimizationLogicMinimizeCost          = OptimizationLogic("MinimizeCost")
	OptimizationLogicModernizeToPaaS       = OptimizationLogic("ModernizeToPaaS")
	OptimizationLogicModernizeToAzureSqlMi = OptimizationLogic("ModernizeToAzureSqlMi")
	OptimizationLogicModernizeToAzureSqlDb = OptimizationLogic("ModernizeToAzureSqlDb")
)

func (OptimizationLogic) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizationLogic)(nil)).Elem()
}

func (e OptimizationLogic) ToOptimizationLogicOutput() OptimizationLogicOutput {
	return pulumi.ToOutput(e).(OptimizationLogicOutput)
}

func (e OptimizationLogic) ToOptimizationLogicOutputWithContext(ctx context.Context) OptimizationLogicOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OptimizationLogicOutput)
}

func (e OptimizationLogic) ToOptimizationLogicPtrOutput() OptimizationLogicPtrOutput {
	return e.ToOptimizationLogicPtrOutputWithContext(context.Background())
}

func (e OptimizationLogic) ToOptimizationLogicPtrOutputWithContext(ctx context.Context) OptimizationLogicPtrOutput {
	return OptimizationLogic(e).ToOptimizationLogicOutputWithContext(ctx).ToOptimizationLogicPtrOutputWithContext(ctx)
}

func (e OptimizationLogic) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OptimizationLogic) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OptimizationLogic) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OptimizationLogic) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OptimizationLogicOutput struct{ *pulumi.OutputState }

func (OptimizationLogicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizationLogic)(nil)).Elem()
}

func (o OptimizationLogicOutput) ToOptimizationLogicOutput() OptimizationLogicOutput {
	return o
}

func (o OptimizationLogicOutput) ToOptimizationLogicOutputWithContext(ctx context.Context) OptimizationLogicOutput {
	return o
}

func (o OptimizationLogicOutput) ToOptimizationLogicPtrOutput() OptimizationLogicPtrOutput {
	return o.ToOptimizationLogicPtrOutputWithContext(context.Background())
}

func (o OptimizationLogicOutput) ToOptimizationLogicPtrOutputWithContext(ctx context.Context) OptimizationLogicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OptimizationLogic) *OptimizationLogic {
		return &v
	}).(OptimizationLogicPtrOutput)
}

func (o OptimizationLogicOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OptimizationLogicOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OptimizationLogic) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OptimizationLogicOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OptimizationLogicOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OptimizationLogic) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OptimizationLogicPtrOutput struct{ *pulumi.OutputState }

func (OptimizationLogicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizationLogic)(nil)).Elem()
}

func (o OptimizationLogicPtrOutput) ToOptimizationLogicPtrOutput() OptimizationLogicPtrOutput {
	return o
}

func (o OptimizationLogicPtrOutput) ToOptimizationLogicPtrOutputWithContext(ctx context.Context) OptimizationLogicPtrOutput {
	return o
}

func (o OptimizationLogicPtrOutput) Elem() OptimizationLogicOutput {
	return o.ApplyT(func(v *OptimizationLogic) OptimizationLogic {
		if v != nil {
			return *v
		}
		var ret OptimizationLogic
		return ret
	}).(OptimizationLogicOutput)
}

func (o OptimizationLogicPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OptimizationLogicPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OptimizationLogic) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OptimizationLogicInput is an input type that accepts values of the OptimizationLogic enum
// A concrete instance of `OptimizationLogicInput` can be one of the following:
//
//	OptimizationLogicMinimizeCost
//	OptimizationLogicModernizeToPaaS
//	OptimizationLogicModernizeToAzureSqlMi
//	OptimizationLogicModernizeToAzureSqlDb
type OptimizationLogicInput interface {
	pulumi.Input

	ToOptimizationLogicOutput() OptimizationLogicOutput
	ToOptimizationLogicOutputWithContext(context.Context) OptimizationLogicOutput
}

var optimizationLogicPtrType = reflect.TypeOf((**OptimizationLogic)(nil)).Elem()

type OptimizationLogicPtrInput interface {
	pulumi.Input

	ToOptimizationLogicPtrOutput() OptimizationLogicPtrOutput
	ToOptimizationLogicPtrOutputWithContext(context.Context) OptimizationLogicPtrOutput
}

type optimizationLogicPtr string

func OptimizationLogicPtr(v string) OptimizationLogicPtrInput {
	return (*optimizationLogicPtr)(&v)
}

func (*optimizationLogicPtr) ElementType() reflect.Type {
	return optimizationLogicPtrType
}

func (in *optimizationLogicPtr) ToOptimizationLogicPtrOutput() OptimizationLogicPtrOutput {
	return pulumi.ToOutput(in).(OptimizationLogicPtrOutput)
}

func (in *optimizationLogicPtr) ToOptimizationLogicPtrOutputWithContext(ctx context.Context) OptimizationLogicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OptimizationLogicPtrOutput)
}

// Gets or sets user configurable setting to display the azure hybrid use benefit.
type OsLicense string

const (
	OsLicenseUnknown = OsLicense("Unknown")
	OsLicenseYes     = OsLicense("Yes")
	OsLicenseNo      = OsLicense("No")
)

func (OsLicense) ElementType() reflect.Type {
	return reflect.TypeOf((*OsLicense)(nil)).Elem()
}

func (e OsLicense) ToOsLicenseOutput() OsLicenseOutput {
	return pulumi.ToOutput(e).(OsLicenseOutput)
}

func (e OsLicense) ToOsLicenseOutputWithContext(ctx context.Context) OsLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsLicenseOutput)
}

func (e OsLicense) ToOsLicensePtrOutput() OsLicensePtrOutput {
	return e.ToOsLicensePtrOutputWithContext(context.Background())
}

func (e OsLicense) ToOsLicensePtrOutputWithContext(ctx context.Context) OsLicensePtrOutput {
	return OsLicense(e).ToOsLicenseOutputWithContext(ctx).ToOsLicensePtrOutputWithContext(ctx)
}

func (e OsLicense) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsLicense) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsLicense) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsLicense) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsLicenseOutput struct{ *pulumi.OutputState }

func (OsLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsLicense)(nil)).Elem()
}

func (o OsLicenseOutput) ToOsLicenseOutput() OsLicenseOutput {
	return o
}

func (o OsLicenseOutput) ToOsLicenseOutputWithContext(ctx context.Context) OsLicenseOutput {
	return o
}

func (o OsLicenseOutput) ToOsLicensePtrOutput() OsLicensePtrOutput {
	return o.ToOsLicensePtrOutputWithContext(context.Background())
}

func (o OsLicenseOutput) ToOsLicensePtrOutputWithContext(ctx context.Context) OsLicensePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsLicense) *OsLicense {
		return &v
	}).(OsLicensePtrOutput)
}

func (o OsLicenseOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsLicenseOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsLicense) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsLicenseOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsLicenseOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsLicense) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsLicensePtrOutput struct{ *pulumi.OutputState }

func (OsLicensePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsLicense)(nil)).Elem()
}

func (o OsLicensePtrOutput) ToOsLicensePtrOutput() OsLicensePtrOutput {
	return o
}

func (o OsLicensePtrOutput) ToOsLicensePtrOutputWithContext(ctx context.Context) OsLicensePtrOutput {
	return o
}

func (o OsLicensePtrOutput) Elem() OsLicenseOutput {
	return o.ApplyT(func(v *OsLicense) OsLicense {
		if v != nil {
			return *v
		}
		var ret OsLicense
		return ret
	}).(OsLicenseOutput)
}

func (o OsLicensePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsLicensePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsLicense) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsLicenseInput is an input type that accepts values of the OsLicense enum
// A concrete instance of `OsLicenseInput` can be one of the following:
//
//	OsLicenseUnknown
//	OsLicenseYes
//	OsLicenseNo
type OsLicenseInput interface {
	pulumi.Input

	ToOsLicenseOutput() OsLicenseOutput
	ToOsLicenseOutputWithContext(context.Context) OsLicenseOutput
}

var osLicensePtrType = reflect.TypeOf((**OsLicense)(nil)).Elem()

type OsLicensePtrInput interface {
	pulumi.Input

	ToOsLicensePtrOutput() OsLicensePtrOutput
	ToOsLicensePtrOutputWithContext(context.Context) OsLicensePtrOutput
}

type osLicensePtr string

func OsLicensePtr(v string) OsLicensePtrInput {
	return (*osLicensePtr)(&v)
}

func (*osLicensePtr) ElementType() reflect.Type {
	return osLicensePtrType
}

func (in *osLicensePtr) ToOsLicensePtrOutput() OsLicensePtrOutput {
	return pulumi.ToOutput(in).(OsLicensePtrOutput)
}

func (in *osLicensePtr) ToOsLicensePtrOutputWithContext(ctx context.Context) OsLicensePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsLicensePtrOutput)
}

// Percentile of the utilization data values to be considered while assessing
// machines.
type Percentile string

const (
	PercentilePercentile50 = Percentile("Percentile50")
	PercentilePercentile90 = Percentile("Percentile90")
	PercentilePercentile95 = Percentile("Percentile95")
	PercentilePercentile99 = Percentile("Percentile99")
)

func (Percentile) ElementType() reflect.Type {
	return reflect.TypeOf((*Percentile)(nil)).Elem()
}

func (e Percentile) ToPercentileOutput() PercentileOutput {
	return pulumi.ToOutput(e).(PercentileOutput)
}

func (e Percentile) ToPercentileOutputWithContext(ctx context.Context) PercentileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PercentileOutput)
}

func (e Percentile) ToPercentilePtrOutput() PercentilePtrOutput {
	return e.ToPercentilePtrOutputWithContext(context.Background())
}

func (e Percentile) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return Percentile(e).ToPercentileOutputWithContext(ctx).ToPercentilePtrOutputWithContext(ctx)
}

func (e Percentile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Percentile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Percentile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Percentile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PercentileOutput struct{ *pulumi.OutputState }

func (PercentileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Percentile)(nil)).Elem()
}

func (o PercentileOutput) ToPercentileOutput() PercentileOutput {
	return o
}

func (o PercentileOutput) ToPercentileOutputWithContext(ctx context.Context) PercentileOutput {
	return o
}

func (o PercentileOutput) ToPercentilePtrOutput() PercentilePtrOutput {
	return o.ToPercentilePtrOutputWithContext(context.Background())
}

func (o PercentileOutput) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Percentile) *Percentile {
		return &v
	}).(PercentilePtrOutput)
}

func (o PercentileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PercentileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Percentile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PercentileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PercentileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Percentile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PercentilePtrOutput struct{ *pulumi.OutputState }

func (PercentilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Percentile)(nil)).Elem()
}

func (o PercentilePtrOutput) ToPercentilePtrOutput() PercentilePtrOutput {
	return o
}

func (o PercentilePtrOutput) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return o
}

func (o PercentilePtrOutput) Elem() PercentileOutput {
	return o.ApplyT(func(v *Percentile) Percentile {
		if v != nil {
			return *v
		}
		var ret Percentile
		return ret
	}).(PercentileOutput)
}

func (o PercentilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PercentilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Percentile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PercentileInput is an input type that accepts values of the Percentile enum
// A concrete instance of `PercentileInput` can be one of the following:
//
//	PercentilePercentile50
//	PercentilePercentile90
//	PercentilePercentile95
//	PercentilePercentile99
type PercentileInput interface {
	pulumi.Input

	ToPercentileOutput() PercentileOutput
	ToPercentileOutputWithContext(context.Context) PercentileOutput
}

var percentilePtrType = reflect.TypeOf((**Percentile)(nil)).Elem()

type PercentilePtrInput interface {
	pulumi.Input

	ToPercentilePtrOutput() PercentilePtrOutput
	ToPercentilePtrOutputWithContext(context.Context) PercentilePtrOutput
}

type percentilePtr string

func PercentilePtr(v string) PercentilePtrInput {
	return (*percentilePtr)(&v)
}

func (*percentilePtr) ElementType() reflect.Type {
	return percentilePtrType
}

func (in *percentilePtr) ToPercentilePtrOutput() PercentilePtrOutput {
	return pulumi.ToOutput(in).(PercentilePtrOutput)
}

func (in *percentilePtr) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PercentilePtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts values of the PrivateEndpointServiceConnectionStatus enum
// A concrete instance of `PrivateEndpointServiceConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointServiceConnectionStatusPending
//	PrivateEndpointServiceConnectionStatusApproved
//	PrivateEndpointServiceConnectionStatusRejected
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

// Assessment project status.
type ProjectStatus string

const (
	// Active Status.
	ProjectStatusActive = ProjectStatus("Active")
	// Inactive Status.
	ProjectStatusInactive = ProjectStatus("Inactive")
)

func (ProjectStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatus)(nil)).Elem()
}

func (e ProjectStatus) ToProjectStatusOutput() ProjectStatusOutput {
	return pulumi.ToOutput(e).(ProjectStatusOutput)
}

func (e ProjectStatus) ToProjectStatusOutputWithContext(ctx context.Context) ProjectStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProjectStatusOutput)
}

func (e ProjectStatus) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return e.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (e ProjectStatus) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return ProjectStatus(e).ToProjectStatusOutputWithContext(ctx).ToProjectStatusPtrOutputWithContext(ctx)
}

func (e ProjectStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProjectStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProjectStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProjectStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProjectStatusOutput struct{ *pulumi.OutputState }

func (ProjectStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatus)(nil)).Elem()
}

func (o ProjectStatusOutput) ToProjectStatusOutput() ProjectStatusOutput {
	return o
}

func (o ProjectStatusOutput) ToProjectStatusOutputWithContext(ctx context.Context) ProjectStatusOutput {
	return o
}

func (o ProjectStatusOutput) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return o.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatus) *ProjectStatus {
		return &v
	}).(ProjectStatusPtrOutput)
}

func (o ProjectStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProjectStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProjectStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProjectStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProjectStatusPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatus)(nil)).Elem()
}

func (o ProjectStatusPtrOutput) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return o
}

func (o ProjectStatusPtrOutput) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return o
}

func (o ProjectStatusPtrOutput) Elem() ProjectStatusOutput {
	return o.ApplyT(func(v *ProjectStatus) ProjectStatus {
		if v != nil {
			return *v
		}
		var ret ProjectStatus
		return ret
	}).(ProjectStatusOutput)
}

func (o ProjectStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProjectStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProjectStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProjectStatusInput is an input type that accepts values of the ProjectStatus enum
// A concrete instance of `ProjectStatusInput` can be one of the following:
//
//	ProjectStatusActive
//	ProjectStatusInactive
type ProjectStatusInput interface {
	pulumi.Input

	ToProjectStatusOutput() ProjectStatusOutput
	ToProjectStatusOutputWithContext(context.Context) ProjectStatusOutput
}

var projectStatusPtrType = reflect.TypeOf((**ProjectStatus)(nil)).Elem()

type ProjectStatusPtrInput interface {
	pulumi.Input

	ToProjectStatusPtrOutput() ProjectStatusPtrOutput
	ToProjectStatusPtrOutputWithContext(context.Context) ProjectStatusPtrOutput
}

type projectStatusPtr string

func ProjectStatusPtr(v string) ProjectStatusPtrInput {
	return (*projectStatusPtr)(&v)
}

func (*projectStatusPtr) ElementType() reflect.Type {
	return projectStatusPtrType
}

func (in *projectStatusPtr) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return pulumi.ToOutput(in).(ProjectStatusPtrOutput)
}

func (in *projectStatusPtr) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProjectStatusPtrOutput)
}

// The status of the last operation.
type ProvisioningState string

const (
	// Resource has been created.
	ProvisioningStateSucceeded = ProvisioningState("Succeeded")
	// Resource creation failed.
	ProvisioningStateFailed = ProvisioningState("Failed")
	// Resource creation was canceled.
	ProvisioningStateCanceled = ProvisioningState("Canceled")
	// Resource is being Provisioned.
	ProvisioningStateProvisioning = ProvisioningState("Provisioning")
	// Resource is being Updated.
	ProvisioningStateUpdating = ProvisioningState("Updating")
	// Resource is being Deleted.
	ProvisioningStateDeleting = ProvisioningState("Deleting")
	// Resource is being Accepted.
	ProvisioningStateAccepted = ProvisioningState("Accepted")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (e ProvisioningState) ToProvisioningStateOutput() ProvisioningStateOutput {
	return pulumi.ToOutput(e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return e.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return ProvisioningState(e).ToProvisioningStateOutputWithContext(ctx).ToProvisioningStatePtrOutputWithContext(ctx)
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProvisioningStateOutput struct{ *pulumi.OutputState }

func (ProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStateOutput) ToProvisioningStateOutput() ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningState) *ProvisioningState {
		return &v
	}).(ProvisioningStatePtrOutput)
}

func (o ProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) Elem() ProvisioningStateOutput {
	return o.ApplyT(func(v *ProvisioningState) ProvisioningState {
		if v != nil {
			return *v
		}
		var ret ProvisioningState
		return ret
	}).(ProvisioningStateOutput)
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProvisioningStateInput is an input type that accepts values of the ProvisioningState enum
// A concrete instance of `ProvisioningStateInput` can be one of the following:
//
//	ProvisioningStateSucceeded
//	ProvisioningStateFailed
//	ProvisioningStateCanceled
//	ProvisioningStateProvisioning
//	ProvisioningStateUpdating
//	ProvisioningStateDeleting
//	ProvisioningStateAccepted
type ProvisioningStateInput interface {
	pulumi.Input

	ToProvisioningStateOutput() ProvisioningStateOutput
	ToProvisioningStateOutputWithContext(context.Context) ProvisioningStateOutput
}

var provisioningStatePtrType = reflect.TypeOf((**ProvisioningState)(nil)).Elem()

type ProvisioningStatePtrInput interface {
	pulumi.Input

	ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput
	ToProvisioningStatePtrOutputWithContext(context.Context) ProvisioningStatePtrOutput
}

type provisioningStatePtr string

func ProvisioningStatePtr(v string) ProvisioningStatePtrInput {
	return (*provisioningStatePtr)(&v)
}

func (*provisioningStatePtr) ElementType() reflect.Type {
	return provisioningStatePtrType
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProvisioningStatePtrOutput)
}

// SQL server license.
type SqlServerLicense string

const (
	SqlServerLicenseUnknown = SqlServerLicense("Unknown")
	SqlServerLicenseYes     = SqlServerLicense("Yes")
	SqlServerLicenseNo      = SqlServerLicense("No")
)

func (SqlServerLicense) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLicense)(nil)).Elem()
}

func (e SqlServerLicense) ToSqlServerLicenseOutput() SqlServerLicenseOutput {
	return pulumi.ToOutput(e).(SqlServerLicenseOutput)
}

func (e SqlServerLicense) ToSqlServerLicenseOutputWithContext(ctx context.Context) SqlServerLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SqlServerLicenseOutput)
}

func (e SqlServerLicense) ToSqlServerLicensePtrOutput() SqlServerLicensePtrOutput {
	return e.ToSqlServerLicensePtrOutputWithContext(context.Background())
}

func (e SqlServerLicense) ToSqlServerLicensePtrOutputWithContext(ctx context.Context) SqlServerLicensePtrOutput {
	return SqlServerLicense(e).ToSqlServerLicenseOutputWithContext(ctx).ToSqlServerLicensePtrOutputWithContext(ctx)
}

func (e SqlServerLicense) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlServerLicense) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlServerLicense) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlServerLicense) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SqlServerLicenseOutput struct{ *pulumi.OutputState }

func (SqlServerLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLicense)(nil)).Elem()
}

func (o SqlServerLicenseOutput) ToSqlServerLicenseOutput() SqlServerLicenseOutput {
	return o
}

func (o SqlServerLicenseOutput) ToSqlServerLicenseOutputWithContext(ctx context.Context) SqlServerLicenseOutput {
	return o
}

func (o SqlServerLicenseOutput) ToSqlServerLicensePtrOutput() SqlServerLicensePtrOutput {
	return o.ToSqlServerLicensePtrOutputWithContext(context.Background())
}

func (o SqlServerLicenseOutput) ToSqlServerLicensePtrOutputWithContext(ctx context.Context) SqlServerLicensePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlServerLicense) *SqlServerLicense {
		return &v
	}).(SqlServerLicensePtrOutput)
}

func (o SqlServerLicenseOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SqlServerLicenseOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlServerLicense) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SqlServerLicenseOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlServerLicenseOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlServerLicense) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SqlServerLicensePtrOutput struct{ *pulumi.OutputState }

func (SqlServerLicensePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerLicense)(nil)).Elem()
}

func (o SqlServerLicensePtrOutput) ToSqlServerLicensePtrOutput() SqlServerLicensePtrOutput {
	return o
}

func (o SqlServerLicensePtrOutput) ToSqlServerLicensePtrOutputWithContext(ctx context.Context) SqlServerLicensePtrOutput {
	return o
}

func (o SqlServerLicensePtrOutput) Elem() SqlServerLicenseOutput {
	return o.ApplyT(func(v *SqlServerLicense) SqlServerLicense {
		if v != nil {
			return *v
		}
		var ret SqlServerLicense
		return ret
	}).(SqlServerLicenseOutput)
}

func (o SqlServerLicensePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlServerLicensePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SqlServerLicense) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SqlServerLicenseInput is an input type that accepts values of the SqlServerLicense enum
// A concrete instance of `SqlServerLicenseInput` can be one of the following:
//
//	SqlServerLicenseUnknown
//	SqlServerLicenseYes
//	SqlServerLicenseNo
type SqlServerLicenseInput interface {
	pulumi.Input

	ToSqlServerLicenseOutput() SqlServerLicenseOutput
	ToSqlServerLicenseOutputWithContext(context.Context) SqlServerLicenseOutput
}

var sqlServerLicensePtrType = reflect.TypeOf((**SqlServerLicense)(nil)).Elem()

type SqlServerLicensePtrInput interface {
	pulumi.Input

	ToSqlServerLicensePtrOutput() SqlServerLicensePtrOutput
	ToSqlServerLicensePtrOutputWithContext(context.Context) SqlServerLicensePtrOutput
}

type sqlServerLicensePtr string

func SqlServerLicensePtr(v string) SqlServerLicensePtrInput {
	return (*sqlServerLicensePtr)(&v)
}

func (*sqlServerLicensePtr) ElementType() reflect.Type {
	return sqlServerLicensePtrType
}

func (in *sqlServerLicensePtr) ToSqlServerLicensePtrOutput() SqlServerLicensePtrOutput {
	return pulumi.ToOutput(in).(SqlServerLicensePtrOutput)
}

func (in *sqlServerLicensePtr) ToSqlServerLicensePtrOutputWithContext(ctx context.Context) SqlServerLicensePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SqlServerLicensePtrOutput)
}

// Time Range for which the historic utilization data should be considered for
// assessment.
type TimeRange string

const (
	TimeRangeDay    = TimeRange("Day")
	TimeRangeWeek   = TimeRange("Week")
	TimeRangeMonth  = TimeRange("Month")
	TimeRangeCustom = TimeRange("Custom")
)

func (TimeRange) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeRange)(nil)).Elem()
}

func (e TimeRange) ToTimeRangeOutput() TimeRangeOutput {
	return pulumi.ToOutput(e).(TimeRangeOutput)
}

func (e TimeRange) ToTimeRangeOutputWithContext(ctx context.Context) TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TimeRangeOutput)
}

func (e TimeRange) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return e.ToTimeRangePtrOutputWithContext(context.Background())
}

func (e TimeRange) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return TimeRange(e).ToTimeRangeOutputWithContext(ctx).ToTimeRangePtrOutputWithContext(ctx)
}

func (e TimeRange) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeRange) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeRange) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TimeRange) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TimeRangeOutput struct{ *pulumi.OutputState }

func (TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeRange)(nil)).Elem()
}

func (o TimeRangeOutput) ToTimeRangeOutput() TimeRangeOutput {
	return o
}

func (o TimeRangeOutput) ToTimeRangeOutputWithContext(ctx context.Context) TimeRangeOutput {
	return o
}

func (o TimeRangeOutput) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return o.ToTimeRangePtrOutputWithContext(context.Background())
}

func (o TimeRangeOutput) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeRange) *TimeRange {
		return &v
	}).(TimeRangePtrOutput)
}

func (o TimeRangeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TimeRangeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeRange) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TimeRangeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeRangeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeRange) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TimeRangePtrOutput struct{ *pulumi.OutputState }

func (TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeRange)(nil)).Elem()
}

func (o TimeRangePtrOutput) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return o
}

func (o TimeRangePtrOutput) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return o
}

func (o TimeRangePtrOutput) Elem() TimeRangeOutput {
	return o.ApplyT(func(v *TimeRange) TimeRange {
		if v != nil {
			return *v
		}
		var ret TimeRange
		return ret
	}).(TimeRangeOutput)
}

func (o TimeRangePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeRangePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TimeRange) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TimeRangeInput is an input type that accepts values of the TimeRange enum
// A concrete instance of `TimeRangeInput` can be one of the following:
//
//	TimeRangeDay
//	TimeRangeWeek
//	TimeRangeMonth
//	TimeRangeCustom
type TimeRangeInput interface {
	pulumi.Input

	ToTimeRangeOutput() TimeRangeOutput
	ToTimeRangeOutputWithContext(context.Context) TimeRangeOutput
}

var timeRangePtrType = reflect.TypeOf((**TimeRange)(nil)).Elem()

type TimeRangePtrInput interface {
	pulumi.Input

	ToTimeRangePtrOutput() TimeRangePtrOutput
	ToTimeRangePtrOutputWithContext(context.Context) TimeRangePtrOutput
}

type timeRangePtr string

func TimeRangePtr(v string) TimeRangePtrInput {
	return (*timeRangePtr)(&v)
}

func (*timeRangePtr) ElementType() reflect.Type {
	return timeRangePtrType
}

func (in *timeRangePtr) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return pulumi.ToOutput(in).(TimeRangePtrOutput)
}

func (in *timeRangePtr) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TimeRangePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentSizingCriterionOutput{})
	pulumi.RegisterOutputType(AssessmentSizingCriterionPtrOutput{})
	pulumi.RegisterOutputType(AssessmentTypeOutput{})
	pulumi.RegisterOutputType(AssessmentTypePtrOutput{})
	pulumi.RegisterOutputType(AsyncCommitModeIntentOutput{})
	pulumi.RegisterOutputType(AsyncCommitModeIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureAvsNodeTypeOutput{})
	pulumi.RegisterOutputType(AzureAvsNodeTypePtrOutput{})
	pulumi.RegisterOutputType(AzureCurrencyOutput{})
	pulumi.RegisterOutputType(AzureCurrencyPtrOutput{})
	pulumi.RegisterOutputType(AzureDiskTypeOutput{})
	pulumi.RegisterOutputType(AzureDiskTypePtrOutput{})
	pulumi.RegisterOutputType(AzureHybridUseBenefitOutput{})
	pulumi.RegisterOutputType(AzureHybridUseBenefitPtrOutput{})
	pulumi.RegisterOutputType(AzureLocationOutput{})
	pulumi.RegisterOutputType(AzureLocationPtrOutput{})
	pulumi.RegisterOutputType(AzureOfferCodeOutput{})
	pulumi.RegisterOutputType(AzureOfferCodePtrOutput{})
	pulumi.RegisterOutputType(AzurePricingTierOutput{})
	pulumi.RegisterOutputType(AzurePricingTierPtrOutput{})
	pulumi.RegisterOutputType(AzureReservedInstanceOutput{})
	pulumi.RegisterOutputType(AzureReservedInstancePtrOutput{})
	pulumi.RegisterOutputType(AzureSecurityOfferingTypeOutput{})
	pulumi.RegisterOutputType(AzureSecurityOfferingTypePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlDataBaseTypeOutput{})
	pulumi.RegisterOutputType(AzureSqlDataBaseTypePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlInstanceTypeOutput{})
	pulumi.RegisterOutputType(AzureSqlInstanceTypePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlPurchaseModelOutput{})
	pulumi.RegisterOutputType(AzureSqlPurchaseModelPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlServiceTierOutput{})
	pulumi.RegisterOutputType(AzureSqlServiceTierPtrOutput{})
	pulumi.RegisterOutputType(AzureStorageRedundancyOutput{})
	pulumi.RegisterOutputType(AzureStorageRedundancyPtrOutput{})
	pulumi.RegisterOutputType(AzureVmFamilyOutput{})
	pulumi.RegisterOutputType(AzureVmFamilyPtrOutput{})
	pulumi.RegisterOutputType(ComputeTierOutput{})
	pulumi.RegisterOutputType(ComputeTierPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentTypePtrOutput{})
	pulumi.RegisterOutputType(FttAndRaidLevelOutput{})
	pulumi.RegisterOutputType(FttAndRaidLevelPtrOutput{})
	pulumi.RegisterOutputType(GroupTypeOutput{})
	pulumi.RegisterOutputType(GroupTypePtrOutput{})
	pulumi.RegisterOutputType(MultiSubnetIntentOutput{})
	pulumi.RegisterOutputType(MultiSubnetIntentPtrOutput{})
	pulumi.RegisterOutputType(OptimizationLogicOutput{})
	pulumi.RegisterOutputType(OptimizationLogicPtrOutput{})
	pulumi.RegisterOutputType(OsLicenseOutput{})
	pulumi.RegisterOutputType(OsLicensePtrOutput{})
	pulumi.RegisterOutputType(PercentileOutput{})
	pulumi.RegisterOutputType(PercentilePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusOutput{})
	pulumi.RegisterOutputType(ProjectStatusPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningStateOutput{})
	pulumi.RegisterOutputType(ProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(SqlServerLicenseOutput{})
	pulumi.RegisterOutputType(SqlServerLicensePtrOutput{})
	pulumi.RegisterOutputType(TimeRangeOutput{})
	pulumi.RegisterOutputType(TimeRangePtrOutput{})
}
