// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315

// Assessment sizing criterion.
type AssessmentSizingCriterion string

const (
	// Performance Data based Sizing.
	AssessmentSizingCriterionPerformanceBased = AssessmentSizingCriterion("PerformanceBased")
	// As On Premises or Static Data based Sizing.
	AssessmentSizingCriterionAsOnPremises = AssessmentSizingCriterion("AsOnPremises")
)

// Assessment type of the assessment.
type AssessmentType string

const (
	AssessmentTypeUnknown           = AssessmentType("Unknown")
	AssessmentTypeMachineAssessment = AssessmentType("MachineAssessment")
	AssessmentTypeAvsAssessment     = AssessmentType("AvsAssessment")
	AssessmentTypeSqlAssessment     = AssessmentType("SqlAssessment")
	AssessmentTypeWebAppAssessment  = AssessmentType("WebAppAssessment")
)

// Gets or sets user preference indicating intent of async commit mode.
type AsyncCommitModeIntent string

const (
	AsyncCommitModeIntentNone             = AsyncCommitModeIntent("None")
	AsyncCommitModeIntentHighAvailability = AsyncCommitModeIntent("HighAvailability")
	AsyncCommitModeIntentDisasterRecovery = AsyncCommitModeIntent("DisasterRecovery")
)

// AVS node type.
type AzureAvsNodeType string

const (
	AzureAvsNodeTypeUnknown = AzureAvsNodeType("Unknown")
	AzureAvsNodeTypeAV36    = AzureAvsNodeType("AV36")
)

// Currency in which prices should be reported.
type AzureCurrency string

const (
	AzureCurrencyUnknown = AzureCurrency("Unknown")
	AzureCurrencyUSD     = AzureCurrency("USD")
	AzureCurrencyDKK     = AzureCurrency("DKK")
	AzureCurrencyCAD     = AzureCurrency("CAD")
	AzureCurrencyIDR     = AzureCurrency("IDR")
	AzureCurrencyJPY     = AzureCurrency("JPY")
	AzureCurrencyKRW     = AzureCurrency("KRW")
	AzureCurrencyNZD     = AzureCurrency("NZD")
	AzureCurrencyNOK     = AzureCurrency("NOK")
	AzureCurrencyRUB     = AzureCurrency("RUB")
	AzureCurrencySAR     = AzureCurrency("SAR")
	AzureCurrencyZAR     = AzureCurrency("ZAR")
	AzureCurrencySEK     = AzureCurrency("SEK")
	AzureCurrencyTRY     = AzureCurrency("TRY")
	AzureCurrencyGBP     = AzureCurrency("GBP")
	AzureCurrencyMXN     = AzureCurrency("MXN")
	AzureCurrencyMYR     = AzureCurrency("MYR")
	AzureCurrencyINR     = AzureCurrency("INR")
	AzureCurrencyHKD     = AzureCurrency("HKD")
	AzureCurrencyBRL     = AzureCurrency("BRL")
	AzureCurrencyTWD     = AzureCurrency("TWD")
	AzureCurrencyEUR     = AzureCurrency("EUR")
	AzureCurrencyCHF     = AzureCurrency("CHF")
	AzureCurrencyARS     = AzureCurrency("ARS")
	AzureCurrencyAUD     = AzureCurrency("AUD")
	AzureCurrencyCNY     = AzureCurrency("CNY")
)

type AzureDiskType string

const (
	AzureDiskTypeUnknown           = AzureDiskType("Unknown")
	AzureDiskTypeStandard          = AzureDiskType("Standard")
	AzureDiskTypeStandardSSD       = AzureDiskType("StandardSSD")
	AzureDiskTypePremium           = AzureDiskType("Premium")
	AzureDiskTypeStandardOrPremium = AzureDiskType("StandardOrPremium")
	AzureDiskTypeUltra             = AzureDiskType("Ultra")
	AzureDiskTypePremiumV2         = AzureDiskType("PremiumV2")
)

// Gets or sets the user configurable setting to display the azure hybrid use
// benefit.
type AzureHybridUseBenefit string

const (
	AzureHybridUseBenefitUnknown = AzureHybridUseBenefit("Unknown")
	AzureHybridUseBenefitYes     = AzureHybridUseBenefit("Yes")
	AzureHybridUseBenefitNo      = AzureHybridUseBenefit("No")
)

// Gets or sets the Azure Location or Azure region where to which the machines
// will be migrated.
type AzureLocation string

const (
	AzureLocationUnknown            = AzureLocation("Unknown")
	AzureLocationEastAsia           = AzureLocation("EastAsia")
	AzureLocationSoutheastAsia      = AzureLocation("SoutheastAsia")
	AzureLocationAustraliaEast      = AzureLocation("AustraliaEast")
	AzureLocationAustraliaSoutheast = AzureLocation("AustraliaSoutheast")
	AzureLocationBrazilSouth        = AzureLocation("BrazilSouth")
	AzureLocationCanadaCentral      = AzureLocation("CanadaCentral")
	AzureLocationCanadaEast         = AzureLocation("CanadaEast")
	AzureLocationWestEurope         = AzureLocation("WestEurope")
	AzureLocationNorthEurope        = AzureLocation("NorthEurope")
	AzureLocationCentralIndia       = AzureLocation("CentralIndia")
	AzureLocationSouthIndia         = AzureLocation("SouthIndia")
	AzureLocationWestIndia          = AzureLocation("WestIndia")
	AzureLocationJapanEast          = AzureLocation("JapanEast")
	AzureLocationJapanWest          = AzureLocation("JapanWest")
	AzureLocationKoreaCentral       = AzureLocation("KoreaCentral")
	AzureLocationKoreaSouth         = AzureLocation("KoreaSouth")
	AzureLocationUkWest             = AzureLocation("UkWest")
	AzureLocationUkSouth            = AzureLocation("UkSouth")
	AzureLocationNorthCentralUs     = AzureLocation("NorthCentralUs")
	AzureLocationEastUs             = AzureLocation("EastUs")
	AzureLocationWestUs2            = AzureLocation("WestUs2")
	AzureLocationSouthCentralUs     = AzureLocation("SouthCentralUs")
	AzureLocationCentralUs          = AzureLocation("CentralUs")
	AzureLocationEastUs2            = AzureLocation("EastUs2")
	AzureLocationWestUs             = AzureLocation("WestUs")
	AzureLocationWestCentralUs      = AzureLocation("WestCentralUs")
	AzureLocationGermanyCentral     = AzureLocation("GermanyCentral")
	AzureLocationGermanyNortheast   = AzureLocation("GermanyNortheast")
	AzureLocationChinaNorth         = AzureLocation("ChinaNorth")
	AzureLocationChinaEast          = AzureLocation("ChinaEast")
	AzureLocationUSGovArizona       = AzureLocation("USGovArizona")
	AzureLocationUSGovTexas         = AzureLocation("USGovTexas")
	AzureLocationUSGovIowa          = AzureLocation("USGovIowa")
	AzureLocationUSGovVirginia      = AzureLocation("USGovVirginia")
	AzureLocationUSDoDCentral       = AzureLocation("USDoDCentral")
	AzureLocationUSDoDEast          = AzureLocation("USDoDEast")
	AzureLocationFranceCentral      = AzureLocation("FranceCentral")
	AzureLocationAustraliaCentral   = AzureLocation("AustraliaCentral")
	AzureLocationSouthAfricaNorth   = AzureLocation("SouthAfricaNorth")
	AzureLocationFranceSouth        = AzureLocation("FranceSouth")
	AzureLocationAustraliaCentral2  = AzureLocation("AustraliaCentral2")
	AzureLocationSouthAfricaWest    = AzureLocation("SouthAfricaWest")
	AzureLocationGermanyNorth       = AzureLocation("GermanyNorth")
	AzureLocationGermanyWestCentral = AzureLocation("GermanyWestCentral")
	AzureLocationNorwayEast         = AzureLocation("NorwayEast")
	AzureLocationNorwayWest         = AzureLocation("NorwayWest")
	AzureLocationChinaEast2         = AzureLocation("ChinaEast2")
	AzureLocationChinaNorth2        = AzureLocation("ChinaNorth2")
	AzureLocationSwitzerlandNorth   = AzureLocation("SwitzerlandNorth")
	AzureLocationSwitzerlandWest    = AzureLocation("SwitzerlandWest")
	AzureLocationUAENorth           = AzureLocation("UAENorth")
	AzureLocationUAECentral         = AzureLocation("UAECentral")
	AzureLocationUsNatEast          = AzureLocation("UsNatEast")
	AzureLocationUsNatWest          = AzureLocation("UsNatWest")
	AzureLocationUsSecEast          = AzureLocation("UsSecEast")
	AzureLocationUsSecCentral       = AzureLocation("UsSecCentral")
	AzureLocationUsSecWest          = AzureLocation("UsSecWest")
	AzureLocationSwedenCentral      = AzureLocation("SwedenCentral")
	AzureLocationQatarCentral       = AzureLocation("QatarCentral")
)

// Gets or sets Azure Offer Code for VM.
type AzureOfferCode string

const (
	AzureOfferCodeUnknown          = AzureOfferCode("Unknown")
	AzureOfferCodeMsazr0003P       = AzureOfferCode("MSAZR0003P")
	AzureOfferCodeMsazr0044P       = AzureOfferCode("MSAZR0044P")
	AzureOfferCodeMsazr0059P       = AzureOfferCode("MSAZR0059P")
	AzureOfferCodeMsazr0060P       = AzureOfferCode("MSAZR0060P")
	AzureOfferCodeMsazr0062P       = AzureOfferCode("MSAZR0062P")
	AzureOfferCodeMsazr0063P       = AzureOfferCode("MSAZR0063P")
	AzureOfferCodeMsazr0064P       = AzureOfferCode("MSAZR0064P")
	AzureOfferCodeMsazr0029P       = AzureOfferCode("MSAZR0029P")
	AzureOfferCodeMsazr0022P       = AzureOfferCode("MSAZR0022P")
	AzureOfferCodeMsazr0023P       = AzureOfferCode("MSAZR0023P")
	AzureOfferCodeMsazr0148P       = AzureOfferCode("MSAZR0148P")
	AzureOfferCodeMsazr0025P       = AzureOfferCode("MSAZR0025P")
	AzureOfferCodeMsazr0036P       = AzureOfferCode("MSAZR0036P")
	AzureOfferCodeMsazr0120P       = AzureOfferCode("MSAZR0120P")
	AzureOfferCodeMsazr0121P       = AzureOfferCode("MSAZR0121P")
	AzureOfferCodeMsazr0122P       = AzureOfferCode("MSAZR0122P")
	AzureOfferCodeMsazr0123P       = AzureOfferCode("MSAZR0123P")
	AzureOfferCodeMsazr0124P       = AzureOfferCode("MSAZR0124P")
	AzureOfferCodeMsazr0125P       = AzureOfferCode("MSAZR0125P")
	AzureOfferCodeMsazr0126P       = AzureOfferCode("MSAZR0126P")
	AzureOfferCodeMsazr0127P       = AzureOfferCode("MSAZR0127P")
	AzureOfferCodeMsazr0128P       = AzureOfferCode("MSAZR0128P")
	AzureOfferCodeMsazr0129P       = AzureOfferCode("MSAZR0129P")
	AzureOfferCodeMsazr0130P       = AzureOfferCode("MSAZR0130P")
	AzureOfferCodeMsazr0111P       = AzureOfferCode("MSAZR0111P")
	AzureOfferCodeMsazr0144P       = AzureOfferCode("MSAZR0144P")
	AzureOfferCodeMsazr0149P       = AzureOfferCode("MSAZR0149P")
	AzureOfferCodeMsmcazr0044P     = AzureOfferCode("MSMCAZR0044P")
	AzureOfferCodeMsmcazr0059P     = AzureOfferCode("MSMCAZR0059P")
	AzureOfferCodeMsmcazr0060P     = AzureOfferCode("MSMCAZR0060P")
	AzureOfferCodeMsmcazr0063P     = AzureOfferCode("MSMCAZR0063P")
	AzureOfferCodeMsmcazr0120P     = AzureOfferCode("MSMCAZR0120P")
	AzureOfferCodeMsmcazr0121P     = AzureOfferCode("MSMCAZR0121P")
	AzureOfferCodeMsmcazr0125P     = AzureOfferCode("MSMCAZR0125P")
	AzureOfferCodeMsmcazr0128P     = AzureOfferCode("MSMCAZR0128P")
	AzureOfferCodeMsazrde0003P     = AzureOfferCode("MSAZRDE0003P")
	AzureOfferCodeMsazrde0044P     = AzureOfferCode("MSAZRDE0044P")
	AzureOfferCodeMsazrusgov0003P  = AzureOfferCode("MSAZRUSGOV0003P")
	AzureOfferCodeEA               = AzureOfferCode("EA")
	AzureOfferCodeMsazr0243P       = AzureOfferCode("MSAZR0243P")
	AzureOfferCodeSavingsPlan1Year = AzureOfferCode("SavingsPlan1Year")
	AzureOfferCodeSavingsPlan3Year = AzureOfferCode("SavingsPlan3Year")
)

// Gets or sets Azure Pricing Tier - Free, Basic, etc.
type AzurePricingTier string

const (
	AzurePricingTierStandard = AzurePricingTier("Standard")
	AzurePricingTierBasic    = AzurePricingTier("Basic")
)

// Gets or sets azure reserved instance for VM.
type AzureReservedInstance string

const (
	AzureReservedInstanceNone    = AzureReservedInstance("None")
	AzureReservedInstanceRI1Year = AzureReservedInstance("RI1Year")
	AzureReservedInstanceRI3Year = AzureReservedInstance("RI3Year")
)

// Gets or sets a value indicating azure security offering type.
type AzureSecurityOfferingType string

const (
	AzureSecurityOfferingTypeNO  = AzureSecurityOfferingType("NO")
	AzureSecurityOfferingTypeMDC = AzureSecurityOfferingType("MDC")
)

// Gets or sets the azure PAAS SQL instance type.
type AzureSqlDataBaseType string

const (
	AzureSqlDataBaseTypeUnknown        = AzureSqlDataBaseType("Unknown")
	AzureSqlDataBaseTypeAutomatic      = AzureSqlDataBaseType("Automatic")
	AzureSqlDataBaseTypeSingleDatabase = AzureSqlDataBaseType("SingleDatabase")
	AzureSqlDataBaseTypeElasticPool    = AzureSqlDataBaseType("ElasticPool")
)

// Gets or sets the azure PAAS SQL instance type.
type AzureSqlInstanceType string

const (
	AzureSqlInstanceTypeUnknown        = AzureSqlInstanceType("Unknown")
	AzureSqlInstanceTypeAutomatic      = AzureSqlInstanceType("Automatic")
	AzureSqlInstanceTypeSingleInstance = AzureSqlInstanceType("SingleInstance")
	AzureSqlInstanceTypeInstancePools  = AzureSqlInstanceType("InstancePools")
)

// Gets or sets the azure SQL purchase model.
type AzureSqlPurchaseModel string

const (
	AzureSqlPurchaseModelUnknown = AzureSqlPurchaseModel("Unknown")
	AzureSqlPurchaseModelVCore   = AzureSqlPurchaseModel("VCore")
	AzureSqlPurchaseModelDTU     = AzureSqlPurchaseModel("DTU")
)

// Gets or sets the azure SQL service tier.
type AzureSqlServiceTier string

const (
	AzureSqlServiceTierUnknown          = AzureSqlServiceTier("Unknown")
	AzureSqlServiceTierAutomatic        = AzureSqlServiceTier("Automatic")
	AzureSqlServiceTierGeneralPurpose   = AzureSqlServiceTier("GeneralPurpose")
	AzureSqlServiceTierBusinessCritical = AzureSqlServiceTier("BusinessCritical")
	AzureSqlServiceTierHyperScale       = AzureSqlServiceTier("HyperScale")
)

// Gets or sets the Azure Storage Redundancy. Example: Locally Redundant Storage.
type AzureStorageRedundancy string

const (
	AzureStorageRedundancyUnknown                = AzureStorageRedundancy("Unknown")
	AzureStorageRedundancyLocallyRedundant       = AzureStorageRedundancy("LocallyRedundant")
	AzureStorageRedundancyZoneRedundant          = AzureStorageRedundancy("ZoneRedundant")
	AzureStorageRedundancyGeoRedundant           = AzureStorageRedundancy("GeoRedundant")
	AzureStorageRedundancyReadAccessGeoRedundant = AzureStorageRedundancy("ReadAccessGeoRedundant")
)

type AzureVmFamily string

const (
	AzureVmFamilyUnknown       = AzureVmFamily("Unknown")
	AzureVmFamilyBasicA0A4     = AzureVmFamily("Basic_A0_A4")
	AzureVmFamilyStandardA0A7  = AzureVmFamily("Standard_A0_A7")
	AzureVmFamilyStandardA8A11 = AzureVmFamily("Standard_A8_A11")
	AzureVmFamilyAv2Series     = AzureVmFamily("Av2_series")
	AzureVmFamilyDSeries       = AzureVmFamily("D_series")
	AzureVmFamilyDv2Series     = AzureVmFamily("Dv2_series")
	AzureVmFamilyDSSeries      = AzureVmFamily("DS_series")
	AzureVmFamilyDSv2Series    = AzureVmFamily("DSv2_series")
	AzureVmFamilyFSeries       = AzureVmFamily("F_series")
	AzureVmFamilyFsSeries      = AzureVmFamily("Fs_series")
	AzureVmFamilyGSeries       = AzureVmFamily("G_series")
	AzureVmFamilyGSSeries      = AzureVmFamily("GS_series")
	AzureVmFamilyHSeries       = AzureVmFamily("H_series")
	AzureVmFamilyLsSeries      = AzureVmFamily("Ls_series")
	AzureVmFamilyDsv3Series    = AzureVmFamily("Dsv3_series")
	AzureVmFamilyDv3Series     = AzureVmFamily("Dv3_series")
	AzureVmFamilyFsv2Series    = AzureVmFamily("Fsv2_series")
	AzureVmFamilyEv3Series     = AzureVmFamily("Ev3_series")
	AzureVmFamilyEsv3Series    = AzureVmFamily("Esv3_series")
	AzureVmFamilyMSeries       = AzureVmFamily("M_series")
	AzureVmFamilyDCSeries      = AzureVmFamily("DC_Series")
	AzureVmFamilyLsv2Series    = AzureVmFamily("Lsv2_series")
	AzureVmFamilyEv4Series     = AzureVmFamily("Ev4_series")
	AzureVmFamilyEsv4Series    = AzureVmFamily("Esv4_series")
	AzureVmFamilyEdv4Series    = AzureVmFamily("Edv4_series")
	AzureVmFamilyEdsv4Series   = AzureVmFamily("Edsv4_series")
	AzureVmFamilyDv4Series     = AzureVmFamily("Dv4_series")
	AzureVmFamilyDsv4Series    = AzureVmFamily("Dsv4_series")
	AzureVmFamilyDdv4Series    = AzureVmFamily("Ddv4_series")
	AzureVmFamilyDdsv4Series   = AzureVmFamily("Ddsv4_series")
	AzureVmFamilyEasv4Series   = AzureVmFamily("Easv4_series")
	AzureVmFamilyDasv4Series   = AzureVmFamily("Dasv4_series")
	AzureVmFamilyMv2Series     = AzureVmFamily("Mv2_series")
	AzureVmFamilyEav4Series    = AzureVmFamily("Eav4_series")
	AzureVmFamilyDav4Series    = AzureVmFamily("Dav4_series")
	AzureVmFamilyMsv2Series    = AzureVmFamily("Msv2_series")
	AzureVmFamilyMdsv2Series   = AzureVmFamily("Mdsv2_series")
	AzureVmFamilyDv5Series     = AzureVmFamily("Dv5_series")
	AzureVmFamilyDsv5Series    = AzureVmFamily("Dsv5_series")
	AzureVmFamilyDdv5Series    = AzureVmFamily("Ddv5_series")
	AzureVmFamilyDdsv5Series   = AzureVmFamily("Ddsv5_series")
	AzureVmFamilyDasv5Series   = AzureVmFamily("Dasv5_series")
	AzureVmFamilyDadsv5Series  = AzureVmFamily("Dadsv5_series")
	AzureVmFamilyEv5Series     = AzureVmFamily("Ev5_series")
	AzureVmFamilyEsv5Series    = AzureVmFamily("Esv5_series")
	AzureVmFamilyEdv5Series    = AzureVmFamily("Edv5_series")
	AzureVmFamilyEdsv5Series   = AzureVmFamily("Edsv5_series")
	AzureVmFamilyEasv5Series   = AzureVmFamily("Easv5_series")
	AzureVmFamilyEadsv5Series  = AzureVmFamily("Eadsv5_series")
	AzureVmFamilyEbsv5Series   = AzureVmFamily("Ebsv5_series")
	AzureVmFamilyEbdsv5Series  = AzureVmFamily("Ebdsv5_series")
)

// Gets or sets the azure SQL compute tier.
type ComputeTier string

const (
	ComputeTierUnknown     = ComputeTier("Unknown")
	ComputeTierAutomatic   = ComputeTier("Automatic")
	ComputeTierProvisioned = ComputeTier("Provisioned")
	ComputeTierServerless  = ComputeTier("Serverless")
)

// Gets or sets user configurable setting to display the environment type.
type EnvironmentType string

const (
	EnvironmentTypeProduction = EnvironmentType("Production")
	EnvironmentTypeTest       = EnvironmentType("Test")
)

// Failures to tolerate and RAID level in a common property.
type FttAndRaidLevel string

const (
	FttAndRaidLevelUnknown   = FttAndRaidLevel("Unknown")
	FttAndRaidLevelFtt1Raid1 = FttAndRaidLevel("Ftt1Raid1")
	FttAndRaidLevelFtt1Raid5 = FttAndRaidLevel("Ftt1Raid5")
	FttAndRaidLevelFtt2Raid1 = FttAndRaidLevel("Ftt2Raid1")
	FttAndRaidLevelFtt2Raid6 = FttAndRaidLevel("Ftt2Raid6")
	FttAndRaidLevelFtt3Raid1 = FttAndRaidLevel("Ftt3Raid1")
)

// Gets the group type for the assessment.
type GroupType string

const (
	GroupTypeDefault = GroupType("Default")
	GroupTypeImport  = GroupType("Import")
)

// Gets or sets user preference indicating intent of multi-subnet configuration.
type MultiSubnetIntent string

const (
	MultiSubnetIntentNone             = MultiSubnetIntent("None")
	MultiSubnetIntentHighAvailability = MultiSubnetIntent("HighAvailability")
	MultiSubnetIntentDisasterRecovery = MultiSubnetIntent("DisasterRecovery")
)

// Gets or sets SQL optimization logic.
type OptimizationLogic string

const (
	OptimizationLogicMinimizeCost          = OptimizationLogic("MinimizeCost")
	OptimizationLogicModernizeToPaaS       = OptimizationLogic("ModernizeToPaaS")
	OptimizationLogicModernizeToAzureSqlMi = OptimizationLogic("ModernizeToAzureSqlMi")
	OptimizationLogicModernizeToAzureSqlDb = OptimizationLogic("ModernizeToAzureSqlDb")
)

// Gets or sets user configurable setting to display the azure hybrid use benefit.
type OsLicense string

const (
	OsLicenseUnknown = OsLicense("Unknown")
	OsLicenseYes     = OsLicense("Yes")
	OsLicenseNo      = OsLicense("No")
)

// Percentile of the utilization data values to be considered while assessing
// machines.
type Percentile string

const (
	PercentilePercentile50 = Percentile("Percentile50")
	PercentilePercentile90 = Percentile("Percentile90")
	PercentilePercentile95 = Percentile("Percentile95")
	PercentilePercentile99 = Percentile("Percentile99")
)

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

// Assessment project status.
type ProjectStatus string

const (
	// Active Status.
	ProjectStatusActive = ProjectStatus("Active")
	// Inactive Status.
	ProjectStatusInactive = ProjectStatus("Inactive")
)

// The status of the last operation.
type ProvisioningState string

const (
	// Resource has been created.
	ProvisioningStateSucceeded = ProvisioningState("Succeeded")
	// Resource creation failed.
	ProvisioningStateFailed = ProvisioningState("Failed")
	// Resource creation was canceled.
	ProvisioningStateCanceled = ProvisioningState("Canceled")
	// Resource is being Provisioned.
	ProvisioningStateProvisioning = ProvisioningState("Provisioning")
	// Resource is being Updated.
	ProvisioningStateUpdating = ProvisioningState("Updating")
	// Resource is being Deleted.
	ProvisioningStateDeleting = ProvisioningState("Deleting")
	// Resource is being Accepted.
	ProvisioningStateAccepted = ProvisioningState("Accepted")
)

// SQL server license.
type SqlServerLicense string

const (
	SqlServerLicenseUnknown = SqlServerLicense("Unknown")
	SqlServerLicenseYes     = SqlServerLicense("Yes")
	SqlServerLicenseNo      = SqlServerLicense("No")
)

// Time Range for which the historic utilization data should be considered for
// assessment.
type TimeRange string

const (
	TimeRangeDay    = TimeRange("Day")
	TimeRangeWeek   = TimeRange("Week")
	TimeRangeMonth  = TimeRange("Month")
	TimeRangeCustom = TimeRange("Custom")
)

func init() {
}
