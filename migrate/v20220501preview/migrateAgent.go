// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220501preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// MigrateAgent model.
type MigrateAgent struct {
	pulumi.CustomResourceState

	// Gets or sets the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// MigrateAgent model properties.
	Properties MigrateAgentModelPropertiesResponseOutput `pulumi:"properties"`
	SystemData MigrateAgentModelResponseSystemDataOutput `pulumi:"systemData"`
	// Gets or sets the resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Gets or sets the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMigrateAgent registers a new resource with the given unique name, arguments, and options.
func NewMigrateAgent(ctx *pulumi.Context,
	name string, args *MigrateAgentArgs, opts ...pulumi.ResourceOption) (*MigrateAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ModernizeProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ModernizeProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate:MigrateAgent"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MigrateAgent
	err := ctx.RegisterResource("azure-native:migrate/v20220501preview:MigrateAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMigrateAgent gets an existing MigrateAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMigrateAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MigrateAgentState, opts ...pulumi.ResourceOption) (*MigrateAgent, error) {
	var resource MigrateAgent
	err := ctx.ReadResource("azure-native:migrate/v20220501preview:MigrateAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MigrateAgent resources.
type migrateAgentState struct {
}

type MigrateAgentState struct {
}

func (MigrateAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*migrateAgentState)(nil)).Elem()
}

type migrateAgentArgs struct {
	// MigrateAgent name.
	AgentName *string `pulumi:"agentName"`
	// ModernizeProject name.
	ModernizeProjectName string `pulumi:"modernizeProjectName"`
	// MigrateAgent model properties.
	Properties *MigrateAgentModelProperties `pulumi:"properties"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure Subscription Id in which project was created.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Gets or sets the resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a MigrateAgent resource.
type MigrateAgentArgs struct {
	// MigrateAgent name.
	AgentName pulumi.StringPtrInput
	// ModernizeProject name.
	ModernizeProjectName pulumi.StringInput
	// MigrateAgent model properties.
	Properties MigrateAgentModelPropertiesPtrInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
	// Azure Subscription Id in which project was created.
	SubscriptionId pulumi.StringPtrInput
	// Gets or sets the resource tags.
	Tags pulumi.StringMapInput
}

func (MigrateAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*migrateAgentArgs)(nil)).Elem()
}

type MigrateAgentInput interface {
	pulumi.Input

	ToMigrateAgentOutput() MigrateAgentOutput
	ToMigrateAgentOutputWithContext(ctx context.Context) MigrateAgentOutput
}

func (*MigrateAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateAgent)(nil)).Elem()
}

func (i *MigrateAgent) ToMigrateAgentOutput() MigrateAgentOutput {
	return i.ToMigrateAgentOutputWithContext(context.Background())
}

func (i *MigrateAgent) ToMigrateAgentOutputWithContext(ctx context.Context) MigrateAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateAgentOutput)
}

func (i *MigrateAgent) ToOutput(ctx context.Context) pulumix.Output[*MigrateAgent] {
	return pulumix.Output[*MigrateAgent]{
		OutputState: i.ToMigrateAgentOutputWithContext(ctx).OutputState,
	}
}

type MigrateAgentOutput struct{ *pulumi.OutputState }

func (MigrateAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateAgent)(nil)).Elem()
}

func (o MigrateAgentOutput) ToMigrateAgentOutput() MigrateAgentOutput {
	return o
}

func (o MigrateAgentOutput) ToMigrateAgentOutputWithContext(ctx context.Context) MigrateAgentOutput {
	return o
}

func (o MigrateAgentOutput) ToOutput(ctx context.Context) pulumix.Output[*MigrateAgent] {
	return pulumix.Output[*MigrateAgent]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the name of the resource.
func (o MigrateAgentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrateAgent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// MigrateAgent model properties.
func (o MigrateAgentOutput) Properties() MigrateAgentModelPropertiesResponseOutput {
	return o.ApplyT(func(v *MigrateAgent) MigrateAgentModelPropertiesResponseOutput { return v.Properties }).(MigrateAgentModelPropertiesResponseOutput)
}

func (o MigrateAgentOutput) SystemData() MigrateAgentModelResponseSystemDataOutput {
	return o.ApplyT(func(v *MigrateAgent) MigrateAgentModelResponseSystemDataOutput { return v.SystemData }).(MigrateAgentModelResponseSystemDataOutput)
}

// Gets or sets the resource tags.
func (o MigrateAgentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MigrateAgent) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets or sets the type of the resource.
func (o MigrateAgentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrateAgent) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MigrateAgentOutput{})
}
