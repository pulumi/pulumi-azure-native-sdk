// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets or sets the status of automation artifacts.
type AutomationArtifactStatus string

const (
	AutomationArtifactStatusNotGenerated = AutomationArtifactStatus("NotGenerated")
	AutomationArtifactStatusGenerated    = AutomationArtifactStatus("Generated")
)

func (AutomationArtifactStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationArtifactStatus)(nil)).Elem()
}

func (e AutomationArtifactStatus) ToAutomationArtifactStatusOutput() AutomationArtifactStatusOutput {
	return pulumi.ToOutput(e).(AutomationArtifactStatusOutput)
}

func (e AutomationArtifactStatus) ToAutomationArtifactStatusOutputWithContext(ctx context.Context) AutomationArtifactStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationArtifactStatusOutput)
}

func (e AutomationArtifactStatus) ToAutomationArtifactStatusPtrOutput() AutomationArtifactStatusPtrOutput {
	return e.ToAutomationArtifactStatusPtrOutputWithContext(context.Background())
}

func (e AutomationArtifactStatus) ToAutomationArtifactStatusPtrOutputWithContext(ctx context.Context) AutomationArtifactStatusPtrOutput {
	return AutomationArtifactStatus(e).ToAutomationArtifactStatusOutputWithContext(ctx).ToAutomationArtifactStatusPtrOutputWithContext(ctx)
}

func (e AutomationArtifactStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationArtifactStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationArtifactStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationArtifactStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationArtifactStatusOutput struct{ *pulumi.OutputState }

func (AutomationArtifactStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationArtifactStatus)(nil)).Elem()
}

func (o AutomationArtifactStatusOutput) ToAutomationArtifactStatusOutput() AutomationArtifactStatusOutput {
	return o
}

func (o AutomationArtifactStatusOutput) ToAutomationArtifactStatusOutputWithContext(ctx context.Context) AutomationArtifactStatusOutput {
	return o
}

func (o AutomationArtifactStatusOutput) ToAutomationArtifactStatusPtrOutput() AutomationArtifactStatusPtrOutput {
	return o.ToAutomationArtifactStatusPtrOutputWithContext(context.Background())
}

func (o AutomationArtifactStatusOutput) ToAutomationArtifactStatusPtrOutputWithContext(ctx context.Context) AutomationArtifactStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationArtifactStatus) *AutomationArtifactStatus {
		return &v
	}).(AutomationArtifactStatusPtrOutput)
}

func (o AutomationArtifactStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationArtifactStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationArtifactStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationArtifactStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationArtifactStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationArtifactStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationArtifactStatusPtrOutput struct{ *pulumi.OutputState }

func (AutomationArtifactStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationArtifactStatus)(nil)).Elem()
}

func (o AutomationArtifactStatusPtrOutput) ToAutomationArtifactStatusPtrOutput() AutomationArtifactStatusPtrOutput {
	return o
}

func (o AutomationArtifactStatusPtrOutput) ToAutomationArtifactStatusPtrOutputWithContext(ctx context.Context) AutomationArtifactStatusPtrOutput {
	return o
}

func (o AutomationArtifactStatusPtrOutput) Elem() AutomationArtifactStatusOutput {
	return o.ApplyT(func(v *AutomationArtifactStatus) AutomationArtifactStatus {
		if v != nil {
			return *v
		}
		var ret AutomationArtifactStatus
		return ret
	}).(AutomationArtifactStatusOutput)
}

func (o AutomationArtifactStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationArtifactStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationArtifactStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationArtifactStatusInput is an input type that accepts values of the AutomationArtifactStatus enum
// A concrete instance of `AutomationArtifactStatusInput` can be one of the following:
//
//	AutomationArtifactStatusNotGenerated
//	AutomationArtifactStatusGenerated
type AutomationArtifactStatusInput interface {
	pulumi.Input

	ToAutomationArtifactStatusOutput() AutomationArtifactStatusOutput
	ToAutomationArtifactStatusOutputWithContext(context.Context) AutomationArtifactStatusOutput
}

var automationArtifactStatusPtrType = reflect.TypeOf((**AutomationArtifactStatus)(nil)).Elem()

type AutomationArtifactStatusPtrInput interface {
	pulumi.Input

	ToAutomationArtifactStatusPtrOutput() AutomationArtifactStatusPtrOutput
	ToAutomationArtifactStatusPtrOutputWithContext(context.Context) AutomationArtifactStatusPtrOutput
}

type automationArtifactStatusPtr string

func AutomationArtifactStatusPtr(v string) AutomationArtifactStatusPtrInput {
	return (*automationArtifactStatusPtr)(&v)
}

func (*automationArtifactStatusPtr) ElementType() reflect.Type {
	return automationArtifactStatusPtrType
}

func (in *automationArtifactStatusPtr) ToAutomationArtifactStatusPtrOutput() AutomationArtifactStatusPtrOutput {
	return pulumi.ToOutput(in).(AutomationArtifactStatusPtrOutput)
}

func (in *automationArtifactStatusPtr) ToAutomationArtifactStatusPtrOutputWithContext(ctx context.Context) AutomationArtifactStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationArtifactStatusPtrOutput)
}

func (in *automationArtifactStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationArtifactStatus] {
	return pulumix.Output[*AutomationArtifactStatus]{
		OutputState: in.ToAutomationArtifactStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the configuration type.
type ConfigurationType string

const (
	ConfigurationTypeIISConnectionString         = ConfigurationType("IISConnectionString")
	ConfigurationTypeIISAuthentication           = ConfigurationType("IISAuthentication")
	ConfigurationTypeApacheTomcatContextResource = ConfigurationType("ApacheTomcatContextResource")
)

func (ConfigurationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationType)(nil)).Elem()
}

func (e ConfigurationType) ToConfigurationTypeOutput() ConfigurationTypeOutput {
	return pulumi.ToOutput(e).(ConfigurationTypeOutput)
}

func (e ConfigurationType) ToConfigurationTypeOutputWithContext(ctx context.Context) ConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigurationTypeOutput)
}

func (e ConfigurationType) ToConfigurationTypePtrOutput() ConfigurationTypePtrOutput {
	return e.ToConfigurationTypePtrOutputWithContext(context.Background())
}

func (e ConfigurationType) ToConfigurationTypePtrOutputWithContext(ctx context.Context) ConfigurationTypePtrOutput {
	return ConfigurationType(e).ToConfigurationTypeOutputWithContext(ctx).ToConfigurationTypePtrOutputWithContext(ctx)
}

func (e ConfigurationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigurationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigurationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigurationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigurationTypeOutput struct{ *pulumi.OutputState }

func (ConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationType)(nil)).Elem()
}

func (o ConfigurationTypeOutput) ToConfigurationTypeOutput() ConfigurationTypeOutput {
	return o
}

func (o ConfigurationTypeOutput) ToConfigurationTypeOutputWithContext(ctx context.Context) ConfigurationTypeOutput {
	return o
}

func (o ConfigurationTypeOutput) ToConfigurationTypePtrOutput() ConfigurationTypePtrOutput {
	return o.ToConfigurationTypePtrOutputWithContext(context.Background())
}

func (o ConfigurationTypeOutput) ToConfigurationTypePtrOutputWithContext(ctx context.Context) ConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationType) *ConfigurationType {
		return &v
	}).(ConfigurationTypePtrOutput)
}

func (o ConfigurationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigurationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigurationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigurationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigurationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigurationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationType)(nil)).Elem()
}

func (o ConfigurationTypePtrOutput) ToConfigurationTypePtrOutput() ConfigurationTypePtrOutput {
	return o
}

func (o ConfigurationTypePtrOutput) ToConfigurationTypePtrOutputWithContext(ctx context.Context) ConfigurationTypePtrOutput {
	return o
}

func (o ConfigurationTypePtrOutput) Elem() ConfigurationTypeOutput {
	return o.ApplyT(func(v *ConfigurationType) ConfigurationType {
		if v != nil {
			return *v
		}
		var ret ConfigurationType
		return ret
	}).(ConfigurationTypeOutput)
}

func (o ConfigurationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigurationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigurationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigurationTypeInput is an input type that accepts values of the ConfigurationType enum
// A concrete instance of `ConfigurationTypeInput` can be one of the following:
//
//	ConfigurationTypeIISConnectionString
//	ConfigurationTypeIISAuthentication
//	ConfigurationTypeApacheTomcatContextResource
type ConfigurationTypeInput interface {
	pulumi.Input

	ToConfigurationTypeOutput() ConfigurationTypeOutput
	ToConfigurationTypeOutputWithContext(context.Context) ConfigurationTypeOutput
}

var configurationTypePtrType = reflect.TypeOf((**ConfigurationType)(nil)).Elem()

type ConfigurationTypePtrInput interface {
	pulumi.Input

	ToConfigurationTypePtrOutput() ConfigurationTypePtrOutput
	ToConfigurationTypePtrOutputWithContext(context.Context) ConfigurationTypePtrOutput
}

type configurationTypePtr string

func ConfigurationTypePtr(v string) ConfigurationTypePtrInput {
	return (*configurationTypePtr)(&v)
}

func (*configurationTypePtr) ElementType() reflect.Type {
	return configurationTypePtrType
}

func (in *configurationTypePtr) ToConfigurationTypePtrOutput() ConfigurationTypePtrOutput {
	return pulumi.ToOutput(in).(ConfigurationTypePtrOutput)
}

func (in *configurationTypePtr) ToConfigurationTypePtrOutputWithContext(ctx context.Context) ConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigurationTypePtrOutput)
}

func (in *configurationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationType] {
	return pulumix.Output[*ConfigurationType]{
		OutputState: in.ToConfigurationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the load balancer type.
type LoadBalancerType string

const (
	LoadBalancerTypePrivate = LoadBalancerType("Private")
	LoadBalancerTypePublic  = LoadBalancerType("Public")
)

func (LoadBalancerType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (e LoadBalancerType) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return pulumi.ToOutput(e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return e.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return LoadBalancerType(e).ToLoadBalancerTypeOutputWithContext(ctx).ToLoadBalancerTypePtrOutputWithContext(ctx)
}

func (e LoadBalancerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerType) *LoadBalancerType {
		return &v
	}).(LoadBalancerTypePtrOutput)
}

func (o LoadBalancerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerTypePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) Elem() LoadBalancerTypeOutput {
	return o.ApplyT(func(v *LoadBalancerType) LoadBalancerType {
		if v != nil {
			return *v
		}
		var ret LoadBalancerType
		return ret
	}).(LoadBalancerTypeOutput)
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerTypeInput is an input type that accepts values of the LoadBalancerType enum
// A concrete instance of `LoadBalancerTypeInput` can be one of the following:
//
//	LoadBalancerTypePrivate
//	LoadBalancerTypePublic
type LoadBalancerTypeInput interface {
	pulumi.Input

	ToLoadBalancerTypeOutput() LoadBalancerTypeOutput
	ToLoadBalancerTypeOutputWithContext(context.Context) LoadBalancerTypeOutput
}

var loadBalancerTypePtrType = reflect.TypeOf((**LoadBalancerType)(nil)).Elem()

type LoadBalancerTypePtrInput interface {
	pulumi.Input

	ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput
	ToLoadBalancerTypePtrOutputWithContext(context.Context) LoadBalancerTypePtrOutput
}

type loadBalancerTypePtr string

func LoadBalancerTypePtr(v string) LoadBalancerTypePtrInput {
	return (*loadBalancerTypePtr)(&v)
}

func (*loadBalancerTypePtr) ElementType() reflect.Type {
	return loadBalancerTypePtrType
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancerType] {
	return pulumix.Output[*LoadBalancerType]{
		OutputState: in.ToLoadBalancerTypePtrOutputWithContext(ctx).OutputState,
	}
}

type OperatingSystemType string

const (
	OperatingSystemTypeWindows = OperatingSystemType("Windows")
	OperatingSystemTypeLinux   = OperatingSystemType("Linux")
)

func (OperatingSystemType) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemType)(nil)).Elem()
}

func (e OperatingSystemType) ToOperatingSystemTypeOutput() OperatingSystemTypeOutput {
	return pulumi.ToOutput(e).(OperatingSystemTypeOutput)
}

func (e OperatingSystemType) ToOperatingSystemTypeOutputWithContext(ctx context.Context) OperatingSystemTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatingSystemTypeOutput)
}

func (e OperatingSystemType) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return e.ToOperatingSystemTypePtrOutputWithContext(context.Background())
}

func (e OperatingSystemType) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return OperatingSystemType(e).ToOperatingSystemTypeOutputWithContext(ctx).ToOperatingSystemTypePtrOutputWithContext(ctx)
}

func (e OperatingSystemType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperatingSystemType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatingSystemTypeOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemType)(nil)).Elem()
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypeOutput() OperatingSystemTypeOutput {
	return o
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypeOutputWithContext(ctx context.Context) OperatingSystemTypeOutput {
	return o
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return o.ToOperatingSystemTypePtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperatingSystemType) *OperatingSystemType {
		return &v
	}).(OperatingSystemTypePtrOutput)
}

func (o OperatingSystemTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatingSystemTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatingSystemTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatingSystemTypePtrOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatingSystemType)(nil)).Elem()
}

func (o OperatingSystemTypePtrOutput) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return o
}

func (o OperatingSystemTypePtrOutput) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return o
}

func (o OperatingSystemTypePtrOutput) Elem() OperatingSystemTypeOutput {
	return o.ApplyT(func(v *OperatingSystemType) OperatingSystemType {
		if v != nil {
			return *v
		}
		var ret OperatingSystemType
		return ret
	}).(OperatingSystemTypeOutput)
}

func (o OperatingSystemTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperatingSystemType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatingSystemTypeInput is an input type that accepts values of the OperatingSystemType enum
// A concrete instance of `OperatingSystemTypeInput` can be one of the following:
//
//	OperatingSystemTypeWindows
//	OperatingSystemTypeLinux
type OperatingSystemTypeInput interface {
	pulumi.Input

	ToOperatingSystemTypeOutput() OperatingSystemTypeOutput
	ToOperatingSystemTypeOutputWithContext(context.Context) OperatingSystemTypeOutput
}

var operatingSystemTypePtrType = reflect.TypeOf((**OperatingSystemType)(nil)).Elem()

type OperatingSystemTypePtrInput interface {
	pulumi.Input

	ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput
	ToOperatingSystemTypePtrOutputWithContext(context.Context) OperatingSystemTypePtrOutput
}

type operatingSystemTypePtr string

func OperatingSystemTypePtr(v string) OperatingSystemTypePtrInput {
	return (*operatingSystemTypePtr)(&v)
}

func (*operatingSystemTypePtr) ElementType() reflect.Type {
	return operatingSystemTypePtrType
}

func (in *operatingSystemTypePtr) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return pulumi.ToOutput(in).(OperatingSystemTypePtrOutput)
}

func (in *operatingSystemTypePtr) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatingSystemTypePtrOutput)
}

func (in *operatingSystemTypePtr) ToOutput(ctx context.Context) pulumix.Output[*OperatingSystemType] {
	return pulumix.Output[*OperatingSystemType]{
		OutputState: in.ToOperatingSystemTypePtrOutputWithContext(ctx).OutputState,
	}
}

type ResourceIdentityTypes string

const (
	ResourceIdentityTypesNone           = ResourceIdentityTypes("None")
	ResourceIdentityTypesSystemAssigned = ResourceIdentityTypes("SystemAssigned")
	ResourceIdentityTypesUserAssigned   = ResourceIdentityTypes("UserAssigned")
)

func (ResourceIdentityTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityTypes)(nil)).Elem()
}

func (e ResourceIdentityTypes) ToResourceIdentityTypesOutput() ResourceIdentityTypesOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypesOutput)
}

func (e ResourceIdentityTypes) ToResourceIdentityTypesOutputWithContext(ctx context.Context) ResourceIdentityTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypesOutput)
}

func (e ResourceIdentityTypes) ToResourceIdentityTypesPtrOutput() ResourceIdentityTypesPtrOutput {
	return e.ToResourceIdentityTypesPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityTypes) ToResourceIdentityTypesPtrOutputWithContext(ctx context.Context) ResourceIdentityTypesPtrOutput {
	return ResourceIdentityTypes(e).ToResourceIdentityTypesOutputWithContext(ctx).ToResourceIdentityTypesPtrOutputWithContext(ctx)
}

func (e ResourceIdentityTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypesOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityTypes)(nil)).Elem()
}

func (o ResourceIdentityTypesOutput) ToResourceIdentityTypesOutput() ResourceIdentityTypesOutput {
	return o
}

func (o ResourceIdentityTypesOutput) ToResourceIdentityTypesOutputWithContext(ctx context.Context) ResourceIdentityTypesOutput {
	return o
}

func (o ResourceIdentityTypesOutput) ToResourceIdentityTypesPtrOutput() ResourceIdentityTypesPtrOutput {
	return o.ToResourceIdentityTypesPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypesOutput) ToResourceIdentityTypesPtrOutputWithContext(ctx context.Context) ResourceIdentityTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityTypes) *ResourceIdentityTypes {
		return &v
	}).(ResourceIdentityTypesPtrOutput)
}

func (o ResourceIdentityTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypesPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityTypes)(nil)).Elem()
}

func (o ResourceIdentityTypesPtrOutput) ToResourceIdentityTypesPtrOutput() ResourceIdentityTypesPtrOutput {
	return o
}

func (o ResourceIdentityTypesPtrOutput) ToResourceIdentityTypesPtrOutputWithContext(ctx context.Context) ResourceIdentityTypesPtrOutput {
	return o
}

func (o ResourceIdentityTypesPtrOutput) Elem() ResourceIdentityTypesOutput {
	return o.ApplyT(func(v *ResourceIdentityTypes) ResourceIdentityTypes {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityTypes
		return ret
	}).(ResourceIdentityTypesOutput)
}

func (o ResourceIdentityTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypesInput is an input type that accepts values of the ResourceIdentityTypes enum
// A concrete instance of `ResourceIdentityTypesInput` can be one of the following:
//
//	ResourceIdentityTypesNone
//	ResourceIdentityTypesSystemAssigned
//	ResourceIdentityTypesUserAssigned
type ResourceIdentityTypesInput interface {
	pulumi.Input

	ToResourceIdentityTypesOutput() ResourceIdentityTypesOutput
	ToResourceIdentityTypesOutputWithContext(context.Context) ResourceIdentityTypesOutput
}

var resourceIdentityTypesPtrType = reflect.TypeOf((**ResourceIdentityTypes)(nil)).Elem()

type ResourceIdentityTypesPtrInput interface {
	pulumi.Input

	ToResourceIdentityTypesPtrOutput() ResourceIdentityTypesPtrOutput
	ToResourceIdentityTypesPtrOutputWithContext(context.Context) ResourceIdentityTypesPtrOutput
}

type resourceIdentityTypesPtr string

func ResourceIdentityTypesPtr(v string) ResourceIdentityTypesPtrInput {
	return (*resourceIdentityTypesPtr)(&v)
}

func (*resourceIdentityTypesPtr) ElementType() reflect.Type {
	return resourceIdentityTypesPtrType
}

func (in *resourceIdentityTypesPtr) ToResourceIdentityTypesPtrOutput() ResourceIdentityTypesPtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypesPtrOutput)
}

func (in *resourceIdentityTypesPtr) ToResourceIdentityTypesPtrOutputWithContext(ctx context.Context) ResourceIdentityTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypesPtrOutput)
}

func (in *resourceIdentityTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceIdentityTypes] {
	return pulumix.Output[*ResourceIdentityTypes]{
		OutputState: in.ToResourceIdentityTypesPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretStoreType string

const (
	SecretStoreTypeNone                  = SecretStoreType("None")
	SecretStoreTypeKubeSecret            = SecretStoreType("KubeSecret")
	SecretStoreTypeKeyVaultSecret        = SecretStoreType("KeyVaultSecret")
	SecretStoreTypeAppServiceAppSettings = SecretStoreType("AppServiceAppSettings")
)

func (SecretStoreType) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (e SecretStoreType) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return pulumi.ToOutput(e).(SecretStoreTypeOutput)
}

func (e SecretStoreType) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecretStoreTypeOutput)
}

func (e SecretStoreType) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return e.ToSecretStoreTypePtrOutputWithContext(context.Background())
}

func (e SecretStoreType) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return SecretStoreType(e).ToSecretStoreTypeOutputWithContext(ctx).ToSecretStoreTypePtrOutputWithContext(ctx)
}

func (e SecretStoreType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretStoreType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretStoreType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecretStoreType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecretStoreTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return o.ToSecretStoreTypePtrOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreType) *SecretStoreType {
		return &v
	}).(SecretStoreTypePtrOutput)
}

func (o SecretStoreTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecretStoreType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecretStoreTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecretStoreType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecretStoreTypePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypePtrOutput) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return o
}

func (o SecretStoreTypePtrOutput) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return o
}

func (o SecretStoreTypePtrOutput) Elem() SecretStoreTypeOutput {
	return o.ApplyT(func(v *SecretStoreType) SecretStoreType {
		if v != nil {
			return *v
		}
		var ret SecretStoreType
		return ret
	}).(SecretStoreTypeOutput)
}

func (o SecretStoreTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecretStoreTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecretStoreType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecretStoreTypeInput is an input type that accepts values of the SecretStoreType enum
// A concrete instance of `SecretStoreTypeInput` can be one of the following:
//
//	SecretStoreTypeNone
//	SecretStoreTypeKubeSecret
//	SecretStoreTypeKeyVaultSecret
//	SecretStoreTypeAppServiceAppSettings
type SecretStoreTypeInput interface {
	pulumi.Input

	ToSecretStoreTypeOutput() SecretStoreTypeOutput
	ToSecretStoreTypeOutputWithContext(context.Context) SecretStoreTypeOutput
}

var secretStoreTypePtrType = reflect.TypeOf((**SecretStoreType)(nil)).Elem()

type SecretStoreTypePtrInput interface {
	pulumi.Input

	ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput
	ToSecretStoreTypePtrOutputWithContext(context.Context) SecretStoreTypePtrOutput
}

type secretStoreTypePtr string

func SecretStoreTypePtr(v string) SecretStoreTypePtrInput {
	return (*secretStoreTypePtr)(&v)
}

func (*secretStoreTypePtr) ElementType() reflect.Type {
	return secretStoreTypePtrType
}

func (in *secretStoreTypePtr) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return pulumi.ToOutput(in).(SecretStoreTypePtrOutput)
}

func (in *secretStoreTypePtr) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecretStoreTypePtrOutput)
}

func (in *secretStoreTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SecretStoreType] {
	return pulumix.Output[*SecretStoreType]{
		OutputState: in.ToSecretStoreTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the storage provider type on the target.
// Applicable when StorageProjectionType is not ContainerFileSystem.
type TargetHydrationStorageProviderType string

const (
	TargetHydrationStorageProviderTypeAzureFileShare = TargetHydrationStorageProviderType("AzureFileShare")
)

func (TargetHydrationStorageProviderType) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHydrationStorageProviderType)(nil)).Elem()
}

func (e TargetHydrationStorageProviderType) ToTargetHydrationStorageProviderTypeOutput() TargetHydrationStorageProviderTypeOutput {
	return pulumi.ToOutput(e).(TargetHydrationStorageProviderTypeOutput)
}

func (e TargetHydrationStorageProviderType) ToTargetHydrationStorageProviderTypeOutputWithContext(ctx context.Context) TargetHydrationStorageProviderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetHydrationStorageProviderTypeOutput)
}

func (e TargetHydrationStorageProviderType) ToTargetHydrationStorageProviderTypePtrOutput() TargetHydrationStorageProviderTypePtrOutput {
	return e.ToTargetHydrationStorageProviderTypePtrOutputWithContext(context.Background())
}

func (e TargetHydrationStorageProviderType) ToTargetHydrationStorageProviderTypePtrOutputWithContext(ctx context.Context) TargetHydrationStorageProviderTypePtrOutput {
	return TargetHydrationStorageProviderType(e).ToTargetHydrationStorageProviderTypeOutputWithContext(ctx).ToTargetHydrationStorageProviderTypePtrOutputWithContext(ctx)
}

func (e TargetHydrationStorageProviderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetHydrationStorageProviderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetHydrationStorageProviderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetHydrationStorageProviderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetHydrationStorageProviderTypeOutput struct{ *pulumi.OutputState }

func (TargetHydrationStorageProviderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHydrationStorageProviderType)(nil)).Elem()
}

func (o TargetHydrationStorageProviderTypeOutput) ToTargetHydrationStorageProviderTypeOutput() TargetHydrationStorageProviderTypeOutput {
	return o
}

func (o TargetHydrationStorageProviderTypeOutput) ToTargetHydrationStorageProviderTypeOutputWithContext(ctx context.Context) TargetHydrationStorageProviderTypeOutput {
	return o
}

func (o TargetHydrationStorageProviderTypeOutput) ToTargetHydrationStorageProviderTypePtrOutput() TargetHydrationStorageProviderTypePtrOutput {
	return o.ToTargetHydrationStorageProviderTypePtrOutputWithContext(context.Background())
}

func (o TargetHydrationStorageProviderTypeOutput) ToTargetHydrationStorageProviderTypePtrOutputWithContext(ctx context.Context) TargetHydrationStorageProviderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetHydrationStorageProviderType) *TargetHydrationStorageProviderType {
		return &v
	}).(TargetHydrationStorageProviderTypePtrOutput)
}

func (o TargetHydrationStorageProviderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetHydrationStorageProviderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetHydrationStorageProviderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetHydrationStorageProviderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetHydrationStorageProviderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetHydrationStorageProviderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetHydrationStorageProviderTypePtrOutput struct{ *pulumi.OutputState }

func (TargetHydrationStorageProviderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHydrationStorageProviderType)(nil)).Elem()
}

func (o TargetHydrationStorageProviderTypePtrOutput) ToTargetHydrationStorageProviderTypePtrOutput() TargetHydrationStorageProviderTypePtrOutput {
	return o
}

func (o TargetHydrationStorageProviderTypePtrOutput) ToTargetHydrationStorageProviderTypePtrOutputWithContext(ctx context.Context) TargetHydrationStorageProviderTypePtrOutput {
	return o
}

func (o TargetHydrationStorageProviderTypePtrOutput) Elem() TargetHydrationStorageProviderTypeOutput {
	return o.ApplyT(func(v *TargetHydrationStorageProviderType) TargetHydrationStorageProviderType {
		if v != nil {
			return *v
		}
		var ret TargetHydrationStorageProviderType
		return ret
	}).(TargetHydrationStorageProviderTypeOutput)
}

func (o TargetHydrationStorageProviderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetHydrationStorageProviderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetHydrationStorageProviderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetHydrationStorageProviderTypeInput is an input type that accepts values of the TargetHydrationStorageProviderType enum
// A concrete instance of `TargetHydrationStorageProviderTypeInput` can be one of the following:
//
//	TargetHydrationStorageProviderTypeAzureFileShare
type TargetHydrationStorageProviderTypeInput interface {
	pulumi.Input

	ToTargetHydrationStorageProviderTypeOutput() TargetHydrationStorageProviderTypeOutput
	ToTargetHydrationStorageProviderTypeOutputWithContext(context.Context) TargetHydrationStorageProviderTypeOutput
}

var targetHydrationStorageProviderTypePtrType = reflect.TypeOf((**TargetHydrationStorageProviderType)(nil)).Elem()

type TargetHydrationStorageProviderTypePtrInput interface {
	pulumi.Input

	ToTargetHydrationStorageProviderTypePtrOutput() TargetHydrationStorageProviderTypePtrOutput
	ToTargetHydrationStorageProviderTypePtrOutputWithContext(context.Context) TargetHydrationStorageProviderTypePtrOutput
}

type targetHydrationStorageProviderTypePtr string

func TargetHydrationStorageProviderTypePtr(v string) TargetHydrationStorageProviderTypePtrInput {
	return (*targetHydrationStorageProviderTypePtr)(&v)
}

func (*targetHydrationStorageProviderTypePtr) ElementType() reflect.Type {
	return targetHydrationStorageProviderTypePtrType
}

func (in *targetHydrationStorageProviderTypePtr) ToTargetHydrationStorageProviderTypePtrOutput() TargetHydrationStorageProviderTypePtrOutput {
	return pulumi.ToOutput(in).(TargetHydrationStorageProviderTypePtrOutput)
}

func (in *targetHydrationStorageProviderTypePtr) ToTargetHydrationStorageProviderTypePtrOutputWithContext(ctx context.Context) TargetHydrationStorageProviderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetHydrationStorageProviderTypePtrOutput)
}

func (in *targetHydrationStorageProviderTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TargetHydrationStorageProviderType] {
	return pulumix.Output[*TargetHydrationStorageProviderType]{
		OutputState: in.ToTargetHydrationStorageProviderTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the target storage access type.
type TargetStorageAccessType string

const (
	TargetStorageAccessTypeShared    = TargetStorageAccessType("Shared")
	TargetStorageAccessTypeExclusive = TargetStorageAccessType("Exclusive")
)

func (TargetStorageAccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetStorageAccessType)(nil)).Elem()
}

func (e TargetStorageAccessType) ToTargetStorageAccessTypeOutput() TargetStorageAccessTypeOutput {
	return pulumi.ToOutput(e).(TargetStorageAccessTypeOutput)
}

func (e TargetStorageAccessType) ToTargetStorageAccessTypeOutputWithContext(ctx context.Context) TargetStorageAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetStorageAccessTypeOutput)
}

func (e TargetStorageAccessType) ToTargetStorageAccessTypePtrOutput() TargetStorageAccessTypePtrOutput {
	return e.ToTargetStorageAccessTypePtrOutputWithContext(context.Background())
}

func (e TargetStorageAccessType) ToTargetStorageAccessTypePtrOutputWithContext(ctx context.Context) TargetStorageAccessTypePtrOutput {
	return TargetStorageAccessType(e).ToTargetStorageAccessTypeOutputWithContext(ctx).ToTargetStorageAccessTypePtrOutputWithContext(ctx)
}

func (e TargetStorageAccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetStorageAccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetStorageAccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetStorageAccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetStorageAccessTypeOutput struct{ *pulumi.OutputState }

func (TargetStorageAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetStorageAccessType)(nil)).Elem()
}

func (o TargetStorageAccessTypeOutput) ToTargetStorageAccessTypeOutput() TargetStorageAccessTypeOutput {
	return o
}

func (o TargetStorageAccessTypeOutput) ToTargetStorageAccessTypeOutputWithContext(ctx context.Context) TargetStorageAccessTypeOutput {
	return o
}

func (o TargetStorageAccessTypeOutput) ToTargetStorageAccessTypePtrOutput() TargetStorageAccessTypePtrOutput {
	return o.ToTargetStorageAccessTypePtrOutputWithContext(context.Background())
}

func (o TargetStorageAccessTypeOutput) ToTargetStorageAccessTypePtrOutputWithContext(ctx context.Context) TargetStorageAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetStorageAccessType) *TargetStorageAccessType {
		return &v
	}).(TargetStorageAccessTypePtrOutput)
}

func (o TargetStorageAccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetStorageAccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetStorageAccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetStorageAccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetStorageAccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetStorageAccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetStorageAccessTypePtrOutput struct{ *pulumi.OutputState }

func (TargetStorageAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetStorageAccessType)(nil)).Elem()
}

func (o TargetStorageAccessTypePtrOutput) ToTargetStorageAccessTypePtrOutput() TargetStorageAccessTypePtrOutput {
	return o
}

func (o TargetStorageAccessTypePtrOutput) ToTargetStorageAccessTypePtrOutputWithContext(ctx context.Context) TargetStorageAccessTypePtrOutput {
	return o
}

func (o TargetStorageAccessTypePtrOutput) Elem() TargetStorageAccessTypeOutput {
	return o.ApplyT(func(v *TargetStorageAccessType) TargetStorageAccessType {
		if v != nil {
			return *v
		}
		var ret TargetStorageAccessType
		return ret
	}).(TargetStorageAccessTypeOutput)
}

func (o TargetStorageAccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetStorageAccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetStorageAccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetStorageAccessTypeInput is an input type that accepts values of the TargetStorageAccessType enum
// A concrete instance of `TargetStorageAccessTypeInput` can be one of the following:
//
//	TargetStorageAccessTypeShared
//	TargetStorageAccessTypeExclusive
type TargetStorageAccessTypeInput interface {
	pulumi.Input

	ToTargetStorageAccessTypeOutput() TargetStorageAccessTypeOutput
	ToTargetStorageAccessTypeOutputWithContext(context.Context) TargetStorageAccessTypeOutput
}

var targetStorageAccessTypePtrType = reflect.TypeOf((**TargetStorageAccessType)(nil)).Elem()

type TargetStorageAccessTypePtrInput interface {
	pulumi.Input

	ToTargetStorageAccessTypePtrOutput() TargetStorageAccessTypePtrOutput
	ToTargetStorageAccessTypePtrOutputWithContext(context.Context) TargetStorageAccessTypePtrOutput
}

type targetStorageAccessTypePtr string

func TargetStorageAccessTypePtr(v string) TargetStorageAccessTypePtrInput {
	return (*targetStorageAccessTypePtr)(&v)
}

func (*targetStorageAccessTypePtr) ElementType() reflect.Type {
	return targetStorageAccessTypePtrType
}

func (in *targetStorageAccessTypePtr) ToTargetStorageAccessTypePtrOutput() TargetStorageAccessTypePtrOutput {
	return pulumi.ToOutput(in).(TargetStorageAccessTypePtrOutput)
}

func (in *targetStorageAccessTypePtr) ToTargetStorageAccessTypePtrOutputWithContext(ctx context.Context) TargetStorageAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetStorageAccessTypePtrOutput)
}

func (in *targetStorageAccessTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TargetStorageAccessType] {
	return pulumix.Output[*TargetStorageAccessType]{
		OutputState: in.ToTargetStorageAccessTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the target projection type.
type TargetStorageProjectionType string

const (
	TargetStorageProjectionTypeContainerFileSystem = TargetStorageProjectionType("ContainerFileSystem")
	TargetStorageProjectionTypePersistentVolume    = TargetStorageProjectionType("PersistentVolume")
)

func (TargetStorageProjectionType) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetStorageProjectionType)(nil)).Elem()
}

func (e TargetStorageProjectionType) ToTargetStorageProjectionTypeOutput() TargetStorageProjectionTypeOutput {
	return pulumi.ToOutput(e).(TargetStorageProjectionTypeOutput)
}

func (e TargetStorageProjectionType) ToTargetStorageProjectionTypeOutputWithContext(ctx context.Context) TargetStorageProjectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetStorageProjectionTypeOutput)
}

func (e TargetStorageProjectionType) ToTargetStorageProjectionTypePtrOutput() TargetStorageProjectionTypePtrOutput {
	return e.ToTargetStorageProjectionTypePtrOutputWithContext(context.Background())
}

func (e TargetStorageProjectionType) ToTargetStorageProjectionTypePtrOutputWithContext(ctx context.Context) TargetStorageProjectionTypePtrOutput {
	return TargetStorageProjectionType(e).ToTargetStorageProjectionTypeOutputWithContext(ctx).ToTargetStorageProjectionTypePtrOutputWithContext(ctx)
}

func (e TargetStorageProjectionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetStorageProjectionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetStorageProjectionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetStorageProjectionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetStorageProjectionTypeOutput struct{ *pulumi.OutputState }

func (TargetStorageProjectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetStorageProjectionType)(nil)).Elem()
}

func (o TargetStorageProjectionTypeOutput) ToTargetStorageProjectionTypeOutput() TargetStorageProjectionTypeOutput {
	return o
}

func (o TargetStorageProjectionTypeOutput) ToTargetStorageProjectionTypeOutputWithContext(ctx context.Context) TargetStorageProjectionTypeOutput {
	return o
}

func (o TargetStorageProjectionTypeOutput) ToTargetStorageProjectionTypePtrOutput() TargetStorageProjectionTypePtrOutput {
	return o.ToTargetStorageProjectionTypePtrOutputWithContext(context.Background())
}

func (o TargetStorageProjectionTypeOutput) ToTargetStorageProjectionTypePtrOutputWithContext(ctx context.Context) TargetStorageProjectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetStorageProjectionType) *TargetStorageProjectionType {
		return &v
	}).(TargetStorageProjectionTypePtrOutput)
}

func (o TargetStorageProjectionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetStorageProjectionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetStorageProjectionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetStorageProjectionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetStorageProjectionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetStorageProjectionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetStorageProjectionTypePtrOutput struct{ *pulumi.OutputState }

func (TargetStorageProjectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetStorageProjectionType)(nil)).Elem()
}

func (o TargetStorageProjectionTypePtrOutput) ToTargetStorageProjectionTypePtrOutput() TargetStorageProjectionTypePtrOutput {
	return o
}

func (o TargetStorageProjectionTypePtrOutput) ToTargetStorageProjectionTypePtrOutputWithContext(ctx context.Context) TargetStorageProjectionTypePtrOutput {
	return o
}

func (o TargetStorageProjectionTypePtrOutput) Elem() TargetStorageProjectionTypeOutput {
	return o.ApplyT(func(v *TargetStorageProjectionType) TargetStorageProjectionType {
		if v != nil {
			return *v
		}
		var ret TargetStorageProjectionType
		return ret
	}).(TargetStorageProjectionTypeOutput)
}

func (o TargetStorageProjectionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetStorageProjectionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetStorageProjectionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetStorageProjectionTypeInput is an input type that accepts values of the TargetStorageProjectionType enum
// A concrete instance of `TargetStorageProjectionTypeInput` can be one of the following:
//
//	TargetStorageProjectionTypeContainerFileSystem
//	TargetStorageProjectionTypePersistentVolume
type TargetStorageProjectionTypeInput interface {
	pulumi.Input

	ToTargetStorageProjectionTypeOutput() TargetStorageProjectionTypeOutput
	ToTargetStorageProjectionTypeOutputWithContext(context.Context) TargetStorageProjectionTypeOutput
}

var targetStorageProjectionTypePtrType = reflect.TypeOf((**TargetStorageProjectionType)(nil)).Elem()

type TargetStorageProjectionTypePtrInput interface {
	pulumi.Input

	ToTargetStorageProjectionTypePtrOutput() TargetStorageProjectionTypePtrOutput
	ToTargetStorageProjectionTypePtrOutputWithContext(context.Context) TargetStorageProjectionTypePtrOutput
}

type targetStorageProjectionTypePtr string

func TargetStorageProjectionTypePtr(v string) TargetStorageProjectionTypePtrInput {
	return (*targetStorageProjectionTypePtr)(&v)
}

func (*targetStorageProjectionTypePtr) ElementType() reflect.Type {
	return targetStorageProjectionTypePtrType
}

func (in *targetStorageProjectionTypePtr) ToTargetStorageProjectionTypePtrOutput() TargetStorageProjectionTypePtrOutput {
	return pulumi.ToOutput(in).(TargetStorageProjectionTypePtrOutput)
}

func (in *targetStorageProjectionTypePtr) ToTargetStorageProjectionTypePtrOutputWithContext(ctx context.Context) TargetStorageProjectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetStorageProjectionTypePtrOutput)
}

func (in *targetStorageProjectionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TargetStorageProjectionType] {
	return pulumix.Output[*TargetStorageProjectionType]{
		OutputState: in.ToTargetStorageProjectionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the deployment target platform.
type WorkloadDeploymentTarget string

const (
	WorkloadDeploymentTargetAzureKubernetesService   = WorkloadDeploymentTarget("AzureKubernetesService")
	WorkloadDeploymentTargetAzureAppServiceContainer = WorkloadDeploymentTarget("AzureAppServiceContainer")
	WorkloadDeploymentTargetAzureAppServiceNative    = WorkloadDeploymentTarget("AzureAppServiceNative")
)

func (WorkloadDeploymentTarget) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDeploymentTarget)(nil)).Elem()
}

func (e WorkloadDeploymentTarget) ToWorkloadDeploymentTargetOutput() WorkloadDeploymentTargetOutput {
	return pulumi.ToOutput(e).(WorkloadDeploymentTargetOutput)
}

func (e WorkloadDeploymentTarget) ToWorkloadDeploymentTargetOutputWithContext(ctx context.Context) WorkloadDeploymentTargetOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkloadDeploymentTargetOutput)
}

func (e WorkloadDeploymentTarget) ToWorkloadDeploymentTargetPtrOutput() WorkloadDeploymentTargetPtrOutput {
	return e.ToWorkloadDeploymentTargetPtrOutputWithContext(context.Background())
}

func (e WorkloadDeploymentTarget) ToWorkloadDeploymentTargetPtrOutputWithContext(ctx context.Context) WorkloadDeploymentTargetPtrOutput {
	return WorkloadDeploymentTarget(e).ToWorkloadDeploymentTargetOutputWithContext(ctx).ToWorkloadDeploymentTargetPtrOutputWithContext(ctx)
}

func (e WorkloadDeploymentTarget) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadDeploymentTarget) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadDeploymentTarget) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkloadDeploymentTarget) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkloadDeploymentTargetOutput struct{ *pulumi.OutputState }

func (WorkloadDeploymentTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDeploymentTarget)(nil)).Elem()
}

func (o WorkloadDeploymentTargetOutput) ToWorkloadDeploymentTargetOutput() WorkloadDeploymentTargetOutput {
	return o
}

func (o WorkloadDeploymentTargetOutput) ToWorkloadDeploymentTargetOutputWithContext(ctx context.Context) WorkloadDeploymentTargetOutput {
	return o
}

func (o WorkloadDeploymentTargetOutput) ToWorkloadDeploymentTargetPtrOutput() WorkloadDeploymentTargetPtrOutput {
	return o.ToWorkloadDeploymentTargetPtrOutputWithContext(context.Background())
}

func (o WorkloadDeploymentTargetOutput) ToWorkloadDeploymentTargetPtrOutputWithContext(ctx context.Context) WorkloadDeploymentTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadDeploymentTarget) *WorkloadDeploymentTarget {
		return &v
	}).(WorkloadDeploymentTargetPtrOutput)
}

func (o WorkloadDeploymentTargetOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkloadDeploymentTargetOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadDeploymentTarget) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkloadDeploymentTargetOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadDeploymentTargetOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadDeploymentTarget) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkloadDeploymentTargetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadDeploymentTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDeploymentTarget)(nil)).Elem()
}

func (o WorkloadDeploymentTargetPtrOutput) ToWorkloadDeploymentTargetPtrOutput() WorkloadDeploymentTargetPtrOutput {
	return o
}

func (o WorkloadDeploymentTargetPtrOutput) ToWorkloadDeploymentTargetPtrOutputWithContext(ctx context.Context) WorkloadDeploymentTargetPtrOutput {
	return o
}

func (o WorkloadDeploymentTargetPtrOutput) Elem() WorkloadDeploymentTargetOutput {
	return o.ApplyT(func(v *WorkloadDeploymentTarget) WorkloadDeploymentTarget {
		if v != nil {
			return *v
		}
		var ret WorkloadDeploymentTarget
		return ret
	}).(WorkloadDeploymentTargetOutput)
}

func (o WorkloadDeploymentTargetPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadDeploymentTargetPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkloadDeploymentTarget) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkloadDeploymentTargetInput is an input type that accepts values of the WorkloadDeploymentTarget enum
// A concrete instance of `WorkloadDeploymentTargetInput` can be one of the following:
//
//	WorkloadDeploymentTargetAzureKubernetesService
//	WorkloadDeploymentTargetAzureAppServiceContainer
//	WorkloadDeploymentTargetAzureAppServiceNative
type WorkloadDeploymentTargetInput interface {
	pulumi.Input

	ToWorkloadDeploymentTargetOutput() WorkloadDeploymentTargetOutput
	ToWorkloadDeploymentTargetOutputWithContext(context.Context) WorkloadDeploymentTargetOutput
}

var workloadDeploymentTargetPtrType = reflect.TypeOf((**WorkloadDeploymentTarget)(nil)).Elem()

type WorkloadDeploymentTargetPtrInput interface {
	pulumi.Input

	ToWorkloadDeploymentTargetPtrOutput() WorkloadDeploymentTargetPtrOutput
	ToWorkloadDeploymentTargetPtrOutputWithContext(context.Context) WorkloadDeploymentTargetPtrOutput
}

type workloadDeploymentTargetPtr string

func WorkloadDeploymentTargetPtr(v string) WorkloadDeploymentTargetPtrInput {
	return (*workloadDeploymentTargetPtr)(&v)
}

func (*workloadDeploymentTargetPtr) ElementType() reflect.Type {
	return workloadDeploymentTargetPtrType
}

func (in *workloadDeploymentTargetPtr) ToWorkloadDeploymentTargetPtrOutput() WorkloadDeploymentTargetPtrOutput {
	return pulumi.ToOutput(in).(WorkloadDeploymentTargetPtrOutput)
}

func (in *workloadDeploymentTargetPtr) ToWorkloadDeploymentTargetPtrOutputWithContext(ctx context.Context) WorkloadDeploymentTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkloadDeploymentTargetPtrOutput)
}

func (in *workloadDeploymentTargetPtr) ToOutput(ctx context.Context) pulumix.Output[*WorkloadDeploymentTarget] {
	return pulumix.Output[*WorkloadDeploymentTarget]{
		OutputState: in.ToWorkloadDeploymentTargetPtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the instance type.
type WorkloadDeploymentType string

const (
	WorkloadDeploymentTypeIISAKSWorkloadDeployment          = WorkloadDeploymentType("IISAKSWorkloadDeployment")
	WorkloadDeploymentTypeApacheTomcatAKSWorkloadDeployment = WorkloadDeploymentType("ApacheTomcatAKSWorkloadDeployment")
)

// Gets or sets the instance type.
type WorkloadType string

const (
	WorkloadTypeIISWorkload          = WorkloadType("IISWorkload")
	WorkloadTypeApacheTomcatWorkload = WorkloadType("ApacheTomcatWorkload")
)

func init() {
	pulumi.RegisterOutputType(AutomationArtifactStatusOutput{})
	pulumi.RegisterOutputType(AutomationArtifactStatusPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationTypeOutput{})
	pulumi.RegisterOutputType(ConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypePtrOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypeOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypesOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypesPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreTypePtrOutput{})
	pulumi.RegisterOutputType(TargetHydrationStorageProviderTypeOutput{})
	pulumi.RegisterOutputType(TargetHydrationStorageProviderTypePtrOutput{})
	pulumi.RegisterOutputType(TargetStorageAccessTypeOutput{})
	pulumi.RegisterOutputType(TargetStorageAccessTypePtrOutput{})
	pulumi.RegisterOutputType(TargetStorageProjectionTypeOutput{})
	pulumi.RegisterOutputType(TargetStorageProjectionTypePtrOutput{})
	pulumi.RegisterOutputType(WorkloadDeploymentTargetOutput{})
	pulumi.RegisterOutputType(WorkloadDeploymentTargetPtrOutput{})
}
