// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220501preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Workload instance model.
type WorkloadInstance struct {
	pulumi.CustomResourceState

	// Gets or sets the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Workload instance model properties.
	Properties WorkloadInstanceModelPropertiesResponseOutput `pulumi:"properties"`
	SystemData WorkloadInstanceModelResponseSystemDataOutput `pulumi:"systemData"`
	// Gets or sets the resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Gets or sets the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWorkloadInstance registers a new resource with the given unique name, arguments, and options.
func NewWorkloadInstance(ctx *pulumi.Context,
	name string, args *WorkloadInstanceArgs, opts ...pulumi.ResourceOption) (*WorkloadInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ModernizeProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ModernizeProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource WorkloadInstance
	err := ctx.RegisterResource("azure-native:migrate/v20220501preview:WorkloadInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadInstance gets an existing WorkloadInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadInstanceState, opts ...pulumi.ResourceOption) (*WorkloadInstance, error) {
	var resource WorkloadInstance
	err := ctx.ReadResource("azure-native:migrate/v20220501preview:WorkloadInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadInstance resources.
type workloadInstanceState struct {
}

type WorkloadInstanceState struct {
}

func (WorkloadInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadInstanceState)(nil)).Elem()
}

type workloadInstanceArgs struct {
	// ModernizeProject name.
	ModernizeProjectName string `pulumi:"modernizeProjectName"`
	// Workload instance model properties.
	Properties *WorkloadInstanceModelProperties `pulumi:"properties"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure Subscription Id in which project was created.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Gets or sets the resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Workload instance name.
	WorkloadInstanceName *string `pulumi:"workloadInstanceName"`
}

// The set of arguments for constructing a WorkloadInstance resource.
type WorkloadInstanceArgs struct {
	// ModernizeProject name.
	ModernizeProjectName pulumi.StringInput
	// Workload instance model properties.
	Properties WorkloadInstanceModelPropertiesPtrInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
	// Azure Subscription Id in which project was created.
	SubscriptionId pulumi.StringPtrInput
	// Gets or sets the resource tags.
	Tags pulumi.StringMapInput
	// Workload instance name.
	WorkloadInstanceName pulumi.StringPtrInput
}

func (WorkloadInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadInstanceArgs)(nil)).Elem()
}

type WorkloadInstanceInput interface {
	pulumi.Input

	ToWorkloadInstanceOutput() WorkloadInstanceOutput
	ToWorkloadInstanceOutputWithContext(ctx context.Context) WorkloadInstanceOutput
}

func (*WorkloadInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadInstance)(nil)).Elem()
}

func (i *WorkloadInstance) ToWorkloadInstanceOutput() WorkloadInstanceOutput {
	return i.ToWorkloadInstanceOutputWithContext(context.Background())
}

func (i *WorkloadInstance) ToWorkloadInstanceOutputWithContext(ctx context.Context) WorkloadInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInstanceOutput)
}

type WorkloadInstanceOutput struct{ *pulumi.OutputState }

func (WorkloadInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadInstance)(nil)).Elem()
}

func (o WorkloadInstanceOutput) ToWorkloadInstanceOutput() WorkloadInstanceOutput {
	return o
}

func (o WorkloadInstanceOutput) ToWorkloadInstanceOutputWithContext(ctx context.Context) WorkloadInstanceOutput {
	return o
}

// Gets or sets the name of the resource.
func (o WorkloadInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Workload instance model properties.
func (o WorkloadInstanceOutput) Properties() WorkloadInstanceModelPropertiesResponseOutput {
	return o.ApplyT(func(v *WorkloadInstance) WorkloadInstanceModelPropertiesResponseOutput { return v.Properties }).(WorkloadInstanceModelPropertiesResponseOutput)
}

func (o WorkloadInstanceOutput) SystemData() WorkloadInstanceModelResponseSystemDataOutput {
	return o.ApplyT(func(v *WorkloadInstance) WorkloadInstanceModelResponseSystemDataOutput { return v.SystemData }).(WorkloadInstanceModelResponseSystemDataOutput)
}

// Gets or sets the resource tags.
func (o WorkloadInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets or sets the type of the resource.
func (o WorkloadInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkloadInstanceOutput{})
}
