// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SQL Assessment REST resource.
//
// Uses Azure REST API version 2024-03-03-preview.
type SqlAssessmentV3Operation struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties SqlAssessmentV3PropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlAssessmentV3Operation registers a new resource with the given unique name, arguments, and options.
func NewSqlAssessmentV3Operation(ctx *pulumi.Context,
	name string, args *SqlAssessmentV3OperationArgs, opts ...pulumi.ResourceOption) (*SqlAssessmentV3Operation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20240303preview:SqlAssessmentV3Operation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SqlAssessmentV3Operation
	err := ctx.RegisterResource("azure-native:migrate:SqlAssessmentV3Operation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlAssessmentV3Operation gets an existing SqlAssessmentV3Operation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlAssessmentV3Operation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlAssessmentV3OperationState, opts ...pulumi.ResourceOption) (*SqlAssessmentV3Operation, error) {
	var resource SqlAssessmentV3Operation
	err := ctx.ReadResource("azure-native:migrate:SqlAssessmentV3Operation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlAssessmentV3Operation resources.
type sqlAssessmentV3OperationState struct {
}

type SqlAssessmentV3OperationState struct {
}

func (SqlAssessmentV3OperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlAssessmentV3OperationState)(nil)).Elem()
}

type sqlAssessmentV3OperationArgs struct {
	// SQL Assessment arm name.
	AssessmentName *string `pulumi:"assessmentName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The resource-specific properties for this resource.
	Properties *SqlAssessmentV3Properties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a SqlAssessmentV3Operation resource.
type SqlAssessmentV3OperationArgs struct {
	// SQL Assessment arm name.
	AssessmentName pulumi.StringPtrInput
	// Assessment Project Name
	ProjectName pulumi.StringInput
	// The resource-specific properties for this resource.
	Properties SqlAssessmentV3PropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (SqlAssessmentV3OperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlAssessmentV3OperationArgs)(nil)).Elem()
}

type SqlAssessmentV3OperationInput interface {
	pulumi.Input

	ToSqlAssessmentV3OperationOutput() SqlAssessmentV3OperationOutput
	ToSqlAssessmentV3OperationOutputWithContext(ctx context.Context) SqlAssessmentV3OperationOutput
}

func (*SqlAssessmentV3Operation) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAssessmentV3Operation)(nil)).Elem()
}

func (i *SqlAssessmentV3Operation) ToSqlAssessmentV3OperationOutput() SqlAssessmentV3OperationOutput {
	return i.ToSqlAssessmentV3OperationOutputWithContext(context.Background())
}

func (i *SqlAssessmentV3Operation) ToSqlAssessmentV3OperationOutputWithContext(ctx context.Context) SqlAssessmentV3OperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAssessmentV3OperationOutput)
}

type SqlAssessmentV3OperationOutput struct{ *pulumi.OutputState }

func (SqlAssessmentV3OperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAssessmentV3Operation)(nil)).Elem()
}

func (o SqlAssessmentV3OperationOutput) ToSqlAssessmentV3OperationOutput() SqlAssessmentV3OperationOutput {
	return o
}

func (o SqlAssessmentV3OperationOutput) ToSqlAssessmentV3OperationOutputWithContext(ctx context.Context) SqlAssessmentV3OperationOutput {
	return o
}

// The Azure API version of the resource.
func (o SqlAssessmentV3OperationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAssessmentV3Operation) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o SqlAssessmentV3OperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAssessmentV3Operation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o SqlAssessmentV3OperationOutput) Properties() SqlAssessmentV3PropertiesResponseOutput {
	return o.ApplyT(func(v *SqlAssessmentV3Operation) SqlAssessmentV3PropertiesResponseOutput { return v.Properties }).(SqlAssessmentV3PropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SqlAssessmentV3OperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SqlAssessmentV3Operation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SqlAssessmentV3OperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAssessmentV3Operation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SqlAssessmentV3OperationOutput{})
}
