// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a SqlAssessmentV2
// Azure REST API version: 2024-01-01-preview.
func LookupAssessmentProjectsSqlAssessmentV2Operation(ctx *pulumi.Context, args *LookupAssessmentProjectsSqlAssessmentV2OperationArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentProjectsSqlAssessmentV2OperationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentProjectsSqlAssessmentV2OperationResult
	err := ctx.Invoke("azure-native:migrate:getAssessmentProjectsSqlAssessmentV2Operation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentProjectsSqlAssessmentV2OperationArgs struct {
	// SQL Assessment arm name.
	AssessmentName string `pulumi:"assessmentName"`
	// Group ARM name
	GroupName string `pulumi:"groupName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// SQL Assessment REST resource.
type LookupAssessmentProjectsSqlAssessmentV2OperationResult struct {
	// Assessment type of the assessment.
	AssessmentType *string `pulumi:"assessmentType"`
	// Gets or sets user preference indicating intent of async commit mode.
	AsyncCommitModeIntent *string `pulumi:"asyncCommitModeIntent"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Azure Location or Azure region where to which the machines will be migrated.
	AzureLocation *string `pulumi:"azureLocation"`
	// Azure Offer Code.
	AzureOfferCode *string `pulumi:"azureOfferCode"`
	// Gets or sets Azure Offer Code for VM.
	AzureOfferCodeForVm *string `pulumi:"azureOfferCodeForVm"`
	// Gets or sets a value indicating azure security offering type.
	AzureSecurityOfferingType *string `pulumi:"azureSecurityOfferingType"`
	// Gets or sets user configurable SQL database settings.
	AzureSqlDatabaseSettings *SqlDbSettingsResponse `pulumi:"azureSqlDatabaseSettings"`
	// Gets or sets user configurable SQL managed instance settings.
	AzureSqlManagedInstanceSettings *SqlMiSettingsResponse `pulumi:"azureSqlManagedInstanceSettings"`
	// Gets or sets user configurable SQL VM settings.
	AzureSqlVmSettings *SqlVmSettingsResponse `pulumi:"azureSqlVmSettings"`
	// Confidence Rating in Percentage.
	ConfidenceRatingInPercentage *float64 `pulumi:"confidenceRatingInPercentage"`
	// Date and Time when assessment was created.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// Currency in which prices should be reported.
	Currency *string `pulumi:"currency"`
	// Gets or sets the Azure Location or Azure region where to which the machines
	// will be migrated.
	DisasterRecoveryLocation *string `pulumi:"disasterRecoveryLocation"`
	// Custom discount percentage.
	DiscountPercentage *float64 `pulumi:"discountPercentage"`
	// Gets or sets the Enterprise agreement subscription id.
	EaSubscriptionId *string `pulumi:"eaSubscriptionId"`
	// Gets or sets a value indicating whether HADR assessments needs to be created.
	EnableHadrAssessment *bool `pulumi:"enableHadrAssessment"`
	// Gets or sets the duration for which the entity (SQL, VMs) are up in the
	// on-premises environment.
	EntityUptime *EntityUptimeResponse `pulumi:"entityUptime"`
	// Gets or sets user configurable setting to display the environment type.
	EnvironmentType *string `pulumi:"environmentType"`
	// Gets the group type for the assessment.
	GroupType *string `pulumi:"groupType"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Gets or sets a value indicating whether internet access is available.
	IsInternetAccessAvailable *bool `pulumi:"isInternetAccessAvailable"`
	// Gets or sets user preference indicating intent of multi-subnet configuration.
	MultiSubnetIntent *string `pulumi:"multiSubnetIntent"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets SQL optimization logic.
	OptimizationLogic *string `pulumi:"optimizationLogic"`
	// Gets or sets user configurable setting to display the azure hybrid use benefit.
	OsLicense *string `pulumi:"osLicense"`
	// Percentile of the utilization data values to be considered while assessing
	// machines.
	Percentile *string `pulumi:"percentile"`
	// Gets or sets the end time to consider performance data for assessment.
	PerfDataEndTime *string `pulumi:"perfDataEndTime"`
	// Gets or sets the start time to consider performance data for assessment.
	PerfDataStartTime *string `pulumi:"perfDataStartTime"`
	// Last time when rates were queried.
	PricesTimestamp string `pulumi:"pricesTimestamp"`
	// The status of the last operation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reserved instance.
	ReservedInstance *string `pulumi:"reservedInstance"`
	// Gets or sets azure reserved instance for VM.
	ReservedInstanceForVm *string `pulumi:"reservedInstanceForVm"`
	// Percentage of buffer that user wants on performance metrics when recommending
	// Azure sizes.
	ScalingFactor *float64 `pulumi:"scalingFactor"`
	// Schema version.
	SchemaVersion string `pulumi:"schemaVersion"`
	// Assessment sizing criterion.
	SizingCriterion *string `pulumi:"sizingCriterion"`
	// SQL server license.
	SqlServerLicense *string `pulumi:"sqlServerLicense"`
	// User configurable setting to display the Stage of Assessment.
	Stage string `pulumi:"stage"`
	// Whether assessment is in valid state and all machines have been assessed.
	Status string `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Time Range for which the historic utilization data should be considered for
	// assessment.
	TimeRange *string `pulumi:"timeRange"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Date and Time when assessment was last updated.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
}

func LookupAssessmentProjectsSqlAssessmentV2OperationOutput(ctx *pulumi.Context, args LookupAssessmentProjectsSqlAssessmentV2OperationOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput, error) {
			args := v.(LookupAssessmentProjectsSqlAssessmentV2OperationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getAssessmentProjectsSqlAssessmentV2Operation", args, LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput{}, options).(LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput), nil
		}).(LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput)
}

type LookupAssessmentProjectsSqlAssessmentV2OperationOutputArgs struct {
	// SQL Assessment arm name.
	AssessmentName pulumi.StringInput `pulumi:"assessmentName"`
	// Group ARM name
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Assessment Project Name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssessmentProjectsSqlAssessmentV2OperationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsSqlAssessmentV2OperationArgs)(nil)).Elem()
}

// SQL Assessment REST resource.
type LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsSqlAssessmentV2OperationResult)(nil)).Elem()
}

func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ToLookupAssessmentProjectsSqlAssessmentV2OperationResultOutput() LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput {
	return o
}

func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ToLookupAssessmentProjectsSqlAssessmentV2OperationResultOutputWithContext(ctx context.Context) LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput {
	return o
}

// Assessment type of the assessment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AssessmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.AssessmentType }).(pulumi.StringPtrOutput)
}

// Gets or sets user preference indicating intent of async commit mode.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AsyncCommitModeIntent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.AsyncCommitModeIntent }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Azure Location or Azure region where to which the machines will be migrated.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.AzureLocation }).(pulumi.StringPtrOutput)
}

// Azure Offer Code.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureOfferCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.AzureOfferCode }).(pulumi.StringPtrOutput)
}

// Gets or sets Azure Offer Code for VM.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureOfferCodeForVm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.AzureOfferCodeForVm }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating azure security offering type.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureSecurityOfferingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string {
		return v.AzureSecurityOfferingType
	}).(pulumi.StringPtrOutput)
}

// Gets or sets user configurable SQL database settings.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureSqlDatabaseSettings() SqlDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *SqlDbSettingsResponse {
		return v.AzureSqlDatabaseSettings
	}).(SqlDbSettingsResponsePtrOutput)
}

// Gets or sets user configurable SQL managed instance settings.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureSqlManagedInstanceSettings() SqlMiSettingsResponsePtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *SqlMiSettingsResponse {
		return v.AzureSqlManagedInstanceSettings
	}).(SqlMiSettingsResponsePtrOutput)
}

// Gets or sets user configurable SQL VM settings.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) AzureSqlVmSettings() SqlVmSettingsResponsePtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *SqlVmSettingsResponse {
		return v.AzureSqlVmSettings
	}).(SqlVmSettingsResponsePtrOutput)
}

// Confidence Rating in Percentage.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ConfidenceRatingInPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *float64 {
		return v.ConfidenceRatingInPercentage
	}).(pulumi.Float64PtrOutput)
}

// Date and Time when assessment was created.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Currency in which prices should be reported.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.Currency }).(pulumi.StringPtrOutput)
}

// Gets or sets the Azure Location or Azure region where to which the machines
// will be migrated.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) DisasterRecoveryLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string {
		return v.DisasterRecoveryLocation
	}).(pulumi.StringPtrOutput)
}

// Custom discount percentage.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) DiscountPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *float64 { return v.DiscountPercentage }).(pulumi.Float64PtrOutput)
}

// Gets or sets the Enterprise agreement subscription id.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) EaSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.EaSubscriptionId }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether HADR assessments needs to be created.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) EnableHadrAssessment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *bool { return v.EnableHadrAssessment }).(pulumi.BoolPtrOutput)
}

// Gets or sets the duration for which the entity (SQL, VMs) are up in the
// on-premises environment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) EntityUptime() EntityUptimeResponsePtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *EntityUptimeResponse {
		return v.EntityUptime
	}).(EntityUptimeResponsePtrOutput)
}

// Gets or sets user configurable setting to display the environment type.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

// Gets the group type for the assessment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets a value indicating whether internet access is available.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) IsInternetAccessAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *bool {
		return v.IsInternetAccessAvailable
	}).(pulumi.BoolPtrOutput)
}

// Gets or sets user preference indicating intent of multi-subnet configuration.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) MultiSubnetIntent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.MultiSubnetIntent }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets SQL optimization logic.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) OptimizationLogic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.OptimizationLogic }).(pulumi.StringPtrOutput)
}

// Gets or sets user configurable setting to display the azure hybrid use benefit.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) OsLicense() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.OsLicense }).(pulumi.StringPtrOutput)
}

// Percentile of the utilization data values to be considered while assessing
// machines.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Percentile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.Percentile }).(pulumi.StringPtrOutput)
}

// Gets or sets the end time to consider performance data for assessment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) PerfDataEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.PerfDataEndTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the start time to consider performance data for assessment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) PerfDataStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.PerfDataStartTime }).(pulumi.StringPtrOutput)
}

// Last time when rates were queried.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) PricesTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.PricesTimestamp }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reserved instance.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ReservedInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.ReservedInstance }).(pulumi.StringPtrOutput)
}

// Gets or sets azure reserved instance for VM.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ReservedInstanceForVm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.ReservedInstanceForVm }).(pulumi.StringPtrOutput)
}

// Percentage of buffer that user wants on performance metrics when recommending
// Azure sizes.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) ScalingFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *float64 { return v.ScalingFactor }).(pulumi.Float64PtrOutput)
}

// Schema version.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.SchemaVersion }).(pulumi.StringOutput)
}

// Assessment sizing criterion.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) SizingCriterion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.SizingCriterion }).(pulumi.StringPtrOutput)
}

// SQL server license.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) SqlServerLicense() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.SqlServerLicense }).(pulumi.StringPtrOutput)
}

// User configurable setting to display the Stage of Assessment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.Stage }).(pulumi.StringOutput)
}

// Whether assessment is in valid state and all machines have been assessed.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Time Range for which the historic utilization data should be considered for
// assessment.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Date and Time when assessment was last updated.
func (o LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsSqlAssessmentV2OperationResult) string { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentProjectsSqlAssessmentV2OperationResultOutput{})
}
