// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ARM model of AKS Assessment.
// Azure REST API version: 2024-01-01-preview.
type AssessmentProjectsAksAssessmentOperation struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Gets AKS Assessment Details.
	Details AKSAssessmentDetailsResponseOutput `pulumi:"details"`
	// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	ETag pulumi.StringOutput `pulumi:"eTag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets the provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Gets or sets scope parameters to identify inventory items for assessment.
	Scope AssessmentScopeParametersResponsePtrOutput `pulumi:"scope"`
	// Gets or sets AKS Assessment Settings.
	Settings AKSAssessmentSettingsResponseOutput `pulumi:"settings"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAssessmentProjectsAksAssessmentOperation registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectsAksAssessmentOperation(ctx *pulumi.Context,
	name string, args *AssessmentProjectsAksAssessmentOperationArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectsAksAssessmentOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Settings == nil {
		return nil, errors.New("invalid value for required argument 'Settings'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230401preview:AssessmentProjectsAksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230501preview:AssessmentProjectsAksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20230909preview:AssessmentProjectsAksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate/v20240101preview:AssessmentProjectsAksAssessmentOperation"),
		},
		{
			Type: pulumi.String("azure-native:migrate:AksAssessmentOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AssessmentProjectsAksAssessmentOperation
	err := ctx.RegisterResource("azure-native:migrate:AssessmentProjectsAksAssessmentOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectsAksAssessmentOperation gets an existing AssessmentProjectsAksAssessmentOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectsAksAssessmentOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectsAksAssessmentOperationState, opts ...pulumi.ResourceOption) (*AssessmentProjectsAksAssessmentOperation, error) {
	var resource AssessmentProjectsAksAssessmentOperation
	err := ctx.ReadResource("azure-native:migrate:AssessmentProjectsAksAssessmentOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectsAksAssessmentOperation resources.
type assessmentProjectsAksAssessmentOperationState struct {
}

type AssessmentProjectsAksAssessmentOperationState struct {
}

func (AssessmentProjectsAksAssessmentOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsAksAssessmentOperationState)(nil)).Elem()
}

type assessmentProjectsAksAssessmentOperationArgs struct {
	// AKS Assessment Name.
	AssessmentName *string `pulumi:"assessmentName"`
	// Assessment Project Name
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets scope parameters to identify inventory items for assessment.
	Scope *AssessmentScopeParameters `pulumi:"scope"`
	// Gets or sets AKS Assessment Settings.
	Settings AKSAssessmentSettings `pulumi:"settings"`
}

// The set of arguments for constructing a AssessmentProjectsAksAssessmentOperation resource.
type AssessmentProjectsAksAssessmentOperationArgs struct {
	// AKS Assessment Name.
	AssessmentName pulumi.StringPtrInput
	// Assessment Project Name
	ProjectName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Gets or sets scope parameters to identify inventory items for assessment.
	Scope AssessmentScopeParametersPtrInput
	// Gets or sets AKS Assessment Settings.
	Settings AKSAssessmentSettingsInput
}

func (AssessmentProjectsAksAssessmentOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectsAksAssessmentOperationArgs)(nil)).Elem()
}

type AssessmentProjectsAksAssessmentOperationInput interface {
	pulumi.Input

	ToAssessmentProjectsAksAssessmentOperationOutput() AssessmentProjectsAksAssessmentOperationOutput
	ToAssessmentProjectsAksAssessmentOperationOutputWithContext(ctx context.Context) AssessmentProjectsAksAssessmentOperationOutput
}

func (*AssessmentProjectsAksAssessmentOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsAksAssessmentOperation)(nil)).Elem()
}

func (i *AssessmentProjectsAksAssessmentOperation) ToAssessmentProjectsAksAssessmentOperationOutput() AssessmentProjectsAksAssessmentOperationOutput {
	return i.ToAssessmentProjectsAksAssessmentOperationOutputWithContext(context.Background())
}

func (i *AssessmentProjectsAksAssessmentOperation) ToAssessmentProjectsAksAssessmentOperationOutputWithContext(ctx context.Context) AssessmentProjectsAksAssessmentOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentProjectsAksAssessmentOperationOutput)
}

type AssessmentProjectsAksAssessmentOperationOutput struct{ *pulumi.OutputState }

func (AssessmentProjectsAksAssessmentOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentProjectsAksAssessmentOperation)(nil)).Elem()
}

func (o AssessmentProjectsAksAssessmentOperationOutput) ToAssessmentProjectsAksAssessmentOperationOutput() AssessmentProjectsAksAssessmentOperationOutput {
	return o
}

func (o AssessmentProjectsAksAssessmentOperationOutput) ToAssessmentProjectsAksAssessmentOperationOutputWithContext(ctx context.Context) AssessmentProjectsAksAssessmentOperationOutput {
	return o
}

// The Azure API version of the resource.
func (o AssessmentProjectsAksAssessmentOperationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Gets AKS Assessment Details.
func (o AssessmentProjectsAksAssessmentOperationOutput) Details() AKSAssessmentDetailsResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) AKSAssessmentDetailsResponseOutput { return v.Details }).(AKSAssessmentDetailsResponseOutput)
}

// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
func (o AssessmentProjectsAksAssessmentOperationOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) pulumi.StringOutput { return v.ETag }).(pulumi.StringOutput)
}

// The name of the resource
func (o AssessmentProjectsAksAssessmentOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets the provisioning state.
func (o AssessmentProjectsAksAssessmentOperationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets scope parameters to identify inventory items for assessment.
func (o AssessmentProjectsAksAssessmentOperationOutput) Scope() AssessmentScopeParametersResponsePtrOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) AssessmentScopeParametersResponsePtrOutput {
		return v.Scope
	}).(AssessmentScopeParametersResponsePtrOutput)
}

// Gets or sets AKS Assessment Settings.
func (o AssessmentProjectsAksAssessmentOperationOutput) Settings() AKSAssessmentSettingsResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) AKSAssessmentSettingsResponseOutput {
		return v.Settings
	}).(AKSAssessmentSettingsResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AssessmentProjectsAksAssessmentOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AssessmentProjectsAksAssessmentOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AssessmentProjectsAksAssessmentOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentProjectsAksAssessmentOperationOutput{})
}
