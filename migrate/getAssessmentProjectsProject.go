// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the project with the specified name.
// Azure REST API version: 2019-10-01.
func LookupAssessmentProjectsProject(ctx *pulumi.Context, args *LookupAssessmentProjectsProjectArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentProjectsProjectResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAssessmentProjectsProjectResult
	err := ctx.Invoke("azure-native:migrate:getAssessmentProjectsProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentProjectsProjectArgs struct {
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Azure Migrate Project.
type LookupAssessmentProjectsProjectResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Path reference to this project /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}
	Id string `pulumi:"id"`
	// Azure location in which project is created.
	Location *string `pulumi:"location"`
	// Name of the project.
	Name string `pulumi:"name"`
	// Properties of the project.
	Properties ProjectPropertiesResponse `pulumi:"properties"`
	// Tags provided by Azure Tagging service.
	Tags interface{} `pulumi:"tags"`
	// Type of the object = [Microsoft.Migrate/assessmentProjects].
	Type string `pulumi:"type"`
}

func LookupAssessmentProjectsProjectOutput(ctx *pulumi.Context, args LookupAssessmentProjectsProjectOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentProjectsProjectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAssessmentProjectsProjectResultOutput, error) {
			args := v.(LookupAssessmentProjectsProjectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:migrate:getAssessmentProjectsProject", args, LookupAssessmentProjectsProjectResultOutput{}, options).(LookupAssessmentProjectsProjectResultOutput), nil
		}).(LookupAssessmentProjectsProjectResultOutput)
}

type LookupAssessmentProjectsProjectOutputArgs struct {
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssessmentProjectsProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsProjectArgs)(nil)).Elem()
}

// Azure Migrate Project.
type LookupAssessmentProjectsProjectResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentProjectsProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentProjectsProjectResult)(nil)).Elem()
}

func (o LookupAssessmentProjectsProjectResultOutput) ToLookupAssessmentProjectsProjectResultOutput() LookupAssessmentProjectsProjectResultOutput {
	return o
}

func (o LookupAssessmentProjectsProjectResultOutput) ToLookupAssessmentProjectsProjectResultOutputWithContext(ctx context.Context) LookupAssessmentProjectsProjectResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAssessmentProjectsProjectResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// For optimistic concurrency control.
func (o LookupAssessmentProjectsProjectResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Path reference to this project /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}
func (o LookupAssessmentProjectsProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// Azure location in which project is created.
func (o LookupAssessmentProjectsProjectResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of the project.
func (o LookupAssessmentProjectsProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the project.
func (o LookupAssessmentProjectsProjectResultOutput) Properties() ProjectPropertiesResponseOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) ProjectPropertiesResponse { return v.Properties }).(ProjectPropertiesResponseOutput)
}

// Tags provided by Azure Tagging service.
func (o LookupAssessmentProjectsProjectResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

// Type of the object = [Microsoft.Migrate/assessmentProjects].
func (o LookupAssessmentProjectsProjectResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentProjectsProjectResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentProjectsProjectResultOutput{})
}
