// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the patching schedule of a redis cache.
//
// Uses Azure REST API version 2024-11-01.
//
// Other available API versions: 2016-04-01, 2017-02-01, 2017-10-01, 2018-03-01, 2019-07-01, 2020-06-01, 2020-12-01, 2021-06-01, 2022-05-01, 2022-06-01, 2023-04-01, 2023-05-01-preview, 2023-08-01, 2024-03-01, 2024-04-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native redis [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupPatchSchedule(ctx *pulumi.Context, args *LookupPatchScheduleArgs, opts ...pulumi.InvokeOption) (*LookupPatchScheduleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPatchScheduleResult
	err := ctx.Invoke("azure-native:redis:getPatchSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPatchScheduleArgs struct {
	// The name of the RedisPatchSchedule
	Default string `pulumi:"default"`
	// The name of the redis cache.
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Response to put/get patch schedules for Redis cache.
type LookupPatchScheduleResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// List of patch schedules for a Redis cache.
	ScheduleEntries []ScheduleEntryResponse `pulumi:"scheduleEntries"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupPatchScheduleOutput(ctx *pulumi.Context, args LookupPatchScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupPatchScheduleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPatchScheduleResultOutput, error) {
			args := v.(LookupPatchScheduleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:redis:getPatchSchedule", args, LookupPatchScheduleResultOutput{}, options).(LookupPatchScheduleResultOutput), nil
		}).(LookupPatchScheduleResultOutput)
}

type LookupPatchScheduleOutputArgs struct {
	// The name of the RedisPatchSchedule
	Default pulumi.StringInput `pulumi:"default"`
	// The name of the redis cache.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupPatchScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPatchScheduleArgs)(nil)).Elem()
}

// Response to put/get patch schedules for Redis cache.
type LookupPatchScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupPatchScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPatchScheduleResult)(nil)).Elem()
}

func (o LookupPatchScheduleResultOutput) ToLookupPatchScheduleResultOutput() LookupPatchScheduleResultOutput {
	return o
}

func (o LookupPatchScheduleResultOutput) ToLookupPatchScheduleResultOutputWithContext(ctx context.Context) LookupPatchScheduleResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupPatchScheduleResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupPatchScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupPatchScheduleResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupPatchScheduleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of patch schedules for a Redis cache.
func (o LookupPatchScheduleResultOutput) ScheduleEntries() ScheduleEntryResponseArrayOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) []ScheduleEntryResponse { return v.ScheduleEntries }).(ScheduleEntryResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupPatchScheduleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPatchScheduleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchScheduleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPatchScheduleResultOutput{})
}
