// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Access mode for storage
type AccessMode string

const (
	AccessModeReadOnly  = AccessMode("ReadOnly")
	AccessModeReadWrite = AccessMode("ReadWrite")
)

func (AccessMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessMode)(nil)).Elem()
}

func (e AccessMode) ToAccessModeOutput() AccessModeOutput {
	return pulumi.ToOutput(e).(AccessModeOutput)
}

func (e AccessMode) ToAccessModeOutputWithContext(ctx context.Context) AccessModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessModeOutput)
}

func (e AccessMode) ToAccessModePtrOutput() AccessModePtrOutput {
	return e.ToAccessModePtrOutputWithContext(context.Background())
}

func (e AccessMode) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return AccessMode(e).ToAccessModeOutputWithContext(ctx).ToAccessModePtrOutputWithContext(ctx)
}

func (e AccessMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessModeOutput struct{ *pulumi.OutputState }

func (AccessModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessMode)(nil)).Elem()
}

func (o AccessModeOutput) ToAccessModeOutput() AccessModeOutput {
	return o
}

func (o AccessModeOutput) ToAccessModeOutputWithContext(ctx context.Context) AccessModeOutput {
	return o
}

func (o AccessModeOutput) ToAccessModePtrOutput() AccessModePtrOutput {
	return o.ToAccessModePtrOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessMode) *AccessMode {
		return &v
	}).(AccessModePtrOutput)
}

func (o AccessModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessModePtrOutput struct{ *pulumi.OutputState }

func (AccessModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessMode)(nil)).Elem()
}

func (o AccessModePtrOutput) ToAccessModePtrOutput() AccessModePtrOutput {
	return o
}

func (o AccessModePtrOutput) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return o
}

func (o AccessModePtrOutput) Elem() AccessModeOutput {
	return o.ApplyT(func(v *AccessMode) AccessMode {
		if v != nil {
			return *v
		}
		var ret AccessMode
		return ret
	}).(AccessModeOutput)
}

func (o AccessModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessModeInput is an input type that accepts values of the AccessMode enum
// A concrete instance of `AccessModeInput` can be one of the following:
//
//	AccessModeReadOnly
//	AccessModeReadWrite
type AccessModeInput interface {
	pulumi.Input

	ToAccessModeOutput() AccessModeOutput
	ToAccessModeOutputWithContext(context.Context) AccessModeOutput
}

var accessModePtrType = reflect.TypeOf((**AccessMode)(nil)).Elem()

type AccessModePtrInput interface {
	pulumi.Input

	ToAccessModePtrOutput() AccessModePtrOutput
	ToAccessModePtrOutputWithContext(context.Context) AccessModePtrOutput
}

type accessModePtr string

func AccessModePtr(v string) AccessModePtrInput {
	return (*accessModePtr)(&v)
}

func (*accessModePtr) ElementType() reflect.Type {
	return accessModePtrType
}

func (in *accessModePtr) ToAccessModePtrOutput() AccessModePtrOutput {
	return pulumi.ToOutput(in).(AccessModePtrOutput)
}

func (in *accessModePtr) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessModePtrOutput)
}

func (in *accessModePtr) ToOutput(ctx context.Context) pulumix.Output[*AccessMode] {
	return pulumix.Output[*AccessMode]{
		OutputState: in.ToAccessModePtrOutputWithContext(ctx).OutputState,
	}
}

// Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny
type Action string

const (
	ActionAllow = Action("Allow")
	ActionDeny  = Action("Deny")
)

func (Action) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (e Action) ToActionOutput() ActionOutput {
	return pulumi.ToOutput(e).(ActionOutput)
}

func (e Action) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActionOutput)
}

func (e Action) ToActionPtrOutput() ActionPtrOutput {
	return e.ToActionPtrOutputWithContext(context.Background())
}

func (e Action) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return Action(e).ToActionOutputWithContext(ctx).ToActionPtrOutputWithContext(ctx)
}

func (e Action) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Action) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActionOutput struct{ *pulumi.OutputState }

func (ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (o ActionOutput) ToActionOutput() ActionOutput {
	return o
}

func (o ActionOutput) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return o
}

func (o ActionOutput) ToActionPtrOutput() ActionPtrOutput {
	return o.ToActionPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Action) *Action {
		return &v
	}).(ActionPtrOutput)
}

func (o ActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionPtrOutput struct{ *pulumi.OutputState }

func (ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Action)(nil)).Elem()
}

func (o ActionPtrOutput) ToActionPtrOutput() ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) Elem() ActionOutput {
	return o.ApplyT(func(v *Action) Action {
		if v != nil {
			return *v
		}
		var ret Action
		return ret
	}).(ActionOutput)
}

func (o ActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Action) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActionInput is an input type that accepts values of the Action enum
// A concrete instance of `ActionInput` can be one of the following:
//
//	ActionAllow
//	ActionDeny
type ActionInput interface {
	pulumi.Input

	ToActionOutput() ActionOutput
	ToActionOutputWithContext(context.Context) ActionOutput
}

var actionPtrType = reflect.TypeOf((**Action)(nil)).Elem()

type ActionPtrInput interface {
	pulumi.Input

	ToActionPtrOutput() ActionPtrOutput
	ToActionPtrOutputWithContext(context.Context) ActionPtrOutput
}

type actionPtr string

func ActionPtr(v string) ActionPtrInput {
	return (*actionPtr)(&v)
}

func (*actionPtr) ElementType() reflect.Type {
	return actionPtrType
}

func (in *actionPtr) ToActionPtrOutput() ActionPtrOutput {
	return pulumi.ToOutput(in).(ActionPtrOutput)
}

func (in *actionPtr) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActionPtrOutput)
}

func (in *actionPtr) ToOutput(ctx context.Context) pulumix.Output[*Action] {
	return pulumix.Output[*Action]{
		OutputState: in.ToActionPtrOutputWithContext(ctx).OutputState,
	}
}

// ActiveRevisionsMode controls how active revisions are handled for the Container app:
// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
type ActiveRevisionsMode string

const (
	ActiveRevisionsModeMultiple = ActiveRevisionsMode("Multiple")
	ActiveRevisionsModeSingle   = ActiveRevisionsMode("Single")
)

func (ActiveRevisionsMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRevisionsMode)(nil)).Elem()
}

func (e ActiveRevisionsMode) ToActiveRevisionsModeOutput() ActiveRevisionsModeOutput {
	return pulumi.ToOutput(e).(ActiveRevisionsModeOutput)
}

func (e ActiveRevisionsMode) ToActiveRevisionsModeOutputWithContext(ctx context.Context) ActiveRevisionsModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActiveRevisionsModeOutput)
}

func (e ActiveRevisionsMode) ToActiveRevisionsModePtrOutput() ActiveRevisionsModePtrOutput {
	return e.ToActiveRevisionsModePtrOutputWithContext(context.Background())
}

func (e ActiveRevisionsMode) ToActiveRevisionsModePtrOutputWithContext(ctx context.Context) ActiveRevisionsModePtrOutput {
	return ActiveRevisionsMode(e).ToActiveRevisionsModeOutputWithContext(ctx).ToActiveRevisionsModePtrOutputWithContext(ctx)
}

func (e ActiveRevisionsMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActiveRevisionsMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActiveRevisionsMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ActiveRevisionsMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActiveRevisionsModeOutput struct{ *pulumi.OutputState }

func (ActiveRevisionsModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRevisionsMode)(nil)).Elem()
}

func (o ActiveRevisionsModeOutput) ToActiveRevisionsModeOutput() ActiveRevisionsModeOutput {
	return o
}

func (o ActiveRevisionsModeOutput) ToActiveRevisionsModeOutputWithContext(ctx context.Context) ActiveRevisionsModeOutput {
	return o
}

func (o ActiveRevisionsModeOutput) ToActiveRevisionsModePtrOutput() ActiveRevisionsModePtrOutput {
	return o.ToActiveRevisionsModePtrOutputWithContext(context.Background())
}

func (o ActiveRevisionsModeOutput) ToActiveRevisionsModePtrOutputWithContext(ctx context.Context) ActiveRevisionsModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveRevisionsMode) *ActiveRevisionsMode {
		return &v
	}).(ActiveRevisionsModePtrOutput)
}

func (o ActiveRevisionsModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActiveRevisionsModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActiveRevisionsMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActiveRevisionsModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActiveRevisionsModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActiveRevisionsMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActiveRevisionsModePtrOutput struct{ *pulumi.OutputState }

func (ActiveRevisionsModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRevisionsMode)(nil)).Elem()
}

func (o ActiveRevisionsModePtrOutput) ToActiveRevisionsModePtrOutput() ActiveRevisionsModePtrOutput {
	return o
}

func (o ActiveRevisionsModePtrOutput) ToActiveRevisionsModePtrOutputWithContext(ctx context.Context) ActiveRevisionsModePtrOutput {
	return o
}

func (o ActiveRevisionsModePtrOutput) Elem() ActiveRevisionsModeOutput {
	return o.ApplyT(func(v *ActiveRevisionsMode) ActiveRevisionsMode {
		if v != nil {
			return *v
		}
		var ret ActiveRevisionsMode
		return ret
	}).(ActiveRevisionsModeOutput)
}

func (o ActiveRevisionsModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActiveRevisionsModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActiveRevisionsMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActiveRevisionsModeInput is an input type that accepts values of the ActiveRevisionsMode enum
// A concrete instance of `ActiveRevisionsModeInput` can be one of the following:
//
//	ActiveRevisionsModeMultiple
//	ActiveRevisionsModeSingle
type ActiveRevisionsModeInput interface {
	pulumi.Input

	ToActiveRevisionsModeOutput() ActiveRevisionsModeOutput
	ToActiveRevisionsModeOutputWithContext(context.Context) ActiveRevisionsModeOutput
}

var activeRevisionsModePtrType = reflect.TypeOf((**ActiveRevisionsMode)(nil)).Elem()

type ActiveRevisionsModePtrInput interface {
	pulumi.Input

	ToActiveRevisionsModePtrOutput() ActiveRevisionsModePtrOutput
	ToActiveRevisionsModePtrOutputWithContext(context.Context) ActiveRevisionsModePtrOutput
}

type activeRevisionsModePtr string

func ActiveRevisionsModePtr(v string) ActiveRevisionsModePtrInput {
	return (*activeRevisionsModePtr)(&v)
}

func (*activeRevisionsModePtr) ElementType() reflect.Type {
	return activeRevisionsModePtrType
}

func (in *activeRevisionsModePtr) ToActiveRevisionsModePtrOutput() ActiveRevisionsModePtrOutput {
	return pulumi.ToOutput(in).(ActiveRevisionsModePtrOutput)
}

func (in *activeRevisionsModePtr) ToActiveRevisionsModePtrOutputWithContext(ctx context.Context) ActiveRevisionsModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActiveRevisionsModePtrOutput)
}

func (in *activeRevisionsModePtr) ToOutput(ctx context.Context) pulumix.Output[*ActiveRevisionsMode] {
	return pulumix.Output[*ActiveRevisionsMode]{
		OutputState: in.ToActiveRevisionsModePtrOutputWithContext(ctx).OutputState,
	}
}

// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
type AppProtocol string

const (
	AppProtocolHttp = AppProtocol("http")
	AppProtocolGrpc = AppProtocol("grpc")
)

func (AppProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProtocol)(nil)).Elem()
}

func (e AppProtocol) ToAppProtocolOutput() AppProtocolOutput {
	return pulumi.ToOutput(e).(AppProtocolOutput)
}

func (e AppProtocol) ToAppProtocolOutputWithContext(ctx context.Context) AppProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppProtocolOutput)
}

func (e AppProtocol) ToAppProtocolPtrOutput() AppProtocolPtrOutput {
	return e.ToAppProtocolPtrOutputWithContext(context.Background())
}

func (e AppProtocol) ToAppProtocolPtrOutputWithContext(ctx context.Context) AppProtocolPtrOutput {
	return AppProtocol(e).ToAppProtocolOutputWithContext(ctx).ToAppProtocolPtrOutputWithContext(ctx)
}

func (e AppProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppProtocolOutput struct{ *pulumi.OutputState }

func (AppProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProtocol)(nil)).Elem()
}

func (o AppProtocolOutput) ToAppProtocolOutput() AppProtocolOutput {
	return o
}

func (o AppProtocolOutput) ToAppProtocolOutputWithContext(ctx context.Context) AppProtocolOutput {
	return o
}

func (o AppProtocolOutput) ToAppProtocolPtrOutput() AppProtocolPtrOutput {
	return o.ToAppProtocolPtrOutputWithContext(context.Background())
}

func (o AppProtocolOutput) ToAppProtocolPtrOutputWithContext(ctx context.Context) AppProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppProtocol) *AppProtocol {
		return &v
	}).(AppProtocolPtrOutput)
}

func (o AppProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppProtocolPtrOutput struct{ *pulumi.OutputState }

func (AppProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProtocol)(nil)).Elem()
}

func (o AppProtocolPtrOutput) ToAppProtocolPtrOutput() AppProtocolPtrOutput {
	return o
}

func (o AppProtocolPtrOutput) ToAppProtocolPtrOutputWithContext(ctx context.Context) AppProtocolPtrOutput {
	return o
}

func (o AppProtocolPtrOutput) Elem() AppProtocolOutput {
	return o.ApplyT(func(v *AppProtocol) AppProtocol {
		if v != nil {
			return *v
		}
		var ret AppProtocol
		return ret
	}).(AppProtocolOutput)
}

func (o AppProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppProtocolInput is an input type that accepts values of the AppProtocol enum
// A concrete instance of `AppProtocolInput` can be one of the following:
//
//	AppProtocolHttp
//	AppProtocolGrpc
type AppProtocolInput interface {
	pulumi.Input

	ToAppProtocolOutput() AppProtocolOutput
	ToAppProtocolOutputWithContext(context.Context) AppProtocolOutput
}

var appProtocolPtrType = reflect.TypeOf((**AppProtocol)(nil)).Elem()

type AppProtocolPtrInput interface {
	pulumi.Input

	ToAppProtocolPtrOutput() AppProtocolPtrOutput
	ToAppProtocolPtrOutputWithContext(context.Context) AppProtocolPtrOutput
}

type appProtocolPtr string

func AppProtocolPtr(v string) AppProtocolPtrInput {
	return (*appProtocolPtr)(&v)
}

func (*appProtocolPtr) ElementType() reflect.Type {
	return appProtocolPtrType
}

func (in *appProtocolPtr) ToAppProtocolPtrOutput() AppProtocolPtrOutput {
	return pulumi.ToOutput(in).(AppProtocolPtrOutput)
}

func (in *appProtocolPtr) ToAppProtocolPtrOutputWithContext(ctx context.Context) AppProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppProtocolPtrOutput)
}

func (in *appProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*AppProtocol] {
	return pulumix.Output[*AppProtocol]{
		OutputState: in.ToAppProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// Custom Domain binding type.
type BindingType string

const (
	BindingTypeDisabled   = BindingType("Disabled")
	BindingTypeSniEnabled = BindingType("SniEnabled")
)

func (BindingType) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingType)(nil)).Elem()
}

func (e BindingType) ToBindingTypeOutput() BindingTypeOutput {
	return pulumi.ToOutput(e).(BindingTypeOutput)
}

func (e BindingType) ToBindingTypeOutputWithContext(ctx context.Context) BindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BindingTypeOutput)
}

func (e BindingType) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return e.ToBindingTypePtrOutputWithContext(context.Background())
}

func (e BindingType) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return BindingType(e).ToBindingTypeOutputWithContext(ctx).ToBindingTypePtrOutputWithContext(ctx)
}

func (e BindingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BindingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BindingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BindingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BindingTypeOutput struct{ *pulumi.OutputState }

func (BindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingType)(nil)).Elem()
}

func (o BindingTypeOutput) ToBindingTypeOutput() BindingTypeOutput {
	return o
}

func (o BindingTypeOutput) ToBindingTypeOutputWithContext(ctx context.Context) BindingTypeOutput {
	return o
}

func (o BindingTypeOutput) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return o.ToBindingTypePtrOutputWithContext(context.Background())
}

func (o BindingTypeOutput) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BindingType) *BindingType {
		return &v
	}).(BindingTypePtrOutput)
}

func (o BindingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BindingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BindingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BindingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BindingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BindingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BindingTypePtrOutput struct{ *pulumi.OutputState }

func (BindingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingType)(nil)).Elem()
}

func (o BindingTypePtrOutput) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return o
}

func (o BindingTypePtrOutput) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return o
}

func (o BindingTypePtrOutput) Elem() BindingTypeOutput {
	return o.ApplyT(func(v *BindingType) BindingType {
		if v != nil {
			return *v
		}
		var ret BindingType
		return ret
	}).(BindingTypeOutput)
}

func (o BindingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BindingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BindingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BindingTypeInput is an input type that accepts values of the BindingType enum
// A concrete instance of `BindingTypeInput` can be one of the following:
//
//	BindingTypeDisabled
//	BindingTypeSniEnabled
type BindingTypeInput interface {
	pulumi.Input

	ToBindingTypeOutput() BindingTypeOutput
	ToBindingTypeOutputWithContext(context.Context) BindingTypeOutput
}

var bindingTypePtrType = reflect.TypeOf((**BindingType)(nil)).Elem()

type BindingTypePtrInput interface {
	pulumi.Input

	ToBindingTypePtrOutput() BindingTypePtrOutput
	ToBindingTypePtrOutputWithContext(context.Context) BindingTypePtrOutput
}

type bindingTypePtr string

func BindingTypePtr(v string) BindingTypePtrInput {
	return (*bindingTypePtr)(&v)
}

func (*bindingTypePtr) ElementType() reflect.Type {
	return bindingTypePtrType
}

func (in *bindingTypePtr) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return pulumi.ToOutput(in).(BindingTypePtrOutput)
}

func (in *bindingTypePtr) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BindingTypePtrOutput)
}

func (in *bindingTypePtr) ToOutput(ctx context.Context) pulumix.Output[*BindingType] {
	return pulumix.Output[*BindingType]{
		OutputState: in.ToBindingTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The method that should be used to authenticate the user.
type ClientCredentialMethod string

const (
	ClientCredentialMethodClientSecretPost = ClientCredentialMethod("ClientSecretPost")
)

func (ClientCredentialMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialMethod)(nil)).Elem()
}

func (e ClientCredentialMethod) ToClientCredentialMethodOutput() ClientCredentialMethodOutput {
	return pulumi.ToOutput(e).(ClientCredentialMethodOutput)
}

func (e ClientCredentialMethod) ToClientCredentialMethodOutputWithContext(ctx context.Context) ClientCredentialMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClientCredentialMethodOutput)
}

func (e ClientCredentialMethod) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return e.ToClientCredentialMethodPtrOutputWithContext(context.Background())
}

func (e ClientCredentialMethod) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return ClientCredentialMethod(e).ToClientCredentialMethodOutputWithContext(ctx).ToClientCredentialMethodPtrOutputWithContext(ctx)
}

func (e ClientCredentialMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientCredentialMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientCredentialMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClientCredentialMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClientCredentialMethodOutput struct{ *pulumi.OutputState }

func (ClientCredentialMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialMethod)(nil)).Elem()
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodOutput() ClientCredentialMethodOutput {
	return o
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodOutputWithContext(ctx context.Context) ClientCredentialMethodOutput {
	return o
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return o.ToClientCredentialMethodPtrOutputWithContext(context.Background())
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientCredentialMethod) *ClientCredentialMethod {
		return &v
	}).(ClientCredentialMethodPtrOutput)
}

func (o ClientCredentialMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClientCredentialMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientCredentialMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClientCredentialMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientCredentialMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientCredentialMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClientCredentialMethodPtrOutput struct{ *pulumi.OutputState }

func (ClientCredentialMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCredentialMethod)(nil)).Elem()
}

func (o ClientCredentialMethodPtrOutput) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return o
}

func (o ClientCredentialMethodPtrOutput) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return o
}

func (o ClientCredentialMethodPtrOutput) Elem() ClientCredentialMethodOutput {
	return o.ApplyT(func(v *ClientCredentialMethod) ClientCredentialMethod {
		if v != nil {
			return *v
		}
		var ret ClientCredentialMethod
		return ret
	}).(ClientCredentialMethodOutput)
}

func (o ClientCredentialMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientCredentialMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClientCredentialMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClientCredentialMethodInput is an input type that accepts values of the ClientCredentialMethod enum
// A concrete instance of `ClientCredentialMethodInput` can be one of the following:
//
//	ClientCredentialMethodClientSecretPost
type ClientCredentialMethodInput interface {
	pulumi.Input

	ToClientCredentialMethodOutput() ClientCredentialMethodOutput
	ToClientCredentialMethodOutputWithContext(context.Context) ClientCredentialMethodOutput
}

var clientCredentialMethodPtrType = reflect.TypeOf((**ClientCredentialMethod)(nil)).Elem()

type ClientCredentialMethodPtrInput interface {
	pulumi.Input

	ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput
	ToClientCredentialMethodPtrOutputWithContext(context.Context) ClientCredentialMethodPtrOutput
}

type clientCredentialMethodPtr string

func ClientCredentialMethodPtr(v string) ClientCredentialMethodPtrInput {
	return (*clientCredentialMethodPtr)(&v)
}

func (*clientCredentialMethodPtr) ElementType() reflect.Type {
	return clientCredentialMethodPtrType
}

func (in *clientCredentialMethodPtr) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return pulumi.ToOutput(in).(ClientCredentialMethodPtrOutput)
}

func (in *clientCredentialMethodPtr) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClientCredentialMethodPtrOutput)
}

func (in *clientCredentialMethodPtr) ToOutput(ctx context.Context) pulumix.Output[*ClientCredentialMethod] {
	return pulumix.Output[*ClientCredentialMethod]{
		OutputState: in.ToClientCredentialMethodPtrOutputWithContext(ctx).OutputState,
	}
}

// The convention used when determining the session cookie's expiration.
type CookieExpirationConvention string

const (
	CookieExpirationConventionFixedTime               = CookieExpirationConvention("FixedTime")
	CookieExpirationConventionIdentityProviderDerived = CookieExpirationConvention("IdentityProviderDerived")
)

func (CookieExpirationConvention) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpirationConvention)(nil)).Elem()
}

func (e CookieExpirationConvention) ToCookieExpirationConventionOutput() CookieExpirationConventionOutput {
	return pulumi.ToOutput(e).(CookieExpirationConventionOutput)
}

func (e CookieExpirationConvention) ToCookieExpirationConventionOutputWithContext(ctx context.Context) CookieExpirationConventionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CookieExpirationConventionOutput)
}

func (e CookieExpirationConvention) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return e.ToCookieExpirationConventionPtrOutputWithContext(context.Background())
}

func (e CookieExpirationConvention) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return CookieExpirationConvention(e).ToCookieExpirationConventionOutputWithContext(ctx).ToCookieExpirationConventionPtrOutputWithContext(ctx)
}

func (e CookieExpirationConvention) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CookieExpirationConvention) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CookieExpirationConvention) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CookieExpirationConvention) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CookieExpirationConventionOutput struct{ *pulumi.OutputState }

func (CookieExpirationConventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpirationConvention)(nil)).Elem()
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionOutput() CookieExpirationConventionOutput {
	return o
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionOutputWithContext(ctx context.Context) CookieExpirationConventionOutput {
	return o
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return o.ToCookieExpirationConventionPtrOutputWithContext(context.Background())
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CookieExpirationConvention) *CookieExpirationConvention {
		return &v
	}).(CookieExpirationConventionPtrOutput)
}

func (o CookieExpirationConventionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CookieExpirationConventionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CookieExpirationConvention) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CookieExpirationConventionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CookieExpirationConventionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CookieExpirationConvention) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CookieExpirationConventionPtrOutput struct{ *pulumi.OutputState }

func (CookieExpirationConventionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CookieExpirationConvention)(nil)).Elem()
}

func (o CookieExpirationConventionPtrOutput) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return o
}

func (o CookieExpirationConventionPtrOutput) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return o
}

func (o CookieExpirationConventionPtrOutput) Elem() CookieExpirationConventionOutput {
	return o.ApplyT(func(v *CookieExpirationConvention) CookieExpirationConvention {
		if v != nil {
			return *v
		}
		var ret CookieExpirationConvention
		return ret
	}).(CookieExpirationConventionOutput)
}

func (o CookieExpirationConventionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CookieExpirationConventionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CookieExpirationConvention) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CookieExpirationConventionInput is an input type that accepts values of the CookieExpirationConvention enum
// A concrete instance of `CookieExpirationConventionInput` can be one of the following:
//
//	CookieExpirationConventionFixedTime
//	CookieExpirationConventionIdentityProviderDerived
type CookieExpirationConventionInput interface {
	pulumi.Input

	ToCookieExpirationConventionOutput() CookieExpirationConventionOutput
	ToCookieExpirationConventionOutputWithContext(context.Context) CookieExpirationConventionOutput
}

var cookieExpirationConventionPtrType = reflect.TypeOf((**CookieExpirationConvention)(nil)).Elem()

type CookieExpirationConventionPtrInput interface {
	pulumi.Input

	ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput
	ToCookieExpirationConventionPtrOutputWithContext(context.Context) CookieExpirationConventionPtrOutput
}

type cookieExpirationConventionPtr string

func CookieExpirationConventionPtr(v string) CookieExpirationConventionPtrInput {
	return (*cookieExpirationConventionPtr)(&v)
}

func (*cookieExpirationConventionPtr) ElementType() reflect.Type {
	return cookieExpirationConventionPtrType
}

func (in *cookieExpirationConventionPtr) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return pulumi.ToOutput(in).(CookieExpirationConventionPtrOutput)
}

func (in *cookieExpirationConventionPtr) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CookieExpirationConventionPtrOutput)
}

func (in *cookieExpirationConventionPtr) ToOutput(ctx context.Context) pulumix.Output[*CookieExpirationConvention] {
	return pulumix.Output[*CookieExpirationConvention]{
		OutputState: in.ToCookieExpirationConventionPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the extended location.
type ExtendedLocationTypes string

const (
	ExtendedLocationTypesCustomLocation = ExtendedLocationTypes("CustomLocation")
)

func (ExtendedLocationTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return e.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return ExtendedLocationTypes(e).ToExtendedLocationTypesOutputWithContext(ctx).ToExtendedLocationTypesPtrOutputWithContext(ctx)
}

func (e ExtendedLocationTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypesOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationTypes) *ExtendedLocationTypes {
		return &v
	}).(ExtendedLocationTypesPtrOutput)
}

func (o ExtendedLocationTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypesPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) Elem() ExtendedLocationTypesOutput {
	return o.ApplyT(func(v *ExtendedLocationTypes) ExtendedLocationTypes {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationTypes
		return ret
	}).(ExtendedLocationTypesOutput)
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypesInput is an input type that accepts values of the ExtendedLocationTypes enum
// A concrete instance of `ExtendedLocationTypesInput` can be one of the following:
//
//	ExtendedLocationTypesCustomLocation
type ExtendedLocationTypesInput interface {
	pulumi.Input

	ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput
	ToExtendedLocationTypesOutputWithContext(context.Context) ExtendedLocationTypesOutput
}

var extendedLocationTypesPtrType = reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()

type ExtendedLocationTypesPtrInput interface {
	pulumi.Input

	ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput
	ToExtendedLocationTypesPtrOutputWithContext(context.Context) ExtendedLocationTypesPtrOutput
}

type extendedLocationTypesPtr string

func ExtendedLocationTypesPtr(v string) ExtendedLocationTypesPtrInput {
	return (*extendedLocationTypesPtr)(&v)
}

func (*extendedLocationTypesPtr) ElementType() reflect.Type {
	return extendedLocationTypesPtrType
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypesPtrOutput)
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypesPtrOutput)
}

func (in *extendedLocationTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*ExtendedLocationTypes] {
	return pulumix.Output[*ExtendedLocationTypes]{
		OutputState: in.ToExtendedLocationTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// The convention used to determine the url of the request made.
type ForwardProxyConvention string

const (
	ForwardProxyConventionNoProxy  = ForwardProxyConvention("NoProxy")
	ForwardProxyConventionStandard = ForwardProxyConvention("Standard")
	ForwardProxyConventionCustom   = ForwardProxyConvention("Custom")
)

func (ForwardProxyConvention) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxyConvention)(nil)).Elem()
}

func (e ForwardProxyConvention) ToForwardProxyConventionOutput() ForwardProxyConventionOutput {
	return pulumi.ToOutput(e).(ForwardProxyConventionOutput)
}

func (e ForwardProxyConvention) ToForwardProxyConventionOutputWithContext(ctx context.Context) ForwardProxyConventionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardProxyConventionOutput)
}

func (e ForwardProxyConvention) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return e.ToForwardProxyConventionPtrOutputWithContext(context.Background())
}

func (e ForwardProxyConvention) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return ForwardProxyConvention(e).ToForwardProxyConventionOutputWithContext(ctx).ToForwardProxyConventionPtrOutputWithContext(ctx)
}

func (e ForwardProxyConvention) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardProxyConvention) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardProxyConvention) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardProxyConvention) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardProxyConventionOutput struct{ *pulumi.OutputState }

func (ForwardProxyConventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxyConvention)(nil)).Elem()
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionOutput() ForwardProxyConventionOutput {
	return o
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionOutputWithContext(ctx context.Context) ForwardProxyConventionOutput {
	return o
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return o.ToForwardProxyConventionPtrOutputWithContext(context.Background())
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardProxyConvention) *ForwardProxyConvention {
		return &v
	}).(ForwardProxyConventionPtrOutput)
}

func (o ForwardProxyConventionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardProxyConventionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardProxyConvention) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardProxyConventionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardProxyConventionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardProxyConvention) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardProxyConventionPtrOutput struct{ *pulumi.OutputState }

func (ForwardProxyConventionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardProxyConvention)(nil)).Elem()
}

func (o ForwardProxyConventionPtrOutput) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return o
}

func (o ForwardProxyConventionPtrOutput) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return o
}

func (o ForwardProxyConventionPtrOutput) Elem() ForwardProxyConventionOutput {
	return o.ApplyT(func(v *ForwardProxyConvention) ForwardProxyConvention {
		if v != nil {
			return *v
		}
		var ret ForwardProxyConvention
		return ret
	}).(ForwardProxyConventionOutput)
}

func (o ForwardProxyConventionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardProxyConventionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardProxyConvention) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardProxyConventionInput is an input type that accepts values of the ForwardProxyConvention enum
// A concrete instance of `ForwardProxyConventionInput` can be one of the following:
//
//	ForwardProxyConventionNoProxy
//	ForwardProxyConventionStandard
//	ForwardProxyConventionCustom
type ForwardProxyConventionInput interface {
	pulumi.Input

	ToForwardProxyConventionOutput() ForwardProxyConventionOutput
	ToForwardProxyConventionOutputWithContext(context.Context) ForwardProxyConventionOutput
}

var forwardProxyConventionPtrType = reflect.TypeOf((**ForwardProxyConvention)(nil)).Elem()

type ForwardProxyConventionPtrInput interface {
	pulumi.Input

	ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput
	ToForwardProxyConventionPtrOutputWithContext(context.Context) ForwardProxyConventionPtrOutput
}

type forwardProxyConventionPtr string

func ForwardProxyConventionPtr(v string) ForwardProxyConventionPtrInput {
	return (*forwardProxyConventionPtr)(&v)
}

func (*forwardProxyConventionPtr) ElementType() reflect.Type {
	return forwardProxyConventionPtrType
}

func (in *forwardProxyConventionPtr) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return pulumi.ToOutput(in).(ForwardProxyConventionPtrOutput)
}

func (in *forwardProxyConventionPtr) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardProxyConventionPtrOutput)
}

func (in *forwardProxyConventionPtr) ToOutput(ctx context.Context) pulumix.Output[*ForwardProxyConvention] {
	return pulumix.Output[*ForwardProxyConvention]{
		OutputState: in.ToForwardProxyConventionPtrOutputWithContext(ctx).OutputState,
	}
}

// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.
type IngressClientCertificateMode string

const (
	IngressClientCertificateModeIgnore  = IngressClientCertificateMode("ignore")
	IngressClientCertificateModeAccept  = IngressClientCertificateMode("accept")
	IngressClientCertificateModeRequire = IngressClientCertificateMode("require")
)

func (IngressClientCertificateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressClientCertificateMode)(nil)).Elem()
}

func (e IngressClientCertificateMode) ToIngressClientCertificateModeOutput() IngressClientCertificateModeOutput {
	return pulumi.ToOutput(e).(IngressClientCertificateModeOutput)
}

func (e IngressClientCertificateMode) ToIngressClientCertificateModeOutputWithContext(ctx context.Context) IngressClientCertificateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IngressClientCertificateModeOutput)
}

func (e IngressClientCertificateMode) ToIngressClientCertificateModePtrOutput() IngressClientCertificateModePtrOutput {
	return e.ToIngressClientCertificateModePtrOutputWithContext(context.Background())
}

func (e IngressClientCertificateMode) ToIngressClientCertificateModePtrOutputWithContext(ctx context.Context) IngressClientCertificateModePtrOutput {
	return IngressClientCertificateMode(e).ToIngressClientCertificateModeOutputWithContext(ctx).ToIngressClientCertificateModePtrOutputWithContext(ctx)
}

func (e IngressClientCertificateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngressClientCertificateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngressClientCertificateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IngressClientCertificateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IngressClientCertificateModeOutput struct{ *pulumi.OutputState }

func (IngressClientCertificateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressClientCertificateMode)(nil)).Elem()
}

func (o IngressClientCertificateModeOutput) ToIngressClientCertificateModeOutput() IngressClientCertificateModeOutput {
	return o
}

func (o IngressClientCertificateModeOutput) ToIngressClientCertificateModeOutputWithContext(ctx context.Context) IngressClientCertificateModeOutput {
	return o
}

func (o IngressClientCertificateModeOutput) ToIngressClientCertificateModePtrOutput() IngressClientCertificateModePtrOutput {
	return o.ToIngressClientCertificateModePtrOutputWithContext(context.Background())
}

func (o IngressClientCertificateModeOutput) ToIngressClientCertificateModePtrOutputWithContext(ctx context.Context) IngressClientCertificateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressClientCertificateMode) *IngressClientCertificateMode {
		return &v
	}).(IngressClientCertificateModePtrOutput)
}

func (o IngressClientCertificateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IngressClientCertificateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngressClientCertificateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IngressClientCertificateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngressClientCertificateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngressClientCertificateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IngressClientCertificateModePtrOutput struct{ *pulumi.OutputState }

func (IngressClientCertificateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressClientCertificateMode)(nil)).Elem()
}

func (o IngressClientCertificateModePtrOutput) ToIngressClientCertificateModePtrOutput() IngressClientCertificateModePtrOutput {
	return o
}

func (o IngressClientCertificateModePtrOutput) ToIngressClientCertificateModePtrOutputWithContext(ctx context.Context) IngressClientCertificateModePtrOutput {
	return o
}

func (o IngressClientCertificateModePtrOutput) Elem() IngressClientCertificateModeOutput {
	return o.ApplyT(func(v *IngressClientCertificateMode) IngressClientCertificateMode {
		if v != nil {
			return *v
		}
		var ret IngressClientCertificateMode
		return ret
	}).(IngressClientCertificateModeOutput)
}

func (o IngressClientCertificateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngressClientCertificateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IngressClientCertificateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IngressClientCertificateModeInput is an input type that accepts values of the IngressClientCertificateMode enum
// A concrete instance of `IngressClientCertificateModeInput` can be one of the following:
//
//	IngressClientCertificateModeIgnore
//	IngressClientCertificateModeAccept
//	IngressClientCertificateModeRequire
type IngressClientCertificateModeInput interface {
	pulumi.Input

	ToIngressClientCertificateModeOutput() IngressClientCertificateModeOutput
	ToIngressClientCertificateModeOutputWithContext(context.Context) IngressClientCertificateModeOutput
}

var ingressClientCertificateModePtrType = reflect.TypeOf((**IngressClientCertificateMode)(nil)).Elem()

type IngressClientCertificateModePtrInput interface {
	pulumi.Input

	ToIngressClientCertificateModePtrOutput() IngressClientCertificateModePtrOutput
	ToIngressClientCertificateModePtrOutputWithContext(context.Context) IngressClientCertificateModePtrOutput
}

type ingressClientCertificateModePtr string

func IngressClientCertificateModePtr(v string) IngressClientCertificateModePtrInput {
	return (*ingressClientCertificateModePtr)(&v)
}

func (*ingressClientCertificateModePtr) ElementType() reflect.Type {
	return ingressClientCertificateModePtrType
}

func (in *ingressClientCertificateModePtr) ToIngressClientCertificateModePtrOutput() IngressClientCertificateModePtrOutput {
	return pulumi.ToOutput(in).(IngressClientCertificateModePtrOutput)
}

func (in *ingressClientCertificateModePtr) ToIngressClientCertificateModePtrOutputWithContext(ctx context.Context) IngressClientCertificateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IngressClientCertificateModePtrOutput)
}

func (in *ingressClientCertificateModePtr) ToOutput(ctx context.Context) pulumix.Output[*IngressClientCertificateMode] {
	return pulumix.Output[*IngressClientCertificateMode]{
		OutputState: in.ToIngressClientCertificateModePtrOutputWithContext(ctx).OutputState,
	}
}

// Ingress transport protocol
type IngressTransportMethod string

const (
	IngressTransportMethodAuto  = IngressTransportMethod("auto")
	IngressTransportMethodHttp  = IngressTransportMethod("http")
	IngressTransportMethodHttp2 = IngressTransportMethod("http2")
	IngressTransportMethodTcp   = IngressTransportMethod("tcp")
)

func (IngressTransportMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressTransportMethod)(nil)).Elem()
}

func (e IngressTransportMethod) ToIngressTransportMethodOutput() IngressTransportMethodOutput {
	return pulumi.ToOutput(e).(IngressTransportMethodOutput)
}

func (e IngressTransportMethod) ToIngressTransportMethodOutputWithContext(ctx context.Context) IngressTransportMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IngressTransportMethodOutput)
}

func (e IngressTransportMethod) ToIngressTransportMethodPtrOutput() IngressTransportMethodPtrOutput {
	return e.ToIngressTransportMethodPtrOutputWithContext(context.Background())
}

func (e IngressTransportMethod) ToIngressTransportMethodPtrOutputWithContext(ctx context.Context) IngressTransportMethodPtrOutput {
	return IngressTransportMethod(e).ToIngressTransportMethodOutputWithContext(ctx).ToIngressTransportMethodPtrOutputWithContext(ctx)
}

func (e IngressTransportMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngressTransportMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngressTransportMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IngressTransportMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IngressTransportMethodOutput struct{ *pulumi.OutputState }

func (IngressTransportMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressTransportMethod)(nil)).Elem()
}

func (o IngressTransportMethodOutput) ToIngressTransportMethodOutput() IngressTransportMethodOutput {
	return o
}

func (o IngressTransportMethodOutput) ToIngressTransportMethodOutputWithContext(ctx context.Context) IngressTransportMethodOutput {
	return o
}

func (o IngressTransportMethodOutput) ToIngressTransportMethodPtrOutput() IngressTransportMethodPtrOutput {
	return o.ToIngressTransportMethodPtrOutputWithContext(context.Background())
}

func (o IngressTransportMethodOutput) ToIngressTransportMethodPtrOutputWithContext(ctx context.Context) IngressTransportMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressTransportMethod) *IngressTransportMethod {
		return &v
	}).(IngressTransportMethodPtrOutput)
}

func (o IngressTransportMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IngressTransportMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngressTransportMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IngressTransportMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngressTransportMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngressTransportMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IngressTransportMethodPtrOutput struct{ *pulumi.OutputState }

func (IngressTransportMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressTransportMethod)(nil)).Elem()
}

func (o IngressTransportMethodPtrOutput) ToIngressTransportMethodPtrOutput() IngressTransportMethodPtrOutput {
	return o
}

func (o IngressTransportMethodPtrOutput) ToIngressTransportMethodPtrOutputWithContext(ctx context.Context) IngressTransportMethodPtrOutput {
	return o
}

func (o IngressTransportMethodPtrOutput) Elem() IngressTransportMethodOutput {
	return o.ApplyT(func(v *IngressTransportMethod) IngressTransportMethod {
		if v != nil {
			return *v
		}
		var ret IngressTransportMethod
		return ret
	}).(IngressTransportMethodOutput)
}

func (o IngressTransportMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngressTransportMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IngressTransportMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IngressTransportMethodInput is an input type that accepts values of the IngressTransportMethod enum
// A concrete instance of `IngressTransportMethodInput` can be one of the following:
//
//	IngressTransportMethodAuto
//	IngressTransportMethodHttp
//	IngressTransportMethodHttp2
//	IngressTransportMethodTcp
type IngressTransportMethodInput interface {
	pulumi.Input

	ToIngressTransportMethodOutput() IngressTransportMethodOutput
	ToIngressTransportMethodOutputWithContext(context.Context) IngressTransportMethodOutput
}

var ingressTransportMethodPtrType = reflect.TypeOf((**IngressTransportMethod)(nil)).Elem()

type IngressTransportMethodPtrInput interface {
	pulumi.Input

	ToIngressTransportMethodPtrOutput() IngressTransportMethodPtrOutput
	ToIngressTransportMethodPtrOutputWithContext(context.Context) IngressTransportMethodPtrOutput
}

type ingressTransportMethodPtr string

func IngressTransportMethodPtr(v string) IngressTransportMethodPtrInput {
	return (*ingressTransportMethodPtr)(&v)
}

func (*ingressTransportMethodPtr) ElementType() reflect.Type {
	return ingressTransportMethodPtrType
}

func (in *ingressTransportMethodPtr) ToIngressTransportMethodPtrOutput() IngressTransportMethodPtrOutput {
	return pulumi.ToOutput(in).(IngressTransportMethodPtrOutput)
}

func (in *ingressTransportMethodPtr) ToIngressTransportMethodPtrOutputWithContext(ctx context.Context) IngressTransportMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IngressTransportMethodPtrOutput)
}

func (in *ingressTransportMethodPtr) ToOutput(ctx context.Context) pulumix.Output[*IngressTransportMethod] {
	return pulumix.Output[*IngressTransportMethod]{
		OutputState: in.ToIngressTransportMethodPtrOutputWithContext(ctx).OutputState,
	}
}

// Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
type LogLevel string

const (
	LogLevelInfo  = LogLevel("info")
	LogLevelDebug = LogLevel("debug")
	LogLevelWarn  = LogLevel("warn")
	LogLevelError = LogLevel("error")
)

func (LogLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*LogLevel)(nil)).Elem()
}

func (e LogLevel) ToLogLevelOutput() LogLevelOutput {
	return pulumi.ToOutput(e).(LogLevelOutput)
}

func (e LogLevel) ToLogLevelOutputWithContext(ctx context.Context) LogLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogLevelOutput)
}

func (e LogLevel) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return e.ToLogLevelPtrOutputWithContext(context.Background())
}

func (e LogLevel) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return LogLevel(e).ToLogLevelOutputWithContext(ctx).ToLogLevelPtrOutputWithContext(ctx)
}

func (e LogLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogLevelOutput struct{ *pulumi.OutputState }

func (LogLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogLevel)(nil)).Elem()
}

func (o LogLevelOutput) ToLogLevelOutput() LogLevelOutput {
	return o
}

func (o LogLevelOutput) ToLogLevelOutputWithContext(ctx context.Context) LogLevelOutput {
	return o
}

func (o LogLevelOutput) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return o.ToLogLevelPtrOutputWithContext(context.Background())
}

func (o LogLevelOutput) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogLevel) *LogLevel {
		return &v
	}).(LogLevelPtrOutput)
}

func (o LogLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogLevelPtrOutput struct{ *pulumi.OutputState }

func (LogLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogLevel)(nil)).Elem()
}

func (o LogLevelPtrOutput) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return o
}

func (o LogLevelPtrOutput) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return o
}

func (o LogLevelPtrOutput) Elem() LogLevelOutput {
	return o.ApplyT(func(v *LogLevel) LogLevel {
		if v != nil {
			return *v
		}
		var ret LogLevel
		return ret
	}).(LogLevelOutput)
}

func (o LogLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogLevelInput is an input type that accepts values of the LogLevel enum
// A concrete instance of `LogLevelInput` can be one of the following:
//
//	LogLevelInfo
//	LogLevelDebug
//	LogLevelWarn
//	LogLevelError
type LogLevelInput interface {
	pulumi.Input

	ToLogLevelOutput() LogLevelOutput
	ToLogLevelOutputWithContext(context.Context) LogLevelOutput
}

var logLevelPtrType = reflect.TypeOf((**LogLevel)(nil)).Elem()

type LogLevelPtrInput interface {
	pulumi.Input

	ToLogLevelPtrOutput() LogLevelPtrOutput
	ToLogLevelPtrOutputWithContext(context.Context) LogLevelPtrOutput
}

type logLevelPtr string

func LogLevelPtr(v string) LogLevelPtrInput {
	return (*logLevelPtr)(&v)
}

func (*logLevelPtr) ElementType() reflect.Type {
	return logLevelPtrType
}

func (in *logLevelPtr) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return pulumi.ToOutput(in).(LogLevelPtrOutput)
}

func (in *logLevelPtr) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogLevelPtrOutput)
}

func (in *logLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*LogLevel] {
	return pulumix.Output[*LogLevel]{
		OutputState: in.ToLogLevelPtrOutputWithContext(ctx).OutputState,
	}
}

// Selected type of domain control validation for managed certificates.
type ManagedCertificateDomainControlValidation string

const (
	ManagedCertificateDomainControlValidationCNAME = ManagedCertificateDomainControlValidation("CNAME")
	ManagedCertificateDomainControlValidationHTTP  = ManagedCertificateDomainControlValidation("HTTP")
	ManagedCertificateDomainControlValidationTXT   = ManagedCertificateDomainControlValidation("TXT")
)

func (ManagedCertificateDomainControlValidation) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCertificateDomainControlValidation)(nil)).Elem()
}

func (e ManagedCertificateDomainControlValidation) ToManagedCertificateDomainControlValidationOutput() ManagedCertificateDomainControlValidationOutput {
	return pulumi.ToOutput(e).(ManagedCertificateDomainControlValidationOutput)
}

func (e ManagedCertificateDomainControlValidation) ToManagedCertificateDomainControlValidationOutputWithContext(ctx context.Context) ManagedCertificateDomainControlValidationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedCertificateDomainControlValidationOutput)
}

func (e ManagedCertificateDomainControlValidation) ToManagedCertificateDomainControlValidationPtrOutput() ManagedCertificateDomainControlValidationPtrOutput {
	return e.ToManagedCertificateDomainControlValidationPtrOutputWithContext(context.Background())
}

func (e ManagedCertificateDomainControlValidation) ToManagedCertificateDomainControlValidationPtrOutputWithContext(ctx context.Context) ManagedCertificateDomainControlValidationPtrOutput {
	return ManagedCertificateDomainControlValidation(e).ToManagedCertificateDomainControlValidationOutputWithContext(ctx).ToManagedCertificateDomainControlValidationPtrOutputWithContext(ctx)
}

func (e ManagedCertificateDomainControlValidation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedCertificateDomainControlValidation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedCertificateDomainControlValidation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedCertificateDomainControlValidation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedCertificateDomainControlValidationOutput struct{ *pulumi.OutputState }

func (ManagedCertificateDomainControlValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCertificateDomainControlValidation)(nil)).Elem()
}

func (o ManagedCertificateDomainControlValidationOutput) ToManagedCertificateDomainControlValidationOutput() ManagedCertificateDomainControlValidationOutput {
	return o
}

func (o ManagedCertificateDomainControlValidationOutput) ToManagedCertificateDomainControlValidationOutputWithContext(ctx context.Context) ManagedCertificateDomainControlValidationOutput {
	return o
}

func (o ManagedCertificateDomainControlValidationOutput) ToManagedCertificateDomainControlValidationPtrOutput() ManagedCertificateDomainControlValidationPtrOutput {
	return o.ToManagedCertificateDomainControlValidationPtrOutputWithContext(context.Background())
}

func (o ManagedCertificateDomainControlValidationOutput) ToManagedCertificateDomainControlValidationPtrOutputWithContext(ctx context.Context) ManagedCertificateDomainControlValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedCertificateDomainControlValidation) *ManagedCertificateDomainControlValidation {
		return &v
	}).(ManagedCertificateDomainControlValidationPtrOutput)
}

func (o ManagedCertificateDomainControlValidationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedCertificateDomainControlValidationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedCertificateDomainControlValidation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedCertificateDomainControlValidationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedCertificateDomainControlValidationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedCertificateDomainControlValidation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedCertificateDomainControlValidationPtrOutput struct{ *pulumi.OutputState }

func (ManagedCertificateDomainControlValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCertificateDomainControlValidation)(nil)).Elem()
}

func (o ManagedCertificateDomainControlValidationPtrOutput) ToManagedCertificateDomainControlValidationPtrOutput() ManagedCertificateDomainControlValidationPtrOutput {
	return o
}

func (o ManagedCertificateDomainControlValidationPtrOutput) ToManagedCertificateDomainControlValidationPtrOutputWithContext(ctx context.Context) ManagedCertificateDomainControlValidationPtrOutput {
	return o
}

func (o ManagedCertificateDomainControlValidationPtrOutput) Elem() ManagedCertificateDomainControlValidationOutput {
	return o.ApplyT(func(v *ManagedCertificateDomainControlValidation) ManagedCertificateDomainControlValidation {
		if v != nil {
			return *v
		}
		var ret ManagedCertificateDomainControlValidation
		return ret
	}).(ManagedCertificateDomainControlValidationOutput)
}

func (o ManagedCertificateDomainControlValidationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedCertificateDomainControlValidationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedCertificateDomainControlValidation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedCertificateDomainControlValidationInput is an input type that accepts values of the ManagedCertificateDomainControlValidation enum
// A concrete instance of `ManagedCertificateDomainControlValidationInput` can be one of the following:
//
//	ManagedCertificateDomainControlValidationCNAME
//	ManagedCertificateDomainControlValidationHTTP
//	ManagedCertificateDomainControlValidationTXT
type ManagedCertificateDomainControlValidationInput interface {
	pulumi.Input

	ToManagedCertificateDomainControlValidationOutput() ManagedCertificateDomainControlValidationOutput
	ToManagedCertificateDomainControlValidationOutputWithContext(context.Context) ManagedCertificateDomainControlValidationOutput
}

var managedCertificateDomainControlValidationPtrType = reflect.TypeOf((**ManagedCertificateDomainControlValidation)(nil)).Elem()

type ManagedCertificateDomainControlValidationPtrInput interface {
	pulumi.Input

	ToManagedCertificateDomainControlValidationPtrOutput() ManagedCertificateDomainControlValidationPtrOutput
	ToManagedCertificateDomainControlValidationPtrOutputWithContext(context.Context) ManagedCertificateDomainControlValidationPtrOutput
}

type managedCertificateDomainControlValidationPtr string

func ManagedCertificateDomainControlValidationPtr(v string) ManagedCertificateDomainControlValidationPtrInput {
	return (*managedCertificateDomainControlValidationPtr)(&v)
}

func (*managedCertificateDomainControlValidationPtr) ElementType() reflect.Type {
	return managedCertificateDomainControlValidationPtrType
}

func (in *managedCertificateDomainControlValidationPtr) ToManagedCertificateDomainControlValidationPtrOutput() ManagedCertificateDomainControlValidationPtrOutput {
	return pulumi.ToOutput(in).(ManagedCertificateDomainControlValidationPtrOutput)
}

func (in *managedCertificateDomainControlValidationPtr) ToManagedCertificateDomainControlValidationPtrOutputWithContext(ctx context.Context) ManagedCertificateDomainControlValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedCertificateDomainControlValidationPtrOutput)
}

func (in *managedCertificateDomainControlValidationPtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedCertificateDomainControlValidation] {
	return pulumix.Output[*ManagedCertificateDomainControlValidation]{
		OutputState: in.ToManagedCertificateDomainControlValidationPtrOutputWithContext(ctx).OutputState,
	}
}

// Outbound type for the cluster
type ManagedEnvironmentOutBoundType string

const (
	ManagedEnvironmentOutBoundTypeLoadBalancer       = ManagedEnvironmentOutBoundType("LoadBalancer")
	ManagedEnvironmentOutBoundTypeUserDefinedRouting = ManagedEnvironmentOutBoundType("UserDefinedRouting")
)

func (ManagedEnvironmentOutBoundType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedEnvironmentOutBoundType)(nil)).Elem()
}

func (e ManagedEnvironmentOutBoundType) ToManagedEnvironmentOutBoundTypeOutput() ManagedEnvironmentOutBoundTypeOutput {
	return pulumi.ToOutput(e).(ManagedEnvironmentOutBoundTypeOutput)
}

func (e ManagedEnvironmentOutBoundType) ToManagedEnvironmentOutBoundTypeOutputWithContext(ctx context.Context) ManagedEnvironmentOutBoundTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedEnvironmentOutBoundTypeOutput)
}

func (e ManagedEnvironmentOutBoundType) ToManagedEnvironmentOutBoundTypePtrOutput() ManagedEnvironmentOutBoundTypePtrOutput {
	return e.ToManagedEnvironmentOutBoundTypePtrOutputWithContext(context.Background())
}

func (e ManagedEnvironmentOutBoundType) ToManagedEnvironmentOutBoundTypePtrOutputWithContext(ctx context.Context) ManagedEnvironmentOutBoundTypePtrOutput {
	return ManagedEnvironmentOutBoundType(e).ToManagedEnvironmentOutBoundTypeOutputWithContext(ctx).ToManagedEnvironmentOutBoundTypePtrOutputWithContext(ctx)
}

func (e ManagedEnvironmentOutBoundType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedEnvironmentOutBoundType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedEnvironmentOutBoundType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedEnvironmentOutBoundType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedEnvironmentOutBoundTypeOutput struct{ *pulumi.OutputState }

func (ManagedEnvironmentOutBoundTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedEnvironmentOutBoundType)(nil)).Elem()
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToManagedEnvironmentOutBoundTypeOutput() ManagedEnvironmentOutBoundTypeOutput {
	return o
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToManagedEnvironmentOutBoundTypeOutputWithContext(ctx context.Context) ManagedEnvironmentOutBoundTypeOutput {
	return o
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToManagedEnvironmentOutBoundTypePtrOutput() ManagedEnvironmentOutBoundTypePtrOutput {
	return o.ToManagedEnvironmentOutBoundTypePtrOutputWithContext(context.Background())
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToManagedEnvironmentOutBoundTypePtrOutputWithContext(ctx context.Context) ManagedEnvironmentOutBoundTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedEnvironmentOutBoundType) *ManagedEnvironmentOutBoundType {
		return &v
	}).(ManagedEnvironmentOutBoundTypePtrOutput)
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedEnvironmentOutBoundType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedEnvironmentOutBoundTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedEnvironmentOutBoundType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedEnvironmentOutBoundTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedEnvironmentOutBoundTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedEnvironmentOutBoundType)(nil)).Elem()
}

func (o ManagedEnvironmentOutBoundTypePtrOutput) ToManagedEnvironmentOutBoundTypePtrOutput() ManagedEnvironmentOutBoundTypePtrOutput {
	return o
}

func (o ManagedEnvironmentOutBoundTypePtrOutput) ToManagedEnvironmentOutBoundTypePtrOutputWithContext(ctx context.Context) ManagedEnvironmentOutBoundTypePtrOutput {
	return o
}

func (o ManagedEnvironmentOutBoundTypePtrOutput) Elem() ManagedEnvironmentOutBoundTypeOutput {
	return o.ApplyT(func(v *ManagedEnvironmentOutBoundType) ManagedEnvironmentOutBoundType {
		if v != nil {
			return *v
		}
		var ret ManagedEnvironmentOutBoundType
		return ret
	}).(ManagedEnvironmentOutBoundTypeOutput)
}

func (o ManagedEnvironmentOutBoundTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedEnvironmentOutBoundTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedEnvironmentOutBoundType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedEnvironmentOutBoundTypeInput is an input type that accepts values of the ManagedEnvironmentOutBoundType enum
// A concrete instance of `ManagedEnvironmentOutBoundTypeInput` can be one of the following:
//
//	ManagedEnvironmentOutBoundTypeLoadBalancer
//	ManagedEnvironmentOutBoundTypeUserDefinedRouting
type ManagedEnvironmentOutBoundTypeInput interface {
	pulumi.Input

	ToManagedEnvironmentOutBoundTypeOutput() ManagedEnvironmentOutBoundTypeOutput
	ToManagedEnvironmentOutBoundTypeOutputWithContext(context.Context) ManagedEnvironmentOutBoundTypeOutput
}

var managedEnvironmentOutBoundTypePtrType = reflect.TypeOf((**ManagedEnvironmentOutBoundType)(nil)).Elem()

type ManagedEnvironmentOutBoundTypePtrInput interface {
	pulumi.Input

	ToManagedEnvironmentOutBoundTypePtrOutput() ManagedEnvironmentOutBoundTypePtrOutput
	ToManagedEnvironmentOutBoundTypePtrOutputWithContext(context.Context) ManagedEnvironmentOutBoundTypePtrOutput
}

type managedEnvironmentOutBoundTypePtr string

func ManagedEnvironmentOutBoundTypePtr(v string) ManagedEnvironmentOutBoundTypePtrInput {
	return (*managedEnvironmentOutBoundTypePtr)(&v)
}

func (*managedEnvironmentOutBoundTypePtr) ElementType() reflect.Type {
	return managedEnvironmentOutBoundTypePtrType
}

func (in *managedEnvironmentOutBoundTypePtr) ToManagedEnvironmentOutBoundTypePtrOutput() ManagedEnvironmentOutBoundTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedEnvironmentOutBoundTypePtrOutput)
}

func (in *managedEnvironmentOutBoundTypePtr) ToManagedEnvironmentOutBoundTypePtrOutputWithContext(ctx context.Context) ManagedEnvironmentOutBoundTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedEnvironmentOutBoundTypePtrOutput)
}

func (in *managedEnvironmentOutBoundTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedEnvironmentOutBoundType] {
	return pulumix.Output[*ManagedEnvironmentOutBoundType]{
		OutputState: in.ToManagedEnvironmentOutBoundTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentityType] {
	return pulumix.Output[*ManagedServiceIdentityType]{
		OutputState: in.ToManagedServiceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Scheme to use for connecting to the host. Defaults to HTTP.
type Scheme string

const (
	SchemeHTTP  = Scheme("HTTP")
	SchemeHTTPS = Scheme("HTTPS")
)

func (Scheme) ElementType() reflect.Type {
	return reflect.TypeOf((*Scheme)(nil)).Elem()
}

func (e Scheme) ToSchemeOutput() SchemeOutput {
	return pulumi.ToOutput(e).(SchemeOutput)
}

func (e Scheme) ToSchemeOutputWithContext(ctx context.Context) SchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemeOutput)
}

func (e Scheme) ToSchemePtrOutput() SchemePtrOutput {
	return e.ToSchemePtrOutputWithContext(context.Background())
}

func (e Scheme) ToSchemePtrOutputWithContext(ctx context.Context) SchemePtrOutput {
	return Scheme(e).ToSchemeOutputWithContext(ctx).ToSchemePtrOutputWithContext(ctx)
}

func (e Scheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Scheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Scheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Scheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemeOutput struct{ *pulumi.OutputState }

func (SchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Scheme)(nil)).Elem()
}

func (o SchemeOutput) ToSchemeOutput() SchemeOutput {
	return o
}

func (o SchemeOutput) ToSchemeOutputWithContext(ctx context.Context) SchemeOutput {
	return o
}

func (o SchemeOutput) ToSchemePtrOutput() SchemePtrOutput {
	return o.ToSchemePtrOutputWithContext(context.Background())
}

func (o SchemeOutput) ToSchemePtrOutputWithContext(ctx context.Context) SchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Scheme) *Scheme {
		return &v
	}).(SchemePtrOutput)
}

func (o SchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Scheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Scheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemePtrOutput struct{ *pulumi.OutputState }

func (SchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Scheme)(nil)).Elem()
}

func (o SchemePtrOutput) ToSchemePtrOutput() SchemePtrOutput {
	return o
}

func (o SchemePtrOutput) ToSchemePtrOutputWithContext(ctx context.Context) SchemePtrOutput {
	return o
}

func (o SchemePtrOutput) Elem() SchemeOutput {
	return o.ApplyT(func(v *Scheme) Scheme {
		if v != nil {
			return *v
		}
		var ret Scheme
		return ret
	}).(SchemeOutput)
}

func (o SchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Scheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemeInput is an input type that accepts values of the Scheme enum
// A concrete instance of `SchemeInput` can be one of the following:
//
//	SchemeHTTP
//	SchemeHTTPS
type SchemeInput interface {
	pulumi.Input

	ToSchemeOutput() SchemeOutput
	ToSchemeOutputWithContext(context.Context) SchemeOutput
}

var schemePtrType = reflect.TypeOf((**Scheme)(nil)).Elem()

type SchemePtrInput interface {
	pulumi.Input

	ToSchemePtrOutput() SchemePtrOutput
	ToSchemePtrOutputWithContext(context.Context) SchemePtrOutput
}

type schemePtr string

func SchemePtr(v string) SchemePtrInput {
	return (*schemePtr)(&v)
}

func (*schemePtr) ElementType() reflect.Type {
	return schemePtrType
}

func (in *schemePtr) ToSchemePtrOutput() SchemePtrOutput {
	return pulumi.ToOutput(in).(SchemePtrOutput)
}

func (in *schemePtr) ToSchemePtrOutputWithContext(ctx context.Context) SchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemePtrOutput)
}

func (in *schemePtr) ToOutput(ctx context.Context) pulumix.Output[*Scheme] {
	return pulumix.Output[*Scheme]{
		OutputState: in.ToSchemePtrOutputWithContext(ctx).OutputState,
	}
}

// Name of the Sku.
type SkuName string

const (
	// Consumption SKU of Managed Environment.
	SkuNameConsumption = SkuName("Consumption")
	// Premium SKU of Managed Environment.
	SkuNamePremium = SkuName("Premium")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameConsumption
//	SkuNamePremium
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*SkuName] {
	return pulumix.Output[*SkuName]{
		OutputState: in.ToSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// Storage type for the volume. If not provided, use EmptyDir.
type StorageType string

const (
	StorageTypeAzureFile = StorageType("AzureFile")
	StorageTypeEmptyDir  = StorageType("EmptyDir")
	StorageTypeSecret    = StorageType("Secret")
)

func (StorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageType)(nil)).Elem()
}

func (e StorageType) ToStorageTypeOutput() StorageTypeOutput {
	return pulumi.ToOutput(e).(StorageTypeOutput)
}

func (e StorageType) ToStorageTypeOutputWithContext(ctx context.Context) StorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageTypeOutput)
}

func (e StorageType) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return e.ToStorageTypePtrOutputWithContext(context.Background())
}

func (e StorageType) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return StorageType(e).ToStorageTypeOutputWithContext(ctx).ToStorageTypePtrOutputWithContext(ctx)
}

func (e StorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageTypeOutput struct{ *pulumi.OutputState }

func (StorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageType)(nil)).Elem()
}

func (o StorageTypeOutput) ToStorageTypeOutput() StorageTypeOutput {
	return o
}

func (o StorageTypeOutput) ToStorageTypeOutputWithContext(ctx context.Context) StorageTypeOutput {
	return o
}

func (o StorageTypeOutput) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return o.ToStorageTypePtrOutputWithContext(context.Background())
}

func (o StorageTypeOutput) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageType) *StorageType {
		return &v
	}).(StorageTypePtrOutput)
}

func (o StorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageTypePtrOutput struct{ *pulumi.OutputState }

func (StorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageType)(nil)).Elem()
}

func (o StorageTypePtrOutput) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return o
}

func (o StorageTypePtrOutput) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return o
}

func (o StorageTypePtrOutput) Elem() StorageTypeOutput {
	return o.ApplyT(func(v *StorageType) StorageType {
		if v != nil {
			return *v
		}
		var ret StorageType
		return ret
	}).(StorageTypeOutput)
}

func (o StorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageTypeInput is an input type that accepts values of the StorageType enum
// A concrete instance of `StorageTypeInput` can be one of the following:
//
//	StorageTypeAzureFile
//	StorageTypeEmptyDir
//	StorageTypeSecret
type StorageTypeInput interface {
	pulumi.Input

	ToStorageTypeOutput() StorageTypeOutput
	ToStorageTypeOutputWithContext(context.Context) StorageTypeOutput
}

var storageTypePtrType = reflect.TypeOf((**StorageType)(nil)).Elem()

type StorageTypePtrInput interface {
	pulumi.Input

	ToStorageTypePtrOutput() StorageTypePtrOutput
	ToStorageTypePtrOutputWithContext(context.Context) StorageTypePtrOutput
}

type storageTypePtr string

func StorageTypePtr(v string) StorageTypePtrInput {
	return (*storageTypePtr)(&v)
}

func (*storageTypePtr) ElementType() reflect.Type {
	return storageTypePtrType
}

func (in *storageTypePtr) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return pulumi.ToOutput(in).(StorageTypePtrOutput)
}

func (in *storageTypePtr) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageTypePtrOutput)
}

func (in *storageTypePtr) ToOutput(ctx context.Context) pulumix.Output[*StorageType] {
	return pulumix.Output[*StorageType]{
		OutputState: in.ToStorageTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Trigger type of the job
type TriggerType string

const (
	TriggerTypeSchedule = TriggerType("Schedule")
	TriggerTypeEvent    = TriggerType("Event")
	TriggerTypeManual   = TriggerType("Manual")
)

func (TriggerType) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (e TriggerType) ToTriggerTypeOutput() TriggerTypeOutput {
	return pulumi.ToOutput(e).(TriggerTypeOutput)
}

func (e TriggerType) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerTypeOutput)
}

func (e TriggerType) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return e.ToTriggerTypePtrOutputWithContext(context.Background())
}

func (e TriggerType) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return TriggerType(e).ToTriggerTypeOutputWithContext(ctx).ToTriggerTypePtrOutputWithContext(ctx)
}

func (e TriggerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerTypeOutput struct{ *pulumi.OutputState }

func (TriggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (o TriggerTypeOutput) ToTriggerTypeOutput() TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return o.ToTriggerTypePtrOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerType) *TriggerType {
		return &v
	}).(TriggerTypePtrOutput)
}

func (o TriggerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerTypePtrOutput struct{ *pulumi.OutputState }

func (TriggerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerType)(nil)).Elem()
}

func (o TriggerTypePtrOutput) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return o
}

func (o TriggerTypePtrOutput) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return o
}

func (o TriggerTypePtrOutput) Elem() TriggerTypeOutput {
	return o.ApplyT(func(v *TriggerType) TriggerType {
		if v != nil {
			return *v
		}
		var ret TriggerType
		return ret
	}).(TriggerTypeOutput)
}

func (o TriggerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggerTypeInput is an input type that accepts values of the TriggerType enum
// A concrete instance of `TriggerTypeInput` can be one of the following:
//
//	TriggerTypeSchedule
//	TriggerTypeEvent
//	TriggerTypeManual
type TriggerTypeInput interface {
	pulumi.Input

	ToTriggerTypeOutput() TriggerTypeOutput
	ToTriggerTypeOutputWithContext(context.Context) TriggerTypeOutput
}

var triggerTypePtrType = reflect.TypeOf((**TriggerType)(nil)).Elem()

type TriggerTypePtrInput interface {
	pulumi.Input

	ToTriggerTypePtrOutput() TriggerTypePtrOutput
	ToTriggerTypePtrOutputWithContext(context.Context) TriggerTypePtrOutput
}

type triggerTypePtr string

func TriggerTypePtr(v string) TriggerTypePtrInput {
	return (*triggerTypePtr)(&v)
}

func (*triggerTypePtr) ElementType() reflect.Type {
	return triggerTypePtrType
}

func (in *triggerTypePtr) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return pulumi.ToOutput(in).(TriggerTypePtrOutput)
}

func (in *triggerTypePtr) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerTypePtrOutput)
}

func (in *triggerTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TriggerType] {
	return pulumix.Output[*TriggerType]{
		OutputState: in.ToTriggerTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of probe.
type Type string

const (
	TypeLiveness  = Type("Liveness")
	TypeReadiness = Type("Readiness")
	TypeStartup   = Type("Startup")
)

func (Type) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (e Type) ToTypeOutput() TypeOutput {
	return pulumi.ToOutput(e).(TypeOutput)
}

func (e Type) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypeOutput)
}

func (e Type) ToTypePtrOutput() TypePtrOutput {
	return e.ToTypePtrOutputWithContext(context.Background())
}

func (e Type) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return Type(e).ToTypeOutputWithContext(ctx).ToTypePtrOutputWithContext(ctx)
}

func (e Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypeOutput struct{ *pulumi.OutputState }

func (TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (o TypeOutput) ToTypeOutput() TypeOutput {
	return o
}

func (o TypeOutput) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return o
}

func (o TypeOutput) ToTypePtrOutput() TypePtrOutput {
	return o.ToTypePtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Type) *Type {
		return &v
	}).(TypePtrOutput)
}

func (o TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePtrOutput struct{ *pulumi.OutputState }

func (TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Type)(nil)).Elem()
}

func (o TypePtrOutput) ToTypePtrOutput() TypePtrOutput {
	return o
}

func (o TypePtrOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o
}

func (o TypePtrOutput) Elem() TypeOutput {
	return o.ApplyT(func(v *Type) Type {
		if v != nil {
			return *v
		}
		var ret Type
		return ret
	}).(TypeOutput)
}

func (o TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypeInput is an input type that accepts values of the Type enum
// A concrete instance of `TypeInput` can be one of the following:
//
//	TypeLiveness
//	TypeReadiness
//	TypeStartup
type TypeInput interface {
	pulumi.Input

	ToTypeOutput() TypeOutput
	ToTypeOutputWithContext(context.Context) TypeOutput
}

var typePtrType = reflect.TypeOf((**Type)(nil)).Elem()

type TypePtrInput interface {
	pulumi.Input

	ToTypePtrOutput() TypePtrOutput
	ToTypePtrOutputWithContext(context.Context) TypePtrOutput
}

type typePtr string

func TypePtr(v string) TypePtrInput {
	return (*typePtr)(&v)
}

func (*typePtr) ElementType() reflect.Type {
	return typePtrType
}

func (in *typePtr) ToTypePtrOutput() TypePtrOutput {
	return pulumi.ToOutput(in).(TypePtrOutput)
}

func (in *typePtr) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePtrOutput)
}

func (in *typePtr) ToOutput(ctx context.Context) pulumix.Output[*Type] {
	return pulumix.Output[*Type]{
		OutputState: in.ToTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The action to take when an unauthenticated client attempts to access the app.
type UnauthenticatedClientActionV2 string

const (
	UnauthenticatedClientActionV2RedirectToLoginPage = UnauthenticatedClientActionV2("RedirectToLoginPage")
	UnauthenticatedClientActionV2AllowAnonymous      = UnauthenticatedClientActionV2("AllowAnonymous")
	UnauthenticatedClientActionV2Return401           = UnauthenticatedClientActionV2("Return401")
	UnauthenticatedClientActionV2Return403           = UnauthenticatedClientActionV2("Return403")
)

func (UnauthenticatedClientActionV2) ElementType() reflect.Type {
	return reflect.TypeOf((*UnauthenticatedClientActionV2)(nil)).Elem()
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2Output() UnauthenticatedClientActionV2Output {
	return pulumi.ToOutput(e).(UnauthenticatedClientActionV2Output)
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2OutputWithContext(ctx context.Context) UnauthenticatedClientActionV2Output {
	return pulumi.ToOutputWithContext(ctx, e).(UnauthenticatedClientActionV2Output)
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return e.ToUnauthenticatedClientActionV2PtrOutputWithContext(context.Background())
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return UnauthenticatedClientActionV2(e).ToUnauthenticatedClientActionV2OutputWithContext(ctx).ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx)
}

func (e UnauthenticatedClientActionV2) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnauthenticatedClientActionV2) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnauthenticatedClientActionV2) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UnauthenticatedClientActionV2) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UnauthenticatedClientActionV2Output struct{ *pulumi.OutputState }

func (UnauthenticatedClientActionV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*UnauthenticatedClientActionV2)(nil)).Elem()
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2Output() UnauthenticatedClientActionV2Output {
	return o
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2OutputWithContext(ctx context.Context) UnauthenticatedClientActionV2Output {
	return o
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return o.ToUnauthenticatedClientActionV2PtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UnauthenticatedClientActionV2) *UnauthenticatedClientActionV2 {
		return &v
	}).(UnauthenticatedClientActionV2PtrOutput)
}

func (o UnauthenticatedClientActionV2Output) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2Output) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnauthenticatedClientActionV2) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UnauthenticatedClientActionV2Output) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2Output) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnauthenticatedClientActionV2) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UnauthenticatedClientActionV2PtrOutput struct{ *pulumi.OutputState }

func (UnauthenticatedClientActionV2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnauthenticatedClientActionV2)(nil)).Elem()
}

func (o UnauthenticatedClientActionV2PtrOutput) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return o
}

func (o UnauthenticatedClientActionV2PtrOutput) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return o
}

func (o UnauthenticatedClientActionV2PtrOutput) Elem() UnauthenticatedClientActionV2Output {
	return o.ApplyT(func(v *UnauthenticatedClientActionV2) UnauthenticatedClientActionV2 {
		if v != nil {
			return *v
		}
		var ret UnauthenticatedClientActionV2
		return ret
	}).(UnauthenticatedClientActionV2Output)
}

func (o UnauthenticatedClientActionV2PtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2PtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UnauthenticatedClientActionV2) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UnauthenticatedClientActionV2Input is an input type that accepts values of the UnauthenticatedClientActionV2 enum
// A concrete instance of `UnauthenticatedClientActionV2Input` can be one of the following:
//
//	UnauthenticatedClientActionV2RedirectToLoginPage
//	UnauthenticatedClientActionV2AllowAnonymous
//	UnauthenticatedClientActionV2Return401
//	UnauthenticatedClientActionV2Return403
type UnauthenticatedClientActionV2Input interface {
	pulumi.Input

	ToUnauthenticatedClientActionV2Output() UnauthenticatedClientActionV2Output
	ToUnauthenticatedClientActionV2OutputWithContext(context.Context) UnauthenticatedClientActionV2Output
}

var unauthenticatedClientActionV2PtrType = reflect.TypeOf((**UnauthenticatedClientActionV2)(nil)).Elem()

type UnauthenticatedClientActionV2PtrInput interface {
	pulumi.Input

	ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput
	ToUnauthenticatedClientActionV2PtrOutputWithContext(context.Context) UnauthenticatedClientActionV2PtrOutput
}

type unauthenticatedClientActionV2Ptr string

func UnauthenticatedClientActionV2Ptr(v string) UnauthenticatedClientActionV2PtrInput {
	return (*unauthenticatedClientActionV2Ptr)(&v)
}

func (*unauthenticatedClientActionV2Ptr) ElementType() reflect.Type {
	return unauthenticatedClientActionV2PtrType
}

func (in *unauthenticatedClientActionV2Ptr) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return pulumi.ToOutput(in).(UnauthenticatedClientActionV2PtrOutput)
}

func (in *unauthenticatedClientActionV2Ptr) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UnauthenticatedClientActionV2PtrOutput)
}

func (in *unauthenticatedClientActionV2Ptr) ToOutput(ctx context.Context) pulumix.Output[*UnauthenticatedClientActionV2] {
	return pulumix.Output[*UnauthenticatedClientActionV2]{
		OutputState: in.ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AccessModeOutput{})
	pulumi.RegisterOutputType(AccessModePtrOutput{})
	pulumi.RegisterOutputType(ActionOutput{})
	pulumi.RegisterOutputType(ActionPtrOutput{})
	pulumi.RegisterOutputType(ActiveRevisionsModeOutput{})
	pulumi.RegisterOutputType(ActiveRevisionsModePtrOutput{})
	pulumi.RegisterOutputType(AppProtocolOutput{})
	pulumi.RegisterOutputType(AppProtocolPtrOutput{})
	pulumi.RegisterOutputType(BindingTypeOutput{})
	pulumi.RegisterOutputType(BindingTypePtrOutput{})
	pulumi.RegisterOutputType(ClientCredentialMethodOutput{})
	pulumi.RegisterOutputType(ClientCredentialMethodPtrOutput{})
	pulumi.RegisterOutputType(CookieExpirationConventionOutput{})
	pulumi.RegisterOutputType(CookieExpirationConventionPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesPtrOutput{})
	pulumi.RegisterOutputType(ForwardProxyConventionOutput{})
	pulumi.RegisterOutputType(ForwardProxyConventionPtrOutput{})
	pulumi.RegisterOutputType(IngressClientCertificateModeOutput{})
	pulumi.RegisterOutputType(IngressClientCertificateModePtrOutput{})
	pulumi.RegisterOutputType(IngressTransportMethodOutput{})
	pulumi.RegisterOutputType(IngressTransportMethodPtrOutput{})
	pulumi.RegisterOutputType(LogLevelOutput{})
	pulumi.RegisterOutputType(LogLevelPtrOutput{})
	pulumi.RegisterOutputType(ManagedCertificateDomainControlValidationOutput{})
	pulumi.RegisterOutputType(ManagedCertificateDomainControlValidationPtrOutput{})
	pulumi.RegisterOutputType(ManagedEnvironmentOutBoundTypeOutput{})
	pulumi.RegisterOutputType(ManagedEnvironmentOutBoundTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SchemeOutput{})
	pulumi.RegisterOutputType(SchemePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(StorageTypeOutput{})
	pulumi.RegisterOutputType(StorageTypePtrOutput{})
	pulumi.RegisterOutputType(TriggerTypeOutput{})
	pulumi.RegisterOutputType(TriggerTypePtrOutput{})
	pulumi.RegisterOutputType(TypeOutput{})
	pulumi.RegisterOutputType(TypePtrOutput{})
	pulumi.RegisterOutputType(UnauthenticatedClientActionV2Output{})
	pulumi.RegisterOutputType(UnauthenticatedClientActionV2PtrOutput{})
}
