// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230502preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment
func LookupManagedCertificate(ctx *pulumi.Context, args *LookupManagedCertificateArgs, opts ...pulumi.InvokeOption) (*LookupManagedCertificateResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedCertificateResult
	err := ctx.Invoke("azure-native:app/v20230502preview:getManagedCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagedCertificateArgs struct {
	// Name of the Managed Environment.
	EnvironmentName string `pulumi:"environmentName"`
	// Name of the Managed Certificate.
	ManagedCertificateName string `pulumi:"managedCertificateName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment
type LookupManagedCertificateResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Certificate resource specific properties
	Properties ManagedCertificateResponseProperties `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupManagedCertificateOutput(ctx *pulumi.Context, args LookupManagedCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupManagedCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedCertificateResult, error) {
			args := v.(LookupManagedCertificateArgs)
			r, err := LookupManagedCertificate(ctx, &args, opts...)
			var s LookupManagedCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedCertificateResultOutput)
}

type LookupManagedCertificateOutputArgs struct {
	// Name of the Managed Environment.
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	// Name of the Managed Certificate.
	ManagedCertificateName pulumi.StringInput `pulumi:"managedCertificateName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupManagedCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedCertificateArgs)(nil)).Elem()
}

// Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment
type LookupManagedCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupManagedCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedCertificateResult)(nil)).Elem()
}

func (o LookupManagedCertificateResultOutput) ToLookupManagedCertificateResultOutput() LookupManagedCertificateResultOutput {
	return o
}

func (o LookupManagedCertificateResultOutput) ToLookupManagedCertificateResultOutputWithContext(ctx context.Context) LookupManagedCertificateResultOutput {
	return o
}

func (o LookupManagedCertificateResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupManagedCertificateResult] {
	return pulumix.Output[LookupManagedCertificateResult]{
		OutputState: o.OutputState,
	}
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupManagedCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupManagedCertificateResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupManagedCertificateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Certificate resource specific properties
func (o LookupManagedCertificateResultOutput) Properties() ManagedCertificateResponsePropertiesOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) ManagedCertificateResponseProperties { return v.Properties }).(ManagedCertificateResponsePropertiesOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupManagedCertificateResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupManagedCertificateResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupManagedCertificateResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedCertificateResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedCertificateResultOutput{})
}
