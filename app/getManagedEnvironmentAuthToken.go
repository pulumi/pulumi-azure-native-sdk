// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Checks if resource name is available.
// Azure REST API version: 2022-10-01.
//
// Other available API versions: 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview.
func GetManagedEnvironmentAuthToken(ctx *pulumi.Context, args *GetManagedEnvironmentAuthTokenArgs, opts ...pulumi.InvokeOption) (*GetManagedEnvironmentAuthTokenResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetManagedEnvironmentAuthTokenResult
	err := ctx.Invoke("azure-native:app:getManagedEnvironmentAuthToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetManagedEnvironmentAuthTokenArgs struct {
	// Name of the Managed Environment.
	EnvironmentName string `pulumi:"environmentName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Environment Auth Token.
type GetManagedEnvironmentAuthTokenResult struct {
	// Token expiration date.
	Expires string `pulumi:"expires"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Auth token value.
	Token string `pulumi:"token"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetManagedEnvironmentAuthTokenOutput(ctx *pulumi.Context, args GetManagedEnvironmentAuthTokenOutputArgs, opts ...pulumi.InvokeOption) GetManagedEnvironmentAuthTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedEnvironmentAuthTokenResult, error) {
			args := v.(GetManagedEnvironmentAuthTokenArgs)
			r, err := GetManagedEnvironmentAuthToken(ctx, &args, opts...)
			var s GetManagedEnvironmentAuthTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedEnvironmentAuthTokenResultOutput)
}

type GetManagedEnvironmentAuthTokenOutputArgs struct {
	// Name of the Managed Environment.
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetManagedEnvironmentAuthTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedEnvironmentAuthTokenArgs)(nil)).Elem()
}

// Environment Auth Token.
type GetManagedEnvironmentAuthTokenResultOutput struct{ *pulumi.OutputState }

func (GetManagedEnvironmentAuthTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedEnvironmentAuthTokenResult)(nil)).Elem()
}

func (o GetManagedEnvironmentAuthTokenResultOutput) ToGetManagedEnvironmentAuthTokenResultOutput() GetManagedEnvironmentAuthTokenResultOutput {
	return o
}

func (o GetManagedEnvironmentAuthTokenResultOutput) ToGetManagedEnvironmentAuthTokenResultOutputWithContext(ctx context.Context) GetManagedEnvironmentAuthTokenResultOutput {
	return o
}

// Token expiration date.
func (o GetManagedEnvironmentAuthTokenResultOutput) Expires() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) string { return v.Expires }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GetManagedEnvironmentAuthTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o GetManagedEnvironmentAuthTokenResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetManagedEnvironmentAuthTokenResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GetManagedEnvironmentAuthTokenResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetManagedEnvironmentAuthTokenResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Auth token value.
func (o GetManagedEnvironmentAuthTokenResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) string { return v.Token }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetManagedEnvironmentAuthTokenResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEnvironmentAuthTokenResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedEnvironmentAuthTokenResultOutput{})
}
