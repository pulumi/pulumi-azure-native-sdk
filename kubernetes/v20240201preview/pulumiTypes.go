// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// AAD Profile specifies attributes for Azure Active Directory integration.
type AadProfile struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `pulumi:"adminGroupObjectIDs"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `pulumi:"enableAzureRBAC"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// AadProfileInput is an input type that accepts AadProfileArgs and AadProfileOutput values.
// You can construct a concrete instance of `AadProfileInput` via:
//
//	AadProfileArgs{...}
type AadProfileInput interface {
	pulumi.Input

	ToAadProfileOutput() AadProfileOutput
	ToAadProfileOutputWithContext(context.Context) AadProfileOutput
}

// AAD Profile specifies attributes for Azure Active Directory integration.
type AadProfileArgs struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs pulumi.StringArrayInput `pulumi:"adminGroupObjectIDs"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC pulumi.BoolPtrInput `pulumi:"enableAzureRBAC"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (AadProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AadProfile)(nil)).Elem()
}

func (i AadProfileArgs) ToAadProfileOutput() AadProfileOutput {
	return i.ToAadProfileOutputWithContext(context.Background())
}

func (i AadProfileArgs) ToAadProfileOutputWithContext(ctx context.Context) AadProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadProfileOutput)
}

func (i AadProfileArgs) ToAadProfilePtrOutput() AadProfilePtrOutput {
	return i.ToAadProfilePtrOutputWithContext(context.Background())
}

func (i AadProfileArgs) ToAadProfilePtrOutputWithContext(ctx context.Context) AadProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadProfileOutput).ToAadProfilePtrOutputWithContext(ctx)
}

// AadProfilePtrInput is an input type that accepts AadProfileArgs, AadProfilePtr and AadProfilePtrOutput values.
// You can construct a concrete instance of `AadProfilePtrInput` via:
//
//	        AadProfileArgs{...}
//
//	or:
//
//	        nil
type AadProfilePtrInput interface {
	pulumi.Input

	ToAadProfilePtrOutput() AadProfilePtrOutput
	ToAadProfilePtrOutputWithContext(context.Context) AadProfilePtrOutput
}

type aadProfilePtrType AadProfileArgs

func AadProfilePtr(v *AadProfileArgs) AadProfilePtrInput {
	return (*aadProfilePtrType)(v)
}

func (*aadProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AadProfile)(nil)).Elem()
}

func (i *aadProfilePtrType) ToAadProfilePtrOutput() AadProfilePtrOutput {
	return i.ToAadProfilePtrOutputWithContext(context.Background())
}

func (i *aadProfilePtrType) ToAadProfilePtrOutputWithContext(ctx context.Context) AadProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadProfilePtrOutput)
}

// AAD Profile specifies attributes for Azure Active Directory integration.
type AadProfileOutput struct{ *pulumi.OutputState }

func (AadProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AadProfile)(nil)).Elem()
}

func (o AadProfileOutput) ToAadProfileOutput() AadProfileOutput {
	return o
}

func (o AadProfileOutput) ToAadProfileOutputWithContext(ctx context.Context) AadProfileOutput {
	return o
}

func (o AadProfileOutput) ToAadProfilePtrOutput() AadProfilePtrOutput {
	return o.ToAadProfilePtrOutputWithContext(context.Background())
}

func (o AadProfileOutput) ToAadProfilePtrOutputWithContext(ctx context.Context) AadProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AadProfile) *AadProfile {
		return &v
	}).(AadProfilePtrOutput)
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o AadProfileOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AadProfile) []string { return v.AdminGroupObjectIDs }).(pulumi.StringArrayOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o AadProfileOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AadProfile) *bool { return v.EnableAzureRBAC }).(pulumi.BoolPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o AadProfileOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadProfile) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type AadProfilePtrOutput struct{ *pulumi.OutputState }

func (AadProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadProfile)(nil)).Elem()
}

func (o AadProfilePtrOutput) ToAadProfilePtrOutput() AadProfilePtrOutput {
	return o
}

func (o AadProfilePtrOutput) ToAadProfilePtrOutputWithContext(ctx context.Context) AadProfilePtrOutput {
	return o
}

func (o AadProfilePtrOutput) Elem() AadProfileOutput {
	return o.ApplyT(func(v *AadProfile) AadProfile {
		if v != nil {
			return *v
		}
		var ret AadProfile
		return ret
	}).(AadProfileOutput)
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o AadProfilePtrOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AadProfile) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIDs
	}).(pulumi.StringArrayOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o AadProfilePtrOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AadProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureRBAC
	}).(pulumi.BoolPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o AadProfilePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadProfile) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// AAD Profile specifies attributes for Azure Active Directory integration.
type AadProfileResponse struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `pulumi:"adminGroupObjectIDs"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `pulumi:"enableAzureRBAC"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// AAD Profile specifies attributes for Azure Active Directory integration.
type AadProfileResponseOutput struct{ *pulumi.OutputState }

func (AadProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AadProfileResponse)(nil)).Elem()
}

func (o AadProfileResponseOutput) ToAadProfileResponseOutput() AadProfileResponseOutput {
	return o
}

func (o AadProfileResponseOutput) ToAadProfileResponseOutputWithContext(ctx context.Context) AadProfileResponseOutput {
	return o
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o AadProfileResponseOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AadProfileResponse) []string { return v.AdminGroupObjectIDs }).(pulumi.StringArrayOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o AadProfileResponseOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AadProfileResponse) *bool { return v.EnableAzureRBAC }).(pulumi.BoolPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o AadProfileResponseOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadProfileResponse) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type AadProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (AadProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadProfileResponse)(nil)).Elem()
}

func (o AadProfileResponsePtrOutput) ToAadProfileResponsePtrOutput() AadProfileResponsePtrOutput {
	return o
}

func (o AadProfileResponsePtrOutput) ToAadProfileResponsePtrOutputWithContext(ctx context.Context) AadProfileResponsePtrOutput {
	return o
}

func (o AadProfileResponsePtrOutput) Elem() AadProfileResponseOutput {
	return o.ApplyT(func(v *AadProfileResponse) AadProfileResponse {
		if v != nil {
			return *v
		}
		var ret AadProfileResponse
		return ret
	}).(AadProfileResponseOutput)
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o AadProfileResponsePtrOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AadProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIDs
	}).(pulumi.StringArrayOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o AadProfileResponsePtrOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AadProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureRBAC
	}).(pulumi.BoolPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o AadProfileResponsePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// Agent Errors if any during agent or system component upgrade.
type AgentErrorResponse struct {
	// Agent component where error message occured.
	Component string `pulumi:"component"`
	// Agent error message.
	Message string `pulumi:"message"`
	// Severity of the error message.
	Severity string `pulumi:"severity"`
	// The timestamp of error occured (UTC).
	Time string `pulumi:"time"`
}

// Agent Errors if any during agent or system component upgrade.
type AgentErrorResponseOutput struct{ *pulumi.OutputState }

func (AgentErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentErrorResponse)(nil)).Elem()
}

func (o AgentErrorResponseOutput) ToAgentErrorResponseOutput() AgentErrorResponseOutput {
	return o
}

func (o AgentErrorResponseOutput) ToAgentErrorResponseOutputWithContext(ctx context.Context) AgentErrorResponseOutput {
	return o
}

// Agent component where error message occured.
func (o AgentErrorResponseOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v AgentErrorResponse) string { return v.Component }).(pulumi.StringOutput)
}

// Agent error message.
func (o AgentErrorResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AgentErrorResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Severity of the error message.
func (o AgentErrorResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v AgentErrorResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The timestamp of error occured (UTC).
func (o AgentErrorResponseOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v AgentErrorResponse) string { return v.Time }).(pulumi.StringOutput)
}

type AgentErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (AgentErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentErrorResponse)(nil)).Elem()
}

func (o AgentErrorResponseArrayOutput) ToAgentErrorResponseArrayOutput() AgentErrorResponseArrayOutput {
	return o
}

func (o AgentErrorResponseArrayOutput) ToAgentErrorResponseArrayOutputWithContext(ctx context.Context) AgentErrorResponseArrayOutput {
	return o
}

func (o AgentErrorResponseArrayOutput) Index(i pulumi.IntInput) AgentErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentErrorResponse {
		return vs[0].([]AgentErrorResponse)[vs[1].(int)]
	}).(AgentErrorResponseOutput)
}

// Defines the Arc Agent properties for the clusters.
type ArcAgentProfile struct {
	// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
	AgentAutoUpgrade *string `pulumi:"agentAutoUpgrade"`
	// Version of the Arc agents to be installed on the cluster resource
	DesiredAgentVersion *string `pulumi:"desiredAgentVersion"`
	// List of system extensions can be installed on the cluster resource.
	SystemComponents []SystemComponent `pulumi:"systemComponents"`
}

// Defaults sets the appropriate defaults for ArcAgentProfile
func (val *ArcAgentProfile) Defaults() *ArcAgentProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AgentAutoUpgrade == nil {
		agentAutoUpgrade_ := "Enabled"
		tmp.AgentAutoUpgrade = &agentAutoUpgrade_
	}
	return &tmp
}

// ArcAgentProfileInput is an input type that accepts ArcAgentProfileArgs and ArcAgentProfileOutput values.
// You can construct a concrete instance of `ArcAgentProfileInput` via:
//
//	ArcAgentProfileArgs{...}
type ArcAgentProfileInput interface {
	pulumi.Input

	ToArcAgentProfileOutput() ArcAgentProfileOutput
	ToArcAgentProfileOutputWithContext(context.Context) ArcAgentProfileOutput
}

// Defines the Arc Agent properties for the clusters.
type ArcAgentProfileArgs struct {
	// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
	AgentAutoUpgrade pulumi.StringPtrInput `pulumi:"agentAutoUpgrade"`
	// Version of the Arc agents to be installed on the cluster resource
	DesiredAgentVersion pulumi.StringPtrInput `pulumi:"desiredAgentVersion"`
	// List of system extensions can be installed on the cluster resource.
	SystemComponents SystemComponentArrayInput `pulumi:"systemComponents"`
}

// Defaults sets the appropriate defaults for ArcAgentProfileArgs
func (val *ArcAgentProfileArgs) Defaults() *ArcAgentProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AgentAutoUpgrade == nil {
		tmp.AgentAutoUpgrade = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (ArcAgentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcAgentProfile)(nil)).Elem()
}

func (i ArcAgentProfileArgs) ToArcAgentProfileOutput() ArcAgentProfileOutput {
	return i.ToArcAgentProfileOutputWithContext(context.Background())
}

func (i ArcAgentProfileArgs) ToArcAgentProfileOutputWithContext(ctx context.Context) ArcAgentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcAgentProfileOutput)
}

func (i ArcAgentProfileArgs) ToArcAgentProfilePtrOutput() ArcAgentProfilePtrOutput {
	return i.ToArcAgentProfilePtrOutputWithContext(context.Background())
}

func (i ArcAgentProfileArgs) ToArcAgentProfilePtrOutputWithContext(ctx context.Context) ArcAgentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcAgentProfileOutput).ToArcAgentProfilePtrOutputWithContext(ctx)
}

// ArcAgentProfilePtrInput is an input type that accepts ArcAgentProfileArgs, ArcAgentProfilePtr and ArcAgentProfilePtrOutput values.
// You can construct a concrete instance of `ArcAgentProfilePtrInput` via:
//
//	        ArcAgentProfileArgs{...}
//
//	or:
//
//	        nil
type ArcAgentProfilePtrInput interface {
	pulumi.Input

	ToArcAgentProfilePtrOutput() ArcAgentProfilePtrOutput
	ToArcAgentProfilePtrOutputWithContext(context.Context) ArcAgentProfilePtrOutput
}

type arcAgentProfilePtrType ArcAgentProfileArgs

func ArcAgentProfilePtr(v *ArcAgentProfileArgs) ArcAgentProfilePtrInput {
	return (*arcAgentProfilePtrType)(v)
}

func (*arcAgentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcAgentProfile)(nil)).Elem()
}

func (i *arcAgentProfilePtrType) ToArcAgentProfilePtrOutput() ArcAgentProfilePtrOutput {
	return i.ToArcAgentProfilePtrOutputWithContext(context.Background())
}

func (i *arcAgentProfilePtrType) ToArcAgentProfilePtrOutputWithContext(ctx context.Context) ArcAgentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcAgentProfilePtrOutput)
}

// Defines the Arc Agent properties for the clusters.
type ArcAgentProfileOutput struct{ *pulumi.OutputState }

func (ArcAgentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcAgentProfile)(nil)).Elem()
}

func (o ArcAgentProfileOutput) ToArcAgentProfileOutput() ArcAgentProfileOutput {
	return o
}

func (o ArcAgentProfileOutput) ToArcAgentProfileOutputWithContext(ctx context.Context) ArcAgentProfileOutput {
	return o
}

func (o ArcAgentProfileOutput) ToArcAgentProfilePtrOutput() ArcAgentProfilePtrOutput {
	return o.ToArcAgentProfilePtrOutputWithContext(context.Background())
}

func (o ArcAgentProfileOutput) ToArcAgentProfilePtrOutputWithContext(ctx context.Context) ArcAgentProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArcAgentProfile) *ArcAgentProfile {
		return &v
	}).(ArcAgentProfilePtrOutput)
}

// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
func (o ArcAgentProfileOutput) AgentAutoUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcAgentProfile) *string { return v.AgentAutoUpgrade }).(pulumi.StringPtrOutput)
}

// Version of the Arc agents to be installed on the cluster resource
func (o ArcAgentProfileOutput) DesiredAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcAgentProfile) *string { return v.DesiredAgentVersion }).(pulumi.StringPtrOutput)
}

// List of system extensions can be installed on the cluster resource.
func (o ArcAgentProfileOutput) SystemComponents() SystemComponentArrayOutput {
	return o.ApplyT(func(v ArcAgentProfile) []SystemComponent { return v.SystemComponents }).(SystemComponentArrayOutput)
}

type ArcAgentProfilePtrOutput struct{ *pulumi.OutputState }

func (ArcAgentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcAgentProfile)(nil)).Elem()
}

func (o ArcAgentProfilePtrOutput) ToArcAgentProfilePtrOutput() ArcAgentProfilePtrOutput {
	return o
}

func (o ArcAgentProfilePtrOutput) ToArcAgentProfilePtrOutputWithContext(ctx context.Context) ArcAgentProfilePtrOutput {
	return o
}

func (o ArcAgentProfilePtrOutput) Elem() ArcAgentProfileOutput {
	return o.ApplyT(func(v *ArcAgentProfile) ArcAgentProfile {
		if v != nil {
			return *v
		}
		var ret ArcAgentProfile
		return ret
	}).(ArcAgentProfileOutput)
}

// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
func (o ArcAgentProfilePtrOutput) AgentAutoUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcAgentProfile) *string {
		if v == nil {
			return nil
		}
		return v.AgentAutoUpgrade
	}).(pulumi.StringPtrOutput)
}

// Version of the Arc agents to be installed on the cluster resource
func (o ArcAgentProfilePtrOutput) DesiredAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcAgentProfile) *string {
		if v == nil {
			return nil
		}
		return v.DesiredAgentVersion
	}).(pulumi.StringPtrOutput)
}

// List of system extensions can be installed on the cluster resource.
func (o ArcAgentProfilePtrOutput) SystemComponents() SystemComponentArrayOutput {
	return o.ApplyT(func(v *ArcAgentProfile) []SystemComponent {
		if v == nil {
			return nil
		}
		return v.SystemComponents
	}).(SystemComponentArrayOutput)
}

// Defines the Arc Agent properties for the clusters.
type ArcAgentProfileResponse struct {
	// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
	AgentAutoUpgrade *string `pulumi:"agentAutoUpgrade"`
	// List of system extensions can be installed on the cluster resource.
	AgentErrors []AgentErrorResponse `pulumi:"agentErrors"`
	// Version of the Arc agents to be installed on the cluster resource
	DesiredAgentVersion *string `pulumi:"desiredAgentVersion"`
	// List of system extensions can be installed on the cluster resource.
	SystemComponents []SystemComponentResponse `pulumi:"systemComponents"`
}

// Defaults sets the appropriate defaults for ArcAgentProfileResponse
func (val *ArcAgentProfileResponse) Defaults() *ArcAgentProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AgentAutoUpgrade == nil {
		agentAutoUpgrade_ := "Enabled"
		tmp.AgentAutoUpgrade = &agentAutoUpgrade_
	}
	return &tmp
}

// Defines the Arc Agent properties for the clusters.
type ArcAgentProfileResponseOutput struct{ *pulumi.OutputState }

func (ArcAgentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcAgentProfileResponse)(nil)).Elem()
}

func (o ArcAgentProfileResponseOutput) ToArcAgentProfileResponseOutput() ArcAgentProfileResponseOutput {
	return o
}

func (o ArcAgentProfileResponseOutput) ToArcAgentProfileResponseOutputWithContext(ctx context.Context) ArcAgentProfileResponseOutput {
	return o
}

// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
func (o ArcAgentProfileResponseOutput) AgentAutoUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcAgentProfileResponse) *string { return v.AgentAutoUpgrade }).(pulumi.StringPtrOutput)
}

// List of system extensions can be installed on the cluster resource.
func (o ArcAgentProfileResponseOutput) AgentErrors() AgentErrorResponseArrayOutput {
	return o.ApplyT(func(v ArcAgentProfileResponse) []AgentErrorResponse { return v.AgentErrors }).(AgentErrorResponseArrayOutput)
}

// Version of the Arc agents to be installed on the cluster resource
func (o ArcAgentProfileResponseOutput) DesiredAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcAgentProfileResponse) *string { return v.DesiredAgentVersion }).(pulumi.StringPtrOutput)
}

// List of system extensions can be installed on the cluster resource.
func (o ArcAgentProfileResponseOutput) SystemComponents() SystemComponentResponseArrayOutput {
	return o.ApplyT(func(v ArcAgentProfileResponse) []SystemComponentResponse { return v.SystemComponents }).(SystemComponentResponseArrayOutput)
}

type ArcAgentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ArcAgentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcAgentProfileResponse)(nil)).Elem()
}

func (o ArcAgentProfileResponsePtrOutput) ToArcAgentProfileResponsePtrOutput() ArcAgentProfileResponsePtrOutput {
	return o
}

func (o ArcAgentProfileResponsePtrOutput) ToArcAgentProfileResponsePtrOutputWithContext(ctx context.Context) ArcAgentProfileResponsePtrOutput {
	return o
}

func (o ArcAgentProfileResponsePtrOutput) Elem() ArcAgentProfileResponseOutput {
	return o.ApplyT(func(v *ArcAgentProfileResponse) ArcAgentProfileResponse {
		if v != nil {
			return *v
		}
		var ret ArcAgentProfileResponse
		return ret
	}).(ArcAgentProfileResponseOutput)
}

// Indicates whether the Arc agents on the be upgraded automatically to the latest version. Defaults to Enabled.
func (o ArcAgentProfileResponsePtrOutput) AgentAutoUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcAgentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentAutoUpgrade
	}).(pulumi.StringPtrOutput)
}

// List of system extensions can be installed on the cluster resource.
func (o ArcAgentProfileResponsePtrOutput) AgentErrors() AgentErrorResponseArrayOutput {
	return o.ApplyT(func(v *ArcAgentProfileResponse) []AgentErrorResponse {
		if v == nil {
			return nil
		}
		return v.AgentErrors
	}).(AgentErrorResponseArrayOutput)
}

// Version of the Arc agents to be installed on the cluster resource
func (o ArcAgentProfileResponsePtrOutput) DesiredAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcAgentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DesiredAgentVersion
	}).(pulumi.StringPtrOutput)
}

// List of system extensions can be installed on the cluster resource.
func (o ArcAgentProfileResponsePtrOutput) SystemComponents() SystemComponentResponseArrayOutput {
	return o.ApplyT(func(v *ArcAgentProfileResponse) []SystemComponentResponse {
		if v == nil {
			return nil
		}
		return v.SystemComponents
	}).(SystemComponentResponseArrayOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentity struct {
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type ResourceIdentityType `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ConnectedClusterIdentity
func (val *ConnectedClusterIdentity) Defaults() *ConnectedClusterIdentity {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Type) {
		tmp.Type = ResourceIdentityType("SystemAssigned")
	}
	return &tmp
}

// ConnectedClusterIdentityInput is an input type that accepts ConnectedClusterIdentityArgs and ConnectedClusterIdentityOutput values.
// You can construct a concrete instance of `ConnectedClusterIdentityInput` via:
//
//	ConnectedClusterIdentityArgs{...}
type ConnectedClusterIdentityInput interface {
	pulumi.Input

	ToConnectedClusterIdentityOutput() ConnectedClusterIdentityOutput
	ToConnectedClusterIdentityOutputWithContext(context.Context) ConnectedClusterIdentityOutput
}

// Identity for the connected cluster.
type ConnectedClusterIdentityArgs struct {
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type ResourceIdentityTypeInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ConnectedClusterIdentityArgs
func (val *ConnectedClusterIdentityArgs) Defaults() *ConnectedClusterIdentityArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		tmp.Type = ResourceIdentityType("SystemAssigned")
	}
	return &tmp
}
func (ConnectedClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentity)(nil)).Elem()
}

func (i ConnectedClusterIdentityArgs) ToConnectedClusterIdentityOutput() ConnectedClusterIdentityOutput {
	return i.ToConnectedClusterIdentityOutputWithContext(context.Background())
}

func (i ConnectedClusterIdentityArgs) ToConnectedClusterIdentityOutputWithContext(ctx context.Context) ConnectedClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentity)(nil)).Elem()
}

func (o ConnectedClusterIdentityOutput) ToConnectedClusterIdentityOutput() ConnectedClusterIdentityOutput {
	return o
}

func (o ConnectedClusterIdentityOutput) ToConnectedClusterIdentityOutputWithContext(ctx context.Context) ConnectedClusterIdentityOutput {
	return o
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityOutput) Type() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v ConnectedClusterIdentity) ResourceIdentityType { return v.Type }).(ResourceIdentityTypeOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityResponse struct {
	// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ConnectedClusterIdentityResponse
func (val *ConnectedClusterIdentityResponse) Defaults() *ConnectedClusterIdentityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Type) {
		tmp.Type = "SystemAssigned"
	}
	return &tmp
}

// Identity for the connected cluster.
type ConnectedClusterIdentityResponseOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentityResponse)(nil)).Elem()
}

func (o ConnectedClusterIdentityResponseOutput) ToConnectedClusterIdentityResponseOutput() ConnectedClusterIdentityResponseOutput {
	return o
}

func (o ConnectedClusterIdentityResponseOutput) ToConnectedClusterIdentityResponseOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponseOutput {
	return o
}

// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The credential result response.
type CredentialResultResponse struct {
	// The name of the credential.
	Name string `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value string `pulumi:"value"`
}

// The credential result response.
type CredentialResultResponseOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return o
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return o
}

// The name of the credential.
func (o CredentialResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o CredentialResultResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Value }).(pulumi.StringOutput)
}

type CredentialResultResponseArrayOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) Index(i pulumi.IntInput) CredentialResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CredentialResultResponse {
		return vs[0].([]CredentialResultResponse)[vs[1].(int)]
	}).(CredentialResultResponseOutput)
}

// Contains the REP (rendezvous endpoint) and “Sender” access token.
type HybridConnectionConfigResponse struct {
	// Timestamp when this token will be expired.
	ExpirationTime float64 `pulumi:"expirationTime"`
	// Name of the connection
	HybridConnectionName string `pulumi:"hybridConnectionName"`
	// Name of the relay.
	Relay string `pulumi:"relay"`
	// Sender access token
	Token string `pulumi:"token"`
}

// Contains the REP (rendezvous endpoint) and “Sender” access token.
type HybridConnectionConfigResponseOutput struct{ *pulumi.OutputState }

func (HybridConnectionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionConfigResponse)(nil)).Elem()
}

func (o HybridConnectionConfigResponseOutput) ToHybridConnectionConfigResponseOutput() HybridConnectionConfigResponseOutput {
	return o
}

func (o HybridConnectionConfigResponseOutput) ToHybridConnectionConfigResponseOutputWithContext(ctx context.Context) HybridConnectionConfigResponseOutput {
	return o
}

// Timestamp when this token will be expired.
func (o HybridConnectionConfigResponseOutput) ExpirationTime() pulumi.Float64Output {
	return o.ApplyT(func(v HybridConnectionConfigResponse) float64 { return v.ExpirationTime }).(pulumi.Float64Output)
}

// Name of the connection
func (o HybridConnectionConfigResponseOutput) HybridConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionConfigResponse) string { return v.HybridConnectionName }).(pulumi.StringOutput)
}

// Name of the relay.
func (o HybridConnectionConfigResponseOutput) Relay() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionConfigResponse) string { return v.Relay }).(pulumi.StringOutput)
}

// Sender access token
func (o HybridConnectionConfigResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionConfigResponse) string { return v.Token }).(pulumi.StringOutput)
}

// System Extension and its desired versions to be installed on the cluster resource.
type SystemComponent struct {
	// Major Version of the system extension to be installed on the cluster resource.
	MajorVersion *int `pulumi:"majorVersion"`
	// Type of the system extension
	Type *string `pulumi:"type"`
	// Version of the system extension to be installed on the cluster resource.
	UserSpecifiedVersion *string `pulumi:"userSpecifiedVersion"`
}

// SystemComponentInput is an input type that accepts SystemComponentArgs and SystemComponentOutput values.
// You can construct a concrete instance of `SystemComponentInput` via:
//
//	SystemComponentArgs{...}
type SystemComponentInput interface {
	pulumi.Input

	ToSystemComponentOutput() SystemComponentOutput
	ToSystemComponentOutputWithContext(context.Context) SystemComponentOutput
}

// System Extension and its desired versions to be installed on the cluster resource.
type SystemComponentArgs struct {
	// Major Version of the system extension to be installed on the cluster resource.
	MajorVersion pulumi.IntPtrInput `pulumi:"majorVersion"`
	// Type of the system extension
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Version of the system extension to be installed on the cluster resource.
	UserSpecifiedVersion pulumi.StringPtrInput `pulumi:"userSpecifiedVersion"`
}

func (SystemComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemComponent)(nil)).Elem()
}

func (i SystemComponentArgs) ToSystemComponentOutput() SystemComponentOutput {
	return i.ToSystemComponentOutputWithContext(context.Background())
}

func (i SystemComponentArgs) ToSystemComponentOutputWithContext(ctx context.Context) SystemComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemComponentOutput)
}

// SystemComponentArrayInput is an input type that accepts SystemComponentArray and SystemComponentArrayOutput values.
// You can construct a concrete instance of `SystemComponentArrayInput` via:
//
//	SystemComponentArray{ SystemComponentArgs{...} }
type SystemComponentArrayInput interface {
	pulumi.Input

	ToSystemComponentArrayOutput() SystemComponentArrayOutput
	ToSystemComponentArrayOutputWithContext(context.Context) SystemComponentArrayOutput
}

type SystemComponentArray []SystemComponentInput

func (SystemComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemComponent)(nil)).Elem()
}

func (i SystemComponentArray) ToSystemComponentArrayOutput() SystemComponentArrayOutput {
	return i.ToSystemComponentArrayOutputWithContext(context.Background())
}

func (i SystemComponentArray) ToSystemComponentArrayOutputWithContext(ctx context.Context) SystemComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemComponentArrayOutput)
}

// System Extension and its desired versions to be installed on the cluster resource.
type SystemComponentOutput struct{ *pulumi.OutputState }

func (SystemComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemComponent)(nil)).Elem()
}

func (o SystemComponentOutput) ToSystemComponentOutput() SystemComponentOutput {
	return o
}

func (o SystemComponentOutput) ToSystemComponentOutputWithContext(ctx context.Context) SystemComponentOutput {
	return o
}

// Major Version of the system extension to be installed on the cluster resource.
func (o SystemComponentOutput) MajorVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemComponent) *int { return v.MajorVersion }).(pulumi.IntPtrOutput)
}

// Type of the system extension
func (o SystemComponentOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemComponent) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Version of the system extension to be installed on the cluster resource.
func (o SystemComponentOutput) UserSpecifiedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemComponent) *string { return v.UserSpecifiedVersion }).(pulumi.StringPtrOutput)
}

type SystemComponentArrayOutput struct{ *pulumi.OutputState }

func (SystemComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemComponent)(nil)).Elem()
}

func (o SystemComponentArrayOutput) ToSystemComponentArrayOutput() SystemComponentArrayOutput {
	return o
}

func (o SystemComponentArrayOutput) ToSystemComponentArrayOutputWithContext(ctx context.Context) SystemComponentArrayOutput {
	return o
}

func (o SystemComponentArrayOutput) Index(i pulumi.IntInput) SystemComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemComponent {
		return vs[0].([]SystemComponent)[vs[1].(int)]
	}).(SystemComponentOutput)
}

// System Extension and its desired versions to be installed on the cluster resource.
type SystemComponentResponse struct {
	// Version of the system extension is currently installed on the cluster resource.
	CurrentVersion string `pulumi:"currentVersion"`
	// Major Version of the system extension to be installed on the cluster resource.
	MajorVersion *int `pulumi:"majorVersion"`
	// Type of the system extension
	Type *string `pulumi:"type"`
	// Version of the system extension to be installed on the cluster resource.
	UserSpecifiedVersion *string `pulumi:"userSpecifiedVersion"`
}

// System Extension and its desired versions to be installed on the cluster resource.
type SystemComponentResponseOutput struct{ *pulumi.OutputState }

func (SystemComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemComponentResponse)(nil)).Elem()
}

func (o SystemComponentResponseOutput) ToSystemComponentResponseOutput() SystemComponentResponseOutput {
	return o
}

func (o SystemComponentResponseOutput) ToSystemComponentResponseOutputWithContext(ctx context.Context) SystemComponentResponseOutput {
	return o
}

// Version of the system extension is currently installed on the cluster resource.
func (o SystemComponentResponseOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SystemComponentResponse) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// Major Version of the system extension to be installed on the cluster resource.
func (o SystemComponentResponseOutput) MajorVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemComponentResponse) *int { return v.MajorVersion }).(pulumi.IntPtrOutput)
}

// Type of the system extension
func (o SystemComponentResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemComponentResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Version of the system extension to be installed on the cluster resource.
func (o SystemComponentResponseOutput) UserSpecifiedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemComponentResponse) *string { return v.UserSpecifiedVersion }).(pulumi.StringPtrOutput)
}

type SystemComponentResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemComponentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemComponentResponse)(nil)).Elem()
}

func (o SystemComponentResponseArrayOutput) ToSystemComponentResponseArrayOutput() SystemComponentResponseArrayOutput {
	return o
}

func (o SystemComponentResponseArrayOutput) ToSystemComponentResponseArrayOutputWithContext(ctx context.Context) SystemComponentResponseArrayOutput {
	return o
}

func (o SystemComponentResponseArrayOutput) Index(i pulumi.IntInput) SystemComponentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemComponentResponse {
		return vs[0].([]SystemComponentResponse)[vs[1].(int)]
	}).(SystemComponentResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource modification (UTC).
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource modification (UTC).
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AadProfileOutput{})
	pulumi.RegisterOutputType(AadProfilePtrOutput{})
	pulumi.RegisterOutputType(AadProfileResponseOutput{})
	pulumi.RegisterOutputType(AadProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(AgentErrorResponseOutput{})
	pulumi.RegisterOutputType(AgentErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ArcAgentProfileOutput{})
	pulumi.RegisterOutputType(ArcAgentProfilePtrOutput{})
	pulumi.RegisterOutputType(ArcAgentProfileResponseOutput{})
	pulumi.RegisterOutputType(ArcAgentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseArrayOutput{})
	pulumi.RegisterOutputType(HybridConnectionConfigResponseOutput{})
	pulumi.RegisterOutputType(SystemComponentOutput{})
	pulumi.RegisterOutputType(SystemComponentArrayOutput{})
	pulumi.RegisterOutputType(SystemComponentResponseOutput{})
	pulumi.RegisterOutputType(SystemComponentResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
