// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The cloud connector type.
type CloudType string

const (
	CloudTypeAWS = CloudType("AWS")
)

func (CloudType) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudType)(nil)).Elem()
}

func (e CloudType) ToCloudTypeOutput() CloudTypeOutput {
	return pulumi.ToOutput(e).(CloudTypeOutput)
}

func (e CloudType) ToCloudTypeOutputWithContext(ctx context.Context) CloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudTypeOutput)
}

func (e CloudType) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return e.ToCloudTypePtrOutputWithContext(context.Background())
}

func (e CloudType) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return CloudType(e).ToCloudTypeOutputWithContext(ctx).ToCloudTypePtrOutputWithContext(ctx)
}

func (e CloudType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudTypeOutput struct{ *pulumi.OutputState }

func (CloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudType)(nil)).Elem()
}

func (o CloudTypeOutput) ToCloudTypeOutput() CloudTypeOutput {
	return o
}

func (o CloudTypeOutput) ToCloudTypeOutputWithContext(ctx context.Context) CloudTypeOutput {
	return o
}

func (o CloudTypeOutput) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return o.ToCloudTypePtrOutputWithContext(context.Background())
}

func (o CloudTypeOutput) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudType) *CloudType {
		return &v
	}).(CloudTypePtrOutput)
}

func (o CloudTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudTypePtrOutput struct{ *pulumi.OutputState }

func (CloudTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudType)(nil)).Elem()
}

func (o CloudTypePtrOutput) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return o
}

func (o CloudTypePtrOutput) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return o
}

func (o CloudTypePtrOutput) Elem() CloudTypeOutput {
	return o.ApplyT(func(v *CloudType) CloudType {
		if v != nil {
			return *v
		}
		var ret CloudType
		return ret
	}).(CloudTypeOutput)
}

func (o CloudTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudTypeInput is an input type that accepts values of the CloudType enum
// A concrete instance of `CloudTypeInput` can be one of the following:
//
//	CloudTypeAWS
type CloudTypeInput interface {
	pulumi.Input

	ToCloudTypeOutput() CloudTypeOutput
	ToCloudTypeOutputWithContext(context.Context) CloudTypeOutput
}

var cloudTypePtrType = reflect.TypeOf((**CloudType)(nil)).Elem()

type CloudTypePtrInput interface {
	pulumi.Input

	ToCloudTypePtrOutput() CloudTypePtrOutput
	ToCloudTypePtrOutputWithContext(context.Context) CloudTypePtrOutput
}

type cloudTypePtr string

func CloudTypePtr(v string) CloudTypePtrInput {
	return (*cloudTypePtr)(&v)
}

func (*cloudTypePtr) ElementType() reflect.Type {
	return cloudTypePtrType
}

func (in *cloudTypePtr) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return pulumi.ToOutput(in).(CloudTypePtrOutput)
}

func (in *cloudTypePtr) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudTypePtrOutput)
}

func (in *cloudTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CloudType] {
	return pulumix.Output[*CloudType]{
		OutputState: in.ToCloudTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(CloudTypeOutput{})
	pulumi.RegisterOutputType(CloudTypePtrOutput{})
}
