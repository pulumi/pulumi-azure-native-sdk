// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240119preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a PreRulesResource
func LookupPreRule(ctx *pulumi.Context, args *LookupPreRuleArgs, opts ...pulumi.InvokeOption) (*LookupPreRuleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPreRuleResult
	err := ctx.Invoke("azure-native:cloudngfw/v20240119preview:getPreRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupPreRuleArgs struct {
	// GlobalRulestack resource name
	GlobalRulestackName string `pulumi:"globalRulestackName"`
	// Pre Rule priority
	Priority string `pulumi:"priority"`
}

// PreRulestack rule list
type LookupPreRuleResult struct {
	// rule action
	ActionType *string `pulumi:"actionType"`
	// array of rule applications
	Applications []string `pulumi:"applications"`
	// rule comment
	AuditComment *string `pulumi:"auditComment"`
	// rule category
	Category *CategoryResponse `pulumi:"category"`
	// enable or disable decryption
	DecryptionRuleType *string `pulumi:"decryptionRuleType"`
	// rule description
	Description *string `pulumi:"description"`
	// destination address
	Destination *DestinationAddrResponse `pulumi:"destination"`
	// enable or disable logging
	EnableLogging *string `pulumi:"enableLogging"`
	// etag info
	Etag *string `pulumi:"etag"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// inbound Inspection Certificate
	InboundInspectionCertificate *string `pulumi:"inboundInspectionCertificate"`
	// The name of the resource
	Name string `pulumi:"name"`
	// cidr should not be 'any'
	NegateDestination *string `pulumi:"negateDestination"`
	// cidr should not be 'any'
	NegateSource *string `pulumi:"negateSource"`
	Priority     int     `pulumi:"priority"`
	// any, application-default, TCP:number, UDP:number
	Protocol *string `pulumi:"protocol"`
	// prot port list
	ProtocolPortList []string `pulumi:"protocolPortList"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// rule name
	RuleName string `pulumi:"ruleName"`
	// state of this rule
	RuleState *string `pulumi:"ruleState"`
	// source address
	Source *SourceAddrResponse `pulumi:"source"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// tag for rule
	Tags []TagInfoResponse `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupPreRuleResult
func (val *LookupPreRuleResult) Defaults() *LookupPreRuleResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "application-default"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

func LookupPreRuleOutput(ctx *pulumi.Context, args LookupPreRuleOutputArgs, opts ...pulumi.InvokeOption) LookupPreRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPreRuleResult, error) {
			args := v.(LookupPreRuleArgs)
			r, err := LookupPreRule(ctx, &args, opts...)
			var s LookupPreRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPreRuleResultOutput)
}

type LookupPreRuleOutputArgs struct {
	// GlobalRulestack resource name
	GlobalRulestackName pulumi.StringInput `pulumi:"globalRulestackName"`
	// Pre Rule priority
	Priority pulumi.StringInput `pulumi:"priority"`
}

func (LookupPreRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPreRuleArgs)(nil)).Elem()
}

// PreRulestack rule list
type LookupPreRuleResultOutput struct{ *pulumi.OutputState }

func (LookupPreRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPreRuleResult)(nil)).Elem()
}

func (o LookupPreRuleResultOutput) ToLookupPreRuleResultOutput() LookupPreRuleResultOutput {
	return o
}

func (o LookupPreRuleResultOutput) ToLookupPreRuleResultOutputWithContext(ctx context.Context) LookupPreRuleResultOutput {
	return o
}

// rule action
func (o LookupPreRuleResultOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// array of rule applications
func (o LookupPreRuleResultOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPreRuleResult) []string { return v.Applications }).(pulumi.StringArrayOutput)
}

// rule comment
func (o LookupPreRuleResultOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// rule category
func (o LookupPreRuleResultOutput) Category() CategoryResponsePtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *CategoryResponse { return v.Category }).(CategoryResponsePtrOutput)
}

// enable or disable decryption
func (o LookupPreRuleResultOutput) DecryptionRuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.DecryptionRuleType }).(pulumi.StringPtrOutput)
}

// rule description
func (o LookupPreRuleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// destination address
func (o LookupPreRuleResultOutput) Destination() DestinationAddrResponsePtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *DestinationAddrResponse { return v.Destination }).(DestinationAddrResponsePtrOutput)
}

// enable or disable logging
func (o LookupPreRuleResultOutput) EnableLogging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.EnableLogging }).(pulumi.StringPtrOutput)
}

// etag info
func (o LookupPreRuleResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupPreRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPreRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// inbound Inspection Certificate
func (o LookupPreRuleResultOutput) InboundInspectionCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.InboundInspectionCertificate }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupPreRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPreRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// cidr should not be 'any'
func (o LookupPreRuleResultOutput) NegateDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.NegateDestination }).(pulumi.StringPtrOutput)
}

// cidr should not be 'any'
func (o LookupPreRuleResultOutput) NegateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.NegateSource }).(pulumi.StringPtrOutput)
}

func (o LookupPreRuleResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPreRuleResult) int { return v.Priority }).(pulumi.IntOutput)
}

// any, application-default, TCP:number, UDP:number
func (o LookupPreRuleResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// prot port list
func (o LookupPreRuleResultOutput) ProtocolPortList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPreRuleResult) []string { return v.ProtocolPortList }).(pulumi.StringArrayOutput)
}

// Provisioning state of the resource.
func (o LookupPreRuleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPreRuleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// rule name
func (o LookupPreRuleResultOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPreRuleResult) string { return v.RuleName }).(pulumi.StringOutput)
}

// state of this rule
func (o LookupPreRuleResultOutput) RuleState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *string { return v.RuleState }).(pulumi.StringPtrOutput)
}

// source address
func (o LookupPreRuleResultOutput) Source() SourceAddrResponsePtrOutput {
	return o.ApplyT(func(v LookupPreRuleResult) *SourceAddrResponse { return v.Source }).(SourceAddrResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupPreRuleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPreRuleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// tag for rule
func (o LookupPreRuleResultOutput) Tags() TagInfoResponseArrayOutput {
	return o.ApplyT(func(v LookupPreRuleResult) []TagInfoResponse { return v.Tags }).(TagInfoResponseArrayOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPreRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPreRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPreRuleResultOutput{})
}
