// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GlobalRulestack Certificate Object
// Azure REST API version: 2023-09-01.
//
// Other available API versions: 2022-08-29, 2022-08-29-preview, 2023-09-01-preview, 2023-10-10-preview, 2024-01-19-preview, 2024-02-07-preview.
type CertificateObjectGlobalRulestack struct {
	pulumi.CustomResourceState

	// comment for this object
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// use certificate self signed
	CertificateSelfSigned pulumi.StringOutput `pulumi:"certificateSelfSigned"`
	// Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
	CertificateSignerResourceId pulumi.StringPtrOutput `pulumi:"certificateSignerResourceId"`
	// user description for this object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// read only string representing last create or update
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCertificateObjectGlobalRulestack registers a new resource with the given unique name, arguments, and options.
func NewCertificateObjectGlobalRulestack(ctx *pulumi.Context,
	name string, args *CertificateObjectGlobalRulestackArgs, opts ...pulumi.ResourceOption) (*CertificateObjectGlobalRulestack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateSelfSigned == nil {
		return nil, errors.New("invalid value for required argument 'CertificateSelfSigned'")
	}
	if args.GlobalRulestackName == nil {
		return nil, errors.New("invalid value for required argument 'GlobalRulestackName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829:CertificateObjectGlobalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829preview:CertificateObjectGlobalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901:CertificateObjectGlobalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901preview:CertificateObjectGlobalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20231010preview:CertificateObjectGlobalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240119preview:CertificateObjectGlobalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240207preview:CertificateObjectGlobalRulestack"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CertificateObjectGlobalRulestack
	err := ctx.RegisterResource("azure-native:cloudngfw:CertificateObjectGlobalRulestack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateObjectGlobalRulestack gets an existing CertificateObjectGlobalRulestack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateObjectGlobalRulestack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateObjectGlobalRulestackState, opts ...pulumi.ResourceOption) (*CertificateObjectGlobalRulestack, error) {
	var resource CertificateObjectGlobalRulestack
	err := ctx.ReadResource("azure-native:cloudngfw:CertificateObjectGlobalRulestack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateObjectGlobalRulestack resources.
type certificateObjectGlobalRulestackState struct {
}

type CertificateObjectGlobalRulestackState struct {
}

func (CertificateObjectGlobalRulestackState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateObjectGlobalRulestackState)(nil)).Elem()
}

type certificateObjectGlobalRulestackArgs struct {
	// comment for this object
	AuditComment *string `pulumi:"auditComment"`
	// use certificate self signed
	CertificateSelfSigned string `pulumi:"certificateSelfSigned"`
	// Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
	CertificateSignerResourceId *string `pulumi:"certificateSignerResourceId"`
	// user description for this object
	Description *string `pulumi:"description"`
	// GlobalRulestack resource name
	GlobalRulestackName string `pulumi:"globalRulestackName"`
	// certificate name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CertificateObjectGlobalRulestack resource.
type CertificateObjectGlobalRulestackArgs struct {
	// comment for this object
	AuditComment pulumi.StringPtrInput
	// use certificate self signed
	CertificateSelfSigned pulumi.StringInput
	// Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
	CertificateSignerResourceId pulumi.StringPtrInput
	// user description for this object
	Description pulumi.StringPtrInput
	// GlobalRulestack resource name
	GlobalRulestackName pulumi.StringInput
	// certificate name
	Name pulumi.StringPtrInput
}

func (CertificateObjectGlobalRulestackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateObjectGlobalRulestackArgs)(nil)).Elem()
}

type CertificateObjectGlobalRulestackInput interface {
	pulumi.Input

	ToCertificateObjectGlobalRulestackOutput() CertificateObjectGlobalRulestackOutput
	ToCertificateObjectGlobalRulestackOutputWithContext(ctx context.Context) CertificateObjectGlobalRulestackOutput
}

func (*CertificateObjectGlobalRulestack) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateObjectGlobalRulestack)(nil)).Elem()
}

func (i *CertificateObjectGlobalRulestack) ToCertificateObjectGlobalRulestackOutput() CertificateObjectGlobalRulestackOutput {
	return i.ToCertificateObjectGlobalRulestackOutputWithContext(context.Background())
}

func (i *CertificateObjectGlobalRulestack) ToCertificateObjectGlobalRulestackOutputWithContext(ctx context.Context) CertificateObjectGlobalRulestackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateObjectGlobalRulestackOutput)
}

type CertificateObjectGlobalRulestackOutput struct{ *pulumi.OutputState }

func (CertificateObjectGlobalRulestackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateObjectGlobalRulestack)(nil)).Elem()
}

func (o CertificateObjectGlobalRulestackOutput) ToCertificateObjectGlobalRulestackOutput() CertificateObjectGlobalRulestackOutput {
	return o
}

func (o CertificateObjectGlobalRulestackOutput) ToCertificateObjectGlobalRulestackOutputWithContext(ctx context.Context) CertificateObjectGlobalRulestackOutput {
	return o
}

// comment for this object
func (o CertificateObjectGlobalRulestackOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// use certificate self signed
func (o CertificateObjectGlobalRulestackOutput) CertificateSelfSigned() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringOutput { return v.CertificateSelfSigned }).(pulumi.StringOutput)
}

// Resource Id of certificate signer, to be populated only when certificateSelfSigned is false
func (o CertificateObjectGlobalRulestackOutput) CertificateSignerResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringPtrOutput { return v.CertificateSignerResourceId }).(pulumi.StringPtrOutput)
}

// user description for this object
func (o CertificateObjectGlobalRulestackOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// read only string representing last create or update
func (o CertificateObjectGlobalRulestackOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o CertificateObjectGlobalRulestackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o CertificateObjectGlobalRulestackOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CertificateObjectGlobalRulestackOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CertificateObjectGlobalRulestackOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateObjectGlobalRulestack) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificateObjectGlobalRulestackOutput{})
}
