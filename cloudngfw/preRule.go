// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PreRulestack rule list
// Azure REST API version: 2023-09-01.
//
// Other available API versions: 2022-08-29, 2022-08-29-preview, 2023-09-01-preview, 2023-10-10-preview, 2024-01-19-preview, 2024-02-07-preview.
type PreRule struct {
	pulumi.CustomResourceState

	// rule action
	ActionType pulumi.StringPtrOutput `pulumi:"actionType"`
	// array of rule applications
	Applications pulumi.StringArrayOutput `pulumi:"applications"`
	// rule comment
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// rule category
	Category CategoryResponsePtrOutput `pulumi:"category"`
	// enable or disable decryption
	DecryptionRuleType pulumi.StringPtrOutput `pulumi:"decryptionRuleType"`
	// rule description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// destination address
	Destination DestinationAddrResponsePtrOutput `pulumi:"destination"`
	// enable or disable logging
	EnableLogging pulumi.StringPtrOutput `pulumi:"enableLogging"`
	// etag info
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// inbound Inspection Certificate
	InboundInspectionCertificate pulumi.StringPtrOutput `pulumi:"inboundInspectionCertificate"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// cidr should not be 'any'
	NegateDestination pulumi.StringPtrOutput `pulumi:"negateDestination"`
	// cidr should not be 'any'
	NegateSource pulumi.StringPtrOutput `pulumi:"negateSource"`
	Priority     pulumi.IntOutput       `pulumi:"priority"`
	// any, application-default, TCP:number, UDP:number
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// prot port list
	ProtocolPortList pulumi.StringArrayOutput `pulumi:"protocolPortList"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// rule name
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// state of this rule
	RuleState pulumi.StringPtrOutput `pulumi:"ruleState"`
	// source address
	Source SourceAddrResponsePtrOutput `pulumi:"source"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// tag for rule
	Tags TagInfoResponseArrayOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPreRule registers a new resource with the given unique name, arguments, and options.
func NewPreRule(ctx *pulumi.Context,
	name string, args *PreRuleArgs, opts ...pulumi.ResourceOption) (*PreRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalRulestackName == nil {
		return nil, errors.New("invalid value for required argument 'GlobalRulestackName'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	if args.Protocol == nil {
		args.Protocol = pulumi.StringPtr("application-default")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829:PreRule"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829preview:PreRule"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901:PreRule"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901preview:PreRule"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20231010preview:PreRule"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240119preview:PreRule"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240207preview:PreRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PreRule
	err := ctx.RegisterResource("azure-native:cloudngfw:PreRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreRule gets an existing PreRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreRuleState, opts ...pulumi.ResourceOption) (*PreRule, error) {
	var resource PreRule
	err := ctx.ReadResource("azure-native:cloudngfw:PreRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PreRule resources.
type preRuleState struct {
}

type PreRuleState struct {
}

func (PreRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*preRuleState)(nil)).Elem()
}

type preRuleArgs struct {
	// rule action
	ActionType *string `pulumi:"actionType"`
	// array of rule applications
	Applications []string `pulumi:"applications"`
	// rule comment
	AuditComment *string `pulumi:"auditComment"`
	// rule category
	Category *Category `pulumi:"category"`
	// enable or disable decryption
	DecryptionRuleType *string `pulumi:"decryptionRuleType"`
	// rule description
	Description *string `pulumi:"description"`
	// destination address
	Destination *DestinationAddr `pulumi:"destination"`
	// enable or disable logging
	EnableLogging *string `pulumi:"enableLogging"`
	// GlobalRulestack resource name
	GlobalRulestackName string `pulumi:"globalRulestackName"`
	// inbound Inspection Certificate
	InboundInspectionCertificate *string `pulumi:"inboundInspectionCertificate"`
	// cidr should not be 'any'
	NegateDestination *string `pulumi:"negateDestination"`
	// cidr should not be 'any'
	NegateSource *string `pulumi:"negateSource"`
	// Pre Rule priority
	Priority *string `pulumi:"priority"`
	// any, application-default, TCP:number, UDP:number
	Protocol *string `pulumi:"protocol"`
	// prot port list
	ProtocolPortList []string `pulumi:"protocolPortList"`
	// rule name
	RuleName string `pulumi:"ruleName"`
	// state of this rule
	RuleState *string `pulumi:"ruleState"`
	// source address
	Source *SourceAddr `pulumi:"source"`
	// tag for rule
	Tags []TagInfo `pulumi:"tags"`
}

// The set of arguments for constructing a PreRule resource.
type PreRuleArgs struct {
	// rule action
	ActionType pulumi.StringPtrInput
	// array of rule applications
	Applications pulumi.StringArrayInput
	// rule comment
	AuditComment pulumi.StringPtrInput
	// rule category
	Category CategoryPtrInput
	// enable or disable decryption
	DecryptionRuleType pulumi.StringPtrInput
	// rule description
	Description pulumi.StringPtrInput
	// destination address
	Destination DestinationAddrPtrInput
	// enable or disable logging
	EnableLogging pulumi.StringPtrInput
	// GlobalRulestack resource name
	GlobalRulestackName pulumi.StringInput
	// inbound Inspection Certificate
	InboundInspectionCertificate pulumi.StringPtrInput
	// cidr should not be 'any'
	NegateDestination pulumi.StringPtrInput
	// cidr should not be 'any'
	NegateSource pulumi.StringPtrInput
	// Pre Rule priority
	Priority pulumi.StringPtrInput
	// any, application-default, TCP:number, UDP:number
	Protocol pulumi.StringPtrInput
	// prot port list
	ProtocolPortList pulumi.StringArrayInput
	// rule name
	RuleName pulumi.StringInput
	// state of this rule
	RuleState pulumi.StringPtrInput
	// source address
	Source SourceAddrPtrInput
	// tag for rule
	Tags TagInfoArrayInput
}

func (PreRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preRuleArgs)(nil)).Elem()
}

type PreRuleInput interface {
	pulumi.Input

	ToPreRuleOutput() PreRuleOutput
	ToPreRuleOutputWithContext(ctx context.Context) PreRuleOutput
}

func (*PreRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PreRule)(nil)).Elem()
}

func (i *PreRule) ToPreRuleOutput() PreRuleOutput {
	return i.ToPreRuleOutputWithContext(context.Background())
}

func (i *PreRule) ToPreRuleOutputWithContext(ctx context.Context) PreRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreRuleOutput)
}

type PreRuleOutput struct{ *pulumi.OutputState }

func (PreRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreRule)(nil)).Elem()
}

func (o PreRuleOutput) ToPreRuleOutput() PreRuleOutput {
	return o
}

func (o PreRuleOutput) ToPreRuleOutputWithContext(ctx context.Context) PreRuleOutput {
	return o
}

// rule action
func (o PreRuleOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.ActionType }).(pulumi.StringPtrOutput)
}

// array of rule applications
func (o PreRuleOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringArrayOutput { return v.Applications }).(pulumi.StringArrayOutput)
}

// rule comment
func (o PreRuleOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// rule category
func (o PreRuleOutput) Category() CategoryResponsePtrOutput {
	return o.ApplyT(func(v *PreRule) CategoryResponsePtrOutput { return v.Category }).(CategoryResponsePtrOutput)
}

// enable or disable decryption
func (o PreRuleOutput) DecryptionRuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.DecryptionRuleType }).(pulumi.StringPtrOutput)
}

// rule description
func (o PreRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// destination address
func (o PreRuleOutput) Destination() DestinationAddrResponsePtrOutput {
	return o.ApplyT(func(v *PreRule) DestinationAddrResponsePtrOutput { return v.Destination }).(DestinationAddrResponsePtrOutput)
}

// enable or disable logging
func (o PreRuleOutput) EnableLogging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.EnableLogging }).(pulumi.StringPtrOutput)
}

// etag info
func (o PreRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// inbound Inspection Certificate
func (o PreRuleOutput) InboundInspectionCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.InboundInspectionCertificate }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o PreRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// cidr should not be 'any'
func (o PreRuleOutput) NegateDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.NegateDestination }).(pulumi.StringPtrOutput)
}

// cidr should not be 'any'
func (o PreRuleOutput) NegateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.NegateSource }).(pulumi.StringPtrOutput)
}

func (o PreRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *PreRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// any, application-default, TCP:number, UDP:number
func (o PreRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// prot port list
func (o PreRuleOutput) ProtocolPortList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringArrayOutput { return v.ProtocolPortList }).(pulumi.StringArrayOutput)
}

// Provisioning state of the resource.
func (o PreRuleOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// rule name
func (o PreRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// state of this rule
func (o PreRuleOutput) RuleState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringPtrOutput { return v.RuleState }).(pulumi.StringPtrOutput)
}

// source address
func (o PreRuleOutput) Source() SourceAddrResponsePtrOutput {
	return o.ApplyT(func(v *PreRule) SourceAddrResponsePtrOutput { return v.Source }).(SourceAddrResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PreRuleOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *PreRule) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// tag for rule
func (o PreRuleOutput) Tags() TagInfoResponseArrayOutput {
	return o.ApplyT(func(v *PreRule) TagInfoResponseArrayOutput { return v.Tags }).(TagInfoResponseArrayOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PreRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PreRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PreRuleOutput{})
}
