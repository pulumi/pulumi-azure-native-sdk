// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List the security services for rulestack
// Azure REST API version: 2023-09-01.
//
// Other available API versions: 2022-08-29, 2022-08-29-preview, 2023-09-01-preview, 2023-10-10-preview, 2024-01-19-preview, 2024-02-07-preview.
func ListLocalRulestackSecurityServices(ctx *pulumi.Context, args *ListLocalRulestackSecurityServicesArgs, opts ...pulumi.InvokeOption) (*ListLocalRulestackSecurityServicesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListLocalRulestackSecurityServicesResult
	err := ctx.Invoke("azure-native:cloudngfw:listLocalRulestackSecurityServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListLocalRulestackSecurityServicesArgs struct {
	// LocalRulestack resource name
	LocalRulestackName string `pulumi:"localRulestackName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string  `pulumi:"resourceGroupName"`
	Skip              *string `pulumi:"skip"`
	Top               *int    `pulumi:"top"`
	Type              string  `pulumi:"type"`
}

// Security services list response
type ListLocalRulestackSecurityServicesResult struct {
	// next link
	NextLink *string `pulumi:"nextLink"`
	// response value
	Value SecurityServicesTypeListResponse `pulumi:"value"`
}

func ListLocalRulestackSecurityServicesOutput(ctx *pulumi.Context, args ListLocalRulestackSecurityServicesOutputArgs, opts ...pulumi.InvokeOption) ListLocalRulestackSecurityServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListLocalRulestackSecurityServicesResult, error) {
			args := v.(ListLocalRulestackSecurityServicesArgs)
			r, err := ListLocalRulestackSecurityServices(ctx, &args, opts...)
			var s ListLocalRulestackSecurityServicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListLocalRulestackSecurityServicesResultOutput)
}

type ListLocalRulestackSecurityServicesOutputArgs struct {
	// LocalRulestack resource name
	LocalRulestackName pulumi.StringInput `pulumi:"localRulestackName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput    `pulumi:"resourceGroupName"`
	Skip              pulumi.StringPtrInput `pulumi:"skip"`
	Top               pulumi.IntPtrInput    `pulumi:"top"`
	Type              pulumi.StringInput    `pulumi:"type"`
}

func (ListLocalRulestackSecurityServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListLocalRulestackSecurityServicesArgs)(nil)).Elem()
}

// Security services list response
type ListLocalRulestackSecurityServicesResultOutput struct{ *pulumi.OutputState }

func (ListLocalRulestackSecurityServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListLocalRulestackSecurityServicesResult)(nil)).Elem()
}

func (o ListLocalRulestackSecurityServicesResultOutput) ToListLocalRulestackSecurityServicesResultOutput() ListLocalRulestackSecurityServicesResultOutput {
	return o
}

func (o ListLocalRulestackSecurityServicesResultOutput) ToListLocalRulestackSecurityServicesResultOutputWithContext(ctx context.Context) ListLocalRulestackSecurityServicesResultOutput {
	return o
}

// next link
func (o ListLocalRulestackSecurityServicesResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListLocalRulestackSecurityServicesResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// response value
func (o ListLocalRulestackSecurityServicesResultOutput) Value() SecurityServicesTypeListResponseOutput {
	return o.ApplyT(func(v ListLocalRulestackSecurityServicesResult) SecurityServicesTypeListResponse { return v.Value }).(SecurityServicesTypeListResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ListLocalRulestackSecurityServicesResultOutput{})
}
