// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220829

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Log Profile for Firewall
func GetFirewallLogProfile(ctx *pulumi.Context, args *GetFirewallLogProfileArgs, opts ...pulumi.InvokeOption) (*GetFirewallLogProfileResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetFirewallLogProfileResult
	err := ctx.Invoke("azure-native:cloudngfw/v20220829:getFirewallLogProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetFirewallLogProfileArgs struct {
	// Firewall resource name
	FirewallName string `pulumi:"firewallName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Log Settings for Firewall
type GetFirewallLogProfileResult struct {
	// Application Insight details
	ApplicationInsights *ApplicationInsightsResponse `pulumi:"applicationInsights"`
	// Common destination configurations
	CommonDestination *LogDestinationResponse `pulumi:"commonDestination"`
	// Decrypt destination configurations
	DecryptLogDestination *LogDestinationResponse `pulumi:"decryptLogDestination"`
	// Log option SAME/INDIVIDUAL
	LogOption *string `pulumi:"logOption"`
	// One of possible log type
	LogType *string `pulumi:"logType"`
	// Threat destination configurations
	ThreatLogDestination *LogDestinationResponse `pulumi:"threatLogDestination"`
	// Traffic destination configurations
	TrafficLogDestination *LogDestinationResponse `pulumi:"trafficLogDestination"`
}

func GetFirewallLogProfileOutput(ctx *pulumi.Context, args GetFirewallLogProfileOutputArgs, opts ...pulumi.InvokeOption) GetFirewallLogProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFirewallLogProfileResult, error) {
			args := v.(GetFirewallLogProfileArgs)
			r, err := GetFirewallLogProfile(ctx, &args, opts...)
			var s GetFirewallLogProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFirewallLogProfileResultOutput)
}

type GetFirewallLogProfileOutputArgs struct {
	// Firewall resource name
	FirewallName pulumi.StringInput `pulumi:"firewallName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetFirewallLogProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallLogProfileArgs)(nil)).Elem()
}

// Log Settings for Firewall
type GetFirewallLogProfileResultOutput struct{ *pulumi.OutputState }

func (GetFirewallLogProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallLogProfileResult)(nil)).Elem()
}

func (o GetFirewallLogProfileResultOutput) ToGetFirewallLogProfileResultOutput() GetFirewallLogProfileResultOutput {
	return o
}

func (o GetFirewallLogProfileResultOutput) ToGetFirewallLogProfileResultOutputWithContext(ctx context.Context) GetFirewallLogProfileResultOutput {
	return o
}

// Application Insight details
func (o GetFirewallLogProfileResultOutput) ApplicationInsights() ApplicationInsightsResponsePtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *ApplicationInsightsResponse { return v.ApplicationInsights }).(ApplicationInsightsResponsePtrOutput)
}

// Common destination configurations
func (o GetFirewallLogProfileResultOutput) CommonDestination() LogDestinationResponsePtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *LogDestinationResponse { return v.CommonDestination }).(LogDestinationResponsePtrOutput)
}

// Decrypt destination configurations
func (o GetFirewallLogProfileResultOutput) DecryptLogDestination() LogDestinationResponsePtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *LogDestinationResponse { return v.DecryptLogDestination }).(LogDestinationResponsePtrOutput)
}

// Log option SAME/INDIVIDUAL
func (o GetFirewallLogProfileResultOutput) LogOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *string { return v.LogOption }).(pulumi.StringPtrOutput)
}

// One of possible log type
func (o GetFirewallLogProfileResultOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *string { return v.LogType }).(pulumi.StringPtrOutput)
}

// Threat destination configurations
func (o GetFirewallLogProfileResultOutput) ThreatLogDestination() LogDestinationResponsePtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *LogDestinationResponse { return v.ThreatLogDestination }).(LogDestinationResponsePtrOutput)
}

// Traffic destination configurations
func (o GetFirewallLogProfileResultOutput) TrafficLogDestination() LogDestinationResponsePtrOutput {
	return o.ApplyT(func(v GetFirewallLogProfileResult) *LogDestinationResponse { return v.TrafficLogDestination }).(LogDestinationResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFirewallLogProfileResultOutput{})
}
