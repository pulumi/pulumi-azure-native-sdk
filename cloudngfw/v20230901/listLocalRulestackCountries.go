// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of countries for Rulestack
func ListLocalRulestackCountries(ctx *pulumi.Context, args *ListLocalRulestackCountriesArgs, opts ...pulumi.InvokeOption) (*ListLocalRulestackCountriesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListLocalRulestackCountriesResult
	err := ctx.Invoke("azure-native:cloudngfw/v20230901:listLocalRulestackCountries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListLocalRulestackCountriesArgs struct {
	// LocalRulestack resource name
	LocalRulestackName string `pulumi:"localRulestackName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string  `pulumi:"resourceGroupName"`
	Skip              *string `pulumi:"skip"`
	Top               *int    `pulumi:"top"`
}

// Countries Response Object
type ListLocalRulestackCountriesResult struct {
	// next link
	NextLink *string `pulumi:"nextLink"`
	// List of countries
	Value []CountryResponse `pulumi:"value"`
}

func ListLocalRulestackCountriesOutput(ctx *pulumi.Context, args ListLocalRulestackCountriesOutputArgs, opts ...pulumi.InvokeOption) ListLocalRulestackCountriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListLocalRulestackCountriesResult, error) {
			args := v.(ListLocalRulestackCountriesArgs)
			r, err := ListLocalRulestackCountries(ctx, &args, opts...)
			var s ListLocalRulestackCountriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListLocalRulestackCountriesResultOutput)
}

type ListLocalRulestackCountriesOutputArgs struct {
	// LocalRulestack resource name
	LocalRulestackName pulumi.StringInput `pulumi:"localRulestackName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput    `pulumi:"resourceGroupName"`
	Skip              pulumi.StringPtrInput `pulumi:"skip"`
	Top               pulumi.IntPtrInput    `pulumi:"top"`
}

func (ListLocalRulestackCountriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListLocalRulestackCountriesArgs)(nil)).Elem()
}

// Countries Response Object
type ListLocalRulestackCountriesResultOutput struct{ *pulumi.OutputState }

func (ListLocalRulestackCountriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListLocalRulestackCountriesResult)(nil)).Elem()
}

func (o ListLocalRulestackCountriesResultOutput) ToListLocalRulestackCountriesResultOutput() ListLocalRulestackCountriesResultOutput {
	return o
}

func (o ListLocalRulestackCountriesResultOutput) ToListLocalRulestackCountriesResultOutputWithContext(ctx context.Context) ListLocalRulestackCountriesResultOutput {
	return o
}

// next link
func (o ListLocalRulestackCountriesResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListLocalRulestackCountriesResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// List of countries
func (o ListLocalRulestackCountriesResultOutput) Value() CountryResponseArrayOutput {
	return o.ApplyT(func(v ListLocalRulestackCountriesResult) []CountryResponse { return v.Value }).(CountryResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListLocalRulestackCountriesResultOutput{})
}
