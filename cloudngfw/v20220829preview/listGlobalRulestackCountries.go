// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220829preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of countries for Rulestack
func ListGlobalRulestackCountries(ctx *pulumi.Context, args *ListGlobalRulestackCountriesArgs, opts ...pulumi.InvokeOption) (*ListGlobalRulestackCountriesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListGlobalRulestackCountriesResult
	err := ctx.Invoke("azure-native:cloudngfw/v20220829preview:listGlobalRulestackCountries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListGlobalRulestackCountriesArgs struct {
	// GlobalRulestack resource name
	GlobalRulestackName string  `pulumi:"globalRulestackName"`
	Skip                *string `pulumi:"skip"`
	Top                 *int    `pulumi:"top"`
}

// Countries Response Object
type ListGlobalRulestackCountriesResult struct {
	// next link
	NextLink *string `pulumi:"nextLink"`
	// List of countries
	Value []CountryResponse `pulumi:"value"`
}

func ListGlobalRulestackCountriesOutput(ctx *pulumi.Context, args ListGlobalRulestackCountriesOutputArgs, opts ...pulumi.InvokeOption) ListGlobalRulestackCountriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListGlobalRulestackCountriesResult, error) {
			args := v.(ListGlobalRulestackCountriesArgs)
			r, err := ListGlobalRulestackCountries(ctx, &args, opts...)
			var s ListGlobalRulestackCountriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListGlobalRulestackCountriesResultOutput)
}

type ListGlobalRulestackCountriesOutputArgs struct {
	// GlobalRulestack resource name
	GlobalRulestackName pulumi.StringInput    `pulumi:"globalRulestackName"`
	Skip                pulumi.StringPtrInput `pulumi:"skip"`
	Top                 pulumi.IntPtrInput    `pulumi:"top"`
}

func (ListGlobalRulestackCountriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGlobalRulestackCountriesArgs)(nil)).Elem()
}

// Countries Response Object
type ListGlobalRulestackCountriesResultOutput struct{ *pulumi.OutputState }

func (ListGlobalRulestackCountriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGlobalRulestackCountriesResult)(nil)).Elem()
}

func (o ListGlobalRulestackCountriesResultOutput) ToListGlobalRulestackCountriesResultOutput() ListGlobalRulestackCountriesResultOutput {
	return o
}

func (o ListGlobalRulestackCountriesResultOutput) ToListGlobalRulestackCountriesResultOutputWithContext(ctx context.Context) ListGlobalRulestackCountriesResultOutput {
	return o
}

// next link
func (o ListGlobalRulestackCountriesResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListGlobalRulestackCountriesResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// List of countries
func (o ListGlobalRulestackCountriesResultOutput) Value() CountryResponseArrayOutput {
	return o.ApplyT(func(v ListGlobalRulestackCountriesResult) []CountryResponse { return v.Value }).(CountryResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListGlobalRulestackCountriesResultOutput{})
}
