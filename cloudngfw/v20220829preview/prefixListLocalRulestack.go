// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220829preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// LocalRulestack prefixList
type PrefixListLocalRulestack struct {
	pulumi.CustomResourceState

	// comment for this object
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// prefix description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// etag info
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// prefix list
	PrefixList pulumi.StringArrayOutput `pulumi:"prefixList"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPrefixListLocalRulestack registers a new resource with the given unique name, arguments, and options.
func NewPrefixListLocalRulestack(ctx *pulumi.Context,
	name string, args *PrefixListLocalRulestackArgs, opts ...pulumi.ResourceOption) (*PrefixListLocalRulestack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocalRulestackName == nil {
		return nil, errors.New("invalid value for required argument 'LocalRulestackName'")
	}
	if args.PrefixList == nil {
		return nil, errors.New("invalid value for required argument 'PrefixList'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cloudngfw:PrefixListLocalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829:PrefixListLocalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901:PrefixListLocalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901preview:PrefixListLocalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20231010preview:PrefixListLocalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240119preview:PrefixListLocalRulestack"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240207preview:PrefixListLocalRulestack"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PrefixListLocalRulestack
	err := ctx.RegisterResource("azure-native:cloudngfw/v20220829preview:PrefixListLocalRulestack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrefixListLocalRulestack gets an existing PrefixListLocalRulestack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrefixListLocalRulestack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrefixListLocalRulestackState, opts ...pulumi.ResourceOption) (*PrefixListLocalRulestack, error) {
	var resource PrefixListLocalRulestack
	err := ctx.ReadResource("azure-native:cloudngfw/v20220829preview:PrefixListLocalRulestack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrefixListLocalRulestack resources.
type prefixListLocalRulestackState struct {
}

type PrefixListLocalRulestackState struct {
}

func (PrefixListLocalRulestackState) ElementType() reflect.Type {
	return reflect.TypeOf((*prefixListLocalRulestackState)(nil)).Elem()
}

type prefixListLocalRulestackArgs struct {
	// comment for this object
	AuditComment *string `pulumi:"auditComment"`
	// prefix description
	Description *string `pulumi:"description"`
	// LocalRulestack resource name
	LocalRulestackName string `pulumi:"localRulestackName"`
	// Local Rule priority
	Name *string `pulumi:"name"`
	// prefix list
	PrefixList []string `pulumi:"prefixList"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a PrefixListLocalRulestack resource.
type PrefixListLocalRulestackArgs struct {
	// comment for this object
	AuditComment pulumi.StringPtrInput
	// prefix description
	Description pulumi.StringPtrInput
	// LocalRulestack resource name
	LocalRulestackName pulumi.StringInput
	// Local Rule priority
	Name pulumi.StringPtrInput
	// prefix list
	PrefixList pulumi.StringArrayInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (PrefixListLocalRulestackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*prefixListLocalRulestackArgs)(nil)).Elem()
}

type PrefixListLocalRulestackInput interface {
	pulumi.Input

	ToPrefixListLocalRulestackOutput() PrefixListLocalRulestackOutput
	ToPrefixListLocalRulestackOutputWithContext(ctx context.Context) PrefixListLocalRulestackOutput
}

func (*PrefixListLocalRulestack) ElementType() reflect.Type {
	return reflect.TypeOf((**PrefixListLocalRulestack)(nil)).Elem()
}

func (i *PrefixListLocalRulestack) ToPrefixListLocalRulestackOutput() PrefixListLocalRulestackOutput {
	return i.ToPrefixListLocalRulestackOutputWithContext(context.Background())
}

func (i *PrefixListLocalRulestack) ToPrefixListLocalRulestackOutputWithContext(ctx context.Context) PrefixListLocalRulestackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListLocalRulestackOutput)
}

type PrefixListLocalRulestackOutput struct{ *pulumi.OutputState }

func (PrefixListLocalRulestackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrefixListLocalRulestack)(nil)).Elem()
}

func (o PrefixListLocalRulestackOutput) ToPrefixListLocalRulestackOutput() PrefixListLocalRulestackOutput {
	return o
}

func (o PrefixListLocalRulestackOutput) ToPrefixListLocalRulestackOutputWithContext(ctx context.Context) PrefixListLocalRulestackOutput {
	return o
}

// comment for this object
func (o PrefixListLocalRulestackOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// prefix description
func (o PrefixListLocalRulestackOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// etag info
func (o PrefixListLocalRulestackOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o PrefixListLocalRulestackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// prefix list
func (o PrefixListLocalRulestackOutput) PrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringArrayOutput { return v.PrefixList }).(pulumi.StringArrayOutput)
}

// Provisioning state of the resource.
func (o PrefixListLocalRulestackOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PrefixListLocalRulestackOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrefixListLocalRulestackOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PrefixListLocalRulestack) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PrefixListLocalRulestackOutput{})
}
