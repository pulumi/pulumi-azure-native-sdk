// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231010preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// rule action
type ActionEnum string

const (
	ActionEnumAllow           = ActionEnum("Allow")
	ActionEnumDenySilent      = ActionEnum("DenySilent")
	ActionEnumDenyResetServer = ActionEnum("DenyResetServer")
	ActionEnumDenyResetBoth   = ActionEnum("DenyResetBoth")
)

func (ActionEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionEnum)(nil)).Elem()
}

func (e ActionEnum) ToActionEnumOutput() ActionEnumOutput {
	return pulumi.ToOutput(e).(ActionEnumOutput)
}

func (e ActionEnum) ToActionEnumOutputWithContext(ctx context.Context) ActionEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActionEnumOutput)
}

func (e ActionEnum) ToActionEnumPtrOutput() ActionEnumPtrOutput {
	return e.ToActionEnumPtrOutputWithContext(context.Background())
}

func (e ActionEnum) ToActionEnumPtrOutputWithContext(ctx context.Context) ActionEnumPtrOutput {
	return ActionEnum(e).ToActionEnumOutputWithContext(ctx).ToActionEnumPtrOutputWithContext(ctx)
}

func (e ActionEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActionEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActionEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ActionEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActionEnumOutput struct{ *pulumi.OutputState }

func (ActionEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionEnum)(nil)).Elem()
}

func (o ActionEnumOutput) ToActionEnumOutput() ActionEnumOutput {
	return o
}

func (o ActionEnumOutput) ToActionEnumOutputWithContext(ctx context.Context) ActionEnumOutput {
	return o
}

func (o ActionEnumOutput) ToActionEnumPtrOutput() ActionEnumPtrOutput {
	return o.ToActionEnumPtrOutputWithContext(context.Background())
}

func (o ActionEnumOutput) ToActionEnumPtrOutputWithContext(ctx context.Context) ActionEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionEnum) *ActionEnum {
		return &v
	}).(ActionEnumPtrOutput)
}

func (o ActionEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionEnumPtrOutput struct{ *pulumi.OutputState }

func (ActionEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionEnum)(nil)).Elem()
}

func (o ActionEnumPtrOutput) ToActionEnumPtrOutput() ActionEnumPtrOutput {
	return o
}

func (o ActionEnumPtrOutput) ToActionEnumPtrOutputWithContext(ctx context.Context) ActionEnumPtrOutput {
	return o
}

func (o ActionEnumPtrOutput) Elem() ActionEnumOutput {
	return o.ApplyT(func(v *ActionEnum) ActionEnum {
		if v != nil {
			return *v
		}
		var ret ActionEnum
		return ret
	}).(ActionEnumOutput)
}

func (o ActionEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActionEnumInput is an input type that accepts values of the ActionEnum enum
// A concrete instance of `ActionEnumInput` can be one of the following:
//
//	ActionEnumAllow
//	ActionEnumDenySilent
//	ActionEnumDenyResetServer
//	ActionEnumDenyResetBoth
type ActionEnumInput interface {
	pulumi.Input

	ToActionEnumOutput() ActionEnumOutput
	ToActionEnumOutputWithContext(context.Context) ActionEnumOutput
}

var actionEnumPtrType = reflect.TypeOf((**ActionEnum)(nil)).Elem()

type ActionEnumPtrInput interface {
	pulumi.Input

	ToActionEnumPtrOutput() ActionEnumPtrOutput
	ToActionEnumPtrOutputWithContext(context.Context) ActionEnumPtrOutput
}

type actionEnumPtr string

func ActionEnumPtr(v string) ActionEnumPtrInput {
	return (*actionEnumPtr)(&v)
}

func (*actionEnumPtr) ElementType() reflect.Type {
	return actionEnumPtrType
}

func (in *actionEnumPtr) ToActionEnumPtrOutput() ActionEnumPtrOutput {
	return pulumi.ToOutput(in).(ActionEnumPtrOutput)
}

func (in *actionEnumPtr) ToActionEnumPtrOutputWithContext(ctx context.Context) ActionEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActionEnumPtrOutput)
}

// different billing cycles like MONTHLY/WEEKLY
type BillingCycle string

const (
	BillingCycleWEEKLY  = BillingCycle("WEEKLY")
	BillingCycleMONTHLY = BillingCycle("MONTHLY")
)

func (BillingCycle) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingCycle)(nil)).Elem()
}

func (e BillingCycle) ToBillingCycleOutput() BillingCycleOutput {
	return pulumi.ToOutput(e).(BillingCycleOutput)
}

func (e BillingCycle) ToBillingCycleOutputWithContext(ctx context.Context) BillingCycleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BillingCycleOutput)
}

func (e BillingCycle) ToBillingCyclePtrOutput() BillingCyclePtrOutput {
	return e.ToBillingCyclePtrOutputWithContext(context.Background())
}

func (e BillingCycle) ToBillingCyclePtrOutputWithContext(ctx context.Context) BillingCyclePtrOutput {
	return BillingCycle(e).ToBillingCycleOutputWithContext(ctx).ToBillingCyclePtrOutputWithContext(ctx)
}

func (e BillingCycle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingCycle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingCycle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BillingCycle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BillingCycleOutput struct{ *pulumi.OutputState }

func (BillingCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingCycle)(nil)).Elem()
}

func (o BillingCycleOutput) ToBillingCycleOutput() BillingCycleOutput {
	return o
}

func (o BillingCycleOutput) ToBillingCycleOutputWithContext(ctx context.Context) BillingCycleOutput {
	return o
}

func (o BillingCycleOutput) ToBillingCyclePtrOutput() BillingCyclePtrOutput {
	return o.ToBillingCyclePtrOutputWithContext(context.Background())
}

func (o BillingCycleOutput) ToBillingCyclePtrOutputWithContext(ctx context.Context) BillingCyclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingCycle) *BillingCycle {
		return &v
	}).(BillingCyclePtrOutput)
}

func (o BillingCycleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BillingCycleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingCycle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BillingCycleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingCycleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingCycle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BillingCyclePtrOutput struct{ *pulumi.OutputState }

func (BillingCyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingCycle)(nil)).Elem()
}

func (o BillingCyclePtrOutput) ToBillingCyclePtrOutput() BillingCyclePtrOutput {
	return o
}

func (o BillingCyclePtrOutput) ToBillingCyclePtrOutputWithContext(ctx context.Context) BillingCyclePtrOutput {
	return o
}

func (o BillingCyclePtrOutput) Elem() BillingCycleOutput {
	return o.ApplyT(func(v *BillingCycle) BillingCycle {
		if v != nil {
			return *v
		}
		var ret BillingCycle
		return ret
	}).(BillingCycleOutput)
}

func (o BillingCyclePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingCyclePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BillingCycle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BillingCycleInput is an input type that accepts values of the BillingCycle enum
// A concrete instance of `BillingCycleInput` can be one of the following:
//
//	BillingCycleWEEKLY
//	BillingCycleMONTHLY
type BillingCycleInput interface {
	pulumi.Input

	ToBillingCycleOutput() BillingCycleOutput
	ToBillingCycleOutputWithContext(context.Context) BillingCycleOutput
}

var billingCyclePtrType = reflect.TypeOf((**BillingCycle)(nil)).Elem()

type BillingCyclePtrInput interface {
	pulumi.Input

	ToBillingCyclePtrOutput() BillingCyclePtrOutput
	ToBillingCyclePtrOutputWithContext(context.Context) BillingCyclePtrOutput
}

type billingCyclePtr string

func BillingCyclePtr(v string) BillingCyclePtrInput {
	return (*billingCyclePtr)(&v)
}

func (*billingCyclePtr) ElementType() reflect.Type {
	return billingCyclePtrType
}

func (in *billingCyclePtr) ToBillingCyclePtrOutput() BillingCyclePtrOutput {
	return pulumi.ToOutput(in).(BillingCyclePtrOutput)
}

func (in *billingCyclePtr) ToBillingCyclePtrOutputWithContext(ctx context.Context) BillingCyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BillingCyclePtrOutput)
}

// cidr should not be 'any'
type BooleanEnum string

const (
	BooleanEnumTRUE  = BooleanEnum("TRUE")
	BooleanEnumFALSE = BooleanEnum("FALSE")
)

func (BooleanEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanEnum)(nil)).Elem()
}

func (e BooleanEnum) ToBooleanEnumOutput() BooleanEnumOutput {
	return pulumi.ToOutput(e).(BooleanEnumOutput)
}

func (e BooleanEnum) ToBooleanEnumOutputWithContext(ctx context.Context) BooleanEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BooleanEnumOutput)
}

func (e BooleanEnum) ToBooleanEnumPtrOutput() BooleanEnumPtrOutput {
	return e.ToBooleanEnumPtrOutputWithContext(context.Background())
}

func (e BooleanEnum) ToBooleanEnumPtrOutputWithContext(ctx context.Context) BooleanEnumPtrOutput {
	return BooleanEnum(e).ToBooleanEnumOutputWithContext(ctx).ToBooleanEnumPtrOutputWithContext(ctx)
}

func (e BooleanEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BooleanEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BooleanEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BooleanEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BooleanEnumOutput struct{ *pulumi.OutputState }

func (BooleanEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanEnum)(nil)).Elem()
}

func (o BooleanEnumOutput) ToBooleanEnumOutput() BooleanEnumOutput {
	return o
}

func (o BooleanEnumOutput) ToBooleanEnumOutputWithContext(ctx context.Context) BooleanEnumOutput {
	return o
}

func (o BooleanEnumOutput) ToBooleanEnumPtrOutput() BooleanEnumPtrOutput {
	return o.ToBooleanEnumPtrOutputWithContext(context.Background())
}

func (o BooleanEnumOutput) ToBooleanEnumPtrOutputWithContext(ctx context.Context) BooleanEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BooleanEnum) *BooleanEnum {
		return &v
	}).(BooleanEnumPtrOutput)
}

func (o BooleanEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BooleanEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BooleanEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BooleanEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BooleanEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BooleanEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BooleanEnumPtrOutput struct{ *pulumi.OutputState }

func (BooleanEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BooleanEnum)(nil)).Elem()
}

func (o BooleanEnumPtrOutput) ToBooleanEnumPtrOutput() BooleanEnumPtrOutput {
	return o
}

func (o BooleanEnumPtrOutput) ToBooleanEnumPtrOutputWithContext(ctx context.Context) BooleanEnumPtrOutput {
	return o
}

func (o BooleanEnumPtrOutput) Elem() BooleanEnumOutput {
	return o.ApplyT(func(v *BooleanEnum) BooleanEnum {
		if v != nil {
			return *v
		}
		var ret BooleanEnum
		return ret
	}).(BooleanEnumOutput)
}

func (o BooleanEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BooleanEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BooleanEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BooleanEnumInput is an input type that accepts values of the BooleanEnum enum
// A concrete instance of `BooleanEnumInput` can be one of the following:
//
//	BooleanEnumTRUE
//	BooleanEnumFALSE
type BooleanEnumInput interface {
	pulumi.Input

	ToBooleanEnumOutput() BooleanEnumOutput
	ToBooleanEnumOutputWithContext(context.Context) BooleanEnumOutput
}

var booleanEnumPtrType = reflect.TypeOf((**BooleanEnum)(nil)).Elem()

type BooleanEnumPtrInput interface {
	pulumi.Input

	ToBooleanEnumPtrOutput() BooleanEnumPtrOutput
	ToBooleanEnumPtrOutputWithContext(context.Context) BooleanEnumPtrOutput
}

type booleanEnumPtr string

func BooleanEnumPtr(v string) BooleanEnumPtrInput {
	return (*booleanEnumPtr)(&v)
}

func (*booleanEnumPtr) ElementType() reflect.Type {
	return booleanEnumPtrType
}

func (in *booleanEnumPtr) ToBooleanEnumPtrOutput() BooleanEnumPtrOutput {
	return pulumi.ToOutput(in).(BooleanEnumPtrOutput)
}

func (in *booleanEnumPtr) ToBooleanEnumPtrOutputWithContext(ctx context.Context) BooleanEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BooleanEnumPtrOutput)
}

// Enable DNS proxy, disabled by default
type DNSProxy string

const (
	DNSProxyDISABLED = DNSProxy("DISABLED")
	DNSProxyENABLED  = DNSProxy("ENABLED")
)

func (DNSProxy) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSProxy)(nil)).Elem()
}

func (e DNSProxy) ToDNSProxyOutput() DNSProxyOutput {
	return pulumi.ToOutput(e).(DNSProxyOutput)
}

func (e DNSProxy) ToDNSProxyOutputWithContext(ctx context.Context) DNSProxyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DNSProxyOutput)
}

func (e DNSProxy) ToDNSProxyPtrOutput() DNSProxyPtrOutput {
	return e.ToDNSProxyPtrOutputWithContext(context.Background())
}

func (e DNSProxy) ToDNSProxyPtrOutputWithContext(ctx context.Context) DNSProxyPtrOutput {
	return DNSProxy(e).ToDNSProxyOutputWithContext(ctx).ToDNSProxyPtrOutputWithContext(ctx)
}

func (e DNSProxy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DNSProxy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DNSProxy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DNSProxy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DNSProxyOutput struct{ *pulumi.OutputState }

func (DNSProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSProxy)(nil)).Elem()
}

func (o DNSProxyOutput) ToDNSProxyOutput() DNSProxyOutput {
	return o
}

func (o DNSProxyOutput) ToDNSProxyOutputWithContext(ctx context.Context) DNSProxyOutput {
	return o
}

func (o DNSProxyOutput) ToDNSProxyPtrOutput() DNSProxyPtrOutput {
	return o.ToDNSProxyPtrOutputWithContext(context.Background())
}

func (o DNSProxyOutput) ToDNSProxyPtrOutputWithContext(ctx context.Context) DNSProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DNSProxy) *DNSProxy {
		return &v
	}).(DNSProxyPtrOutput)
}

func (o DNSProxyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DNSProxyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DNSProxy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DNSProxyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DNSProxyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DNSProxy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DNSProxyPtrOutput struct{ *pulumi.OutputState }

func (DNSProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DNSProxy)(nil)).Elem()
}

func (o DNSProxyPtrOutput) ToDNSProxyPtrOutput() DNSProxyPtrOutput {
	return o
}

func (o DNSProxyPtrOutput) ToDNSProxyPtrOutputWithContext(ctx context.Context) DNSProxyPtrOutput {
	return o
}

func (o DNSProxyPtrOutput) Elem() DNSProxyOutput {
	return o.ApplyT(func(v *DNSProxy) DNSProxy {
		if v != nil {
			return *v
		}
		var ret DNSProxy
		return ret
	}).(DNSProxyOutput)
}

func (o DNSProxyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DNSProxyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DNSProxy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DNSProxyInput is an input type that accepts values of the DNSProxy enum
// A concrete instance of `DNSProxyInput` can be one of the following:
//
//	DNSProxyDISABLED
//	DNSProxyENABLED
type DNSProxyInput interface {
	pulumi.Input

	ToDNSProxyOutput() DNSProxyOutput
	ToDNSProxyOutputWithContext(context.Context) DNSProxyOutput
}

var dnsproxyPtrType = reflect.TypeOf((**DNSProxy)(nil)).Elem()

type DNSProxyPtrInput interface {
	pulumi.Input

	ToDNSProxyPtrOutput() DNSProxyPtrOutput
	ToDNSProxyPtrOutputWithContext(context.Context) DNSProxyPtrOutput
}

type dnsproxyPtr string

func DNSProxyPtr(v string) DNSProxyPtrInput {
	return (*dnsproxyPtr)(&v)
}

func (*dnsproxyPtr) ElementType() reflect.Type {
	return dnsproxyPtrType
}

func (in *dnsproxyPtr) ToDNSProxyPtrOutput() DNSProxyPtrOutput {
	return pulumi.ToOutput(in).(DNSProxyPtrOutput)
}

func (in *dnsproxyPtr) ToDNSProxyPtrOutputWithContext(ctx context.Context) DNSProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DNSProxyPtrOutput)
}

// enable or disable decryption
type DecryptionRuleTypeEnum string

const (
	DecryptionRuleTypeEnumSSLOutboundInspection = DecryptionRuleTypeEnum("SSLOutboundInspection")
	DecryptionRuleTypeEnumSSLInboundInspection  = DecryptionRuleTypeEnum("SSLInboundInspection")
	DecryptionRuleTypeEnumNone                  = DecryptionRuleTypeEnum("None")
)

func (DecryptionRuleTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*DecryptionRuleTypeEnum)(nil)).Elem()
}

func (e DecryptionRuleTypeEnum) ToDecryptionRuleTypeEnumOutput() DecryptionRuleTypeEnumOutput {
	return pulumi.ToOutput(e).(DecryptionRuleTypeEnumOutput)
}

func (e DecryptionRuleTypeEnum) ToDecryptionRuleTypeEnumOutputWithContext(ctx context.Context) DecryptionRuleTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DecryptionRuleTypeEnumOutput)
}

func (e DecryptionRuleTypeEnum) ToDecryptionRuleTypeEnumPtrOutput() DecryptionRuleTypeEnumPtrOutput {
	return e.ToDecryptionRuleTypeEnumPtrOutputWithContext(context.Background())
}

func (e DecryptionRuleTypeEnum) ToDecryptionRuleTypeEnumPtrOutputWithContext(ctx context.Context) DecryptionRuleTypeEnumPtrOutput {
	return DecryptionRuleTypeEnum(e).ToDecryptionRuleTypeEnumOutputWithContext(ctx).ToDecryptionRuleTypeEnumPtrOutputWithContext(ctx)
}

func (e DecryptionRuleTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DecryptionRuleTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DecryptionRuleTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DecryptionRuleTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DecryptionRuleTypeEnumOutput struct{ *pulumi.OutputState }

func (DecryptionRuleTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DecryptionRuleTypeEnum)(nil)).Elem()
}

func (o DecryptionRuleTypeEnumOutput) ToDecryptionRuleTypeEnumOutput() DecryptionRuleTypeEnumOutput {
	return o
}

func (o DecryptionRuleTypeEnumOutput) ToDecryptionRuleTypeEnumOutputWithContext(ctx context.Context) DecryptionRuleTypeEnumOutput {
	return o
}

func (o DecryptionRuleTypeEnumOutput) ToDecryptionRuleTypeEnumPtrOutput() DecryptionRuleTypeEnumPtrOutput {
	return o.ToDecryptionRuleTypeEnumPtrOutputWithContext(context.Background())
}

func (o DecryptionRuleTypeEnumOutput) ToDecryptionRuleTypeEnumPtrOutputWithContext(ctx context.Context) DecryptionRuleTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DecryptionRuleTypeEnum) *DecryptionRuleTypeEnum {
		return &v
	}).(DecryptionRuleTypeEnumPtrOutput)
}

func (o DecryptionRuleTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DecryptionRuleTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DecryptionRuleTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DecryptionRuleTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DecryptionRuleTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DecryptionRuleTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DecryptionRuleTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (DecryptionRuleTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DecryptionRuleTypeEnum)(nil)).Elem()
}

func (o DecryptionRuleTypeEnumPtrOutput) ToDecryptionRuleTypeEnumPtrOutput() DecryptionRuleTypeEnumPtrOutput {
	return o
}

func (o DecryptionRuleTypeEnumPtrOutput) ToDecryptionRuleTypeEnumPtrOutputWithContext(ctx context.Context) DecryptionRuleTypeEnumPtrOutput {
	return o
}

func (o DecryptionRuleTypeEnumPtrOutput) Elem() DecryptionRuleTypeEnumOutput {
	return o.ApplyT(func(v *DecryptionRuleTypeEnum) DecryptionRuleTypeEnum {
		if v != nil {
			return *v
		}
		var ret DecryptionRuleTypeEnum
		return ret
	}).(DecryptionRuleTypeEnumOutput)
}

func (o DecryptionRuleTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DecryptionRuleTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DecryptionRuleTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DecryptionRuleTypeEnumInput is an input type that accepts values of the DecryptionRuleTypeEnum enum
// A concrete instance of `DecryptionRuleTypeEnumInput` can be one of the following:
//
//	DecryptionRuleTypeEnumSSLOutboundInspection
//	DecryptionRuleTypeEnumSSLInboundInspection
//	DecryptionRuleTypeEnumNone
type DecryptionRuleTypeEnumInput interface {
	pulumi.Input

	ToDecryptionRuleTypeEnumOutput() DecryptionRuleTypeEnumOutput
	ToDecryptionRuleTypeEnumOutputWithContext(context.Context) DecryptionRuleTypeEnumOutput
}

var decryptionRuleTypeEnumPtrType = reflect.TypeOf((**DecryptionRuleTypeEnum)(nil)).Elem()

type DecryptionRuleTypeEnumPtrInput interface {
	pulumi.Input

	ToDecryptionRuleTypeEnumPtrOutput() DecryptionRuleTypeEnumPtrOutput
	ToDecryptionRuleTypeEnumPtrOutputWithContext(context.Context) DecryptionRuleTypeEnumPtrOutput
}

type decryptionRuleTypeEnumPtr string

func DecryptionRuleTypeEnumPtr(v string) DecryptionRuleTypeEnumPtrInput {
	return (*decryptionRuleTypeEnumPtr)(&v)
}

func (*decryptionRuleTypeEnumPtr) ElementType() reflect.Type {
	return decryptionRuleTypeEnumPtrType
}

func (in *decryptionRuleTypeEnumPtr) ToDecryptionRuleTypeEnumPtrOutput() DecryptionRuleTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(DecryptionRuleTypeEnumPtrOutput)
}

func (in *decryptionRuleTypeEnumPtr) ToDecryptionRuleTypeEnumPtrOutputWithContext(ctx context.Context) DecryptionRuleTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DecryptionRuleTypeEnumPtrOutput)
}

// Mode for default rules creation
type DefaultMode string

const (
	DefaultModeIPS      = DefaultMode("IPS")
	DefaultModeFIREWALL = DefaultMode("FIREWALL")
	DefaultModeNONE     = DefaultMode("NONE")
)

func (DefaultMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultMode)(nil)).Elem()
}

func (e DefaultMode) ToDefaultModeOutput() DefaultModeOutput {
	return pulumi.ToOutput(e).(DefaultModeOutput)
}

func (e DefaultMode) ToDefaultModeOutputWithContext(ctx context.Context) DefaultModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DefaultModeOutput)
}

func (e DefaultMode) ToDefaultModePtrOutput() DefaultModePtrOutput {
	return e.ToDefaultModePtrOutputWithContext(context.Background())
}

func (e DefaultMode) ToDefaultModePtrOutputWithContext(ctx context.Context) DefaultModePtrOutput {
	return DefaultMode(e).ToDefaultModeOutputWithContext(ctx).ToDefaultModePtrOutputWithContext(ctx)
}

func (e DefaultMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DefaultMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DefaultModeOutput struct{ *pulumi.OutputState }

func (DefaultModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultMode)(nil)).Elem()
}

func (o DefaultModeOutput) ToDefaultModeOutput() DefaultModeOutput {
	return o
}

func (o DefaultModeOutput) ToDefaultModeOutputWithContext(ctx context.Context) DefaultModeOutput {
	return o
}

func (o DefaultModeOutput) ToDefaultModePtrOutput() DefaultModePtrOutput {
	return o.ToDefaultModePtrOutputWithContext(context.Background())
}

func (o DefaultModeOutput) ToDefaultModePtrOutputWithContext(ctx context.Context) DefaultModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefaultMode) *DefaultMode {
		return &v
	}).(DefaultModePtrOutput)
}

func (o DefaultModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DefaultModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DefaultModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DefaultModePtrOutput struct{ *pulumi.OutputState }

func (DefaultModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultMode)(nil)).Elem()
}

func (o DefaultModePtrOutput) ToDefaultModePtrOutput() DefaultModePtrOutput {
	return o
}

func (o DefaultModePtrOutput) ToDefaultModePtrOutputWithContext(ctx context.Context) DefaultModePtrOutput {
	return o
}

func (o DefaultModePtrOutput) Elem() DefaultModeOutput {
	return o.ApplyT(func(v *DefaultMode) DefaultMode {
		if v != nil {
			return *v
		}
		var ret DefaultMode
		return ret
	}).(DefaultModeOutput)
}

func (o DefaultModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DefaultMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DefaultModeInput is an input type that accepts values of the DefaultMode enum
// A concrete instance of `DefaultModeInput` can be one of the following:
//
//	DefaultModeIPS
//	DefaultModeFIREWALL
//	DefaultModeNONE
type DefaultModeInput interface {
	pulumi.Input

	ToDefaultModeOutput() DefaultModeOutput
	ToDefaultModeOutputWithContext(context.Context) DefaultModeOutput
}

var defaultModePtrType = reflect.TypeOf((**DefaultMode)(nil)).Elem()

type DefaultModePtrInput interface {
	pulumi.Input

	ToDefaultModePtrOutput() DefaultModePtrOutput
	ToDefaultModePtrOutputWithContext(context.Context) DefaultModePtrOutput
}

type defaultModePtr string

func DefaultModePtr(v string) DefaultModePtrInput {
	return (*defaultModePtr)(&v)
}

func (*defaultModePtr) ElementType() reflect.Type {
	return defaultModePtrType
}

func (in *defaultModePtr) ToDefaultModePtrOutput() DefaultModePtrOutput {
	return pulumi.ToOutput(in).(DefaultModePtrOutput)
}

func (in *defaultModePtr) ToDefaultModePtrOutputWithContext(ctx context.Context) DefaultModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DefaultModePtrOutput)
}

// Enable egress NAT, enabled by default
type EgressNat string

const (
	EgressNatDISABLED = EgressNat("DISABLED")
	EgressNatENABLED  = EgressNat("ENABLED")
)

func (EgressNat) ElementType() reflect.Type {
	return reflect.TypeOf((*EgressNat)(nil)).Elem()
}

func (e EgressNat) ToEgressNatOutput() EgressNatOutput {
	return pulumi.ToOutput(e).(EgressNatOutput)
}

func (e EgressNat) ToEgressNatOutputWithContext(ctx context.Context) EgressNatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EgressNatOutput)
}

func (e EgressNat) ToEgressNatPtrOutput() EgressNatPtrOutput {
	return e.ToEgressNatPtrOutputWithContext(context.Background())
}

func (e EgressNat) ToEgressNatPtrOutputWithContext(ctx context.Context) EgressNatPtrOutput {
	return EgressNat(e).ToEgressNatOutputWithContext(ctx).ToEgressNatPtrOutputWithContext(ctx)
}

func (e EgressNat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EgressNat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EgressNat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EgressNat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EgressNatOutput struct{ *pulumi.OutputState }

func (EgressNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EgressNat)(nil)).Elem()
}

func (o EgressNatOutput) ToEgressNatOutput() EgressNatOutput {
	return o
}

func (o EgressNatOutput) ToEgressNatOutputWithContext(ctx context.Context) EgressNatOutput {
	return o
}

func (o EgressNatOutput) ToEgressNatPtrOutput() EgressNatPtrOutput {
	return o.ToEgressNatPtrOutputWithContext(context.Background())
}

func (o EgressNatOutput) ToEgressNatPtrOutputWithContext(ctx context.Context) EgressNatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EgressNat) *EgressNat {
		return &v
	}).(EgressNatPtrOutput)
}

func (o EgressNatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EgressNatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EgressNat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EgressNatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EgressNatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EgressNat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EgressNatPtrOutput struct{ *pulumi.OutputState }

func (EgressNatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressNat)(nil)).Elem()
}

func (o EgressNatPtrOutput) ToEgressNatPtrOutput() EgressNatPtrOutput {
	return o
}

func (o EgressNatPtrOutput) ToEgressNatPtrOutputWithContext(ctx context.Context) EgressNatPtrOutput {
	return o
}

func (o EgressNatPtrOutput) Elem() EgressNatOutput {
	return o.ApplyT(func(v *EgressNat) EgressNat {
		if v != nil {
			return *v
		}
		var ret EgressNat
		return ret
	}).(EgressNatOutput)
}

func (o EgressNatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EgressNatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EgressNat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EgressNatInput is an input type that accepts values of the EgressNat enum
// A concrete instance of `EgressNatInput` can be one of the following:
//
//	EgressNatDISABLED
//	EgressNatENABLED
type EgressNatInput interface {
	pulumi.Input

	ToEgressNatOutput() EgressNatOutput
	ToEgressNatOutputWithContext(context.Context) EgressNatOutput
}

var egressNatPtrType = reflect.TypeOf((**EgressNat)(nil)).Elem()

type EgressNatPtrInput interface {
	pulumi.Input

	ToEgressNatPtrOutput() EgressNatPtrOutput
	ToEgressNatPtrOutputWithContext(context.Context) EgressNatPtrOutput
}

type egressNatPtr string

func EgressNatPtr(v string) EgressNatPtrInput {
	return (*egressNatPtr)(&v)
}

func (*egressNatPtr) ElementType() reflect.Type {
	return egressNatPtrType
}

func (in *egressNatPtr) ToEgressNatPtrOutput() EgressNatPtrOutput {
	return pulumi.ToOutput(in).(EgressNatPtrOutput)
}

func (in *egressNatPtr) ToEgressNatPtrOutputWithContext(ctx context.Context) EgressNatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EgressNatPtrOutput)
}

// Enabled DNS proxy type, disabled by default
type EnabledDNSType string

const (
	EnabledDNSTypeCUSTOM = EnabledDNSType("CUSTOM")
	EnabledDNSTypeAZURE  = EnabledDNSType("AZURE")
)

func (EnabledDNSType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledDNSType)(nil)).Elem()
}

func (e EnabledDNSType) ToEnabledDNSTypeOutput() EnabledDNSTypeOutput {
	return pulumi.ToOutput(e).(EnabledDNSTypeOutput)
}

func (e EnabledDNSType) ToEnabledDNSTypeOutputWithContext(ctx context.Context) EnabledDNSTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnabledDNSTypeOutput)
}

func (e EnabledDNSType) ToEnabledDNSTypePtrOutput() EnabledDNSTypePtrOutput {
	return e.ToEnabledDNSTypePtrOutputWithContext(context.Background())
}

func (e EnabledDNSType) ToEnabledDNSTypePtrOutputWithContext(ctx context.Context) EnabledDNSTypePtrOutput {
	return EnabledDNSType(e).ToEnabledDNSTypeOutputWithContext(ctx).ToEnabledDNSTypePtrOutputWithContext(ctx)
}

func (e EnabledDNSType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnabledDNSType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnabledDNSType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnabledDNSType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnabledDNSTypeOutput struct{ *pulumi.OutputState }

func (EnabledDNSTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledDNSType)(nil)).Elem()
}

func (o EnabledDNSTypeOutput) ToEnabledDNSTypeOutput() EnabledDNSTypeOutput {
	return o
}

func (o EnabledDNSTypeOutput) ToEnabledDNSTypeOutputWithContext(ctx context.Context) EnabledDNSTypeOutput {
	return o
}

func (o EnabledDNSTypeOutput) ToEnabledDNSTypePtrOutput() EnabledDNSTypePtrOutput {
	return o.ToEnabledDNSTypePtrOutputWithContext(context.Background())
}

func (o EnabledDNSTypeOutput) ToEnabledDNSTypePtrOutputWithContext(ctx context.Context) EnabledDNSTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnabledDNSType) *EnabledDNSType {
		return &v
	}).(EnabledDNSTypePtrOutput)
}

func (o EnabledDNSTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnabledDNSTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnabledDNSType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnabledDNSTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnabledDNSTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnabledDNSType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnabledDNSTypePtrOutput struct{ *pulumi.OutputState }

func (EnabledDNSTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledDNSType)(nil)).Elem()
}

func (o EnabledDNSTypePtrOutput) ToEnabledDNSTypePtrOutput() EnabledDNSTypePtrOutput {
	return o
}

func (o EnabledDNSTypePtrOutput) ToEnabledDNSTypePtrOutputWithContext(ctx context.Context) EnabledDNSTypePtrOutput {
	return o
}

func (o EnabledDNSTypePtrOutput) Elem() EnabledDNSTypeOutput {
	return o.ApplyT(func(v *EnabledDNSType) EnabledDNSType {
		if v != nil {
			return *v
		}
		var ret EnabledDNSType
		return ret
	}).(EnabledDNSTypeOutput)
}

func (o EnabledDNSTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnabledDNSTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnabledDNSType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnabledDNSTypeInput is an input type that accepts values of the EnabledDNSType enum
// A concrete instance of `EnabledDNSTypeInput` can be one of the following:
//
//	EnabledDNSTypeCUSTOM
//	EnabledDNSTypeAZURE
type EnabledDNSTypeInput interface {
	pulumi.Input

	ToEnabledDNSTypeOutput() EnabledDNSTypeOutput
	ToEnabledDNSTypeOutputWithContext(context.Context) EnabledDNSTypeOutput
}

var enabledDNSTypePtrType = reflect.TypeOf((**EnabledDNSType)(nil)).Elem()

type EnabledDNSTypePtrInput interface {
	pulumi.Input

	ToEnabledDNSTypePtrOutput() EnabledDNSTypePtrOutput
	ToEnabledDNSTypePtrOutputWithContext(context.Context) EnabledDNSTypePtrOutput
}

type enabledDNSTypePtr string

func EnabledDNSTypePtr(v string) EnabledDNSTypePtrInput {
	return (*enabledDNSTypePtr)(&v)
}

func (*enabledDNSTypePtr) ElementType() reflect.Type {
	return enabledDNSTypePtrType
}

func (in *enabledDNSTypePtr) ToEnabledDNSTypePtrOutput() EnabledDNSTypePtrOutput {
	return pulumi.ToOutput(in).(EnabledDNSTypePtrOutput)
}

func (in *enabledDNSTypePtr) ToEnabledDNSTypePtrOutputWithContext(ctx context.Context) EnabledDNSTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnabledDNSTypePtrOutput)
}

// The type of managed identity assigned to this resource.
type ManagedIdentityType string

const (
	ManagedIdentityTypeNone                  = ManagedIdentityType("None")
	ManagedIdentityTypeSystemAssigned        = ManagedIdentityType("SystemAssigned")
	ManagedIdentityTypeUserAssigned          = ManagedIdentityType("UserAssigned")
	ManagedIdentityTypeSystemAndUserAssigned = ManagedIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return e.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return ManagedIdentityType(e).ToManagedIdentityTypeOutputWithContext(ctx).ToManagedIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityType) *ManagedIdentityType {
		return &v
	}).(ManagedIdentityTypePtrOutput)
}

func (o ManagedIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) Elem() ManagedIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedIdentityType) ManagedIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityType
		return ret
	}).(ManagedIdentityTypeOutput)
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedIdentityTypeInput is an input type that accepts values of the ManagedIdentityType enum
// A concrete instance of `ManagedIdentityTypeInput` can be one of the following:
//
//	ManagedIdentityTypeNone
//	ManagedIdentityTypeSystemAssigned
//	ManagedIdentityTypeUserAssigned
//	ManagedIdentityTypeSystemAndUserAssigned
type ManagedIdentityTypeInput interface {
	pulumi.Input

	ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput
	ToManagedIdentityTypeOutputWithContext(context.Context) ManagedIdentityTypeOutput
}

var managedIdentityTypePtrType = reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()

type ManagedIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput
	ToManagedIdentityTypePtrOutputWithContext(context.Context) ManagedIdentityTypePtrOutput
}

type managedIdentityTypePtr string

func ManagedIdentityTypePtr(v string) ManagedIdentityTypePtrInput {
	return (*managedIdentityTypePtr)(&v)
}

func (*managedIdentityTypePtr) ElementType() reflect.Type {
	return managedIdentityTypePtrType
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedIdentityTypePtrOutput)
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedIdentityTypePtrOutput)
}

// Marketplace Subscription Status
type MarketplaceSubscriptionStatus string

const (
	MarketplaceSubscriptionStatusPendingFulfillmentStart = MarketplaceSubscriptionStatus("PendingFulfillmentStart")
	MarketplaceSubscriptionStatusSubscribed              = MarketplaceSubscriptionStatus("Subscribed")
	MarketplaceSubscriptionStatusSuspended               = MarketplaceSubscriptionStatus("Suspended")
	MarketplaceSubscriptionStatusUnsubscribed            = MarketplaceSubscriptionStatus("Unsubscribed")
	MarketplaceSubscriptionStatusNotStarted              = MarketplaceSubscriptionStatus("NotStarted")
	MarketplaceSubscriptionStatusFulfillmentRequested    = MarketplaceSubscriptionStatus("FulfillmentRequested")
)

func (MarketplaceSubscriptionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceSubscriptionStatus)(nil)).Elem()
}

func (e MarketplaceSubscriptionStatus) ToMarketplaceSubscriptionStatusOutput() MarketplaceSubscriptionStatusOutput {
	return pulumi.ToOutput(e).(MarketplaceSubscriptionStatusOutput)
}

func (e MarketplaceSubscriptionStatus) ToMarketplaceSubscriptionStatusOutputWithContext(ctx context.Context) MarketplaceSubscriptionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MarketplaceSubscriptionStatusOutput)
}

func (e MarketplaceSubscriptionStatus) ToMarketplaceSubscriptionStatusPtrOutput() MarketplaceSubscriptionStatusPtrOutput {
	return e.ToMarketplaceSubscriptionStatusPtrOutputWithContext(context.Background())
}

func (e MarketplaceSubscriptionStatus) ToMarketplaceSubscriptionStatusPtrOutputWithContext(ctx context.Context) MarketplaceSubscriptionStatusPtrOutput {
	return MarketplaceSubscriptionStatus(e).ToMarketplaceSubscriptionStatusOutputWithContext(ctx).ToMarketplaceSubscriptionStatusPtrOutputWithContext(ctx)
}

func (e MarketplaceSubscriptionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MarketplaceSubscriptionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MarketplaceSubscriptionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MarketplaceSubscriptionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MarketplaceSubscriptionStatusOutput struct{ *pulumi.OutputState }

func (MarketplaceSubscriptionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceSubscriptionStatus)(nil)).Elem()
}

func (o MarketplaceSubscriptionStatusOutput) ToMarketplaceSubscriptionStatusOutput() MarketplaceSubscriptionStatusOutput {
	return o
}

func (o MarketplaceSubscriptionStatusOutput) ToMarketplaceSubscriptionStatusOutputWithContext(ctx context.Context) MarketplaceSubscriptionStatusOutput {
	return o
}

func (o MarketplaceSubscriptionStatusOutput) ToMarketplaceSubscriptionStatusPtrOutput() MarketplaceSubscriptionStatusPtrOutput {
	return o.ToMarketplaceSubscriptionStatusPtrOutputWithContext(context.Background())
}

func (o MarketplaceSubscriptionStatusOutput) ToMarketplaceSubscriptionStatusPtrOutputWithContext(ctx context.Context) MarketplaceSubscriptionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MarketplaceSubscriptionStatus) *MarketplaceSubscriptionStatus {
		return &v
	}).(MarketplaceSubscriptionStatusPtrOutput)
}

func (o MarketplaceSubscriptionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MarketplaceSubscriptionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MarketplaceSubscriptionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MarketplaceSubscriptionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MarketplaceSubscriptionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MarketplaceSubscriptionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MarketplaceSubscriptionStatusPtrOutput struct{ *pulumi.OutputState }

func (MarketplaceSubscriptionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceSubscriptionStatus)(nil)).Elem()
}

func (o MarketplaceSubscriptionStatusPtrOutput) ToMarketplaceSubscriptionStatusPtrOutput() MarketplaceSubscriptionStatusPtrOutput {
	return o
}

func (o MarketplaceSubscriptionStatusPtrOutput) ToMarketplaceSubscriptionStatusPtrOutputWithContext(ctx context.Context) MarketplaceSubscriptionStatusPtrOutput {
	return o
}

func (o MarketplaceSubscriptionStatusPtrOutput) Elem() MarketplaceSubscriptionStatusOutput {
	return o.ApplyT(func(v *MarketplaceSubscriptionStatus) MarketplaceSubscriptionStatus {
		if v != nil {
			return *v
		}
		var ret MarketplaceSubscriptionStatus
		return ret
	}).(MarketplaceSubscriptionStatusOutput)
}

func (o MarketplaceSubscriptionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MarketplaceSubscriptionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MarketplaceSubscriptionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MarketplaceSubscriptionStatusInput is an input type that accepts values of the MarketplaceSubscriptionStatus enum
// A concrete instance of `MarketplaceSubscriptionStatusInput` can be one of the following:
//
//	MarketplaceSubscriptionStatusPendingFulfillmentStart
//	MarketplaceSubscriptionStatusSubscribed
//	MarketplaceSubscriptionStatusSuspended
//	MarketplaceSubscriptionStatusUnsubscribed
//	MarketplaceSubscriptionStatusNotStarted
//	MarketplaceSubscriptionStatusFulfillmentRequested
type MarketplaceSubscriptionStatusInput interface {
	pulumi.Input

	ToMarketplaceSubscriptionStatusOutput() MarketplaceSubscriptionStatusOutput
	ToMarketplaceSubscriptionStatusOutputWithContext(context.Context) MarketplaceSubscriptionStatusOutput
}

var marketplaceSubscriptionStatusPtrType = reflect.TypeOf((**MarketplaceSubscriptionStatus)(nil)).Elem()

type MarketplaceSubscriptionStatusPtrInput interface {
	pulumi.Input

	ToMarketplaceSubscriptionStatusPtrOutput() MarketplaceSubscriptionStatusPtrOutput
	ToMarketplaceSubscriptionStatusPtrOutputWithContext(context.Context) MarketplaceSubscriptionStatusPtrOutput
}

type marketplaceSubscriptionStatusPtr string

func MarketplaceSubscriptionStatusPtr(v string) MarketplaceSubscriptionStatusPtrInput {
	return (*marketplaceSubscriptionStatusPtr)(&v)
}

func (*marketplaceSubscriptionStatusPtr) ElementType() reflect.Type {
	return marketplaceSubscriptionStatusPtrType
}

func (in *marketplaceSubscriptionStatusPtr) ToMarketplaceSubscriptionStatusPtrOutput() MarketplaceSubscriptionStatusPtrOutput {
	return pulumi.ToOutput(in).(MarketplaceSubscriptionStatusPtrOutput)
}

func (in *marketplaceSubscriptionStatusPtr) ToMarketplaceSubscriptionStatusPtrOutputWithContext(ctx context.Context) MarketplaceSubscriptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MarketplaceSubscriptionStatusPtrOutput)
}

// vnet or vwan, cannot be updated
type NetworkType string

const (
	NetworkTypeVNET = NetworkType("VNET")
	NetworkTypeVWAN = NetworkType("VWAN")
)

func (NetworkType) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkType)(nil)).Elem()
}

func (e NetworkType) ToNetworkTypeOutput() NetworkTypeOutput {
	return pulumi.ToOutput(e).(NetworkTypeOutput)
}

func (e NetworkType) ToNetworkTypeOutputWithContext(ctx context.Context) NetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkTypeOutput)
}

func (e NetworkType) ToNetworkTypePtrOutput() NetworkTypePtrOutput {
	return e.ToNetworkTypePtrOutputWithContext(context.Background())
}

func (e NetworkType) ToNetworkTypePtrOutputWithContext(ctx context.Context) NetworkTypePtrOutput {
	return NetworkType(e).ToNetworkTypeOutputWithContext(ctx).ToNetworkTypePtrOutputWithContext(ctx)
}

func (e NetworkType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkTypeOutput struct{ *pulumi.OutputState }

func (NetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkType)(nil)).Elem()
}

func (o NetworkTypeOutput) ToNetworkTypeOutput() NetworkTypeOutput {
	return o
}

func (o NetworkTypeOutput) ToNetworkTypeOutputWithContext(ctx context.Context) NetworkTypeOutput {
	return o
}

func (o NetworkTypeOutput) ToNetworkTypePtrOutput() NetworkTypePtrOutput {
	return o.ToNetworkTypePtrOutputWithContext(context.Background())
}

func (o NetworkTypeOutput) ToNetworkTypePtrOutputWithContext(ctx context.Context) NetworkTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkType) *NetworkType {
		return &v
	}).(NetworkTypePtrOutput)
}

func (o NetworkTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkType)(nil)).Elem()
}

func (o NetworkTypePtrOutput) ToNetworkTypePtrOutput() NetworkTypePtrOutput {
	return o
}

func (o NetworkTypePtrOutput) ToNetworkTypePtrOutputWithContext(ctx context.Context) NetworkTypePtrOutput {
	return o
}

func (o NetworkTypePtrOutput) Elem() NetworkTypeOutput {
	return o.ApplyT(func(v *NetworkType) NetworkType {
		if v != nil {
			return *v
		}
		var ret NetworkType
		return ret
	}).(NetworkTypeOutput)
}

func (o NetworkTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkTypeInput is an input type that accepts values of the NetworkType enum
// A concrete instance of `NetworkTypeInput` can be one of the following:
//
//	NetworkTypeVNET
//	NetworkTypeVWAN
type NetworkTypeInput interface {
	pulumi.Input

	ToNetworkTypeOutput() NetworkTypeOutput
	ToNetworkTypeOutputWithContext(context.Context) NetworkTypeOutput
}

var networkTypePtrType = reflect.TypeOf((**NetworkType)(nil)).Elem()

type NetworkTypePtrInput interface {
	pulumi.Input

	ToNetworkTypePtrOutput() NetworkTypePtrOutput
	ToNetworkTypePtrOutputWithContext(context.Context) NetworkTypePtrOutput
}

type networkTypePtr string

func NetworkTypePtr(v string) NetworkTypePtrInput {
	return (*networkTypePtr)(&v)
}

func (*networkTypePtr) ElementType() reflect.Type {
	return networkTypePtrType
}

func (in *networkTypePtr) ToNetworkTypePtrOutput() NetworkTypePtrOutput {
	return pulumi.ToOutput(in).(NetworkTypePtrOutput)
}

func (in *networkTypePtr) ToNetworkTypePtrOutputWithContext(ctx context.Context) NetworkTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkTypePtrOutput)
}

// Protocol Type
type ProtocolType string

const (
	ProtocolTypeTCP = ProtocolType("TCP")
	ProtocolTypeUDP = ProtocolType("UDP")
)

func (ProtocolType) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolType)(nil)).Elem()
}

func (e ProtocolType) ToProtocolTypeOutput() ProtocolTypeOutput {
	return pulumi.ToOutput(e).(ProtocolTypeOutput)
}

func (e ProtocolType) ToProtocolTypeOutputWithContext(ctx context.Context) ProtocolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolTypeOutput)
}

func (e ProtocolType) ToProtocolTypePtrOutput() ProtocolTypePtrOutput {
	return e.ToProtocolTypePtrOutputWithContext(context.Background())
}

func (e ProtocolType) ToProtocolTypePtrOutputWithContext(ctx context.Context) ProtocolTypePtrOutput {
	return ProtocolType(e).ToProtocolTypeOutputWithContext(ctx).ToProtocolTypePtrOutputWithContext(ctx)
}

func (e ProtocolType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtocolType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtocolType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProtocolType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolTypeOutput struct{ *pulumi.OutputState }

func (ProtocolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolType)(nil)).Elem()
}

func (o ProtocolTypeOutput) ToProtocolTypeOutput() ProtocolTypeOutput {
	return o
}

func (o ProtocolTypeOutput) ToProtocolTypeOutputWithContext(ctx context.Context) ProtocolTypeOutput {
	return o
}

func (o ProtocolTypeOutput) ToProtocolTypePtrOutput() ProtocolTypePtrOutput {
	return o.ToProtocolTypePtrOutputWithContext(context.Background())
}

func (o ProtocolTypeOutput) ToProtocolTypePtrOutputWithContext(ctx context.Context) ProtocolTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtocolType) *ProtocolType {
		return &v
	}).(ProtocolTypePtrOutput)
}

func (o ProtocolTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtocolType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtocolType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolTypePtrOutput struct{ *pulumi.OutputState }

func (ProtocolTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolType)(nil)).Elem()
}

func (o ProtocolTypePtrOutput) ToProtocolTypePtrOutput() ProtocolTypePtrOutput {
	return o
}

func (o ProtocolTypePtrOutput) ToProtocolTypePtrOutputWithContext(ctx context.Context) ProtocolTypePtrOutput {
	return o
}

func (o ProtocolTypePtrOutput) Elem() ProtocolTypeOutput {
	return o.ApplyT(func(v *ProtocolType) ProtocolType {
		if v != nil {
			return *v
		}
		var ret ProtocolType
		return ret
	}).(ProtocolTypeOutput)
}

func (o ProtocolTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProtocolType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolTypeInput is an input type that accepts values of the ProtocolType enum
// A concrete instance of `ProtocolTypeInput` can be one of the following:
//
//	ProtocolTypeTCP
//	ProtocolTypeUDP
type ProtocolTypeInput interface {
	pulumi.Input

	ToProtocolTypeOutput() ProtocolTypeOutput
	ToProtocolTypeOutputWithContext(context.Context) ProtocolTypeOutput
}

var protocolTypePtrType = reflect.TypeOf((**ProtocolType)(nil)).Elem()

type ProtocolTypePtrInput interface {
	pulumi.Input

	ToProtocolTypePtrOutput() ProtocolTypePtrOutput
	ToProtocolTypePtrOutputWithContext(context.Context) ProtocolTypePtrOutput
}

type protocolTypePtr string

func ProtocolTypePtr(v string) ProtocolTypePtrInput {
	return (*protocolTypePtr)(&v)
}

func (*protocolTypePtr) ElementType() reflect.Type {
	return protocolTypePtrType
}

func (in *protocolTypePtr) ToProtocolTypePtrOutput() ProtocolTypePtrOutput {
	return pulumi.ToOutput(in).(ProtocolTypePtrOutput)
}

func (in *protocolTypePtr) ToProtocolTypePtrOutputWithContext(ctx context.Context) ProtocolTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolTypePtrOutput)
}

// Rulestack Type
type ScopeType string

const (
	ScopeTypeLOCAL  = ScopeType("LOCAL")
	ScopeTypeGLOBAL = ScopeType("GLOBAL")
)

func (ScopeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeType)(nil)).Elem()
}

func (e ScopeType) ToScopeTypeOutput() ScopeTypeOutput {
	return pulumi.ToOutput(e).(ScopeTypeOutput)
}

func (e ScopeType) ToScopeTypeOutputWithContext(ctx context.Context) ScopeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScopeTypeOutput)
}

func (e ScopeType) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return e.ToScopeTypePtrOutputWithContext(context.Background())
}

func (e ScopeType) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return ScopeType(e).ToScopeTypeOutputWithContext(ctx).ToScopeTypePtrOutputWithContext(ctx)
}

func (e ScopeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScopeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScopeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScopeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScopeTypeOutput struct{ *pulumi.OutputState }

func (ScopeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeType)(nil)).Elem()
}

func (o ScopeTypeOutput) ToScopeTypeOutput() ScopeTypeOutput {
	return o
}

func (o ScopeTypeOutput) ToScopeTypeOutputWithContext(ctx context.Context) ScopeTypeOutput {
	return o
}

func (o ScopeTypeOutput) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return o.ToScopeTypePtrOutputWithContext(context.Background())
}

func (o ScopeTypeOutput) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScopeType) *ScopeType {
		return &v
	}).(ScopeTypePtrOutput)
}

func (o ScopeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScopeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScopeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScopeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScopeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScopeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScopeTypePtrOutput struct{ *pulumi.OutputState }

func (ScopeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeType)(nil)).Elem()
}

func (o ScopeTypePtrOutput) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return o
}

func (o ScopeTypePtrOutput) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return o
}

func (o ScopeTypePtrOutput) Elem() ScopeTypeOutput {
	return o.ApplyT(func(v *ScopeType) ScopeType {
		if v != nil {
			return *v
		}
		var ret ScopeType
		return ret
	}).(ScopeTypeOutput)
}

func (o ScopeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScopeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScopeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScopeTypeInput is an input type that accepts values of the ScopeType enum
// A concrete instance of `ScopeTypeInput` can be one of the following:
//
//	ScopeTypeLOCAL
//	ScopeTypeGLOBAL
type ScopeTypeInput interface {
	pulumi.Input

	ToScopeTypeOutput() ScopeTypeOutput
	ToScopeTypeOutputWithContext(context.Context) ScopeTypeOutput
}

var scopeTypePtrType = reflect.TypeOf((**ScopeType)(nil)).Elem()

type ScopeTypePtrInput interface {
	pulumi.Input

	ToScopeTypePtrOutput() ScopeTypePtrOutput
	ToScopeTypePtrOutputWithContext(context.Context) ScopeTypePtrOutput
}

type scopeTypePtr string

func ScopeTypePtr(v string) ScopeTypePtrInput {
	return (*scopeTypePtr)(&v)
}

func (*scopeTypePtr) ElementType() reflect.Type {
	return scopeTypePtrType
}

func (in *scopeTypePtr) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return pulumi.ToOutput(in).(ScopeTypePtrOutput)
}

func (in *scopeTypePtr) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScopeTypePtrOutput)
}

// state of this rule
type StateEnum string

const (
	StateEnumDISABLED = StateEnum("DISABLED")
	StateEnumENABLED  = StateEnum("ENABLED")
)

func (StateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*StateEnum)(nil)).Elem()
}

func (e StateEnum) ToStateEnumOutput() StateEnumOutput {
	return pulumi.ToOutput(e).(StateEnumOutput)
}

func (e StateEnum) ToStateEnumOutputWithContext(ctx context.Context) StateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StateEnumOutput)
}

func (e StateEnum) ToStateEnumPtrOutput() StateEnumPtrOutput {
	return e.ToStateEnumPtrOutputWithContext(context.Background())
}

func (e StateEnum) ToStateEnumPtrOutputWithContext(ctx context.Context) StateEnumPtrOutput {
	return StateEnum(e).ToStateEnumOutputWithContext(ctx).ToStateEnumPtrOutputWithContext(ctx)
}

func (e StateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StateEnumOutput struct{ *pulumi.OutputState }

func (StateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateEnum)(nil)).Elem()
}

func (o StateEnumOutput) ToStateEnumOutput() StateEnumOutput {
	return o
}

func (o StateEnumOutput) ToStateEnumOutputWithContext(ctx context.Context) StateEnumOutput {
	return o
}

func (o StateEnumOutput) ToStateEnumPtrOutput() StateEnumPtrOutput {
	return o.ToStateEnumPtrOutputWithContext(context.Background())
}

func (o StateEnumOutput) ToStateEnumPtrOutputWithContext(ctx context.Context) StateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateEnum) *StateEnum {
		return &v
	}).(StateEnumPtrOutput)
}

func (o StateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StateEnumPtrOutput struct{ *pulumi.OutputState }

func (StateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateEnum)(nil)).Elem()
}

func (o StateEnumPtrOutput) ToStateEnumPtrOutput() StateEnumPtrOutput {
	return o
}

func (o StateEnumPtrOutput) ToStateEnumPtrOutputWithContext(ctx context.Context) StateEnumPtrOutput {
	return o
}

func (o StateEnumPtrOutput) Elem() StateEnumOutput {
	return o.ApplyT(func(v *StateEnum) StateEnum {
		if v != nil {
			return *v
		}
		var ret StateEnum
		return ret
	}).(StateEnumOutput)
}

func (o StateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StateEnumInput is an input type that accepts values of the StateEnum enum
// A concrete instance of `StateEnumInput` can be one of the following:
//
//	StateEnumDISABLED
//	StateEnumENABLED
type StateEnumInput interface {
	pulumi.Input

	ToStateEnumOutput() StateEnumOutput
	ToStateEnumOutputWithContext(context.Context) StateEnumOutput
}

var stateEnumPtrType = reflect.TypeOf((**StateEnum)(nil)).Elem()

type StateEnumPtrInput interface {
	pulumi.Input

	ToStateEnumPtrOutput() StateEnumPtrOutput
	ToStateEnumPtrOutputWithContext(context.Context) StateEnumPtrOutput
}

type stateEnumPtr string

func StateEnumPtr(v string) StateEnumPtrInput {
	return (*stateEnumPtr)(&v)
}

func (*stateEnumPtr) ElementType() reflect.Type {
	return stateEnumPtrType
}

func (in *stateEnumPtr) ToStateEnumPtrOutput() StateEnumPtrOutput {
	return pulumi.ToOutput(in).(StateEnumPtrOutput)
}

func (in *stateEnumPtr) ToStateEnumPtrOutputWithContext(ctx context.Context) StateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StateEnumPtrOutput)
}

// different usage type like PAYG/COMMITTED
type UsageType string

const (
	UsageTypePAYG      = UsageType("PAYG")
	UsageTypeCOMMITTED = UsageType("COMMITTED")
)

func (UsageType) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageType)(nil)).Elem()
}

func (e UsageType) ToUsageTypeOutput() UsageTypeOutput {
	return pulumi.ToOutput(e).(UsageTypeOutput)
}

func (e UsageType) ToUsageTypeOutputWithContext(ctx context.Context) UsageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UsageTypeOutput)
}

func (e UsageType) ToUsageTypePtrOutput() UsageTypePtrOutput {
	return e.ToUsageTypePtrOutputWithContext(context.Background())
}

func (e UsageType) ToUsageTypePtrOutputWithContext(ctx context.Context) UsageTypePtrOutput {
	return UsageType(e).ToUsageTypeOutputWithContext(ctx).ToUsageTypePtrOutputWithContext(ctx)
}

func (e UsageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UsageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UsageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UsageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UsageTypeOutput struct{ *pulumi.OutputState }

func (UsageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsageType)(nil)).Elem()
}

func (o UsageTypeOutput) ToUsageTypeOutput() UsageTypeOutput {
	return o
}

func (o UsageTypeOutput) ToUsageTypeOutputWithContext(ctx context.Context) UsageTypeOutput {
	return o
}

func (o UsageTypeOutput) ToUsageTypePtrOutput() UsageTypePtrOutput {
	return o.ToUsageTypePtrOutputWithContext(context.Background())
}

func (o UsageTypeOutput) ToUsageTypePtrOutputWithContext(ctx context.Context) UsageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UsageType) *UsageType {
		return &v
	}).(UsageTypePtrOutput)
}

func (o UsageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UsageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UsageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UsageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UsageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UsageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UsageTypePtrOutput struct{ *pulumi.OutputState }

func (UsageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsageType)(nil)).Elem()
}

func (o UsageTypePtrOutput) ToUsageTypePtrOutput() UsageTypePtrOutput {
	return o
}

func (o UsageTypePtrOutput) ToUsageTypePtrOutputWithContext(ctx context.Context) UsageTypePtrOutput {
	return o
}

func (o UsageTypePtrOutput) Elem() UsageTypeOutput {
	return o.ApplyT(func(v *UsageType) UsageType {
		if v != nil {
			return *v
		}
		var ret UsageType
		return ret
	}).(UsageTypeOutput)
}

func (o UsageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UsageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UsageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UsageTypeInput is an input type that accepts values of the UsageType enum
// A concrete instance of `UsageTypeInput` can be one of the following:
//
//	UsageTypePAYG
//	UsageTypeCOMMITTED
type UsageTypeInput interface {
	pulumi.Input

	ToUsageTypeOutput() UsageTypeOutput
	ToUsageTypeOutputWithContext(context.Context) UsageTypeOutput
}

var usageTypePtrType = reflect.TypeOf((**UsageType)(nil)).Elem()

type UsageTypePtrInput interface {
	pulumi.Input

	ToUsageTypePtrOutput() UsageTypePtrOutput
	ToUsageTypePtrOutputWithContext(context.Context) UsageTypePtrOutput
}

type usageTypePtr string

func UsageTypePtr(v string) UsageTypePtrInput {
	return (*usageTypePtr)(&v)
}

func (*usageTypePtr) ElementType() reflect.Type {
	return usageTypePtrType
}

func (in *usageTypePtr) ToUsageTypePtrOutput() UsageTypePtrOutput {
	return pulumi.ToOutput(in).(UsageTypePtrOutput)
}

func (in *usageTypePtr) ToUsageTypePtrOutputWithContext(ctx context.Context) UsageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UsageTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionEnumOutput{})
	pulumi.RegisterOutputType(ActionEnumPtrOutput{})
	pulumi.RegisterOutputType(BillingCycleOutput{})
	pulumi.RegisterOutputType(BillingCyclePtrOutput{})
	pulumi.RegisterOutputType(BooleanEnumOutput{})
	pulumi.RegisterOutputType(BooleanEnumPtrOutput{})
	pulumi.RegisterOutputType(DNSProxyOutput{})
	pulumi.RegisterOutputType(DNSProxyPtrOutput{})
	pulumi.RegisterOutputType(DecryptionRuleTypeEnumOutput{})
	pulumi.RegisterOutputType(DecryptionRuleTypeEnumPtrOutput{})
	pulumi.RegisterOutputType(DefaultModeOutput{})
	pulumi.RegisterOutputType(DefaultModePtrOutput{})
	pulumi.RegisterOutputType(EgressNatOutput{})
	pulumi.RegisterOutputType(EgressNatPtrOutput{})
	pulumi.RegisterOutputType(EnabledDNSTypeOutput{})
	pulumi.RegisterOutputType(EnabledDNSTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(MarketplaceSubscriptionStatusOutput{})
	pulumi.RegisterOutputType(MarketplaceSubscriptionStatusPtrOutput{})
	pulumi.RegisterOutputType(NetworkTypeOutput{})
	pulumi.RegisterOutputType(NetworkTypePtrOutput{})
	pulumi.RegisterOutputType(ProtocolTypeOutput{})
	pulumi.RegisterOutputType(ProtocolTypePtrOutput{})
	pulumi.RegisterOutputType(ScopeTypeOutput{})
	pulumi.RegisterOutputType(ScopeTypePtrOutput{})
	pulumi.RegisterOutputType(StateEnumOutput{})
	pulumi.RegisterOutputType(StateEnumPtrOutput{})
	pulumi.RegisterOutputType(UsageTypeOutput{})
	pulumi.RegisterOutputType(UsageTypePtrOutput{})
}
