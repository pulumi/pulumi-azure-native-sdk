// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a FqdnListLocalRulestackResource
func LookupFqdnListLocalRulestack(ctx *pulumi.Context, args *LookupFqdnListLocalRulestackArgs, opts ...pulumi.InvokeOption) (*LookupFqdnListLocalRulestackResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFqdnListLocalRulestackResult
	err := ctx.Invoke("azure-native:cloudngfw/v20230901preview:getFqdnListLocalRulestack", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFqdnListLocalRulestackArgs struct {
	// LocalRulestack resource name
	LocalRulestackName string `pulumi:"localRulestackName"`
	// fqdn list name
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// LocalRulestack fqdnList
type LookupFqdnListLocalRulestackResult struct {
	// comment for this object
	AuditComment *string `pulumi:"auditComment"`
	// fqdn object description
	Description *string `pulumi:"description"`
	// etag info
	Etag *string `pulumi:"etag"`
	// fqdn list
	FqdnList []string `pulumi:"fqdnList"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupFqdnListLocalRulestackOutput(ctx *pulumi.Context, args LookupFqdnListLocalRulestackOutputArgs, opts ...pulumi.InvokeOption) LookupFqdnListLocalRulestackResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFqdnListLocalRulestackResult, error) {
			args := v.(LookupFqdnListLocalRulestackArgs)
			r, err := LookupFqdnListLocalRulestack(ctx, &args, opts...)
			var s LookupFqdnListLocalRulestackResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFqdnListLocalRulestackResultOutput)
}

type LookupFqdnListLocalRulestackOutputArgs struct {
	// LocalRulestack resource name
	LocalRulestackName pulumi.StringInput `pulumi:"localRulestackName"`
	// fqdn list name
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFqdnListLocalRulestackOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFqdnListLocalRulestackArgs)(nil)).Elem()
}

// LocalRulestack fqdnList
type LookupFqdnListLocalRulestackResultOutput struct{ *pulumi.OutputState }

func (LookupFqdnListLocalRulestackResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFqdnListLocalRulestackResult)(nil)).Elem()
}

func (o LookupFqdnListLocalRulestackResultOutput) ToLookupFqdnListLocalRulestackResultOutput() LookupFqdnListLocalRulestackResultOutput {
	return o
}

func (o LookupFqdnListLocalRulestackResultOutput) ToLookupFqdnListLocalRulestackResultOutputWithContext(ctx context.Context) LookupFqdnListLocalRulestackResultOutput {
	return o
}

// comment for this object
func (o LookupFqdnListLocalRulestackResultOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) *string { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// fqdn object description
func (o LookupFqdnListLocalRulestackResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// etag info
func (o LookupFqdnListLocalRulestackResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// fqdn list
func (o LookupFqdnListLocalRulestackResultOutput) FqdnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) []string { return v.FqdnList }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupFqdnListLocalRulestackResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupFqdnListLocalRulestackResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupFqdnListLocalRulestackResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupFqdnListLocalRulestackResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupFqdnListLocalRulestackResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFqdnListLocalRulestackResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFqdnListLocalRulestackResultOutput{})
}
