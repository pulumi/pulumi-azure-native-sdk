// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PaloAltoNetworks Firewall
type Firewall struct {
	pulumi.CustomResourceState

	// Associated Rulestack
	AssociatedRulestack RulestackDetailsResponsePtrOutput `pulumi:"associatedRulestack"`
	// DNS settings for Firewall
	DnsSettings DNSSettingsResponseOutput `pulumi:"dnsSettings"`
	// Frontend settings for Firewall
	FrontEndSettings FrontendSettingResponseArrayOutput `pulumi:"frontEndSettings"`
	// The managed service identities assigned to this resource.
	Identity AzureResourceManagerManagedIdentityPropertiesResponsePtrOutput `pulumi:"identity"`
	// Panorama Managed: Default is False. Default will be CloudSec managed
	IsPanoramaManaged pulumi.StringPtrOutput `pulumi:"isPanoramaManaged"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Marketplace details
	MarketplaceDetails MarketplaceDetailsResponseOutput `pulumi:"marketplaceDetails"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Network settings
	NetworkProfile NetworkProfileResponseOutput `pulumi:"networkProfile"`
	// panEtag info
	PanEtag pulumi.StringPtrOutput `pulumi:"panEtag"`
	// Panorama Configuration
	PanoramaConfig PanoramaConfigResponsePtrOutput `pulumi:"panoramaConfig"`
	// Billing plan information.
	PlanData PlanDataResponseOutput `pulumi:"planData"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewall(ctx *pulumi.Context,
	name string, args *FirewallArgs, opts ...pulumi.ResourceOption) (*Firewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DnsSettings == nil {
		return nil, errors.New("invalid value for required argument 'DnsSettings'")
	}
	if args.MarketplaceDetails == nil {
		return nil, errors.New("invalid value for required argument 'MarketplaceDetails'")
	}
	if args.NetworkProfile == nil {
		return nil, errors.New("invalid value for required argument 'NetworkProfile'")
	}
	if args.PlanData == nil {
		return nil, errors.New("invalid value for required argument 'PlanData'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cloudngfw:Firewall"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829:Firewall"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20220829preview:Firewall"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20230901:Firewall"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20231010preview:Firewall"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240119preview:Firewall"),
		},
		{
			Type: pulumi.String("azure-native:cloudngfw/v20240207preview:Firewall"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Firewall
	err := ctx.RegisterResource("azure-native:cloudngfw/v20230901preview:Firewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewall gets an existing Firewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallState, opts ...pulumi.ResourceOption) (*Firewall, error) {
	var resource Firewall
	err := ctx.ReadResource("azure-native:cloudngfw/v20230901preview:Firewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Firewall resources.
type firewallState struct {
}

type FirewallState struct {
}

func (FirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallState)(nil)).Elem()
}

type firewallArgs struct {
	// Associated Rulestack
	AssociatedRulestack *RulestackDetails `pulumi:"associatedRulestack"`
	// DNS settings for Firewall
	DnsSettings DNSSettings `pulumi:"dnsSettings"`
	// Firewall resource name
	FirewallName *string `pulumi:"firewallName"`
	// Frontend settings for Firewall
	FrontEndSettings []FrontendSetting `pulumi:"frontEndSettings"`
	// The managed service identities assigned to this resource.
	Identity *AzureResourceManagerManagedIdentityProperties `pulumi:"identity"`
	// Panorama Managed: Default is False. Default will be CloudSec managed
	IsPanoramaManaged *string `pulumi:"isPanoramaManaged"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Marketplace details
	MarketplaceDetails MarketplaceDetails `pulumi:"marketplaceDetails"`
	// Network settings
	NetworkProfile NetworkProfile `pulumi:"networkProfile"`
	// panEtag info
	PanEtag *string `pulumi:"panEtag"`
	// Panorama Configuration
	PanoramaConfig *PanoramaConfig `pulumi:"panoramaConfig"`
	// Billing plan information.
	PlanData PlanData `pulumi:"planData"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Firewall resource.
type FirewallArgs struct {
	// Associated Rulestack
	AssociatedRulestack RulestackDetailsPtrInput
	// DNS settings for Firewall
	DnsSettings DNSSettingsInput
	// Firewall resource name
	FirewallName pulumi.StringPtrInput
	// Frontend settings for Firewall
	FrontEndSettings FrontendSettingArrayInput
	// The managed service identities assigned to this resource.
	Identity AzureResourceManagerManagedIdentityPropertiesPtrInput
	// Panorama Managed: Default is False. Default will be CloudSec managed
	IsPanoramaManaged pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Marketplace details
	MarketplaceDetails MarketplaceDetailsInput
	// Network settings
	NetworkProfile NetworkProfileInput
	// panEtag info
	PanEtag pulumi.StringPtrInput
	// Panorama Configuration
	PanoramaConfig PanoramaConfigPtrInput
	// Billing plan information.
	PlanData PlanDataInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (FirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallArgs)(nil)).Elem()
}

type FirewallInput interface {
	pulumi.Input

	ToFirewallOutput() FirewallOutput
	ToFirewallOutputWithContext(ctx context.Context) FirewallOutput
}

func (*Firewall) ElementType() reflect.Type {
	return reflect.TypeOf((**Firewall)(nil)).Elem()
}

func (i *Firewall) ToFirewallOutput() FirewallOutput {
	return i.ToFirewallOutputWithContext(context.Background())
}

func (i *Firewall) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutput)
}

type FirewallOutput struct{ *pulumi.OutputState }

func (FirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Firewall)(nil)).Elem()
}

func (o FirewallOutput) ToFirewallOutput() FirewallOutput {
	return o
}

func (o FirewallOutput) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return o
}

// Associated Rulestack
func (o FirewallOutput) AssociatedRulestack() RulestackDetailsResponsePtrOutput {
	return o.ApplyT(func(v *Firewall) RulestackDetailsResponsePtrOutput { return v.AssociatedRulestack }).(RulestackDetailsResponsePtrOutput)
}

// DNS settings for Firewall
func (o FirewallOutput) DnsSettings() DNSSettingsResponseOutput {
	return o.ApplyT(func(v *Firewall) DNSSettingsResponseOutput { return v.DnsSettings }).(DNSSettingsResponseOutput)
}

// Frontend settings for Firewall
func (o FirewallOutput) FrontEndSettings() FrontendSettingResponseArrayOutput {
	return o.ApplyT(func(v *Firewall) FrontendSettingResponseArrayOutput { return v.FrontEndSettings }).(FrontendSettingResponseArrayOutput)
}

// The managed service identities assigned to this resource.
func (o FirewallOutput) Identity() AzureResourceManagerManagedIdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Firewall) AzureResourceManagerManagedIdentityPropertiesResponsePtrOutput { return v.Identity }).(AzureResourceManagerManagedIdentityPropertiesResponsePtrOutput)
}

// Panorama Managed: Default is False. Default will be CloudSec managed
func (o FirewallOutput) IsPanoramaManaged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.IsPanoramaManaged }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o FirewallOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Marketplace details
func (o FirewallOutput) MarketplaceDetails() MarketplaceDetailsResponseOutput {
	return o.ApplyT(func(v *Firewall) MarketplaceDetailsResponseOutput { return v.MarketplaceDetails }).(MarketplaceDetailsResponseOutput)
}

// The name of the resource
func (o FirewallOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network settings
func (o FirewallOutput) NetworkProfile() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *Firewall) NetworkProfileResponseOutput { return v.NetworkProfile }).(NetworkProfileResponseOutput)
}

// panEtag info
func (o FirewallOutput) PanEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.PanEtag }).(pulumi.StringPtrOutput)
}

// Panorama Configuration
func (o FirewallOutput) PanoramaConfig() PanoramaConfigResponsePtrOutput {
	return o.ApplyT(func(v *Firewall) PanoramaConfigResponsePtrOutput { return v.PanoramaConfig }).(PanoramaConfigResponsePtrOutput)
}

// Billing plan information.
func (o FirewallOutput) PlanData() PlanDataResponseOutput {
	return o.ApplyT(func(v *Firewall) PlanDataResponseOutput { return v.PlanData }).(PlanDataResponseOutput)
}

// Provisioning state of the resource.
func (o FirewallOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o FirewallOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Firewall) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o FirewallOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o FirewallOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallOutput{})
}
