// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Container of a site
// Azure REST API version: 2023-12-01.
type WebAppSiteContainerSlot struct {
	pulumi.CustomResourceState

	// Auth Type
	AuthType pulumi.StringPtrOutput `pulumi:"authType"`
	// Created Time
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// List of environment variables
	EnvironmentVariables EnvironmentVariableResponseArrayOutput `pulumi:"environmentVariables"`
	// Image Name
	Image pulumi.StringOutput `pulumi:"image"`
	// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
	IsMain pulumi.BoolOutput `pulumi:"isMain"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Last Modified Time
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password Secret
	PasswordSecret pulumi.StringPtrOutput `pulumi:"passwordSecret"`
	// StartUp Command
	StartUpCommand pulumi.StringPtrOutput `pulumi:"startUpCommand"`
	// Target Port
	TargetPort pulumi.StringPtrOutput `pulumi:"targetPort"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// UserManagedIdentity ClientId
	UserManagedIdentityClientId pulumi.StringPtrOutput `pulumi:"userManagedIdentityClientId"`
	// User Name
	UserName pulumi.StringPtrOutput `pulumi:"userName"`
	// List of volume mounts
	VolumeMounts VolumeMountResponseArrayOutput `pulumi:"volumeMounts"`
}

// NewWebAppSiteContainerSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppSiteContainerSlot(ctx *pulumi.Context,
	name string, args *WebAppSiteContainerSlotArgs, opts ...pulumi.ResourceOption) (*WebAppSiteContainerSlot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Image == nil {
		return nil, errors.New("invalid value for required argument 'Image'")
	}
	if args.IsMain == nil {
		return nil, errors.New("invalid value for required argument 'IsMain'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Slot == nil {
		return nil, errors.New("invalid value for required argument 'Slot'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:web/v20231201:WebAppSiteContainerSlot"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WebAppSiteContainerSlot
	err := ctx.RegisterResource("azure-native:web:WebAppSiteContainerSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppSiteContainerSlot gets an existing WebAppSiteContainerSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppSiteContainerSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppSiteContainerSlotState, opts ...pulumi.ResourceOption) (*WebAppSiteContainerSlot, error) {
	var resource WebAppSiteContainerSlot
	err := ctx.ReadResource("azure-native:web:WebAppSiteContainerSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppSiteContainerSlot resources.
type webAppSiteContainerSlotState struct {
}

type WebAppSiteContainerSlotState struct {
}

func (WebAppSiteContainerSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteContainerSlotState)(nil)).Elem()
}

type webAppSiteContainerSlotArgs struct {
	// Auth Type
	AuthType *AuthType `pulumi:"authType"`
	// Site Container Name
	ContainerName *string `pulumi:"containerName"`
	// List of environment variables
	EnvironmentVariables []EnvironmentVariable `pulumi:"environmentVariables"`
	// Image Name
	Image string `pulumi:"image"`
	// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
	IsMain bool `pulumi:"isMain"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Name of the app.
	Name string `pulumi:"name"`
	// Password Secret
	PasswordSecret *string `pulumi:"passwordSecret"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will create the container for the production slot.
	Slot string `pulumi:"slot"`
	// StartUp Command
	StartUpCommand *string `pulumi:"startUpCommand"`
	// Target Port
	TargetPort *string `pulumi:"targetPort"`
	// UserManagedIdentity ClientId
	UserManagedIdentityClientId *string `pulumi:"userManagedIdentityClientId"`
	// User Name
	UserName *string `pulumi:"userName"`
	// List of volume mounts
	VolumeMounts []VolumeMount `pulumi:"volumeMounts"`
}

// The set of arguments for constructing a WebAppSiteContainerSlot resource.
type WebAppSiteContainerSlotArgs struct {
	// Auth Type
	AuthType AuthTypePtrInput
	// Site Container Name
	ContainerName pulumi.StringPtrInput
	// List of environment variables
	EnvironmentVariables EnvironmentVariableArrayInput
	// Image Name
	Image pulumi.StringInput
	// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
	IsMain pulumi.BoolInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringInput
	// Password Secret
	PasswordSecret pulumi.StringPtrInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Name of the deployment slot. If a slot is not specified, the API will create the container for the production slot.
	Slot pulumi.StringInput
	// StartUp Command
	StartUpCommand pulumi.StringPtrInput
	// Target Port
	TargetPort pulumi.StringPtrInput
	// UserManagedIdentity ClientId
	UserManagedIdentityClientId pulumi.StringPtrInput
	// User Name
	UserName pulumi.StringPtrInput
	// List of volume mounts
	VolumeMounts VolumeMountArrayInput
}

func (WebAppSiteContainerSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteContainerSlotArgs)(nil)).Elem()
}

type WebAppSiteContainerSlotInput interface {
	pulumi.Input

	ToWebAppSiteContainerSlotOutput() WebAppSiteContainerSlotOutput
	ToWebAppSiteContainerSlotOutputWithContext(ctx context.Context) WebAppSiteContainerSlotOutput
}

func (*WebAppSiteContainerSlot) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppSiteContainerSlot)(nil)).Elem()
}

func (i *WebAppSiteContainerSlot) ToWebAppSiteContainerSlotOutput() WebAppSiteContainerSlotOutput {
	return i.ToWebAppSiteContainerSlotOutputWithContext(context.Background())
}

func (i *WebAppSiteContainerSlot) ToWebAppSiteContainerSlotOutputWithContext(ctx context.Context) WebAppSiteContainerSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSiteContainerSlotOutput)
}

type WebAppSiteContainerSlotOutput struct{ *pulumi.OutputState }

func (WebAppSiteContainerSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppSiteContainerSlot)(nil)).Elem()
}

func (o WebAppSiteContainerSlotOutput) ToWebAppSiteContainerSlotOutput() WebAppSiteContainerSlotOutput {
	return o
}

func (o WebAppSiteContainerSlotOutput) ToWebAppSiteContainerSlotOutputWithContext(ctx context.Context) WebAppSiteContainerSlotOutput {
	return o
}

// Auth Type
func (o WebAppSiteContainerSlotOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Created Time
func (o WebAppSiteContainerSlotOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// List of environment variables
func (o WebAppSiteContainerSlotOutput) EnvironmentVariables() EnvironmentVariableResponseArrayOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) EnvironmentVariableResponseArrayOutput { return v.EnvironmentVariables }).(EnvironmentVariableResponseArrayOutput)
}

// Image Name
func (o WebAppSiteContainerSlotOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringOutput { return v.Image }).(pulumi.StringOutput)
}

// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
func (o WebAppSiteContainerSlotOutput) IsMain() pulumi.BoolOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.BoolOutput { return v.IsMain }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o WebAppSiteContainerSlotOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Last Modified Time
func (o WebAppSiteContainerSlotOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Resource Name.
func (o WebAppSiteContainerSlotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password Secret
func (o WebAppSiteContainerSlotOutput) PasswordSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.PasswordSecret }).(pulumi.StringPtrOutput)
}

// StartUp Command
func (o WebAppSiteContainerSlotOutput) StartUpCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.StartUpCommand }).(pulumi.StringPtrOutput)
}

// Target Port
func (o WebAppSiteContainerSlotOutput) TargetPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.TargetPort }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o WebAppSiteContainerSlotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// UserManagedIdentity ClientId
func (o WebAppSiteContainerSlotOutput) UserManagedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.UserManagedIdentityClientId }).(pulumi.StringPtrOutput)
}

// User Name
func (o WebAppSiteContainerSlotOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) pulumi.StringPtrOutput { return v.UserName }).(pulumi.StringPtrOutput)
}

// List of volume mounts
func (o WebAppSiteContainerSlotOutput) VolumeMounts() VolumeMountResponseArrayOutput {
	return o.ApplyT(func(v *WebAppSiteContainerSlot) VolumeMountResponseArrayOutput { return v.VolumeMounts }).(VolumeMountResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(WebAppSiteContainerSlotOutput{})
}
