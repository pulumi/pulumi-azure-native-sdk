// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20160901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
type RouteType string

const (
	RouteTypeDEFAULT   = RouteType("DEFAULT")
	RouteTypeINHERITED = RouteType("INHERITED")
	RouteTypeSTATIC    = RouteType("STATIC")
)

func (RouteType) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (e RouteType) ToRouteTypeOutput() RouteTypeOutput {
	return pulumi.ToOutput(e).(RouteTypeOutput)
}

func (e RouteType) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteTypeOutput)
}

func (e RouteType) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return e.ToRouteTypePtrOutputWithContext(context.Background())
}

func (e RouteType) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return RouteType(e).ToRouteTypeOutputWithContext(ctx).ToRouteTypePtrOutputWithContext(ctx)
}

func (e RouteType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return o.ToRouteTypePtrOutputWithContext(context.Background())
}

func (o RouteTypeOutput) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteType) *RouteType {
		return &v
	}).(RouteTypePtrOutput)
}

func (o RouteTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteType)(nil)).Elem()
}

func (o RouteTypePtrOutput) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return o
}

func (o RouteTypePtrOutput) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return o
}

func (o RouteTypePtrOutput) Elem() RouteTypeOutput {
	return o.ApplyT(func(v *RouteType) RouteType {
		if v != nil {
			return *v
		}
		var ret RouteType
		return ret
	}).(RouteTypeOutput)
}

func (o RouteTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteTypeInput is an input type that accepts values of the RouteType enum
// A concrete instance of `RouteTypeInput` can be one of the following:
//
//	RouteTypeDEFAULT
//	RouteTypeINHERITED
//	RouteTypeSTATIC
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

var routeTypePtrType = reflect.TypeOf((**RouteType)(nil)).Elem()

type RouteTypePtrInput interface {
	pulumi.Input

	ToRouteTypePtrOutput() RouteTypePtrOutput
	ToRouteTypePtrOutputWithContext(context.Context) RouteTypePtrOutput
}

type routeTypePtr string

func RouteTypePtr(v string) RouteTypePtrInput {
	return (*routeTypePtr)(&v)
}

func (*routeTypePtr) ElementType() reflect.Type {
	return routeTypePtrType
}

func (in *routeTypePtr) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return pulumi.ToOutput(in).(RouteTypePtrOutput)
}

func (in *routeTypePtr) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypePtrOutput{})
}
