// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Static Site Database Connection resource.
//
// Uses Azure REST API version 2024-04-01.
//
// Other available API versions: 2022-09-01, 2023-01-01, 2023-12-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupStaticSiteDatabaseConnection(ctx *pulumi.Context, args *LookupStaticSiteDatabaseConnectionArgs, opts ...pulumi.InvokeOption) (*LookupStaticSiteDatabaseConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStaticSiteDatabaseConnectionResult
	err := ctx.Invoke("azure-native:web:getStaticSiteDatabaseConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStaticSiteDatabaseConnectionArgs struct {
	// Name of the database connection.
	DatabaseConnectionName string `pulumi:"databaseConnectionName"`
	// Name of the static site
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Static Site Database Connection resource.
type LookupStaticSiteDatabaseConnectionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// A list of configuration files associated with this database connection.
	ConfigurationFiles []StaticSiteDatabaseConnectionConfigurationFileOverviewResponse `pulumi:"configurationFiles"`
	// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.
	ConnectionIdentity *string `pulumi:"connectionIdentity"`
	// The connection string to use to connect to the database.
	ConnectionString *string `pulumi:"connectionString"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The region of the database resource.
	Region string `pulumi:"region"`
	// The resource id of the database.
	ResourceId string `pulumi:"resourceId"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupStaticSiteDatabaseConnectionOutput(ctx *pulumi.Context, args LookupStaticSiteDatabaseConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupStaticSiteDatabaseConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStaticSiteDatabaseConnectionResultOutput, error) {
			args := v.(LookupStaticSiteDatabaseConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:web:getStaticSiteDatabaseConnection", args, LookupStaticSiteDatabaseConnectionResultOutput{}, options).(LookupStaticSiteDatabaseConnectionResultOutput), nil
		}).(LookupStaticSiteDatabaseConnectionResultOutput)
}

type LookupStaticSiteDatabaseConnectionOutputArgs struct {
	// Name of the database connection.
	DatabaseConnectionName pulumi.StringInput `pulumi:"databaseConnectionName"`
	// Name of the static site
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupStaticSiteDatabaseConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStaticSiteDatabaseConnectionArgs)(nil)).Elem()
}

// Static Site Database Connection resource.
type LookupStaticSiteDatabaseConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupStaticSiteDatabaseConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStaticSiteDatabaseConnectionResult)(nil)).Elem()
}

func (o LookupStaticSiteDatabaseConnectionResultOutput) ToLookupStaticSiteDatabaseConnectionResultOutput() LookupStaticSiteDatabaseConnectionResultOutput {
	return o
}

func (o LookupStaticSiteDatabaseConnectionResultOutput) ToLookupStaticSiteDatabaseConnectionResultOutputWithContext(ctx context.Context) LookupStaticSiteDatabaseConnectionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupStaticSiteDatabaseConnectionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A list of configuration files associated with this database connection.
func (o LookupStaticSiteDatabaseConnectionResultOutput) ConfigurationFiles() StaticSiteDatabaseConnectionConfigurationFileOverviewResponseArrayOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) []StaticSiteDatabaseConnectionConfigurationFileOverviewResponse {
		return v.ConfigurationFiles
	}).(StaticSiteDatabaseConnectionConfigurationFileOverviewResponseArrayOutput)
}

// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.
func (o LookupStaticSiteDatabaseConnectionResultOutput) ConnectionIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) *string { return v.ConnectionIdentity }).(pulumi.StringPtrOutput)
}

// The connection string to use to connect to the database.
func (o LookupStaticSiteDatabaseConnectionResultOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o LookupStaticSiteDatabaseConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupStaticSiteDatabaseConnectionResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o LookupStaticSiteDatabaseConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The region of the database resource.
func (o LookupStaticSiteDatabaseConnectionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) string { return v.Region }).(pulumi.StringOutput)
}

// The resource id of the database.
func (o LookupStaticSiteDatabaseConnectionResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupStaticSiteDatabaseConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteDatabaseConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStaticSiteDatabaseConnectionResultOutput{})
}
