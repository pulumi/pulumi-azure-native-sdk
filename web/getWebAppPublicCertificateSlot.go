// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Description for Get the named public certificate for an app (or deployment slot, if specified).
//
// Uses Azure REST API version 2024-04-01.
//
// Other available API versions: 2016-08-01, 2018-02-01, 2018-11-01, 2019-08-01, 2020-06-01, 2020-09-01, 2020-10-01, 2020-12-01, 2021-01-01, 2021-01-15, 2021-02-01, 2021-03-01, 2022-03-01, 2022-09-01, 2023-01-01, 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupWebAppPublicCertificateSlot(ctx *pulumi.Context, args *LookupWebAppPublicCertificateSlotArgs, opts ...pulumi.InvokeOption) (*LookupWebAppPublicCertificateSlotResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWebAppPublicCertificateSlotResult
	err := ctx.Invoke("azure-native:web:getWebAppPublicCertificateSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebAppPublicCertificateSlotArgs struct {
	// Name of the app.
	Name string `pulumi:"name"`
	// Public certificate name.
	PublicCertificateName string `pulumi:"publicCertificateName"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API the named binding for the production slot.
	Slot string `pulumi:"slot"`
}

// Public certificate object
type LookupWebAppPublicCertificateSlotResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Public Certificate byte array
	Blob *string `pulumi:"blob"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Public Certificate Location
	PublicCertificateLocation *string `pulumi:"publicCertificateLocation"`
	// Certificate Thumbprint
	Thumbprint string `pulumi:"thumbprint"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupWebAppPublicCertificateSlotOutput(ctx *pulumi.Context, args LookupWebAppPublicCertificateSlotOutputArgs, opts ...pulumi.InvokeOption) LookupWebAppPublicCertificateSlotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWebAppPublicCertificateSlotResultOutput, error) {
			args := v.(LookupWebAppPublicCertificateSlotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:web:getWebAppPublicCertificateSlot", args, LookupWebAppPublicCertificateSlotResultOutput{}, options).(LookupWebAppPublicCertificateSlotResultOutput), nil
		}).(LookupWebAppPublicCertificateSlotResultOutput)
}

type LookupWebAppPublicCertificateSlotOutputArgs struct {
	// Name of the app.
	Name pulumi.StringInput `pulumi:"name"`
	// Public certificate name.
	PublicCertificateName pulumi.StringInput `pulumi:"publicCertificateName"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API the named binding for the production slot.
	Slot pulumi.StringInput `pulumi:"slot"`
}

func (LookupWebAppPublicCertificateSlotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppPublicCertificateSlotArgs)(nil)).Elem()
}

// Public certificate object
type LookupWebAppPublicCertificateSlotResultOutput struct{ *pulumi.OutputState }

func (LookupWebAppPublicCertificateSlotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppPublicCertificateSlotResult)(nil)).Elem()
}

func (o LookupWebAppPublicCertificateSlotResultOutput) ToLookupWebAppPublicCertificateSlotResultOutput() LookupWebAppPublicCertificateSlotResultOutput {
	return o
}

func (o LookupWebAppPublicCertificateSlotResultOutput) ToLookupWebAppPublicCertificateSlotResultOutputWithContext(ctx context.Context) LookupWebAppPublicCertificateSlotResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupWebAppPublicCertificateSlotResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Public Certificate byte array
func (o LookupWebAppPublicCertificateSlotResultOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) *string { return v.Blob }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o LookupWebAppPublicCertificateSlotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupWebAppPublicCertificateSlotResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o LookupWebAppPublicCertificateSlotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) string { return v.Name }).(pulumi.StringOutput)
}

// Public Certificate Location
func (o LookupWebAppPublicCertificateSlotResultOutput) PublicCertificateLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) *string { return v.PublicCertificateLocation }).(pulumi.StringPtrOutput)
}

// Certificate Thumbprint
func (o LookupWebAppPublicCertificateSlotResultOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupWebAppPublicCertificateSlotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppPublicCertificateSlotResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebAppPublicCertificateSlotResultOutput{})
}
