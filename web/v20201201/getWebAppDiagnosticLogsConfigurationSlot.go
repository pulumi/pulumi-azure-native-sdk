// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the logging configuration of an app.
func LookupWebAppDiagnosticLogsConfigurationSlot(ctx *pulumi.Context, args *LookupWebAppDiagnosticLogsConfigurationSlotArgs, opts ...pulumi.InvokeOption) (*LookupWebAppDiagnosticLogsConfigurationSlotResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWebAppDiagnosticLogsConfigurationSlotResult
	err := ctx.Invoke("azure-native:web/v20201201:getWebAppDiagnosticLogsConfigurationSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWebAppDiagnosticLogsConfigurationSlotArgs struct {
	// Name of the app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will get the logging configuration for the production slot.
	Slot string `pulumi:"slot"`
}

// Configuration of App Service site logs.
type LookupWebAppDiagnosticLogsConfigurationSlotResult struct {
	// Application logs configuration.
	ApplicationLogs *ApplicationLogsConfigResponse `pulumi:"applicationLogs"`
	// Detailed error messages configuration.
	DetailedErrorMessages *EnabledConfigResponse `pulumi:"detailedErrorMessages"`
	// Failed requests tracing configuration.
	FailedRequestsTracing *EnabledConfigResponse `pulumi:"failedRequestsTracing"`
	// HTTP logs configuration.
	HttpLogs *HttpLogsConfigResponse `pulumi:"httpLogs"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupWebAppDiagnosticLogsConfigurationSlotResult
func (val *LookupWebAppDiagnosticLogsConfigurationSlotResult) Defaults() *LookupWebAppDiagnosticLogsConfigurationSlotResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ApplicationLogs = tmp.ApplicationLogs.Defaults()

	return &tmp
}
func LookupWebAppDiagnosticLogsConfigurationSlotOutput(ctx *pulumi.Context, args LookupWebAppDiagnosticLogsConfigurationSlotOutputArgs, opts ...pulumi.InvokeOption) LookupWebAppDiagnosticLogsConfigurationSlotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWebAppDiagnosticLogsConfigurationSlotResultOutput, error) {
			args := v.(LookupWebAppDiagnosticLogsConfigurationSlotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:web/v20201201:getWebAppDiagnosticLogsConfigurationSlot", args, LookupWebAppDiagnosticLogsConfigurationSlotResultOutput{}, options).(LookupWebAppDiagnosticLogsConfigurationSlotResultOutput), nil
		}).(LookupWebAppDiagnosticLogsConfigurationSlotResultOutput)
}

type LookupWebAppDiagnosticLogsConfigurationSlotOutputArgs struct {
	// Name of the app.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will get the logging configuration for the production slot.
	Slot pulumi.StringInput `pulumi:"slot"`
}

func (LookupWebAppDiagnosticLogsConfigurationSlotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppDiagnosticLogsConfigurationSlotArgs)(nil)).Elem()
}

// Configuration of App Service site logs.
type LookupWebAppDiagnosticLogsConfigurationSlotResultOutput struct{ *pulumi.OutputState }

func (LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppDiagnosticLogsConfigurationSlotResult)(nil)).Elem()
}

func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) ToLookupWebAppDiagnosticLogsConfigurationSlotResultOutput() LookupWebAppDiagnosticLogsConfigurationSlotResultOutput {
	return o
}

func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) ToLookupWebAppDiagnosticLogsConfigurationSlotResultOutputWithContext(ctx context.Context) LookupWebAppDiagnosticLogsConfigurationSlotResultOutput {
	return o
}

// Application logs configuration.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) ApplicationLogs() ApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) *ApplicationLogsConfigResponse {
		return v.ApplicationLogs
	}).(ApplicationLogsConfigResponsePtrOutput)
}

// Detailed error messages configuration.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) DetailedErrorMessages() EnabledConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) *EnabledConfigResponse {
		return v.DetailedErrorMessages
	}).(EnabledConfigResponsePtrOutput)
}

// Failed requests tracing configuration.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) FailedRequestsTracing() EnabledConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) *EnabledConfigResponse {
		return v.FailedRequestsTracing
	}).(EnabledConfigResponsePtrOutput)
}

// HTTP logs configuration.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) HttpLogs() HttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) *HttpLogsConfigResponse { return v.HttpLogs }).(HttpLogsConfigResponsePtrOutput)
}

// Resource Id.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupWebAppDiagnosticLogsConfigurationSlotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppDiagnosticLogsConfigurationSlotResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebAppDiagnosticLogsConfigurationSlotResultOutput{})
}
