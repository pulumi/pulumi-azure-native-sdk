// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns whether FTP is allowed on the site or not.
func LookupWebAppFtpAllowedSlot(ctx *pulumi.Context, args *LookupWebAppFtpAllowedSlotArgs, opts ...pulumi.InvokeOption) (*LookupWebAppFtpAllowedSlotResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWebAppFtpAllowedSlotResult
	err := ctx.Invoke("azure-native:web/v20201201:getWebAppFtpAllowedSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebAppFtpAllowedSlotArgs struct {
	// Name of the app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	Slot              string `pulumi:"slot"`
}

// Publishing Credentials Policies parameters.
type LookupWebAppFtpAllowedSlotResult struct {
	// <code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.
	Allow bool `pulumi:"allow"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupWebAppFtpAllowedSlotOutput(ctx *pulumi.Context, args LookupWebAppFtpAllowedSlotOutputArgs, opts ...pulumi.InvokeOption) LookupWebAppFtpAllowedSlotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWebAppFtpAllowedSlotResultOutput, error) {
			args := v.(LookupWebAppFtpAllowedSlotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:web/v20201201:getWebAppFtpAllowedSlot", args, LookupWebAppFtpAllowedSlotResultOutput{}, options).(LookupWebAppFtpAllowedSlotResultOutput), nil
		}).(LookupWebAppFtpAllowedSlotResultOutput)
}

type LookupWebAppFtpAllowedSlotOutputArgs struct {
	// Name of the app.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	Slot              pulumi.StringInput `pulumi:"slot"`
}

func (LookupWebAppFtpAllowedSlotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppFtpAllowedSlotArgs)(nil)).Elem()
}

// Publishing Credentials Policies parameters.
type LookupWebAppFtpAllowedSlotResultOutput struct{ *pulumi.OutputState }

func (LookupWebAppFtpAllowedSlotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppFtpAllowedSlotResult)(nil)).Elem()
}

func (o LookupWebAppFtpAllowedSlotResultOutput) ToLookupWebAppFtpAllowedSlotResultOutput() LookupWebAppFtpAllowedSlotResultOutput {
	return o
}

func (o LookupWebAppFtpAllowedSlotResultOutput) ToLookupWebAppFtpAllowedSlotResultOutputWithContext(ctx context.Context) LookupWebAppFtpAllowedSlotResultOutput {
	return o
}

// <code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.
func (o LookupWebAppFtpAllowedSlotResultOutput) Allow() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWebAppFtpAllowedSlotResult) bool { return v.Allow }).(pulumi.BoolOutput)
}

// Resource Id.
func (o LookupWebAppFtpAllowedSlotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppFtpAllowedSlotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupWebAppFtpAllowedSlotResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppFtpAllowedSlotResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o LookupWebAppFtpAllowedSlotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppFtpAllowedSlotResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupWebAppFtpAllowedSlotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppFtpAllowedSlotResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebAppFtpAllowedSlotResultOutput{})
}
