// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Description for Gets a hybrid connection configuration by its name.
//
// Uses Azure REST API version 2024-04-01.
//
// Other available API versions: 2016-08-01, 2018-02-01, 2018-11-01, 2019-08-01, 2020-06-01, 2020-09-01, 2020-10-01, 2020-12-01, 2021-01-01, 2021-01-15, 2021-02-01, 2021-03-01, 2022-03-01, 2022-09-01, 2023-01-01, 2023-12-01, 2024-11-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native web [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupWebAppRelayServiceConnectionSlot(ctx *pulumi.Context, args *LookupWebAppRelayServiceConnectionSlotArgs, opts ...pulumi.InvokeOption) (*LookupWebAppRelayServiceConnectionSlotResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWebAppRelayServiceConnectionSlotResult
	err := ctx.Invoke("azure-native:web:getWebAppRelayServiceConnectionSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebAppRelayServiceConnectionSlotArgs struct {
	// Name of the hybrid connection.
	EntityName string `pulumi:"entityName"`
	// Name of the app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will get a hybrid connection for the production slot.
	Slot string `pulumi:"slot"`
}

// Hybrid Connection for an App Service app.
type LookupWebAppRelayServiceConnectionSlotResult struct {
	// The Azure API version of the resource.
	AzureApiVersion        string  `pulumi:"azureApiVersion"`
	BiztalkUri             *string `pulumi:"biztalkUri"`
	EntityConnectionString *string `pulumi:"entityConnectionString"`
	EntityName             *string `pulumi:"entityName"`
	Hostname               *string `pulumi:"hostname"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name                     string  `pulumi:"name"`
	Port                     *int    `pulumi:"port"`
	ResourceConnectionString *string `pulumi:"resourceConnectionString"`
	ResourceType             *string `pulumi:"resourceType"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupWebAppRelayServiceConnectionSlotOutput(ctx *pulumi.Context, args LookupWebAppRelayServiceConnectionSlotOutputArgs, opts ...pulumi.InvokeOption) LookupWebAppRelayServiceConnectionSlotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWebAppRelayServiceConnectionSlotResultOutput, error) {
			args := v.(LookupWebAppRelayServiceConnectionSlotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:web:getWebAppRelayServiceConnectionSlot", args, LookupWebAppRelayServiceConnectionSlotResultOutput{}, options).(LookupWebAppRelayServiceConnectionSlotResultOutput), nil
		}).(LookupWebAppRelayServiceConnectionSlotResultOutput)
}

type LookupWebAppRelayServiceConnectionSlotOutputArgs struct {
	// Name of the hybrid connection.
	EntityName pulumi.StringInput `pulumi:"entityName"`
	// Name of the app.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will get a hybrid connection for the production slot.
	Slot pulumi.StringInput `pulumi:"slot"`
}

func (LookupWebAppRelayServiceConnectionSlotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppRelayServiceConnectionSlotArgs)(nil)).Elem()
}

// Hybrid Connection for an App Service app.
type LookupWebAppRelayServiceConnectionSlotResultOutput struct{ *pulumi.OutputState }

func (LookupWebAppRelayServiceConnectionSlotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppRelayServiceConnectionSlotResult)(nil)).Elem()
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) ToLookupWebAppRelayServiceConnectionSlotResultOutput() LookupWebAppRelayServiceConnectionSlotResultOutput {
	return o
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) ToLookupWebAppRelayServiceConnectionSlotResultOutputWithContext(ctx context.Context) LookupWebAppRelayServiceConnectionSlotResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupWebAppRelayServiceConnectionSlotResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) BiztalkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.BiztalkUri }).(pulumi.StringPtrOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) EntityConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.EntityConnectionString }).(pulumi.StringPtrOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.EntityName }).(pulumi.StringPtrOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o LookupWebAppRelayServiceConnectionSlotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupWebAppRelayServiceConnectionSlotResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o LookupWebAppRelayServiceConnectionSlotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) ResourceConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.ResourceConnectionString }).(pulumi.StringPtrOutput)
}

func (o LookupWebAppRelayServiceConnectionSlotResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupWebAppRelayServiceConnectionSlotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppRelayServiceConnectionSlotResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebAppRelayServiceConnectionSlotResultOutput{})
}
