// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240401

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configuration of App Service site logs.
type WebAppDiagnosticLogsConfigurationSlot struct {
	pulumi.CustomResourceState

	// Application logs configuration.
	ApplicationLogs ApplicationLogsConfigResponsePtrOutput `pulumi:"applicationLogs"`
	// Detailed error messages configuration.
	DetailedErrorMessages EnabledConfigResponsePtrOutput `pulumi:"detailedErrorMessages"`
	// Failed requests tracing configuration.
	FailedRequestsTracing EnabledConfigResponsePtrOutput `pulumi:"failedRequestsTracing"`
	// HTTP logs configuration.
	HttpLogs HttpLogsConfigResponsePtrOutput `pulumi:"httpLogs"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppDiagnosticLogsConfigurationSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppDiagnosticLogsConfigurationSlot(ctx *pulumi.Context,
	name string, args *WebAppDiagnosticLogsConfigurationSlotArgs, opts ...pulumi.ResourceOption) (*WebAppDiagnosticLogsConfigurationSlot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Slot == nil {
		return nil, errors.New("invalid value for required argument 'Slot'")
	}
	if args.ApplicationLogs != nil {
		args.ApplicationLogs = args.ApplicationLogs.ToApplicationLogsConfigPtrOutput().ApplyT(func(v *ApplicationLogsConfig) *ApplicationLogsConfig { return v.Defaults() }).(ApplicationLogsConfigPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:web/v20150801:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20160801:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20180201:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20181101:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20190801:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200601:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200901:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201001:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201201:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210101:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210115:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210201:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210301:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20220301:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20220901:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20230101:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20231201:WebAppDiagnosticLogsConfigurationSlot"),
		},
		{
			Type: pulumi.String("azure-native:web:WebAppDiagnosticLogsConfigurationSlot"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WebAppDiagnosticLogsConfigurationSlot
	err := ctx.RegisterResource("azure-native:web/v20240401:WebAppDiagnosticLogsConfigurationSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppDiagnosticLogsConfigurationSlot gets an existing WebAppDiagnosticLogsConfigurationSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppDiagnosticLogsConfigurationSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppDiagnosticLogsConfigurationSlotState, opts ...pulumi.ResourceOption) (*WebAppDiagnosticLogsConfigurationSlot, error) {
	var resource WebAppDiagnosticLogsConfigurationSlot
	err := ctx.ReadResource("azure-native:web/v20240401:WebAppDiagnosticLogsConfigurationSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppDiagnosticLogsConfigurationSlot resources.
type webAppDiagnosticLogsConfigurationSlotState struct {
}

type WebAppDiagnosticLogsConfigurationSlotState struct {
}

func (WebAppDiagnosticLogsConfigurationSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppDiagnosticLogsConfigurationSlotState)(nil)).Elem()
}

type webAppDiagnosticLogsConfigurationSlotArgs struct {
	// Application logs configuration.
	ApplicationLogs *ApplicationLogsConfig `pulumi:"applicationLogs"`
	// Detailed error messages configuration.
	DetailedErrorMessages *EnabledConfig `pulumi:"detailedErrorMessages"`
	// Failed requests tracing configuration.
	FailedRequestsTracing *EnabledConfig `pulumi:"failedRequestsTracing"`
	// HTTP logs configuration.
	HttpLogs *HttpLogsConfig `pulumi:"httpLogs"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Name of the app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the deployment slot. If a slot is not specified, the API will update the logging configuration for the production slot.
	Slot string `pulumi:"slot"`
}

// The set of arguments for constructing a WebAppDiagnosticLogsConfigurationSlot resource.
type WebAppDiagnosticLogsConfigurationSlotArgs struct {
	// Application logs configuration.
	ApplicationLogs ApplicationLogsConfigPtrInput
	// Detailed error messages configuration.
	DetailedErrorMessages EnabledConfigPtrInput
	// Failed requests tracing configuration.
	FailedRequestsTracing EnabledConfigPtrInput
	// HTTP logs configuration.
	HttpLogs HttpLogsConfigPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Name of the deployment slot. If a slot is not specified, the API will update the logging configuration for the production slot.
	Slot pulumi.StringInput
}

func (WebAppDiagnosticLogsConfigurationSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppDiagnosticLogsConfigurationSlotArgs)(nil)).Elem()
}

type WebAppDiagnosticLogsConfigurationSlotInput interface {
	pulumi.Input

	ToWebAppDiagnosticLogsConfigurationSlotOutput() WebAppDiagnosticLogsConfigurationSlotOutput
	ToWebAppDiagnosticLogsConfigurationSlotOutputWithContext(ctx context.Context) WebAppDiagnosticLogsConfigurationSlotOutput
}

func (*WebAppDiagnosticLogsConfigurationSlot) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppDiagnosticLogsConfigurationSlot)(nil)).Elem()
}

func (i *WebAppDiagnosticLogsConfigurationSlot) ToWebAppDiagnosticLogsConfigurationSlotOutput() WebAppDiagnosticLogsConfigurationSlotOutput {
	return i.ToWebAppDiagnosticLogsConfigurationSlotOutputWithContext(context.Background())
}

func (i *WebAppDiagnosticLogsConfigurationSlot) ToWebAppDiagnosticLogsConfigurationSlotOutputWithContext(ctx context.Context) WebAppDiagnosticLogsConfigurationSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppDiagnosticLogsConfigurationSlotOutput)
}

type WebAppDiagnosticLogsConfigurationSlotOutput struct{ *pulumi.OutputState }

func (WebAppDiagnosticLogsConfigurationSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppDiagnosticLogsConfigurationSlot)(nil)).Elem()
}

func (o WebAppDiagnosticLogsConfigurationSlotOutput) ToWebAppDiagnosticLogsConfigurationSlotOutput() WebAppDiagnosticLogsConfigurationSlotOutput {
	return o
}

func (o WebAppDiagnosticLogsConfigurationSlotOutput) ToWebAppDiagnosticLogsConfigurationSlotOutputWithContext(ctx context.Context) WebAppDiagnosticLogsConfigurationSlotOutput {
	return o
}

// Application logs configuration.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) ApplicationLogs() ApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) ApplicationLogsConfigResponsePtrOutput {
		return v.ApplicationLogs
	}).(ApplicationLogsConfigResponsePtrOutput)
}

// Detailed error messages configuration.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) DetailedErrorMessages() EnabledConfigResponsePtrOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) EnabledConfigResponsePtrOutput {
		return v.DetailedErrorMessages
	}).(EnabledConfigResponsePtrOutput)
}

// Failed requests tracing configuration.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) FailedRequestsTracing() EnabledConfigResponsePtrOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) EnabledConfigResponsePtrOutput {
		return v.FailedRequestsTracing
	}).(EnabledConfigResponsePtrOutput)
}

// HTTP logs configuration.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) HttpLogs() HttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) HttpLogsConfigResponsePtrOutput { return v.HttpLogs }).(HttpLogsConfigResponsePtrOutput)
}

// Kind of resource.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o WebAppDiagnosticLogsConfigurationSlotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppDiagnosticLogsConfigurationSlot) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WebAppDiagnosticLogsConfigurationSlotOutput{})
}
