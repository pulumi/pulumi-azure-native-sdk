// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Container of a site
func LookupWebAppSiteContainer(ctx *pulumi.Context, args *LookupWebAppSiteContainerArgs, opts ...pulumi.InvokeOption) (*LookupWebAppSiteContainerResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWebAppSiteContainerResult
	err := ctx.Invoke("azure-native:web/v20231201:getWebAppSiteContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebAppSiteContainerArgs struct {
	// Site Container Name
	ContainerName string `pulumi:"containerName"`
	// Name of the app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Container of a site
type LookupWebAppSiteContainerResult struct {
	// Auth Type
	AuthType *string `pulumi:"authType"`
	// Created Time
	CreatedTime string `pulumi:"createdTime"`
	// List of environment variables
	EnvironmentVariables []EnvironmentVariableResponse `pulumi:"environmentVariables"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Image Name
	Image string `pulumi:"image"`
	// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
	IsMain bool `pulumi:"isMain"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Last Modified Time
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Password Secret
	PasswordSecret *string `pulumi:"passwordSecret"`
	// StartUp Command
	StartUpCommand *string `pulumi:"startUpCommand"`
	// Target Port
	TargetPort *string `pulumi:"targetPort"`
	// Resource type.
	Type string `pulumi:"type"`
	// UserManagedIdentity ClientId
	UserManagedIdentityClientId *string `pulumi:"userManagedIdentityClientId"`
	// User Name
	UserName *string `pulumi:"userName"`
	// List of volume mounts
	VolumeMounts []VolumeMountResponse `pulumi:"volumeMounts"`
}

func LookupWebAppSiteContainerOutput(ctx *pulumi.Context, args LookupWebAppSiteContainerOutputArgs, opts ...pulumi.InvokeOption) LookupWebAppSiteContainerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebAppSiteContainerResult, error) {
			args := v.(LookupWebAppSiteContainerArgs)
			r, err := LookupWebAppSiteContainer(ctx, &args, opts...)
			var s LookupWebAppSiteContainerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebAppSiteContainerResultOutput)
}

type LookupWebAppSiteContainerOutputArgs struct {
	// Site Container Name
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Name of the app.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupWebAppSiteContainerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppSiteContainerArgs)(nil)).Elem()
}

// Container of a site
type LookupWebAppSiteContainerResultOutput struct{ *pulumi.OutputState }

func (LookupWebAppSiteContainerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAppSiteContainerResult)(nil)).Elem()
}

func (o LookupWebAppSiteContainerResultOutput) ToLookupWebAppSiteContainerResultOutput() LookupWebAppSiteContainerResultOutput {
	return o
}

func (o LookupWebAppSiteContainerResultOutput) ToLookupWebAppSiteContainerResultOutputWithContext(ctx context.Context) LookupWebAppSiteContainerResultOutput {
	return o
}

// Auth Type
func (o LookupWebAppSiteContainerResultOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Created Time
func (o LookupWebAppSiteContainerResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// List of environment variables
func (o LookupWebAppSiteContainerResultOutput) EnvironmentVariables() EnvironmentVariableResponseArrayOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) []EnvironmentVariableResponse { return v.EnvironmentVariables }).(EnvironmentVariableResponseArrayOutput)
}

// Resource Id.
func (o LookupWebAppSiteContainerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Image Name
func (o LookupWebAppSiteContainerResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) string { return v.Image }).(pulumi.StringOutput)
}

// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
func (o LookupWebAppSiteContainerResultOutput) IsMain() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) bool { return v.IsMain }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o LookupWebAppSiteContainerResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Last Modified Time
func (o LookupWebAppSiteContainerResultOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Resource Name.
func (o LookupWebAppSiteContainerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Password Secret
func (o LookupWebAppSiteContainerResultOutput) PasswordSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.PasswordSecret }).(pulumi.StringPtrOutput)
}

// StartUp Command
func (o LookupWebAppSiteContainerResultOutput) StartUpCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.StartUpCommand }).(pulumi.StringPtrOutput)
}

// Target Port
func (o LookupWebAppSiteContainerResultOutput) TargetPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.TargetPort }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupWebAppSiteContainerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) string { return v.Type }).(pulumi.StringOutput)
}

// UserManagedIdentity ClientId
func (o LookupWebAppSiteContainerResultOutput) UserManagedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.UserManagedIdentityClientId }).(pulumi.StringPtrOutput)
}

// User Name
func (o LookupWebAppSiteContainerResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// List of volume mounts
func (o LookupWebAppSiteContainerResultOutput) VolumeMounts() VolumeMountResponseArrayOutput {
	return o.ApplyT(func(v LookupWebAppSiteContainerResult) []VolumeMountResponse { return v.VolumeMounts }).(VolumeMountResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebAppSiteContainerResultOutput{})
}
