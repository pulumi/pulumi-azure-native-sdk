// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:web/v20230101:AppServiceEnvironment":
		r = &AppServiceEnvironment{}
	case "azure-native:web/v20230101:AppServiceEnvironmentAseCustomDnsSuffixConfiguration":
		r = &AppServiceEnvironmentAseCustomDnsSuffixConfiguration{}
	case "azure-native:web/v20230101:AppServiceEnvironmentPrivateEndpointConnection":
		r = &AppServiceEnvironmentPrivateEndpointConnection{}
	case "azure-native:web/v20230101:AppServicePlan":
		r = &AppServicePlan{}
	case "azure-native:web/v20230101:AppServicePlanRouteForVnet":
		r = &AppServicePlanRouteForVnet{}
	case "azure-native:web/v20230101:Certificate":
		r = &Certificate{}
	case "azure-native:web/v20230101:ContainerApp":
		r = &ContainerApp{}
	case "azure-native:web/v20230101:KubeEnvironment":
		r = &KubeEnvironment{}
	case "azure-native:web/v20230101:StaticSite":
		r = &StaticSite{}
	case "azure-native:web/v20230101:StaticSiteBuildDatabaseConnection":
		r = &StaticSiteBuildDatabaseConnection{}
	case "azure-native:web/v20230101:StaticSiteCustomDomain":
		r = &StaticSiteCustomDomain{}
	case "azure-native:web/v20230101:StaticSiteDatabaseConnection":
		r = &StaticSiteDatabaseConnection{}
	case "azure-native:web/v20230101:StaticSiteLinkedBackend":
		r = &StaticSiteLinkedBackend{}
	case "azure-native:web/v20230101:StaticSiteLinkedBackendForBuild":
		r = &StaticSiteLinkedBackendForBuild{}
	case "azure-native:web/v20230101:StaticSitePrivateEndpointConnection":
		r = &StaticSitePrivateEndpointConnection{}
	case "azure-native:web/v20230101:StaticSiteUserProvidedFunctionAppForStaticSite":
		r = &StaticSiteUserProvidedFunctionAppForStaticSite{}
	case "azure-native:web/v20230101:StaticSiteUserProvidedFunctionAppForStaticSiteBuild":
		r = &StaticSiteUserProvidedFunctionAppForStaticSiteBuild{}
	case "azure-native:web/v20230101:WebApp":
		r = &WebApp{}
	case "azure-native:web/v20230101:WebAppApplicationSettings":
		r = &WebAppApplicationSettings{}
	case "azure-native:web/v20230101:WebAppApplicationSettingsSlot":
		r = &WebAppApplicationSettingsSlot{}
	case "azure-native:web/v20230101:WebAppAuthSettings":
		r = &WebAppAuthSettings{}
	case "azure-native:web/v20230101:WebAppAuthSettingsSlot":
		r = &WebAppAuthSettingsSlot{}
	case "azure-native:web/v20230101:WebAppAzureStorageAccounts":
		r = &WebAppAzureStorageAccounts{}
	case "azure-native:web/v20230101:WebAppAzureStorageAccountsSlot":
		r = &WebAppAzureStorageAccountsSlot{}
	case "azure-native:web/v20230101:WebAppBackupConfiguration":
		r = &WebAppBackupConfiguration{}
	case "azure-native:web/v20230101:WebAppBackupConfigurationSlot":
		r = &WebAppBackupConfigurationSlot{}
	case "azure-native:web/v20230101:WebAppConnectionStrings":
		r = &WebAppConnectionStrings{}
	case "azure-native:web/v20230101:WebAppConnectionStringsSlot":
		r = &WebAppConnectionStringsSlot{}
	case "azure-native:web/v20230101:WebAppDeployment":
		r = &WebAppDeployment{}
	case "azure-native:web/v20230101:WebAppDeploymentSlot":
		r = &WebAppDeploymentSlot{}
	case "azure-native:web/v20230101:WebAppDiagnosticLogsConfiguration":
		r = &WebAppDiagnosticLogsConfiguration{}
	case "azure-native:web/v20230101:WebAppDiagnosticLogsConfigurationSlot":
		r = &WebAppDiagnosticLogsConfigurationSlot{}
	case "azure-native:web/v20230101:WebAppDomainOwnershipIdentifier":
		r = &WebAppDomainOwnershipIdentifier{}
	case "azure-native:web/v20230101:WebAppDomainOwnershipIdentifierSlot":
		r = &WebAppDomainOwnershipIdentifierSlot{}
	case "azure-native:web/v20230101:WebAppFtpAllowed":
		r = &WebAppFtpAllowed{}
	case "azure-native:web/v20230101:WebAppFtpAllowedSlot":
		r = &WebAppFtpAllowedSlot{}
	case "azure-native:web/v20230101:WebAppFunction":
		r = &WebAppFunction{}
	case "azure-native:web/v20230101:WebAppHostNameBinding":
		r = &WebAppHostNameBinding{}
	case "azure-native:web/v20230101:WebAppHostNameBindingSlot":
		r = &WebAppHostNameBindingSlot{}
	case "azure-native:web/v20230101:WebAppHybridConnection":
		r = &WebAppHybridConnection{}
	case "azure-native:web/v20230101:WebAppHybridConnectionSlot":
		r = &WebAppHybridConnectionSlot{}
	case "azure-native:web/v20230101:WebAppInstanceFunctionSlot":
		r = &WebAppInstanceFunctionSlot{}
	case "azure-native:web/v20230101:WebAppMetadata":
		r = &WebAppMetadata{}
	case "azure-native:web/v20230101:WebAppMetadataSlot":
		r = &WebAppMetadataSlot{}
	case "azure-native:web/v20230101:WebAppPremierAddOn":
		r = &WebAppPremierAddOn{}
	case "azure-native:web/v20230101:WebAppPremierAddOnSlot":
		r = &WebAppPremierAddOnSlot{}
	case "azure-native:web/v20230101:WebAppPrivateEndpointConnection":
		r = &WebAppPrivateEndpointConnection{}
	case "azure-native:web/v20230101:WebAppPrivateEndpointConnectionSlot":
		r = &WebAppPrivateEndpointConnectionSlot{}
	case "azure-native:web/v20230101:WebAppPublicCertificate":
		r = &WebAppPublicCertificate{}
	case "azure-native:web/v20230101:WebAppPublicCertificateSlot":
		r = &WebAppPublicCertificateSlot{}
	case "azure-native:web/v20230101:WebAppRelayServiceConnection":
		r = &WebAppRelayServiceConnection{}
	case "azure-native:web/v20230101:WebAppRelayServiceConnectionSlot":
		r = &WebAppRelayServiceConnectionSlot{}
	case "azure-native:web/v20230101:WebAppScmAllowed":
		r = &WebAppScmAllowed{}
	case "azure-native:web/v20230101:WebAppScmAllowedSlot":
		r = &WebAppScmAllowedSlot{}
	case "azure-native:web/v20230101:WebAppSiteExtension":
		r = &WebAppSiteExtension{}
	case "azure-native:web/v20230101:WebAppSiteExtensionSlot":
		r = &WebAppSiteExtensionSlot{}
	case "azure-native:web/v20230101:WebAppSitePushSettings":
		r = &WebAppSitePushSettings{}
	case "azure-native:web/v20230101:WebAppSitePushSettingsSlot":
		r = &WebAppSitePushSettingsSlot{}
	case "azure-native:web/v20230101:WebAppSlot":
		r = &WebAppSlot{}
	case "azure-native:web/v20230101:WebAppSlotConfigurationNames":
		r = &WebAppSlotConfigurationNames{}
	case "azure-native:web/v20230101:WebAppSourceControl":
		r = &WebAppSourceControl{}
	case "azure-native:web/v20230101:WebAppSourceControlSlot":
		r = &WebAppSourceControlSlot{}
	case "azure-native:web/v20230101:WebAppSwiftVirtualNetworkConnection":
		r = &WebAppSwiftVirtualNetworkConnection{}
	case "azure-native:web/v20230101:WebAppSwiftVirtualNetworkConnectionSlot":
		r = &WebAppSwiftVirtualNetworkConnectionSlot{}
	case "azure-native:web/v20230101:WebAppVnetConnection":
		r = &WebAppVnetConnection{}
	case "azure-native:web/v20230101:WebAppVnetConnectionSlot":
		r = &WebAppVnetConnectionSlot{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"web/v20230101",
		&module{version},
	)
}
