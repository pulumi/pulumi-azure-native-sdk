// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Publishing Credentials Policies parameters.
type WebAppFtpAllowedSlot struct {
	pulumi.CustomResourceState

	// <code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.
	Allow pulumi.BoolOutput `pulumi:"allow"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebAppFtpAllowedSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppFtpAllowedSlot(ctx *pulumi.Context,
	name string, args *WebAppFtpAllowedSlotArgs, opts ...pulumi.ResourceOption) (*WebAppFtpAllowedSlot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Allow == nil {
		return nil, errors.New("invalid value for required argument 'Allow'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Slot == nil {
		return nil, errors.New("invalid value for required argument 'Slot'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:web:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201201:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210115:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210201:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210301:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20220301:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20220901:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20230101:WebAppFtpAllowedSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20231201:WebAppFtpAllowedSlot"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WebAppFtpAllowedSlot
	err := ctx.RegisterResource("azure-native:web/v20210101:WebAppFtpAllowedSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppFtpAllowedSlot gets an existing WebAppFtpAllowedSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppFtpAllowedSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppFtpAllowedSlotState, opts ...pulumi.ResourceOption) (*WebAppFtpAllowedSlot, error) {
	var resource WebAppFtpAllowedSlot
	err := ctx.ReadResource("azure-native:web/v20210101:WebAppFtpAllowedSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppFtpAllowedSlot resources.
type webAppFtpAllowedSlotState struct {
}

type WebAppFtpAllowedSlotState struct {
}

func (WebAppFtpAllowedSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppFtpAllowedSlotState)(nil)).Elem()
}

type webAppFtpAllowedSlotArgs struct {
	// <code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.
	Allow bool `pulumi:"allow"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Name of the app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	Slot              string `pulumi:"slot"`
}

// The set of arguments for constructing a WebAppFtpAllowedSlot resource.
type WebAppFtpAllowedSlotArgs struct {
	// <code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.
	Allow pulumi.BoolInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	Slot              pulumi.StringInput
}

func (WebAppFtpAllowedSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppFtpAllowedSlotArgs)(nil)).Elem()
}

type WebAppFtpAllowedSlotInput interface {
	pulumi.Input

	ToWebAppFtpAllowedSlotOutput() WebAppFtpAllowedSlotOutput
	ToWebAppFtpAllowedSlotOutputWithContext(ctx context.Context) WebAppFtpAllowedSlotOutput
}

func (*WebAppFtpAllowedSlot) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppFtpAllowedSlot)(nil)).Elem()
}

func (i *WebAppFtpAllowedSlot) ToWebAppFtpAllowedSlotOutput() WebAppFtpAllowedSlotOutput {
	return i.ToWebAppFtpAllowedSlotOutputWithContext(context.Background())
}

func (i *WebAppFtpAllowedSlot) ToWebAppFtpAllowedSlotOutputWithContext(ctx context.Context) WebAppFtpAllowedSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppFtpAllowedSlotOutput)
}

type WebAppFtpAllowedSlotOutput struct{ *pulumi.OutputState }

func (WebAppFtpAllowedSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppFtpAllowedSlot)(nil)).Elem()
}

func (o WebAppFtpAllowedSlotOutput) ToWebAppFtpAllowedSlotOutput() WebAppFtpAllowedSlotOutput {
	return o
}

func (o WebAppFtpAllowedSlotOutput) ToWebAppFtpAllowedSlotOutputWithContext(ctx context.Context) WebAppFtpAllowedSlotOutput {
	return o
}

// <code>true</code> to allow access to a publishing method; otherwise, <code>false</code>.
func (o WebAppFtpAllowedSlotOutput) Allow() pulumi.BoolOutput {
	return o.ApplyT(func(v *WebAppFtpAllowedSlot) pulumi.BoolOutput { return v.Allow }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o WebAppFtpAllowedSlotOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppFtpAllowedSlot) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppFtpAllowedSlotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppFtpAllowedSlot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o WebAppFtpAllowedSlotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppFtpAllowedSlot) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WebAppFtpAllowedSlotOutput{})
}
