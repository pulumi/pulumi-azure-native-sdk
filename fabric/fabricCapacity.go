// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fabric Capacity resource
//
// Uses Azure REST API version 2023-11-01. In version 2.x of the Azure Native provider, it used API version 2023-11-01.
//
// Other available API versions: 2025-01-15-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native fabric [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type FabricCapacity struct {
	pulumi.CustomResourceState

	// The capacity administration
	Administration CapacityAdministrationResponseOutput `pulumi:"administration"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The current deployment state of Microsoft Fabric resource. The provisioningState is to indicate states for resource provisioning.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The SKU details
	Sku RpSkuResponseOutput `pulumi:"sku"`
	// The current state of Microsoft Fabric resource. The state is to indicate more states outside of resource provisioning.
	State pulumi.StringOutput `pulumi:"state"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFabricCapacity registers a new resource with the given unique name, arguments, and options.
func NewFabricCapacity(ctx *pulumi.Context,
	name string, args *FabricCapacityArgs, opts ...pulumi.ResourceOption) (*FabricCapacity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Administration == nil {
		return nil, errors.New("invalid value for required argument 'Administration'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:fabric/v20231101:FabricCapacity"),
		},
		{
			Type: pulumi.String("azure-native:fabric/v20250115preview:FabricCapacity"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource FabricCapacity
	err := ctx.RegisterResource("azure-native:fabric:FabricCapacity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFabricCapacity gets an existing FabricCapacity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFabricCapacity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FabricCapacityState, opts ...pulumi.ResourceOption) (*FabricCapacity, error) {
	var resource FabricCapacity
	err := ctx.ReadResource("azure-native:fabric:FabricCapacity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FabricCapacity resources.
type fabricCapacityState struct {
}

type FabricCapacityState struct {
}

func (FabricCapacityState) ElementType() reflect.Type {
	return reflect.TypeOf((*fabricCapacityState)(nil)).Elem()
}

type fabricCapacityArgs struct {
	// The capacity administration
	Administration CapacityAdministration `pulumi:"administration"`
	// The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a maximum of 63.
	CapacityName *string `pulumi:"capacityName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU details
	Sku RpSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a FabricCapacity resource.
type FabricCapacityArgs struct {
	// The capacity administration
	Administration CapacityAdministrationInput
	// The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a maximum of 63.
	CapacityName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The SKU details
	Sku RpSkuInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (FabricCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fabricCapacityArgs)(nil)).Elem()
}

type FabricCapacityInput interface {
	pulumi.Input

	ToFabricCapacityOutput() FabricCapacityOutput
	ToFabricCapacityOutputWithContext(ctx context.Context) FabricCapacityOutput
}

func (*FabricCapacity) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCapacity)(nil)).Elem()
}

func (i *FabricCapacity) ToFabricCapacityOutput() FabricCapacityOutput {
	return i.ToFabricCapacityOutputWithContext(context.Background())
}

func (i *FabricCapacity) ToFabricCapacityOutputWithContext(ctx context.Context) FabricCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCapacityOutput)
}

type FabricCapacityOutput struct{ *pulumi.OutputState }

func (FabricCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCapacity)(nil)).Elem()
}

func (o FabricCapacityOutput) ToFabricCapacityOutput() FabricCapacityOutput {
	return o
}

func (o FabricCapacityOutput) ToFabricCapacityOutputWithContext(ctx context.Context) FabricCapacityOutput {
	return o
}

// The capacity administration
func (o FabricCapacityOutput) Administration() CapacityAdministrationResponseOutput {
	return o.ApplyT(func(v *FabricCapacity) CapacityAdministrationResponseOutput { return v.Administration }).(CapacityAdministrationResponseOutput)
}

// The Azure API version of the resource.
func (o FabricCapacityOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o FabricCapacityOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o FabricCapacityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current deployment state of Microsoft Fabric resource. The provisioningState is to indicate states for resource provisioning.
func (o FabricCapacityOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SKU details
func (o FabricCapacityOutput) Sku() RpSkuResponseOutput {
	return o.ApplyT(func(v *FabricCapacity) RpSkuResponseOutput { return v.Sku }).(RpSkuResponseOutput)
}

// The current state of Microsoft Fabric resource. The state is to indicate more states outside of resource provisioning.
func (o FabricCapacityOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o FabricCapacityOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *FabricCapacity) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o FabricCapacityOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o FabricCapacityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FabricCapacity) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FabricCapacityOutput{})
}
