// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The name of the Azure pricing tier to which the SKU applies.
type RpSkuTier string

const (
	// Fabric tier
	RpSkuTierFabric = RpSkuTier("Fabric")
)

func (RpSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*RpSkuTier)(nil)).Elem()
}

func (e RpSkuTier) ToRpSkuTierOutput() RpSkuTierOutput {
	return pulumi.ToOutput(e).(RpSkuTierOutput)
}

func (e RpSkuTier) ToRpSkuTierOutputWithContext(ctx context.Context) RpSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RpSkuTierOutput)
}

func (e RpSkuTier) ToRpSkuTierPtrOutput() RpSkuTierPtrOutput {
	return e.ToRpSkuTierPtrOutputWithContext(context.Background())
}

func (e RpSkuTier) ToRpSkuTierPtrOutputWithContext(ctx context.Context) RpSkuTierPtrOutput {
	return RpSkuTier(e).ToRpSkuTierOutputWithContext(ctx).ToRpSkuTierPtrOutputWithContext(ctx)
}

func (e RpSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RpSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RpSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RpSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RpSkuTierOutput struct{ *pulumi.OutputState }

func (RpSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RpSkuTier)(nil)).Elem()
}

func (o RpSkuTierOutput) ToRpSkuTierOutput() RpSkuTierOutput {
	return o
}

func (o RpSkuTierOutput) ToRpSkuTierOutputWithContext(ctx context.Context) RpSkuTierOutput {
	return o
}

func (o RpSkuTierOutput) ToRpSkuTierPtrOutput() RpSkuTierPtrOutput {
	return o.ToRpSkuTierPtrOutputWithContext(context.Background())
}

func (o RpSkuTierOutput) ToRpSkuTierPtrOutputWithContext(ctx context.Context) RpSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RpSkuTier) *RpSkuTier {
		return &v
	}).(RpSkuTierPtrOutput)
}

func (o RpSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RpSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RpSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RpSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RpSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RpSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RpSkuTierPtrOutput struct{ *pulumi.OutputState }

func (RpSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RpSkuTier)(nil)).Elem()
}

func (o RpSkuTierPtrOutput) ToRpSkuTierPtrOutput() RpSkuTierPtrOutput {
	return o
}

func (o RpSkuTierPtrOutput) ToRpSkuTierPtrOutputWithContext(ctx context.Context) RpSkuTierPtrOutput {
	return o
}

func (o RpSkuTierPtrOutput) Elem() RpSkuTierOutput {
	return o.ApplyT(func(v *RpSkuTier) RpSkuTier {
		if v != nil {
			return *v
		}
		var ret RpSkuTier
		return ret
	}).(RpSkuTierOutput)
}

func (o RpSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RpSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RpSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RpSkuTierInput is an input type that accepts values of the RpSkuTier enum
// A concrete instance of `RpSkuTierInput` can be one of the following:
//
//	RpSkuTierFabric
type RpSkuTierInput interface {
	pulumi.Input

	ToRpSkuTierOutput() RpSkuTierOutput
	ToRpSkuTierOutputWithContext(context.Context) RpSkuTierOutput
}

var rpSkuTierPtrType = reflect.TypeOf((**RpSkuTier)(nil)).Elem()

type RpSkuTierPtrInput interface {
	pulumi.Input

	ToRpSkuTierPtrOutput() RpSkuTierPtrOutput
	ToRpSkuTierPtrOutputWithContext(context.Context) RpSkuTierPtrOutput
}

type rpSkuTierPtr string

func RpSkuTierPtr(v string) RpSkuTierPtrInput {
	return (*rpSkuTierPtr)(&v)
}

func (*rpSkuTierPtr) ElementType() reflect.Type {
	return rpSkuTierPtrType
}

func (in *rpSkuTierPtr) ToRpSkuTierPtrOutput() RpSkuTierPtrOutput {
	return pulumi.ToOutput(in).(RpSkuTierPtrOutput)
}

func (in *rpSkuTierPtr) ToRpSkuTierPtrOutputWithContext(ctx context.Context) RpSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RpSkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RpSkuTierOutput{})
	pulumi.RegisterOutputType(RpSkuTierPtrOutput{})
}
