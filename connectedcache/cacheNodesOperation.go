// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connectedcache

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Concrete tracked resource types can be created by aliasing this type using a specific property type.
// Azure REST API version: 2023-05-01-preview.
type CacheNodesOperation struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties CacheNodeOldResponseResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCacheNodesOperation registers a new resource with the given unique name, arguments, and options.
func NewCacheNodesOperation(ctx *pulumi.Context,
	name string, args *CacheNodesOperationArgs, opts ...pulumi.ResourceOption) (*CacheNodesOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:connectedcache/v20230501preview:CacheNodesOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CacheNodesOperation
	err := ctx.RegisterResource("azure-native:connectedcache:CacheNodesOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCacheNodesOperation gets an existing CacheNodesOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCacheNodesOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CacheNodesOperationState, opts ...pulumi.ResourceOption) (*CacheNodesOperation, error) {
	var resource CacheNodesOperation
	err := ctx.ReadResource("azure-native:connectedcache:CacheNodesOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CacheNodesOperation resources.
type cacheNodesOperationState struct {
}

type CacheNodesOperationState struct {
}

func (CacheNodesOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*cacheNodesOperationState)(nil)).Elem()
}

type cacheNodesOperationArgs struct {
	// Name of the Customer resource
	CustomerResourceName *string `pulumi:"customerResourceName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The resource-specific properties for this resource.
	Properties *CacheNodeOldResponse `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CacheNodesOperation resource.
type CacheNodesOperationArgs struct {
	// Name of the Customer resource
	CustomerResourceName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties CacheNodeOldResponsePtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CacheNodesOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cacheNodesOperationArgs)(nil)).Elem()
}

type CacheNodesOperationInput interface {
	pulumi.Input

	ToCacheNodesOperationOutput() CacheNodesOperationOutput
	ToCacheNodesOperationOutputWithContext(ctx context.Context) CacheNodesOperationOutput
}

func (*CacheNodesOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheNodesOperation)(nil)).Elem()
}

func (i *CacheNodesOperation) ToCacheNodesOperationOutput() CacheNodesOperationOutput {
	return i.ToCacheNodesOperationOutputWithContext(context.Background())
}

func (i *CacheNodesOperation) ToCacheNodesOperationOutputWithContext(ctx context.Context) CacheNodesOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheNodesOperationOutput)
}

type CacheNodesOperationOutput struct{ *pulumi.OutputState }

func (CacheNodesOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheNodesOperation)(nil)).Elem()
}

func (o CacheNodesOperationOutput) ToCacheNodesOperationOutput() CacheNodesOperationOutput {
	return o
}

func (o CacheNodesOperationOutput) ToCacheNodesOperationOutputWithContext(ctx context.Context) CacheNodesOperationOutput {
	return o
}

// The geo-location where the resource lives
func (o CacheNodesOperationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CacheNodesOperation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o CacheNodesOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CacheNodesOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o CacheNodesOperationOutput) Properties() CacheNodeOldResponseResponseOutput {
	return o.ApplyT(func(v *CacheNodesOperation) CacheNodeOldResponseResponseOutput { return v.Properties }).(CacheNodeOldResponseResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CacheNodesOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CacheNodesOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CacheNodesOperationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CacheNodesOperation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CacheNodesOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CacheNodesOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CacheNodesOperationOutput{})
}
