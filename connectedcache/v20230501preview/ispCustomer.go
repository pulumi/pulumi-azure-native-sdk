// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230501preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents the high level Nodes needed to provision isp customer resources
type IspCustomer struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties CustomerPropertyResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIspCustomer registers a new resource with the given unique name, arguments, and options.
func NewIspCustomer(ctx *pulumi.Context,
	name string, args *IspCustomerArgs, opts ...pulumi.ResourceOption) (*IspCustomer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:connectedcache:IspCustomer"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource IspCustomer
	err := ctx.RegisterResource("azure-native:connectedcache/v20230501preview:IspCustomer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIspCustomer gets an existing IspCustomer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIspCustomer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IspCustomerState, opts ...pulumi.ResourceOption) (*IspCustomer, error) {
	var resource IspCustomer
	err := ctx.ReadResource("azure-native:connectedcache/v20230501preview:IspCustomer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IspCustomer resources.
type ispCustomerState struct {
}

type IspCustomerState struct {
}

func (IspCustomerState) ElementType() reflect.Type {
	return reflect.TypeOf((*ispCustomerState)(nil)).Elem()
}

type ispCustomerArgs struct {
	// Name of the Customer resource
	CustomerResourceName *string `pulumi:"customerResourceName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The resource-specific properties for this resource.
	Properties *CustomerProperty `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IspCustomer resource.
type IspCustomerArgs struct {
	// Name of the Customer resource
	CustomerResourceName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties CustomerPropertyPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (IspCustomerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ispCustomerArgs)(nil)).Elem()
}

type IspCustomerInput interface {
	pulumi.Input

	ToIspCustomerOutput() IspCustomerOutput
	ToIspCustomerOutputWithContext(ctx context.Context) IspCustomerOutput
}

func (*IspCustomer) ElementType() reflect.Type {
	return reflect.TypeOf((**IspCustomer)(nil)).Elem()
}

func (i *IspCustomer) ToIspCustomerOutput() IspCustomerOutput {
	return i.ToIspCustomerOutputWithContext(context.Background())
}

func (i *IspCustomer) ToIspCustomerOutputWithContext(ctx context.Context) IspCustomerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IspCustomerOutput)
}

type IspCustomerOutput struct{ *pulumi.OutputState }

func (IspCustomerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IspCustomer)(nil)).Elem()
}

func (o IspCustomerOutput) ToIspCustomerOutput() IspCustomerOutput {
	return o
}

func (o IspCustomerOutput) ToIspCustomerOutputWithContext(ctx context.Context) IspCustomerOutput {
	return o
}

// The geo-location where the resource lives
func (o IspCustomerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *IspCustomer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o IspCustomerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IspCustomer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o IspCustomerOutput) Properties() CustomerPropertyResponseOutput {
	return o.ApplyT(func(v *IspCustomer) CustomerPropertyResponseOutput { return v.Properties }).(CustomerPropertyResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o IspCustomerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *IspCustomer) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o IspCustomerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IspCustomer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o IspCustomerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IspCustomer) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IspCustomerOutput{})
}
