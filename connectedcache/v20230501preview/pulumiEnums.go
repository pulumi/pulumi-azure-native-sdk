// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Auto Update Ring Type which is slow or fast etc.
type AutoUpdateRingType string

const (
	// customer selection of preview update install mcc on their physical vm
	AutoUpdateRingTypePreview = AutoUpdateRingType("Preview")
	// customer selection of slow update to install mcc on their physical vm
	AutoUpdateRingTypeSlow = AutoUpdateRingType("Slow")
	// customer selection of fast / auto update to install mcc on their physical vm
	AutoUpdateRingTypeFast = AutoUpdateRingType("Fast")
)

func (AutoUpdateRingType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoUpdateRingType)(nil)).Elem()
}

func (e AutoUpdateRingType) ToAutoUpdateRingTypeOutput() AutoUpdateRingTypeOutput {
	return pulumi.ToOutput(e).(AutoUpdateRingTypeOutput)
}

func (e AutoUpdateRingType) ToAutoUpdateRingTypeOutputWithContext(ctx context.Context) AutoUpdateRingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoUpdateRingTypeOutput)
}

func (e AutoUpdateRingType) ToAutoUpdateRingTypePtrOutput() AutoUpdateRingTypePtrOutput {
	return e.ToAutoUpdateRingTypePtrOutputWithContext(context.Background())
}

func (e AutoUpdateRingType) ToAutoUpdateRingTypePtrOutputWithContext(ctx context.Context) AutoUpdateRingTypePtrOutput {
	return AutoUpdateRingType(e).ToAutoUpdateRingTypeOutputWithContext(ctx).ToAutoUpdateRingTypePtrOutputWithContext(ctx)
}

func (e AutoUpdateRingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoUpdateRingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoUpdateRingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoUpdateRingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoUpdateRingTypeOutput struct{ *pulumi.OutputState }

func (AutoUpdateRingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoUpdateRingType)(nil)).Elem()
}

func (o AutoUpdateRingTypeOutput) ToAutoUpdateRingTypeOutput() AutoUpdateRingTypeOutput {
	return o
}

func (o AutoUpdateRingTypeOutput) ToAutoUpdateRingTypeOutputWithContext(ctx context.Context) AutoUpdateRingTypeOutput {
	return o
}

func (o AutoUpdateRingTypeOutput) ToAutoUpdateRingTypePtrOutput() AutoUpdateRingTypePtrOutput {
	return o.ToAutoUpdateRingTypePtrOutputWithContext(context.Background())
}

func (o AutoUpdateRingTypeOutput) ToAutoUpdateRingTypePtrOutputWithContext(ctx context.Context) AutoUpdateRingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoUpdateRingType) *AutoUpdateRingType {
		return &v
	}).(AutoUpdateRingTypePtrOutput)
}

func (o AutoUpdateRingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoUpdateRingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoUpdateRingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoUpdateRingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoUpdateRingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoUpdateRingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoUpdateRingTypePtrOutput struct{ *pulumi.OutputState }

func (AutoUpdateRingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoUpdateRingType)(nil)).Elem()
}

func (o AutoUpdateRingTypePtrOutput) ToAutoUpdateRingTypePtrOutput() AutoUpdateRingTypePtrOutput {
	return o
}

func (o AutoUpdateRingTypePtrOutput) ToAutoUpdateRingTypePtrOutputWithContext(ctx context.Context) AutoUpdateRingTypePtrOutput {
	return o
}

func (o AutoUpdateRingTypePtrOutput) Elem() AutoUpdateRingTypeOutput {
	return o.ApplyT(func(v *AutoUpdateRingType) AutoUpdateRingType {
		if v != nil {
			return *v
		}
		var ret AutoUpdateRingType
		return ret
	}).(AutoUpdateRingTypeOutput)
}

func (o AutoUpdateRingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoUpdateRingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoUpdateRingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoUpdateRingTypeInput is an input type that accepts values of the AutoUpdateRingType enum
// A concrete instance of `AutoUpdateRingTypeInput` can be one of the following:
//
//	AutoUpdateRingTypePreview
//	AutoUpdateRingTypeSlow
//	AutoUpdateRingTypeFast
type AutoUpdateRingTypeInput interface {
	pulumi.Input

	ToAutoUpdateRingTypeOutput() AutoUpdateRingTypeOutput
	ToAutoUpdateRingTypeOutputWithContext(context.Context) AutoUpdateRingTypeOutput
}

var autoUpdateRingTypePtrType = reflect.TypeOf((**AutoUpdateRingType)(nil)).Elem()

type AutoUpdateRingTypePtrInput interface {
	pulumi.Input

	ToAutoUpdateRingTypePtrOutput() AutoUpdateRingTypePtrOutput
	ToAutoUpdateRingTypePtrOutputWithContext(context.Context) AutoUpdateRingTypePtrOutput
}

type autoUpdateRingTypePtr string

func AutoUpdateRingTypePtr(v string) AutoUpdateRingTypePtrInput {
	return (*autoUpdateRingTypePtr)(&v)
}

func (*autoUpdateRingTypePtr) ElementType() reflect.Type {
	return autoUpdateRingTypePtrType
}

func (in *autoUpdateRingTypePtr) ToAutoUpdateRingTypePtrOutput() AutoUpdateRingTypePtrOutput {
	return pulumi.ToOutput(in).(AutoUpdateRingTypePtrOutput)
}

func (in *autoUpdateRingTypePtr) ToAutoUpdateRingTypePtrOutputWithContext(ctx context.Context) AutoUpdateRingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoUpdateRingTypePtrOutput)
}

// Customer resource transit state.
type CustomerTransitState string

const (
	// do not have transit
	CustomerTransitStateNoTransit = CustomerTransitState("NoTransit")
	// transit provider and have own subscribers
	CustomerTransitStateCombinedTransit = CustomerTransitState("CombinedTransit")
	// pure transit provider or network service provider
	CustomerTransitStateTransitOnly = CustomerTransitState("TransitOnly")
)

func (CustomerTransitState) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerTransitState)(nil)).Elem()
}

func (e CustomerTransitState) ToCustomerTransitStateOutput() CustomerTransitStateOutput {
	return pulumi.ToOutput(e).(CustomerTransitStateOutput)
}

func (e CustomerTransitState) ToCustomerTransitStateOutputWithContext(ctx context.Context) CustomerTransitStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CustomerTransitStateOutput)
}

func (e CustomerTransitState) ToCustomerTransitStatePtrOutput() CustomerTransitStatePtrOutput {
	return e.ToCustomerTransitStatePtrOutputWithContext(context.Background())
}

func (e CustomerTransitState) ToCustomerTransitStatePtrOutputWithContext(ctx context.Context) CustomerTransitStatePtrOutput {
	return CustomerTransitState(e).ToCustomerTransitStateOutputWithContext(ctx).ToCustomerTransitStatePtrOutputWithContext(ctx)
}

func (e CustomerTransitState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CustomerTransitState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CustomerTransitState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CustomerTransitState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CustomerTransitStateOutput struct{ *pulumi.OutputState }

func (CustomerTransitStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerTransitState)(nil)).Elem()
}

func (o CustomerTransitStateOutput) ToCustomerTransitStateOutput() CustomerTransitStateOutput {
	return o
}

func (o CustomerTransitStateOutput) ToCustomerTransitStateOutputWithContext(ctx context.Context) CustomerTransitStateOutput {
	return o
}

func (o CustomerTransitStateOutput) ToCustomerTransitStatePtrOutput() CustomerTransitStatePtrOutput {
	return o.ToCustomerTransitStatePtrOutputWithContext(context.Background())
}

func (o CustomerTransitStateOutput) ToCustomerTransitStatePtrOutputWithContext(ctx context.Context) CustomerTransitStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerTransitState) *CustomerTransitState {
		return &v
	}).(CustomerTransitStatePtrOutput)
}

func (o CustomerTransitStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CustomerTransitStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CustomerTransitState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CustomerTransitStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CustomerTransitStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CustomerTransitState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CustomerTransitStatePtrOutput struct{ *pulumi.OutputState }

func (CustomerTransitStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerTransitState)(nil)).Elem()
}

func (o CustomerTransitStatePtrOutput) ToCustomerTransitStatePtrOutput() CustomerTransitStatePtrOutput {
	return o
}

func (o CustomerTransitStatePtrOutput) ToCustomerTransitStatePtrOutputWithContext(ctx context.Context) CustomerTransitStatePtrOutput {
	return o
}

func (o CustomerTransitStatePtrOutput) Elem() CustomerTransitStateOutput {
	return o.ApplyT(func(v *CustomerTransitState) CustomerTransitState {
		if v != nil {
			return *v
		}
		var ret CustomerTransitState
		return ret
	}).(CustomerTransitStateOutput)
}

func (o CustomerTransitStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CustomerTransitStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CustomerTransitState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CustomerTransitStateInput is an input type that accepts values of the CustomerTransitState enum
// A concrete instance of `CustomerTransitStateInput` can be one of the following:
//
//	CustomerTransitStateNoTransit
//	CustomerTransitStateCombinedTransit
//	CustomerTransitStateTransitOnly
type CustomerTransitStateInput interface {
	pulumi.Input

	ToCustomerTransitStateOutput() CustomerTransitStateOutput
	ToCustomerTransitStateOutputWithContext(context.Context) CustomerTransitStateOutput
}

var customerTransitStatePtrType = reflect.TypeOf((**CustomerTransitState)(nil)).Elem()

type CustomerTransitStatePtrInput interface {
	pulumi.Input

	ToCustomerTransitStatePtrOutput() CustomerTransitStatePtrOutput
	ToCustomerTransitStatePtrOutputWithContext(context.Context) CustomerTransitStatePtrOutput
}

type customerTransitStatePtr string

func CustomerTransitStatePtr(v string) CustomerTransitStatePtrInput {
	return (*customerTransitStatePtr)(&v)
}

func (*customerTransitStatePtr) ElementType() reflect.Type {
	return customerTransitStatePtrType
}

func (in *customerTransitStatePtr) ToCustomerTransitStatePtrOutput() CustomerTransitStatePtrOutput {
	return pulumi.ToOutput(in).(CustomerTransitStatePtrOutput)
}

func (in *customerTransitStatePtr) ToCustomerTransitStatePtrOutputWithContext(ctx context.Context) CustomerTransitStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CustomerTransitStatePtrOutput)
}

// Update Cycle Type
type CycleType string

const (
	// customer selection of preview update install mcc on their physical vm
	CycleTypePreview = CycleType("Preview")
	// customer selection of slow update to install mcc on their physical vm
	CycleTypeSlow = CycleType("Slow")
	// customer selection of fast / auto update to install mcc on their physical vm
	CycleTypeFast = CycleType("Fast")
)

func (CycleType) ElementType() reflect.Type {
	return reflect.TypeOf((*CycleType)(nil)).Elem()
}

func (e CycleType) ToCycleTypeOutput() CycleTypeOutput {
	return pulumi.ToOutput(e).(CycleTypeOutput)
}

func (e CycleType) ToCycleTypeOutputWithContext(ctx context.Context) CycleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CycleTypeOutput)
}

func (e CycleType) ToCycleTypePtrOutput() CycleTypePtrOutput {
	return e.ToCycleTypePtrOutputWithContext(context.Background())
}

func (e CycleType) ToCycleTypePtrOutputWithContext(ctx context.Context) CycleTypePtrOutput {
	return CycleType(e).ToCycleTypeOutputWithContext(ctx).ToCycleTypePtrOutputWithContext(ctx)
}

func (e CycleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CycleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CycleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CycleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CycleTypeOutput struct{ *pulumi.OutputState }

func (CycleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CycleType)(nil)).Elem()
}

func (o CycleTypeOutput) ToCycleTypeOutput() CycleTypeOutput {
	return o
}

func (o CycleTypeOutput) ToCycleTypeOutputWithContext(ctx context.Context) CycleTypeOutput {
	return o
}

func (o CycleTypeOutput) ToCycleTypePtrOutput() CycleTypePtrOutput {
	return o.ToCycleTypePtrOutputWithContext(context.Background())
}

func (o CycleTypeOutput) ToCycleTypePtrOutputWithContext(ctx context.Context) CycleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CycleType) *CycleType {
		return &v
	}).(CycleTypePtrOutput)
}

func (o CycleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CycleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CycleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CycleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CycleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CycleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CycleTypePtrOutput struct{ *pulumi.OutputState }

func (CycleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CycleType)(nil)).Elem()
}

func (o CycleTypePtrOutput) ToCycleTypePtrOutput() CycleTypePtrOutput {
	return o
}

func (o CycleTypePtrOutput) ToCycleTypePtrOutputWithContext(ctx context.Context) CycleTypePtrOutput {
	return o
}

func (o CycleTypePtrOutput) Elem() CycleTypeOutput {
	return o.ApplyT(func(v *CycleType) CycleType {
		if v != nil {
			return *v
		}
		var ret CycleType
		return ret
	}).(CycleTypeOutput)
}

func (o CycleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CycleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CycleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CycleTypeInput is an input type that accepts values of the CycleType enum
// A concrete instance of `CycleTypeInput` can be one of the following:
//
//	CycleTypePreview
//	CycleTypeSlow
//	CycleTypeFast
type CycleTypeInput interface {
	pulumi.Input

	ToCycleTypeOutput() CycleTypeOutput
	ToCycleTypeOutputWithContext(context.Context) CycleTypeOutput
}

var cycleTypePtrType = reflect.TypeOf((**CycleType)(nil)).Elem()

type CycleTypePtrInput interface {
	pulumi.Input

	ToCycleTypePtrOutput() CycleTypePtrOutput
	ToCycleTypePtrOutputWithContext(context.Context) CycleTypePtrOutput
}

type cycleTypePtr string

func CycleTypePtr(v string) CycleTypePtrInput {
	return (*cycleTypePtr)(&v)
}

func (*cycleTypePtr) ElementType() reflect.Type {
	return cycleTypePtrType
}

func (in *cycleTypePtr) ToCycleTypePtrOutput() CycleTypePtrOutput {
	return pulumi.ToOutput(in).(CycleTypePtrOutput)
}

func (in *cycleTypePtr) ToCycleTypePtrOutputWithContext(ctx context.Context) CycleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CycleTypePtrOutput)
}

// Operating system of the cache node
type OsType string

const (
	// cache node installs on windows operating system
	OsTypeWindows = OsType("Windows")
	// cache node installs on Linux Operating system
	OsTypeLinux = OsType("Linux")
	// cache node installs on Azure Eflow
	OsTypeEflow = OsType("Eflow")
)

func (OsType) ElementType() reflect.Type {
	return reflect.TypeOf((*OsType)(nil)).Elem()
}

func (e OsType) ToOsTypeOutput() OsTypeOutput {
	return pulumi.ToOutput(e).(OsTypeOutput)
}

func (e OsType) ToOsTypeOutputWithContext(ctx context.Context) OsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsTypeOutput)
}

func (e OsType) ToOsTypePtrOutput() OsTypePtrOutput {
	return e.ToOsTypePtrOutputWithContext(context.Background())
}

func (e OsType) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return OsType(e).ToOsTypeOutputWithContext(ctx).ToOsTypePtrOutputWithContext(ctx)
}

func (e OsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsTypeOutput struct{ *pulumi.OutputState }

func (OsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsType)(nil)).Elem()
}

func (o OsTypeOutput) ToOsTypeOutput() OsTypeOutput {
	return o
}

func (o OsTypeOutput) ToOsTypeOutputWithContext(ctx context.Context) OsTypeOutput {
	return o
}

func (o OsTypeOutput) ToOsTypePtrOutput() OsTypePtrOutput {
	return o.ToOsTypePtrOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsType) *OsType {
		return &v
	}).(OsTypePtrOutput)
}

func (o OsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsTypePtrOutput struct{ *pulumi.OutputState }

func (OsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsType)(nil)).Elem()
}

func (o OsTypePtrOutput) ToOsTypePtrOutput() OsTypePtrOutput {
	return o
}

func (o OsTypePtrOutput) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return o
}

func (o OsTypePtrOutput) Elem() OsTypeOutput {
	return o.ApplyT(func(v *OsType) OsType {
		if v != nil {
			return *v
		}
		var ret OsType
		return ret
	}).(OsTypeOutput)
}

func (o OsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsTypeInput is an input type that accepts values of the OsType enum
// A concrete instance of `OsTypeInput` can be one of the following:
//
//	OsTypeWindows
//	OsTypeLinux
//	OsTypeEflow
type OsTypeInput interface {
	pulumi.Input

	ToOsTypeOutput() OsTypeOutput
	ToOsTypeOutputWithContext(context.Context) OsTypeOutput
}

var osTypePtrType = reflect.TypeOf((**OsType)(nil)).Elem()

type OsTypePtrInput interface {
	pulumi.Input

	ToOsTypePtrOutput() OsTypePtrOutput
	ToOsTypePtrOutputWithContext(context.Context) OsTypePtrOutput
}

type osTypePtr string

func OsTypePtr(v string) OsTypePtrInput {
	return (*osTypePtr)(&v)
}

func (*osTypePtr) ElementType() reflect.Type {
	return osTypePtrType
}

func (in *osTypePtr) ToOsTypePtrOutput() OsTypePtrOutput {
	return pulumi.ToOutput(in).(OsTypePtrOutput)
}

func (in *osTypePtr) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsTypePtrOutput)
}

// Cache node resource requires a proxy
type ProxyRequired string

const (
	// Proxy is not required in setup
	ProxyRequiredNone = ProxyRequired("None")
	// proxy is required in setup
	ProxyRequiredRequired = ProxyRequired("Required")
)

func (ProxyRequired) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyRequired)(nil)).Elem()
}

func (e ProxyRequired) ToProxyRequiredOutput() ProxyRequiredOutput {
	return pulumi.ToOutput(e).(ProxyRequiredOutput)
}

func (e ProxyRequired) ToProxyRequiredOutputWithContext(ctx context.Context) ProxyRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProxyRequiredOutput)
}

func (e ProxyRequired) ToProxyRequiredPtrOutput() ProxyRequiredPtrOutput {
	return e.ToProxyRequiredPtrOutputWithContext(context.Background())
}

func (e ProxyRequired) ToProxyRequiredPtrOutputWithContext(ctx context.Context) ProxyRequiredPtrOutput {
	return ProxyRequired(e).ToProxyRequiredOutputWithContext(ctx).ToProxyRequiredPtrOutputWithContext(ctx)
}

func (e ProxyRequired) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProxyRequired) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProxyRequired) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProxyRequired) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProxyRequiredOutput struct{ *pulumi.OutputState }

func (ProxyRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyRequired)(nil)).Elem()
}

func (o ProxyRequiredOutput) ToProxyRequiredOutput() ProxyRequiredOutput {
	return o
}

func (o ProxyRequiredOutput) ToProxyRequiredOutputWithContext(ctx context.Context) ProxyRequiredOutput {
	return o
}

func (o ProxyRequiredOutput) ToProxyRequiredPtrOutput() ProxyRequiredPtrOutput {
	return o.ToProxyRequiredPtrOutputWithContext(context.Background())
}

func (o ProxyRequiredOutput) ToProxyRequiredPtrOutputWithContext(ctx context.Context) ProxyRequiredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyRequired) *ProxyRequired {
		return &v
	}).(ProxyRequiredPtrOutput)
}

func (o ProxyRequiredOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProxyRequiredOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProxyRequired) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProxyRequiredOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProxyRequiredOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProxyRequired) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProxyRequiredPtrOutput struct{ *pulumi.OutputState }

func (ProxyRequiredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyRequired)(nil)).Elem()
}

func (o ProxyRequiredPtrOutput) ToProxyRequiredPtrOutput() ProxyRequiredPtrOutput {
	return o
}

func (o ProxyRequiredPtrOutput) ToProxyRequiredPtrOutputWithContext(ctx context.Context) ProxyRequiredPtrOutput {
	return o
}

func (o ProxyRequiredPtrOutput) Elem() ProxyRequiredOutput {
	return o.ApplyT(func(v *ProxyRequired) ProxyRequired {
		if v != nil {
			return *v
		}
		var ret ProxyRequired
		return ret
	}).(ProxyRequiredOutput)
}

func (o ProxyRequiredPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProxyRequiredPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProxyRequired) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProxyRequiredInput is an input type that accepts values of the ProxyRequired enum
// A concrete instance of `ProxyRequiredInput` can be one of the following:
//
//	ProxyRequiredNone
//	ProxyRequiredRequired
type ProxyRequiredInput interface {
	pulumi.Input

	ToProxyRequiredOutput() ProxyRequiredOutput
	ToProxyRequiredOutputWithContext(context.Context) ProxyRequiredOutput
}

var proxyRequiredPtrType = reflect.TypeOf((**ProxyRequired)(nil)).Elem()

type ProxyRequiredPtrInput interface {
	pulumi.Input

	ToProxyRequiredPtrOutput() ProxyRequiredPtrOutput
	ToProxyRequiredPtrOutputWithContext(context.Context) ProxyRequiredPtrOutput
}

type proxyRequiredPtr string

func ProxyRequiredPtr(v string) ProxyRequiredPtrInput {
	return (*proxyRequiredPtr)(&v)
}

func (*proxyRequiredPtr) ElementType() reflect.Type {
	return proxyRequiredPtrType
}

func (in *proxyRequiredPtr) ToProxyRequiredPtrOutput() ProxyRequiredPtrOutput {
	return pulumi.ToOutput(in).(ProxyRequiredPtrOutput)
}

func (in *proxyRequiredPtr) ToProxyRequiredPtrOutputWithContext(ctx context.Context) ProxyRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProxyRequiredPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoUpdateRingTypeOutput{})
	pulumi.RegisterOutputType(AutoUpdateRingTypePtrOutput{})
	pulumi.RegisterOutputType(CustomerTransitStateOutput{})
	pulumi.RegisterOutputType(CustomerTransitStatePtrOutput{})
	pulumi.RegisterOutputType(CycleTypeOutput{})
	pulumi.RegisterOutputType(CycleTypePtrOutput{})
	pulumi.RegisterOutputType(OsTypeOutput{})
	pulumi.RegisterOutputType(OsTypePtrOutput{})
	pulumi.RegisterOutputType(ProxyRequiredOutput{})
	pulumi.RegisterOutputType(ProxyRequiredPtrOutput{})
}
