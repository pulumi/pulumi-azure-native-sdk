// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connectedcache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This api gets ispCacheNode resource issues details histrory information
//
// Uses Azure REST API version 2024-11-30-preview.
func GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistory(ctx *pulumi.Context, args *GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryArgs, opts ...pulumi.InvokeOption) (*GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult
	err := ctx.Invoke("azure-native:connectedcache:getEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryArgs struct {
	// Name of the ConnectedCache resource
	CacheNodeResourceName string `pulumi:"cacheNodeResourceName"`
	// Name of the Customer resource
	CustomerResourceName string `pulumi:"customerResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Mcc cache node resource issue history.
type GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Mcc cache node resource issue history properties.
	Properties MccCacheNodeIssueHistoryPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryOutput(ctx *pulumi.Context, args GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryOutputArgs, opts ...pulumi.InvokeOption) GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput, error) {
			args := v.(GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:connectedcache:getEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistory", args, GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput{}, options).(GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput), nil
		}).(GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput)
}

type GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryOutputArgs struct {
	// Name of the ConnectedCache resource
	CacheNodeResourceName pulumi.StringInput `pulumi:"cacheNodeResourceName"`
	// Name of the Customer resource
	CustomerResourceName pulumi.StringInput `pulumi:"customerResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryArgs)(nil)).Elem()
}

// Mcc cache node resource issue history.
type GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput struct{ *pulumi.OutputState }

func (GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult)(nil)).Elem()
}

func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) ToGetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput() GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput {
	return o
}

func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) ToGetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutputWithContext(ctx context.Context) GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) string {
		return v.Location
	}).(pulumi.StringOutput)
}

// The name of the resource
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) string { return v.Name }).(pulumi.StringOutput)
}

// Mcc cache node resource issue history properties.
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) Properties() MccCacheNodeIssueHistoryPropertiesResponseOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) MccCacheNodeIssueHistoryPropertiesResponse {
		return v.Properties
	}).(MccCacheNodeIssueHistoryPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) SystemDataResponse {
		return v.SystemData
	}).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) map[string]string {
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnterpriseMccCacheNodesOperationCacheNodeMccIssueDetailsHistoryResultOutput{})
}
