// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connectedcache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This api gets secrets of the ispCacheNode resource install details
//
// Uses Azure REST API version 2023-05-01-preview.
func GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetails(ctx *pulumi.Context, args *GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsArgs, opts ...pulumi.InvokeOption) (*GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult
	err := ctx.Invoke("azure-native:connectedcache:getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsArgs struct {
	// Name of the ConnectedCache resource
	CacheNodeResourceName string `pulumi:"cacheNodeResourceName"`
	// Name of the Customer resource
	CustomerResourceName string `pulumi:"customerResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Mcc cache node resource all install details.
type GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Mcc cache node resource install script details.
	Properties CacheNodeInstallPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutput(ctx *pulumi.Context, args GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutputArgs, opts ...pulumi.InvokeOption) GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput, error) {
			args := v.(GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:connectedcache:getEnterpriseMccCacheNodesOperationCacheNodeInstallDetails", args, GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput{}, options).(GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput), nil
		}).(GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput)
}

type GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutputArgs struct {
	// Name of the ConnectedCache resource
	CacheNodeResourceName pulumi.StringInput `pulumi:"cacheNodeResourceName"`
	// Name of the Customer resource
	CustomerResourceName pulumi.StringInput `pulumi:"customerResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsArgs)(nil)).Elem()
}

// Mcc cache node resource all install details.
type GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput struct{ *pulumi.OutputState }

func (GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult)(nil)).Elem()
}

func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) ToGetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput() GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput {
	return o
}

func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) ToGetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutputWithContext(ctx context.Context) GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) string { return v.Name }).(pulumi.StringOutput)
}

// Mcc cache node resource install script details.
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) Properties() CacheNodeInstallPropertiesResponseOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) CacheNodeInstallPropertiesResponse {
		return v.Properties
	}).(CacheNodeInstallPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) SystemDataResponse {
		return v.SystemData
	}).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) map[string]string {
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnterpriseMccCacheNodesOperationCacheNodeInstallDetailsResultOutput{})
}
