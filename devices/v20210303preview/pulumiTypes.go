// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210303preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The EventHub consumer group name.
type EventHubConsumerGroupName struct {
	// EventHub consumer group name
	Name *string `pulumi:"name"`
}

// EventHubConsumerGroupNameInput is an input type that accepts EventHubConsumerGroupNameArgs and EventHubConsumerGroupNameOutput values.
// You can construct a concrete instance of `EventHubConsumerGroupNameInput` via:
//
//	EventHubConsumerGroupNameArgs{...}
type EventHubConsumerGroupNameInput interface {
	pulumi.Input

	ToEventHubConsumerGroupNameOutput() EventHubConsumerGroupNameOutput
	ToEventHubConsumerGroupNameOutputWithContext(context.Context) EventHubConsumerGroupNameOutput
}

// The EventHub consumer group name.
type EventHubConsumerGroupNameArgs struct {
	// EventHub consumer group name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EventHubConsumerGroupNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubConsumerGroupName)(nil)).Elem()
}

func (i EventHubConsumerGroupNameArgs) ToEventHubConsumerGroupNameOutput() EventHubConsumerGroupNameOutput {
	return i.ToEventHubConsumerGroupNameOutputWithContext(context.Background())
}

func (i EventHubConsumerGroupNameArgs) ToEventHubConsumerGroupNameOutputWithContext(ctx context.Context) EventHubConsumerGroupNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubConsumerGroupNameOutput)
}

func (i EventHubConsumerGroupNameArgs) ToEventHubConsumerGroupNamePtrOutput() EventHubConsumerGroupNamePtrOutput {
	return i.ToEventHubConsumerGroupNamePtrOutputWithContext(context.Background())
}

func (i EventHubConsumerGroupNameArgs) ToEventHubConsumerGroupNamePtrOutputWithContext(ctx context.Context) EventHubConsumerGroupNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubConsumerGroupNameOutput).ToEventHubConsumerGroupNamePtrOutputWithContext(ctx)
}

// EventHubConsumerGroupNamePtrInput is an input type that accepts EventHubConsumerGroupNameArgs, EventHubConsumerGroupNamePtr and EventHubConsumerGroupNamePtrOutput values.
// You can construct a concrete instance of `EventHubConsumerGroupNamePtrInput` via:
//
//	        EventHubConsumerGroupNameArgs{...}
//
//	or:
//
//	        nil
type EventHubConsumerGroupNamePtrInput interface {
	pulumi.Input

	ToEventHubConsumerGroupNamePtrOutput() EventHubConsumerGroupNamePtrOutput
	ToEventHubConsumerGroupNamePtrOutputWithContext(context.Context) EventHubConsumerGroupNamePtrOutput
}

type eventHubConsumerGroupNamePtrType EventHubConsumerGroupNameArgs

func EventHubConsumerGroupNamePtr(v *EventHubConsumerGroupNameArgs) EventHubConsumerGroupNamePtrInput {
	return (*eventHubConsumerGroupNamePtrType)(v)
}

func (*eventHubConsumerGroupNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubConsumerGroupName)(nil)).Elem()
}

func (i *eventHubConsumerGroupNamePtrType) ToEventHubConsumerGroupNamePtrOutput() EventHubConsumerGroupNamePtrOutput {
	return i.ToEventHubConsumerGroupNamePtrOutputWithContext(context.Background())
}

func (i *eventHubConsumerGroupNamePtrType) ToEventHubConsumerGroupNamePtrOutputWithContext(ctx context.Context) EventHubConsumerGroupNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubConsumerGroupNamePtrOutput)
}

// The EventHub consumer group name.
type EventHubConsumerGroupNameOutput struct{ *pulumi.OutputState }

func (EventHubConsumerGroupNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubConsumerGroupName)(nil)).Elem()
}

func (o EventHubConsumerGroupNameOutput) ToEventHubConsumerGroupNameOutput() EventHubConsumerGroupNameOutput {
	return o
}

func (o EventHubConsumerGroupNameOutput) ToEventHubConsumerGroupNameOutputWithContext(ctx context.Context) EventHubConsumerGroupNameOutput {
	return o
}

func (o EventHubConsumerGroupNameOutput) ToEventHubConsumerGroupNamePtrOutput() EventHubConsumerGroupNamePtrOutput {
	return o.ToEventHubConsumerGroupNamePtrOutputWithContext(context.Background())
}

func (o EventHubConsumerGroupNameOutput) ToEventHubConsumerGroupNamePtrOutputWithContext(ctx context.Context) EventHubConsumerGroupNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventHubConsumerGroupName) *EventHubConsumerGroupName {
		return &v
	}).(EventHubConsumerGroupNamePtrOutput)
}

// EventHub consumer group name
func (o EventHubConsumerGroupNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubConsumerGroupName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EventHubConsumerGroupNamePtrOutput struct{ *pulumi.OutputState }

func (EventHubConsumerGroupNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubConsumerGroupName)(nil)).Elem()
}

func (o EventHubConsumerGroupNamePtrOutput) ToEventHubConsumerGroupNamePtrOutput() EventHubConsumerGroupNamePtrOutput {
	return o
}

func (o EventHubConsumerGroupNamePtrOutput) ToEventHubConsumerGroupNamePtrOutputWithContext(ctx context.Context) EventHubConsumerGroupNamePtrOutput {
	return o
}

func (o EventHubConsumerGroupNamePtrOutput) Elem() EventHubConsumerGroupNameOutput {
	return o.ApplyT(func(v *EventHubConsumerGroupName) EventHubConsumerGroupName {
		if v != nil {
			return *v
		}
		var ret EventHubConsumerGroupName
		return ret
	}).(EventHubConsumerGroupNameOutput)
}

// EventHub consumer group name
func (o EventHubConsumerGroupNamePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventHubConsumerGroupName) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EventHubConsumerGroupNameOutput{})
	pulumi.RegisterOutputType(EventHubConsumerGroupNamePtrOutput{})
}
