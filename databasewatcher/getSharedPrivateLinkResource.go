// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasewatcher

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a SharedPrivateLinkResource
// Azure REST API version: 2023-09-01-preview.
func LookupSharedPrivateLinkResource(ctx *pulumi.Context, args *LookupSharedPrivateLinkResourceArgs, opts ...pulumi.InvokeOption) (*LookupSharedPrivateLinkResourceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSharedPrivateLinkResourceResult
	err := ctx.Invoke("azure-native:databasewatcher:getSharedPrivateLinkResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSharedPrivateLinkResourceArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Shared Private Link resource name.
	SharedPrivateLinkResourceName string `pulumi:"sharedPrivateLinkResourceName"`
	// The database watcher name.
	WatcherName string `pulumi:"watcherName"`
}

// Concrete proxy resource types can be created by aliasing this type using a specific property type.
type LookupSharedPrivateLinkResourceResult struct {
	// The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
	DnsZone *string `pulumi:"dnsZone"`
	// The group id from the provider of resource the shared private link resource is for.
	GroupId string `pulumi:"groupId"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId string `pulumi:"privateLinkResourceId"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage string `pulumi:"requestMessage"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
	Status string `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSharedPrivateLinkResourceOutput(ctx *pulumi.Context, args LookupSharedPrivateLinkResourceOutputArgs, opts ...pulumi.InvokeOption) LookupSharedPrivateLinkResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSharedPrivateLinkResourceResult, error) {
			args := v.(LookupSharedPrivateLinkResourceArgs)
			r, err := LookupSharedPrivateLinkResource(ctx, &args, opts...)
			var s LookupSharedPrivateLinkResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSharedPrivateLinkResourceResultOutput)
}

type LookupSharedPrivateLinkResourceOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The Shared Private Link resource name.
	SharedPrivateLinkResourceName pulumi.StringInput `pulumi:"sharedPrivateLinkResourceName"`
	// The database watcher name.
	WatcherName pulumi.StringInput `pulumi:"watcherName"`
}

func (LookupSharedPrivateLinkResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSharedPrivateLinkResourceArgs)(nil)).Elem()
}

// Concrete proxy resource types can be created by aliasing this type using a specific property type.
type LookupSharedPrivateLinkResourceResultOutput struct{ *pulumi.OutputState }

func (LookupSharedPrivateLinkResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSharedPrivateLinkResourceResult)(nil)).Elem()
}

func (o LookupSharedPrivateLinkResourceResultOutput) ToLookupSharedPrivateLinkResourceResultOutput() LookupSharedPrivateLinkResourceResultOutput {
	return o
}

func (o LookupSharedPrivateLinkResourceResultOutput) ToLookupSharedPrivateLinkResourceResultOutputWithContext(ctx context.Context) LookupSharedPrivateLinkResourceResultOutput {
	return o
}

// The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
func (o LookupSharedPrivateLinkResourceResultOutput) DnsZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) *string { return v.DnsZone }).(pulumi.StringPtrOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o LookupSharedPrivateLinkResourceResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSharedPrivateLinkResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSharedPrivateLinkResourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o LookupSharedPrivateLinkResourceResultOutput) PrivateLinkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.PrivateLinkResourceId }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o LookupSharedPrivateLinkResourceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o LookupSharedPrivateLinkResourceResultOutput) RequestMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.RequestMessage }).(pulumi.StringOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
func (o LookupSharedPrivateLinkResourceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSharedPrivateLinkResourceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSharedPrivateLinkResourceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedPrivateLinkResourceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSharedPrivateLinkResourceResultOutput{})
}
