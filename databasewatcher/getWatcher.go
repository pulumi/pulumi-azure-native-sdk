// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasewatcher

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Watcher
//
// Uses Azure REST API version 2024-10-01-preview.
//
// Other available API versions: 2023-09-01-preview, 2024-07-19-preview, 2025-01-02. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native databasewatcher [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupWatcher(ctx *pulumi.Context, args *LookupWatcherArgs, opts ...pulumi.InvokeOption) (*LookupWatcherResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWatcherResult
	err := ctx.Invoke("azure-native:databasewatcher:getWatcher", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWatcherArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The database watcher name.
	WatcherName string `pulumi:"watcherName"`
}

// The DatabaseWatcherProviderHub resource.
type LookupWatcherResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The data store for collected monitoring data.
	Datastore *DatastoreResponse `pulumi:"datastore"`
	// The resource ID of a user-assigned managed identity that will be assigned to a new alert rule.
	DefaultAlertRuleIdentityResourceId *string `pulumi:"defaultAlertRuleIdentityResourceId"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of the resource watcher.
	ProvisioningState string `pulumi:"provisioningState"`
	// The monitoring collection status of the watcher.
	Status string `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupWatcherOutput(ctx *pulumi.Context, args LookupWatcherOutputArgs, opts ...pulumi.InvokeOption) LookupWatcherResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWatcherResultOutput, error) {
			args := v.(LookupWatcherArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:databasewatcher:getWatcher", args, LookupWatcherResultOutput{}, options).(LookupWatcherResultOutput), nil
		}).(LookupWatcherResultOutput)
}

type LookupWatcherOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The database watcher name.
	WatcherName pulumi.StringInput `pulumi:"watcherName"`
}

func (LookupWatcherOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWatcherArgs)(nil)).Elem()
}

// The DatabaseWatcherProviderHub resource.
type LookupWatcherResultOutput struct{ *pulumi.OutputState }

func (LookupWatcherResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWatcherResult)(nil)).Elem()
}

func (o LookupWatcherResultOutput) ToLookupWatcherResultOutput() LookupWatcherResultOutput {
	return o
}

func (o LookupWatcherResultOutput) ToLookupWatcherResultOutputWithContext(ctx context.Context) LookupWatcherResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupWatcherResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The data store for collected monitoring data.
func (o LookupWatcherResultOutput) Datastore() DatastoreResponsePtrOutput {
	return o.ApplyT(func(v LookupWatcherResult) *DatastoreResponse { return v.Datastore }).(DatastoreResponsePtrOutput)
}

// The resource ID of a user-assigned managed identity that will be assigned to a new alert rule.
func (o LookupWatcherResultOutput) DefaultAlertRuleIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWatcherResult) *string { return v.DefaultAlertRuleIdentityResourceId }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupWatcherResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o LookupWatcherResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupWatcherResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupWatcherResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWatcherResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource watcher.
func (o LookupWatcherResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The monitoring collection status of the watcher.
func (o LookupWatcherResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupWatcherResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupWatcherResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupWatcherResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWatcherResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWatcherResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWatcherResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWatcherResultOutput{})
}
