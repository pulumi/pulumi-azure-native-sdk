// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasewatcher

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Concrete proxy resource types can be created by aliasing this type using a specific property type.
// Azure REST API version: 2023-09-01-preview.
type SharedPrivateLinkResource struct {
	pulumi.CustomResourceState

	// The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
	DnsZone pulumi.StringPtrOutput `pulumi:"dnsZone"`
	// The group id from the provider of resource the shared private link resource is for.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId pulumi.StringOutput `pulumi:"privateLinkResourceId"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage pulumi.StringOutput `pulumi:"requestMessage"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
	Status pulumi.StringOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSharedPrivateLinkResource registers a new resource with the given unique name, arguments, and options.
func NewSharedPrivateLinkResource(ctx *pulumi.Context,
	name string, args *SharedPrivateLinkResourceArgs, opts ...pulumi.ResourceOption) (*SharedPrivateLinkResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.PrivateLinkResourceId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateLinkResourceId'")
	}
	if args.RequestMessage == nil {
		return nil, errors.New("invalid value for required argument 'RequestMessage'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WatcherName == nil {
		return nil, errors.New("invalid value for required argument 'WatcherName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:databasewatcher/v20230901preview:SharedPrivateLinkResource"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SharedPrivateLinkResource
	err := ctx.RegisterResource("azure-native:databasewatcher:SharedPrivateLinkResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedPrivateLinkResource gets an existing SharedPrivateLinkResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedPrivateLinkResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedPrivateLinkResourceState, opts ...pulumi.ResourceOption) (*SharedPrivateLinkResource, error) {
	var resource SharedPrivateLinkResource
	err := ctx.ReadResource("azure-native:databasewatcher:SharedPrivateLinkResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedPrivateLinkResource resources.
type sharedPrivateLinkResourceState struct {
}

type SharedPrivateLinkResourceState struct {
}

func (SharedPrivateLinkResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedPrivateLinkResourceState)(nil)).Elem()
}

type sharedPrivateLinkResourceArgs struct {
	// The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
	DnsZone *string `pulumi:"dnsZone"`
	// The group id from the provider of resource the shared private link resource is for.
	GroupId string `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId string `pulumi:"privateLinkResourceId"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage string `pulumi:"requestMessage"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Shared Private Link resource name.
	SharedPrivateLinkResourceName *string `pulumi:"sharedPrivateLinkResourceName"`
	// The database watcher name.
	WatcherName string `pulumi:"watcherName"`
}

// The set of arguments for constructing a SharedPrivateLinkResource resource.
type SharedPrivateLinkResourceArgs struct {
	// The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
	DnsZone pulumi.StringPtrInput
	// The group id from the provider of resource the shared private link resource is for.
	GroupId pulumi.StringInput
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId pulumi.StringInput
	// The request message for requesting approval of the shared private link resource.
	RequestMessage pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The Shared Private Link resource name.
	SharedPrivateLinkResourceName pulumi.StringPtrInput
	// The database watcher name.
	WatcherName pulumi.StringInput
}

func (SharedPrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedPrivateLinkResourceArgs)(nil)).Elem()
}

type SharedPrivateLinkResourceInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput
	ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput
}

func (*SharedPrivateLinkResource) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResource)(nil)).Elem()
}

func (i *SharedPrivateLinkResource) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return i.ToSharedPrivateLinkResourceOutputWithContext(context.Background())
}

func (i *SharedPrivateLinkResource) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceOutput)
}

type SharedPrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return o
}

// The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
func (o SharedPrivateLinkResourceOutput) DnsZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringPtrOutput { return v.DnsZone }).(pulumi.StringPtrOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourceOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the resource
func (o SharedPrivateLinkResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourceOutput) PrivateLinkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.PrivateLinkResourceId }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o SharedPrivateLinkResourceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourceOutput) RequestMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.RequestMessage }).(pulumi.StringOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
func (o SharedPrivateLinkResourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SharedPrivateLinkResourceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SharedPrivateLinkResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResource) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SharedPrivateLinkResourceOutput{})
}
