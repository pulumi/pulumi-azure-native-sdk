// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information about the specified address.
func LookupAddress(ctx *pulumi.Context, args *LookupAddressArgs, opts ...pulumi.InvokeOption) (*LookupAddressResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAddressResult
	err := ctx.Invoke("azure-native:edgeorder/v20220501preview:getAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAddressArgs struct {
	// The name of the address Resource within the specified resource group. address names must be between 3 and 24 characters in length and use any alphanumeric and underscore only.
	AddressName string `pulumi:"addressName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Address Resource.
type LookupAddressResult struct {
	// Status of address validation.
	AddressValidationStatus string `pulumi:"addressValidationStatus"`
	// Contact details for the address.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Shipping details for the address.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
	// Represents resource creation and update time.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAddressOutput(ctx *pulumi.Context, args LookupAddressOutputArgs, opts ...pulumi.InvokeOption) LookupAddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAddressResult, error) {
			args := v.(LookupAddressArgs)
			r, err := LookupAddress(ctx, &args, opts...)
			var s LookupAddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAddressResultOutput)
}

type LookupAddressOutputArgs struct {
	// The name of the address Resource within the specified resource group. address names must be between 3 and 24 characters in length and use any alphanumeric and underscore only.
	AddressName pulumi.StringInput `pulumi:"addressName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressArgs)(nil)).Elem()
}

// Address Resource.
type LookupAddressResultOutput struct{ *pulumi.OutputState }

func (LookupAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressResult)(nil)).Elem()
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutput() LookupAddressResultOutput {
	return o
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutputWithContext(ctx context.Context) LookupAddressResultOutput {
	return o
}

func (o LookupAddressResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAddressResult] {
	return pulumix.Output[LookupAddressResult]{
		OutputState: o.OutputState,
	}
}

// Status of address validation.
func (o LookupAddressResultOutput) AddressValidationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.AddressValidationStatus }).(pulumi.StringOutput)
}

// Contact details for the address.
func (o LookupAddressResultOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v LookupAddressResult) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupAddressResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAddressResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Name }).(pulumi.StringOutput)
}

// Shipping details for the address.
func (o LookupAddressResultOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v LookupAddressResult) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// Represents resource creation and update time.
func (o LookupAddressResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAddressResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupAddressResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAddressResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAddressResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAddressResultOutput{})
}
