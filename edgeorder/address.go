// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edgeorder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Address Resource.
// Azure REST API version: 2022-05-01-preview.
type Address struct {
	pulumi.CustomResourceState

	// Status of address validation.
	AddressValidationStatus pulumi.StringOutput `pulumi:"addressValidationStatus"`
	// Contact details for the address.
	ContactDetails ContactDetailsResponseOutput `pulumi:"contactDetails"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Shipping details for the address.
	ShippingAddress ShippingAddressResponsePtrOutput `pulumi:"shippingAddress"`
	// Represents resource creation and update time.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAddress registers a new resource with the given unique name, arguments, and options.
func NewAddress(ctx *pulumi.Context,
	name string, args *AddressArgs, opts ...pulumi.ResourceOption) (*Address, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContactDetails == nil {
		return nil, errors.New("invalid value for required argument 'ContactDetails'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:edgeorder/v20201201preview:Address"),
		},
		{
			Type: pulumi.String("azure-native:edgeorder/v20211201:Address"),
		},
		{
			Type: pulumi.String("azure-native:edgeorder/v20220501preview:Address"),
		},
	})
	opts = append(opts, aliases)
	var resource Address
	err := ctx.RegisterResource("azure-native:edgeorder:Address", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddress gets an existing Address resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddressState, opts ...pulumi.ResourceOption) (*Address, error) {
	var resource Address
	err := ctx.ReadResource("azure-native:edgeorder:Address", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Address resources.
type addressState struct {
}

type AddressState struct {
}

func (AddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*addressState)(nil)).Elem()
}

type addressArgs struct {
	// The name of the address Resource within the specified resource group. address names must be between 3 and 24 characters in length and use any alphanumeric and underscore only.
	AddressName *string `pulumi:"addressName"`
	// Contact details for the address.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Shipping details for the address.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Address resource.
type AddressArgs struct {
	// The name of the address Resource within the specified resource group. address names must be between 3 and 24 characters in length and use any alphanumeric and underscore only.
	AddressName pulumi.StringPtrInput
	// Contact details for the address.
	ContactDetails ContactDetailsInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Shipping details for the address.
	ShippingAddress ShippingAddressPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addressArgs)(nil)).Elem()
}

type AddressInput interface {
	pulumi.Input

	ToAddressOutput() AddressOutput
	ToAddressOutputWithContext(ctx context.Context) AddressOutput
}

func (*Address) ElementType() reflect.Type {
	return reflect.TypeOf((**Address)(nil)).Elem()
}

func (i *Address) ToAddressOutput() AddressOutput {
	return i.ToAddressOutputWithContext(context.Background())
}

func (i *Address) ToAddressOutputWithContext(ctx context.Context) AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressOutput)
}

type AddressOutput struct{ *pulumi.OutputState }

func (AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Address)(nil)).Elem()
}

func (o AddressOutput) ToAddressOutput() AddressOutput {
	return o
}

func (o AddressOutput) ToAddressOutputWithContext(ctx context.Context) AddressOutput {
	return o
}

// Status of address validation.
func (o AddressOutput) AddressValidationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Address) pulumi.StringOutput { return v.AddressValidationStatus }).(pulumi.StringOutput)
}

// Contact details for the address.
func (o AddressOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v *Address) ContactDetailsResponseOutput { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// The geo-location where the resource lives
func (o AddressOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Address) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o AddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Address) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Shipping details for the address.
func (o AddressOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *Address) ShippingAddressResponsePtrOutput { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// Represents resource creation and update time.
func (o AddressOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Address) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AddressOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Address) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Address) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressOutput{})
}
