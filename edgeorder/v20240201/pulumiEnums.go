// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Type of address based on its usage context.
type AddressClassification string

const (
	// Shipping address for the order.
	AddressClassificationShipping = AddressClassification("Shipping")
	// Site Address.
	AddressClassificationSite = AddressClassification("Site")
)

func (AddressClassification) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressClassification)(nil)).Elem()
}

func (e AddressClassification) ToAddressClassificationOutput() AddressClassificationOutput {
	return pulumi.ToOutput(e).(AddressClassificationOutput)
}

func (e AddressClassification) ToAddressClassificationOutputWithContext(ctx context.Context) AddressClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressClassificationOutput)
}

func (e AddressClassification) ToAddressClassificationPtrOutput() AddressClassificationPtrOutput {
	return e.ToAddressClassificationPtrOutputWithContext(context.Background())
}

func (e AddressClassification) ToAddressClassificationPtrOutputWithContext(ctx context.Context) AddressClassificationPtrOutput {
	return AddressClassification(e).ToAddressClassificationOutputWithContext(ctx).ToAddressClassificationPtrOutputWithContext(ctx)
}

func (e AddressClassification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressClassification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressClassification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressClassification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressClassificationOutput struct{ *pulumi.OutputState }

func (AddressClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressClassification)(nil)).Elem()
}

func (o AddressClassificationOutput) ToAddressClassificationOutput() AddressClassificationOutput {
	return o
}

func (o AddressClassificationOutput) ToAddressClassificationOutputWithContext(ctx context.Context) AddressClassificationOutput {
	return o
}

func (o AddressClassificationOutput) ToAddressClassificationPtrOutput() AddressClassificationPtrOutput {
	return o.ToAddressClassificationPtrOutputWithContext(context.Background())
}

func (o AddressClassificationOutput) ToAddressClassificationPtrOutputWithContext(ctx context.Context) AddressClassificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressClassification) *AddressClassification {
		return &v
	}).(AddressClassificationPtrOutput)
}

func (o AddressClassificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressClassificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressClassification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressClassificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressClassificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressClassification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressClassificationPtrOutput struct{ *pulumi.OutputState }

func (AddressClassificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressClassification)(nil)).Elem()
}

func (o AddressClassificationPtrOutput) ToAddressClassificationPtrOutput() AddressClassificationPtrOutput {
	return o
}

func (o AddressClassificationPtrOutput) ToAddressClassificationPtrOutputWithContext(ctx context.Context) AddressClassificationPtrOutput {
	return o
}

func (o AddressClassificationPtrOutput) Elem() AddressClassificationOutput {
	return o.ApplyT(func(v *AddressClassification) AddressClassification {
		if v != nil {
			return *v
		}
		var ret AddressClassification
		return ret
	}).(AddressClassificationOutput)
}

func (o AddressClassificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressClassificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressClassification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressClassificationInput is an input type that accepts values of the AddressClassification enum
// A concrete instance of `AddressClassificationInput` can be one of the following:
//
//	AddressClassificationShipping
//	AddressClassificationSite
type AddressClassificationInput interface {
	pulumi.Input

	ToAddressClassificationOutput() AddressClassificationOutput
	ToAddressClassificationOutputWithContext(context.Context) AddressClassificationOutput
}

var addressClassificationPtrType = reflect.TypeOf((**AddressClassification)(nil)).Elem()

type AddressClassificationPtrInput interface {
	pulumi.Input

	ToAddressClassificationPtrOutput() AddressClassificationPtrOutput
	ToAddressClassificationPtrOutputWithContext(context.Context) AddressClassificationPtrOutput
}

type addressClassificationPtr string

func AddressClassificationPtr(v string) AddressClassificationPtrInput {
	return (*addressClassificationPtr)(&v)
}

func (*addressClassificationPtr) ElementType() reflect.Type {
	return addressClassificationPtrType
}

func (in *addressClassificationPtr) ToAddressClassificationPtrOutput() AddressClassificationPtrOutput {
	return pulumi.ToOutput(in).(AddressClassificationPtrOutput)
}

func (in *addressClassificationPtr) ToAddressClassificationPtrOutputWithContext(ctx context.Context) AddressClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressClassificationPtrOutput)
}

func (in *addressClassificationPtr) ToOutput(ctx context.Context) pulumix.Output[*AddressClassification] {
	return pulumix.Output[*AddressClassification]{
		OutputState: in.ToAddressClassificationPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of address.
type AddressType string

const (
	// Address type not known.
	AddressTypeNone = AddressType("None")
	// Residential Address.
	AddressTypeResidential = AddressType("Residential")
	// Commercial Address.
	AddressTypeCommercial = AddressType("Commercial")
)

func (AddressType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressType)(nil)).Elem()
}

func (e AddressType) ToAddressTypeOutput() AddressTypeOutput {
	return pulumi.ToOutput(e).(AddressTypeOutput)
}

func (e AddressType) ToAddressTypeOutputWithContext(ctx context.Context) AddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressTypeOutput)
}

func (e AddressType) ToAddressTypePtrOutput() AddressTypePtrOutput {
	return e.ToAddressTypePtrOutputWithContext(context.Background())
}

func (e AddressType) ToAddressTypePtrOutputWithContext(ctx context.Context) AddressTypePtrOutput {
	return AddressType(e).ToAddressTypeOutputWithContext(ctx).ToAddressTypePtrOutputWithContext(ctx)
}

func (e AddressType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressTypeOutput struct{ *pulumi.OutputState }

func (AddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressType)(nil)).Elem()
}

func (o AddressTypeOutput) ToAddressTypeOutput() AddressTypeOutput {
	return o
}

func (o AddressTypeOutput) ToAddressTypeOutputWithContext(ctx context.Context) AddressTypeOutput {
	return o
}

func (o AddressTypeOutput) ToAddressTypePtrOutput() AddressTypePtrOutput {
	return o.ToAddressTypePtrOutputWithContext(context.Background())
}

func (o AddressTypeOutput) ToAddressTypePtrOutputWithContext(ctx context.Context) AddressTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressType) *AddressType {
		return &v
	}).(AddressTypePtrOutput)
}

func (o AddressTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressTypePtrOutput struct{ *pulumi.OutputState }

func (AddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressType)(nil)).Elem()
}

func (o AddressTypePtrOutput) ToAddressTypePtrOutput() AddressTypePtrOutput {
	return o
}

func (o AddressTypePtrOutput) ToAddressTypePtrOutputWithContext(ctx context.Context) AddressTypePtrOutput {
	return o
}

func (o AddressTypePtrOutput) Elem() AddressTypeOutput {
	return o.ApplyT(func(v *AddressType) AddressType {
		if v != nil {
			return *v
		}
		var ret AddressType
		return ret
	}).(AddressTypeOutput)
}

func (o AddressTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressTypeInput is an input type that accepts values of the AddressType enum
// A concrete instance of `AddressTypeInput` can be one of the following:
//
//	AddressTypeNone
//	AddressTypeResidential
//	AddressTypeCommercial
type AddressTypeInput interface {
	pulumi.Input

	ToAddressTypeOutput() AddressTypeOutput
	ToAddressTypeOutputWithContext(context.Context) AddressTypeOutput
}

var addressTypePtrType = reflect.TypeOf((**AddressType)(nil)).Elem()

type AddressTypePtrInput interface {
	pulumi.Input

	ToAddressTypePtrOutput() AddressTypePtrOutput
	ToAddressTypePtrOutputWithContext(context.Context) AddressTypePtrOutput
}

type addressTypePtr string

func AddressTypePtr(v string) AddressTypePtrInput {
	return (*addressTypePtr)(&v)
}

func (*addressTypePtr) ElementType() reflect.Type {
	return addressTypePtrType
}

func (in *addressTypePtr) ToAddressTypePtrOutput() AddressTypePtrOutput {
	return pulumi.ToOutput(in).(AddressTypePtrOutput)
}

func (in *addressTypePtr) ToAddressTypePtrOutputWithContext(ctx context.Context) AddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressTypePtrOutput)
}

func (in *addressTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AddressType] {
	return pulumix.Output[*AddressType]{
		OutputState: in.ToAddressTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Auto Provisioning Details.
type AutoProvisioningStatus string

const (
	// Provisioning Enabled. Will act as pre-approved, and arc extension will be enabled as soon as the device is verified to be at the right edge location.
	AutoProvisioningStatusEnabled = AutoProvisioningStatus("Enabled")
	// Provisioning Disabled.
	AutoProvisioningStatusDisabled = AutoProvisioningStatus("Disabled")
)

func (AutoProvisioningStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoProvisioningStatus)(nil)).Elem()
}

func (e AutoProvisioningStatus) ToAutoProvisioningStatusOutput() AutoProvisioningStatusOutput {
	return pulumi.ToOutput(e).(AutoProvisioningStatusOutput)
}

func (e AutoProvisioningStatus) ToAutoProvisioningStatusOutputWithContext(ctx context.Context) AutoProvisioningStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoProvisioningStatusOutput)
}

func (e AutoProvisioningStatus) ToAutoProvisioningStatusPtrOutput() AutoProvisioningStatusPtrOutput {
	return e.ToAutoProvisioningStatusPtrOutputWithContext(context.Background())
}

func (e AutoProvisioningStatus) ToAutoProvisioningStatusPtrOutputWithContext(ctx context.Context) AutoProvisioningStatusPtrOutput {
	return AutoProvisioningStatus(e).ToAutoProvisioningStatusOutputWithContext(ctx).ToAutoProvisioningStatusPtrOutputWithContext(ctx)
}

func (e AutoProvisioningStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoProvisioningStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoProvisioningStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoProvisioningStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoProvisioningStatusOutput struct{ *pulumi.OutputState }

func (AutoProvisioningStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoProvisioningStatus)(nil)).Elem()
}

func (o AutoProvisioningStatusOutput) ToAutoProvisioningStatusOutput() AutoProvisioningStatusOutput {
	return o
}

func (o AutoProvisioningStatusOutput) ToAutoProvisioningStatusOutputWithContext(ctx context.Context) AutoProvisioningStatusOutput {
	return o
}

func (o AutoProvisioningStatusOutput) ToAutoProvisioningStatusPtrOutput() AutoProvisioningStatusPtrOutput {
	return o.ToAutoProvisioningStatusPtrOutputWithContext(context.Background())
}

func (o AutoProvisioningStatusOutput) ToAutoProvisioningStatusPtrOutputWithContext(ctx context.Context) AutoProvisioningStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoProvisioningStatus) *AutoProvisioningStatus {
		return &v
	}).(AutoProvisioningStatusPtrOutput)
}

func (o AutoProvisioningStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoProvisioningStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoProvisioningStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoProvisioningStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoProvisioningStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoProvisioningStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoProvisioningStatusPtrOutput struct{ *pulumi.OutputState }

func (AutoProvisioningStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoProvisioningStatus)(nil)).Elem()
}

func (o AutoProvisioningStatusPtrOutput) ToAutoProvisioningStatusPtrOutput() AutoProvisioningStatusPtrOutput {
	return o
}

func (o AutoProvisioningStatusPtrOutput) ToAutoProvisioningStatusPtrOutputWithContext(ctx context.Context) AutoProvisioningStatusPtrOutput {
	return o
}

func (o AutoProvisioningStatusPtrOutput) Elem() AutoProvisioningStatusOutput {
	return o.ApplyT(func(v *AutoProvisioningStatus) AutoProvisioningStatus {
		if v != nil {
			return *v
		}
		var ret AutoProvisioningStatus
		return ret
	}).(AutoProvisioningStatusOutput)
}

func (o AutoProvisioningStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoProvisioningStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoProvisioningStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoProvisioningStatusInput is an input type that accepts values of the AutoProvisioningStatus enum
// A concrete instance of `AutoProvisioningStatusInput` can be one of the following:
//
//	AutoProvisioningStatusEnabled
//	AutoProvisioningStatusDisabled
type AutoProvisioningStatusInput interface {
	pulumi.Input

	ToAutoProvisioningStatusOutput() AutoProvisioningStatusOutput
	ToAutoProvisioningStatusOutputWithContext(context.Context) AutoProvisioningStatusOutput
}

var autoProvisioningStatusPtrType = reflect.TypeOf((**AutoProvisioningStatus)(nil)).Elem()

type AutoProvisioningStatusPtrInput interface {
	pulumi.Input

	ToAutoProvisioningStatusPtrOutput() AutoProvisioningStatusPtrOutput
	ToAutoProvisioningStatusPtrOutputWithContext(context.Context) AutoProvisioningStatusPtrOutput
}

type autoProvisioningStatusPtr string

func AutoProvisioningStatusPtr(v string) AutoProvisioningStatusPtrInput {
	return (*autoProvisioningStatusPtr)(&v)
}

func (*autoProvisioningStatusPtr) ElementType() reflect.Type {
	return autoProvisioningStatusPtrType
}

func (in *autoProvisioningStatusPtr) ToAutoProvisioningStatusPtrOutput() AutoProvisioningStatusPtrOutput {
	return pulumi.ToOutput(in).(AutoProvisioningStatusPtrOutput)
}

func (in *autoProvisioningStatusPtr) ToAutoProvisioningStatusPtrOutputWithContext(ctx context.Context) AutoProvisioningStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoProvisioningStatusPtrOutput)
}

func (in *autoProvisioningStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*AutoProvisioningStatus] {
	return pulumix.Output[*AutoProvisioningStatus]{
		OutputState: in.ToAutoProvisioningStatusPtrOutputWithContext(ctx).OutputState,
	}
}

type ChildConfigurationType string

const (
	// Child configuration is a device configuration.
	ChildConfigurationTypeDeviceConfiguration = ChildConfigurationType("DeviceConfiguration")
	// Child configuration is an additional configuration.
	ChildConfigurationTypeAdditionalConfiguration = ChildConfigurationType("AdditionalConfiguration")
)

func (ChildConfigurationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ChildConfigurationType)(nil)).Elem()
}

func (e ChildConfigurationType) ToChildConfigurationTypeOutput() ChildConfigurationTypeOutput {
	return pulumi.ToOutput(e).(ChildConfigurationTypeOutput)
}

func (e ChildConfigurationType) ToChildConfigurationTypeOutputWithContext(ctx context.Context) ChildConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChildConfigurationTypeOutput)
}

func (e ChildConfigurationType) ToChildConfigurationTypePtrOutput() ChildConfigurationTypePtrOutput {
	return e.ToChildConfigurationTypePtrOutputWithContext(context.Background())
}

func (e ChildConfigurationType) ToChildConfigurationTypePtrOutputWithContext(ctx context.Context) ChildConfigurationTypePtrOutput {
	return ChildConfigurationType(e).ToChildConfigurationTypeOutputWithContext(ctx).ToChildConfigurationTypePtrOutputWithContext(ctx)
}

func (e ChildConfigurationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChildConfigurationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChildConfigurationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChildConfigurationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChildConfigurationTypeOutput struct{ *pulumi.OutputState }

func (ChildConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChildConfigurationType)(nil)).Elem()
}

func (o ChildConfigurationTypeOutput) ToChildConfigurationTypeOutput() ChildConfigurationTypeOutput {
	return o
}

func (o ChildConfigurationTypeOutput) ToChildConfigurationTypeOutputWithContext(ctx context.Context) ChildConfigurationTypeOutput {
	return o
}

func (o ChildConfigurationTypeOutput) ToChildConfigurationTypePtrOutput() ChildConfigurationTypePtrOutput {
	return o.ToChildConfigurationTypePtrOutputWithContext(context.Background())
}

func (o ChildConfigurationTypeOutput) ToChildConfigurationTypePtrOutputWithContext(ctx context.Context) ChildConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChildConfigurationType) *ChildConfigurationType {
		return &v
	}).(ChildConfigurationTypePtrOutput)
}

func (o ChildConfigurationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChildConfigurationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChildConfigurationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChildConfigurationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChildConfigurationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChildConfigurationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChildConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (ChildConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChildConfigurationType)(nil)).Elem()
}

func (o ChildConfigurationTypePtrOutput) ToChildConfigurationTypePtrOutput() ChildConfigurationTypePtrOutput {
	return o
}

func (o ChildConfigurationTypePtrOutput) ToChildConfigurationTypePtrOutputWithContext(ctx context.Context) ChildConfigurationTypePtrOutput {
	return o
}

func (o ChildConfigurationTypePtrOutput) Elem() ChildConfigurationTypeOutput {
	return o.ApplyT(func(v *ChildConfigurationType) ChildConfigurationType {
		if v != nil {
			return *v
		}
		var ret ChildConfigurationType
		return ret
	}).(ChildConfigurationTypeOutput)
}

func (o ChildConfigurationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChildConfigurationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChildConfigurationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChildConfigurationTypeInput is an input type that accepts values of the ChildConfigurationType enum
// A concrete instance of `ChildConfigurationTypeInput` can be one of the following:
//
//	ChildConfigurationTypeDeviceConfiguration
//	ChildConfigurationTypeAdditionalConfiguration
type ChildConfigurationTypeInput interface {
	pulumi.Input

	ToChildConfigurationTypeOutput() ChildConfigurationTypeOutput
	ToChildConfigurationTypeOutputWithContext(context.Context) ChildConfigurationTypeOutput
}

var childConfigurationTypePtrType = reflect.TypeOf((**ChildConfigurationType)(nil)).Elem()

type ChildConfigurationTypePtrInput interface {
	pulumi.Input

	ToChildConfigurationTypePtrOutput() ChildConfigurationTypePtrOutput
	ToChildConfigurationTypePtrOutputWithContext(context.Context) ChildConfigurationTypePtrOutput
}

type childConfigurationTypePtr string

func ChildConfigurationTypePtr(v string) ChildConfigurationTypePtrInput {
	return (*childConfigurationTypePtr)(&v)
}

func (*childConfigurationTypePtr) ElementType() reflect.Type {
	return childConfigurationTypePtrType
}

func (in *childConfigurationTypePtr) ToChildConfigurationTypePtrOutput() ChildConfigurationTypePtrOutput {
	return pulumi.ToOutput(in).(ChildConfigurationTypePtrOutput)
}

func (in *childConfigurationTypePtr) ToChildConfigurationTypePtrOutputWithContext(ctx context.Context) ChildConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChildConfigurationTypePtrOutput)
}

func (in *childConfigurationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ChildConfigurationType] {
	return pulumix.Output[*ChildConfigurationType]{
		OutputState: in.ToChildConfigurationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
type DoubleEncryptionStatus string

const (
	// Double encryption is disabled.
	DoubleEncryptionStatusDisabled = DoubleEncryptionStatus("Disabled")
	// Double encryption is enabled.
	DoubleEncryptionStatusEnabled = DoubleEncryptionStatus("Enabled")
)

func (DoubleEncryptionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DoubleEncryptionStatus)(nil)).Elem()
}

func (e DoubleEncryptionStatus) ToDoubleEncryptionStatusOutput() DoubleEncryptionStatusOutput {
	return pulumi.ToOutput(e).(DoubleEncryptionStatusOutput)
}

func (e DoubleEncryptionStatus) ToDoubleEncryptionStatusOutputWithContext(ctx context.Context) DoubleEncryptionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DoubleEncryptionStatusOutput)
}

func (e DoubleEncryptionStatus) ToDoubleEncryptionStatusPtrOutput() DoubleEncryptionStatusPtrOutput {
	return e.ToDoubleEncryptionStatusPtrOutputWithContext(context.Background())
}

func (e DoubleEncryptionStatus) ToDoubleEncryptionStatusPtrOutputWithContext(ctx context.Context) DoubleEncryptionStatusPtrOutput {
	return DoubleEncryptionStatus(e).ToDoubleEncryptionStatusOutputWithContext(ctx).ToDoubleEncryptionStatusPtrOutputWithContext(ctx)
}

func (e DoubleEncryptionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DoubleEncryptionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DoubleEncryptionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DoubleEncryptionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DoubleEncryptionStatusOutput struct{ *pulumi.OutputState }

func (DoubleEncryptionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoubleEncryptionStatus)(nil)).Elem()
}

func (o DoubleEncryptionStatusOutput) ToDoubleEncryptionStatusOutput() DoubleEncryptionStatusOutput {
	return o
}

func (o DoubleEncryptionStatusOutput) ToDoubleEncryptionStatusOutputWithContext(ctx context.Context) DoubleEncryptionStatusOutput {
	return o
}

func (o DoubleEncryptionStatusOutput) ToDoubleEncryptionStatusPtrOutput() DoubleEncryptionStatusPtrOutput {
	return o.ToDoubleEncryptionStatusPtrOutputWithContext(context.Background())
}

func (o DoubleEncryptionStatusOutput) ToDoubleEncryptionStatusPtrOutputWithContext(ctx context.Context) DoubleEncryptionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DoubleEncryptionStatus) *DoubleEncryptionStatus {
		return &v
	}).(DoubleEncryptionStatusPtrOutput)
}

func (o DoubleEncryptionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DoubleEncryptionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DoubleEncryptionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DoubleEncryptionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DoubleEncryptionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DoubleEncryptionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DoubleEncryptionStatusPtrOutput struct{ *pulumi.OutputState }

func (DoubleEncryptionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DoubleEncryptionStatus)(nil)).Elem()
}

func (o DoubleEncryptionStatusPtrOutput) ToDoubleEncryptionStatusPtrOutput() DoubleEncryptionStatusPtrOutput {
	return o
}

func (o DoubleEncryptionStatusPtrOutput) ToDoubleEncryptionStatusPtrOutputWithContext(ctx context.Context) DoubleEncryptionStatusPtrOutput {
	return o
}

func (o DoubleEncryptionStatusPtrOutput) Elem() DoubleEncryptionStatusOutput {
	return o.ApplyT(func(v *DoubleEncryptionStatus) DoubleEncryptionStatus {
		if v != nil {
			return *v
		}
		var ret DoubleEncryptionStatus
		return ret
	}).(DoubleEncryptionStatusOutput)
}

func (o DoubleEncryptionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DoubleEncryptionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DoubleEncryptionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DoubleEncryptionStatusInput is an input type that accepts values of the DoubleEncryptionStatus enum
// A concrete instance of `DoubleEncryptionStatusInput` can be one of the following:
//
//	DoubleEncryptionStatusDisabled
//	DoubleEncryptionStatusEnabled
type DoubleEncryptionStatusInput interface {
	pulumi.Input

	ToDoubleEncryptionStatusOutput() DoubleEncryptionStatusOutput
	ToDoubleEncryptionStatusOutputWithContext(context.Context) DoubleEncryptionStatusOutput
}

var doubleEncryptionStatusPtrType = reflect.TypeOf((**DoubleEncryptionStatus)(nil)).Elem()

type DoubleEncryptionStatusPtrInput interface {
	pulumi.Input

	ToDoubleEncryptionStatusPtrOutput() DoubleEncryptionStatusPtrOutput
	ToDoubleEncryptionStatusPtrOutputWithContext(context.Context) DoubleEncryptionStatusPtrOutput
}

type doubleEncryptionStatusPtr string

func DoubleEncryptionStatusPtr(v string) DoubleEncryptionStatusPtrInput {
	return (*doubleEncryptionStatusPtr)(&v)
}

func (*doubleEncryptionStatusPtr) ElementType() reflect.Type {
	return doubleEncryptionStatusPtrType
}

func (in *doubleEncryptionStatusPtr) ToDoubleEncryptionStatusPtrOutput() DoubleEncryptionStatusPtrOutput {
	return pulumi.ToOutput(in).(DoubleEncryptionStatusPtrOutput)
}

func (in *doubleEncryptionStatusPtr) ToDoubleEncryptionStatusPtrOutputWithContext(ctx context.Context) DoubleEncryptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DoubleEncryptionStatusPtrOutput)
}

func (in *doubleEncryptionStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*DoubleEncryptionStatus] {
	return pulumix.Output[*DoubleEncryptionStatus]{
		OutputState: in.ToDoubleEncryptionStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Name of the stage.
type NotificationStageName string

const (
	// Notification at order item shipped from microsoft datacenter.
	NotificationStageNameShipped = NotificationStageName("Shipped")
	// Notification at order item delivered to customer.
	NotificationStageNameDelivered = NotificationStageName("Delivered")
)

func (NotificationStageName) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationStageName)(nil)).Elem()
}

func (e NotificationStageName) ToNotificationStageNameOutput() NotificationStageNameOutput {
	return pulumi.ToOutput(e).(NotificationStageNameOutput)
}

func (e NotificationStageName) ToNotificationStageNameOutputWithContext(ctx context.Context) NotificationStageNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationStageNameOutput)
}

func (e NotificationStageName) ToNotificationStageNamePtrOutput() NotificationStageNamePtrOutput {
	return e.ToNotificationStageNamePtrOutputWithContext(context.Background())
}

func (e NotificationStageName) ToNotificationStageNamePtrOutputWithContext(ctx context.Context) NotificationStageNamePtrOutput {
	return NotificationStageName(e).ToNotificationStageNameOutputWithContext(ctx).ToNotificationStageNamePtrOutputWithContext(ctx)
}

func (e NotificationStageName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationStageName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationStageName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationStageName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationStageNameOutput struct{ *pulumi.OutputState }

func (NotificationStageNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationStageName)(nil)).Elem()
}

func (o NotificationStageNameOutput) ToNotificationStageNameOutput() NotificationStageNameOutput {
	return o
}

func (o NotificationStageNameOutput) ToNotificationStageNameOutputWithContext(ctx context.Context) NotificationStageNameOutput {
	return o
}

func (o NotificationStageNameOutput) ToNotificationStageNamePtrOutput() NotificationStageNamePtrOutput {
	return o.ToNotificationStageNamePtrOutputWithContext(context.Background())
}

func (o NotificationStageNameOutput) ToNotificationStageNamePtrOutputWithContext(ctx context.Context) NotificationStageNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationStageName) *NotificationStageName {
		return &v
	}).(NotificationStageNamePtrOutput)
}

func (o NotificationStageNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationStageNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationStageName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationStageNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationStageNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationStageName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationStageNamePtrOutput struct{ *pulumi.OutputState }

func (NotificationStageNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationStageName)(nil)).Elem()
}

func (o NotificationStageNamePtrOutput) ToNotificationStageNamePtrOutput() NotificationStageNamePtrOutput {
	return o
}

func (o NotificationStageNamePtrOutput) ToNotificationStageNamePtrOutputWithContext(ctx context.Context) NotificationStageNamePtrOutput {
	return o
}

func (o NotificationStageNamePtrOutput) Elem() NotificationStageNameOutput {
	return o.ApplyT(func(v *NotificationStageName) NotificationStageName {
		if v != nil {
			return *v
		}
		var ret NotificationStageName
		return ret
	}).(NotificationStageNameOutput)
}

func (o NotificationStageNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationStageNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationStageName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationStageNameInput is an input type that accepts values of the NotificationStageName enum
// A concrete instance of `NotificationStageNameInput` can be one of the following:
//
//	NotificationStageNameShipped
//	NotificationStageNameDelivered
type NotificationStageNameInput interface {
	pulumi.Input

	ToNotificationStageNameOutput() NotificationStageNameOutput
	ToNotificationStageNameOutputWithContext(context.Context) NotificationStageNameOutput
}

var notificationStageNamePtrType = reflect.TypeOf((**NotificationStageName)(nil)).Elem()

type NotificationStageNamePtrInput interface {
	pulumi.Input

	ToNotificationStageNamePtrOutput() NotificationStageNamePtrOutput
	ToNotificationStageNamePtrOutputWithContext(context.Context) NotificationStageNamePtrOutput
}

type notificationStageNamePtr string

func NotificationStageNamePtr(v string) NotificationStageNamePtrInput {
	return (*notificationStageNamePtr)(&v)
}

func (*notificationStageNamePtr) ElementType() reflect.Type {
	return notificationStageNamePtrType
}

func (in *notificationStageNamePtr) ToNotificationStageNamePtrOutput() NotificationStageNamePtrOutput {
	return pulumi.ToOutput(in).(NotificationStageNamePtrOutput)
}

func (in *notificationStageNamePtr) ToNotificationStageNamePtrOutputWithContext(ctx context.Context) NotificationStageNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationStageNamePtrOutput)
}

func (in *notificationStageNamePtr) ToOutput(ctx context.Context) pulumix.Output[*NotificationStageName] {
	return pulumix.Output[*NotificationStageName]{
		OutputState: in.ToNotificationStageNamePtrOutputWithContext(ctx).OutputState,
	}
}

// Order item type.
type OrderItemType string

const (
	// Purchase OrderItem.
	OrderItemTypePurchase = OrderItemType("Purchase")
	// Rental OrderItem.
	OrderItemTypeRental = OrderItemType("Rental")
	// Orders placed outside of azure.
	OrderItemTypeExternal = OrderItemType("External")
)

func (OrderItemType) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderItemType)(nil)).Elem()
}

func (e OrderItemType) ToOrderItemTypeOutput() OrderItemTypeOutput {
	return pulumi.ToOutput(e).(OrderItemTypeOutput)
}

func (e OrderItemType) ToOrderItemTypeOutputWithContext(ctx context.Context) OrderItemTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OrderItemTypeOutput)
}

func (e OrderItemType) ToOrderItemTypePtrOutput() OrderItemTypePtrOutput {
	return e.ToOrderItemTypePtrOutputWithContext(context.Background())
}

func (e OrderItemType) ToOrderItemTypePtrOutputWithContext(ctx context.Context) OrderItemTypePtrOutput {
	return OrderItemType(e).ToOrderItemTypeOutputWithContext(ctx).ToOrderItemTypePtrOutputWithContext(ctx)
}

func (e OrderItemType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrderItemType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrderItemType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrderItemType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrderItemTypeOutput struct{ *pulumi.OutputState }

func (OrderItemTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderItemType)(nil)).Elem()
}

func (o OrderItemTypeOutput) ToOrderItemTypeOutput() OrderItemTypeOutput {
	return o
}

func (o OrderItemTypeOutput) ToOrderItemTypeOutputWithContext(ctx context.Context) OrderItemTypeOutput {
	return o
}

func (o OrderItemTypeOutput) ToOrderItemTypePtrOutput() OrderItemTypePtrOutput {
	return o.ToOrderItemTypePtrOutputWithContext(context.Background())
}

func (o OrderItemTypeOutput) ToOrderItemTypePtrOutputWithContext(ctx context.Context) OrderItemTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrderItemType) *OrderItemType {
		return &v
	}).(OrderItemTypePtrOutput)
}

func (o OrderItemTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OrderItemTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrderItemType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OrderItemTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrderItemTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrderItemType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OrderItemTypePtrOutput struct{ *pulumi.OutputState }

func (OrderItemTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderItemType)(nil)).Elem()
}

func (o OrderItemTypePtrOutput) ToOrderItemTypePtrOutput() OrderItemTypePtrOutput {
	return o
}

func (o OrderItemTypePtrOutput) ToOrderItemTypePtrOutputWithContext(ctx context.Context) OrderItemTypePtrOutput {
	return o
}

func (o OrderItemTypePtrOutput) Elem() OrderItemTypeOutput {
	return o.ApplyT(func(v *OrderItemType) OrderItemType {
		if v != nil {
			return *v
		}
		var ret OrderItemType
		return ret
	}).(OrderItemTypeOutput)
}

func (o OrderItemTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrderItemTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OrderItemType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OrderItemTypeInput is an input type that accepts values of the OrderItemType enum
// A concrete instance of `OrderItemTypeInput` can be one of the following:
//
//	OrderItemTypePurchase
//	OrderItemTypeRental
//	OrderItemTypeExternal
type OrderItemTypeInput interface {
	pulumi.Input

	ToOrderItemTypeOutput() OrderItemTypeOutput
	ToOrderItemTypeOutputWithContext(context.Context) OrderItemTypeOutput
}

var orderItemTypePtrType = reflect.TypeOf((**OrderItemType)(nil)).Elem()

type OrderItemTypePtrInput interface {
	pulumi.Input

	ToOrderItemTypePtrOutput() OrderItemTypePtrOutput
	ToOrderItemTypePtrOutputWithContext(context.Context) OrderItemTypePtrOutput
}

type orderItemTypePtr string

func OrderItemTypePtr(v string) OrderItemTypePtrInput {
	return (*orderItemTypePtr)(&v)
}

func (*orderItemTypePtr) ElementType() reflect.Type {
	return orderItemTypePtrType
}

func (in *orderItemTypePtr) ToOrderItemTypePtrOutput() OrderItemTypePtrOutput {
	return pulumi.ToOutput(in).(OrderItemTypePtrOutput)
}

func (in *orderItemTypePtr) ToOrderItemTypePtrOutputWithContext(ctx context.Context) OrderItemTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OrderItemTypePtrOutput)
}

func (in *orderItemTypePtr) ToOutput(ctx context.Context) pulumix.Output[*OrderItemType] {
	return pulumix.Output[*OrderItemType]{
		OutputState: in.ToOrderItemTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Defines the mode of the Order item.
type OrderMode string

const (
	// Default Order mode.
	OrderModeDefault = OrderMode("Default")
	// Mode in which the Order will not be fulfilled.
	OrderModeDoNotFulfill = OrderMode("DoNotFulfill")
)

func (OrderMode) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderMode)(nil)).Elem()
}

func (e OrderMode) ToOrderModeOutput() OrderModeOutput {
	return pulumi.ToOutput(e).(OrderModeOutput)
}

func (e OrderMode) ToOrderModeOutputWithContext(ctx context.Context) OrderModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OrderModeOutput)
}

func (e OrderMode) ToOrderModePtrOutput() OrderModePtrOutput {
	return e.ToOrderModePtrOutputWithContext(context.Background())
}

func (e OrderMode) ToOrderModePtrOutputWithContext(ctx context.Context) OrderModePtrOutput {
	return OrderMode(e).ToOrderModeOutputWithContext(ctx).ToOrderModePtrOutputWithContext(ctx)
}

func (e OrderMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrderMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrderMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrderMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrderModeOutput struct{ *pulumi.OutputState }

func (OrderModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderMode)(nil)).Elem()
}

func (o OrderModeOutput) ToOrderModeOutput() OrderModeOutput {
	return o
}

func (o OrderModeOutput) ToOrderModeOutputWithContext(ctx context.Context) OrderModeOutput {
	return o
}

func (o OrderModeOutput) ToOrderModePtrOutput() OrderModePtrOutput {
	return o.ToOrderModePtrOutputWithContext(context.Background())
}

func (o OrderModeOutput) ToOrderModePtrOutputWithContext(ctx context.Context) OrderModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrderMode) *OrderMode {
		return &v
	}).(OrderModePtrOutput)
}

func (o OrderModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OrderModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrderMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OrderModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrderModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrderMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OrderModePtrOutput struct{ *pulumi.OutputState }

func (OrderModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderMode)(nil)).Elem()
}

func (o OrderModePtrOutput) ToOrderModePtrOutput() OrderModePtrOutput {
	return o
}

func (o OrderModePtrOutput) ToOrderModePtrOutputWithContext(ctx context.Context) OrderModePtrOutput {
	return o
}

func (o OrderModePtrOutput) Elem() OrderModeOutput {
	return o.ApplyT(func(v *OrderMode) OrderMode {
		if v != nil {
			return *v
		}
		var ret OrderMode
		return ret
	}).(OrderModeOutput)
}

func (o OrderModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrderModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OrderMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OrderModeInput is an input type that accepts values of the OrderMode enum
// A concrete instance of `OrderModeInput` can be one of the following:
//
//	OrderModeDefault
//	OrderModeDoNotFulfill
type OrderModeInput interface {
	pulumi.Input

	ToOrderModeOutput() OrderModeOutput
	ToOrderModeOutputWithContext(context.Context) OrderModeOutput
}

var orderModePtrType = reflect.TypeOf((**OrderMode)(nil)).Elem()

type OrderModePtrInput interface {
	pulumi.Input

	ToOrderModePtrOutput() OrderModePtrOutput
	ToOrderModePtrOutputWithContext(context.Context) OrderModePtrOutput
}

type orderModePtr string

func OrderModePtr(v string) OrderModePtrInput {
	return (*orderModePtr)(&v)
}

func (*orderModePtr) ElementType() reflect.Type {
	return orderModePtrType
}

func (in *orderModePtr) ToOrderModePtrOutput() OrderModePtrOutput {
	return pulumi.ToOutput(in).(OrderModePtrOutput)
}

func (in *orderModePtr) ToOrderModePtrOutputWithContext(ctx context.Context) OrderModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OrderModePtrOutput)
}

func (in *orderModePtr) ToOutput(ctx context.Context) pulumix.Output[*OrderMode] {
	return pulumix.Output[*OrderMode]{
		OutputState: in.ToOrderModePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of product filter.
type SupportedFilterTypes string

const (
	// Ship to country.
	SupportedFilterTypesShipToCountries = SupportedFilterTypes("ShipToCountries")
	// Double encryption status.
	SupportedFilterTypesDoubleEncryptionStatus = SupportedFilterTypes("DoubleEncryptionStatus")
)

func (SupportedFilterTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportedFilterTypes)(nil)).Elem()
}

func (e SupportedFilterTypes) ToSupportedFilterTypesOutput() SupportedFilterTypesOutput {
	return pulumi.ToOutput(e).(SupportedFilterTypesOutput)
}

func (e SupportedFilterTypes) ToSupportedFilterTypesOutputWithContext(ctx context.Context) SupportedFilterTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SupportedFilterTypesOutput)
}

func (e SupportedFilterTypes) ToSupportedFilterTypesPtrOutput() SupportedFilterTypesPtrOutput {
	return e.ToSupportedFilterTypesPtrOutputWithContext(context.Background())
}

func (e SupportedFilterTypes) ToSupportedFilterTypesPtrOutputWithContext(ctx context.Context) SupportedFilterTypesPtrOutput {
	return SupportedFilterTypes(e).ToSupportedFilterTypesOutputWithContext(ctx).ToSupportedFilterTypesPtrOutputWithContext(ctx)
}

func (e SupportedFilterTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportedFilterTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportedFilterTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SupportedFilterTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SupportedFilterTypesOutput struct{ *pulumi.OutputState }

func (SupportedFilterTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportedFilterTypes)(nil)).Elem()
}

func (o SupportedFilterTypesOutput) ToSupportedFilterTypesOutput() SupportedFilterTypesOutput {
	return o
}

func (o SupportedFilterTypesOutput) ToSupportedFilterTypesOutputWithContext(ctx context.Context) SupportedFilterTypesOutput {
	return o
}

func (o SupportedFilterTypesOutput) ToSupportedFilterTypesPtrOutput() SupportedFilterTypesPtrOutput {
	return o.ToSupportedFilterTypesPtrOutputWithContext(context.Background())
}

func (o SupportedFilterTypesOutput) ToSupportedFilterTypesPtrOutputWithContext(ctx context.Context) SupportedFilterTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SupportedFilterTypes) *SupportedFilterTypes {
		return &v
	}).(SupportedFilterTypesPtrOutput)
}

func (o SupportedFilterTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SupportedFilterTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportedFilterTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SupportedFilterTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportedFilterTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportedFilterTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SupportedFilterTypesPtrOutput struct{ *pulumi.OutputState }

func (SupportedFilterTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SupportedFilterTypes)(nil)).Elem()
}

func (o SupportedFilterTypesPtrOutput) ToSupportedFilterTypesPtrOutput() SupportedFilterTypesPtrOutput {
	return o
}

func (o SupportedFilterTypesPtrOutput) ToSupportedFilterTypesPtrOutputWithContext(ctx context.Context) SupportedFilterTypesPtrOutput {
	return o
}

func (o SupportedFilterTypesPtrOutput) Elem() SupportedFilterTypesOutput {
	return o.ApplyT(func(v *SupportedFilterTypes) SupportedFilterTypes {
		if v != nil {
			return *v
		}
		var ret SupportedFilterTypes
		return ret
	}).(SupportedFilterTypesOutput)
}

func (o SupportedFilterTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportedFilterTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SupportedFilterTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SupportedFilterTypesInput is an input type that accepts values of the SupportedFilterTypes enum
// A concrete instance of `SupportedFilterTypesInput` can be one of the following:
//
//	SupportedFilterTypesShipToCountries
//	SupportedFilterTypesDoubleEncryptionStatus
type SupportedFilterTypesInput interface {
	pulumi.Input

	ToSupportedFilterTypesOutput() SupportedFilterTypesOutput
	ToSupportedFilterTypesOutputWithContext(context.Context) SupportedFilterTypesOutput
}

var supportedFilterTypesPtrType = reflect.TypeOf((**SupportedFilterTypes)(nil)).Elem()

type SupportedFilterTypesPtrInput interface {
	pulumi.Input

	ToSupportedFilterTypesPtrOutput() SupportedFilterTypesPtrOutput
	ToSupportedFilterTypesPtrOutputWithContext(context.Context) SupportedFilterTypesPtrOutput
}

type supportedFilterTypesPtr string

func SupportedFilterTypesPtr(v string) SupportedFilterTypesPtrInput {
	return (*supportedFilterTypesPtr)(&v)
}

func (*supportedFilterTypesPtr) ElementType() reflect.Type {
	return supportedFilterTypesPtrType
}

func (in *supportedFilterTypesPtr) ToSupportedFilterTypesPtrOutput() SupportedFilterTypesPtrOutput {
	return pulumi.ToOutput(in).(SupportedFilterTypesPtrOutput)
}

func (in *supportedFilterTypesPtr) ToSupportedFilterTypesPtrOutputWithContext(ctx context.Context) SupportedFilterTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SupportedFilterTypesPtrOutput)
}

func (in *supportedFilterTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*SupportedFilterTypes] {
	return pulumix.Output[*SupportedFilterTypes]{
		OutputState: in.ToSupportedFilterTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// Term Commitment Type
type TermCommitmentType string

const (
	// Pay as you go Term Commitment Model.
	TermCommitmentTypeNone = TermCommitmentType("None")
	// Trial Term Commitment Model.
	TermCommitmentTypeTrial = TermCommitmentType("Trial")
	// Time based Term Commitment Model.
	TermCommitmentTypeTimed = TermCommitmentType("Timed")
)

func (TermCommitmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*TermCommitmentType)(nil)).Elem()
}

func (e TermCommitmentType) ToTermCommitmentTypeOutput() TermCommitmentTypeOutput {
	return pulumi.ToOutput(e).(TermCommitmentTypeOutput)
}

func (e TermCommitmentType) ToTermCommitmentTypeOutputWithContext(ctx context.Context) TermCommitmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TermCommitmentTypeOutput)
}

func (e TermCommitmentType) ToTermCommitmentTypePtrOutput() TermCommitmentTypePtrOutput {
	return e.ToTermCommitmentTypePtrOutputWithContext(context.Background())
}

func (e TermCommitmentType) ToTermCommitmentTypePtrOutputWithContext(ctx context.Context) TermCommitmentTypePtrOutput {
	return TermCommitmentType(e).ToTermCommitmentTypeOutputWithContext(ctx).ToTermCommitmentTypePtrOutputWithContext(ctx)
}

func (e TermCommitmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TermCommitmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TermCommitmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TermCommitmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TermCommitmentTypeOutput struct{ *pulumi.OutputState }

func (TermCommitmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TermCommitmentType)(nil)).Elem()
}

func (o TermCommitmentTypeOutput) ToTermCommitmentTypeOutput() TermCommitmentTypeOutput {
	return o
}

func (o TermCommitmentTypeOutput) ToTermCommitmentTypeOutputWithContext(ctx context.Context) TermCommitmentTypeOutput {
	return o
}

func (o TermCommitmentTypeOutput) ToTermCommitmentTypePtrOutput() TermCommitmentTypePtrOutput {
	return o.ToTermCommitmentTypePtrOutputWithContext(context.Background())
}

func (o TermCommitmentTypeOutput) ToTermCommitmentTypePtrOutputWithContext(ctx context.Context) TermCommitmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TermCommitmentType) *TermCommitmentType {
		return &v
	}).(TermCommitmentTypePtrOutput)
}

func (o TermCommitmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TermCommitmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TermCommitmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TermCommitmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TermCommitmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TermCommitmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TermCommitmentTypePtrOutput struct{ *pulumi.OutputState }

func (TermCommitmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TermCommitmentType)(nil)).Elem()
}

func (o TermCommitmentTypePtrOutput) ToTermCommitmentTypePtrOutput() TermCommitmentTypePtrOutput {
	return o
}

func (o TermCommitmentTypePtrOutput) ToTermCommitmentTypePtrOutputWithContext(ctx context.Context) TermCommitmentTypePtrOutput {
	return o
}

func (o TermCommitmentTypePtrOutput) Elem() TermCommitmentTypeOutput {
	return o.ApplyT(func(v *TermCommitmentType) TermCommitmentType {
		if v != nil {
			return *v
		}
		var ret TermCommitmentType
		return ret
	}).(TermCommitmentTypeOutput)
}

func (o TermCommitmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TermCommitmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TermCommitmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TermCommitmentTypeInput is an input type that accepts values of the TermCommitmentType enum
// A concrete instance of `TermCommitmentTypeInput` can be one of the following:
//
//	TermCommitmentTypeNone
//	TermCommitmentTypeTrial
//	TermCommitmentTypeTimed
type TermCommitmentTypeInput interface {
	pulumi.Input

	ToTermCommitmentTypeOutput() TermCommitmentTypeOutput
	ToTermCommitmentTypeOutputWithContext(context.Context) TermCommitmentTypeOutput
}

var termCommitmentTypePtrType = reflect.TypeOf((**TermCommitmentType)(nil)).Elem()

type TermCommitmentTypePtrInput interface {
	pulumi.Input

	ToTermCommitmentTypePtrOutput() TermCommitmentTypePtrOutput
	ToTermCommitmentTypePtrOutputWithContext(context.Context) TermCommitmentTypePtrOutput
}

type termCommitmentTypePtr string

func TermCommitmentTypePtr(v string) TermCommitmentTypePtrInput {
	return (*termCommitmentTypePtr)(&v)
}

func (*termCommitmentTypePtr) ElementType() reflect.Type {
	return termCommitmentTypePtrType
}

func (in *termCommitmentTypePtr) ToTermCommitmentTypePtrOutput() TermCommitmentTypePtrOutput {
	return pulumi.ToOutput(in).(TermCommitmentTypePtrOutput)
}

func (in *termCommitmentTypePtr) ToTermCommitmentTypePtrOutputWithContext(ctx context.Context) TermCommitmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TermCommitmentTypePtrOutput)
}

func (in *termCommitmentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TermCommitmentType] {
	return pulumix.Output[*TermCommitmentType]{
		OutputState: in.ToTermCommitmentTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates Shipment Logistics type that the customer preferred.
type TransportShipmentTypes string

const (
	// Shipment Logistics is handled by the customer.
	TransportShipmentTypesCustomerManaged = TransportShipmentTypes("CustomerManaged")
	// Shipment Logistics is handled by Microsoft.
	TransportShipmentTypesMicrosoftManaged = TransportShipmentTypes("MicrosoftManaged")
)

func (TransportShipmentTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportShipmentTypes)(nil)).Elem()
}

func (e TransportShipmentTypes) ToTransportShipmentTypesOutput() TransportShipmentTypesOutput {
	return pulumi.ToOutput(e).(TransportShipmentTypesOutput)
}

func (e TransportShipmentTypes) ToTransportShipmentTypesOutputWithContext(ctx context.Context) TransportShipmentTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransportShipmentTypesOutput)
}

func (e TransportShipmentTypes) ToTransportShipmentTypesPtrOutput() TransportShipmentTypesPtrOutput {
	return e.ToTransportShipmentTypesPtrOutputWithContext(context.Background())
}

func (e TransportShipmentTypes) ToTransportShipmentTypesPtrOutputWithContext(ctx context.Context) TransportShipmentTypesPtrOutput {
	return TransportShipmentTypes(e).ToTransportShipmentTypesOutputWithContext(ctx).ToTransportShipmentTypesPtrOutputWithContext(ctx)
}

func (e TransportShipmentTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransportShipmentTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransportShipmentTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransportShipmentTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransportShipmentTypesOutput struct{ *pulumi.OutputState }

func (TransportShipmentTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportShipmentTypes)(nil)).Elem()
}

func (o TransportShipmentTypesOutput) ToTransportShipmentTypesOutput() TransportShipmentTypesOutput {
	return o
}

func (o TransportShipmentTypesOutput) ToTransportShipmentTypesOutputWithContext(ctx context.Context) TransportShipmentTypesOutput {
	return o
}

func (o TransportShipmentTypesOutput) ToTransportShipmentTypesPtrOutput() TransportShipmentTypesPtrOutput {
	return o.ToTransportShipmentTypesPtrOutputWithContext(context.Background())
}

func (o TransportShipmentTypesOutput) ToTransportShipmentTypesPtrOutputWithContext(ctx context.Context) TransportShipmentTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransportShipmentTypes) *TransportShipmentTypes {
		return &v
	}).(TransportShipmentTypesPtrOutput)
}

func (o TransportShipmentTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransportShipmentTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransportShipmentTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransportShipmentTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransportShipmentTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransportShipmentTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransportShipmentTypesPtrOutput struct{ *pulumi.OutputState }

func (TransportShipmentTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportShipmentTypes)(nil)).Elem()
}

func (o TransportShipmentTypesPtrOutput) ToTransportShipmentTypesPtrOutput() TransportShipmentTypesPtrOutput {
	return o
}

func (o TransportShipmentTypesPtrOutput) ToTransportShipmentTypesPtrOutputWithContext(ctx context.Context) TransportShipmentTypesPtrOutput {
	return o
}

func (o TransportShipmentTypesPtrOutput) Elem() TransportShipmentTypesOutput {
	return o.ApplyT(func(v *TransportShipmentTypes) TransportShipmentTypes {
		if v != nil {
			return *v
		}
		var ret TransportShipmentTypes
		return ret
	}).(TransportShipmentTypesOutput)
}

func (o TransportShipmentTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransportShipmentTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransportShipmentTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransportShipmentTypesInput is an input type that accepts values of the TransportShipmentTypes enum
// A concrete instance of `TransportShipmentTypesInput` can be one of the following:
//
//	TransportShipmentTypesCustomerManaged
//	TransportShipmentTypesMicrosoftManaged
type TransportShipmentTypesInput interface {
	pulumi.Input

	ToTransportShipmentTypesOutput() TransportShipmentTypesOutput
	ToTransportShipmentTypesOutputWithContext(context.Context) TransportShipmentTypesOutput
}

var transportShipmentTypesPtrType = reflect.TypeOf((**TransportShipmentTypes)(nil)).Elem()

type TransportShipmentTypesPtrInput interface {
	pulumi.Input

	ToTransportShipmentTypesPtrOutput() TransportShipmentTypesPtrOutput
	ToTransportShipmentTypesPtrOutputWithContext(context.Context) TransportShipmentTypesPtrOutput
}

type transportShipmentTypesPtr string

func TransportShipmentTypesPtr(v string) TransportShipmentTypesPtrInput {
	return (*transportShipmentTypesPtr)(&v)
}

func (*transportShipmentTypesPtr) ElementType() reflect.Type {
	return transportShipmentTypesPtrType
}

func (in *transportShipmentTypesPtr) ToTransportShipmentTypesPtrOutput() TransportShipmentTypesPtrOutput {
	return pulumi.ToOutput(in).(TransportShipmentTypesPtrOutput)
}

func (in *transportShipmentTypesPtr) ToTransportShipmentTypesPtrOutputWithContext(ctx context.Context) TransportShipmentTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransportShipmentTypesPtrOutput)
}

func (in *transportShipmentTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*TransportShipmentTypes] {
	return pulumix.Output[*TransportShipmentTypes]{
		OutputState: in.ToTransportShipmentTypesPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AddressClassificationOutput{})
	pulumi.RegisterOutputType(AddressClassificationPtrOutput{})
	pulumi.RegisterOutputType(AddressTypeOutput{})
	pulumi.RegisterOutputType(AddressTypePtrOutput{})
	pulumi.RegisterOutputType(AutoProvisioningStatusOutput{})
	pulumi.RegisterOutputType(AutoProvisioningStatusPtrOutput{})
	pulumi.RegisterOutputType(ChildConfigurationTypeOutput{})
	pulumi.RegisterOutputType(ChildConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(DoubleEncryptionStatusOutput{})
	pulumi.RegisterOutputType(DoubleEncryptionStatusPtrOutput{})
	pulumi.RegisterOutputType(NotificationStageNameOutput{})
	pulumi.RegisterOutputType(NotificationStageNamePtrOutput{})
	pulumi.RegisterOutputType(OrderItemTypeOutput{})
	pulumi.RegisterOutputType(OrderItemTypePtrOutput{})
	pulumi.RegisterOutputType(OrderModeOutput{})
	pulumi.RegisterOutputType(OrderModePtrOutput{})
	pulumi.RegisterOutputType(SupportedFilterTypesOutput{})
	pulumi.RegisterOutputType(SupportedFilterTypesPtrOutput{})
	pulumi.RegisterOutputType(TermCommitmentTypeOutput{})
	pulumi.RegisterOutputType(TermCommitmentTypePtrOutput{})
	pulumi.RegisterOutputType(TransportShipmentTypesOutput{})
	pulumi.RegisterOutputType(TransportShipmentTypesPtrOutput{})
}
