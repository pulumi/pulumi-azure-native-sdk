// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Additional Configuration details.
type AdditionalConfiguration struct {
	// Hierarchy of the product which uniquely identifies the configuration.
	HierarchyInformation HierarchyInformation `pulumi:"hierarchyInformation"`
	// List Provisioning Details for Devices in Additional Config.
	ProvisioningDetails []ProvisioningDetails `pulumi:"provisioningDetails"`
	// Quantity of the product.
	Quantity int `pulumi:"quantity"`
}

// AdditionalConfigurationInput is an input type that accepts AdditionalConfigurationArgs and AdditionalConfigurationOutput values.
// You can construct a concrete instance of `AdditionalConfigurationInput` via:
//
//	AdditionalConfigurationArgs{...}
type AdditionalConfigurationInput interface {
	pulumi.Input

	ToAdditionalConfigurationOutput() AdditionalConfigurationOutput
	ToAdditionalConfigurationOutputWithContext(context.Context) AdditionalConfigurationOutput
}

// Additional Configuration details.
type AdditionalConfigurationArgs struct {
	// Hierarchy of the product which uniquely identifies the configuration.
	HierarchyInformation HierarchyInformationInput `pulumi:"hierarchyInformation"`
	// List Provisioning Details for Devices in Additional Config.
	ProvisioningDetails ProvisioningDetailsArrayInput `pulumi:"provisioningDetails"`
	// Quantity of the product.
	Quantity pulumi.IntInput `pulumi:"quantity"`
}

func (AdditionalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalConfiguration)(nil)).Elem()
}

func (i AdditionalConfigurationArgs) ToAdditionalConfigurationOutput() AdditionalConfigurationOutput {
	return i.ToAdditionalConfigurationOutputWithContext(context.Background())
}

func (i AdditionalConfigurationArgs) ToAdditionalConfigurationOutputWithContext(ctx context.Context) AdditionalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalConfigurationOutput)
}

// AdditionalConfigurationArrayInput is an input type that accepts AdditionalConfigurationArray and AdditionalConfigurationArrayOutput values.
// You can construct a concrete instance of `AdditionalConfigurationArrayInput` via:
//
//	AdditionalConfigurationArray{ AdditionalConfigurationArgs{...} }
type AdditionalConfigurationArrayInput interface {
	pulumi.Input

	ToAdditionalConfigurationArrayOutput() AdditionalConfigurationArrayOutput
	ToAdditionalConfigurationArrayOutputWithContext(context.Context) AdditionalConfigurationArrayOutput
}

type AdditionalConfigurationArray []AdditionalConfigurationInput

func (AdditionalConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalConfiguration)(nil)).Elem()
}

func (i AdditionalConfigurationArray) ToAdditionalConfigurationArrayOutput() AdditionalConfigurationArrayOutput {
	return i.ToAdditionalConfigurationArrayOutputWithContext(context.Background())
}

func (i AdditionalConfigurationArray) ToAdditionalConfigurationArrayOutputWithContext(ctx context.Context) AdditionalConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalConfigurationArrayOutput)
}

// Additional Configuration details.
type AdditionalConfigurationOutput struct{ *pulumi.OutputState }

func (AdditionalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalConfiguration)(nil)).Elem()
}

func (o AdditionalConfigurationOutput) ToAdditionalConfigurationOutput() AdditionalConfigurationOutput {
	return o
}

func (o AdditionalConfigurationOutput) ToAdditionalConfigurationOutputWithContext(ctx context.Context) AdditionalConfigurationOutput {
	return o
}

// Hierarchy of the product which uniquely identifies the configuration.
func (o AdditionalConfigurationOutput) HierarchyInformation() HierarchyInformationOutput {
	return o.ApplyT(func(v AdditionalConfiguration) HierarchyInformation { return v.HierarchyInformation }).(HierarchyInformationOutput)
}

// List Provisioning Details for Devices in Additional Config.
func (o AdditionalConfigurationOutput) ProvisioningDetails() ProvisioningDetailsArrayOutput {
	return o.ApplyT(func(v AdditionalConfiguration) []ProvisioningDetails { return v.ProvisioningDetails }).(ProvisioningDetailsArrayOutput)
}

// Quantity of the product.
func (o AdditionalConfigurationOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v AdditionalConfiguration) int { return v.Quantity }).(pulumi.IntOutput)
}

type AdditionalConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AdditionalConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalConfiguration)(nil)).Elem()
}

func (o AdditionalConfigurationArrayOutput) ToAdditionalConfigurationArrayOutput() AdditionalConfigurationArrayOutput {
	return o
}

func (o AdditionalConfigurationArrayOutput) ToAdditionalConfigurationArrayOutputWithContext(ctx context.Context) AdditionalConfigurationArrayOutput {
	return o
}

func (o AdditionalConfigurationArrayOutput) Index(i pulumi.IntInput) AdditionalConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalConfiguration {
		return vs[0].([]AdditionalConfiguration)[vs[1].(int)]
	}).(AdditionalConfigurationOutput)
}

// Additional Configuration details.
type AdditionalConfigurationResponse struct {
	// Hierarchy of the product which uniquely identifies the configuration.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// List Provisioning Details for Devices in Additional Config.
	ProvisioningDetails []ProvisioningDetailsResponse `pulumi:"provisioningDetails"`
	// Quantity of the product.
	Quantity int `pulumi:"quantity"`
}

// Additional Configuration details.
type AdditionalConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AdditionalConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalConfigurationResponse)(nil)).Elem()
}

func (o AdditionalConfigurationResponseOutput) ToAdditionalConfigurationResponseOutput() AdditionalConfigurationResponseOutput {
	return o
}

func (o AdditionalConfigurationResponseOutput) ToAdditionalConfigurationResponseOutputWithContext(ctx context.Context) AdditionalConfigurationResponseOutput {
	return o
}

// Hierarchy of the product which uniquely identifies the configuration.
func (o AdditionalConfigurationResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v AdditionalConfigurationResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// List Provisioning Details for Devices in Additional Config.
func (o AdditionalConfigurationResponseOutput) ProvisioningDetails() ProvisioningDetailsResponseArrayOutput {
	return o.ApplyT(func(v AdditionalConfigurationResponse) []ProvisioningDetailsResponse { return v.ProvisioningDetails }).(ProvisioningDetailsResponseArrayOutput)
}

// Quantity of the product.
func (o AdditionalConfigurationResponseOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v AdditionalConfigurationResponse) int { return v.Quantity }).(pulumi.IntOutput)
}

type AdditionalConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalConfigurationResponse)(nil)).Elem()
}

func (o AdditionalConfigurationResponseArrayOutput) ToAdditionalConfigurationResponseArrayOutput() AdditionalConfigurationResponseArrayOutput {
	return o
}

func (o AdditionalConfigurationResponseArrayOutput) ToAdditionalConfigurationResponseArrayOutputWithContext(ctx context.Context) AdditionalConfigurationResponseArrayOutput {
	return o
}

func (o AdditionalConfigurationResponseArrayOutput) Index(i pulumi.IntInput) AdditionalConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalConfigurationResponse {
		return vs[0].([]AdditionalConfigurationResponse)[vs[1].(int)]
	}).(AdditionalConfigurationResponseOutput)
}

// Address details for an order item.
type AddressDetails struct {
	// Customer address and contact details.
	ForwardAddress AddressProperties `pulumi:"forwardAddress"`
}

// AddressDetailsInput is an input type that accepts AddressDetailsArgs and AddressDetailsOutput values.
// You can construct a concrete instance of `AddressDetailsInput` via:
//
//	AddressDetailsArgs{...}
type AddressDetailsInput interface {
	pulumi.Input

	ToAddressDetailsOutput() AddressDetailsOutput
	ToAddressDetailsOutputWithContext(context.Context) AddressDetailsOutput
}

// Address details for an order item.
type AddressDetailsArgs struct {
	// Customer address and contact details.
	ForwardAddress AddressPropertiesInput `pulumi:"forwardAddress"`
}

func (AddressDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetails)(nil)).Elem()
}

func (i AddressDetailsArgs) ToAddressDetailsOutput() AddressDetailsOutput {
	return i.ToAddressDetailsOutputWithContext(context.Background())
}

func (i AddressDetailsArgs) ToAddressDetailsOutputWithContext(ctx context.Context) AddressDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsOutput)
}

func (i AddressDetailsArgs) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return i.ToAddressDetailsPtrOutputWithContext(context.Background())
}

func (i AddressDetailsArgs) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsOutput).ToAddressDetailsPtrOutputWithContext(ctx)
}

// AddressDetailsPtrInput is an input type that accepts AddressDetailsArgs, AddressDetailsPtr and AddressDetailsPtrOutput values.
// You can construct a concrete instance of `AddressDetailsPtrInput` via:
//
//	        AddressDetailsArgs{...}
//
//	or:
//
//	        nil
type AddressDetailsPtrInput interface {
	pulumi.Input

	ToAddressDetailsPtrOutput() AddressDetailsPtrOutput
	ToAddressDetailsPtrOutputWithContext(context.Context) AddressDetailsPtrOutput
}

type addressDetailsPtrType AddressDetailsArgs

func AddressDetailsPtr(v *AddressDetailsArgs) AddressDetailsPtrInput {
	return (*addressDetailsPtrType)(v)
}

func (*addressDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetails)(nil)).Elem()
}

func (i *addressDetailsPtrType) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return i.ToAddressDetailsPtrOutputWithContext(context.Background())
}

func (i *addressDetailsPtrType) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsPtrOutput)
}

// Address details for an order item.
type AddressDetailsOutput struct{ *pulumi.OutputState }

func (AddressDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetails)(nil)).Elem()
}

func (o AddressDetailsOutput) ToAddressDetailsOutput() AddressDetailsOutput {
	return o
}

func (o AddressDetailsOutput) ToAddressDetailsOutputWithContext(ctx context.Context) AddressDetailsOutput {
	return o
}

func (o AddressDetailsOutput) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return o.ToAddressDetailsPtrOutputWithContext(context.Background())
}

func (o AddressDetailsOutput) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressDetails) *AddressDetails {
		return &v
	}).(AddressDetailsPtrOutput)
}

// Customer address and contact details.
func (o AddressDetailsOutput) ForwardAddress() AddressPropertiesOutput {
	return o.ApplyT(func(v AddressDetails) AddressProperties { return v.ForwardAddress }).(AddressPropertiesOutput)
}

type AddressDetailsPtrOutput struct{ *pulumi.OutputState }

func (AddressDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetails)(nil)).Elem()
}

func (o AddressDetailsPtrOutput) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return o
}

func (o AddressDetailsPtrOutput) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return o
}

func (o AddressDetailsPtrOutput) Elem() AddressDetailsOutput {
	return o.ApplyT(func(v *AddressDetails) AddressDetails {
		if v != nil {
			return *v
		}
		var ret AddressDetails
		return ret
	}).(AddressDetailsOutput)
}

// Customer address and contact details.
func (o AddressDetailsPtrOutput) ForwardAddress() AddressPropertiesPtrOutput {
	return o.ApplyT(func(v *AddressDetails) *AddressProperties {
		if v == nil {
			return nil
		}
		return &v.ForwardAddress
	}).(AddressPropertiesPtrOutput)
}

// Address details for an order item.
type AddressDetailsResponse struct {
	// Customer address and contact details.
	ForwardAddress AddressPropertiesResponse `pulumi:"forwardAddress"`
	// Return shipping address.
	ReturnAddress AddressPropertiesResponse `pulumi:"returnAddress"`
}

// Address details for an order item.
type AddressDetailsResponseOutput struct{ *pulumi.OutputState }

func (AddressDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetailsResponse)(nil)).Elem()
}

func (o AddressDetailsResponseOutput) ToAddressDetailsResponseOutput() AddressDetailsResponseOutput {
	return o
}

func (o AddressDetailsResponseOutput) ToAddressDetailsResponseOutputWithContext(ctx context.Context) AddressDetailsResponseOutput {
	return o
}

// Customer address and contact details.
func (o AddressDetailsResponseOutput) ForwardAddress() AddressPropertiesResponseOutput {
	return o.ApplyT(func(v AddressDetailsResponse) AddressPropertiesResponse { return v.ForwardAddress }).(AddressPropertiesResponseOutput)
}

// Return shipping address.
func (o AddressDetailsResponseOutput) ReturnAddress() AddressPropertiesResponseOutput {
	return o.ApplyT(func(v AddressDetailsResponse) AddressPropertiesResponse { return v.ReturnAddress }).(AddressPropertiesResponseOutput)
}

type AddressDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetailsResponse)(nil)).Elem()
}

func (o AddressDetailsResponsePtrOutput) ToAddressDetailsResponsePtrOutput() AddressDetailsResponsePtrOutput {
	return o
}

func (o AddressDetailsResponsePtrOutput) ToAddressDetailsResponsePtrOutputWithContext(ctx context.Context) AddressDetailsResponsePtrOutput {
	return o
}

func (o AddressDetailsResponsePtrOutput) Elem() AddressDetailsResponseOutput {
	return o.ApplyT(func(v *AddressDetailsResponse) AddressDetailsResponse {
		if v != nil {
			return *v
		}
		var ret AddressDetailsResponse
		return ret
	}).(AddressDetailsResponseOutput)
}

// Customer address and contact details.
func (o AddressDetailsResponsePtrOutput) ForwardAddress() AddressPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AddressDetailsResponse) *AddressPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.ForwardAddress
	}).(AddressPropertiesResponsePtrOutput)
}

// Return shipping address.
func (o AddressDetailsResponsePtrOutput) ReturnAddress() AddressPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AddressDetailsResponse) *AddressPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnAddress
	}).(AddressPropertiesResponsePtrOutput)
}

// Address Properties.
type AddressProperties struct {
	// Type of address based on its usage context.
	AddressClassification *string `pulumi:"addressClassification"`
	// Contact details for the address.
	ContactDetails *ContactDetails `pulumi:"contactDetails"`
	// Shipping details for the address.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// AddressPropertiesInput is an input type that accepts AddressPropertiesArgs and AddressPropertiesOutput values.
// You can construct a concrete instance of `AddressPropertiesInput` via:
//
//	AddressPropertiesArgs{...}
type AddressPropertiesInput interface {
	pulumi.Input

	ToAddressPropertiesOutput() AddressPropertiesOutput
	ToAddressPropertiesOutputWithContext(context.Context) AddressPropertiesOutput
}

// Address Properties.
type AddressPropertiesArgs struct {
	// Type of address based on its usage context.
	AddressClassification pulumi.StringPtrInput `pulumi:"addressClassification"`
	// Contact details for the address.
	ContactDetails ContactDetailsPtrInput `pulumi:"contactDetails"`
	// Shipping details for the address.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (AddressPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressProperties)(nil)).Elem()
}

func (i AddressPropertiesArgs) ToAddressPropertiesOutput() AddressPropertiesOutput {
	return i.ToAddressPropertiesOutputWithContext(context.Background())
}

func (i AddressPropertiesArgs) ToAddressPropertiesOutputWithContext(ctx context.Context) AddressPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesOutput)
}

func (i AddressPropertiesArgs) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return i.ToAddressPropertiesPtrOutputWithContext(context.Background())
}

func (i AddressPropertiesArgs) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesOutput).ToAddressPropertiesPtrOutputWithContext(ctx)
}

// AddressPropertiesPtrInput is an input type that accepts AddressPropertiesArgs, AddressPropertiesPtr and AddressPropertiesPtrOutput values.
// You can construct a concrete instance of `AddressPropertiesPtrInput` via:
//
//	        AddressPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddressPropertiesPtrInput interface {
	pulumi.Input

	ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput
	ToAddressPropertiesPtrOutputWithContext(context.Context) AddressPropertiesPtrOutput
}

type addressPropertiesPtrType AddressPropertiesArgs

func AddressPropertiesPtr(v *AddressPropertiesArgs) AddressPropertiesPtrInput {
	return (*addressPropertiesPtrType)(v)
}

func (*addressPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressProperties)(nil)).Elem()
}

func (i *addressPropertiesPtrType) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return i.ToAddressPropertiesPtrOutputWithContext(context.Background())
}

func (i *addressPropertiesPtrType) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesPtrOutput)
}

// Address Properties.
type AddressPropertiesOutput struct{ *pulumi.OutputState }

func (AddressPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressProperties)(nil)).Elem()
}

func (o AddressPropertiesOutput) ToAddressPropertiesOutput() AddressPropertiesOutput {
	return o
}

func (o AddressPropertiesOutput) ToAddressPropertiesOutputWithContext(ctx context.Context) AddressPropertiesOutput {
	return o
}

func (o AddressPropertiesOutput) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return o.ToAddressPropertiesPtrOutputWithContext(context.Background())
}

func (o AddressPropertiesOutput) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressProperties) *AddressProperties {
		return &v
	}).(AddressPropertiesPtrOutput)
}

// Type of address based on its usage context.
func (o AddressPropertiesOutput) AddressClassification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressProperties) *string { return v.AddressClassification }).(pulumi.StringPtrOutput)
}

// Contact details for the address.
func (o AddressPropertiesOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v AddressProperties) *ContactDetails { return v.ContactDetails }).(ContactDetailsPtrOutput)
}

// Shipping details for the address.
func (o AddressPropertiesOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v AddressProperties) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type AddressPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddressPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressProperties)(nil)).Elem()
}

func (o AddressPropertiesPtrOutput) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return o
}

func (o AddressPropertiesPtrOutput) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return o
}

func (o AddressPropertiesPtrOutput) Elem() AddressPropertiesOutput {
	return o.ApplyT(func(v *AddressProperties) AddressProperties {
		if v != nil {
			return *v
		}
		var ret AddressProperties
		return ret
	}).(AddressPropertiesOutput)
}

// Type of address based on its usage context.
func (o AddressPropertiesPtrOutput) AddressClassification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.AddressClassification
	}).(pulumi.StringPtrOutput)
}

// Contact details for the address.
func (o AddressPropertiesPtrOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v *AddressProperties) *ContactDetails {
		if v == nil {
			return nil
		}
		return v.ContactDetails
	}).(ContactDetailsPtrOutput)
}

// Shipping details for the address.
func (o AddressPropertiesPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *AddressProperties) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// Address Properties.
type AddressPropertiesResponse struct {
	// Type of address based on its usage context.
	AddressClassification *string `pulumi:"addressClassification"`
	// Status of address validation.
	AddressValidationStatus string `pulumi:"addressValidationStatus"`
	// Contact details for the address.
	ContactDetails *ContactDetailsResponse `pulumi:"contactDetails"`
	// Provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Shipping details for the address.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Address Properties.
type AddressPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddressPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPropertiesResponse)(nil)).Elem()
}

func (o AddressPropertiesResponseOutput) ToAddressPropertiesResponseOutput() AddressPropertiesResponseOutput {
	return o
}

func (o AddressPropertiesResponseOutput) ToAddressPropertiesResponseOutputWithContext(ctx context.Context) AddressPropertiesResponseOutput {
	return o
}

// Type of address based on its usage context.
func (o AddressPropertiesResponseOutput) AddressClassification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) *string { return v.AddressClassification }).(pulumi.StringPtrOutput)
}

// Status of address validation.
func (o AddressPropertiesResponseOutput) AddressValidationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) string { return v.AddressValidationStatus }).(pulumi.StringOutput)
}

// Contact details for the address.
func (o AddressPropertiesResponseOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) *ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponsePtrOutput)
}

// Provisioning state
func (o AddressPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Shipping details for the address.
func (o AddressPropertiesResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type AddressPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressPropertiesResponse)(nil)).Elem()
}

func (o AddressPropertiesResponsePtrOutput) ToAddressPropertiesResponsePtrOutput() AddressPropertiesResponsePtrOutput {
	return o
}

func (o AddressPropertiesResponsePtrOutput) ToAddressPropertiesResponsePtrOutputWithContext(ctx context.Context) AddressPropertiesResponsePtrOutput {
	return o
}

func (o AddressPropertiesResponsePtrOutput) Elem() AddressPropertiesResponseOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) AddressPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AddressPropertiesResponse
		return ret
	}).(AddressPropertiesResponseOutput)
}

// Type of address based on its usage context.
func (o AddressPropertiesResponsePtrOutput) AddressClassification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressClassification
	}).(pulumi.StringPtrOutput)
}

// Status of address validation.
func (o AddressPropertiesResponsePtrOutput) AddressValidationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AddressValidationStatus
	}).(pulumi.StringPtrOutput)
}

// Contact details for the address.
func (o AddressPropertiesResponsePtrOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ContactDetails
	}).(ContactDetailsResponsePtrOutput)
}

// Provisioning state
func (o AddressPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Shipping details for the address.
func (o AddressPropertiesResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// Availability information of a product system.
type AvailabilityInformationResponse struct {
	// Current availability stage of the product.
	AvailabilityStage string `pulumi:"availabilityStage"`
	// Reason why the product is disabled.
	DisabledReason string `pulumi:"disabledReason"`
	// Message for why the product is disabled.
	DisabledReasonMessage string `pulumi:"disabledReasonMessage"`
}

// Availability information of a product system.
type AvailabilityInformationResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityInformationResponse)(nil)).Elem()
}

func (o AvailabilityInformationResponseOutput) ToAvailabilityInformationResponseOutput() AvailabilityInformationResponseOutput {
	return o
}

func (o AvailabilityInformationResponseOutput) ToAvailabilityInformationResponseOutputWithContext(ctx context.Context) AvailabilityInformationResponseOutput {
	return o
}

// Current availability stage of the product.
func (o AvailabilityInformationResponseOutput) AvailabilityStage() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityInformationResponse) string { return v.AvailabilityStage }).(pulumi.StringOutput)
}

// Reason why the product is disabled.
func (o AvailabilityInformationResponseOutput) DisabledReason() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityInformationResponse) string { return v.DisabledReason }).(pulumi.StringOutput)
}

// Message for why the product is disabled.
func (o AvailabilityInformationResponseOutput) DisabledReasonMessage() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityInformationResponse) string { return v.DisabledReasonMessage }).(pulumi.StringOutput)
}

// Holds billing meter details for each type of billing.
type BillingMeterDetailsResponse struct {
	// Frequency of recurrence.
	Frequency string `pulumi:"frequency"`
	// Represents MeterDetails.
	MeterDetails interface{} `pulumi:"meterDetails"`
	// Represents Metering type (eg one-time or recurrent).
	MeteringType string `pulumi:"meteringType"`
	// Represents Billing type name.
	Name string `pulumi:"name"`
	// Represent Term Type details.
	TermTypeDetails TermTypeDetailsResponse `pulumi:"termTypeDetails"`
}

// Holds billing meter details for each type of billing.
type BillingMeterDetailsResponseOutput struct{ *pulumi.OutputState }

func (BillingMeterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingMeterDetailsResponse)(nil)).Elem()
}

func (o BillingMeterDetailsResponseOutput) ToBillingMeterDetailsResponseOutput() BillingMeterDetailsResponseOutput {
	return o
}

func (o BillingMeterDetailsResponseOutput) ToBillingMeterDetailsResponseOutputWithContext(ctx context.Context) BillingMeterDetailsResponseOutput {
	return o
}

// Frequency of recurrence.
func (o BillingMeterDetailsResponseOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v BillingMeterDetailsResponse) string { return v.Frequency }).(pulumi.StringOutput)
}

// Represents MeterDetails.
func (o BillingMeterDetailsResponseOutput) MeterDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v BillingMeterDetailsResponse) interface{} { return v.MeterDetails }).(pulumi.AnyOutput)
}

// Represents Metering type (eg one-time or recurrent).
func (o BillingMeterDetailsResponseOutput) MeteringType() pulumi.StringOutput {
	return o.ApplyT(func(v BillingMeterDetailsResponse) string { return v.MeteringType }).(pulumi.StringOutput)
}

// Represents Billing type name.
func (o BillingMeterDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BillingMeterDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Represent Term Type details.
func (o BillingMeterDetailsResponseOutput) TermTypeDetails() TermTypeDetailsResponseOutput {
	return o.ApplyT(func(v BillingMeterDetailsResponse) TermTypeDetailsResponse { return v.TermTypeDetails }).(TermTypeDetailsResponseOutput)
}

type BillingMeterDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (BillingMeterDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BillingMeterDetailsResponse)(nil)).Elem()
}

func (o BillingMeterDetailsResponseArrayOutput) ToBillingMeterDetailsResponseArrayOutput() BillingMeterDetailsResponseArrayOutput {
	return o
}

func (o BillingMeterDetailsResponseArrayOutput) ToBillingMeterDetailsResponseArrayOutputWithContext(ctx context.Context) BillingMeterDetailsResponseArrayOutput {
	return o
}

func (o BillingMeterDetailsResponseArrayOutput) Index(i pulumi.IntInput) BillingMeterDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BillingMeterDetailsResponse {
		return vs[0].([]BillingMeterDetailsResponse)[vs[1].(int)]
	}).(BillingMeterDetailsResponseOutput)
}

// Category related properties of a child configuration.
type CategoryInformationResponse struct {
	// Category display name of the child configuration.
	CategoryDisplayName *string `pulumi:"categoryDisplayName"`
	// Category name of the child configuration.
	CategoryName *string `pulumi:"categoryName"`
	// Description text for the category.
	Description *string `pulumi:"description"`
	// Links for the category.
	Links []LinkResponse `pulumi:"links"`
}

// Category related properties of a child configuration.
type CategoryInformationResponseOutput struct{ *pulumi.OutputState }

func (CategoryInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryInformationResponse)(nil)).Elem()
}

func (o CategoryInformationResponseOutput) ToCategoryInformationResponseOutput() CategoryInformationResponseOutput {
	return o
}

func (o CategoryInformationResponseOutput) ToCategoryInformationResponseOutputWithContext(ctx context.Context) CategoryInformationResponseOutput {
	return o
}

// Category display name of the child configuration.
func (o CategoryInformationResponseOutput) CategoryDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryInformationResponse) *string { return v.CategoryDisplayName }).(pulumi.StringPtrOutput)
}

// Category name of the child configuration.
func (o CategoryInformationResponseOutput) CategoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryInformationResponse) *string { return v.CategoryName }).(pulumi.StringPtrOutput)
}

// Description text for the category.
func (o CategoryInformationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryInformationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Links for the category.
func (o CategoryInformationResponseOutput) Links() LinkResponseArrayOutput {
	return o.ApplyT(func(v CategoryInformationResponse) []LinkResponse { return v.Links }).(LinkResponseArrayOutput)
}

// Child configuration filter.
type ChildConfigurationFilter struct {
	// Filter to fetch all child configurations belonging to the given list of configuration types.
	ChildConfigurationTypes []string `pulumi:"childConfigurationTypes"`
	// The list of child configuration hierarchy customer wants to filter for the given configuration.
	HierarchyInformations []HierarchyInformation `pulumi:"hierarchyInformations"`
}

// ChildConfigurationFilterInput is an input type that accepts ChildConfigurationFilterArgs and ChildConfigurationFilterOutput values.
// You can construct a concrete instance of `ChildConfigurationFilterInput` via:
//
//	ChildConfigurationFilterArgs{...}
type ChildConfigurationFilterInput interface {
	pulumi.Input

	ToChildConfigurationFilterOutput() ChildConfigurationFilterOutput
	ToChildConfigurationFilterOutputWithContext(context.Context) ChildConfigurationFilterOutput
}

// Child configuration filter.
type ChildConfigurationFilterArgs struct {
	// Filter to fetch all child configurations belonging to the given list of configuration types.
	ChildConfigurationTypes pulumi.StringArrayInput `pulumi:"childConfigurationTypes"`
	// The list of child configuration hierarchy customer wants to filter for the given configuration.
	HierarchyInformations HierarchyInformationArrayInput `pulumi:"hierarchyInformations"`
}

func (ChildConfigurationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChildConfigurationFilter)(nil)).Elem()
}

func (i ChildConfigurationFilterArgs) ToChildConfigurationFilterOutput() ChildConfigurationFilterOutput {
	return i.ToChildConfigurationFilterOutputWithContext(context.Background())
}

func (i ChildConfigurationFilterArgs) ToChildConfigurationFilterOutputWithContext(ctx context.Context) ChildConfigurationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChildConfigurationFilterOutput)
}

func (i ChildConfigurationFilterArgs) ToChildConfigurationFilterPtrOutput() ChildConfigurationFilterPtrOutput {
	return i.ToChildConfigurationFilterPtrOutputWithContext(context.Background())
}

func (i ChildConfigurationFilterArgs) ToChildConfigurationFilterPtrOutputWithContext(ctx context.Context) ChildConfigurationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChildConfigurationFilterOutput).ToChildConfigurationFilterPtrOutputWithContext(ctx)
}

// ChildConfigurationFilterPtrInput is an input type that accepts ChildConfigurationFilterArgs, ChildConfigurationFilterPtr and ChildConfigurationFilterPtrOutput values.
// You can construct a concrete instance of `ChildConfigurationFilterPtrInput` via:
//
//	        ChildConfigurationFilterArgs{...}
//
//	or:
//
//	        nil
type ChildConfigurationFilterPtrInput interface {
	pulumi.Input

	ToChildConfigurationFilterPtrOutput() ChildConfigurationFilterPtrOutput
	ToChildConfigurationFilterPtrOutputWithContext(context.Context) ChildConfigurationFilterPtrOutput
}

type childConfigurationFilterPtrType ChildConfigurationFilterArgs

func ChildConfigurationFilterPtr(v *ChildConfigurationFilterArgs) ChildConfigurationFilterPtrInput {
	return (*childConfigurationFilterPtrType)(v)
}

func (*childConfigurationFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChildConfigurationFilter)(nil)).Elem()
}

func (i *childConfigurationFilterPtrType) ToChildConfigurationFilterPtrOutput() ChildConfigurationFilterPtrOutput {
	return i.ToChildConfigurationFilterPtrOutputWithContext(context.Background())
}

func (i *childConfigurationFilterPtrType) ToChildConfigurationFilterPtrOutputWithContext(ctx context.Context) ChildConfigurationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChildConfigurationFilterPtrOutput)
}

// Child configuration filter.
type ChildConfigurationFilterOutput struct{ *pulumi.OutputState }

func (ChildConfigurationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChildConfigurationFilter)(nil)).Elem()
}

func (o ChildConfigurationFilterOutput) ToChildConfigurationFilterOutput() ChildConfigurationFilterOutput {
	return o
}

func (o ChildConfigurationFilterOutput) ToChildConfigurationFilterOutputWithContext(ctx context.Context) ChildConfigurationFilterOutput {
	return o
}

func (o ChildConfigurationFilterOutput) ToChildConfigurationFilterPtrOutput() ChildConfigurationFilterPtrOutput {
	return o.ToChildConfigurationFilterPtrOutputWithContext(context.Background())
}

func (o ChildConfigurationFilterOutput) ToChildConfigurationFilterPtrOutputWithContext(ctx context.Context) ChildConfigurationFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChildConfigurationFilter) *ChildConfigurationFilter {
		return &v
	}).(ChildConfigurationFilterPtrOutput)
}

// Filter to fetch all child configurations belonging to the given list of configuration types.
func (o ChildConfigurationFilterOutput) ChildConfigurationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChildConfigurationFilter) []string { return v.ChildConfigurationTypes }).(pulumi.StringArrayOutput)
}

// The list of child configuration hierarchy customer wants to filter for the given configuration.
func (o ChildConfigurationFilterOutput) HierarchyInformations() HierarchyInformationArrayOutput {
	return o.ApplyT(func(v ChildConfigurationFilter) []HierarchyInformation { return v.HierarchyInformations }).(HierarchyInformationArrayOutput)
}

type ChildConfigurationFilterPtrOutput struct{ *pulumi.OutputState }

func (ChildConfigurationFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChildConfigurationFilter)(nil)).Elem()
}

func (o ChildConfigurationFilterPtrOutput) ToChildConfigurationFilterPtrOutput() ChildConfigurationFilterPtrOutput {
	return o
}

func (o ChildConfigurationFilterPtrOutput) ToChildConfigurationFilterPtrOutputWithContext(ctx context.Context) ChildConfigurationFilterPtrOutput {
	return o
}

func (o ChildConfigurationFilterPtrOutput) Elem() ChildConfigurationFilterOutput {
	return o.ApplyT(func(v *ChildConfigurationFilter) ChildConfigurationFilter {
		if v != nil {
			return *v
		}
		var ret ChildConfigurationFilter
		return ret
	}).(ChildConfigurationFilterOutput)
}

// Filter to fetch all child configurations belonging to the given list of configuration types.
func (o ChildConfigurationFilterPtrOutput) ChildConfigurationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ChildConfigurationFilter) []string {
		if v == nil {
			return nil
		}
		return v.ChildConfigurationTypes
	}).(pulumi.StringArrayOutput)
}

// The list of child configuration hierarchy customer wants to filter for the given configuration.
func (o ChildConfigurationFilterPtrOutput) HierarchyInformations() HierarchyInformationArrayOutput {
	return o.ApplyT(func(v *ChildConfigurationFilter) []HierarchyInformation {
		if v == nil {
			return nil
		}
		return v.HierarchyInformations
	}).(HierarchyInformationArrayOutput)
}

// Child configuration object.
type ChildConfigurationResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Child configuration type.
	ChildConfigurationType string `pulumi:"childConfigurationType"`
	// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter.
	ChildConfigurationTypes []string `pulumi:"childConfigurationTypes"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Dimensions of the configuration.
	Dimensions DimensionsResponse `pulumi:"dimensions"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// List of filters supported for a product.
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// The entity responsible for fulfillment of the item at the given hierarchy level.
	FulfilledBy string `pulumi:"fulfilledBy"`
	// Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration.
	GroupedChildConfigurations []GroupedChildConfigurationsResponse `pulumi:"groupedChildConfigurations"`
	// Hierarchy information of a product.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
	IsPartOfBaseConfiguration bool `pulumi:"isPartOfBaseConfiguration"`
	// Maximum quantity a customer can order while choosing this configuration.
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Minimum quantity a customer can order while choosing this configuration.
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Determining nature of provisioning that the configuration supports.
	ProvisioningSupport string `pulumi:"provisioningSupport"`
	// Specifications of the configuration.
	Specifications []SpecificationResponse `pulumi:"specifications"`
	// The Term Commitment Durations that are supported for a configuration.
	SupportedTermCommitmentDurations []string `pulumi:"supportedTermCommitmentDurations"`
}

// Child configuration object.
type ChildConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ChildConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChildConfigurationResponse)(nil)).Elem()
}

func (o ChildConfigurationResponseOutput) ToChildConfigurationResponseOutput() ChildConfigurationResponseOutput {
	return o
}

func (o ChildConfigurationResponseOutput) ToChildConfigurationResponseOutputWithContext(ctx context.Context) ChildConfigurationResponseOutput {
	return o
}

// Availability information of the product system.
func (o ChildConfigurationResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Child configuration type.
func (o ChildConfigurationResponseOutput) ChildConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) string { return v.ChildConfigurationType }).(pulumi.StringOutput)
}

// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter.
func (o ChildConfigurationResponseOutput) ChildConfigurationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) []string { return v.ChildConfigurationTypes }).(pulumi.StringArrayOutput)
}

// Cost information for the product system.
func (o ChildConfigurationResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ChildConfigurationResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Dimensions of the configuration.
func (o ChildConfigurationResponseOutput) Dimensions() DimensionsResponseOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) DimensionsResponse { return v.Dimensions }).(DimensionsResponseOutput)
}

// Display Name for the product system.
func (o ChildConfigurationResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of filters supported for a product.
func (o ChildConfigurationResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// The entity responsible for fulfillment of the item at the given hierarchy level.
func (o ChildConfigurationResponseOutput) FulfilledBy() pulumi.StringOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) string { return v.FulfilledBy }).(pulumi.StringOutput)
}

// Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration.
func (o ChildConfigurationResponseOutput) GroupedChildConfigurations() GroupedChildConfigurationsResponseArrayOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) []GroupedChildConfigurationsResponse {
		return v.GroupedChildConfigurations
	}).(GroupedChildConfigurationsResponseArrayOutput)
}

// Hierarchy information of a product.
func (o ChildConfigurationResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ChildConfigurationResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
func (o ChildConfigurationResponseOutput) IsPartOfBaseConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) bool { return v.IsPartOfBaseConfiguration }).(pulumi.BoolOutput)
}

// Maximum quantity a customer can order while choosing this configuration.
func (o ChildConfigurationResponseOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Minimum quantity a customer can order while choosing this configuration.
func (o ChildConfigurationResponseOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Determining nature of provisioning that the configuration supports.
func (o ChildConfigurationResponseOutput) ProvisioningSupport() pulumi.StringOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) string { return v.ProvisioningSupport }).(pulumi.StringOutput)
}

// Specifications of the configuration.
func (o ChildConfigurationResponseOutput) Specifications() SpecificationResponseArrayOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) []SpecificationResponse { return v.Specifications }).(SpecificationResponseArrayOutput)
}

// The Term Commitment Durations that are supported for a configuration.
func (o ChildConfigurationResponseOutput) SupportedTermCommitmentDurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChildConfigurationResponse) []string { return v.SupportedTermCommitmentDurations }).(pulumi.StringArrayOutput)
}

type ChildConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ChildConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChildConfigurationResponse)(nil)).Elem()
}

func (o ChildConfigurationResponseArrayOutput) ToChildConfigurationResponseArrayOutput() ChildConfigurationResponseArrayOutput {
	return o
}

func (o ChildConfigurationResponseArrayOutput) ToChildConfigurationResponseArrayOutputWithContext(ctx context.Context) ChildConfigurationResponseArrayOutput {
	return o
}

func (o ChildConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ChildConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChildConfigurationResponse {
		return vs[0].([]ChildConfigurationResponse)[vs[1].(int)]
	}).(ChildConfigurationResponseOutput)
}

// Device details for configuration.
type ConfigurationDeviceDetailsResponse struct {
	// List of device details.
	DeviceDetails []DeviceDetailsResponse `pulumi:"deviceDetails"`
	// Display details of the product.
	DisplayInfo *DisplayInfoResponse `pulumi:"displayInfo"`
	// Hierarchy of the product which uniquely identifies the configuration.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Identification type of the configuration.
	IdentificationType string `pulumi:"identificationType"`
	// Quantity of the product.
	Quantity int `pulumi:"quantity"`
	// Term Commitment Information of the Device.
	TermCommitmentInformation TermCommitmentInformationResponse `pulumi:"termCommitmentInformation"`
}

// Defaults sets the appropriate defaults for ConfigurationDeviceDetailsResponse
func (val *ConfigurationDeviceDetailsResponse) Defaults() *ConfigurationDeviceDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TermCommitmentInformation = *tmp.TermCommitmentInformation.Defaults()

	return &tmp
}

// Device details for configuration.
type ConfigurationDeviceDetailsResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationDeviceDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationDeviceDetailsResponse)(nil)).Elem()
}

func (o ConfigurationDeviceDetailsResponseOutput) ToConfigurationDeviceDetailsResponseOutput() ConfigurationDeviceDetailsResponseOutput {
	return o
}

func (o ConfigurationDeviceDetailsResponseOutput) ToConfigurationDeviceDetailsResponseOutputWithContext(ctx context.Context) ConfigurationDeviceDetailsResponseOutput {
	return o
}

// List of device details.
func (o ConfigurationDeviceDetailsResponseOutput) DeviceDetails() DeviceDetailsResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationDeviceDetailsResponse) []DeviceDetailsResponse { return v.DeviceDetails }).(DeviceDetailsResponseArrayOutput)
}

// Display details of the product.
func (o ConfigurationDeviceDetailsResponseOutput) DisplayInfo() DisplayInfoResponsePtrOutput {
	return o.ApplyT(func(v ConfigurationDeviceDetailsResponse) *DisplayInfoResponse { return v.DisplayInfo }).(DisplayInfoResponsePtrOutput)
}

// Hierarchy of the product which uniquely identifies the configuration.
func (o ConfigurationDeviceDetailsResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationDeviceDetailsResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Identification type of the configuration.
func (o ConfigurationDeviceDetailsResponseOutput) IdentificationType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationDeviceDetailsResponse) string { return v.IdentificationType }).(pulumi.StringOutput)
}

// Quantity of the product.
func (o ConfigurationDeviceDetailsResponseOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigurationDeviceDetailsResponse) int { return v.Quantity }).(pulumi.IntOutput)
}

// Term Commitment Information of the Device.
func (o ConfigurationDeviceDetailsResponseOutput) TermCommitmentInformation() TermCommitmentInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationDeviceDetailsResponse) TermCommitmentInformationResponse {
		return v.TermCommitmentInformation
	}).(TermCommitmentInformationResponseOutput)
}

type ConfigurationDeviceDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationDeviceDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationDeviceDetailsResponse)(nil)).Elem()
}

func (o ConfigurationDeviceDetailsResponseArrayOutput) ToConfigurationDeviceDetailsResponseArrayOutput() ConfigurationDeviceDetailsResponseArrayOutput {
	return o
}

func (o ConfigurationDeviceDetailsResponseArrayOutput) ToConfigurationDeviceDetailsResponseArrayOutputWithContext(ctx context.Context) ConfigurationDeviceDetailsResponseArrayOutput {
	return o
}

func (o ConfigurationDeviceDetailsResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationDeviceDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationDeviceDetailsResponse {
		return vs[0].([]ConfigurationDeviceDetailsResponse)[vs[1].(int)]
	}).(ConfigurationDeviceDetailsResponseOutput)
}

// Configuration filters.
type ConfigurationFilter struct {
	// Filter to fetch specific child configurations that exist in the configuration. This must be passed to either fetch a list of specific child configurations, or all child configurations of specific types of child configurations.
	ChildConfigurationFilter *ChildConfigurationFilter `pulumi:"childConfigurationFilter"`
	// Filters specific to product.
	FilterableProperty []FilterableProperty `pulumi:"filterableProperty"`
	// Product hierarchy information.
	HierarchyInformation HierarchyInformation `pulumi:"hierarchyInformation"`
}

// ConfigurationFilterInput is an input type that accepts ConfigurationFilterArgs and ConfigurationFilterOutput values.
// You can construct a concrete instance of `ConfigurationFilterInput` via:
//
//	ConfigurationFilterArgs{...}
type ConfigurationFilterInput interface {
	pulumi.Input

	ToConfigurationFilterOutput() ConfigurationFilterOutput
	ToConfigurationFilterOutputWithContext(context.Context) ConfigurationFilterOutput
}

// Configuration filters.
type ConfigurationFilterArgs struct {
	// Filter to fetch specific child configurations that exist in the configuration. This must be passed to either fetch a list of specific child configurations, or all child configurations of specific types of child configurations.
	ChildConfigurationFilter ChildConfigurationFilterPtrInput `pulumi:"childConfigurationFilter"`
	// Filters specific to product.
	FilterableProperty FilterablePropertyArrayInput `pulumi:"filterableProperty"`
	// Product hierarchy information.
	HierarchyInformation HierarchyInformationInput `pulumi:"hierarchyInformation"`
}

func (ConfigurationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFilter)(nil)).Elem()
}

func (i ConfigurationFilterArgs) ToConfigurationFilterOutput() ConfigurationFilterOutput {
	return i.ToConfigurationFilterOutputWithContext(context.Background())
}

func (i ConfigurationFilterArgs) ToConfigurationFilterOutputWithContext(ctx context.Context) ConfigurationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFilterOutput)
}

func (i ConfigurationFilterArgs) ToConfigurationFilterPtrOutput() ConfigurationFilterPtrOutput {
	return i.ToConfigurationFilterPtrOutputWithContext(context.Background())
}

func (i ConfigurationFilterArgs) ToConfigurationFilterPtrOutputWithContext(ctx context.Context) ConfigurationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFilterOutput).ToConfigurationFilterPtrOutputWithContext(ctx)
}

// ConfigurationFilterPtrInput is an input type that accepts ConfigurationFilterArgs, ConfigurationFilterPtr and ConfigurationFilterPtrOutput values.
// You can construct a concrete instance of `ConfigurationFilterPtrInput` via:
//
//	        ConfigurationFilterArgs{...}
//
//	or:
//
//	        nil
type ConfigurationFilterPtrInput interface {
	pulumi.Input

	ToConfigurationFilterPtrOutput() ConfigurationFilterPtrOutput
	ToConfigurationFilterPtrOutputWithContext(context.Context) ConfigurationFilterPtrOutput
}

type configurationFilterPtrType ConfigurationFilterArgs

func ConfigurationFilterPtr(v *ConfigurationFilterArgs) ConfigurationFilterPtrInput {
	return (*configurationFilterPtrType)(v)
}

func (*configurationFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationFilter)(nil)).Elem()
}

func (i *configurationFilterPtrType) ToConfigurationFilterPtrOutput() ConfigurationFilterPtrOutput {
	return i.ToConfigurationFilterPtrOutputWithContext(context.Background())
}

func (i *configurationFilterPtrType) ToConfigurationFilterPtrOutputWithContext(ctx context.Context) ConfigurationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFilterPtrOutput)
}

// Configuration filters.
type ConfigurationFilterOutput struct{ *pulumi.OutputState }

func (ConfigurationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFilter)(nil)).Elem()
}

func (o ConfigurationFilterOutput) ToConfigurationFilterOutput() ConfigurationFilterOutput {
	return o
}

func (o ConfigurationFilterOutput) ToConfigurationFilterOutputWithContext(ctx context.Context) ConfigurationFilterOutput {
	return o
}

func (o ConfigurationFilterOutput) ToConfigurationFilterPtrOutput() ConfigurationFilterPtrOutput {
	return o.ToConfigurationFilterPtrOutputWithContext(context.Background())
}

func (o ConfigurationFilterOutput) ToConfigurationFilterPtrOutputWithContext(ctx context.Context) ConfigurationFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationFilter) *ConfigurationFilter {
		return &v
	}).(ConfigurationFilterPtrOutput)
}

// Filter to fetch specific child configurations that exist in the configuration. This must be passed to either fetch a list of specific child configurations, or all child configurations of specific types of child configurations.
func (o ConfigurationFilterOutput) ChildConfigurationFilter() ChildConfigurationFilterPtrOutput {
	return o.ApplyT(func(v ConfigurationFilter) *ChildConfigurationFilter { return v.ChildConfigurationFilter }).(ChildConfigurationFilterPtrOutput)
}

// Filters specific to product.
func (o ConfigurationFilterOutput) FilterableProperty() FilterablePropertyArrayOutput {
	return o.ApplyT(func(v ConfigurationFilter) []FilterableProperty { return v.FilterableProperty }).(FilterablePropertyArrayOutput)
}

// Product hierarchy information.
func (o ConfigurationFilterOutput) HierarchyInformation() HierarchyInformationOutput {
	return o.ApplyT(func(v ConfigurationFilter) HierarchyInformation { return v.HierarchyInformation }).(HierarchyInformationOutput)
}

type ConfigurationFilterPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationFilter)(nil)).Elem()
}

func (o ConfigurationFilterPtrOutput) ToConfigurationFilterPtrOutput() ConfigurationFilterPtrOutput {
	return o
}

func (o ConfigurationFilterPtrOutput) ToConfigurationFilterPtrOutputWithContext(ctx context.Context) ConfigurationFilterPtrOutput {
	return o
}

func (o ConfigurationFilterPtrOutput) Elem() ConfigurationFilterOutput {
	return o.ApplyT(func(v *ConfigurationFilter) ConfigurationFilter {
		if v != nil {
			return *v
		}
		var ret ConfigurationFilter
		return ret
	}).(ConfigurationFilterOutput)
}

// Filter to fetch specific child configurations that exist in the configuration. This must be passed to either fetch a list of specific child configurations, or all child configurations of specific types of child configurations.
func (o ConfigurationFilterPtrOutput) ChildConfigurationFilter() ChildConfigurationFilterPtrOutput {
	return o.ApplyT(func(v *ConfigurationFilter) *ChildConfigurationFilter {
		if v == nil {
			return nil
		}
		return v.ChildConfigurationFilter
	}).(ChildConfigurationFilterPtrOutput)
}

// Filters specific to product.
func (o ConfigurationFilterPtrOutput) FilterableProperty() FilterablePropertyArrayOutput {
	return o.ApplyT(func(v *ConfigurationFilter) []FilterableProperty {
		if v == nil {
			return nil
		}
		return v.FilterableProperty
	}).(FilterablePropertyArrayOutput)
}

// Product hierarchy information.
func (o ConfigurationFilterPtrOutput) HierarchyInformation() HierarchyInformationPtrOutput {
	return o.ApplyT(func(v *ConfigurationFilter) *HierarchyInformation {
		if v == nil {
			return nil
		}
		return &v.HierarchyInformation
	}).(HierarchyInformationPtrOutput)
}

// Configuration object.
type ConfigurationResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter.
	ChildConfigurationTypes []string `pulumi:"childConfigurationTypes"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Dimensions of the configuration.
	Dimensions DimensionsResponse `pulumi:"dimensions"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// List of filters supported for a product.
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// The entity responsible for fulfillment of the item at the given hierarchy level.
	FulfilledBy string `pulumi:"fulfilledBy"`
	// Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration.
	GroupedChildConfigurations []GroupedChildConfigurationsResponse `pulumi:"groupedChildConfigurations"`
	// Hierarchy information of a product.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// Determining nature of provisioning that the configuration supports.
	ProvisioningSupport string `pulumi:"provisioningSupport"`
	// Specifications of the configuration.
	Specifications []SpecificationResponse `pulumi:"specifications"`
	// The Term Commitment Durations that are supported for a configuration.
	SupportedTermCommitmentDurations []string `pulumi:"supportedTermCommitmentDurations"`
}

// Configuration object.
type ConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationResponse)(nil)).Elem()
}

func (o ConfigurationResponseOutput) ToConfigurationResponseOutput() ConfigurationResponseOutput {
	return o
}

func (o ConfigurationResponseOutput) ToConfigurationResponseOutputWithContext(ctx context.Context) ConfigurationResponseOutput {
	return o
}

// Availability information of the product system.
func (o ConfigurationResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter.
func (o ConfigurationResponseOutput) ChildConfigurationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []string { return v.ChildConfigurationTypes }).(pulumi.StringArrayOutput)
}

// Cost information for the product system.
func (o ConfigurationResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ConfigurationResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Dimensions of the configuration.
func (o ConfigurationResponseOutput) Dimensions() DimensionsResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) DimensionsResponse { return v.Dimensions }).(DimensionsResponseOutput)
}

// Display Name for the product system.
func (o ConfigurationResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of filters supported for a product.
func (o ConfigurationResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// The entity responsible for fulfillment of the item at the given hierarchy level.
func (o ConfigurationResponseOutput) FulfilledBy() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationResponse) string { return v.FulfilledBy }).(pulumi.StringOutput)
}

// Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration.
func (o ConfigurationResponseOutput) GroupedChildConfigurations() GroupedChildConfigurationsResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []GroupedChildConfigurationsResponse {
		return v.GroupedChildConfigurations
	}).(GroupedChildConfigurationsResponseArrayOutput)
}

// Hierarchy information of a product.
func (o ConfigurationResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ConfigurationResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// Determining nature of provisioning that the configuration supports.
func (o ConfigurationResponseOutput) ProvisioningSupport() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationResponse) string { return v.ProvisioningSupport }).(pulumi.StringOutput)
}

// Specifications of the configuration.
func (o ConfigurationResponseOutput) Specifications() SpecificationResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []SpecificationResponse { return v.Specifications }).(SpecificationResponseArrayOutput)
}

// The Term Commitment Durations that are supported for a configuration.
func (o ConfigurationResponseOutput) SupportedTermCommitmentDurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []string { return v.SupportedTermCommitmentDurations }).(pulumi.StringArrayOutput)
}

type ConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationResponse)(nil)).Elem()
}

func (o ConfigurationResponseArrayOutput) ToConfigurationResponseArrayOutput() ConfigurationResponseArrayOutput {
	return o
}

func (o ConfigurationResponseArrayOutput) ToConfigurationResponseArrayOutputWithContext(ctx context.Context) ConfigurationResponseArrayOutput {
	return o
}

func (o ConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationResponse {
		return vs[0].([]ConfigurationResponse)[vs[1].(int)]
	}).(ConfigurationResponseOutput)
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName *string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone *string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//	ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contact Details.
type ContactDetailsArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringPtrInput `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone pulumi.StringPtrInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput).ToContactDetailsPtrOutputWithContext(ctx)
}

// ContactDetailsPtrInput is an input type that accepts ContactDetailsArgs, ContactDetailsPtr and ContactDetailsPtrOutput values.
// You can construct a concrete instance of `ContactDetailsPtrInput` via:
//
//	        ContactDetailsArgs{...}
//
//	or:
//
//	        nil
type ContactDetailsPtrInput interface {
	pulumi.Input

	ToContactDetailsPtrOutput() ContactDetailsPtrOutput
	ToContactDetailsPtrOutputWithContext(context.Context) ContactDetailsPtrOutput
}

type contactDetailsPtrType ContactDetailsArgs

func ContactDetailsPtr(v *ContactDetailsArgs) ContactDetailsPtrInput {
	return (*contactDetailsPtrType)(v)
}

func (*contactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsPtrOutput)
}

// Contact Details.
type ContactDetailsOutput struct{ *pulumi.OutputState }

func (ContactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (o ContactDetailsOutput) ToContactDetailsOutput() ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactDetails) *ContactDetails {
		return &v
	}).(ContactDetailsPtrOutput)
}

// Contact name of the person.
func (o ContactDetailsOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.ContactName }).(pulumi.StringPtrOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetails) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactDetailsPtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) Elem() ContactDetailsOutput {
	return o.ApplyT(func(v *ContactDetails) ContactDetails {
		if v != nil {
			return *v
		}
		var ret ContactDetails
		return ret
	}).(ContactDetailsOutput)
}

// Contact name of the person.
func (o ContactDetailsPtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.ContactName
	}).(pulumi.StringPtrOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsPtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetails) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsPtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName *string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone *string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Contact Details.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

// Contact name of the person.
func (o ContactDetailsResponseOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.ContactName }).(pulumi.StringPtrOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsResponseOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponseOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponseOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) Elem() ContactDetailsResponseOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) ContactDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ContactDetailsResponse
		return ret
	}).(ContactDetailsResponseOutput)
}

// Contact name of the person.
func (o ContactDetailsResponsePtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContactName
	}).(pulumi.StringPtrOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsResponsePtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponsePtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponsePtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Cost information for the product system.
type CostInformationResponse struct {
	// Default url to display billing information.
	BillingInfoUrl string `pulumi:"billingInfoUrl"`
	// Details on the various billing aspects for the product system.
	BillingMeterDetails []BillingMeterDetailsResponse `pulumi:"billingMeterDetails"`
}

// Cost information for the product system.
type CostInformationResponseOutput struct{ *pulumi.OutputState }

func (CostInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostInformationResponse)(nil)).Elem()
}

func (o CostInformationResponseOutput) ToCostInformationResponseOutput() CostInformationResponseOutput {
	return o
}

func (o CostInformationResponseOutput) ToCostInformationResponseOutputWithContext(ctx context.Context) CostInformationResponseOutput {
	return o
}

// Default url to display billing information.
func (o CostInformationResponseOutput) BillingInfoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v CostInformationResponse) string { return v.BillingInfoUrl }).(pulumi.StringOutput)
}

// Details on the various billing aspects for the product system.
func (o CostInformationResponseOutput) BillingMeterDetails() BillingMeterDetailsResponseArrayOutput {
	return o.ApplyT(func(v CostInformationResponse) []BillingMeterDetailsResponse { return v.BillingMeterDetails }).(BillingMeterDetailsResponseArrayOutput)
}

// Holds Customer subscription details. Clients can display available products to unregistered customers by explicitly passing subscription details.
type CustomerSubscriptionDetails struct {
	// Location placement Id of a subscription.
	LocationPlacementId *string `pulumi:"locationPlacementId"`
	// Quota ID of a subscription.
	QuotaId string `pulumi:"quotaId"`
	// List of registered feature flags for subscription.
	RegisteredFeatures []CustomerSubscriptionRegisteredFeatures `pulumi:"registeredFeatures"`
}

// CustomerSubscriptionDetailsInput is an input type that accepts CustomerSubscriptionDetailsArgs and CustomerSubscriptionDetailsOutput values.
// You can construct a concrete instance of `CustomerSubscriptionDetailsInput` via:
//
//	CustomerSubscriptionDetailsArgs{...}
type CustomerSubscriptionDetailsInput interface {
	pulumi.Input

	ToCustomerSubscriptionDetailsOutput() CustomerSubscriptionDetailsOutput
	ToCustomerSubscriptionDetailsOutputWithContext(context.Context) CustomerSubscriptionDetailsOutput
}

// Holds Customer subscription details. Clients can display available products to unregistered customers by explicitly passing subscription details.
type CustomerSubscriptionDetailsArgs struct {
	// Location placement Id of a subscription.
	LocationPlacementId pulumi.StringPtrInput `pulumi:"locationPlacementId"`
	// Quota ID of a subscription.
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
	// List of registered feature flags for subscription.
	RegisteredFeatures CustomerSubscriptionRegisteredFeaturesArrayInput `pulumi:"registeredFeatures"`
}

func (CustomerSubscriptionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionDetails)(nil)).Elem()
}

func (i CustomerSubscriptionDetailsArgs) ToCustomerSubscriptionDetailsOutput() CustomerSubscriptionDetailsOutput {
	return i.ToCustomerSubscriptionDetailsOutputWithContext(context.Background())
}

func (i CustomerSubscriptionDetailsArgs) ToCustomerSubscriptionDetailsOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionDetailsOutput)
}

func (i CustomerSubscriptionDetailsArgs) ToCustomerSubscriptionDetailsPtrOutput() CustomerSubscriptionDetailsPtrOutput {
	return i.ToCustomerSubscriptionDetailsPtrOutputWithContext(context.Background())
}

func (i CustomerSubscriptionDetailsArgs) ToCustomerSubscriptionDetailsPtrOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionDetailsOutput).ToCustomerSubscriptionDetailsPtrOutputWithContext(ctx)
}

// CustomerSubscriptionDetailsPtrInput is an input type that accepts CustomerSubscriptionDetailsArgs, CustomerSubscriptionDetailsPtr and CustomerSubscriptionDetailsPtrOutput values.
// You can construct a concrete instance of `CustomerSubscriptionDetailsPtrInput` via:
//
//	        CustomerSubscriptionDetailsArgs{...}
//
//	or:
//
//	        nil
type CustomerSubscriptionDetailsPtrInput interface {
	pulumi.Input

	ToCustomerSubscriptionDetailsPtrOutput() CustomerSubscriptionDetailsPtrOutput
	ToCustomerSubscriptionDetailsPtrOutputWithContext(context.Context) CustomerSubscriptionDetailsPtrOutput
}

type customerSubscriptionDetailsPtrType CustomerSubscriptionDetailsArgs

func CustomerSubscriptionDetailsPtr(v *CustomerSubscriptionDetailsArgs) CustomerSubscriptionDetailsPtrInput {
	return (*customerSubscriptionDetailsPtrType)(v)
}

func (*customerSubscriptionDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerSubscriptionDetails)(nil)).Elem()
}

func (i *customerSubscriptionDetailsPtrType) ToCustomerSubscriptionDetailsPtrOutput() CustomerSubscriptionDetailsPtrOutput {
	return i.ToCustomerSubscriptionDetailsPtrOutputWithContext(context.Background())
}

func (i *customerSubscriptionDetailsPtrType) ToCustomerSubscriptionDetailsPtrOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionDetailsPtrOutput)
}

// Holds Customer subscription details. Clients can display available products to unregistered customers by explicitly passing subscription details.
type CustomerSubscriptionDetailsOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionDetails)(nil)).Elem()
}

func (o CustomerSubscriptionDetailsOutput) ToCustomerSubscriptionDetailsOutput() CustomerSubscriptionDetailsOutput {
	return o
}

func (o CustomerSubscriptionDetailsOutput) ToCustomerSubscriptionDetailsOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsOutput {
	return o
}

func (o CustomerSubscriptionDetailsOutput) ToCustomerSubscriptionDetailsPtrOutput() CustomerSubscriptionDetailsPtrOutput {
	return o.ToCustomerSubscriptionDetailsPtrOutputWithContext(context.Background())
}

func (o CustomerSubscriptionDetailsOutput) ToCustomerSubscriptionDetailsPtrOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerSubscriptionDetails) *CustomerSubscriptionDetails {
		return &v
	}).(CustomerSubscriptionDetailsPtrOutput)
}

// Location placement Id of a subscription.
func (o CustomerSubscriptionDetailsOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSubscriptionDetails) *string { return v.LocationPlacementId }).(pulumi.StringPtrOutput)
}

// Quota ID of a subscription.
func (o CustomerSubscriptionDetailsOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerSubscriptionDetails) string { return v.QuotaId }).(pulumi.StringOutput)
}

// List of registered feature flags for subscription.
func (o CustomerSubscriptionDetailsOutput) RegisteredFeatures() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o.ApplyT(func(v CustomerSubscriptionDetails) []CustomerSubscriptionRegisteredFeatures {
		return v.RegisteredFeatures
	}).(CustomerSubscriptionRegisteredFeaturesArrayOutput)
}

type CustomerSubscriptionDetailsPtrOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerSubscriptionDetails)(nil)).Elem()
}

func (o CustomerSubscriptionDetailsPtrOutput) ToCustomerSubscriptionDetailsPtrOutput() CustomerSubscriptionDetailsPtrOutput {
	return o
}

func (o CustomerSubscriptionDetailsPtrOutput) ToCustomerSubscriptionDetailsPtrOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsPtrOutput {
	return o
}

func (o CustomerSubscriptionDetailsPtrOutput) Elem() CustomerSubscriptionDetailsOutput {
	return o.ApplyT(func(v *CustomerSubscriptionDetails) CustomerSubscriptionDetails {
		if v != nil {
			return *v
		}
		var ret CustomerSubscriptionDetails
		return ret
	}).(CustomerSubscriptionDetailsOutput)
}

// Location placement Id of a subscription.
func (o CustomerSubscriptionDetailsPtrOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerSubscriptionDetails) *string {
		if v == nil {
			return nil
		}
		return v.LocationPlacementId
	}).(pulumi.StringPtrOutput)
}

// Quota ID of a subscription.
func (o CustomerSubscriptionDetailsPtrOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerSubscriptionDetails) *string {
		if v == nil {
			return nil
		}
		return &v.QuotaId
	}).(pulumi.StringPtrOutput)
}

// List of registered feature flags for subscription.
func (o CustomerSubscriptionDetailsPtrOutput) RegisteredFeatures() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o.ApplyT(func(v *CustomerSubscriptionDetails) []CustomerSubscriptionRegisteredFeatures {
		if v == nil {
			return nil
		}
		return v.RegisteredFeatures
	}).(CustomerSubscriptionRegisteredFeaturesArrayOutput)
}

// Represents subscription registered features.
type CustomerSubscriptionRegisteredFeatures struct {
	// Name of subscription registered feature.
	Name *string `pulumi:"name"`
	// State of subscription registered feature.
	State *string `pulumi:"state"`
}

// CustomerSubscriptionRegisteredFeaturesInput is an input type that accepts CustomerSubscriptionRegisteredFeaturesArgs and CustomerSubscriptionRegisteredFeaturesOutput values.
// You can construct a concrete instance of `CustomerSubscriptionRegisteredFeaturesInput` via:
//
//	CustomerSubscriptionRegisteredFeaturesArgs{...}
type CustomerSubscriptionRegisteredFeaturesInput interface {
	pulumi.Input

	ToCustomerSubscriptionRegisteredFeaturesOutput() CustomerSubscriptionRegisteredFeaturesOutput
	ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(context.Context) CustomerSubscriptionRegisteredFeaturesOutput
}

// Represents subscription registered features.
type CustomerSubscriptionRegisteredFeaturesArgs struct {
	// Name of subscription registered feature.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// State of subscription registered feature.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (CustomerSubscriptionRegisteredFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (i CustomerSubscriptionRegisteredFeaturesArgs) ToCustomerSubscriptionRegisteredFeaturesOutput() CustomerSubscriptionRegisteredFeaturesOutput {
	return i.ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(context.Background())
}

func (i CustomerSubscriptionRegisteredFeaturesArgs) ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionRegisteredFeaturesOutput)
}

// CustomerSubscriptionRegisteredFeaturesArrayInput is an input type that accepts CustomerSubscriptionRegisteredFeaturesArray and CustomerSubscriptionRegisteredFeaturesArrayOutput values.
// You can construct a concrete instance of `CustomerSubscriptionRegisteredFeaturesArrayInput` via:
//
//	CustomerSubscriptionRegisteredFeaturesArray{ CustomerSubscriptionRegisteredFeaturesArgs{...} }
type CustomerSubscriptionRegisteredFeaturesArrayInput interface {
	pulumi.Input

	ToCustomerSubscriptionRegisteredFeaturesArrayOutput() CustomerSubscriptionRegisteredFeaturesArrayOutput
	ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(context.Context) CustomerSubscriptionRegisteredFeaturesArrayOutput
}

type CustomerSubscriptionRegisteredFeaturesArray []CustomerSubscriptionRegisteredFeaturesInput

func (CustomerSubscriptionRegisteredFeaturesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (i CustomerSubscriptionRegisteredFeaturesArray) ToCustomerSubscriptionRegisteredFeaturesArrayOutput() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return i.ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(context.Background())
}

func (i CustomerSubscriptionRegisteredFeaturesArray) ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionRegisteredFeaturesArrayOutput)
}

// Represents subscription registered features.
type CustomerSubscriptionRegisteredFeaturesOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionRegisteredFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (o CustomerSubscriptionRegisteredFeaturesOutput) ToCustomerSubscriptionRegisteredFeaturesOutput() CustomerSubscriptionRegisteredFeaturesOutput {
	return o
}

func (o CustomerSubscriptionRegisteredFeaturesOutput) ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesOutput {
	return o
}

// Name of subscription registered feature.
func (o CustomerSubscriptionRegisteredFeaturesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSubscriptionRegisteredFeatures) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// State of subscription registered feature.
func (o CustomerSubscriptionRegisteredFeaturesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSubscriptionRegisteredFeatures) *string { return v.State }).(pulumi.StringPtrOutput)
}

type CustomerSubscriptionRegisteredFeaturesArrayOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionRegisteredFeaturesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (o CustomerSubscriptionRegisteredFeaturesArrayOutput) ToCustomerSubscriptionRegisteredFeaturesArrayOutput() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o
}

func (o CustomerSubscriptionRegisteredFeaturesArrayOutput) ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o
}

func (o CustomerSubscriptionRegisteredFeaturesArrayOutput) Index(i pulumi.IntInput) CustomerSubscriptionRegisteredFeaturesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomerSubscriptionRegisteredFeatures {
		return vs[0].([]CustomerSubscriptionRegisteredFeatures)[vs[1].(int)]
	}).(CustomerSubscriptionRegisteredFeaturesOutput)
}

// Description related properties of a product system.
type DescriptionResponse struct {
	// Attributes for the product system.
	Attributes []string `pulumi:"attributes"`
	// Type of description.
	DescriptionType string `pulumi:"descriptionType"`
	// Keywords for the product system.
	Keywords []string `pulumi:"keywords"`
	// Links for the product system.
	Links []LinkResponse `pulumi:"links"`
	// Long description of the product system.
	LongDescription string `pulumi:"longDescription"`
	// Short description of the product system.
	ShortDescription string `pulumi:"shortDescription"`
}

// Description related properties of a product system.
type DescriptionResponseOutput struct{ *pulumi.OutputState }

func (DescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DescriptionResponse)(nil)).Elem()
}

func (o DescriptionResponseOutput) ToDescriptionResponseOutput() DescriptionResponseOutput {
	return o
}

func (o DescriptionResponseOutput) ToDescriptionResponseOutputWithContext(ctx context.Context) DescriptionResponseOutput {
	return o
}

// Attributes for the product system.
func (o DescriptionResponseOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DescriptionResponse) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// Type of description.
func (o DescriptionResponseOutput) DescriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v DescriptionResponse) string { return v.DescriptionType }).(pulumi.StringOutput)
}

// Keywords for the product system.
func (o DescriptionResponseOutput) Keywords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DescriptionResponse) []string { return v.Keywords }).(pulumi.StringArrayOutput)
}

// Links for the product system.
func (o DescriptionResponseOutput) Links() LinkResponseArrayOutput {
	return o.ApplyT(func(v DescriptionResponse) []LinkResponse { return v.Links }).(LinkResponseArrayOutput)
}

// Long description of the product system.
func (o DescriptionResponseOutput) LongDescription() pulumi.StringOutput {
	return o.ApplyT(func(v DescriptionResponse) string { return v.LongDescription }).(pulumi.StringOutput)
}

// Short description of the product system.
func (o DescriptionResponseOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v DescriptionResponse) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// Device details.
type DeviceDetailsResponse struct {
	// Device serial number to be displayed.
	DisplaySerialNumber string `pulumi:"displaySerialNumber"`
	// Management Resource Id.
	ManagementResourceId string `pulumi:"managementResourceId"`
	// Management Resource Tenant ID.
	ManagementResourceTenantId string `pulumi:"managementResourceTenantId"`
	// Provisioning Details for the device.
	ProvisioningDetails ProvisioningDetailsResponse `pulumi:"provisioningDetails"`
	// Determining nature of provisioning that the configuration supports.
	ProvisioningSupport string `pulumi:"provisioningSupport"`
	// Device serial number.
	SerialNumber string `pulumi:"serialNumber"`
}

// Defaults sets the appropriate defaults for DeviceDetailsResponse
func (val *DeviceDetailsResponse) Defaults() *DeviceDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ProvisioningDetails = *tmp.ProvisioningDetails.Defaults()

	return &tmp
}

// Device details.
type DeviceDetailsResponseOutput struct{ *pulumi.OutputState }

func (DeviceDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDetailsResponse)(nil)).Elem()
}

func (o DeviceDetailsResponseOutput) ToDeviceDetailsResponseOutput() DeviceDetailsResponseOutput {
	return o
}

func (o DeviceDetailsResponseOutput) ToDeviceDetailsResponseOutputWithContext(ctx context.Context) DeviceDetailsResponseOutput {
	return o
}

// Device serial number to be displayed.
func (o DeviceDetailsResponseOutput) DisplaySerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) string { return v.DisplaySerialNumber }).(pulumi.StringOutput)
}

// Management Resource Id.
func (o DeviceDetailsResponseOutput) ManagementResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) string { return v.ManagementResourceId }).(pulumi.StringOutput)
}

// Management Resource Tenant ID.
func (o DeviceDetailsResponseOutput) ManagementResourceTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) string { return v.ManagementResourceTenantId }).(pulumi.StringOutput)
}

// Provisioning Details for the device.
func (o DeviceDetailsResponseOutput) ProvisioningDetails() ProvisioningDetailsResponseOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) ProvisioningDetailsResponse { return v.ProvisioningDetails }).(ProvisioningDetailsResponseOutput)
}

// Determining nature of provisioning that the configuration supports.
func (o DeviceDetailsResponseOutput) ProvisioningSupport() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) string { return v.ProvisioningSupport }).(pulumi.StringOutput)
}

// Device serial number.
func (o DeviceDetailsResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

type DeviceDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DeviceDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceDetailsResponse)(nil)).Elem()
}

func (o DeviceDetailsResponseArrayOutput) ToDeviceDetailsResponseArrayOutput() DeviceDetailsResponseArrayOutput {
	return o
}

func (o DeviceDetailsResponseArrayOutput) ToDeviceDetailsResponseArrayOutputWithContext(ctx context.Context) DeviceDetailsResponseArrayOutput {
	return o
}

func (o DeviceDetailsResponseArrayOutput) Index(i pulumi.IntInput) DeviceDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceDetailsResponse {
		return vs[0].([]DeviceDetailsResponse)[vs[1].(int)]
	}).(DeviceDetailsResponseOutput)
}

// Proof of possession details.
type DevicePresenceVerificationDetailsResponse struct {
	// Insights on current status.
	Message string `pulumi:"message"`
	// Proof of possession status.
	Status string `pulumi:"status"`
}

// Proof of possession details.
type DevicePresenceVerificationDetailsResponseOutput struct{ *pulumi.OutputState }

func (DevicePresenceVerificationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePresenceVerificationDetailsResponse)(nil)).Elem()
}

func (o DevicePresenceVerificationDetailsResponseOutput) ToDevicePresenceVerificationDetailsResponseOutput() DevicePresenceVerificationDetailsResponseOutput {
	return o
}

func (o DevicePresenceVerificationDetailsResponseOutput) ToDevicePresenceVerificationDetailsResponseOutputWithContext(ctx context.Context) DevicePresenceVerificationDetailsResponseOutput {
	return o
}

// Insights on current status.
func (o DevicePresenceVerificationDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v DevicePresenceVerificationDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Proof of possession status.
func (o DevicePresenceVerificationDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DevicePresenceVerificationDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

type DevicePresenceVerificationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DevicePresenceVerificationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePresenceVerificationDetailsResponse)(nil)).Elem()
}

func (o DevicePresenceVerificationDetailsResponsePtrOutput) ToDevicePresenceVerificationDetailsResponsePtrOutput() DevicePresenceVerificationDetailsResponsePtrOutput {
	return o
}

func (o DevicePresenceVerificationDetailsResponsePtrOutput) ToDevicePresenceVerificationDetailsResponsePtrOutputWithContext(ctx context.Context) DevicePresenceVerificationDetailsResponsePtrOutput {
	return o
}

func (o DevicePresenceVerificationDetailsResponsePtrOutput) Elem() DevicePresenceVerificationDetailsResponseOutput {
	return o.ApplyT(func(v *DevicePresenceVerificationDetailsResponse) DevicePresenceVerificationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DevicePresenceVerificationDetailsResponse
		return ret
	}).(DevicePresenceVerificationDetailsResponseOutput)
}

// Insights on current status.
func (o DevicePresenceVerificationDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePresenceVerificationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Proof of possession status.
func (o DevicePresenceVerificationDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePresenceVerificationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Dimensions of a configuration.
type DimensionsResponse struct {
	// Depth of the device.
	Depth float64 `pulumi:"depth"`
	// Height of the device.
	Height float64 `pulumi:"height"`
	// Length of the device.
	Length float64 `pulumi:"length"`
	// Unit for the dimensions of length, height and width.
	LengthHeightUnit string `pulumi:"lengthHeightUnit"`
	// Weight of the device.
	Weight float64 `pulumi:"weight"`
	// Unit for the dimensions of weight.
	WeightUnit string `pulumi:"weightUnit"`
	// Width of the device.
	Width float64 `pulumi:"width"`
}

// Dimensions of a configuration.
type DimensionsResponseOutput struct{ *pulumi.OutputState }

func (DimensionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DimensionsResponse)(nil)).Elem()
}

func (o DimensionsResponseOutput) ToDimensionsResponseOutput() DimensionsResponseOutput {
	return o
}

func (o DimensionsResponseOutput) ToDimensionsResponseOutputWithContext(ctx context.Context) DimensionsResponseOutput {
	return o
}

// Depth of the device.
func (o DimensionsResponseOutput) Depth() pulumi.Float64Output {
	return o.ApplyT(func(v DimensionsResponse) float64 { return v.Depth }).(pulumi.Float64Output)
}

// Height of the device.
func (o DimensionsResponseOutput) Height() pulumi.Float64Output {
	return o.ApplyT(func(v DimensionsResponse) float64 { return v.Height }).(pulumi.Float64Output)
}

// Length of the device.
func (o DimensionsResponseOutput) Length() pulumi.Float64Output {
	return o.ApplyT(func(v DimensionsResponse) float64 { return v.Length }).(pulumi.Float64Output)
}

// Unit for the dimensions of length, height and width.
func (o DimensionsResponseOutput) LengthHeightUnit() pulumi.StringOutput {
	return o.ApplyT(func(v DimensionsResponse) string { return v.LengthHeightUnit }).(pulumi.StringOutput)
}

// Weight of the device.
func (o DimensionsResponseOutput) Weight() pulumi.Float64Output {
	return o.ApplyT(func(v DimensionsResponse) float64 { return v.Weight }).(pulumi.Float64Output)
}

// Unit for the dimensions of weight.
func (o DimensionsResponseOutput) WeightUnit() pulumi.StringOutput {
	return o.ApplyT(func(v DimensionsResponse) string { return v.WeightUnit }).(pulumi.StringOutput)
}

// Width of the device.
func (o DimensionsResponseOutput) Width() pulumi.Float64Output {
	return o.ApplyT(func(v DimensionsResponse) float64 { return v.Width }).(pulumi.Float64Output)
}

// Describes product display information.
type DisplayInfoResponse struct {
	// Configuration display name.
	ConfigurationDisplayName string `pulumi:"configurationDisplayName"`
	// Product family display name.
	ProductFamilyDisplayName string `pulumi:"productFamilyDisplayName"`
}

// Describes product display information.
type DisplayInfoResponseOutput struct{ *pulumi.OutputState }

func (DisplayInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisplayInfoResponse)(nil)).Elem()
}

func (o DisplayInfoResponseOutput) ToDisplayInfoResponseOutput() DisplayInfoResponseOutput {
	return o
}

func (o DisplayInfoResponseOutput) ToDisplayInfoResponseOutputWithContext(ctx context.Context) DisplayInfoResponseOutput {
	return o
}

// Configuration display name.
func (o DisplayInfoResponseOutput) ConfigurationDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v DisplayInfoResponse) string { return v.ConfigurationDisplayName }).(pulumi.StringOutput)
}

// Product family display name.
func (o DisplayInfoResponseOutput) ProductFamilyDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v DisplayInfoResponse) string { return v.ProductFamilyDisplayName }).(pulumi.StringOutput)
}

type DisplayInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DisplayInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DisplayInfoResponse)(nil)).Elem()
}

func (o DisplayInfoResponsePtrOutput) ToDisplayInfoResponsePtrOutput() DisplayInfoResponsePtrOutput {
	return o
}

func (o DisplayInfoResponsePtrOutput) ToDisplayInfoResponsePtrOutputWithContext(ctx context.Context) DisplayInfoResponsePtrOutput {
	return o
}

func (o DisplayInfoResponsePtrOutput) Elem() DisplayInfoResponseOutput {
	return o.ApplyT(func(v *DisplayInfoResponse) DisplayInfoResponse {
		if v != nil {
			return *v
		}
		var ret DisplayInfoResponse
		return ret
	}).(DisplayInfoResponseOutput)
}

// Configuration display name.
func (o DisplayInfoResponsePtrOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisplayInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigurationDisplayName
	}).(pulumi.StringPtrOutput)
}

// Product family display name.
func (o DisplayInfoResponsePtrOutput) ProductFamilyDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisplayInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProductFamilyDisplayName
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the double encryption.
type EncryptionPreferences struct {
	// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
	DoubleEncryptionStatus *string `pulumi:"doubleEncryptionStatus"`
}

// EncryptionPreferencesInput is an input type that accepts EncryptionPreferencesArgs and EncryptionPreferencesOutput values.
// You can construct a concrete instance of `EncryptionPreferencesInput` via:
//
//	EncryptionPreferencesArgs{...}
type EncryptionPreferencesInput interface {
	pulumi.Input

	ToEncryptionPreferencesOutput() EncryptionPreferencesOutput
	ToEncryptionPreferencesOutputWithContext(context.Context) EncryptionPreferencesOutput
}

// Preferences related to the double encryption.
type EncryptionPreferencesArgs struct {
	// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
	DoubleEncryptionStatus pulumi.StringPtrInput `pulumi:"doubleEncryptionStatus"`
}

func (EncryptionPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferences)(nil)).Elem()
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesOutput() EncryptionPreferencesOutput {
	return i.ToEncryptionPreferencesOutputWithContext(context.Background())
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesOutputWithContext(ctx context.Context) EncryptionPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesOutput)
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return i.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesOutput).ToEncryptionPreferencesPtrOutputWithContext(ctx)
}

// EncryptionPreferencesPtrInput is an input type that accepts EncryptionPreferencesArgs, EncryptionPreferencesPtr and EncryptionPreferencesPtrOutput values.
// You can construct a concrete instance of `EncryptionPreferencesPtrInput` via:
//
//	        EncryptionPreferencesArgs{...}
//
//	or:
//
//	        nil
type EncryptionPreferencesPtrInput interface {
	pulumi.Input

	ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput
	ToEncryptionPreferencesPtrOutputWithContext(context.Context) EncryptionPreferencesPtrOutput
}

type encryptionPreferencesPtrType EncryptionPreferencesArgs

func EncryptionPreferencesPtr(v *EncryptionPreferencesArgs) EncryptionPreferencesPtrInput {
	return (*encryptionPreferencesPtrType)(v)
}

func (*encryptionPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferences)(nil)).Elem()
}

func (i *encryptionPreferencesPtrType) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return i.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (i *encryptionPreferencesPtrType) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesPtrOutput)
}

// Preferences related to the double encryption.
type EncryptionPreferencesOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferences)(nil)).Elem()
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesOutput() EncryptionPreferencesOutput {
	return o
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesOutputWithContext(ctx context.Context) EncryptionPreferencesOutput {
	return o
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return o.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionPreferences) *EncryptionPreferences {
		return &v
	}).(EncryptionPreferencesPtrOutput)
}

// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
func (o EncryptionPreferencesOutput) DoubleEncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferences) *string { return v.DoubleEncryptionStatus }).(pulumi.StringPtrOutput)
}

type EncryptionPreferencesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferences)(nil)).Elem()
}

func (o EncryptionPreferencesPtrOutput) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return o
}

func (o EncryptionPreferencesPtrOutput) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return o
}

func (o EncryptionPreferencesPtrOutput) Elem() EncryptionPreferencesOutput {
	return o.ApplyT(func(v *EncryptionPreferences) EncryptionPreferences {
		if v != nil {
			return *v
		}
		var ret EncryptionPreferences
		return ret
	}).(EncryptionPreferencesOutput)
}

// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
func (o EncryptionPreferencesPtrOutput) DoubleEncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferences) *string {
		if v == nil {
			return nil
		}
		return v.DoubleEncryptionStatus
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the double encryption.
type EncryptionPreferencesResponse struct {
	// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
	DoubleEncryptionStatus *string `pulumi:"doubleEncryptionStatus"`
}

// Preferences related to the double encryption.
type EncryptionPreferencesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferencesResponse)(nil)).Elem()
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponseOutput() EncryptionPreferencesResponseOutput {
	return o
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponseOutputWithContext(ctx context.Context) EncryptionPreferencesResponseOutput {
	return o
}

// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
func (o EncryptionPreferencesResponseOutput) DoubleEncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferencesResponse) *string { return v.DoubleEncryptionStatus }).(pulumi.StringPtrOutput)
}

type EncryptionPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferencesResponse)(nil)).Elem()
}

func (o EncryptionPreferencesResponsePtrOutput) ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput {
	return o
}

func (o EncryptionPreferencesResponsePtrOutput) ToEncryptionPreferencesResponsePtrOutputWithContext(ctx context.Context) EncryptionPreferencesResponsePtrOutput {
	return o
}

func (o EncryptionPreferencesResponsePtrOutput) Elem() EncryptionPreferencesResponseOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) EncryptionPreferencesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionPreferencesResponse
		return ret
	}).(EncryptionPreferencesResponseOutput)
}

// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
func (o EncryptionPreferencesResponsePtrOutput) DoubleEncryptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DoubleEncryptionStatus
	}).(pulumi.StringPtrOutput)
}

// The resource management error additional info.
type ErrorAdditionalInfoResponse struct {
	// The additional info.
	Info interface{} `pulumi:"info"`
	// The additional info type.
	Type string `pulumi:"type"`
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return o
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return o
}

// The additional info.
func (o ErrorAdditionalInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// The additional info type.
func (o ErrorAdditionalInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ErrorAdditionalInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) Index(i pulumi.IntInput) ErrorAdditionalInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorAdditionalInfoResponse {
		return vs[0].([]ErrorAdditionalInfoResponse)[vs[1].(int)]
	}).(ErrorAdditionalInfoResponseOutput)
}

// The error detail.
type ErrorDetailResponse struct {
	// The error additional info.
	AdditionalInfo []ErrorAdditionalInfoResponse `pulumi:"additionalInfo"`
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []ErrorDetailResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
	// The error target.
	Target string `pulumi:"target"`
}

// The error detail.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// The error additional info.
func (o ErrorDetailResponseOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorAdditionalInfoResponse { return v.AdditionalInfo }).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The error details.
func (o ErrorDetailResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// The error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The error target.
func (o ErrorDetailResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Target }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// Different types of filters supported and its values.
type FilterableProperty struct {
	// Values to be filtered.
	SupportedValues []string `pulumi:"supportedValues"`
	// Type of product filter.
	Type string `pulumi:"type"`
}

// FilterablePropertyInput is an input type that accepts FilterablePropertyArgs and FilterablePropertyOutput values.
// You can construct a concrete instance of `FilterablePropertyInput` via:
//
//	FilterablePropertyArgs{...}
type FilterablePropertyInput interface {
	pulumi.Input

	ToFilterablePropertyOutput() FilterablePropertyOutput
	ToFilterablePropertyOutputWithContext(context.Context) FilterablePropertyOutput
}

// Different types of filters supported and its values.
type FilterablePropertyArgs struct {
	// Values to be filtered.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// Type of product filter.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FilterablePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterableProperty)(nil)).Elem()
}

func (i FilterablePropertyArgs) ToFilterablePropertyOutput() FilterablePropertyOutput {
	return i.ToFilterablePropertyOutputWithContext(context.Background())
}

func (i FilterablePropertyArgs) ToFilterablePropertyOutputWithContext(ctx context.Context) FilterablePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyOutput)
}

// FilterablePropertyArrayInput is an input type that accepts FilterablePropertyArray and FilterablePropertyArrayOutput values.
// You can construct a concrete instance of `FilterablePropertyArrayInput` via:
//
//	FilterablePropertyArray{ FilterablePropertyArgs{...} }
type FilterablePropertyArrayInput interface {
	pulumi.Input

	ToFilterablePropertyArrayOutput() FilterablePropertyArrayOutput
	ToFilterablePropertyArrayOutputWithContext(context.Context) FilterablePropertyArrayOutput
}

type FilterablePropertyArray []FilterablePropertyInput

func (FilterablePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterableProperty)(nil)).Elem()
}

func (i FilterablePropertyArray) ToFilterablePropertyArrayOutput() FilterablePropertyArrayOutput {
	return i.ToFilterablePropertyArrayOutputWithContext(context.Background())
}

func (i FilterablePropertyArray) ToFilterablePropertyArrayOutputWithContext(ctx context.Context) FilterablePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyArrayOutput)
}

// Different types of filters supported and its values.
type FilterablePropertyOutput struct{ *pulumi.OutputState }

func (FilterablePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterableProperty)(nil)).Elem()
}

func (o FilterablePropertyOutput) ToFilterablePropertyOutput() FilterablePropertyOutput {
	return o
}

func (o FilterablePropertyOutput) ToFilterablePropertyOutputWithContext(ctx context.Context) FilterablePropertyOutput {
	return o
}

// Values to be filtered.
func (o FilterablePropertyOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterableProperty) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// Type of product filter.
func (o FilterablePropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FilterableProperty) string { return v.Type }).(pulumi.StringOutput)
}

type FilterablePropertyArrayOutput struct{ *pulumi.OutputState }

func (FilterablePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterableProperty)(nil)).Elem()
}

func (o FilterablePropertyArrayOutput) ToFilterablePropertyArrayOutput() FilterablePropertyArrayOutput {
	return o
}

func (o FilterablePropertyArrayOutput) ToFilterablePropertyArrayOutputWithContext(ctx context.Context) FilterablePropertyArrayOutput {
	return o
}

func (o FilterablePropertyArrayOutput) Index(i pulumi.IntInput) FilterablePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterableProperty {
		return vs[0].([]FilterableProperty)[vs[1].(int)]
	}).(FilterablePropertyOutput)
}

// Different types of filters supported and its values.
type FilterablePropertyResponse struct {
	// Values to be filtered.
	SupportedValues []string `pulumi:"supportedValues"`
	// Type of product filter.
	Type string `pulumi:"type"`
}

// Different types of filters supported and its values.
type FilterablePropertyResponseOutput struct{ *pulumi.OutputState }

func (FilterablePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterablePropertyResponse)(nil)).Elem()
}

func (o FilterablePropertyResponseOutput) ToFilterablePropertyResponseOutput() FilterablePropertyResponseOutput {
	return o
}

func (o FilterablePropertyResponseOutput) ToFilterablePropertyResponseOutputWithContext(ctx context.Context) FilterablePropertyResponseOutput {
	return o
}

// Values to be filtered.
func (o FilterablePropertyResponseOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterablePropertyResponse) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// Type of product filter.
func (o FilterablePropertyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FilterablePropertyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FilterablePropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (FilterablePropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterablePropertyResponse)(nil)).Elem()
}

func (o FilterablePropertyResponseArrayOutput) ToFilterablePropertyResponseArrayOutput() FilterablePropertyResponseArrayOutput {
	return o
}

func (o FilterablePropertyResponseArrayOutput) ToFilterablePropertyResponseArrayOutputWithContext(ctx context.Context) FilterablePropertyResponseArrayOutput {
	return o
}

func (o FilterablePropertyResponseArrayOutput) Index(i pulumi.IntInput) FilterablePropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterablePropertyResponse {
		return vs[0].([]FilterablePropertyResponse)[vs[1].(int)]
	}).(FilterablePropertyResponseOutput)
}

// Forward shipment details.
type ForwardShippingDetailsResponse struct {
	// Carrier Name for display purpose. Not to be used for any processing.
	CarrierDisplayName string `pulumi:"carrierDisplayName"`
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// TrackingId of the package.
	TrackingId string `pulumi:"trackingId"`
	// TrackingUrl of the package.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// Forward shipment details.
type ForwardShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (ForwardShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardShippingDetailsResponse)(nil)).Elem()
}

func (o ForwardShippingDetailsResponseOutput) ToForwardShippingDetailsResponseOutput() ForwardShippingDetailsResponseOutput {
	return o
}

func (o ForwardShippingDetailsResponseOutput) ToForwardShippingDetailsResponseOutputWithContext(ctx context.Context) ForwardShippingDetailsResponseOutput {
	return o
}

// Carrier Name for display purpose. Not to be used for any processing.
func (o ForwardShippingDetailsResponseOutput) CarrierDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardShippingDetailsResponse) string { return v.CarrierDisplayName }).(pulumi.StringOutput)
}

// Name of the carrier.
func (o ForwardShippingDetailsResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardShippingDetailsResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// TrackingId of the package.
func (o ForwardShippingDetailsResponseOutput) TrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardShippingDetailsResponse) string { return v.TrackingId }).(pulumi.StringOutput)
}

// TrackingUrl of the package.
func (o ForwardShippingDetailsResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardShippingDetailsResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

// Grouped child configuration object.
type GroupedChildConfigurationsResponse struct {
	// Category information.
	CategoryInformation CategoryInformationResponse `pulumi:"categoryInformation"`
	// List of child configurations.
	ChildConfigurations []ChildConfigurationResponse `pulumi:"childConfigurations"`
}

// Grouped child configuration object.
type GroupedChildConfigurationsResponseOutput struct{ *pulumi.OutputState }

func (GroupedChildConfigurationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupedChildConfigurationsResponse)(nil)).Elem()
}

func (o GroupedChildConfigurationsResponseOutput) ToGroupedChildConfigurationsResponseOutput() GroupedChildConfigurationsResponseOutput {
	return o
}

func (o GroupedChildConfigurationsResponseOutput) ToGroupedChildConfigurationsResponseOutputWithContext(ctx context.Context) GroupedChildConfigurationsResponseOutput {
	return o
}

// Category information.
func (o GroupedChildConfigurationsResponseOutput) CategoryInformation() CategoryInformationResponseOutput {
	return o.ApplyT(func(v GroupedChildConfigurationsResponse) CategoryInformationResponse { return v.CategoryInformation }).(CategoryInformationResponseOutput)
}

// List of child configurations.
func (o GroupedChildConfigurationsResponseOutput) ChildConfigurations() ChildConfigurationResponseArrayOutput {
	return o.ApplyT(func(v GroupedChildConfigurationsResponse) []ChildConfigurationResponse { return v.ChildConfigurations }).(ChildConfigurationResponseArrayOutput)
}

type GroupedChildConfigurationsResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupedChildConfigurationsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupedChildConfigurationsResponse)(nil)).Elem()
}

func (o GroupedChildConfigurationsResponseArrayOutput) ToGroupedChildConfigurationsResponseArrayOutput() GroupedChildConfigurationsResponseArrayOutput {
	return o
}

func (o GroupedChildConfigurationsResponseArrayOutput) ToGroupedChildConfigurationsResponseArrayOutputWithContext(ctx context.Context) GroupedChildConfigurationsResponseArrayOutput {
	return o
}

func (o GroupedChildConfigurationsResponseArrayOutput) Index(i pulumi.IntInput) GroupedChildConfigurationsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupedChildConfigurationsResponse {
		return vs[0].([]GroupedChildConfigurationsResponse)[vs[1].(int)]
	}).(GroupedChildConfigurationsResponseOutput)
}

// Holds details about product hierarchy information.
type HierarchyInformation struct {
	// Represents Model Display Name.
	ConfigurationIdDisplayName *string `pulumi:"configurationIdDisplayName"`
	// Represents configuration name that uniquely identifies configuration.
	ConfigurationName *string `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family.
	ProductFamilyName *string `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line.
	ProductLineName *string `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product.
	ProductName *string `pulumi:"productName"`
}

// HierarchyInformationInput is an input type that accepts HierarchyInformationArgs and HierarchyInformationOutput values.
// You can construct a concrete instance of `HierarchyInformationInput` via:
//
//	HierarchyInformationArgs{...}
type HierarchyInformationInput interface {
	pulumi.Input

	ToHierarchyInformationOutput() HierarchyInformationOutput
	ToHierarchyInformationOutputWithContext(context.Context) HierarchyInformationOutput
}

// Holds details about product hierarchy information.
type HierarchyInformationArgs struct {
	// Represents Model Display Name.
	ConfigurationIdDisplayName pulumi.StringPtrInput `pulumi:"configurationIdDisplayName"`
	// Represents configuration name that uniquely identifies configuration.
	ConfigurationName pulumi.StringPtrInput `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family.
	ProductFamilyName pulumi.StringPtrInput `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line.
	ProductLineName pulumi.StringPtrInput `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product.
	ProductName pulumi.StringPtrInput `pulumi:"productName"`
}

func (HierarchyInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformation)(nil)).Elem()
}

func (i HierarchyInformationArgs) ToHierarchyInformationOutput() HierarchyInformationOutput {
	return i.ToHierarchyInformationOutputWithContext(context.Background())
}

func (i HierarchyInformationArgs) ToHierarchyInformationOutputWithContext(ctx context.Context) HierarchyInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationOutput)
}

func (i HierarchyInformationArgs) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return i.ToHierarchyInformationPtrOutputWithContext(context.Background())
}

func (i HierarchyInformationArgs) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationOutput).ToHierarchyInformationPtrOutputWithContext(ctx)
}

// HierarchyInformationPtrInput is an input type that accepts HierarchyInformationArgs, HierarchyInformationPtr and HierarchyInformationPtrOutput values.
// You can construct a concrete instance of `HierarchyInformationPtrInput` via:
//
//	        HierarchyInformationArgs{...}
//
//	or:
//
//	        nil
type HierarchyInformationPtrInput interface {
	pulumi.Input

	ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput
	ToHierarchyInformationPtrOutputWithContext(context.Context) HierarchyInformationPtrOutput
}

type hierarchyInformationPtrType HierarchyInformationArgs

func HierarchyInformationPtr(v *HierarchyInformationArgs) HierarchyInformationPtrInput {
	return (*hierarchyInformationPtrType)(v)
}

func (*hierarchyInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyInformation)(nil)).Elem()
}

func (i *hierarchyInformationPtrType) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return i.ToHierarchyInformationPtrOutputWithContext(context.Background())
}

func (i *hierarchyInformationPtrType) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationPtrOutput)
}

// HierarchyInformationArrayInput is an input type that accepts HierarchyInformationArray and HierarchyInformationArrayOutput values.
// You can construct a concrete instance of `HierarchyInformationArrayInput` via:
//
//	HierarchyInformationArray{ HierarchyInformationArgs{...} }
type HierarchyInformationArrayInput interface {
	pulumi.Input

	ToHierarchyInformationArrayOutput() HierarchyInformationArrayOutput
	ToHierarchyInformationArrayOutputWithContext(context.Context) HierarchyInformationArrayOutput
}

type HierarchyInformationArray []HierarchyInformationInput

func (HierarchyInformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyInformation)(nil)).Elem()
}

func (i HierarchyInformationArray) ToHierarchyInformationArrayOutput() HierarchyInformationArrayOutput {
	return i.ToHierarchyInformationArrayOutputWithContext(context.Background())
}

func (i HierarchyInformationArray) ToHierarchyInformationArrayOutputWithContext(ctx context.Context) HierarchyInformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationArrayOutput)
}

// Holds details about product hierarchy information.
type HierarchyInformationOutput struct{ *pulumi.OutputState }

func (HierarchyInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformation)(nil)).Elem()
}

func (o HierarchyInformationOutput) ToHierarchyInformationOutput() HierarchyInformationOutput {
	return o
}

func (o HierarchyInformationOutput) ToHierarchyInformationOutputWithContext(ctx context.Context) HierarchyInformationOutput {
	return o
}

func (o HierarchyInformationOutput) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return o.ToHierarchyInformationPtrOutputWithContext(context.Background())
}

func (o HierarchyInformationOutput) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyInformation) *HierarchyInformation {
		return &v
	}).(HierarchyInformationPtrOutput)
}

// Represents Model Display Name.
func (o HierarchyInformationOutput) ConfigurationIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ConfigurationIdDisplayName }).(pulumi.StringPtrOutput)
}

// Represents configuration name that uniquely identifies configuration.
func (o HierarchyInformationOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ConfigurationName }).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family.
func (o HierarchyInformationOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ProductFamilyName }).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line.
func (o HierarchyInformationOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ProductLineName }).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product.
func (o HierarchyInformationOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

type HierarchyInformationPtrOutput struct{ *pulumi.OutputState }

func (HierarchyInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyInformation)(nil)).Elem()
}

func (o HierarchyInformationPtrOutput) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return o
}

func (o HierarchyInformationPtrOutput) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return o
}

func (o HierarchyInformationPtrOutput) Elem() HierarchyInformationOutput {
	return o.ApplyT(func(v *HierarchyInformation) HierarchyInformation {
		if v != nil {
			return *v
		}
		var ret HierarchyInformation
		return ret
	}).(HierarchyInformationOutput)
}

// Represents Model Display Name.
func (o HierarchyInformationPtrOutput) ConfigurationIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationIdDisplayName
	}).(pulumi.StringPtrOutput)
}

// Represents configuration name that uniquely identifies configuration.
func (o HierarchyInformationPtrOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationName
	}).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family.
func (o HierarchyInformationPtrOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProductFamilyName
	}).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line.
func (o HierarchyInformationPtrOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProductLineName
	}).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product.
func (o HierarchyInformationPtrOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(pulumi.StringPtrOutput)
}

type HierarchyInformationArrayOutput struct{ *pulumi.OutputState }

func (HierarchyInformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyInformation)(nil)).Elem()
}

func (o HierarchyInformationArrayOutput) ToHierarchyInformationArrayOutput() HierarchyInformationArrayOutput {
	return o
}

func (o HierarchyInformationArrayOutput) ToHierarchyInformationArrayOutputWithContext(ctx context.Context) HierarchyInformationArrayOutput {
	return o
}

func (o HierarchyInformationArrayOutput) Index(i pulumi.IntInput) HierarchyInformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyInformation {
		return vs[0].([]HierarchyInformation)[vs[1].(int)]
	}).(HierarchyInformationOutput)
}

// Holds details about product hierarchy information.
type HierarchyInformationResponse struct {
	// Represents Model Display Name.
	ConfigurationIdDisplayName *string `pulumi:"configurationIdDisplayName"`
	// Represents configuration name that uniquely identifies configuration.
	ConfigurationName *string `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family.
	ProductFamilyName *string `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line.
	ProductLineName *string `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product.
	ProductName *string `pulumi:"productName"`
}

// Holds details about product hierarchy information.
type HierarchyInformationResponseOutput struct{ *pulumi.OutputState }

func (HierarchyInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformationResponse)(nil)).Elem()
}

func (o HierarchyInformationResponseOutput) ToHierarchyInformationResponseOutput() HierarchyInformationResponseOutput {
	return o
}

func (o HierarchyInformationResponseOutput) ToHierarchyInformationResponseOutputWithContext(ctx context.Context) HierarchyInformationResponseOutput {
	return o
}

// Represents Model Display Name.
func (o HierarchyInformationResponseOutput) ConfigurationIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ConfigurationIdDisplayName }).(pulumi.StringPtrOutput)
}

// Represents configuration name that uniquely identifies configuration.
func (o HierarchyInformationResponseOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ConfigurationName }).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family.
func (o HierarchyInformationResponseOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ProductFamilyName }).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line.
func (o HierarchyInformationResponseOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ProductLineName }).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product.
func (o HierarchyInformationResponseOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

// Image for the product.
type ImageInformationResponse struct {
	// Type of the image.
	ImageType string `pulumi:"imageType"`
	// Url of the image.
	ImageUrl string `pulumi:"imageUrl"`
}

// Image for the product.
type ImageInformationResponseOutput struct{ *pulumi.OutputState }

func (ImageInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageInformationResponse)(nil)).Elem()
}

func (o ImageInformationResponseOutput) ToImageInformationResponseOutput() ImageInformationResponseOutput {
	return o
}

func (o ImageInformationResponseOutput) ToImageInformationResponseOutputWithContext(ctx context.Context) ImageInformationResponseOutput {
	return o
}

// Type of the image.
func (o ImageInformationResponseOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v ImageInformationResponse) string { return v.ImageType }).(pulumi.StringOutput)
}

// Url of the image.
func (o ImageInformationResponseOutput) ImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ImageInformationResponse) string { return v.ImageUrl }).(pulumi.StringOutput)
}

type ImageInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageInformationResponse)(nil)).Elem()
}

func (o ImageInformationResponseArrayOutput) ToImageInformationResponseArrayOutput() ImageInformationResponseArrayOutput {
	return o
}

func (o ImageInformationResponseArrayOutput) ToImageInformationResponseArrayOutputWithContext(ctx context.Context) ImageInformationResponseArrayOutput {
	return o
}

func (o ImageInformationResponseArrayOutput) Index(i pulumi.IntInput) ImageInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageInformationResponse {
		return vs[0].([]ImageInformationResponse)[vs[1].(int)]
	}).(ImageInformationResponseOutput)
}

// Returns link related to the product.
type LinkResponse struct {
	// Type of link.
	LinkType string `pulumi:"linkType"`
	// Url of the link.
	LinkUrl string `pulumi:"linkUrl"`
}

// Returns link related to the product.
type LinkResponseOutput struct{ *pulumi.OutputState }

func (LinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkResponse)(nil)).Elem()
}

func (o LinkResponseOutput) ToLinkResponseOutput() LinkResponseOutput {
	return o
}

func (o LinkResponseOutput) ToLinkResponseOutputWithContext(ctx context.Context) LinkResponseOutput {
	return o
}

// Type of link.
func (o LinkResponseOutput) LinkType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkResponse) string { return v.LinkType }).(pulumi.StringOutput)
}

// Url of the link.
func (o LinkResponseOutput) LinkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LinkResponse) string { return v.LinkUrl }).(pulumi.StringOutput)
}

type LinkResponseArrayOutput struct{ *pulumi.OutputState }

func (LinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkResponse)(nil)).Elem()
}

func (o LinkResponseArrayOutput) ToLinkResponseArrayOutput() LinkResponseArrayOutput {
	return o
}

func (o LinkResponseArrayOutput) ToLinkResponseArrayOutputWithContext(ctx context.Context) LinkResponseArrayOutput {
	return o
}

func (o LinkResponseArrayOutput) Index(i pulumi.IntInput) LinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkResponse {
		return vs[0].([]LinkResponse)[vs[1].(int)]
	}).(LinkResponseOutput)
}

// Management resource preference to link device.
type ManagementResourcePreferences struct {
	// Customer preferred Management resource ARM ID.
	PreferredManagementResourceId *string `pulumi:"preferredManagementResourceId"`
}

// ManagementResourcePreferencesInput is an input type that accepts ManagementResourcePreferencesArgs and ManagementResourcePreferencesOutput values.
// You can construct a concrete instance of `ManagementResourcePreferencesInput` via:
//
//	ManagementResourcePreferencesArgs{...}
type ManagementResourcePreferencesInput interface {
	pulumi.Input

	ToManagementResourcePreferencesOutput() ManagementResourcePreferencesOutput
	ToManagementResourcePreferencesOutputWithContext(context.Context) ManagementResourcePreferencesOutput
}

// Management resource preference to link device.
type ManagementResourcePreferencesArgs struct {
	// Customer preferred Management resource ARM ID.
	PreferredManagementResourceId pulumi.StringPtrInput `pulumi:"preferredManagementResourceId"`
}

func (ManagementResourcePreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementResourcePreferences)(nil)).Elem()
}

func (i ManagementResourcePreferencesArgs) ToManagementResourcePreferencesOutput() ManagementResourcePreferencesOutput {
	return i.ToManagementResourcePreferencesOutputWithContext(context.Background())
}

func (i ManagementResourcePreferencesArgs) ToManagementResourcePreferencesOutputWithContext(ctx context.Context) ManagementResourcePreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementResourcePreferencesOutput)
}

func (i ManagementResourcePreferencesArgs) ToManagementResourcePreferencesPtrOutput() ManagementResourcePreferencesPtrOutput {
	return i.ToManagementResourcePreferencesPtrOutputWithContext(context.Background())
}

func (i ManagementResourcePreferencesArgs) ToManagementResourcePreferencesPtrOutputWithContext(ctx context.Context) ManagementResourcePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementResourcePreferencesOutput).ToManagementResourcePreferencesPtrOutputWithContext(ctx)
}

// ManagementResourcePreferencesPtrInput is an input type that accepts ManagementResourcePreferencesArgs, ManagementResourcePreferencesPtr and ManagementResourcePreferencesPtrOutput values.
// You can construct a concrete instance of `ManagementResourcePreferencesPtrInput` via:
//
//	        ManagementResourcePreferencesArgs{...}
//
//	or:
//
//	        nil
type ManagementResourcePreferencesPtrInput interface {
	pulumi.Input

	ToManagementResourcePreferencesPtrOutput() ManagementResourcePreferencesPtrOutput
	ToManagementResourcePreferencesPtrOutputWithContext(context.Context) ManagementResourcePreferencesPtrOutput
}

type managementResourcePreferencesPtrType ManagementResourcePreferencesArgs

func ManagementResourcePreferencesPtr(v *ManagementResourcePreferencesArgs) ManagementResourcePreferencesPtrInput {
	return (*managementResourcePreferencesPtrType)(v)
}

func (*managementResourcePreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementResourcePreferences)(nil)).Elem()
}

func (i *managementResourcePreferencesPtrType) ToManagementResourcePreferencesPtrOutput() ManagementResourcePreferencesPtrOutput {
	return i.ToManagementResourcePreferencesPtrOutputWithContext(context.Background())
}

func (i *managementResourcePreferencesPtrType) ToManagementResourcePreferencesPtrOutputWithContext(ctx context.Context) ManagementResourcePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementResourcePreferencesPtrOutput)
}

// Management resource preference to link device.
type ManagementResourcePreferencesOutput struct{ *pulumi.OutputState }

func (ManagementResourcePreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementResourcePreferences)(nil)).Elem()
}

func (o ManagementResourcePreferencesOutput) ToManagementResourcePreferencesOutput() ManagementResourcePreferencesOutput {
	return o
}

func (o ManagementResourcePreferencesOutput) ToManagementResourcePreferencesOutputWithContext(ctx context.Context) ManagementResourcePreferencesOutput {
	return o
}

func (o ManagementResourcePreferencesOutput) ToManagementResourcePreferencesPtrOutput() ManagementResourcePreferencesPtrOutput {
	return o.ToManagementResourcePreferencesPtrOutputWithContext(context.Background())
}

func (o ManagementResourcePreferencesOutput) ToManagementResourcePreferencesPtrOutputWithContext(ctx context.Context) ManagementResourcePreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementResourcePreferences) *ManagementResourcePreferences {
		return &v
	}).(ManagementResourcePreferencesPtrOutput)
}

// Customer preferred Management resource ARM ID.
func (o ManagementResourcePreferencesOutput) PreferredManagementResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementResourcePreferences) *string { return v.PreferredManagementResourceId }).(pulumi.StringPtrOutput)
}

type ManagementResourcePreferencesPtrOutput struct{ *pulumi.OutputState }

func (ManagementResourcePreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementResourcePreferences)(nil)).Elem()
}

func (o ManagementResourcePreferencesPtrOutput) ToManagementResourcePreferencesPtrOutput() ManagementResourcePreferencesPtrOutput {
	return o
}

func (o ManagementResourcePreferencesPtrOutput) ToManagementResourcePreferencesPtrOutputWithContext(ctx context.Context) ManagementResourcePreferencesPtrOutput {
	return o
}

func (o ManagementResourcePreferencesPtrOutput) Elem() ManagementResourcePreferencesOutput {
	return o.ApplyT(func(v *ManagementResourcePreferences) ManagementResourcePreferences {
		if v != nil {
			return *v
		}
		var ret ManagementResourcePreferences
		return ret
	}).(ManagementResourcePreferencesOutput)
}

// Customer preferred Management resource ARM ID.
func (o ManagementResourcePreferencesPtrOutput) PreferredManagementResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementResourcePreferences) *string {
		if v == nil {
			return nil
		}
		return v.PreferredManagementResourceId
	}).(pulumi.StringPtrOutput)
}

// Management resource preference to link device.
type ManagementResourcePreferencesResponse struct {
	// Customer preferred Management resource ARM ID.
	PreferredManagementResourceId *string `pulumi:"preferredManagementResourceId"`
}

// Management resource preference to link device.
type ManagementResourcePreferencesResponseOutput struct{ *pulumi.OutputState }

func (ManagementResourcePreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementResourcePreferencesResponse)(nil)).Elem()
}

func (o ManagementResourcePreferencesResponseOutput) ToManagementResourcePreferencesResponseOutput() ManagementResourcePreferencesResponseOutput {
	return o
}

func (o ManagementResourcePreferencesResponseOutput) ToManagementResourcePreferencesResponseOutputWithContext(ctx context.Context) ManagementResourcePreferencesResponseOutput {
	return o
}

// Customer preferred Management resource ARM ID.
func (o ManagementResourcePreferencesResponseOutput) PreferredManagementResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementResourcePreferencesResponse) *string { return v.PreferredManagementResourceId }).(pulumi.StringPtrOutput)
}

type ManagementResourcePreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementResourcePreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementResourcePreferencesResponse)(nil)).Elem()
}

func (o ManagementResourcePreferencesResponsePtrOutput) ToManagementResourcePreferencesResponsePtrOutput() ManagementResourcePreferencesResponsePtrOutput {
	return o
}

func (o ManagementResourcePreferencesResponsePtrOutput) ToManagementResourcePreferencesResponsePtrOutputWithContext(ctx context.Context) ManagementResourcePreferencesResponsePtrOutput {
	return o
}

func (o ManagementResourcePreferencesResponsePtrOutput) Elem() ManagementResourcePreferencesResponseOutput {
	return o.ApplyT(func(v *ManagementResourcePreferencesResponse) ManagementResourcePreferencesResponse {
		if v != nil {
			return *v
		}
		var ret ManagementResourcePreferencesResponse
		return ret
	}).(ManagementResourcePreferencesResponseOutput)
}

// Customer preferred Management resource ARM ID.
func (o ManagementResourcePreferencesResponsePtrOutput) PreferredManagementResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementResourcePreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PreferredManagementResourceId
	}).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// NotificationPreferenceInput is an input type that accepts NotificationPreferenceArgs and NotificationPreferenceOutput values.
// You can construct a concrete instance of `NotificationPreferenceInput` via:
//
//	NotificationPreferenceArgs{...}
type NotificationPreferenceInput interface {
	pulumi.Input

	ToNotificationPreferenceOutput() NotificationPreferenceOutput
	ToNotificationPreferenceOutputWithContext(context.Context) NotificationPreferenceOutput
}

// Notification preference for a job stage.
type NotificationPreferenceArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (NotificationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return i.ToNotificationPreferenceOutputWithContext(context.Background())
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceOutput)
}

// NotificationPreferenceArrayInput is an input type that accepts NotificationPreferenceArray and NotificationPreferenceArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceArrayInput` via:
//
//	NotificationPreferenceArray{ NotificationPreferenceArgs{...} }
type NotificationPreferenceArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput
	ToNotificationPreferenceArrayOutputWithContext(context.Context) NotificationPreferenceArrayOutput
}

type NotificationPreferenceArray []NotificationPreferenceInput

func (NotificationPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return i.ToNotificationPreferenceArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return o
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreference) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreference) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreference {
		return vs[0].([]NotificationPreference)[vs[1].(int)]
	}).(NotificationPreferenceOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Notification preference for a job stage.
type NotificationPreferenceResponseOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return o
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceResponseOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreferenceResponse {
		return vs[0].([]NotificationPreferenceResponse)[vs[1].(int)]
	}).(NotificationPreferenceResponseOutput)
}

// Order item details.
type OrderItemDetails struct {
	// Additional notification email list.
	NotificationEmailList []string `pulumi:"notificationEmailList"`
	// Defines the mode of the Order item.
	OrderItemMode *string `pulumi:"orderItemMode"`
	// Order item type.
	OrderItemType string `pulumi:"orderItemType"`
	// Customer notification Preferences.
	Preferences *Preferences `pulumi:"preferences"`
	// Represents product details.
	ProductDetails ProductDetails `pulumi:"productDetails"`
	// Site Related Details.
	SiteDetails *SiteDetails `pulumi:"siteDetails"`
}

// Defaults sets the appropriate defaults for OrderItemDetails
func (val *OrderItemDetails) Defaults() *OrderItemDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ProductDetails = *tmp.ProductDetails.Defaults()

	return &tmp
}

// OrderItemDetailsInput is an input type that accepts OrderItemDetailsArgs and OrderItemDetailsOutput values.
// You can construct a concrete instance of `OrderItemDetailsInput` via:
//
//	OrderItemDetailsArgs{...}
type OrderItemDetailsInput interface {
	pulumi.Input

	ToOrderItemDetailsOutput() OrderItemDetailsOutput
	ToOrderItemDetailsOutputWithContext(context.Context) OrderItemDetailsOutput
}

// Order item details.
type OrderItemDetailsArgs struct {
	// Additional notification email list.
	NotificationEmailList pulumi.StringArrayInput `pulumi:"notificationEmailList"`
	// Defines the mode of the Order item.
	OrderItemMode pulumi.StringPtrInput `pulumi:"orderItemMode"`
	// Order item type.
	OrderItemType pulumi.StringInput `pulumi:"orderItemType"`
	// Customer notification Preferences.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Represents product details.
	ProductDetails ProductDetailsInput `pulumi:"productDetails"`
	// Site Related Details.
	SiteDetails SiteDetailsPtrInput `pulumi:"siteDetails"`
}

// Defaults sets the appropriate defaults for OrderItemDetailsArgs
func (val *OrderItemDetailsArgs) Defaults() *OrderItemDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (OrderItemDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderItemDetails)(nil)).Elem()
}

func (i OrderItemDetailsArgs) ToOrderItemDetailsOutput() OrderItemDetailsOutput {
	return i.ToOrderItemDetailsOutputWithContext(context.Background())
}

func (i OrderItemDetailsArgs) ToOrderItemDetailsOutputWithContext(ctx context.Context) OrderItemDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderItemDetailsOutput)
}

// Order item details.
type OrderItemDetailsOutput struct{ *pulumi.OutputState }

func (OrderItemDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderItemDetails)(nil)).Elem()
}

func (o OrderItemDetailsOutput) ToOrderItemDetailsOutput() OrderItemDetailsOutput {
	return o
}

func (o OrderItemDetailsOutput) ToOrderItemDetailsOutputWithContext(ctx context.Context) OrderItemDetailsOutput {
	return o
}

// Additional notification email list.
func (o OrderItemDetailsOutput) NotificationEmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderItemDetails) []string { return v.NotificationEmailList }).(pulumi.StringArrayOutput)
}

// Defines the mode of the Order item.
func (o OrderItemDetailsOutput) OrderItemMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderItemDetails) *string { return v.OrderItemMode }).(pulumi.StringPtrOutput)
}

// Order item type.
func (o OrderItemDetailsOutput) OrderItemType() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetails) string { return v.OrderItemType }).(pulumi.StringOutput)
}

// Customer notification Preferences.
func (o OrderItemDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v OrderItemDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Represents product details.
func (o OrderItemDetailsOutput) ProductDetails() ProductDetailsOutput {
	return o.ApplyT(func(v OrderItemDetails) ProductDetails { return v.ProductDetails }).(ProductDetailsOutput)
}

// Site Related Details.
func (o OrderItemDetailsOutput) SiteDetails() SiteDetailsPtrOutput {
	return o.ApplyT(func(v OrderItemDetails) *SiteDetails { return v.SiteDetails }).(SiteDetailsPtrOutput)
}

// Order item details.
type OrderItemDetailsResponse struct {
	// Cancellation reason.
	CancellationReason string `pulumi:"cancellationReason"`
	// Describes whether the order item is cancellable or not.
	CancellationStatus string `pulumi:"cancellationStatus"`
	// Current Order item Status.
	CurrentStage StageDetailsResponse `pulumi:"currentStage"`
	// Describes whether the order item is deletable or not.
	DeletionStatus string `pulumi:"deletionStatus"`
	// Top level error for the job.
	Error ErrorDetailResponse `pulumi:"error"`
	// Forward Package Shipping details.
	ForwardShippingDetails ForwardShippingDetailsResponse `pulumi:"forwardShippingDetails"`
	// List of parent RP details supported for configuration.
	ManagementRpDetailsList []ResourceProviderDetailsResponse `pulumi:"managementRpDetailsList"`
	// Additional notification email list.
	NotificationEmailList []string `pulumi:"notificationEmailList"`
	// Defines the mode of the Order item.
	OrderItemMode *string `pulumi:"orderItemMode"`
	// Order item status history.
	OrderItemStageHistory []StageDetailsResponse `pulumi:"orderItemStageHistory"`
	// Order item type.
	OrderItemType string `pulumi:"orderItemType"`
	// Customer notification Preferences.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Represents product details.
	ProductDetails ProductDetailsResponse `pulumi:"productDetails"`
	// Return reason.
	ReturnReason string `pulumi:"returnReason"`
	// Describes whether the order item is returnable or not.
	ReturnStatus string `pulumi:"returnStatus"`
	// Reverse Package Shipping details.
	ReverseShippingDetails ReverseShippingDetailsResponse `pulumi:"reverseShippingDetails"`
	// Site Related Details.
	SiteDetails *SiteDetailsResponse `pulumi:"siteDetails"`
}

// Defaults sets the appropriate defaults for OrderItemDetailsResponse
func (val *OrderItemDetailsResponse) Defaults() *OrderItemDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ProductDetails = *tmp.ProductDetails.Defaults()

	return &tmp
}

// Order item details.
type OrderItemDetailsResponseOutput struct{ *pulumi.OutputState }

func (OrderItemDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderItemDetailsResponse)(nil)).Elem()
}

func (o OrderItemDetailsResponseOutput) ToOrderItemDetailsResponseOutput() OrderItemDetailsResponseOutput {
	return o
}

func (o OrderItemDetailsResponseOutput) ToOrderItemDetailsResponseOutputWithContext(ctx context.Context) OrderItemDetailsResponseOutput {
	return o
}

// Cancellation reason.
func (o OrderItemDetailsResponseOutput) CancellationReason() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) string { return v.CancellationReason }).(pulumi.StringOutput)
}

// Describes whether the order item is cancellable or not.
func (o OrderItemDetailsResponseOutput) CancellationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) string { return v.CancellationStatus }).(pulumi.StringOutput)
}

// Current Order item Status.
func (o OrderItemDetailsResponseOutput) CurrentStage() StageDetailsResponseOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) StageDetailsResponse { return v.CurrentStage }).(StageDetailsResponseOutput)
}

// Describes whether the order item is deletable or not.
func (o OrderItemDetailsResponseOutput) DeletionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) string { return v.DeletionStatus }).(pulumi.StringOutput)
}

// Top level error for the job.
func (o OrderItemDetailsResponseOutput) Error() ErrorDetailResponseOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) ErrorDetailResponse { return v.Error }).(ErrorDetailResponseOutput)
}

// Forward Package Shipping details.
func (o OrderItemDetailsResponseOutput) ForwardShippingDetails() ForwardShippingDetailsResponseOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) ForwardShippingDetailsResponse { return v.ForwardShippingDetails }).(ForwardShippingDetailsResponseOutput)
}

// List of parent RP details supported for configuration.
func (o OrderItemDetailsResponseOutput) ManagementRpDetailsList() ResourceProviderDetailsResponseArrayOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) []ResourceProviderDetailsResponse { return v.ManagementRpDetailsList }).(ResourceProviderDetailsResponseArrayOutput)
}

// Additional notification email list.
func (o OrderItemDetailsResponseOutput) NotificationEmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) []string { return v.NotificationEmailList }).(pulumi.StringArrayOutput)
}

// Defines the mode of the Order item.
func (o OrderItemDetailsResponseOutput) OrderItemMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) *string { return v.OrderItemMode }).(pulumi.StringPtrOutput)
}

// Order item status history.
func (o OrderItemDetailsResponseOutput) OrderItemStageHistory() StageDetailsResponseArrayOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) []StageDetailsResponse { return v.OrderItemStageHistory }).(StageDetailsResponseArrayOutput)
}

// Order item type.
func (o OrderItemDetailsResponseOutput) OrderItemType() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) string { return v.OrderItemType }).(pulumi.StringOutput)
}

// Customer notification Preferences.
func (o OrderItemDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Represents product details.
func (o OrderItemDetailsResponseOutput) ProductDetails() ProductDetailsResponseOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) ProductDetailsResponse { return v.ProductDetails }).(ProductDetailsResponseOutput)
}

// Return reason.
func (o OrderItemDetailsResponseOutput) ReturnReason() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) string { return v.ReturnReason }).(pulumi.StringOutput)
}

// Describes whether the order item is returnable or not.
func (o OrderItemDetailsResponseOutput) ReturnStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) string { return v.ReturnStatus }).(pulumi.StringOutput)
}

// Reverse Package Shipping details.
func (o OrderItemDetailsResponseOutput) ReverseShippingDetails() ReverseShippingDetailsResponseOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) ReverseShippingDetailsResponse { return v.ReverseShippingDetails }).(ReverseShippingDetailsResponseOutput)
}

// Site Related Details.
func (o OrderItemDetailsResponseOutput) SiteDetails() SiteDetailsResponsePtrOutput {
	return o.ApplyT(func(v OrderItemDetailsResponse) *SiteDetailsResponse { return v.SiteDetails }).(SiteDetailsResponsePtrOutput)
}

// Billing type PAV2 meter details.
type Pav2MeterDetailsResponse struct {
	// Represents billing type.
	// Expected value is 'Pav2'.
	BillingType string `pulumi:"billingType"`
	// Charging type.
	ChargingType string `pulumi:"chargingType"`
	// Validation status of requested data center and transport.
	MeterGuid string `pulumi:"meterGuid"`
	// Billing unit applicable for Pav2 billing.
	Multiplier float64 `pulumi:"multiplier"`
}

// Billing type PAV2 meter details.
type Pav2MeterDetailsResponseOutput struct{ *pulumi.OutputState }

func (Pav2MeterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Pav2MeterDetailsResponse)(nil)).Elem()
}

func (o Pav2MeterDetailsResponseOutput) ToPav2MeterDetailsResponseOutput() Pav2MeterDetailsResponseOutput {
	return o
}

func (o Pav2MeterDetailsResponseOutput) ToPav2MeterDetailsResponseOutputWithContext(ctx context.Context) Pav2MeterDetailsResponseOutput {
	return o
}

// Represents billing type.
// Expected value is 'Pav2'.
func (o Pav2MeterDetailsResponseOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v Pav2MeterDetailsResponse) string { return v.BillingType }).(pulumi.StringOutput)
}

// Charging type.
func (o Pav2MeterDetailsResponseOutput) ChargingType() pulumi.StringOutput {
	return o.ApplyT(func(v Pav2MeterDetailsResponse) string { return v.ChargingType }).(pulumi.StringOutput)
}

// Validation status of requested data center and transport.
func (o Pav2MeterDetailsResponseOutput) MeterGuid() pulumi.StringOutput {
	return o.ApplyT(func(v Pav2MeterDetailsResponse) string { return v.MeterGuid }).(pulumi.StringOutput)
}

// Billing unit applicable for Pav2 billing.
func (o Pav2MeterDetailsResponseOutput) Multiplier() pulumi.Float64Output {
	return o.ApplyT(func(v Pav2MeterDetailsResponse) float64 { return v.Multiplier }).(pulumi.Float64Output)
}

// Preferences related to the order.
type Preferences struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferences `pulumi:"encryptionPreferences"`
	// Preferences related to the Management resource.
	ManagementResourcePreferences *ManagementResourcePreferences `pulumi:"managementResourcePreferences"`
	// Notification preferences.
	NotificationPreferences []NotificationPreference `pulumi:"notificationPreferences"`
	// Preferences related to the Term commitment.
	TermCommitmentPreferences *TermCommitmentPreferences `pulumi:"termCommitmentPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// PreferencesInput is an input type that accepts PreferencesArgs and PreferencesOutput values.
// You can construct a concrete instance of `PreferencesInput` via:
//
//	PreferencesArgs{...}
type PreferencesInput interface {
	pulumi.Input

	ToPreferencesOutput() PreferencesOutput
	ToPreferencesOutputWithContext(context.Context) PreferencesOutput
}

// Preferences related to the order.
type PreferencesArgs struct {
	// Preferences related to the Encryption.
	EncryptionPreferences EncryptionPreferencesPtrInput `pulumi:"encryptionPreferences"`
	// Preferences related to the Management resource.
	ManagementResourcePreferences ManagementResourcePreferencesPtrInput `pulumi:"managementResourcePreferences"`
	// Notification preferences.
	NotificationPreferences NotificationPreferenceArrayInput `pulumi:"notificationPreferences"`
	// Preferences related to the Term commitment.
	TermCommitmentPreferences TermCommitmentPreferencesPtrInput `pulumi:"termCommitmentPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences TransportPreferencesPtrInput `pulumi:"transportPreferences"`
}

func (PreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (i PreferencesArgs) ToPreferencesOutput() PreferencesOutput {
	return i.ToPreferencesOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput)
}

func (i PreferencesArgs) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput).ToPreferencesPtrOutputWithContext(ctx)
}

// PreferencesPtrInput is an input type that accepts PreferencesArgs, PreferencesPtr and PreferencesPtrOutput values.
// You can construct a concrete instance of `PreferencesPtrInput` via:
//
//	        PreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferencesPtrInput interface {
	pulumi.Input

	ToPreferencesPtrOutput() PreferencesPtrOutput
	ToPreferencesPtrOutputWithContext(context.Context) PreferencesPtrOutput
}

type preferencesPtrType PreferencesArgs

func PreferencesPtr(v *PreferencesArgs) PreferencesPtrInput {
	return (*preferencesPtrType)(v)
}

func (*preferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (i *preferencesPtrType) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferencesPtrType) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesPtrOutput)
}

// Preferences related to the order.
type PreferencesOutput struct{ *pulumi.OutputState }

func (PreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (o PreferencesOutput) ToPreferencesOutput() PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o.ToPreferencesPtrOutputWithContext(context.Background())
}

func (o PreferencesOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Preferences) *Preferences {
		return &v
	}).(PreferencesPtrOutput)
}

// Preferences related to the Encryption.
func (o PreferencesOutput) EncryptionPreferences() EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *EncryptionPreferences { return v.EncryptionPreferences }).(EncryptionPreferencesPtrOutput)
}

// Preferences related to the Management resource.
func (o PreferencesOutput) ManagementResourcePreferences() ManagementResourcePreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *ManagementResourcePreferences { return v.ManagementResourcePreferences }).(ManagementResourcePreferencesPtrOutput)
}

// Notification preferences.
func (o PreferencesOutput) NotificationPreferences() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v Preferences) []NotificationPreference { return v.NotificationPreferences }).(NotificationPreferenceArrayOutput)
}

// Preferences related to the Term commitment.
func (o PreferencesOutput) TermCommitmentPreferences() TermCommitmentPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *TermCommitmentPreferences { return v.TermCommitmentPreferences }).(TermCommitmentPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *TransportPreferences { return v.TransportPreferences }).(TransportPreferencesPtrOutput)
}

type PreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) Elem() PreferencesOutput {
	return o.ApplyT(func(v *Preferences) Preferences {
		if v != nil {
			return *v
		}
		var ret Preferences
		return ret
	}).(PreferencesOutput)
}

// Preferences related to the Encryption.
func (o PreferencesPtrOutput) EncryptionPreferences() EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *EncryptionPreferences {
		if v == nil {
			return nil
		}
		return v.EncryptionPreferences
	}).(EncryptionPreferencesPtrOutput)
}

// Preferences related to the Management resource.
func (o PreferencesPtrOutput) ManagementResourcePreferences() ManagementResourcePreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *ManagementResourcePreferences {
		if v == nil {
			return nil
		}
		return v.ManagementResourcePreferences
	}).(ManagementResourcePreferencesPtrOutput)
}

// Notification preferences.
func (o PreferencesPtrOutput) NotificationPreferences() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v *Preferences) []NotificationPreference {
		if v == nil {
			return nil
		}
		return v.NotificationPreferences
	}).(NotificationPreferenceArrayOutput)
}

// Preferences related to the Term commitment.
func (o PreferencesPtrOutput) TermCommitmentPreferences() TermCommitmentPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *TermCommitmentPreferences {
		if v == nil {
			return nil
		}
		return v.TermCommitmentPreferences
	}).(TermCommitmentPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesPtrOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *TransportPreferences {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesPtrOutput)
}

// Preferences related to the order.
type PreferencesResponse struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferencesResponse `pulumi:"encryptionPreferences"`
	// Preferences related to the Management resource.
	ManagementResourcePreferences *ManagementResourcePreferencesResponse `pulumi:"managementResourcePreferences"`
	// Notification preferences.
	NotificationPreferences []NotificationPreferenceResponse `pulumi:"notificationPreferences"`
	// Preferences related to the Term commitment.
	TermCommitmentPreferences *TermCommitmentPreferencesResponse `pulumi:"termCommitmentPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// Preferences related to the order.
type PreferencesResponseOutput struct{ *pulumi.OutputState }

func (PreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return o
}

// Preferences related to the Encryption.
func (o PreferencesResponseOutput) EncryptionPreferences() EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *EncryptionPreferencesResponse { return v.EncryptionPreferences }).(EncryptionPreferencesResponsePtrOutput)
}

// Preferences related to the Management resource.
func (o PreferencesResponseOutput) ManagementResourcePreferences() ManagementResourcePreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *ManagementResourcePreferencesResponse {
		return v.ManagementResourcePreferences
	}).(ManagementResourcePreferencesResponsePtrOutput)
}

// Notification preferences.
func (o PreferencesResponseOutput) NotificationPreferences() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v PreferencesResponse) []NotificationPreferenceResponse { return v.NotificationPreferences }).(NotificationPreferenceResponseArrayOutput)
}

// Preferences related to the Term commitment.
func (o PreferencesResponseOutput) TermCommitmentPreferences() TermCommitmentPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TermCommitmentPreferencesResponse { return v.TermCommitmentPreferences }).(TermCommitmentPreferencesResponsePtrOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesResponseOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TransportPreferencesResponse { return v.TransportPreferences }).(TransportPreferencesResponsePtrOutput)
}

type PreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (PreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) Elem() PreferencesResponseOutput {
	return o.ApplyT(func(v *PreferencesResponse) PreferencesResponse {
		if v != nil {
			return *v
		}
		var ret PreferencesResponse
		return ret
	}).(PreferencesResponseOutput)
}

// Preferences related to the Encryption.
func (o PreferencesResponsePtrOutput) EncryptionPreferences() EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *EncryptionPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionPreferences
	}).(EncryptionPreferencesResponsePtrOutput)
}

// Preferences related to the Management resource.
func (o PreferencesResponsePtrOutput) ManagementResourcePreferences() ManagementResourcePreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *ManagementResourcePreferencesResponse {
		if v == nil {
			return nil
		}
		return v.ManagementResourcePreferences
	}).(ManagementResourcePreferencesResponsePtrOutput)
}

// Notification preferences.
func (o PreferencesResponsePtrOutput) NotificationPreferences() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v *PreferencesResponse) []NotificationPreferenceResponse {
		if v == nil {
			return nil
		}
		return v.NotificationPreferences
	}).(NotificationPreferenceResponseArrayOutput)
}

// Preferences related to the Term commitment.
func (o PreferencesResponsePtrOutput) TermCommitmentPreferences() TermCommitmentPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TermCommitmentPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.TermCommitmentPreferences
	}).(TermCommitmentPreferencesResponsePtrOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesResponsePtrOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TransportPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesResponsePtrOutput)
}

// Represents product details.
type ProductDetails struct {
	// Hierarchy of the product which uniquely identifies the product.
	HierarchyInformation HierarchyInformation `pulumi:"hierarchyInformation"`
	// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
	OptInAdditionalConfigurations []AdditionalConfiguration `pulumi:"optInAdditionalConfigurations"`
	// Device Provisioning Details for Parent.
	ParentProvisioningDetails *ProvisioningDetails `pulumi:"parentProvisioningDetails"`
}

// Defaults sets the appropriate defaults for ProductDetails
func (val *ProductDetails) Defaults() *ProductDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ParentProvisioningDetails = tmp.ParentProvisioningDetails.Defaults()

	return &tmp
}

// ProductDetailsInput is an input type that accepts ProductDetailsArgs and ProductDetailsOutput values.
// You can construct a concrete instance of `ProductDetailsInput` via:
//
//	ProductDetailsArgs{...}
type ProductDetailsInput interface {
	pulumi.Input

	ToProductDetailsOutput() ProductDetailsOutput
	ToProductDetailsOutputWithContext(context.Context) ProductDetailsOutput
}

// Represents product details.
type ProductDetailsArgs struct {
	// Hierarchy of the product which uniquely identifies the product.
	HierarchyInformation HierarchyInformationInput `pulumi:"hierarchyInformation"`
	// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
	OptInAdditionalConfigurations AdditionalConfigurationArrayInput `pulumi:"optInAdditionalConfigurations"`
	// Device Provisioning Details for Parent.
	ParentProvisioningDetails ProvisioningDetailsPtrInput `pulumi:"parentProvisioningDetails"`
}

// Defaults sets the appropriate defaults for ProductDetailsArgs
func (val *ProductDetailsArgs) Defaults() *ProductDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ProductDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetails)(nil)).Elem()
}

func (i ProductDetailsArgs) ToProductDetailsOutput() ProductDetailsOutput {
	return i.ToProductDetailsOutputWithContext(context.Background())
}

func (i ProductDetailsArgs) ToProductDetailsOutputWithContext(ctx context.Context) ProductDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsOutput)
}

// Represents product details.
type ProductDetailsOutput struct{ *pulumi.OutputState }

func (ProductDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetails)(nil)).Elem()
}

func (o ProductDetailsOutput) ToProductDetailsOutput() ProductDetailsOutput {
	return o
}

func (o ProductDetailsOutput) ToProductDetailsOutputWithContext(ctx context.Context) ProductDetailsOutput {
	return o
}

// Hierarchy of the product which uniquely identifies the product.
func (o ProductDetailsOutput) HierarchyInformation() HierarchyInformationOutput {
	return o.ApplyT(func(v ProductDetails) HierarchyInformation { return v.HierarchyInformation }).(HierarchyInformationOutput)
}

// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
func (o ProductDetailsOutput) OptInAdditionalConfigurations() AdditionalConfigurationArrayOutput {
	return o.ApplyT(func(v ProductDetails) []AdditionalConfiguration { return v.OptInAdditionalConfigurations }).(AdditionalConfigurationArrayOutput)
}

// Device Provisioning Details for Parent.
func (o ProductDetailsOutput) ParentProvisioningDetails() ProvisioningDetailsPtrOutput {
	return o.ApplyT(func(v ProductDetails) *ProvisioningDetails { return v.ParentProvisioningDetails }).(ProvisioningDetailsPtrOutput)
}

// Represents product details.
type ProductDetailsResponse struct {
	// Details of all child configurations that are part of the order item.
	ChildConfigurationDeviceDetails []ConfigurationDeviceDetailsResponse `pulumi:"childConfigurationDeviceDetails"`
	// Display details of the product.
	DisplayInfo *DisplayInfoResponse `pulumi:"displayInfo"`
	// Hierarchy of the product which uniquely identifies the product.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Identification type of the configuration.
	IdentificationType string `pulumi:"identificationType"`
	// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
	OptInAdditionalConfigurations []AdditionalConfigurationResponse `pulumi:"optInAdditionalConfigurations"`
	// Device details of the parent configuration.
	ParentDeviceDetails DeviceDetailsResponse `pulumi:"parentDeviceDetails"`
	// Device Provisioning Details for Parent.
	ParentProvisioningDetails *ProvisioningDetailsResponse `pulumi:"parentProvisioningDetails"`
	// Double encryption status of the configuration. Read-only field.
	ProductDoubleEncryptionStatus string `pulumi:"productDoubleEncryptionStatus"`
	// Term Commitment Information of the Device.
	TermCommitmentInformation TermCommitmentInformationResponse `pulumi:"termCommitmentInformation"`
}

// Defaults sets the appropriate defaults for ProductDetailsResponse
func (val *ProductDetailsResponse) Defaults() *ProductDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ParentDeviceDetails = *tmp.ParentDeviceDetails.Defaults()

	tmp.ParentProvisioningDetails = tmp.ParentProvisioningDetails.Defaults()

	tmp.TermCommitmentInformation = *tmp.TermCommitmentInformation.Defaults()

	return &tmp
}

// Represents product details.
type ProductDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProductDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetailsResponse)(nil)).Elem()
}

func (o ProductDetailsResponseOutput) ToProductDetailsResponseOutput() ProductDetailsResponseOutput {
	return o
}

func (o ProductDetailsResponseOutput) ToProductDetailsResponseOutputWithContext(ctx context.Context) ProductDetailsResponseOutput {
	return o
}

// Details of all child configurations that are part of the order item.
func (o ProductDetailsResponseOutput) ChildConfigurationDeviceDetails() ConfigurationDeviceDetailsResponseArrayOutput {
	return o.ApplyT(func(v ProductDetailsResponse) []ConfigurationDeviceDetailsResponse {
		return v.ChildConfigurationDeviceDetails
	}).(ConfigurationDeviceDetailsResponseArrayOutput)
}

// Display details of the product.
func (o ProductDetailsResponseOutput) DisplayInfo() DisplayInfoResponsePtrOutput {
	return o.ApplyT(func(v ProductDetailsResponse) *DisplayInfoResponse { return v.DisplayInfo }).(DisplayInfoResponsePtrOutput)
}

// Hierarchy of the product which uniquely identifies the product.
func (o ProductDetailsResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductDetailsResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Identification type of the configuration.
func (o ProductDetailsResponseOutput) IdentificationType() pulumi.StringOutput {
	return o.ApplyT(func(v ProductDetailsResponse) string { return v.IdentificationType }).(pulumi.StringOutput)
}

// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
func (o ProductDetailsResponseOutput) OptInAdditionalConfigurations() AdditionalConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ProductDetailsResponse) []AdditionalConfigurationResponse {
		return v.OptInAdditionalConfigurations
	}).(AdditionalConfigurationResponseArrayOutput)
}

// Device details of the parent configuration.
func (o ProductDetailsResponseOutput) ParentDeviceDetails() DeviceDetailsResponseOutput {
	return o.ApplyT(func(v ProductDetailsResponse) DeviceDetailsResponse { return v.ParentDeviceDetails }).(DeviceDetailsResponseOutput)
}

// Device Provisioning Details for Parent.
func (o ProductDetailsResponseOutput) ParentProvisioningDetails() ProvisioningDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProductDetailsResponse) *ProvisioningDetailsResponse { return v.ParentProvisioningDetails }).(ProvisioningDetailsResponsePtrOutput)
}

// Double encryption status of the configuration. Read-only field.
func (o ProductDetailsResponseOutput) ProductDoubleEncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProductDetailsResponse) string { return v.ProductDoubleEncryptionStatus }).(pulumi.StringOutput)
}

// Term Commitment Information of the Device.
func (o ProductDetailsResponseOutput) TermCommitmentInformation() TermCommitmentInformationResponseOutput {
	return o.ApplyT(func(v ProductDetailsResponse) TermCommitmentInformationResponse { return v.TermCommitmentInformation }).(TermCommitmentInformationResponseOutput)
}

// Product Family.
type ProductFamilyResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// List of filters supported for a product.
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// The entity responsible for fulfillment of the item at the given hierarchy level.
	FulfilledBy string `pulumi:"fulfilledBy"`
	// Hierarchy information of a product.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// List of product lines supported in the product family.
	ProductLines []ProductLineResponse `pulumi:"productLines"`
	// Contains details related to resource provider.
	ResourceProviderDetails []ResourceProviderDetailsResponse `pulumi:"resourceProviderDetails"`
}

// Product Family.
type ProductFamilyResponseOutput struct{ *pulumi.OutputState }

func (ProductFamilyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductFamilyResponse)(nil)).Elem()
}

func (o ProductFamilyResponseOutput) ToProductFamilyResponseOutput() ProductFamilyResponseOutput {
	return o
}

func (o ProductFamilyResponseOutput) ToProductFamilyResponseOutputWithContext(ctx context.Context) ProductFamilyResponseOutput {
	return o
}

// Availability information of the product system.
func (o ProductFamilyResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Cost information for the product system.
func (o ProductFamilyResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ProductFamilyResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ProductFamilyResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductFamilyResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of filters supported for a product.
func (o ProductFamilyResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// The entity responsible for fulfillment of the item at the given hierarchy level.
func (o ProductFamilyResponseOutput) FulfilledBy() pulumi.StringOutput {
	return o.ApplyT(func(v ProductFamilyResponse) string { return v.FulfilledBy }).(pulumi.StringOutput)
}

// Hierarchy information of a product.
func (o ProductFamilyResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ProductFamilyResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// List of product lines supported in the product family.
func (o ProductFamilyResponseOutput) ProductLines() ProductLineResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []ProductLineResponse { return v.ProductLines }).(ProductLineResponseArrayOutput)
}

// Contains details related to resource provider.
func (o ProductFamilyResponseOutput) ResourceProviderDetails() ResourceProviderDetailsResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []ResourceProviderDetailsResponse { return v.ResourceProviderDetails }).(ResourceProviderDetailsResponseArrayOutput)
}

type ProductFamilyResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductFamilyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductFamilyResponse)(nil)).Elem()
}

func (o ProductFamilyResponseArrayOutput) ToProductFamilyResponseArrayOutput() ProductFamilyResponseArrayOutput {
	return o
}

func (o ProductFamilyResponseArrayOutput) ToProductFamilyResponseArrayOutputWithContext(ctx context.Context) ProductFamilyResponseArrayOutput {
	return o
}

func (o ProductFamilyResponseArrayOutput) Index(i pulumi.IntInput) ProductFamilyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductFamilyResponse {
		return vs[0].([]ProductFamilyResponse)[vs[1].(int)]
	}).(ProductFamilyResponseOutput)
}

// Product line.
type ProductLineResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// List of filters supported for a product.
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// The entity responsible for fulfillment of the item at the given hierarchy level.
	FulfilledBy string `pulumi:"fulfilledBy"`
	// Hierarchy information of a product.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// List of products in the product line.
	Products []ProductResponse `pulumi:"products"`
}

// Product line.
type ProductLineResponseOutput struct{ *pulumi.OutputState }

func (ProductLineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLineResponse)(nil)).Elem()
}

func (o ProductLineResponseOutput) ToProductLineResponseOutput() ProductLineResponseOutput {
	return o
}

func (o ProductLineResponseOutput) ToProductLineResponseOutputWithContext(ctx context.Context) ProductLineResponseOutput {
	return o
}

// Availability information of the product system.
func (o ProductLineResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Cost information for the product system.
func (o ProductLineResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ProductLineResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ProductLineResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductLineResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of filters supported for a product.
func (o ProductLineResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ProductLineResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// The entity responsible for fulfillment of the item at the given hierarchy level.
func (o ProductLineResponseOutput) FulfilledBy() pulumi.StringOutput {
	return o.ApplyT(func(v ProductLineResponse) string { return v.FulfilledBy }).(pulumi.StringOutput)
}

// Hierarchy information of a product.
func (o ProductLineResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ProductLineResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ProductLineResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// List of products in the product line.
func (o ProductLineResponseOutput) Products() ProductResponseArrayOutput {
	return o.ApplyT(func(v ProductLineResponse) []ProductResponse { return v.Products }).(ProductResponseArrayOutput)
}

type ProductLineResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductLineResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLineResponse)(nil)).Elem()
}

func (o ProductLineResponseArrayOutput) ToProductLineResponseArrayOutput() ProductLineResponseArrayOutput {
	return o
}

func (o ProductLineResponseArrayOutput) ToProductLineResponseArrayOutputWithContext(ctx context.Context) ProductLineResponseArrayOutput {
	return o
}

func (o ProductLineResponseArrayOutput) Index(i pulumi.IntInput) ProductLineResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductLineResponse {
		return vs[0].([]ProductLineResponse)[vs[1].(int)]
	}).(ProductLineResponseOutput)
}

// Represents a product.
type ProductResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// List of configurations for the product.
	Configurations []ConfigurationResponse `pulumi:"configurations"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// List of filters supported for a product.
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// The entity responsible for fulfillment of the item at the given hierarchy level.
	FulfilledBy string `pulumi:"fulfilledBy"`
	// Hierarchy information of a product.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
}

// Represents a product.
type ProductResponseOutput struct{ *pulumi.OutputState }

func (ProductResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductResponse)(nil)).Elem()
}

func (o ProductResponseOutput) ToProductResponseOutput() ProductResponseOutput {
	return o
}

func (o ProductResponseOutput) ToProductResponseOutputWithContext(ctx context.Context) ProductResponseOutput {
	return o
}

// Availability information of the product system.
func (o ProductResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ProductResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// List of configurations for the product.
func (o ProductResponseOutput) Configurations() ConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []ConfigurationResponse { return v.Configurations }).(ConfigurationResponseArrayOutput)
}

// Cost information for the product system.
func (o ProductResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ProductResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ProductResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ProductResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ProductResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of filters supported for a product.
func (o ProductResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// The entity responsible for fulfillment of the item at the given hierarchy level.
func (o ProductResponseOutput) FulfilledBy() pulumi.StringOutput {
	return o.ApplyT(func(v ProductResponse) string { return v.FulfilledBy }).(pulumi.StringOutput)
}

// Hierarchy information of a product.
func (o ProductResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ProductResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

type ProductResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductResponse)(nil)).Elem()
}

func (o ProductResponseArrayOutput) ToProductResponseArrayOutput() ProductResponseArrayOutput {
	return o
}

func (o ProductResponseArrayOutput) ToProductResponseArrayOutputWithContext(ctx context.Context) ProductResponseArrayOutput {
	return o
}

func (o ProductResponseArrayOutput) Index(i pulumi.IntInput) ProductResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductResponse {
		return vs[0].([]ProductResponse)[vs[1].(int)]
	}).(ProductResponseOutput)
}

// Details Related To Provision Resource.
type ProvisioningDetails struct {
	// Auto Provisioning Details.
	AutoProvisioningStatus *string `pulumi:"autoProvisioningStatus"`
	// Management Resource ArmId.
	ManagementResourceArmId *string `pulumi:"managementResourceArmId"`
	// Provisioning Resource Arm ID.
	ProvisioningArmId *string `pulumi:"provisioningArmId"`
	// Provisioning End Point.
	ProvisioningEndPoint *string `pulumi:"provisioningEndPoint"`
	// Quantity of the devices.
	Quantity *int `pulumi:"quantity"`
	// Arc Enabled Resource Arm id.
	ReadyToConnectArmId *string `pulumi:"readyToConnectArmId"`
	// Serial Number for the Device.
	SerialNumber *string `pulumi:"serialNumber"`
	// Vendor Name for the Device , (for 1P devices - Microsoft).
	VendorName *string `pulumi:"vendorName"`
}

// Defaults sets the appropriate defaults for ProvisioningDetails
func (val *ProvisioningDetails) Defaults() *ProvisioningDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Quantity == nil {
		quantity_ := 0
		tmp.Quantity = &quantity_
	}
	return &tmp
}

// ProvisioningDetailsInput is an input type that accepts ProvisioningDetailsArgs and ProvisioningDetailsOutput values.
// You can construct a concrete instance of `ProvisioningDetailsInput` via:
//
//	ProvisioningDetailsArgs{...}
type ProvisioningDetailsInput interface {
	pulumi.Input

	ToProvisioningDetailsOutput() ProvisioningDetailsOutput
	ToProvisioningDetailsOutputWithContext(context.Context) ProvisioningDetailsOutput
}

// Details Related To Provision Resource.
type ProvisioningDetailsArgs struct {
	// Auto Provisioning Details.
	AutoProvisioningStatus pulumi.StringPtrInput `pulumi:"autoProvisioningStatus"`
	// Management Resource ArmId.
	ManagementResourceArmId pulumi.StringPtrInput `pulumi:"managementResourceArmId"`
	// Provisioning Resource Arm ID.
	ProvisioningArmId pulumi.StringPtrInput `pulumi:"provisioningArmId"`
	// Provisioning End Point.
	ProvisioningEndPoint pulumi.StringPtrInput `pulumi:"provisioningEndPoint"`
	// Quantity of the devices.
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
	// Arc Enabled Resource Arm id.
	ReadyToConnectArmId pulumi.StringPtrInput `pulumi:"readyToConnectArmId"`
	// Serial Number for the Device.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Vendor Name for the Device , (for 1P devices - Microsoft).
	VendorName pulumi.StringPtrInput `pulumi:"vendorName"`
}

// Defaults sets the appropriate defaults for ProvisioningDetailsArgs
func (val *ProvisioningDetailsArgs) Defaults() *ProvisioningDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Quantity == nil {
		tmp.Quantity = pulumi.IntPtr(0)
	}
	return &tmp
}
func (ProvisioningDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningDetails)(nil)).Elem()
}

func (i ProvisioningDetailsArgs) ToProvisioningDetailsOutput() ProvisioningDetailsOutput {
	return i.ToProvisioningDetailsOutputWithContext(context.Background())
}

func (i ProvisioningDetailsArgs) ToProvisioningDetailsOutputWithContext(ctx context.Context) ProvisioningDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningDetailsOutput)
}

func (i ProvisioningDetailsArgs) ToProvisioningDetailsPtrOutput() ProvisioningDetailsPtrOutput {
	return i.ToProvisioningDetailsPtrOutputWithContext(context.Background())
}

func (i ProvisioningDetailsArgs) ToProvisioningDetailsPtrOutputWithContext(ctx context.Context) ProvisioningDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningDetailsOutput).ToProvisioningDetailsPtrOutputWithContext(ctx)
}

// ProvisioningDetailsPtrInput is an input type that accepts ProvisioningDetailsArgs, ProvisioningDetailsPtr and ProvisioningDetailsPtrOutput values.
// You can construct a concrete instance of `ProvisioningDetailsPtrInput` via:
//
//	        ProvisioningDetailsArgs{...}
//
//	or:
//
//	        nil
type ProvisioningDetailsPtrInput interface {
	pulumi.Input

	ToProvisioningDetailsPtrOutput() ProvisioningDetailsPtrOutput
	ToProvisioningDetailsPtrOutputWithContext(context.Context) ProvisioningDetailsPtrOutput
}

type provisioningDetailsPtrType ProvisioningDetailsArgs

func ProvisioningDetailsPtr(v *ProvisioningDetailsArgs) ProvisioningDetailsPtrInput {
	return (*provisioningDetailsPtrType)(v)
}

func (*provisioningDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningDetails)(nil)).Elem()
}

func (i *provisioningDetailsPtrType) ToProvisioningDetailsPtrOutput() ProvisioningDetailsPtrOutput {
	return i.ToProvisioningDetailsPtrOutputWithContext(context.Background())
}

func (i *provisioningDetailsPtrType) ToProvisioningDetailsPtrOutputWithContext(ctx context.Context) ProvisioningDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningDetailsPtrOutput)
}

// ProvisioningDetailsArrayInput is an input type that accepts ProvisioningDetailsArray and ProvisioningDetailsArrayOutput values.
// You can construct a concrete instance of `ProvisioningDetailsArrayInput` via:
//
//	ProvisioningDetailsArray{ ProvisioningDetailsArgs{...} }
type ProvisioningDetailsArrayInput interface {
	pulumi.Input

	ToProvisioningDetailsArrayOutput() ProvisioningDetailsArrayOutput
	ToProvisioningDetailsArrayOutputWithContext(context.Context) ProvisioningDetailsArrayOutput
}

type ProvisioningDetailsArray []ProvisioningDetailsInput

func (ProvisioningDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningDetails)(nil)).Elem()
}

func (i ProvisioningDetailsArray) ToProvisioningDetailsArrayOutput() ProvisioningDetailsArrayOutput {
	return i.ToProvisioningDetailsArrayOutputWithContext(context.Background())
}

func (i ProvisioningDetailsArray) ToProvisioningDetailsArrayOutputWithContext(ctx context.Context) ProvisioningDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningDetailsArrayOutput)
}

// Details Related To Provision Resource.
type ProvisioningDetailsOutput struct{ *pulumi.OutputState }

func (ProvisioningDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningDetails)(nil)).Elem()
}

func (o ProvisioningDetailsOutput) ToProvisioningDetailsOutput() ProvisioningDetailsOutput {
	return o
}

func (o ProvisioningDetailsOutput) ToProvisioningDetailsOutputWithContext(ctx context.Context) ProvisioningDetailsOutput {
	return o
}

func (o ProvisioningDetailsOutput) ToProvisioningDetailsPtrOutput() ProvisioningDetailsPtrOutput {
	return o.ToProvisioningDetailsPtrOutputWithContext(context.Background())
}

func (o ProvisioningDetailsOutput) ToProvisioningDetailsPtrOutputWithContext(ctx context.Context) ProvisioningDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningDetails) *ProvisioningDetails {
		return &v
	}).(ProvisioningDetailsPtrOutput)
}

// Auto Provisioning Details.
func (o ProvisioningDetailsOutput) AutoProvisioningStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.AutoProvisioningStatus }).(pulumi.StringPtrOutput)
}

// Management Resource ArmId.
func (o ProvisioningDetailsOutput) ManagementResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.ManagementResourceArmId }).(pulumi.StringPtrOutput)
}

// Provisioning Resource Arm ID.
func (o ProvisioningDetailsOutput) ProvisioningArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.ProvisioningArmId }).(pulumi.StringPtrOutput)
}

// Provisioning End Point.
func (o ProvisioningDetailsOutput) ProvisioningEndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.ProvisioningEndPoint }).(pulumi.StringPtrOutput)
}

// Quantity of the devices.
func (o ProvisioningDetailsOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

// Arc Enabled Resource Arm id.
func (o ProvisioningDetailsOutput) ReadyToConnectArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.ReadyToConnectArmId }).(pulumi.StringPtrOutput)
}

// Serial Number for the Device.
func (o ProvisioningDetailsOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Vendor Name for the Device , (for 1P devices - Microsoft).
func (o ProvisioningDetailsOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetails) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type ProvisioningDetailsPtrOutput struct{ *pulumi.OutputState }

func (ProvisioningDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningDetails)(nil)).Elem()
}

func (o ProvisioningDetailsPtrOutput) ToProvisioningDetailsPtrOutput() ProvisioningDetailsPtrOutput {
	return o
}

func (o ProvisioningDetailsPtrOutput) ToProvisioningDetailsPtrOutputWithContext(ctx context.Context) ProvisioningDetailsPtrOutput {
	return o
}

func (o ProvisioningDetailsPtrOutput) Elem() ProvisioningDetailsOutput {
	return o.ApplyT(func(v *ProvisioningDetails) ProvisioningDetails {
		if v != nil {
			return *v
		}
		var ret ProvisioningDetails
		return ret
	}).(ProvisioningDetailsOutput)
}

// Auto Provisioning Details.
func (o ProvisioningDetailsPtrOutput) AutoProvisioningStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.AutoProvisioningStatus
	}).(pulumi.StringPtrOutput)
}

// Management Resource ArmId.
func (o ProvisioningDetailsPtrOutput) ManagementResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.ManagementResourceArmId
	}).(pulumi.StringPtrOutput)
}

// Provisioning Resource Arm ID.
func (o ProvisioningDetailsPtrOutput) ProvisioningArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningArmId
	}).(pulumi.StringPtrOutput)
}

// Provisioning End Point.
func (o ProvisioningDetailsPtrOutput) ProvisioningEndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningEndPoint
	}).(pulumi.StringPtrOutput)
}

// Quantity of the devices.
func (o ProvisioningDetailsPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Arc Enabled Resource Arm id.
func (o ProvisioningDetailsPtrOutput) ReadyToConnectArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.ReadyToConnectArmId
	}).(pulumi.StringPtrOutput)
}

// Serial Number for the Device.
func (o ProvisioningDetailsPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Vendor Name for the Device , (for 1P devices - Microsoft).
func (o ProvisioningDetailsPtrOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetails) *string {
		if v == nil {
			return nil
		}
		return v.VendorName
	}).(pulumi.StringPtrOutput)
}

type ProvisioningDetailsArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningDetails)(nil)).Elem()
}

func (o ProvisioningDetailsArrayOutput) ToProvisioningDetailsArrayOutput() ProvisioningDetailsArrayOutput {
	return o
}

func (o ProvisioningDetailsArrayOutput) ToProvisioningDetailsArrayOutputWithContext(ctx context.Context) ProvisioningDetailsArrayOutput {
	return o
}

func (o ProvisioningDetailsArrayOutput) Index(i pulumi.IntInput) ProvisioningDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProvisioningDetails {
		return vs[0].([]ProvisioningDetails)[vs[1].(int)]
	}).(ProvisioningDetailsOutput)
}

// Details Related To Provision Resource.
type ProvisioningDetailsResponse struct {
	// Auto Provisioning Details.
	AutoProvisioningStatus *string `pulumi:"autoProvisioningStatus"`
	// Proof of possession details.
	DevicePresenceVerification *DevicePresenceVerificationDetailsResponse `pulumi:"devicePresenceVerification"`
	// Management Resource ArmId.
	ManagementResourceArmId *string `pulumi:"managementResourceArmId"`
	// Provisioning Resource Arm ID.
	ProvisioningArmId *string `pulumi:"provisioningArmId"`
	// Provisioning End Point.
	ProvisioningEndPoint *string `pulumi:"provisioningEndPoint"`
	// Quantity of the devices.
	Quantity *int `pulumi:"quantity"`
	// Arc Enabled Resource Arm id.
	ReadyToConnectArmId *string `pulumi:"readyToConnectArmId"`
	// Serial Number for the Device.
	SerialNumber *string `pulumi:"serialNumber"`
	// Unique Identity for a Device.
	UniqueDeviceIdentifier string `pulumi:"uniqueDeviceIdentifier"`
	// Vendor Name for the Device , (for 1P devices - Microsoft).
	VendorName *string `pulumi:"vendorName"`
}

// Defaults sets the appropriate defaults for ProvisioningDetailsResponse
func (val *ProvisioningDetailsResponse) Defaults() *ProvisioningDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Quantity == nil {
		quantity_ := 0
		tmp.Quantity = &quantity_
	}
	return &tmp
}

// Details Related To Provision Resource.
type ProvisioningDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProvisioningDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningDetailsResponse)(nil)).Elem()
}

func (o ProvisioningDetailsResponseOutput) ToProvisioningDetailsResponseOutput() ProvisioningDetailsResponseOutput {
	return o
}

func (o ProvisioningDetailsResponseOutput) ToProvisioningDetailsResponseOutputWithContext(ctx context.Context) ProvisioningDetailsResponseOutput {
	return o
}

// Auto Provisioning Details.
func (o ProvisioningDetailsResponseOutput) AutoProvisioningStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.AutoProvisioningStatus }).(pulumi.StringPtrOutput)
}

// Proof of possession details.
func (o ProvisioningDetailsResponseOutput) DevicePresenceVerification() DevicePresenceVerificationDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *DevicePresenceVerificationDetailsResponse {
		return v.DevicePresenceVerification
	}).(DevicePresenceVerificationDetailsResponsePtrOutput)
}

// Management Resource ArmId.
func (o ProvisioningDetailsResponseOutput) ManagementResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.ManagementResourceArmId }).(pulumi.StringPtrOutput)
}

// Provisioning Resource Arm ID.
func (o ProvisioningDetailsResponseOutput) ProvisioningArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.ProvisioningArmId }).(pulumi.StringPtrOutput)
}

// Provisioning End Point.
func (o ProvisioningDetailsResponseOutput) ProvisioningEndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.ProvisioningEndPoint }).(pulumi.StringPtrOutput)
}

// Quantity of the devices.
func (o ProvisioningDetailsResponseOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

// Arc Enabled Resource Arm id.
func (o ProvisioningDetailsResponseOutput) ReadyToConnectArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.ReadyToConnectArmId }).(pulumi.StringPtrOutput)
}

// Serial Number for the Device.
func (o ProvisioningDetailsResponseOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Unique Identity for a Device.
func (o ProvisioningDetailsResponseOutput) UniqueDeviceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) string { return v.UniqueDeviceIdentifier }).(pulumi.StringOutput)
}

// Vendor Name for the Device , (for 1P devices - Microsoft).
func (o ProvisioningDetailsResponseOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningDetailsResponse) *string { return v.VendorName }).(pulumi.StringPtrOutput)
}

type ProvisioningDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningDetailsResponse)(nil)).Elem()
}

func (o ProvisioningDetailsResponsePtrOutput) ToProvisioningDetailsResponsePtrOutput() ProvisioningDetailsResponsePtrOutput {
	return o
}

func (o ProvisioningDetailsResponsePtrOutput) ToProvisioningDetailsResponsePtrOutputWithContext(ctx context.Context) ProvisioningDetailsResponsePtrOutput {
	return o
}

func (o ProvisioningDetailsResponsePtrOutput) Elem() ProvisioningDetailsResponseOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) ProvisioningDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ProvisioningDetailsResponse
		return ret
	}).(ProvisioningDetailsResponseOutput)
}

// Auto Provisioning Details.
func (o ProvisioningDetailsResponsePtrOutput) AutoProvisioningStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoProvisioningStatus
	}).(pulumi.StringPtrOutput)
}

// Proof of possession details.
func (o ProvisioningDetailsResponsePtrOutput) DevicePresenceVerification() DevicePresenceVerificationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *DevicePresenceVerificationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DevicePresenceVerification
	}).(DevicePresenceVerificationDetailsResponsePtrOutput)
}

// Management Resource ArmId.
func (o ProvisioningDetailsResponsePtrOutput) ManagementResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManagementResourceArmId
	}).(pulumi.StringPtrOutput)
}

// Provisioning Resource Arm ID.
func (o ProvisioningDetailsResponsePtrOutput) ProvisioningArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningArmId
	}).(pulumi.StringPtrOutput)
}

// Provisioning End Point.
func (o ProvisioningDetailsResponsePtrOutput) ProvisioningEndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningEndPoint
	}).(pulumi.StringPtrOutput)
}

// Quantity of the devices.
func (o ProvisioningDetailsResponsePtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Arc Enabled Resource Arm id.
func (o ProvisioningDetailsResponsePtrOutput) ReadyToConnectArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReadyToConnectArmId
	}).(pulumi.StringPtrOutput)
}

// Serial Number for the Device.
func (o ProvisioningDetailsResponsePtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Unique Identity for a Device.
func (o ProvisioningDetailsResponsePtrOutput) UniqueDeviceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueDeviceIdentifier
	}).(pulumi.StringPtrOutput)
}

// Vendor Name for the Device , (for 1P devices - Microsoft).
func (o ProvisioningDetailsResponsePtrOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VendorName
	}).(pulumi.StringPtrOutput)
}

type ProvisioningDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningDetailsResponse)(nil)).Elem()
}

func (o ProvisioningDetailsResponseArrayOutput) ToProvisioningDetailsResponseArrayOutput() ProvisioningDetailsResponseArrayOutput {
	return o
}

func (o ProvisioningDetailsResponseArrayOutput) ToProvisioningDetailsResponseArrayOutputWithContext(ctx context.Context) ProvisioningDetailsResponseArrayOutput {
	return o
}

func (o ProvisioningDetailsResponseArrayOutput) Index(i pulumi.IntInput) ProvisioningDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProvisioningDetailsResponse {
		return vs[0].([]ProvisioningDetailsResponse)[vs[1].(int)]
	}).(ProvisioningDetailsResponseOutput)
}

// Billing type Purchase meter details.
type PurchaseMeterDetailsResponse struct {
	// Represents billing type.
	// Expected value is 'Purchase'.
	BillingType string `pulumi:"billingType"`
	// Charging type.
	ChargingType string `pulumi:"chargingType"`
	// Billing unit applicable for Pav2 billing.
	Multiplier float64 `pulumi:"multiplier"`
	// Product Id.
	ProductId string `pulumi:"productId"`
	// Sku Id.
	SkuId string `pulumi:"skuId"`
	// Term Id.
	TermId string `pulumi:"termId"`
}

// Billing type Purchase meter details.
type PurchaseMeterDetailsResponseOutput struct{ *pulumi.OutputState }

func (PurchaseMeterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurchaseMeterDetailsResponse)(nil)).Elem()
}

func (o PurchaseMeterDetailsResponseOutput) ToPurchaseMeterDetailsResponseOutput() PurchaseMeterDetailsResponseOutput {
	return o
}

func (o PurchaseMeterDetailsResponseOutput) ToPurchaseMeterDetailsResponseOutputWithContext(ctx context.Context) PurchaseMeterDetailsResponseOutput {
	return o
}

// Represents billing type.
// Expected value is 'Purchase'.
func (o PurchaseMeterDetailsResponseOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v PurchaseMeterDetailsResponse) string { return v.BillingType }).(pulumi.StringOutput)
}

// Charging type.
func (o PurchaseMeterDetailsResponseOutput) ChargingType() pulumi.StringOutput {
	return o.ApplyT(func(v PurchaseMeterDetailsResponse) string { return v.ChargingType }).(pulumi.StringOutput)
}

// Billing unit applicable for Pav2 billing.
func (o PurchaseMeterDetailsResponseOutput) Multiplier() pulumi.Float64Output {
	return o.ApplyT(func(v PurchaseMeterDetailsResponse) float64 { return v.Multiplier }).(pulumi.Float64Output)
}

// Product Id.
func (o PurchaseMeterDetailsResponseOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v PurchaseMeterDetailsResponse) string { return v.ProductId }).(pulumi.StringOutput)
}

// Sku Id.
func (o PurchaseMeterDetailsResponseOutput) SkuId() pulumi.StringOutput {
	return o.ApplyT(func(v PurchaseMeterDetailsResponse) string { return v.SkuId }).(pulumi.StringOutput)
}

// Term Id.
func (o PurchaseMeterDetailsResponseOutput) TermId() pulumi.StringOutput {
	return o.ApplyT(func(v PurchaseMeterDetailsResponse) string { return v.TermId }).(pulumi.StringOutput)
}

// Msi identity details of the resource
type ResourceIdentity struct {
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentity
func (val *ResourceIdentity) Defaults() *ResourceIdentity {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "None"
		tmp.Type = &type_
	}
	return &tmp
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Msi identity details of the resource
type ResourceIdentityArgs struct {
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentityArgs
func (val *ResourceIdentityArgs) Defaults() *ResourceIdentityArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		tmp.Type = pulumi.StringPtr("None")
	}
	return &tmp
}
func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Identity type
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// Identity type
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponse struct {
	// Service Principal Id backing the Msi
	PrincipalId string `pulumi:"principalId"`
	// Home Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentityResponse
func (val *ResourceIdentityResponse) Defaults() *ResourceIdentityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "None"
		tmp.Type = &type_
	}
	return &tmp
}

// Msi identity details of the resource
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity type
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity type
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Management RP details.
type ResourceProviderDetailsResponse struct {
	// Resource provider namespace.
	ResourceProviderNamespace string `pulumi:"resourceProviderNamespace"`
}

// Management RP details.
type ResourceProviderDetailsResponseOutput struct{ *pulumi.OutputState }

func (ResourceProviderDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderDetailsResponse)(nil)).Elem()
}

func (o ResourceProviderDetailsResponseOutput) ToResourceProviderDetailsResponseOutput() ResourceProviderDetailsResponseOutput {
	return o
}

func (o ResourceProviderDetailsResponseOutput) ToResourceProviderDetailsResponseOutputWithContext(ctx context.Context) ResourceProviderDetailsResponseOutput {
	return o
}

// Resource provider namespace.
func (o ResourceProviderDetailsResponseOutput) ResourceProviderNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceProviderDetailsResponse) string { return v.ResourceProviderNamespace }).(pulumi.StringOutput)
}

type ResourceProviderDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceProviderDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceProviderDetailsResponse)(nil)).Elem()
}

func (o ResourceProviderDetailsResponseArrayOutput) ToResourceProviderDetailsResponseArrayOutput() ResourceProviderDetailsResponseArrayOutput {
	return o
}

func (o ResourceProviderDetailsResponseArrayOutput) ToResourceProviderDetailsResponseArrayOutputWithContext(ctx context.Context) ResourceProviderDetailsResponseArrayOutput {
	return o
}

func (o ResourceProviderDetailsResponseArrayOutput) Index(i pulumi.IntInput) ResourceProviderDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceProviderDetailsResponse {
		return vs[0].([]ResourceProviderDetailsResponse)[vs[1].(int)]
	}).(ResourceProviderDetailsResponseOutput)
}

// Reverse shipment details.
type ReverseShippingDetailsResponse struct {
	// Carrier Name for display purpose. Not to be used for any processing.
	CarrierDisplayName string `pulumi:"carrierDisplayName"`
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// SAS key to download the reverse shipment label of the package.
	SasKeyForLabel string `pulumi:"sasKeyForLabel"`
	// TrackingId of the package.
	TrackingId string `pulumi:"trackingId"`
	// TrackingUrl of the package.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// Reverse shipment details.
type ReverseShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (ReverseShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReverseShippingDetailsResponse)(nil)).Elem()
}

func (o ReverseShippingDetailsResponseOutput) ToReverseShippingDetailsResponseOutput() ReverseShippingDetailsResponseOutput {
	return o
}

func (o ReverseShippingDetailsResponseOutput) ToReverseShippingDetailsResponseOutputWithContext(ctx context.Context) ReverseShippingDetailsResponseOutput {
	return o
}

// Carrier Name for display purpose. Not to be used for any processing.
func (o ReverseShippingDetailsResponseOutput) CarrierDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) string { return v.CarrierDisplayName }).(pulumi.StringOutput)
}

// Name of the carrier.
func (o ReverseShippingDetailsResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// SAS key to download the reverse shipment label of the package.
func (o ReverseShippingDetailsResponseOutput) SasKeyForLabel() pulumi.StringOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) string { return v.SasKeyForLabel }).(pulumi.StringOutput)
}

// TrackingId of the package.
func (o ReverseShippingDetailsResponseOutput) TrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) string { return v.TrackingId }).(pulumi.StringOutput)
}

// TrackingUrl of the package.
func (o ReverseShippingDetailsResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 *string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// ShippingAddressInput is an input type that accepts ShippingAddressArgs and ShippingAddressOutput values.
// You can construct a concrete instance of `ShippingAddressInput` via:
//
//	ShippingAddressArgs{...}
type ShippingAddressInput interface {
	pulumi.Input

	ToShippingAddressOutput() ShippingAddressOutput
	ToShippingAddressOutputWithContext(context.Context) ShippingAddressOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringPtrInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

func (ShippingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (i ShippingAddressArgs) ToShippingAddressOutput() ShippingAddressOutput {
	return i.ToShippingAddressOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput)
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput).ToShippingAddressPtrOutputWithContext(ctx)
}

// ShippingAddressPtrInput is an input type that accepts ShippingAddressArgs, ShippingAddressPtr and ShippingAddressPtrOutput values.
// You can construct a concrete instance of `ShippingAddressPtrInput` via:
//
//	        ShippingAddressArgs{...}
//
//	or:
//
//	        nil
type ShippingAddressPtrInput interface {
	pulumi.Input

	ToShippingAddressPtrOutput() ShippingAddressPtrOutput
	ToShippingAddressPtrOutputWithContext(context.Context) ShippingAddressPtrOutput
}

type shippingAddressPtrType ShippingAddressArgs

func ShippingAddressPtr(v *ShippingAddressArgs) ShippingAddressPtrInput {
	return (*shippingAddressPtrType)(v)
}

func (*shippingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressOutput struct{ *pulumi.OutputState }

func (ShippingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressOutput) ToShippingAddressOutput() ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingAddress) *ShippingAddress {
		return &v
	}).(ShippingAddressPtrOutput)
}

// Type of address.
func (o ShippingAddressOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress1 }).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressPtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) Elem() ShippingAddressOutput {
	return o.ApplyT(func(v *ShippingAddress) ShippingAddress {
		if v != nil {
			return *v
		}
		var ret ShippingAddress
		return ret
	}).(ShippingAddressOutput)
}

// Type of address.
func (o ShippingAddressPtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressPtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressPtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 *string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return o
}

// Type of address.
func (o ShippingAddressResponseOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponseOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressResponseOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponseOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress1 }).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponseOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponseOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) Elem() ShippingAddressResponseOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) ShippingAddressResponse {
		if v != nil {
			return *v
		}
		var ret ShippingAddressResponse
		return ret
	}).(ShippingAddressResponseOutput)
}

// Type of address.
func (o ShippingAddressResponsePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponsePtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponsePtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Represents Site Related Details.
type SiteDetails struct {
	// Unique Id, Identifying A Site.
	SiteId string `pulumi:"siteId"`
}

// SiteDetailsInput is an input type that accepts SiteDetailsArgs and SiteDetailsOutput values.
// You can construct a concrete instance of `SiteDetailsInput` via:
//
//	SiteDetailsArgs{...}
type SiteDetailsInput interface {
	pulumi.Input

	ToSiteDetailsOutput() SiteDetailsOutput
	ToSiteDetailsOutputWithContext(context.Context) SiteDetailsOutput
}

// Represents Site Related Details.
type SiteDetailsArgs struct {
	// Unique Id, Identifying A Site.
	SiteId pulumi.StringInput `pulumi:"siteId"`
}

func (SiteDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDetails)(nil)).Elem()
}

func (i SiteDetailsArgs) ToSiteDetailsOutput() SiteDetailsOutput {
	return i.ToSiteDetailsOutputWithContext(context.Background())
}

func (i SiteDetailsArgs) ToSiteDetailsOutputWithContext(ctx context.Context) SiteDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteDetailsOutput)
}

func (i SiteDetailsArgs) ToSiteDetailsPtrOutput() SiteDetailsPtrOutput {
	return i.ToSiteDetailsPtrOutputWithContext(context.Background())
}

func (i SiteDetailsArgs) ToSiteDetailsPtrOutputWithContext(ctx context.Context) SiteDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteDetailsOutput).ToSiteDetailsPtrOutputWithContext(ctx)
}

// SiteDetailsPtrInput is an input type that accepts SiteDetailsArgs, SiteDetailsPtr and SiteDetailsPtrOutput values.
// You can construct a concrete instance of `SiteDetailsPtrInput` via:
//
//	        SiteDetailsArgs{...}
//
//	or:
//
//	        nil
type SiteDetailsPtrInput interface {
	pulumi.Input

	ToSiteDetailsPtrOutput() SiteDetailsPtrOutput
	ToSiteDetailsPtrOutputWithContext(context.Context) SiteDetailsPtrOutput
}

type siteDetailsPtrType SiteDetailsArgs

func SiteDetailsPtr(v *SiteDetailsArgs) SiteDetailsPtrInput {
	return (*siteDetailsPtrType)(v)
}

func (*siteDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteDetails)(nil)).Elem()
}

func (i *siteDetailsPtrType) ToSiteDetailsPtrOutput() SiteDetailsPtrOutput {
	return i.ToSiteDetailsPtrOutputWithContext(context.Background())
}

func (i *siteDetailsPtrType) ToSiteDetailsPtrOutputWithContext(ctx context.Context) SiteDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteDetailsPtrOutput)
}

// Represents Site Related Details.
type SiteDetailsOutput struct{ *pulumi.OutputState }

func (SiteDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDetails)(nil)).Elem()
}

func (o SiteDetailsOutput) ToSiteDetailsOutput() SiteDetailsOutput {
	return o
}

func (o SiteDetailsOutput) ToSiteDetailsOutputWithContext(ctx context.Context) SiteDetailsOutput {
	return o
}

func (o SiteDetailsOutput) ToSiteDetailsPtrOutput() SiteDetailsPtrOutput {
	return o.ToSiteDetailsPtrOutputWithContext(context.Background())
}

func (o SiteDetailsOutput) ToSiteDetailsPtrOutputWithContext(ctx context.Context) SiteDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteDetails) *SiteDetails {
		return &v
	}).(SiteDetailsPtrOutput)
}

// Unique Id, Identifying A Site.
func (o SiteDetailsOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v SiteDetails) string { return v.SiteId }).(pulumi.StringOutput)
}

type SiteDetailsPtrOutput struct{ *pulumi.OutputState }

func (SiteDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteDetails)(nil)).Elem()
}

func (o SiteDetailsPtrOutput) ToSiteDetailsPtrOutput() SiteDetailsPtrOutput {
	return o
}

func (o SiteDetailsPtrOutput) ToSiteDetailsPtrOutputWithContext(ctx context.Context) SiteDetailsPtrOutput {
	return o
}

func (o SiteDetailsPtrOutput) Elem() SiteDetailsOutput {
	return o.ApplyT(func(v *SiteDetails) SiteDetails {
		if v != nil {
			return *v
		}
		var ret SiteDetails
		return ret
	}).(SiteDetailsOutput)
}

// Unique Id, Identifying A Site.
func (o SiteDetailsPtrOutput) SiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteDetails) *string {
		if v == nil {
			return nil
		}
		return &v.SiteId
	}).(pulumi.StringPtrOutput)
}

// Represents Site Related Details.
type SiteDetailsResponse struct {
	// Unique Id, Identifying A Site.
	SiteId string `pulumi:"siteId"`
}

// Represents Site Related Details.
type SiteDetailsResponseOutput struct{ *pulumi.OutputState }

func (SiteDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteDetailsResponse)(nil)).Elem()
}

func (o SiteDetailsResponseOutput) ToSiteDetailsResponseOutput() SiteDetailsResponseOutput {
	return o
}

func (o SiteDetailsResponseOutput) ToSiteDetailsResponseOutputWithContext(ctx context.Context) SiteDetailsResponseOutput {
	return o
}

// Unique Id, Identifying A Site.
func (o SiteDetailsResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v SiteDetailsResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

type SiteDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteDetailsResponse)(nil)).Elem()
}

func (o SiteDetailsResponsePtrOutput) ToSiteDetailsResponsePtrOutput() SiteDetailsResponsePtrOutput {
	return o
}

func (o SiteDetailsResponsePtrOutput) ToSiteDetailsResponsePtrOutputWithContext(ctx context.Context) SiteDetailsResponsePtrOutput {
	return o
}

func (o SiteDetailsResponsePtrOutput) Elem() SiteDetailsResponseOutput {
	return o.ApplyT(func(v *SiteDetailsResponse) SiteDetailsResponse {
		if v != nil {
			return *v
		}
		var ret SiteDetailsResponse
		return ret
	}).(SiteDetailsResponseOutput)
}

// Unique Id, Identifying A Site.
func (o SiteDetailsResponsePtrOutput) SiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SiteId
	}).(pulumi.StringPtrOutput)
}

// Specification of the configurations.
type SpecificationResponse struct {
	// Name of the specification.
	Name string `pulumi:"name"`
	// Value of the specification.
	Value string `pulumi:"value"`
}

// Specification of the configurations.
type SpecificationResponseOutput struct{ *pulumi.OutputState }

func (SpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpecificationResponse)(nil)).Elem()
}

func (o SpecificationResponseOutput) ToSpecificationResponseOutput() SpecificationResponseOutput {
	return o
}

func (o SpecificationResponseOutput) ToSpecificationResponseOutputWithContext(ctx context.Context) SpecificationResponseOutput {
	return o
}

// Name of the specification.
func (o SpecificationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SpecificationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the specification.
func (o SpecificationResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SpecificationResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SpecificationResponseArrayOutput struct{ *pulumi.OutputState }

func (SpecificationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpecificationResponse)(nil)).Elem()
}

func (o SpecificationResponseArrayOutput) ToSpecificationResponseArrayOutput() SpecificationResponseArrayOutput {
	return o
}

func (o SpecificationResponseArrayOutput) ToSpecificationResponseArrayOutputWithContext(ctx context.Context) SpecificationResponseArrayOutput {
	return o
}

func (o SpecificationResponseArrayOutput) Index(i pulumi.IntInput) SpecificationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpecificationResponse {
		return vs[0].([]SpecificationResponse)[vs[1].(int)]
	}).(SpecificationResponseOutput)
}

// Resource stage details.
type StageDetailsResponse struct {
	// Display name of the resource stage.
	DisplayName string `pulumi:"displayName"`
	// Stage name.
	StageName string `pulumi:"stageName"`
	// Stage status.
	StageStatus string `pulumi:"stageStatus"`
	// Stage start time.
	StartTime string `pulumi:"startTime"`
}

// Resource stage details.
type StageDetailsResponseOutput struct{ *pulumi.OutputState }

func (StageDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageDetailsResponse)(nil)).Elem()
}

func (o StageDetailsResponseOutput) ToStageDetailsResponseOutput() StageDetailsResponseOutput {
	return o
}

func (o StageDetailsResponseOutput) ToStageDetailsResponseOutputWithContext(ctx context.Context) StageDetailsResponseOutput {
	return o
}

// Display name of the resource stage.
func (o StageDetailsResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v StageDetailsResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Stage name.
func (o StageDetailsResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v StageDetailsResponse) string { return v.StageName }).(pulumi.StringOutput)
}

// Stage status.
func (o StageDetailsResponseOutput) StageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StageDetailsResponse) string { return v.StageStatus }).(pulumi.StringOutput)
}

// Stage start time.
func (o StageDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v StageDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

type StageDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (StageDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageDetailsResponse)(nil)).Elem()
}

func (o StageDetailsResponseArrayOutput) ToStageDetailsResponseArrayOutput() StageDetailsResponseArrayOutput {
	return o
}

func (o StageDetailsResponseArrayOutput) ToStageDetailsResponseArrayOutputWithContext(ctx context.Context) StageDetailsResponseArrayOutput {
	return o
}

func (o StageDetailsResponseArrayOutput) Index(i pulumi.IntInput) StageDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageDetailsResponse {
		return vs[0].([]StageDetailsResponse)[vs[1].(int)]
	}).(StageDetailsResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Term Commitment Information.
type TermCommitmentInformationResponse struct {
	// Number of Days Pending for Term Commitment
	PendingDaysForTerm int `pulumi:"pendingDaysForTerm"`
	// Term Commitment Type
	TermCommitmentType string `pulumi:"termCommitmentType"`
	// Term Commitment Duration. Currently Supporting P365D, P1095D
	TermCommitmentTypeDuration string `pulumi:"termCommitmentTypeDuration"`
}

// Defaults sets the appropriate defaults for TermCommitmentInformationResponse
func (val *TermCommitmentInformationResponse) Defaults() *TermCommitmentInformationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.PendingDaysForTerm) {
		tmp.PendingDaysForTerm = 0
	}
	return &tmp
}

// Term Commitment Information.
type TermCommitmentInformationResponseOutput struct{ *pulumi.OutputState }

func (TermCommitmentInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TermCommitmentInformationResponse)(nil)).Elem()
}

func (o TermCommitmentInformationResponseOutput) ToTermCommitmentInformationResponseOutput() TermCommitmentInformationResponseOutput {
	return o
}

func (o TermCommitmentInformationResponseOutput) ToTermCommitmentInformationResponseOutputWithContext(ctx context.Context) TermCommitmentInformationResponseOutput {
	return o
}

// Number of Days Pending for Term Commitment
func (o TermCommitmentInformationResponseOutput) PendingDaysForTerm() pulumi.IntOutput {
	return o.ApplyT(func(v TermCommitmentInformationResponse) int { return v.PendingDaysForTerm }).(pulumi.IntOutput)
}

// Term Commitment Type
func (o TermCommitmentInformationResponseOutput) TermCommitmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TermCommitmentInformationResponse) string { return v.TermCommitmentType }).(pulumi.StringOutput)
}

// Term Commitment Duration. Currently Supporting P365D, P1095D
func (o TermCommitmentInformationResponseOutput) TermCommitmentTypeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v TermCommitmentInformationResponse) string { return v.TermCommitmentTypeDuration }).(pulumi.StringOutput)
}

// Term Commitment preference received from customer.
type TermCommitmentPreferences struct {
	// Customer preferred Term Duration.
	PreferredTermCommitmentDuration *string `pulumi:"preferredTermCommitmentDuration"`
	// Term Commitment Type
	PreferredTermCommitmentType string `pulumi:"preferredTermCommitmentType"`
}

// TermCommitmentPreferencesInput is an input type that accepts TermCommitmentPreferencesArgs and TermCommitmentPreferencesOutput values.
// You can construct a concrete instance of `TermCommitmentPreferencesInput` via:
//
//	TermCommitmentPreferencesArgs{...}
type TermCommitmentPreferencesInput interface {
	pulumi.Input

	ToTermCommitmentPreferencesOutput() TermCommitmentPreferencesOutput
	ToTermCommitmentPreferencesOutputWithContext(context.Context) TermCommitmentPreferencesOutput
}

// Term Commitment preference received from customer.
type TermCommitmentPreferencesArgs struct {
	// Customer preferred Term Duration.
	PreferredTermCommitmentDuration pulumi.StringPtrInput `pulumi:"preferredTermCommitmentDuration"`
	// Term Commitment Type
	PreferredTermCommitmentType pulumi.StringInput `pulumi:"preferredTermCommitmentType"`
}

func (TermCommitmentPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TermCommitmentPreferences)(nil)).Elem()
}

func (i TermCommitmentPreferencesArgs) ToTermCommitmentPreferencesOutput() TermCommitmentPreferencesOutput {
	return i.ToTermCommitmentPreferencesOutputWithContext(context.Background())
}

func (i TermCommitmentPreferencesArgs) ToTermCommitmentPreferencesOutputWithContext(ctx context.Context) TermCommitmentPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TermCommitmentPreferencesOutput)
}

func (i TermCommitmentPreferencesArgs) ToTermCommitmentPreferencesPtrOutput() TermCommitmentPreferencesPtrOutput {
	return i.ToTermCommitmentPreferencesPtrOutputWithContext(context.Background())
}

func (i TermCommitmentPreferencesArgs) ToTermCommitmentPreferencesPtrOutputWithContext(ctx context.Context) TermCommitmentPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TermCommitmentPreferencesOutput).ToTermCommitmentPreferencesPtrOutputWithContext(ctx)
}

// TermCommitmentPreferencesPtrInput is an input type that accepts TermCommitmentPreferencesArgs, TermCommitmentPreferencesPtr and TermCommitmentPreferencesPtrOutput values.
// You can construct a concrete instance of `TermCommitmentPreferencesPtrInput` via:
//
//	        TermCommitmentPreferencesArgs{...}
//
//	or:
//
//	        nil
type TermCommitmentPreferencesPtrInput interface {
	pulumi.Input

	ToTermCommitmentPreferencesPtrOutput() TermCommitmentPreferencesPtrOutput
	ToTermCommitmentPreferencesPtrOutputWithContext(context.Context) TermCommitmentPreferencesPtrOutput
}

type termCommitmentPreferencesPtrType TermCommitmentPreferencesArgs

func TermCommitmentPreferencesPtr(v *TermCommitmentPreferencesArgs) TermCommitmentPreferencesPtrInput {
	return (*termCommitmentPreferencesPtrType)(v)
}

func (*termCommitmentPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TermCommitmentPreferences)(nil)).Elem()
}

func (i *termCommitmentPreferencesPtrType) ToTermCommitmentPreferencesPtrOutput() TermCommitmentPreferencesPtrOutput {
	return i.ToTermCommitmentPreferencesPtrOutputWithContext(context.Background())
}

func (i *termCommitmentPreferencesPtrType) ToTermCommitmentPreferencesPtrOutputWithContext(ctx context.Context) TermCommitmentPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TermCommitmentPreferencesPtrOutput)
}

// Term Commitment preference received from customer.
type TermCommitmentPreferencesOutput struct{ *pulumi.OutputState }

func (TermCommitmentPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TermCommitmentPreferences)(nil)).Elem()
}

func (o TermCommitmentPreferencesOutput) ToTermCommitmentPreferencesOutput() TermCommitmentPreferencesOutput {
	return o
}

func (o TermCommitmentPreferencesOutput) ToTermCommitmentPreferencesOutputWithContext(ctx context.Context) TermCommitmentPreferencesOutput {
	return o
}

func (o TermCommitmentPreferencesOutput) ToTermCommitmentPreferencesPtrOutput() TermCommitmentPreferencesPtrOutput {
	return o.ToTermCommitmentPreferencesPtrOutputWithContext(context.Background())
}

func (o TermCommitmentPreferencesOutput) ToTermCommitmentPreferencesPtrOutputWithContext(ctx context.Context) TermCommitmentPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TermCommitmentPreferences) *TermCommitmentPreferences {
		return &v
	}).(TermCommitmentPreferencesPtrOutput)
}

// Customer preferred Term Duration.
func (o TermCommitmentPreferencesOutput) PreferredTermCommitmentDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TermCommitmentPreferences) *string { return v.PreferredTermCommitmentDuration }).(pulumi.StringPtrOutput)
}

// Term Commitment Type
func (o TermCommitmentPreferencesOutput) PreferredTermCommitmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TermCommitmentPreferences) string { return v.PreferredTermCommitmentType }).(pulumi.StringOutput)
}

type TermCommitmentPreferencesPtrOutput struct{ *pulumi.OutputState }

func (TermCommitmentPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TermCommitmentPreferences)(nil)).Elem()
}

func (o TermCommitmentPreferencesPtrOutput) ToTermCommitmentPreferencesPtrOutput() TermCommitmentPreferencesPtrOutput {
	return o
}

func (o TermCommitmentPreferencesPtrOutput) ToTermCommitmentPreferencesPtrOutputWithContext(ctx context.Context) TermCommitmentPreferencesPtrOutput {
	return o
}

func (o TermCommitmentPreferencesPtrOutput) Elem() TermCommitmentPreferencesOutput {
	return o.ApplyT(func(v *TermCommitmentPreferences) TermCommitmentPreferences {
		if v != nil {
			return *v
		}
		var ret TermCommitmentPreferences
		return ret
	}).(TermCommitmentPreferencesOutput)
}

// Customer preferred Term Duration.
func (o TermCommitmentPreferencesPtrOutput) PreferredTermCommitmentDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TermCommitmentPreferences) *string {
		if v == nil {
			return nil
		}
		return v.PreferredTermCommitmentDuration
	}).(pulumi.StringPtrOutput)
}

// Term Commitment Type
func (o TermCommitmentPreferencesPtrOutput) PreferredTermCommitmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TermCommitmentPreferences) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredTermCommitmentType
	}).(pulumi.StringPtrOutput)
}

// Term Commitment preference received from customer.
type TermCommitmentPreferencesResponse struct {
	// Customer preferred Term Duration.
	PreferredTermCommitmentDuration *string `pulumi:"preferredTermCommitmentDuration"`
	// Term Commitment Type
	PreferredTermCommitmentType string `pulumi:"preferredTermCommitmentType"`
}

// Term Commitment preference received from customer.
type TermCommitmentPreferencesResponseOutput struct{ *pulumi.OutputState }

func (TermCommitmentPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TermCommitmentPreferencesResponse)(nil)).Elem()
}

func (o TermCommitmentPreferencesResponseOutput) ToTermCommitmentPreferencesResponseOutput() TermCommitmentPreferencesResponseOutput {
	return o
}

func (o TermCommitmentPreferencesResponseOutput) ToTermCommitmentPreferencesResponseOutputWithContext(ctx context.Context) TermCommitmentPreferencesResponseOutput {
	return o
}

// Customer preferred Term Duration.
func (o TermCommitmentPreferencesResponseOutput) PreferredTermCommitmentDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TermCommitmentPreferencesResponse) *string { return v.PreferredTermCommitmentDuration }).(pulumi.StringPtrOutput)
}

// Term Commitment Type
func (o TermCommitmentPreferencesResponseOutput) PreferredTermCommitmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TermCommitmentPreferencesResponse) string { return v.PreferredTermCommitmentType }).(pulumi.StringOutput)
}

type TermCommitmentPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (TermCommitmentPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TermCommitmentPreferencesResponse)(nil)).Elem()
}

func (o TermCommitmentPreferencesResponsePtrOutput) ToTermCommitmentPreferencesResponsePtrOutput() TermCommitmentPreferencesResponsePtrOutput {
	return o
}

func (o TermCommitmentPreferencesResponsePtrOutput) ToTermCommitmentPreferencesResponsePtrOutputWithContext(ctx context.Context) TermCommitmentPreferencesResponsePtrOutput {
	return o
}

func (o TermCommitmentPreferencesResponsePtrOutput) Elem() TermCommitmentPreferencesResponseOutput {
	return o.ApplyT(func(v *TermCommitmentPreferencesResponse) TermCommitmentPreferencesResponse {
		if v != nil {
			return *v
		}
		var ret TermCommitmentPreferencesResponse
		return ret
	}).(TermCommitmentPreferencesResponseOutput)
}

// Customer preferred Term Duration.
func (o TermCommitmentPreferencesResponsePtrOutput) PreferredTermCommitmentDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TermCommitmentPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PreferredTermCommitmentDuration
	}).(pulumi.StringPtrOutput)
}

// Term Commitment Type
func (o TermCommitmentPreferencesResponsePtrOutput) PreferredTermCommitmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TermCommitmentPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredTermCommitmentType
	}).(pulumi.StringPtrOutput)
}

// Holds details about term type and duration.
type TermTypeDetailsResponse struct {
	// Term Commitment Type
	TermType string `pulumi:"termType"`
	// Duration for the term type.
	TermTypeDuration string `pulumi:"termTypeDuration"`
}

// Holds details about term type and duration.
type TermTypeDetailsResponseOutput struct{ *pulumi.OutputState }

func (TermTypeDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TermTypeDetailsResponse)(nil)).Elem()
}

func (o TermTypeDetailsResponseOutput) ToTermTypeDetailsResponseOutput() TermTypeDetailsResponseOutput {
	return o
}

func (o TermTypeDetailsResponseOutput) ToTermTypeDetailsResponseOutputWithContext(ctx context.Context) TermTypeDetailsResponseOutput {
	return o
}

// Term Commitment Type
func (o TermTypeDetailsResponseOutput) TermType() pulumi.StringOutput {
	return o.ApplyT(func(v TermTypeDetailsResponse) string { return v.TermType }).(pulumi.StringOutput)
}

// Duration for the term type.
func (o TermTypeDetailsResponseOutput) TermTypeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v TermTypeDetailsResponse) string { return v.TermTypeDuration }).(pulumi.StringOutput)
}

// Preferences related to the shipment logistics of the sku.
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesInput is an input type that accepts TransportPreferencesArgs and TransportPreferencesOutput values.
// You can construct a concrete instance of `TransportPreferencesInput` via:
//
//	TransportPreferencesArgs{...}
type TransportPreferencesInput interface {
	pulumi.Input

	ToTransportPreferencesOutput() TransportPreferencesOutput
	ToTransportPreferencesOutputWithContext(context.Context) TransportPreferencesOutput
}

// Preferences related to the shipment logistics of the sku.
type TransportPreferencesArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return i.ToTransportPreferencesOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput)
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput).ToTransportPreferencesPtrOutputWithContext(ctx)
}

// TransportPreferencesPtrInput is an input type that accepts TransportPreferencesArgs, TransportPreferencesPtr and TransportPreferencesPtrOutput values.
// You can construct a concrete instance of `TransportPreferencesPtrInput` via:
//
//	        TransportPreferencesArgs{...}
//
//	or:
//
//	        nil
type TransportPreferencesPtrInput interface {
	pulumi.Input

	ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput
	ToTransportPreferencesPtrOutputWithContext(context.Context) TransportPreferencesPtrOutput
}

type transportPreferencesPtrType TransportPreferencesArgs

func TransportPreferencesPtr(v *TransportPreferencesArgs) TransportPreferencesPtrInput {
	return (*transportPreferencesPtrType)(v)
}

func (*transportPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the sku.
type TransportPreferencesOutput struct{ *pulumi.OutputState }

func (TransportPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransportPreferences) *TransportPreferences {
		return &v
	}).(TransportPreferencesPtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferences) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesPtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) Elem() TransportPreferencesOutput {
	return o.ApplyT(func(v *TransportPreferences) TransportPreferences {
		if v != nil {
			return *v
		}
		var ret TransportPreferences
		return ret
	}).(TransportPreferencesOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesPtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferences) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the shipment logistics of the sku.
type TransportPreferencesResponse struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Preferences related to the shipment logistics of the sku.
type TransportPreferencesResponseOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return o
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponseOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) Elem() TransportPreferencesResponseOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) TransportPreferencesResponse {
		if v != nil {
			return *v
		}
		var ret TransportPreferencesResponse
		return ret
	}).(TransportPreferencesResponseOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponsePtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

type FilterablePropertyArrayMap map[string]FilterablePropertyArrayInput

func (FilterablePropertyArrayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]FilterableProperty)(nil)).Elem()
}

func (i FilterablePropertyArrayMap) ToFilterablePropertyArrayMapOutput() FilterablePropertyArrayMapOutput {
	return i.ToFilterablePropertyArrayMapOutputWithContext(context.Background())
}

func (i FilterablePropertyArrayMap) ToFilterablePropertyArrayMapOutputWithContext(ctx context.Context) FilterablePropertyArrayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyArrayMapOutput)
}

// FilterablePropertyArrayMapInput is an input type that accepts FilterablePropertyArrayMap and FilterablePropertyArrayMapOutput values.
// You can construct a concrete instance of `FilterablePropertyArrayMapInput` via:
//
//	FilterablePropertyArrayMap{ "key": FilterablePropertyArray{ FilterablePropertyArgs{...} } }
type FilterablePropertyArrayMapInput interface {
	pulumi.Input

	ToFilterablePropertyArrayMapOutput() FilterablePropertyArrayMapOutput
	ToFilterablePropertyArrayMapOutputWithContext(context.Context) FilterablePropertyArrayMapOutput
}

type FilterablePropertyArrayMapOutput struct{ *pulumi.OutputState }

func (FilterablePropertyArrayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]FilterableProperty)(nil)).Elem()
}

func (o FilterablePropertyArrayMapOutput) ToFilterablePropertyArrayMapOutput() FilterablePropertyArrayMapOutput {
	return o
}

func (o FilterablePropertyArrayMapOutput) ToFilterablePropertyArrayMapOutputWithContext(ctx context.Context) FilterablePropertyArrayMapOutput {
	return o
}

func (o FilterablePropertyArrayMapOutput) MapIndex(k pulumi.StringInput) FilterablePropertyArrayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) []FilterableProperty {
		return vs[0].(map[string][]FilterableProperty)[vs[1].(string)]
	}).(FilterablePropertyArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalConfigurationOutput{})
	pulumi.RegisterOutputType(AdditionalConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AdditionalConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AdditionalConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AddressDetailsOutput{})
	pulumi.RegisterOutputType(AddressDetailsPtrOutput{})
	pulumi.RegisterOutputType(AddressDetailsResponseOutput{})
	pulumi.RegisterOutputType(AddressDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AddressPropertiesOutput{})
	pulumi.RegisterOutputType(AddressPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddressPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AddressPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityInformationResponseOutput{})
	pulumi.RegisterOutputType(BillingMeterDetailsResponseOutput{})
	pulumi.RegisterOutputType(BillingMeterDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(CategoryInformationResponseOutput{})
	pulumi.RegisterOutputType(ChildConfigurationFilterOutput{})
	pulumi.RegisterOutputType(ChildConfigurationFilterPtrOutput{})
	pulumi.RegisterOutputType(ChildConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ChildConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationDeviceDetailsResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationDeviceDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationFilterOutput{})
	pulumi.RegisterOutputType(ConfigurationFilterPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsPtrOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CostInformationResponseOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionDetailsOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionRegisteredFeaturesOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionRegisteredFeaturesArrayOutput{})
	pulumi.RegisterOutputType(DescriptionResponseOutput{})
	pulumi.RegisterOutputType(DeviceDetailsResponseOutput{})
	pulumi.RegisterOutputType(DeviceDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DevicePresenceVerificationDetailsResponseOutput{})
	pulumi.RegisterOutputType(DevicePresenceVerificationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DimensionsResponseOutput{})
	pulumi.RegisterOutputType(DisplayInfoResponseOutput{})
	pulumi.RegisterOutputType(DisplayInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(FilterablePropertyOutput{})
	pulumi.RegisterOutputType(FilterablePropertyArrayOutput{})
	pulumi.RegisterOutputType(FilterablePropertyResponseOutput{})
	pulumi.RegisterOutputType(FilterablePropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(ForwardShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(GroupedChildConfigurationsResponseOutput{})
	pulumi.RegisterOutputType(GroupedChildConfigurationsResponseArrayOutput{})
	pulumi.RegisterOutputType(HierarchyInformationOutput{})
	pulumi.RegisterOutputType(HierarchyInformationPtrOutput{})
	pulumi.RegisterOutputType(HierarchyInformationArrayOutput{})
	pulumi.RegisterOutputType(HierarchyInformationResponseOutput{})
	pulumi.RegisterOutputType(ImageInformationResponseOutput{})
	pulumi.RegisterOutputType(ImageInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(LinkResponseOutput{})
	pulumi.RegisterOutputType(LinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementResourcePreferencesOutput{})
	pulumi.RegisterOutputType(ManagementResourcePreferencesPtrOutput{})
	pulumi.RegisterOutputType(ManagementResourcePreferencesResponseOutput{})
	pulumi.RegisterOutputType(ManagementResourcePreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceArrayOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(OrderItemDetailsOutput{})
	pulumi.RegisterOutputType(OrderItemDetailsResponseOutput{})
	pulumi.RegisterOutputType(Pav2MeterDetailsResponseOutput{})
	pulumi.RegisterOutputType(PreferencesOutput{})
	pulumi.RegisterOutputType(PreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferencesResponseOutput{})
	pulumi.RegisterOutputType(PreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProductDetailsOutput{})
	pulumi.RegisterOutputType(ProductDetailsResponseOutput{})
	pulumi.RegisterOutputType(ProductFamilyResponseOutput{})
	pulumi.RegisterOutputType(ProductFamilyResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductLineResponseOutput{})
	pulumi.RegisterOutputType(ProductLineResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductResponseOutput{})
	pulumi.RegisterOutputType(ProductResponseArrayOutput{})
	pulumi.RegisterOutputType(ProvisioningDetailsOutput{})
	pulumi.RegisterOutputType(ProvisioningDetailsPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningDetailsArrayOutput{})
	pulumi.RegisterOutputType(ProvisioningDetailsResponseOutput{})
	pulumi.RegisterOutputType(ProvisioningDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ProvisioningDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(PurchaseMeterDetailsResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceProviderDetailsResponseOutput{})
	pulumi.RegisterOutputType(ResourceProviderDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ReverseShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(ShippingAddressOutput{})
	pulumi.RegisterOutputType(ShippingAddressPtrOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponseOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteDetailsOutput{})
	pulumi.RegisterOutputType(SiteDetailsPtrOutput{})
	pulumi.RegisterOutputType(SiteDetailsResponseOutput{})
	pulumi.RegisterOutputType(SiteDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(SpecificationResponseOutput{})
	pulumi.RegisterOutputType(SpecificationResponseArrayOutput{})
	pulumi.RegisterOutputType(StageDetailsResponseOutput{})
	pulumi.RegisterOutputType(StageDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TermCommitmentInformationResponseOutput{})
	pulumi.RegisterOutputType(TermCommitmentPreferencesOutput{})
	pulumi.RegisterOutputType(TermCommitmentPreferencesPtrOutput{})
	pulumi.RegisterOutputType(TermCommitmentPreferencesResponseOutput{})
	pulumi.RegisterOutputType(TermCommitmentPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(TermTypeDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransportPreferencesOutput{})
	pulumi.RegisterOutputType(TransportPreferencesPtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponseOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(FilterablePropertyArrayMapOutput{})
}
