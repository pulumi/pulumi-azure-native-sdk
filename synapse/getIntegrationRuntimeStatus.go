// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synapse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the integration runtime status
//
// Uses Azure REST API version 2021-06-01.
//
// Other available API versions: 2021-04-01-preview, 2021-05-01, 2021-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native synapse [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func GetIntegrationRuntimeStatus(ctx *pulumi.Context, args *GetIntegrationRuntimeStatusArgs, opts ...pulumi.InvokeOption) (*GetIntegrationRuntimeStatusResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetIntegrationRuntimeStatusResult
	err := ctx.Invoke("azure-native:synapse:getIntegrationRuntimeStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetIntegrationRuntimeStatusArgs struct {
	// Integration runtime name
	IntegrationRuntimeName string `pulumi:"integrationRuntimeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Integration runtime status response.
type GetIntegrationRuntimeStatusResult struct {
	// The integration runtime name.
	Name string `pulumi:"name"`
	// Integration runtime properties.
	Properties interface{} `pulumi:"properties"`
}

func GetIntegrationRuntimeStatusOutput(ctx *pulumi.Context, args GetIntegrationRuntimeStatusOutputArgs, opts ...pulumi.InvokeOption) GetIntegrationRuntimeStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIntegrationRuntimeStatusResultOutput, error) {
			args := v.(GetIntegrationRuntimeStatusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:synapse:getIntegrationRuntimeStatus", args, GetIntegrationRuntimeStatusResultOutput{}, options).(GetIntegrationRuntimeStatusResultOutput), nil
		}).(GetIntegrationRuntimeStatusResultOutput)
}

type GetIntegrationRuntimeStatusOutputArgs struct {
	// Integration runtime name
	IntegrationRuntimeName pulumi.StringInput `pulumi:"integrationRuntimeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (GetIntegrationRuntimeStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIntegrationRuntimeStatusArgs)(nil)).Elem()
}

// Integration runtime status response.
type GetIntegrationRuntimeStatusResultOutput struct{ *pulumi.OutputState }

func (GetIntegrationRuntimeStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIntegrationRuntimeStatusResult)(nil)).Elem()
}

func (o GetIntegrationRuntimeStatusResultOutput) ToGetIntegrationRuntimeStatusResultOutput() GetIntegrationRuntimeStatusResultOutput {
	return o
}

func (o GetIntegrationRuntimeStatusResultOutput) ToGetIntegrationRuntimeStatusResultOutputWithContext(ctx context.Context) GetIntegrationRuntimeStatusResultOutput {
	return o
}

// The integration runtime name.
func (o GetIntegrationRuntimeStatusResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIntegrationRuntimeStatusResult) string { return v.Name }).(pulumi.StringOutput)
}

// Integration runtime properties.
func (o GetIntegrationRuntimeStatusResultOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v GetIntegrationRuntimeStatusResult) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIntegrationRuntimeStatusResultOutput{})
}
