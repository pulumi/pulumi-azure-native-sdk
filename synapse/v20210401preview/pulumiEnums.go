// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// SKU name.
type AzureSkuName string

const (
	AzureSkuName_Standard_DS13_v2_1TB_PS    = AzureSkuName("Standard_DS13_v2+1TB_PS")
	AzureSkuName_Standard_DS13_v2_2TB_PS    = AzureSkuName("Standard_DS13_v2+2TB_PS")
	AzureSkuName_Standard_DS14_v2_3TB_PS    = AzureSkuName("Standard_DS14_v2+3TB_PS")
	AzureSkuName_Standard_DS14_v2_4TB_PS    = AzureSkuName("Standard_DS14_v2+4TB_PS")
	AzureSkuName_Standard_D13_v2            = AzureSkuName("Standard_D13_v2")
	AzureSkuName_Standard_D14_v2            = AzureSkuName("Standard_D14_v2")
	AzureSkuName_Standard_L8s               = AzureSkuName("Standard_L8s")
	AzureSkuName_Standard_L16s              = AzureSkuName("Standard_L16s")
	AzureSkuName_Standard_L8s_v2            = AzureSkuName("Standard_L8s_v2")
	AzureSkuName_Standard_L16s_v2           = AzureSkuName("Standard_L16s_v2")
	AzureSkuName_Standard_D11_v2            = AzureSkuName("Standard_D11_v2")
	AzureSkuName_Standard_D12_v2            = AzureSkuName("Standard_D12_v2")
	AzureSkuName_Standard_L4s               = AzureSkuName("Standard_L4s")
	AzureSkuName_Dev_No_SLA_Standard_D11_v2 = AzureSkuName("Dev(No SLA)_Standard_D11_v2")
	AzureSkuName_Standard_E64i_v3           = AzureSkuName("Standard_E64i_v3")
	AzureSkuName_Standard_E80ids_v4         = AzureSkuName("Standard_E80ids_v4")
	AzureSkuName_Standard_E2a_v4            = AzureSkuName("Standard_E2a_v4")
	AzureSkuName_Standard_E4a_v4            = AzureSkuName("Standard_E4a_v4")
	AzureSkuName_Standard_E8a_v4            = AzureSkuName("Standard_E8a_v4")
	AzureSkuName_Standard_E16a_v4           = AzureSkuName("Standard_E16a_v4")
	AzureSkuName_Standard_E8as_v4_1TB_PS    = AzureSkuName("Standard_E8as_v4+1TB_PS")
	AzureSkuName_Standard_E8as_v4_2TB_PS    = AzureSkuName("Standard_E8as_v4+2TB_PS")
	AzureSkuName_Standard_E16as_v4_3TB_PS   = AzureSkuName("Standard_E16as_v4+3TB_PS")
	AzureSkuName_Standard_E16as_v4_4TB_PS   = AzureSkuName("Standard_E16as_v4+4TB_PS")
	AzureSkuName_Dev_No_SLA_Standard_E2a_v4 = AzureSkuName("Dev(No SLA)_Standard_E2a_v4")
)

func (AzureSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuName)(nil)).Elem()
}

func (e AzureSkuName) ToAzureSkuNameOutput() AzureSkuNameOutput {
	return pulumi.ToOutput(e).(AzureSkuNameOutput)
}

func (e AzureSkuName) ToAzureSkuNameOutputWithContext(ctx context.Context) AzureSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSkuNameOutput)
}

func (e AzureSkuName) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return e.ToAzureSkuNamePtrOutputWithContext(context.Background())
}

func (e AzureSkuName) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return AzureSkuName(e).ToAzureSkuNameOutputWithContext(ctx).ToAzureSkuNamePtrOutputWithContext(ctx)
}

func (e AzureSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSkuNameOutput struct{ *pulumi.OutputState }

func (AzureSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuName)(nil)).Elem()
}

func (o AzureSkuNameOutput) ToAzureSkuNameOutput() AzureSkuNameOutput {
	return o
}

func (o AzureSkuNameOutput) ToAzureSkuNameOutputWithContext(ctx context.Context) AzureSkuNameOutput {
	return o
}

func (o AzureSkuNameOutput) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return o.ToAzureSkuNamePtrOutputWithContext(context.Background())
}

func (o AzureSkuNameOutput) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSkuName) *AzureSkuName {
		return &v
	}).(AzureSkuNamePtrOutput)
}

func (o AzureSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSkuNamePtrOutput struct{ *pulumi.OutputState }

func (AzureSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSkuName)(nil)).Elem()
}

func (o AzureSkuNamePtrOutput) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return o
}

func (o AzureSkuNamePtrOutput) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return o
}

func (o AzureSkuNamePtrOutput) Elem() AzureSkuNameOutput {
	return o.ApplyT(func(v *AzureSkuName) AzureSkuName {
		if v != nil {
			return *v
		}
		var ret AzureSkuName
		return ret
	}).(AzureSkuNameOutput)
}

func (o AzureSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSkuNameInput is an input type that accepts values of the AzureSkuName enum
// A concrete instance of `AzureSkuNameInput` can be one of the following:
//
//	AzureSkuName_Standard_DS13_v2_1TB_PS
//	AzureSkuName_Standard_DS13_v2_2TB_PS
//	AzureSkuName_Standard_DS14_v2_3TB_PS
//	AzureSkuName_Standard_DS14_v2_4TB_PS
//	AzureSkuName_Standard_D13_v2
//	AzureSkuName_Standard_D14_v2
//	AzureSkuName_Standard_L8s
//	AzureSkuName_Standard_L16s
//	AzureSkuName_Standard_L8s_v2
//	AzureSkuName_Standard_L16s_v2
//	AzureSkuName_Standard_D11_v2
//	AzureSkuName_Standard_D12_v2
//	AzureSkuName_Standard_L4s
//	AzureSkuName_Dev_No_SLA_Standard_D11_v2
//	AzureSkuName_Standard_E64i_v3
//	AzureSkuName_Standard_E80ids_v4
//	AzureSkuName_Standard_E2a_v4
//	AzureSkuName_Standard_E4a_v4
//	AzureSkuName_Standard_E8a_v4
//	AzureSkuName_Standard_E16a_v4
//	AzureSkuName_Standard_E8as_v4_1TB_PS
//	AzureSkuName_Standard_E8as_v4_2TB_PS
//	AzureSkuName_Standard_E16as_v4_3TB_PS
//	AzureSkuName_Standard_E16as_v4_4TB_PS
//	AzureSkuName_Dev_No_SLA_Standard_E2a_v4
type AzureSkuNameInput interface {
	pulumi.Input

	ToAzureSkuNameOutput() AzureSkuNameOutput
	ToAzureSkuNameOutputWithContext(context.Context) AzureSkuNameOutput
}

var azureSkuNamePtrType = reflect.TypeOf((**AzureSkuName)(nil)).Elem()

type AzureSkuNamePtrInput interface {
	pulumi.Input

	ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput
	ToAzureSkuNamePtrOutputWithContext(context.Context) AzureSkuNamePtrOutput
}

type azureSkuNamePtr string

func AzureSkuNamePtr(v string) AzureSkuNamePtrInput {
	return (*azureSkuNamePtr)(&v)
}

func (*azureSkuNamePtr) ElementType() reflect.Type {
	return azureSkuNamePtrType
}

func (in *azureSkuNamePtr) ToAzureSkuNamePtrOutput() AzureSkuNamePtrOutput {
	return pulumi.ToOutput(in).(AzureSkuNamePtrOutput)
}

func (in *azureSkuNamePtr) ToAzureSkuNamePtrOutputWithContext(ctx context.Context) AzureSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSkuNamePtrOutput)
}

func (in *azureSkuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*AzureSkuName] {
	return pulumix.Output[*AzureSkuName]{
		OutputState: in.ToAzureSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// SKU tier.
type AzureSkuTier string

const (
	AzureSkuTierBasic    = AzureSkuTier("Basic")
	AzureSkuTierStandard = AzureSkuTier("Standard")
)

func (AzureSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuTier)(nil)).Elem()
}

func (e AzureSkuTier) ToAzureSkuTierOutput() AzureSkuTierOutput {
	return pulumi.ToOutput(e).(AzureSkuTierOutput)
}

func (e AzureSkuTier) ToAzureSkuTierOutputWithContext(ctx context.Context) AzureSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureSkuTierOutput)
}

func (e AzureSkuTier) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return e.ToAzureSkuTierPtrOutputWithContext(context.Background())
}

func (e AzureSkuTier) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return AzureSkuTier(e).ToAzureSkuTierOutputWithContext(ctx).ToAzureSkuTierPtrOutputWithContext(ctx)
}

func (e AzureSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureSkuTierOutput struct{ *pulumi.OutputState }

func (AzureSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuTier)(nil)).Elem()
}

func (o AzureSkuTierOutput) ToAzureSkuTierOutput() AzureSkuTierOutput {
	return o
}

func (o AzureSkuTierOutput) ToAzureSkuTierOutputWithContext(ctx context.Context) AzureSkuTierOutput {
	return o
}

func (o AzureSkuTierOutput) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return o.ToAzureSkuTierPtrOutputWithContext(context.Background())
}

func (o AzureSkuTierOutput) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSkuTier) *AzureSkuTier {
		return &v
	}).(AzureSkuTierPtrOutput)
}

func (o AzureSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureSkuTierPtrOutput struct{ *pulumi.OutputState }

func (AzureSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSkuTier)(nil)).Elem()
}

func (o AzureSkuTierPtrOutput) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return o
}

func (o AzureSkuTierPtrOutput) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return o
}

func (o AzureSkuTierPtrOutput) Elem() AzureSkuTierOutput {
	return o.ApplyT(func(v *AzureSkuTier) AzureSkuTier {
		if v != nil {
			return *v
		}
		var ret AzureSkuTier
		return ret
	}).(AzureSkuTierOutput)
}

func (o AzureSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureSkuTierInput is an input type that accepts values of the AzureSkuTier enum
// A concrete instance of `AzureSkuTierInput` can be one of the following:
//
//	AzureSkuTierBasic
//	AzureSkuTierStandard
type AzureSkuTierInput interface {
	pulumi.Input

	ToAzureSkuTierOutput() AzureSkuTierOutput
	ToAzureSkuTierOutputWithContext(context.Context) AzureSkuTierOutput
}

var azureSkuTierPtrType = reflect.TypeOf((**AzureSkuTier)(nil)).Elem()

type AzureSkuTierPtrInput interface {
	pulumi.Input

	ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput
	ToAzureSkuTierPtrOutputWithContext(context.Context) AzureSkuTierPtrOutput
}

type azureSkuTierPtr string

func AzureSkuTierPtr(v string) AzureSkuTierPtrInput {
	return (*azureSkuTierPtr)(&v)
}

func (*azureSkuTierPtr) ElementType() reflect.Type {
	return azureSkuTierPtrType
}

func (in *azureSkuTierPtr) ToAzureSkuTierPtrOutput() AzureSkuTierPtrOutput {
	return pulumi.ToOutput(in).(AzureSkuTierPtrOutput)
}

func (in *azureSkuTierPtr) ToAzureSkuTierPtrOutputWithContext(ctx context.Context) AzureSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureSkuTierPtrOutput)
}

func (in *azureSkuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*AzureSkuTier] {
	return pulumix.Output[*AzureSkuTier]{
		OutputState: in.ToAzureSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

// Database principal role.
type DatabasePrincipalRole string

const (
	DatabasePrincipalRoleAdmin              = DatabasePrincipalRole("Admin")
	DatabasePrincipalRoleIngestor           = DatabasePrincipalRole("Ingestor")
	DatabasePrincipalRoleMonitor            = DatabasePrincipalRole("Monitor")
	DatabasePrincipalRoleUser               = DatabasePrincipalRole("User")
	DatabasePrincipalRoleUnrestrictedViewer = DatabasePrincipalRole("UnrestrictedViewer")
	DatabasePrincipalRoleViewer             = DatabasePrincipalRole("Viewer")
)

func (DatabasePrincipalRole) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalRole)(nil)).Elem()
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRoleOutput() DatabasePrincipalRoleOutput {
	return pulumi.ToOutput(e).(DatabasePrincipalRoleOutput)
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRoleOutputWithContext(ctx context.Context) DatabasePrincipalRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabasePrincipalRoleOutput)
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return e.ToDatabasePrincipalRolePtrOutputWithContext(context.Background())
}

func (e DatabasePrincipalRole) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return DatabasePrincipalRole(e).ToDatabasePrincipalRoleOutputWithContext(ctx).ToDatabasePrincipalRolePtrOutputWithContext(ctx)
}

func (e DatabasePrincipalRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabasePrincipalRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabasePrincipalRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabasePrincipalRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabasePrincipalRoleOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalRole)(nil)).Elem()
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRoleOutput() DatabasePrincipalRoleOutput {
	return o
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRoleOutputWithContext(ctx context.Context) DatabasePrincipalRoleOutput {
	return o
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return o.ToDatabasePrincipalRolePtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalRoleOutput) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabasePrincipalRole) *DatabasePrincipalRole {
		return &v
	}).(DatabasePrincipalRolePtrOutput)
}

func (o DatabasePrincipalRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabasePrincipalRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabasePrincipalRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabasePrincipalRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabasePrincipalRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabasePrincipalRolePtrOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePrincipalRole)(nil)).Elem()
}

func (o DatabasePrincipalRolePtrOutput) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return o
}

func (o DatabasePrincipalRolePtrOutput) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return o
}

func (o DatabasePrincipalRolePtrOutput) Elem() DatabasePrincipalRoleOutput {
	return o.ApplyT(func(v *DatabasePrincipalRole) DatabasePrincipalRole {
		if v != nil {
			return *v
		}
		var ret DatabasePrincipalRole
		return ret
	}).(DatabasePrincipalRoleOutput)
}

func (o DatabasePrincipalRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabasePrincipalRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabasePrincipalRoleInput is an input type that accepts values of the DatabasePrincipalRole enum
// A concrete instance of `DatabasePrincipalRoleInput` can be one of the following:
//
//	DatabasePrincipalRoleAdmin
//	DatabasePrincipalRoleIngestor
//	DatabasePrincipalRoleMonitor
//	DatabasePrincipalRoleUser
//	DatabasePrincipalRoleUnrestrictedViewer
//	DatabasePrincipalRoleViewer
type DatabasePrincipalRoleInput interface {
	pulumi.Input

	ToDatabasePrincipalRoleOutput() DatabasePrincipalRoleOutput
	ToDatabasePrincipalRoleOutputWithContext(context.Context) DatabasePrincipalRoleOutput
}

var databasePrincipalRolePtrType = reflect.TypeOf((**DatabasePrincipalRole)(nil)).Elem()

type DatabasePrincipalRolePtrInput interface {
	pulumi.Input

	ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput
	ToDatabasePrincipalRolePtrOutputWithContext(context.Context) DatabasePrincipalRolePtrOutput
}

type databasePrincipalRolePtr string

func DatabasePrincipalRolePtr(v string) DatabasePrincipalRolePtrInput {
	return (*databasePrincipalRolePtr)(&v)
}

func (*databasePrincipalRolePtr) ElementType() reflect.Type {
	return databasePrincipalRolePtrType
}

func (in *databasePrincipalRolePtr) ToDatabasePrincipalRolePtrOutput() DatabasePrincipalRolePtrOutput {
	return pulumi.ToOutput(in).(DatabasePrincipalRolePtrOutput)
}

func (in *databasePrincipalRolePtr) ToDatabasePrincipalRolePtrOutputWithContext(ctx context.Context) DatabasePrincipalRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabasePrincipalRolePtrOutput)
}

func (in *databasePrincipalRolePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabasePrincipalRole] {
	return pulumix.Output[*DatabasePrincipalRole]{
		OutputState: in.ToDatabasePrincipalRolePtrOutputWithContext(ctx).OutputState,
	}
}

// The engine type
type EngineType string

const (
	EngineTypeV2 = EngineType("V2")
	EngineTypeV3 = EngineType("V3")
)

func (EngineType) ElementType() reflect.Type {
	return reflect.TypeOf((*EngineType)(nil)).Elem()
}

func (e EngineType) ToEngineTypeOutput() EngineTypeOutput {
	return pulumi.ToOutput(e).(EngineTypeOutput)
}

func (e EngineType) ToEngineTypeOutputWithContext(ctx context.Context) EngineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EngineTypeOutput)
}

func (e EngineType) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return e.ToEngineTypePtrOutputWithContext(context.Background())
}

func (e EngineType) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return EngineType(e).ToEngineTypeOutputWithContext(ctx).ToEngineTypePtrOutputWithContext(ctx)
}

func (e EngineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EngineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EngineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EngineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EngineTypeOutput struct{ *pulumi.OutputState }

func (EngineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EngineType)(nil)).Elem()
}

func (o EngineTypeOutput) ToEngineTypeOutput() EngineTypeOutput {
	return o
}

func (o EngineTypeOutput) ToEngineTypeOutputWithContext(ctx context.Context) EngineTypeOutput {
	return o
}

func (o EngineTypeOutput) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return o.ToEngineTypePtrOutputWithContext(context.Background())
}

func (o EngineTypeOutput) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EngineType) *EngineType {
		return &v
	}).(EngineTypePtrOutput)
}

func (o EngineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EngineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EngineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EngineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EngineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EngineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EngineTypePtrOutput struct{ *pulumi.OutputState }

func (EngineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EngineType)(nil)).Elem()
}

func (o EngineTypePtrOutput) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return o
}

func (o EngineTypePtrOutput) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return o
}

func (o EngineTypePtrOutput) Elem() EngineTypeOutput {
	return o.ApplyT(func(v *EngineType) EngineType {
		if v != nil {
			return *v
		}
		var ret EngineType
		return ret
	}).(EngineTypeOutput)
}

func (o EngineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EngineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EngineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EngineTypeInput is an input type that accepts values of the EngineType enum
// A concrete instance of `EngineTypeInput` can be one of the following:
//
//	EngineTypeV2
//	EngineTypeV3
type EngineTypeInput interface {
	pulumi.Input

	ToEngineTypeOutput() EngineTypeOutput
	ToEngineTypeOutputWithContext(context.Context) EngineTypeOutput
}

var engineTypePtrType = reflect.TypeOf((**EngineType)(nil)).Elem()

type EngineTypePtrInput interface {
	pulumi.Input

	ToEngineTypePtrOutput() EngineTypePtrOutput
	ToEngineTypePtrOutputWithContext(context.Context) EngineTypePtrOutput
}

type engineTypePtr string

func EngineTypePtr(v string) EngineTypePtrInput {
	return (*engineTypePtr)(&v)
}

func (*engineTypePtr) ElementType() reflect.Type {
	return engineTypePtrType
}

func (in *engineTypePtr) ToEngineTypePtrOutput() EngineTypePtrOutput {
	return pulumi.ToOutput(in).(EngineTypePtrOutput)
}

func (in *engineTypePtr) ToEngineTypePtrOutputWithContext(ctx context.Context) EngineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EngineTypePtrOutput)
}

func (in *engineTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EngineType] {
	return pulumix.Output[*EngineType]{
		OutputState: in.ToEngineTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Principal type.
type PrincipalType string

const (
	PrincipalTypeApp   = PrincipalType("App")
	PrincipalTypeGroup = PrincipalType("Group")
	PrincipalTypeUser  = PrincipalType("User")
)

func (PrincipalType) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (e PrincipalType) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return pulumi.ToOutput(e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return e.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return PrincipalType(e).ToPrincipalTypeOutputWithContext(ctx).ToPrincipalTypePtrOutputWithContext(ctx)
}

func (e PrincipalType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrincipalTypeOutput struct{ *pulumi.OutputState }

func (PrincipalTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrincipalType) *PrincipalType {
		return &v
	}).(PrincipalTypePtrOutput)
}

func (o PrincipalTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrincipalTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrincipalTypePtrOutput struct{ *pulumi.OutputState }

func (PrincipalTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalType)(nil)).Elem()
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) Elem() PrincipalTypeOutput {
	return o.ApplyT(func(v *PrincipalType) PrincipalType {
		if v != nil {
			return *v
		}
		var ret PrincipalType
		return ret
	}).(PrincipalTypeOutput)
}

func (o PrincipalTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrincipalType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrincipalTypeInput is an input type that accepts values of the PrincipalType enum
// A concrete instance of `PrincipalTypeInput` can be one of the following:
//
//	PrincipalTypeApp
//	PrincipalTypeGroup
//	PrincipalTypeUser
type PrincipalTypeInput interface {
	pulumi.Input

	ToPrincipalTypeOutput() PrincipalTypeOutput
	ToPrincipalTypeOutputWithContext(context.Context) PrincipalTypeOutput
}

var principalTypePtrType = reflect.TypeOf((**PrincipalType)(nil)).Elem()

type PrincipalTypePtrInput interface {
	pulumi.Input

	ToPrincipalTypePtrOutput() PrincipalTypePtrOutput
	ToPrincipalTypePtrOutputWithContext(context.Context) PrincipalTypePtrOutput
}

type principalTypePtr string

func PrincipalTypePtr(v string) PrincipalTypePtrInput {
	return (*principalTypePtr)(&v)
}

func (*principalTypePtr) ElementType() reflect.Type {
	return principalTypePtrType
}

func (in *principalTypePtr) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return pulumi.ToOutput(in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToOutput(ctx context.Context) pulumix.Output[*PrincipalType] {
	return pulumix.Output[*PrincipalType]{
		OutputState: in.ToPrincipalTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AzureSkuNameOutput{})
	pulumi.RegisterOutputType(AzureSkuNamePtrOutput{})
	pulumi.RegisterOutputType(AzureSkuTierOutput{})
	pulumi.RegisterOutputType(AzureSkuTierPtrOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalRoleOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalRolePtrOutput{})
	pulumi.RegisterOutputType(EngineTypeOutput{})
	pulumi.RegisterOutputType(EngineTypePtrOutput{})
	pulumi.RegisterOutputType(PrincipalTypeOutput{})
	pulumi.RegisterOutputType(PrincipalTypePtrOutput{})
}
