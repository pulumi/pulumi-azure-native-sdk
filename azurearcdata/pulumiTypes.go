// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurearcdata

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// DNS server details
type ActiveDirectoryConnectorDNSDetails struct {
	// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
	DomainName *string `pulumi:"domainName"`
	// List of Active Directory DNS server IP addresses.
	NameserverIPAddresses []string `pulumi:"nameserverIPAddresses"`
	// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
	PreferK8sDnsForPtrLookups *bool `pulumi:"preferK8sDnsForPtrLookups"`
	// Replica count for DNS proxy service. Default value is 1.
	Replicas *float64 `pulumi:"replicas"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorDNSDetails
func (val *ActiveDirectoryConnectorDNSDetails) Defaults() *ActiveDirectoryConnectorDNSDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PreferK8sDnsForPtrLookups == nil {
		preferK8sDnsForPtrLookups_ := true
		tmp.PreferK8sDnsForPtrLookups = &preferK8sDnsForPtrLookups_
	}
	if tmp.Replicas == nil {
		replicas_ := 1.0
		tmp.Replicas = &replicas_
	}
	return &tmp
}

// ActiveDirectoryConnectorDNSDetailsInput is an input type that accepts ActiveDirectoryConnectorDNSDetailsArgs and ActiveDirectoryConnectorDNSDetailsOutput values.
// You can construct a concrete instance of `ActiveDirectoryConnectorDNSDetailsInput` via:
//
//	ActiveDirectoryConnectorDNSDetailsArgs{...}
type ActiveDirectoryConnectorDNSDetailsInput interface {
	pulumi.Input

	ToActiveDirectoryConnectorDNSDetailsOutput() ActiveDirectoryConnectorDNSDetailsOutput
	ToActiveDirectoryConnectorDNSDetailsOutputWithContext(context.Context) ActiveDirectoryConnectorDNSDetailsOutput
}

// DNS server details
type ActiveDirectoryConnectorDNSDetailsArgs struct {
	// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// List of Active Directory DNS server IP addresses.
	NameserverIPAddresses pulumi.StringArrayInput `pulumi:"nameserverIPAddresses"`
	// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
	PreferK8sDnsForPtrLookups pulumi.BoolPtrInput `pulumi:"preferK8sDnsForPtrLookups"`
	// Replica count for DNS proxy service. Default value is 1.
	Replicas pulumi.Float64PtrInput `pulumi:"replicas"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorDNSDetailsArgs
func (val *ActiveDirectoryConnectorDNSDetailsArgs) Defaults() *ActiveDirectoryConnectorDNSDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PreferK8sDnsForPtrLookups == nil {
		tmp.PreferK8sDnsForPtrLookups = pulumi.BoolPtr(true)
	}
	if tmp.Replicas == nil {
		tmp.Replicas = pulumi.Float64Ptr(1.0)
	}
	return &tmp
}
func (ActiveDirectoryConnectorDNSDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorDNSDetails)(nil)).Elem()
}

func (i ActiveDirectoryConnectorDNSDetailsArgs) ToActiveDirectoryConnectorDNSDetailsOutput() ActiveDirectoryConnectorDNSDetailsOutput {
	return i.ToActiveDirectoryConnectorDNSDetailsOutputWithContext(context.Background())
}

func (i ActiveDirectoryConnectorDNSDetailsArgs) ToActiveDirectoryConnectorDNSDetailsOutputWithContext(ctx context.Context) ActiveDirectoryConnectorDNSDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorDNSDetailsOutput)
}

// DNS server details
type ActiveDirectoryConnectorDNSDetailsOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorDNSDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorDNSDetails)(nil)).Elem()
}

func (o ActiveDirectoryConnectorDNSDetailsOutput) ToActiveDirectoryConnectorDNSDetailsOutput() ActiveDirectoryConnectorDNSDetailsOutput {
	return o
}

func (o ActiveDirectoryConnectorDNSDetailsOutput) ToActiveDirectoryConnectorDNSDetailsOutputWithContext(ctx context.Context) ActiveDirectoryConnectorDNSDetailsOutput {
	return o
}

// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
func (o ActiveDirectoryConnectorDNSDetailsOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetails) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// List of Active Directory DNS server IP addresses.
func (o ActiveDirectoryConnectorDNSDetailsOutput) NameserverIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetails) []string { return v.NameserverIPAddresses }).(pulumi.StringArrayOutput)
}

// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
func (o ActiveDirectoryConnectorDNSDetailsOutput) PreferK8sDnsForPtrLookups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetails) *bool { return v.PreferK8sDnsForPtrLookups }).(pulumi.BoolPtrOutput)
}

// Replica count for DNS proxy service. Default value is 1.
func (o ActiveDirectoryConnectorDNSDetailsOutput) Replicas() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetails) *float64 { return v.Replicas }).(pulumi.Float64PtrOutput)
}

// DNS server details
type ActiveDirectoryConnectorDNSDetailsResponse struct {
	// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
	DomainName *string `pulumi:"domainName"`
	// List of Active Directory DNS server IP addresses.
	NameserverIPAddresses []string `pulumi:"nameserverIPAddresses"`
	// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
	PreferK8sDnsForPtrLookups *bool `pulumi:"preferK8sDnsForPtrLookups"`
	// Replica count for DNS proxy service. Default value is 1.
	Replicas *float64 `pulumi:"replicas"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorDNSDetailsResponse
func (val *ActiveDirectoryConnectorDNSDetailsResponse) Defaults() *ActiveDirectoryConnectorDNSDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PreferK8sDnsForPtrLookups == nil {
		preferK8sDnsForPtrLookups_ := true
		tmp.PreferK8sDnsForPtrLookups = &preferK8sDnsForPtrLookups_
	}
	if tmp.Replicas == nil {
		replicas_ := 1.0
		tmp.Replicas = &replicas_
	}
	return &tmp
}

// DNS server details
type ActiveDirectoryConnectorDNSDetailsResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorDNSDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorDNSDetailsResponse)(nil)).Elem()
}

func (o ActiveDirectoryConnectorDNSDetailsResponseOutput) ToActiveDirectoryConnectorDNSDetailsResponseOutput() ActiveDirectoryConnectorDNSDetailsResponseOutput {
	return o
}

func (o ActiveDirectoryConnectorDNSDetailsResponseOutput) ToActiveDirectoryConnectorDNSDetailsResponseOutputWithContext(ctx context.Context) ActiveDirectoryConnectorDNSDetailsResponseOutput {
	return o
}

// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
func (o ActiveDirectoryConnectorDNSDetailsResponseOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetailsResponse) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// List of Active Directory DNS server IP addresses.
func (o ActiveDirectoryConnectorDNSDetailsResponseOutput) NameserverIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetailsResponse) []string { return v.NameserverIPAddresses }).(pulumi.StringArrayOutput)
}

// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
func (o ActiveDirectoryConnectorDNSDetailsResponseOutput) PreferK8sDnsForPtrLookups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetailsResponse) *bool { return v.PreferK8sDnsForPtrLookups }).(pulumi.BoolPtrOutput)
}

// Replica count for DNS proxy service. Default value is 1.
func (o ActiveDirectoryConnectorDNSDetailsResponseOutput) Replicas() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDNSDetailsResponse) *float64 { return v.Replicas }).(pulumi.Float64PtrOutput)
}

// Active Directory domain details
type ActiveDirectoryConnectorDomainDetails struct {
	// null
	DomainControllers *ActiveDirectoryDomainControllers `pulumi:"domainControllers"`
	// NETBIOS name of the Active Directory domain.
	NetbiosDomainName *string `pulumi:"netbiosDomainName"`
	// The distinguished name of the Active Directory Organizational Unit.
	OuDistinguishedName *string `pulumi:"ouDistinguishedName"`
	// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
	Realm string `pulumi:"realm"`
	// The service account provisioning mode for this Active Directory connector.
	ServiceAccountProvisioning *string `pulumi:"serviceAccountProvisioning"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorDomainDetails
func (val *ActiveDirectoryConnectorDomainDetails) Defaults() *ActiveDirectoryConnectorDomainDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ServiceAccountProvisioning == nil {
		serviceAccountProvisioning_ := "manual"
		tmp.ServiceAccountProvisioning = &serviceAccountProvisioning_
	}
	return &tmp
}

// ActiveDirectoryConnectorDomainDetailsInput is an input type that accepts ActiveDirectoryConnectorDomainDetailsArgs and ActiveDirectoryConnectorDomainDetailsOutput values.
// You can construct a concrete instance of `ActiveDirectoryConnectorDomainDetailsInput` via:
//
//	ActiveDirectoryConnectorDomainDetailsArgs{...}
type ActiveDirectoryConnectorDomainDetailsInput interface {
	pulumi.Input

	ToActiveDirectoryConnectorDomainDetailsOutput() ActiveDirectoryConnectorDomainDetailsOutput
	ToActiveDirectoryConnectorDomainDetailsOutputWithContext(context.Context) ActiveDirectoryConnectorDomainDetailsOutput
}

// Active Directory domain details
type ActiveDirectoryConnectorDomainDetailsArgs struct {
	// null
	DomainControllers ActiveDirectoryDomainControllersPtrInput `pulumi:"domainControllers"`
	// NETBIOS name of the Active Directory domain.
	NetbiosDomainName pulumi.StringPtrInput `pulumi:"netbiosDomainName"`
	// The distinguished name of the Active Directory Organizational Unit.
	OuDistinguishedName pulumi.StringPtrInput `pulumi:"ouDistinguishedName"`
	// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
	Realm pulumi.StringInput `pulumi:"realm"`
	// The service account provisioning mode for this Active Directory connector.
	ServiceAccountProvisioning pulumi.StringPtrInput `pulumi:"serviceAccountProvisioning"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorDomainDetailsArgs
func (val *ActiveDirectoryConnectorDomainDetailsArgs) Defaults() *ActiveDirectoryConnectorDomainDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ServiceAccountProvisioning == nil {
		tmp.ServiceAccountProvisioning = pulumi.StringPtr("manual")
	}
	return &tmp
}
func (ActiveDirectoryConnectorDomainDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorDomainDetails)(nil)).Elem()
}

func (i ActiveDirectoryConnectorDomainDetailsArgs) ToActiveDirectoryConnectorDomainDetailsOutput() ActiveDirectoryConnectorDomainDetailsOutput {
	return i.ToActiveDirectoryConnectorDomainDetailsOutputWithContext(context.Background())
}

func (i ActiveDirectoryConnectorDomainDetailsArgs) ToActiveDirectoryConnectorDomainDetailsOutputWithContext(ctx context.Context) ActiveDirectoryConnectorDomainDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorDomainDetailsOutput)
}

// Active Directory domain details
type ActiveDirectoryConnectorDomainDetailsOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorDomainDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorDomainDetails)(nil)).Elem()
}

func (o ActiveDirectoryConnectorDomainDetailsOutput) ToActiveDirectoryConnectorDomainDetailsOutput() ActiveDirectoryConnectorDomainDetailsOutput {
	return o
}

func (o ActiveDirectoryConnectorDomainDetailsOutput) ToActiveDirectoryConnectorDomainDetailsOutputWithContext(ctx context.Context) ActiveDirectoryConnectorDomainDetailsOutput {
	return o
}

// null
func (o ActiveDirectoryConnectorDomainDetailsOutput) DomainControllers() ActiveDirectoryDomainControllersPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetails) *ActiveDirectoryDomainControllers {
		return v.DomainControllers
	}).(ActiveDirectoryDomainControllersPtrOutput)
}

// NETBIOS name of the Active Directory domain.
func (o ActiveDirectoryConnectorDomainDetailsOutput) NetbiosDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetails) *string { return v.NetbiosDomainName }).(pulumi.StringPtrOutput)
}

// The distinguished name of the Active Directory Organizational Unit.
func (o ActiveDirectoryConnectorDomainDetailsOutput) OuDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetails) *string { return v.OuDistinguishedName }).(pulumi.StringPtrOutput)
}

// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
func (o ActiveDirectoryConnectorDomainDetailsOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetails) string { return v.Realm }).(pulumi.StringOutput)
}

// The service account provisioning mode for this Active Directory connector.
func (o ActiveDirectoryConnectorDomainDetailsOutput) ServiceAccountProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetails) *string { return v.ServiceAccountProvisioning }).(pulumi.StringPtrOutput)
}

// Active Directory domain details
type ActiveDirectoryConnectorDomainDetailsResponse struct {
	// null
	DomainControllers *ActiveDirectoryDomainControllersResponse `pulumi:"domainControllers"`
	// NETBIOS name of the Active Directory domain.
	NetbiosDomainName *string `pulumi:"netbiosDomainName"`
	// The distinguished name of the Active Directory Organizational Unit.
	OuDistinguishedName *string `pulumi:"ouDistinguishedName"`
	// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
	Realm string `pulumi:"realm"`
	// The service account provisioning mode for this Active Directory connector.
	ServiceAccountProvisioning *string `pulumi:"serviceAccountProvisioning"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorDomainDetailsResponse
func (val *ActiveDirectoryConnectorDomainDetailsResponse) Defaults() *ActiveDirectoryConnectorDomainDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ServiceAccountProvisioning == nil {
		serviceAccountProvisioning_ := "manual"
		tmp.ServiceAccountProvisioning = &serviceAccountProvisioning_
	}
	return &tmp
}

// Active Directory domain details
type ActiveDirectoryConnectorDomainDetailsResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorDomainDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorDomainDetailsResponse)(nil)).Elem()
}

func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) ToActiveDirectoryConnectorDomainDetailsResponseOutput() ActiveDirectoryConnectorDomainDetailsResponseOutput {
	return o
}

func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) ToActiveDirectoryConnectorDomainDetailsResponseOutputWithContext(ctx context.Context) ActiveDirectoryConnectorDomainDetailsResponseOutput {
	return o
}

// null
func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) DomainControllers() ActiveDirectoryDomainControllersResponsePtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetailsResponse) *ActiveDirectoryDomainControllersResponse {
		return v.DomainControllers
	}).(ActiveDirectoryDomainControllersResponsePtrOutput)
}

// NETBIOS name of the Active Directory domain.
func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) NetbiosDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetailsResponse) *string { return v.NetbiosDomainName }).(pulumi.StringPtrOutput)
}

// The distinguished name of the Active Directory Organizational Unit.
func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) OuDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetailsResponse) *string { return v.OuDistinguishedName }).(pulumi.StringPtrOutput)
}

// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetailsResponse) string { return v.Realm }).(pulumi.StringOutput)
}

// The service account provisioning mode for this Active Directory connector.
func (o ActiveDirectoryConnectorDomainDetailsResponseOutput) ServiceAccountProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorDomainDetailsResponse) *string { return v.ServiceAccountProvisioning }).(pulumi.StringPtrOutput)
}

// The properties of an Active Directory connector resource
type ActiveDirectoryConnectorProperties struct {
	// Username and password for domain service account authentication.
	DomainServiceAccountLoginInformation *BasicLoginInformation `pulumi:"domainServiceAccountLoginInformation"`
	// null
	Spec ActiveDirectoryConnectorSpec `pulumi:"spec"`
	// null
	Status *ActiveDirectoryConnectorStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorProperties
func (val *ActiveDirectoryConnectorProperties) Defaults() *ActiveDirectoryConnectorProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = *tmp.Spec.Defaults()

	return &tmp
}

// ActiveDirectoryConnectorPropertiesInput is an input type that accepts ActiveDirectoryConnectorPropertiesArgs and ActiveDirectoryConnectorPropertiesOutput values.
// You can construct a concrete instance of `ActiveDirectoryConnectorPropertiesInput` via:
//
//	ActiveDirectoryConnectorPropertiesArgs{...}
type ActiveDirectoryConnectorPropertiesInput interface {
	pulumi.Input

	ToActiveDirectoryConnectorPropertiesOutput() ActiveDirectoryConnectorPropertiesOutput
	ToActiveDirectoryConnectorPropertiesOutputWithContext(context.Context) ActiveDirectoryConnectorPropertiesOutput
}

// The properties of an Active Directory connector resource
type ActiveDirectoryConnectorPropertiesArgs struct {
	// Username and password for domain service account authentication.
	DomainServiceAccountLoginInformation BasicLoginInformationPtrInput `pulumi:"domainServiceAccountLoginInformation"`
	// null
	Spec ActiveDirectoryConnectorSpecInput `pulumi:"spec"`
	// null
	Status ActiveDirectoryConnectorStatusPtrInput `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorPropertiesArgs
func (val *ActiveDirectoryConnectorPropertiesArgs) Defaults() *ActiveDirectoryConnectorPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ActiveDirectoryConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorProperties)(nil)).Elem()
}

func (i ActiveDirectoryConnectorPropertiesArgs) ToActiveDirectoryConnectorPropertiesOutput() ActiveDirectoryConnectorPropertiesOutput {
	return i.ToActiveDirectoryConnectorPropertiesOutputWithContext(context.Background())
}

func (i ActiveDirectoryConnectorPropertiesArgs) ToActiveDirectoryConnectorPropertiesOutputWithContext(ctx context.Context) ActiveDirectoryConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorPropertiesOutput)
}

// The properties of an Active Directory connector resource
type ActiveDirectoryConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorProperties)(nil)).Elem()
}

func (o ActiveDirectoryConnectorPropertiesOutput) ToActiveDirectoryConnectorPropertiesOutput() ActiveDirectoryConnectorPropertiesOutput {
	return o
}

func (o ActiveDirectoryConnectorPropertiesOutput) ToActiveDirectoryConnectorPropertiesOutputWithContext(ctx context.Context) ActiveDirectoryConnectorPropertiesOutput {
	return o
}

// Username and password for domain service account authentication.
func (o ActiveDirectoryConnectorPropertiesOutput) DomainServiceAccountLoginInformation() BasicLoginInformationPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorProperties) *BasicLoginInformation {
		return v.DomainServiceAccountLoginInformation
	}).(BasicLoginInformationPtrOutput)
}

// null
func (o ActiveDirectoryConnectorPropertiesOutput) Spec() ActiveDirectoryConnectorSpecOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorProperties) ActiveDirectoryConnectorSpec { return v.Spec }).(ActiveDirectoryConnectorSpecOutput)
}

// null
func (o ActiveDirectoryConnectorPropertiesOutput) Status() ActiveDirectoryConnectorStatusPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorProperties) *ActiveDirectoryConnectorStatus { return v.Status }).(ActiveDirectoryConnectorStatusPtrOutput)
}

// The properties of an Active Directory connector resource
type ActiveDirectoryConnectorPropertiesResponse struct {
	// Username and password for domain service account authentication.
	DomainServiceAccountLoginInformation *BasicLoginInformationResponse `pulumi:"domainServiceAccountLoginInformation"`
	// The provisioning state of the Active Directory connector resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// null
	Spec ActiveDirectoryConnectorSpecResponse `pulumi:"spec"`
	// null
	Status *ActiveDirectoryConnectorStatusResponse `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorPropertiesResponse
func (val *ActiveDirectoryConnectorPropertiesResponse) Defaults() *ActiveDirectoryConnectorPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = *tmp.Spec.Defaults()

	return &tmp
}

// The properties of an Active Directory connector resource
type ActiveDirectoryConnectorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorPropertiesResponse)(nil)).Elem()
}

func (o ActiveDirectoryConnectorPropertiesResponseOutput) ToActiveDirectoryConnectorPropertiesResponseOutput() ActiveDirectoryConnectorPropertiesResponseOutput {
	return o
}

func (o ActiveDirectoryConnectorPropertiesResponseOutput) ToActiveDirectoryConnectorPropertiesResponseOutputWithContext(ctx context.Context) ActiveDirectoryConnectorPropertiesResponseOutput {
	return o
}

// Username and password for domain service account authentication.
func (o ActiveDirectoryConnectorPropertiesResponseOutput) DomainServiceAccountLoginInformation() BasicLoginInformationResponsePtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorPropertiesResponse) *BasicLoginInformationResponse {
		return v.DomainServiceAccountLoginInformation
	}).(BasicLoginInformationResponsePtrOutput)
}

// The provisioning state of the Active Directory connector resource.
func (o ActiveDirectoryConnectorPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// null
func (o ActiveDirectoryConnectorPropertiesResponseOutput) Spec() ActiveDirectoryConnectorSpecResponseOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorPropertiesResponse) ActiveDirectoryConnectorSpecResponse { return v.Spec }).(ActiveDirectoryConnectorSpecResponseOutput)
}

// null
func (o ActiveDirectoryConnectorPropertiesResponseOutput) Status() ActiveDirectoryConnectorStatusResponsePtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorPropertiesResponse) *ActiveDirectoryConnectorStatusResponse {
		return v.Status
	}).(ActiveDirectoryConnectorStatusResponsePtrOutput)
}

// The specifications of the AD Kubernetes resource.
type ActiveDirectoryConnectorSpec struct {
	// null
	ActiveDirectory ActiveDirectoryConnectorDomainDetails `pulumi:"activeDirectory"`
	// null
	Dns ActiveDirectoryConnectorDNSDetails `pulumi:"dns"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorSpec
func (val *ActiveDirectoryConnectorSpec) Defaults() *ActiveDirectoryConnectorSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ActiveDirectory = *tmp.ActiveDirectory.Defaults()

	tmp.Dns = *tmp.Dns.Defaults()

	return &tmp
}

// ActiveDirectoryConnectorSpecInput is an input type that accepts ActiveDirectoryConnectorSpecArgs and ActiveDirectoryConnectorSpecOutput values.
// You can construct a concrete instance of `ActiveDirectoryConnectorSpecInput` via:
//
//	ActiveDirectoryConnectorSpecArgs{...}
type ActiveDirectoryConnectorSpecInput interface {
	pulumi.Input

	ToActiveDirectoryConnectorSpecOutput() ActiveDirectoryConnectorSpecOutput
	ToActiveDirectoryConnectorSpecOutputWithContext(context.Context) ActiveDirectoryConnectorSpecOutput
}

// The specifications of the AD Kubernetes resource.
type ActiveDirectoryConnectorSpecArgs struct {
	// null
	ActiveDirectory ActiveDirectoryConnectorDomainDetailsInput `pulumi:"activeDirectory"`
	// null
	Dns ActiveDirectoryConnectorDNSDetailsInput `pulumi:"dns"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorSpecArgs
func (val *ActiveDirectoryConnectorSpecArgs) Defaults() *ActiveDirectoryConnectorSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ActiveDirectoryConnectorSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorSpec)(nil)).Elem()
}

func (i ActiveDirectoryConnectorSpecArgs) ToActiveDirectoryConnectorSpecOutput() ActiveDirectoryConnectorSpecOutput {
	return i.ToActiveDirectoryConnectorSpecOutputWithContext(context.Background())
}

func (i ActiveDirectoryConnectorSpecArgs) ToActiveDirectoryConnectorSpecOutputWithContext(ctx context.Context) ActiveDirectoryConnectorSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorSpecOutput)
}

// The specifications of the AD Kubernetes resource.
type ActiveDirectoryConnectorSpecOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorSpec)(nil)).Elem()
}

func (o ActiveDirectoryConnectorSpecOutput) ToActiveDirectoryConnectorSpecOutput() ActiveDirectoryConnectorSpecOutput {
	return o
}

func (o ActiveDirectoryConnectorSpecOutput) ToActiveDirectoryConnectorSpecOutputWithContext(ctx context.Context) ActiveDirectoryConnectorSpecOutput {
	return o
}

// null
func (o ActiveDirectoryConnectorSpecOutput) ActiveDirectory() ActiveDirectoryConnectorDomainDetailsOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorSpec) ActiveDirectoryConnectorDomainDetails { return v.ActiveDirectory }).(ActiveDirectoryConnectorDomainDetailsOutput)
}

// null
func (o ActiveDirectoryConnectorSpecOutput) Dns() ActiveDirectoryConnectorDNSDetailsOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorSpec) ActiveDirectoryConnectorDNSDetails { return v.Dns }).(ActiveDirectoryConnectorDNSDetailsOutput)
}

// The specifications of the AD Kubernetes resource.
type ActiveDirectoryConnectorSpecResponse struct {
	// null
	ActiveDirectory ActiveDirectoryConnectorDomainDetailsResponse `pulumi:"activeDirectory"`
	// null
	Dns ActiveDirectoryConnectorDNSDetailsResponse `pulumi:"dns"`
}

// Defaults sets the appropriate defaults for ActiveDirectoryConnectorSpecResponse
func (val *ActiveDirectoryConnectorSpecResponse) Defaults() *ActiveDirectoryConnectorSpecResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ActiveDirectory = *tmp.ActiveDirectory.Defaults()

	tmp.Dns = *tmp.Dns.Defaults()

	return &tmp
}

// The specifications of the AD Kubernetes resource.
type ActiveDirectoryConnectorSpecResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorSpecResponse)(nil)).Elem()
}

func (o ActiveDirectoryConnectorSpecResponseOutput) ToActiveDirectoryConnectorSpecResponseOutput() ActiveDirectoryConnectorSpecResponseOutput {
	return o
}

func (o ActiveDirectoryConnectorSpecResponseOutput) ToActiveDirectoryConnectorSpecResponseOutputWithContext(ctx context.Context) ActiveDirectoryConnectorSpecResponseOutput {
	return o
}

// null
func (o ActiveDirectoryConnectorSpecResponseOutput) ActiveDirectory() ActiveDirectoryConnectorDomainDetailsResponseOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorSpecResponse) ActiveDirectoryConnectorDomainDetailsResponse {
		return v.ActiveDirectory
	}).(ActiveDirectoryConnectorDomainDetailsResponseOutput)
}

// null
func (o ActiveDirectoryConnectorSpecResponseOutput) Dns() ActiveDirectoryConnectorDNSDetailsResponseOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorSpecResponse) ActiveDirectoryConnectorDNSDetailsResponse { return v.Dns }).(ActiveDirectoryConnectorDNSDetailsResponseOutput)
}

// The status of the Kubernetes custom resource.
type ActiveDirectoryConnectorStatus struct {
	// The time that the custom resource was last updated.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// The version of the replicaSet associated with the AD connector custom resource.
	ObservedGeneration *float64 `pulumi:"observedGeneration"`
	// The state of the AD connector custom resource.
	State *string `pulumi:"state"`
}

// ActiveDirectoryConnectorStatusInput is an input type that accepts ActiveDirectoryConnectorStatusArgs and ActiveDirectoryConnectorStatusOutput values.
// You can construct a concrete instance of `ActiveDirectoryConnectorStatusInput` via:
//
//	ActiveDirectoryConnectorStatusArgs{...}
type ActiveDirectoryConnectorStatusInput interface {
	pulumi.Input

	ToActiveDirectoryConnectorStatusOutput() ActiveDirectoryConnectorStatusOutput
	ToActiveDirectoryConnectorStatusOutputWithContext(context.Context) ActiveDirectoryConnectorStatusOutput
}

// The status of the Kubernetes custom resource.
type ActiveDirectoryConnectorStatusArgs struct {
	// The time that the custom resource was last updated.
	LastUpdateTime pulumi.StringPtrInput `pulumi:"lastUpdateTime"`
	// The version of the replicaSet associated with the AD connector custom resource.
	ObservedGeneration pulumi.Float64PtrInput `pulumi:"observedGeneration"`
	// The state of the AD connector custom resource.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ActiveDirectoryConnectorStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorStatus)(nil)).Elem()
}

func (i ActiveDirectoryConnectorStatusArgs) ToActiveDirectoryConnectorStatusOutput() ActiveDirectoryConnectorStatusOutput {
	return i.ToActiveDirectoryConnectorStatusOutputWithContext(context.Background())
}

func (i ActiveDirectoryConnectorStatusArgs) ToActiveDirectoryConnectorStatusOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorStatusOutput)
}

func (i ActiveDirectoryConnectorStatusArgs) ToActiveDirectoryConnectorStatusPtrOutput() ActiveDirectoryConnectorStatusPtrOutput {
	return i.ToActiveDirectoryConnectorStatusPtrOutputWithContext(context.Background())
}

func (i ActiveDirectoryConnectorStatusArgs) ToActiveDirectoryConnectorStatusPtrOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorStatusOutput).ToActiveDirectoryConnectorStatusPtrOutputWithContext(ctx)
}

// ActiveDirectoryConnectorStatusPtrInput is an input type that accepts ActiveDirectoryConnectorStatusArgs, ActiveDirectoryConnectorStatusPtr and ActiveDirectoryConnectorStatusPtrOutput values.
// You can construct a concrete instance of `ActiveDirectoryConnectorStatusPtrInput` via:
//
//	        ActiveDirectoryConnectorStatusArgs{...}
//
//	or:
//
//	        nil
type ActiveDirectoryConnectorStatusPtrInput interface {
	pulumi.Input

	ToActiveDirectoryConnectorStatusPtrOutput() ActiveDirectoryConnectorStatusPtrOutput
	ToActiveDirectoryConnectorStatusPtrOutputWithContext(context.Context) ActiveDirectoryConnectorStatusPtrOutput
}

type activeDirectoryConnectorStatusPtrType ActiveDirectoryConnectorStatusArgs

func ActiveDirectoryConnectorStatusPtr(v *ActiveDirectoryConnectorStatusArgs) ActiveDirectoryConnectorStatusPtrInput {
	return (*activeDirectoryConnectorStatusPtrType)(v)
}

func (*activeDirectoryConnectorStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryConnectorStatus)(nil)).Elem()
}

func (i *activeDirectoryConnectorStatusPtrType) ToActiveDirectoryConnectorStatusPtrOutput() ActiveDirectoryConnectorStatusPtrOutput {
	return i.ToActiveDirectoryConnectorStatusPtrOutputWithContext(context.Background())
}

func (i *activeDirectoryConnectorStatusPtrType) ToActiveDirectoryConnectorStatusPtrOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryConnectorStatusPtrOutput)
}

// The status of the Kubernetes custom resource.
type ActiveDirectoryConnectorStatusOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorStatus)(nil)).Elem()
}

func (o ActiveDirectoryConnectorStatusOutput) ToActiveDirectoryConnectorStatusOutput() ActiveDirectoryConnectorStatusOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusOutput) ToActiveDirectoryConnectorStatusOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusOutput) ToActiveDirectoryConnectorStatusPtrOutput() ActiveDirectoryConnectorStatusPtrOutput {
	return o.ToActiveDirectoryConnectorStatusPtrOutputWithContext(context.Background())
}

func (o ActiveDirectoryConnectorStatusOutput) ToActiveDirectoryConnectorStatusPtrOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveDirectoryConnectorStatus) *ActiveDirectoryConnectorStatus {
		return &v
	}).(ActiveDirectoryConnectorStatusPtrOutput)
}

// The time that the custom resource was last updated.
func (o ActiveDirectoryConnectorStatusOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorStatus) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// The version of the replicaSet associated with the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusOutput) ObservedGeneration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorStatus) *float64 { return v.ObservedGeneration }).(pulumi.Float64PtrOutput)
}

// The state of the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ActiveDirectoryConnectorStatusPtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryConnectorStatus)(nil)).Elem()
}

func (o ActiveDirectoryConnectorStatusPtrOutput) ToActiveDirectoryConnectorStatusPtrOutput() ActiveDirectoryConnectorStatusPtrOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusPtrOutput) ToActiveDirectoryConnectorStatusPtrOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusPtrOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusPtrOutput) Elem() ActiveDirectoryConnectorStatusOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatus) ActiveDirectoryConnectorStatus {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryConnectorStatus
		return ret
	}).(ActiveDirectoryConnectorStatusOutput)
}

// The time that the custom resource was last updated.
func (o ActiveDirectoryConnectorStatusPtrOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdateTime
	}).(pulumi.StringPtrOutput)
}

// The version of the replicaSet associated with the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusPtrOutput) ObservedGeneration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatus) *float64 {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.Float64PtrOutput)
}

// The state of the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The status of the Kubernetes custom resource.
type ActiveDirectoryConnectorStatusResponse struct {
	// The time that the custom resource was last updated.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// The version of the replicaSet associated with the AD connector custom resource.
	ObservedGeneration *float64 `pulumi:"observedGeneration"`
	// The state of the AD connector custom resource.
	State *string `pulumi:"state"`
}

// The status of the Kubernetes custom resource.
type ActiveDirectoryConnectorStatusResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryConnectorStatusResponse)(nil)).Elem()
}

func (o ActiveDirectoryConnectorStatusResponseOutput) ToActiveDirectoryConnectorStatusResponseOutput() ActiveDirectoryConnectorStatusResponseOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusResponseOutput) ToActiveDirectoryConnectorStatusResponseOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusResponseOutput {
	return o
}

// The time that the custom resource was last updated.
func (o ActiveDirectoryConnectorStatusResponseOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorStatusResponse) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// The version of the replicaSet associated with the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusResponseOutput) ObservedGeneration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorStatusResponse) *float64 { return v.ObservedGeneration }).(pulumi.Float64PtrOutput)
}

// The state of the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryConnectorStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ActiveDirectoryConnectorStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryConnectorStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryConnectorStatusResponse)(nil)).Elem()
}

func (o ActiveDirectoryConnectorStatusResponsePtrOutput) ToActiveDirectoryConnectorStatusResponsePtrOutput() ActiveDirectoryConnectorStatusResponsePtrOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusResponsePtrOutput) ToActiveDirectoryConnectorStatusResponsePtrOutputWithContext(ctx context.Context) ActiveDirectoryConnectorStatusResponsePtrOutput {
	return o
}

func (o ActiveDirectoryConnectorStatusResponsePtrOutput) Elem() ActiveDirectoryConnectorStatusResponseOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatusResponse) ActiveDirectoryConnectorStatusResponse {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryConnectorStatusResponse
		return ret
	}).(ActiveDirectoryConnectorStatusResponseOutput)
}

// The time that the custom resource was last updated.
func (o ActiveDirectoryConnectorStatusResponsePtrOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdateTime
	}).(pulumi.StringPtrOutput)
}

// The version of the replicaSet associated with the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusResponsePtrOutput) ObservedGeneration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatusResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.Float64PtrOutput)
}

// The state of the AD connector custom resource.
func (o ActiveDirectoryConnectorStatusResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryConnectorStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Information about a domain controller in the AD domain.
type ActiveDirectoryDomainController struct {
	// Fully-qualified domain name of a domain controller in the AD domain.
	Hostname string `pulumi:"hostname"`
}

// ActiveDirectoryDomainControllerInput is an input type that accepts ActiveDirectoryDomainControllerArgs and ActiveDirectoryDomainControllerOutput values.
// You can construct a concrete instance of `ActiveDirectoryDomainControllerInput` via:
//
//	ActiveDirectoryDomainControllerArgs{...}
type ActiveDirectoryDomainControllerInput interface {
	pulumi.Input

	ToActiveDirectoryDomainControllerOutput() ActiveDirectoryDomainControllerOutput
	ToActiveDirectoryDomainControllerOutputWithContext(context.Context) ActiveDirectoryDomainControllerOutput
}

// Information about a domain controller in the AD domain.
type ActiveDirectoryDomainControllerArgs struct {
	// Fully-qualified domain name of a domain controller in the AD domain.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (ActiveDirectoryDomainControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryDomainController)(nil)).Elem()
}

func (i ActiveDirectoryDomainControllerArgs) ToActiveDirectoryDomainControllerOutput() ActiveDirectoryDomainControllerOutput {
	return i.ToActiveDirectoryDomainControllerOutputWithContext(context.Background())
}

func (i ActiveDirectoryDomainControllerArgs) ToActiveDirectoryDomainControllerOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllerOutput)
}

func (i ActiveDirectoryDomainControllerArgs) ToActiveDirectoryDomainControllerPtrOutput() ActiveDirectoryDomainControllerPtrOutput {
	return i.ToActiveDirectoryDomainControllerPtrOutputWithContext(context.Background())
}

func (i ActiveDirectoryDomainControllerArgs) ToActiveDirectoryDomainControllerPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllerOutput).ToActiveDirectoryDomainControllerPtrOutputWithContext(ctx)
}

// ActiveDirectoryDomainControllerPtrInput is an input type that accepts ActiveDirectoryDomainControllerArgs, ActiveDirectoryDomainControllerPtr and ActiveDirectoryDomainControllerPtrOutput values.
// You can construct a concrete instance of `ActiveDirectoryDomainControllerPtrInput` via:
//
//	        ActiveDirectoryDomainControllerArgs{...}
//
//	or:
//
//	        nil
type ActiveDirectoryDomainControllerPtrInput interface {
	pulumi.Input

	ToActiveDirectoryDomainControllerPtrOutput() ActiveDirectoryDomainControllerPtrOutput
	ToActiveDirectoryDomainControllerPtrOutputWithContext(context.Context) ActiveDirectoryDomainControllerPtrOutput
}

type activeDirectoryDomainControllerPtrType ActiveDirectoryDomainControllerArgs

func ActiveDirectoryDomainControllerPtr(v *ActiveDirectoryDomainControllerArgs) ActiveDirectoryDomainControllerPtrInput {
	return (*activeDirectoryDomainControllerPtrType)(v)
}

func (*activeDirectoryDomainControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomainController)(nil)).Elem()
}

func (i *activeDirectoryDomainControllerPtrType) ToActiveDirectoryDomainControllerPtrOutput() ActiveDirectoryDomainControllerPtrOutput {
	return i.ToActiveDirectoryDomainControllerPtrOutputWithContext(context.Background())
}

func (i *activeDirectoryDomainControllerPtrType) ToActiveDirectoryDomainControllerPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllerPtrOutput)
}

// ActiveDirectoryDomainControllerArrayInput is an input type that accepts ActiveDirectoryDomainControllerArray and ActiveDirectoryDomainControllerArrayOutput values.
// You can construct a concrete instance of `ActiveDirectoryDomainControllerArrayInput` via:
//
//	ActiveDirectoryDomainControllerArray{ ActiveDirectoryDomainControllerArgs{...} }
type ActiveDirectoryDomainControllerArrayInput interface {
	pulumi.Input

	ToActiveDirectoryDomainControllerArrayOutput() ActiveDirectoryDomainControllerArrayOutput
	ToActiveDirectoryDomainControllerArrayOutputWithContext(context.Context) ActiveDirectoryDomainControllerArrayOutput
}

type ActiveDirectoryDomainControllerArray []ActiveDirectoryDomainControllerInput

func (ActiveDirectoryDomainControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryDomainController)(nil)).Elem()
}

func (i ActiveDirectoryDomainControllerArray) ToActiveDirectoryDomainControllerArrayOutput() ActiveDirectoryDomainControllerArrayOutput {
	return i.ToActiveDirectoryDomainControllerArrayOutputWithContext(context.Background())
}

func (i ActiveDirectoryDomainControllerArray) ToActiveDirectoryDomainControllerArrayOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllerArrayOutput)
}

// Information about a domain controller in the AD domain.
type ActiveDirectoryDomainControllerOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryDomainController)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllerOutput) ToActiveDirectoryDomainControllerOutput() ActiveDirectoryDomainControllerOutput {
	return o
}

func (o ActiveDirectoryDomainControllerOutput) ToActiveDirectoryDomainControllerOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerOutput {
	return o
}

func (o ActiveDirectoryDomainControllerOutput) ToActiveDirectoryDomainControllerPtrOutput() ActiveDirectoryDomainControllerPtrOutput {
	return o.ToActiveDirectoryDomainControllerPtrOutputWithContext(context.Background())
}

func (o ActiveDirectoryDomainControllerOutput) ToActiveDirectoryDomainControllerPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveDirectoryDomainController) *ActiveDirectoryDomainController {
		return &v
	}).(ActiveDirectoryDomainControllerPtrOutput)
}

// Fully-qualified domain name of a domain controller in the AD domain.
func (o ActiveDirectoryDomainControllerOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryDomainController) string { return v.Hostname }).(pulumi.StringOutput)
}

type ActiveDirectoryDomainControllerPtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomainController)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllerPtrOutput) ToActiveDirectoryDomainControllerPtrOutput() ActiveDirectoryDomainControllerPtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllerPtrOutput) ToActiveDirectoryDomainControllerPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerPtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllerPtrOutput) Elem() ActiveDirectoryDomainControllerOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainController) ActiveDirectoryDomainController {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryDomainController
		return ret
	}).(ActiveDirectoryDomainControllerOutput)
}

// Fully-qualified domain name of a domain controller in the AD domain.
func (o ActiveDirectoryDomainControllerPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainController) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

type ActiveDirectoryDomainControllerArrayOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryDomainController)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllerArrayOutput) ToActiveDirectoryDomainControllerArrayOutput() ActiveDirectoryDomainControllerArrayOutput {
	return o
}

func (o ActiveDirectoryDomainControllerArrayOutput) ToActiveDirectoryDomainControllerArrayOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerArrayOutput {
	return o
}

func (o ActiveDirectoryDomainControllerArrayOutput) Index(i pulumi.IntInput) ActiveDirectoryDomainControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActiveDirectoryDomainController {
		return vs[0].([]ActiveDirectoryDomainController)[vs[1].(int)]
	}).(ActiveDirectoryDomainControllerOutput)
}

// Information about a domain controller in the AD domain.
type ActiveDirectoryDomainControllerResponse struct {
	// Fully-qualified domain name of a domain controller in the AD domain.
	Hostname string `pulumi:"hostname"`
}

// Information about a domain controller in the AD domain.
type ActiveDirectoryDomainControllerResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryDomainControllerResponse)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllerResponseOutput) ToActiveDirectoryDomainControllerResponseOutput() ActiveDirectoryDomainControllerResponseOutput {
	return o
}

func (o ActiveDirectoryDomainControllerResponseOutput) ToActiveDirectoryDomainControllerResponseOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerResponseOutput {
	return o
}

// Fully-qualified domain name of a domain controller in the AD domain.
func (o ActiveDirectoryDomainControllerResponseOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryDomainControllerResponse) string { return v.Hostname }).(pulumi.StringOutput)
}

type ActiveDirectoryDomainControllerResponsePtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomainControllerResponse)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllerResponsePtrOutput) ToActiveDirectoryDomainControllerResponsePtrOutput() ActiveDirectoryDomainControllerResponsePtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllerResponsePtrOutput) ToActiveDirectoryDomainControllerResponsePtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerResponsePtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllerResponsePtrOutput) Elem() ActiveDirectoryDomainControllerResponseOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllerResponse) ActiveDirectoryDomainControllerResponse {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryDomainControllerResponse
		return ret
	}).(ActiveDirectoryDomainControllerResponseOutput)
}

// Fully-qualified domain name of a domain controller in the AD domain.
func (o ActiveDirectoryDomainControllerResponsePtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

type ActiveDirectoryDomainControllerResponseArrayOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveDirectoryDomainControllerResponse)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllerResponseArrayOutput) ToActiveDirectoryDomainControllerResponseArrayOutput() ActiveDirectoryDomainControllerResponseArrayOutput {
	return o
}

func (o ActiveDirectoryDomainControllerResponseArrayOutput) ToActiveDirectoryDomainControllerResponseArrayOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllerResponseArrayOutput {
	return o
}

func (o ActiveDirectoryDomainControllerResponseArrayOutput) Index(i pulumi.IntInput) ActiveDirectoryDomainControllerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActiveDirectoryDomainControllerResponse {
		return vs[0].([]ActiveDirectoryDomainControllerResponse)[vs[1].(int)]
	}).(ActiveDirectoryDomainControllerResponseOutput)
}

// Details about the Active Directory domain controllers associated with this AD connector instance
type ActiveDirectoryDomainControllers struct {
	// Information about the Primary Domain Controller (PDC) in the AD domain.
	PrimaryDomainController *ActiveDirectoryDomainController `pulumi:"primaryDomainController"`
	// null
	SecondaryDomainControllers []ActiveDirectoryDomainController `pulumi:"secondaryDomainControllers"`
}

// ActiveDirectoryDomainControllersInput is an input type that accepts ActiveDirectoryDomainControllersArgs and ActiveDirectoryDomainControllersOutput values.
// You can construct a concrete instance of `ActiveDirectoryDomainControllersInput` via:
//
//	ActiveDirectoryDomainControllersArgs{...}
type ActiveDirectoryDomainControllersInput interface {
	pulumi.Input

	ToActiveDirectoryDomainControllersOutput() ActiveDirectoryDomainControllersOutput
	ToActiveDirectoryDomainControllersOutputWithContext(context.Context) ActiveDirectoryDomainControllersOutput
}

// Details about the Active Directory domain controllers associated with this AD connector instance
type ActiveDirectoryDomainControllersArgs struct {
	// Information about the Primary Domain Controller (PDC) in the AD domain.
	PrimaryDomainController ActiveDirectoryDomainControllerPtrInput `pulumi:"primaryDomainController"`
	// null
	SecondaryDomainControllers ActiveDirectoryDomainControllerArrayInput `pulumi:"secondaryDomainControllers"`
}

func (ActiveDirectoryDomainControllersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryDomainControllers)(nil)).Elem()
}

func (i ActiveDirectoryDomainControllersArgs) ToActiveDirectoryDomainControllersOutput() ActiveDirectoryDomainControllersOutput {
	return i.ToActiveDirectoryDomainControllersOutputWithContext(context.Background())
}

func (i ActiveDirectoryDomainControllersArgs) ToActiveDirectoryDomainControllersOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllersOutput)
}

func (i ActiveDirectoryDomainControllersArgs) ToActiveDirectoryDomainControllersPtrOutput() ActiveDirectoryDomainControllersPtrOutput {
	return i.ToActiveDirectoryDomainControllersPtrOutputWithContext(context.Background())
}

func (i ActiveDirectoryDomainControllersArgs) ToActiveDirectoryDomainControllersPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllersOutput).ToActiveDirectoryDomainControllersPtrOutputWithContext(ctx)
}

// ActiveDirectoryDomainControllersPtrInput is an input type that accepts ActiveDirectoryDomainControllersArgs, ActiveDirectoryDomainControllersPtr and ActiveDirectoryDomainControllersPtrOutput values.
// You can construct a concrete instance of `ActiveDirectoryDomainControllersPtrInput` via:
//
//	        ActiveDirectoryDomainControllersArgs{...}
//
//	or:
//
//	        nil
type ActiveDirectoryDomainControllersPtrInput interface {
	pulumi.Input

	ToActiveDirectoryDomainControllersPtrOutput() ActiveDirectoryDomainControllersPtrOutput
	ToActiveDirectoryDomainControllersPtrOutputWithContext(context.Context) ActiveDirectoryDomainControllersPtrOutput
}

type activeDirectoryDomainControllersPtrType ActiveDirectoryDomainControllersArgs

func ActiveDirectoryDomainControllersPtr(v *ActiveDirectoryDomainControllersArgs) ActiveDirectoryDomainControllersPtrInput {
	return (*activeDirectoryDomainControllersPtrType)(v)
}

func (*activeDirectoryDomainControllersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomainControllers)(nil)).Elem()
}

func (i *activeDirectoryDomainControllersPtrType) ToActiveDirectoryDomainControllersPtrOutput() ActiveDirectoryDomainControllersPtrOutput {
	return i.ToActiveDirectoryDomainControllersPtrOutputWithContext(context.Background())
}

func (i *activeDirectoryDomainControllersPtrType) ToActiveDirectoryDomainControllersPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainControllersPtrOutput)
}

// Details about the Active Directory domain controllers associated with this AD connector instance
type ActiveDirectoryDomainControllersOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryDomainControllers)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllersOutput) ToActiveDirectoryDomainControllersOutput() ActiveDirectoryDomainControllersOutput {
	return o
}

func (o ActiveDirectoryDomainControllersOutput) ToActiveDirectoryDomainControllersOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersOutput {
	return o
}

func (o ActiveDirectoryDomainControllersOutput) ToActiveDirectoryDomainControllersPtrOutput() ActiveDirectoryDomainControllersPtrOutput {
	return o.ToActiveDirectoryDomainControllersPtrOutputWithContext(context.Background())
}

func (o ActiveDirectoryDomainControllersOutput) ToActiveDirectoryDomainControllersPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveDirectoryDomainControllers) *ActiveDirectoryDomainControllers {
		return &v
	}).(ActiveDirectoryDomainControllersPtrOutput)
}

// Information about the Primary Domain Controller (PDC) in the AD domain.
func (o ActiveDirectoryDomainControllersOutput) PrimaryDomainController() ActiveDirectoryDomainControllerPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryDomainControllers) *ActiveDirectoryDomainController {
		return v.PrimaryDomainController
	}).(ActiveDirectoryDomainControllerPtrOutput)
}

// null
func (o ActiveDirectoryDomainControllersOutput) SecondaryDomainControllers() ActiveDirectoryDomainControllerArrayOutput {
	return o.ApplyT(func(v ActiveDirectoryDomainControllers) []ActiveDirectoryDomainController {
		return v.SecondaryDomainControllers
	}).(ActiveDirectoryDomainControllerArrayOutput)
}

type ActiveDirectoryDomainControllersPtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomainControllers)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllersPtrOutput) ToActiveDirectoryDomainControllersPtrOutput() ActiveDirectoryDomainControllersPtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllersPtrOutput) ToActiveDirectoryDomainControllersPtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersPtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllersPtrOutput) Elem() ActiveDirectoryDomainControllersOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllers) ActiveDirectoryDomainControllers {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryDomainControllers
		return ret
	}).(ActiveDirectoryDomainControllersOutput)
}

// Information about the Primary Domain Controller (PDC) in the AD domain.
func (o ActiveDirectoryDomainControllersPtrOutput) PrimaryDomainController() ActiveDirectoryDomainControllerPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllers) *ActiveDirectoryDomainController {
		if v == nil {
			return nil
		}
		return v.PrimaryDomainController
	}).(ActiveDirectoryDomainControllerPtrOutput)
}

// null
func (o ActiveDirectoryDomainControllersPtrOutput) SecondaryDomainControllers() ActiveDirectoryDomainControllerArrayOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllers) []ActiveDirectoryDomainController {
		if v == nil {
			return nil
		}
		return v.SecondaryDomainControllers
	}).(ActiveDirectoryDomainControllerArrayOutput)
}

// Details about the Active Directory domain controllers associated with this AD connector instance
type ActiveDirectoryDomainControllersResponse struct {
	// Information about the Primary Domain Controller (PDC) in the AD domain.
	PrimaryDomainController *ActiveDirectoryDomainControllerResponse `pulumi:"primaryDomainController"`
	// null
	SecondaryDomainControllers []ActiveDirectoryDomainControllerResponse `pulumi:"secondaryDomainControllers"`
}

// Details about the Active Directory domain controllers associated with this AD connector instance
type ActiveDirectoryDomainControllersResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryDomainControllersResponse)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllersResponseOutput) ToActiveDirectoryDomainControllersResponseOutput() ActiveDirectoryDomainControllersResponseOutput {
	return o
}

func (o ActiveDirectoryDomainControllersResponseOutput) ToActiveDirectoryDomainControllersResponseOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersResponseOutput {
	return o
}

// Information about the Primary Domain Controller (PDC) in the AD domain.
func (o ActiveDirectoryDomainControllersResponseOutput) PrimaryDomainController() ActiveDirectoryDomainControllerResponsePtrOutput {
	return o.ApplyT(func(v ActiveDirectoryDomainControllersResponse) *ActiveDirectoryDomainControllerResponse {
		return v.PrimaryDomainController
	}).(ActiveDirectoryDomainControllerResponsePtrOutput)
}

// null
func (o ActiveDirectoryDomainControllersResponseOutput) SecondaryDomainControllers() ActiveDirectoryDomainControllerResponseArrayOutput {
	return o.ApplyT(func(v ActiveDirectoryDomainControllersResponse) []ActiveDirectoryDomainControllerResponse {
		return v.SecondaryDomainControllers
	}).(ActiveDirectoryDomainControllerResponseArrayOutput)
}

type ActiveDirectoryDomainControllersResponsePtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainControllersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomainControllersResponse)(nil)).Elem()
}

func (o ActiveDirectoryDomainControllersResponsePtrOutput) ToActiveDirectoryDomainControllersResponsePtrOutput() ActiveDirectoryDomainControllersResponsePtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllersResponsePtrOutput) ToActiveDirectoryDomainControllersResponsePtrOutputWithContext(ctx context.Context) ActiveDirectoryDomainControllersResponsePtrOutput {
	return o
}

func (o ActiveDirectoryDomainControllersResponsePtrOutput) Elem() ActiveDirectoryDomainControllersResponseOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllersResponse) ActiveDirectoryDomainControllersResponse {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryDomainControllersResponse
		return ret
	}).(ActiveDirectoryDomainControllersResponseOutput)
}

// Information about the Primary Domain Controller (PDC) in the AD domain.
func (o ActiveDirectoryDomainControllersResponsePtrOutput) PrimaryDomainController() ActiveDirectoryDomainControllerResponsePtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllersResponse) *ActiveDirectoryDomainControllerResponse {
		if v == nil {
			return nil
		}
		return v.PrimaryDomainController
	}).(ActiveDirectoryDomainControllerResponsePtrOutput)
}

// null
func (o ActiveDirectoryDomainControllersResponsePtrOutput) SecondaryDomainControllers() ActiveDirectoryDomainControllerResponseArrayOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomainControllersResponse) []ActiveDirectoryDomainControllerResponse {
		if v == nil {
			return nil
		}
		return v.SecondaryDomainControllers
	}).(ActiveDirectoryDomainControllerResponseArrayOutput)
}

// Active Directory information that related to the resource.
type ActiveDirectoryInformation struct {
	// Keytab information that is used for the Sql Managed Instance when Active Directory authentication is used.
	KeytabInformation *KeytabInformation `pulumi:"keytabInformation"`
}

// ActiveDirectoryInformationInput is an input type that accepts ActiveDirectoryInformationArgs and ActiveDirectoryInformationOutput values.
// You can construct a concrete instance of `ActiveDirectoryInformationInput` via:
//
//	ActiveDirectoryInformationArgs{...}
type ActiveDirectoryInformationInput interface {
	pulumi.Input

	ToActiveDirectoryInformationOutput() ActiveDirectoryInformationOutput
	ToActiveDirectoryInformationOutputWithContext(context.Context) ActiveDirectoryInformationOutput
}

// Active Directory information that related to the resource.
type ActiveDirectoryInformationArgs struct {
	// Keytab information that is used for the Sql Managed Instance when Active Directory authentication is used.
	KeytabInformation KeytabInformationPtrInput `pulumi:"keytabInformation"`
}

func (ActiveDirectoryInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryInformation)(nil)).Elem()
}

func (i ActiveDirectoryInformationArgs) ToActiveDirectoryInformationOutput() ActiveDirectoryInformationOutput {
	return i.ToActiveDirectoryInformationOutputWithContext(context.Background())
}

func (i ActiveDirectoryInformationArgs) ToActiveDirectoryInformationOutputWithContext(ctx context.Context) ActiveDirectoryInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryInformationOutput)
}

func (i ActiveDirectoryInformationArgs) ToActiveDirectoryInformationPtrOutput() ActiveDirectoryInformationPtrOutput {
	return i.ToActiveDirectoryInformationPtrOutputWithContext(context.Background())
}

func (i ActiveDirectoryInformationArgs) ToActiveDirectoryInformationPtrOutputWithContext(ctx context.Context) ActiveDirectoryInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryInformationOutput).ToActiveDirectoryInformationPtrOutputWithContext(ctx)
}

// ActiveDirectoryInformationPtrInput is an input type that accepts ActiveDirectoryInformationArgs, ActiveDirectoryInformationPtr and ActiveDirectoryInformationPtrOutput values.
// You can construct a concrete instance of `ActiveDirectoryInformationPtrInput` via:
//
//	        ActiveDirectoryInformationArgs{...}
//
//	or:
//
//	        nil
type ActiveDirectoryInformationPtrInput interface {
	pulumi.Input

	ToActiveDirectoryInformationPtrOutput() ActiveDirectoryInformationPtrOutput
	ToActiveDirectoryInformationPtrOutputWithContext(context.Context) ActiveDirectoryInformationPtrOutput
}

type activeDirectoryInformationPtrType ActiveDirectoryInformationArgs

func ActiveDirectoryInformationPtr(v *ActiveDirectoryInformationArgs) ActiveDirectoryInformationPtrInput {
	return (*activeDirectoryInformationPtrType)(v)
}

func (*activeDirectoryInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryInformation)(nil)).Elem()
}

func (i *activeDirectoryInformationPtrType) ToActiveDirectoryInformationPtrOutput() ActiveDirectoryInformationPtrOutput {
	return i.ToActiveDirectoryInformationPtrOutputWithContext(context.Background())
}

func (i *activeDirectoryInformationPtrType) ToActiveDirectoryInformationPtrOutputWithContext(ctx context.Context) ActiveDirectoryInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryInformationPtrOutput)
}

// Active Directory information that related to the resource.
type ActiveDirectoryInformationOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryInformation)(nil)).Elem()
}

func (o ActiveDirectoryInformationOutput) ToActiveDirectoryInformationOutput() ActiveDirectoryInformationOutput {
	return o
}

func (o ActiveDirectoryInformationOutput) ToActiveDirectoryInformationOutputWithContext(ctx context.Context) ActiveDirectoryInformationOutput {
	return o
}

func (o ActiveDirectoryInformationOutput) ToActiveDirectoryInformationPtrOutput() ActiveDirectoryInformationPtrOutput {
	return o.ToActiveDirectoryInformationPtrOutputWithContext(context.Background())
}

func (o ActiveDirectoryInformationOutput) ToActiveDirectoryInformationPtrOutputWithContext(ctx context.Context) ActiveDirectoryInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveDirectoryInformation) *ActiveDirectoryInformation {
		return &v
	}).(ActiveDirectoryInformationPtrOutput)
}

// Keytab information that is used for the Sql Managed Instance when Active Directory authentication is used.
func (o ActiveDirectoryInformationOutput) KeytabInformation() KeytabInformationPtrOutput {
	return o.ApplyT(func(v ActiveDirectoryInformation) *KeytabInformation { return v.KeytabInformation }).(KeytabInformationPtrOutput)
}

type ActiveDirectoryInformationPtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryInformation)(nil)).Elem()
}

func (o ActiveDirectoryInformationPtrOutput) ToActiveDirectoryInformationPtrOutput() ActiveDirectoryInformationPtrOutput {
	return o
}

func (o ActiveDirectoryInformationPtrOutput) ToActiveDirectoryInformationPtrOutputWithContext(ctx context.Context) ActiveDirectoryInformationPtrOutput {
	return o
}

func (o ActiveDirectoryInformationPtrOutput) Elem() ActiveDirectoryInformationOutput {
	return o.ApplyT(func(v *ActiveDirectoryInformation) ActiveDirectoryInformation {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryInformation
		return ret
	}).(ActiveDirectoryInformationOutput)
}

// Keytab information that is used for the Sql Managed Instance when Active Directory authentication is used.
func (o ActiveDirectoryInformationPtrOutput) KeytabInformation() KeytabInformationPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryInformation) *KeytabInformation {
		if v == nil {
			return nil
		}
		return v.KeytabInformation
	}).(KeytabInformationPtrOutput)
}

// Authentication related configuration for the SQL Server Instance.
type Authentication struct {
	// Mode of authentication in SqlServer.
	Mode *string `pulumi:"mode"`
	// Entra Authentication configuration for the SQL Server Instance.
	SqlServerEntraIdentity []EntraAuthentication `pulumi:"sqlServerEntraIdentity"`
}

// AuthenticationInput is an input type that accepts AuthenticationArgs and AuthenticationOutput values.
// You can construct a concrete instance of `AuthenticationInput` via:
//
//	AuthenticationArgs{...}
type AuthenticationInput interface {
	pulumi.Input

	ToAuthenticationOutput() AuthenticationOutput
	ToAuthenticationOutputWithContext(context.Context) AuthenticationOutput
}

// Authentication related configuration for the SQL Server Instance.
type AuthenticationArgs struct {
	// Mode of authentication in SqlServer.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Entra Authentication configuration for the SQL Server Instance.
	SqlServerEntraIdentity EntraAuthenticationArrayInput `pulumi:"sqlServerEntraIdentity"`
}

func (AuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (i AuthenticationArgs) ToAuthenticationOutput() AuthenticationOutput {
	return i.ToAuthenticationOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput)
}

func (i AuthenticationArgs) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput).ToAuthenticationPtrOutputWithContext(ctx)
}

// AuthenticationPtrInput is an input type that accepts AuthenticationArgs, AuthenticationPtr and AuthenticationPtrOutput values.
// You can construct a concrete instance of `AuthenticationPtrInput` via:
//
//	        AuthenticationArgs{...}
//
//	or:
//
//	        nil
type AuthenticationPtrInput interface {
	pulumi.Input

	ToAuthenticationPtrOutput() AuthenticationPtrOutput
	ToAuthenticationPtrOutputWithContext(context.Context) AuthenticationPtrOutput
}

type authenticationPtrType AuthenticationArgs

func AuthenticationPtr(v *AuthenticationArgs) AuthenticationPtrInput {
	return (*authenticationPtrType)(v)
}

func (*authenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (i *authenticationPtrType) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i *authenticationPtrType) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationPtrOutput)
}

// Authentication related configuration for the SQL Server Instance.
type AuthenticationOutput struct{ *pulumi.OutputState }

func (AuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (o AuthenticationOutput) ToAuthenticationOutput() AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (o AuthenticationOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authentication) *Authentication {
		return &v
	}).(AuthenticationPtrOutput)
}

// Mode of authentication in SqlServer.
func (o AuthenticationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authentication) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Entra Authentication configuration for the SQL Server Instance.
func (o AuthenticationOutput) SqlServerEntraIdentity() EntraAuthenticationArrayOutput {
	return o.ApplyT(func(v Authentication) []EntraAuthentication { return v.SqlServerEntraIdentity }).(EntraAuthenticationArrayOutput)
}

type AuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) Elem() AuthenticationOutput {
	return o.ApplyT(func(v *Authentication) Authentication {
		if v != nil {
			return *v
		}
		var ret Authentication
		return ret
	}).(AuthenticationOutput)
}

// Mode of authentication in SqlServer.
func (o AuthenticationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authentication) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Entra Authentication configuration for the SQL Server Instance.
func (o AuthenticationPtrOutput) SqlServerEntraIdentity() EntraAuthenticationArrayOutput {
	return o.ApplyT(func(v *Authentication) []EntraAuthentication {
		if v == nil {
			return nil
		}
		return v.SqlServerEntraIdentity
	}).(EntraAuthenticationArrayOutput)
}

// Authentication related configuration for the SQL Server Instance.
type AuthenticationResponse struct {
	// Mode of authentication in SqlServer.
	Mode *string `pulumi:"mode"`
	// Entra Authentication configuration for the SQL Server Instance.
	SqlServerEntraIdentity []EntraAuthenticationResponse `pulumi:"sqlServerEntraIdentity"`
}

// Authentication related configuration for the SQL Server Instance.
type AuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return o
}

// Mode of authentication in SqlServer.
func (o AuthenticationResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Entra Authentication configuration for the SQL Server Instance.
func (o AuthenticationResponseOutput) SqlServerEntraIdentity() EntraAuthenticationResponseArrayOutput {
	return o.ApplyT(func(v AuthenticationResponse) []EntraAuthenticationResponse { return v.SqlServerEntraIdentity }).(EntraAuthenticationResponseArrayOutput)
}

type AuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) Elem() AuthenticationResponseOutput {
	return o.ApplyT(func(v *AuthenticationResponse) AuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationResponse
		return ret
	}).(AuthenticationResponseOutput)
}

// Mode of authentication in SqlServer.
func (o AuthenticationResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Entra Authentication configuration for the SQL Server Instance.
func (o AuthenticationResponsePtrOutput) SqlServerEntraIdentity() EntraAuthenticationResponseArrayOutput {
	return o.ApplyT(func(v *AuthenticationResponse) []EntraAuthenticationResponse {
		if v == nil {
			return nil
		}
		return v.SqlServerEntraIdentity
	}).(EntraAuthenticationResponseArrayOutput)
}

// The specifications of the availability group replica configuration
type AvailabilityGroupConfigure struct {
	// Property that determines whether a given availability replica can run in synchronous-commit mode
	AvailabilityMode *string `pulumi:"availabilityMode"`
	// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
	BackupPriority *int `pulumi:"backupPriority"`
	// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
	CertificateName *string `pulumi:"certificateName"`
	// Permitted authentication modes for the mirroring endpoint.
	EndpointAuthenticationMode *string `pulumi:"endpointAuthenticationMode"`
	// The login which will connect to the mirroring endpoint.
	EndpointConnectLogin *string `pulumi:"endpointConnectLogin"`
	// Name of the mirroring endpoint URL
	EndpointName *string `pulumi:"endpointName"`
	// Mirroring endpoint URL of availability group replica
	EndpointUrl *string `pulumi:"endpointUrl"`
	// Property to set the failover mode of the availability group replica
	FailoverMode *string `pulumi:"failoverMode"`
	// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
	PrimaryAllowConnections *PrimaryAllowConnections `pulumi:"primaryAllowConnections"`
	// Connectivity endpoint (URL) of the read only availability replica.
	ReadOnlyRoutingUrl *string `pulumi:"readOnlyRoutingUrl"`
	// Connectivity endpoint (URL) of the read write availability replica.
	ReadWriteRoutingUrl *string `pulumi:"readWriteRoutingUrl"`
	// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
	SecondaryAllowConnections *SecondaryAllowConnections `pulumi:"secondaryAllowConnections"`
	// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
	SeedingMode *SeedingMode `pulumi:"seedingMode"`
	// The time-out period of availability group session replica, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
}

// AvailabilityGroupConfigureInput is an input type that accepts AvailabilityGroupConfigureArgs and AvailabilityGroupConfigureOutput values.
// You can construct a concrete instance of `AvailabilityGroupConfigureInput` via:
//
//	AvailabilityGroupConfigureArgs{...}
type AvailabilityGroupConfigureInput interface {
	pulumi.Input

	ToAvailabilityGroupConfigureOutput() AvailabilityGroupConfigureOutput
	ToAvailabilityGroupConfigureOutputWithContext(context.Context) AvailabilityGroupConfigureOutput
}

// The specifications of the availability group replica configuration
type AvailabilityGroupConfigureArgs struct {
	// Property that determines whether a given availability replica can run in synchronous-commit mode
	AvailabilityMode pulumi.StringPtrInput `pulumi:"availabilityMode"`
	// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
	BackupPriority pulumi.IntPtrInput `pulumi:"backupPriority"`
	// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// Permitted authentication modes for the mirroring endpoint.
	EndpointAuthenticationMode pulumi.StringPtrInput `pulumi:"endpointAuthenticationMode"`
	// The login which will connect to the mirroring endpoint.
	EndpointConnectLogin pulumi.StringPtrInput `pulumi:"endpointConnectLogin"`
	// Name of the mirroring endpoint URL
	EndpointName pulumi.StringPtrInput `pulumi:"endpointName"`
	// Mirroring endpoint URL of availability group replica
	EndpointUrl pulumi.StringPtrInput `pulumi:"endpointUrl"`
	// Property to set the failover mode of the availability group replica
	FailoverMode pulumi.StringPtrInput `pulumi:"failoverMode"`
	// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
	PrimaryAllowConnections PrimaryAllowConnectionsPtrInput `pulumi:"primaryAllowConnections"`
	// Connectivity endpoint (URL) of the read only availability replica.
	ReadOnlyRoutingUrl pulumi.StringPtrInput `pulumi:"readOnlyRoutingUrl"`
	// Connectivity endpoint (URL) of the read write availability replica.
	ReadWriteRoutingUrl pulumi.StringPtrInput `pulumi:"readWriteRoutingUrl"`
	// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
	SecondaryAllowConnections SecondaryAllowConnectionsPtrInput `pulumi:"secondaryAllowConnections"`
	// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
	SeedingMode SeedingModePtrInput `pulumi:"seedingMode"`
	// The time-out period of availability group session replica, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
}

func (AvailabilityGroupConfigureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupConfigure)(nil)).Elem()
}

func (i AvailabilityGroupConfigureArgs) ToAvailabilityGroupConfigureOutput() AvailabilityGroupConfigureOutput {
	return i.ToAvailabilityGroupConfigureOutputWithContext(context.Background())
}

func (i AvailabilityGroupConfigureArgs) ToAvailabilityGroupConfigureOutputWithContext(ctx context.Context) AvailabilityGroupConfigureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityGroupConfigureOutput)
}

func (i AvailabilityGroupConfigureArgs) ToAvailabilityGroupConfigurePtrOutput() AvailabilityGroupConfigurePtrOutput {
	return i.ToAvailabilityGroupConfigurePtrOutputWithContext(context.Background())
}

func (i AvailabilityGroupConfigureArgs) ToAvailabilityGroupConfigurePtrOutputWithContext(ctx context.Context) AvailabilityGroupConfigurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityGroupConfigureOutput).ToAvailabilityGroupConfigurePtrOutputWithContext(ctx)
}

// AvailabilityGroupConfigurePtrInput is an input type that accepts AvailabilityGroupConfigureArgs, AvailabilityGroupConfigurePtr and AvailabilityGroupConfigurePtrOutput values.
// You can construct a concrete instance of `AvailabilityGroupConfigurePtrInput` via:
//
//	        AvailabilityGroupConfigureArgs{...}
//
//	or:
//
//	        nil
type AvailabilityGroupConfigurePtrInput interface {
	pulumi.Input

	ToAvailabilityGroupConfigurePtrOutput() AvailabilityGroupConfigurePtrOutput
	ToAvailabilityGroupConfigurePtrOutputWithContext(context.Context) AvailabilityGroupConfigurePtrOutput
}

type availabilityGroupConfigurePtrType AvailabilityGroupConfigureArgs

func AvailabilityGroupConfigurePtr(v *AvailabilityGroupConfigureArgs) AvailabilityGroupConfigurePtrInput {
	return (*availabilityGroupConfigurePtrType)(v)
}

func (*availabilityGroupConfigurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupConfigure)(nil)).Elem()
}

func (i *availabilityGroupConfigurePtrType) ToAvailabilityGroupConfigurePtrOutput() AvailabilityGroupConfigurePtrOutput {
	return i.ToAvailabilityGroupConfigurePtrOutputWithContext(context.Background())
}

func (i *availabilityGroupConfigurePtrType) ToAvailabilityGroupConfigurePtrOutputWithContext(ctx context.Context) AvailabilityGroupConfigurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityGroupConfigurePtrOutput)
}

// The specifications of the availability group replica configuration
type AvailabilityGroupConfigureOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupConfigureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupConfigure)(nil)).Elem()
}

func (o AvailabilityGroupConfigureOutput) ToAvailabilityGroupConfigureOutput() AvailabilityGroupConfigureOutput {
	return o
}

func (o AvailabilityGroupConfigureOutput) ToAvailabilityGroupConfigureOutputWithContext(ctx context.Context) AvailabilityGroupConfigureOutput {
	return o
}

func (o AvailabilityGroupConfigureOutput) ToAvailabilityGroupConfigurePtrOutput() AvailabilityGroupConfigurePtrOutput {
	return o.ToAvailabilityGroupConfigurePtrOutputWithContext(context.Background())
}

func (o AvailabilityGroupConfigureOutput) ToAvailabilityGroupConfigurePtrOutputWithContext(ctx context.Context) AvailabilityGroupConfigurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityGroupConfigure) *AvailabilityGroupConfigure {
		return &v
	}).(AvailabilityGroupConfigurePtrOutput)
}

// Property that determines whether a given availability replica can run in synchronous-commit mode
func (o AvailabilityGroupConfigureOutput) AvailabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.AvailabilityMode }).(pulumi.StringPtrOutput)
}

// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
func (o AvailabilityGroupConfigureOutput) BackupPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *int { return v.BackupPriority }).(pulumi.IntPtrOutput)
}

// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
func (o AvailabilityGroupConfigureOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// Permitted authentication modes for the mirroring endpoint.
func (o AvailabilityGroupConfigureOutput) EndpointAuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.EndpointAuthenticationMode }).(pulumi.StringPtrOutput)
}

// The login which will connect to the mirroring endpoint.
func (o AvailabilityGroupConfigureOutput) EndpointConnectLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.EndpointConnectLogin }).(pulumi.StringPtrOutput)
}

// Name of the mirroring endpoint URL
func (o AvailabilityGroupConfigureOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// Mirroring endpoint URL of availability group replica
func (o AvailabilityGroupConfigureOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.EndpointUrl }).(pulumi.StringPtrOutput)
}

// Property to set the failover mode of the availability group replica
func (o AvailabilityGroupConfigureOutput) FailoverMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.FailoverMode }).(pulumi.StringPtrOutput)
}

// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
func (o AvailabilityGroupConfigureOutput) PrimaryAllowConnections() PrimaryAllowConnectionsPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *PrimaryAllowConnections { return v.PrimaryAllowConnections }).(PrimaryAllowConnectionsPtrOutput)
}

// Connectivity endpoint (URL) of the read only availability replica.
func (o AvailabilityGroupConfigureOutput) ReadOnlyRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.ReadOnlyRoutingUrl }).(pulumi.StringPtrOutput)
}

// Connectivity endpoint (URL) of the read write availability replica.
func (o AvailabilityGroupConfigureOutput) ReadWriteRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *string { return v.ReadWriteRoutingUrl }).(pulumi.StringPtrOutput)
}

// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
func (o AvailabilityGroupConfigureOutput) SecondaryAllowConnections() SecondaryAllowConnectionsPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *SecondaryAllowConnections { return v.SecondaryAllowConnections }).(SecondaryAllowConnectionsPtrOutput)
}

// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
func (o AvailabilityGroupConfigureOutput) SeedingMode() SeedingModePtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *SeedingMode { return v.SeedingMode }).(SeedingModePtrOutput)
}

// The time-out period of availability group session replica, in seconds.
func (o AvailabilityGroupConfigureOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigure) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

type AvailabilityGroupConfigurePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupConfigurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupConfigure)(nil)).Elem()
}

func (o AvailabilityGroupConfigurePtrOutput) ToAvailabilityGroupConfigurePtrOutput() AvailabilityGroupConfigurePtrOutput {
	return o
}

func (o AvailabilityGroupConfigurePtrOutput) ToAvailabilityGroupConfigurePtrOutputWithContext(ctx context.Context) AvailabilityGroupConfigurePtrOutput {
	return o
}

func (o AvailabilityGroupConfigurePtrOutput) Elem() AvailabilityGroupConfigureOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) AvailabilityGroupConfigure {
		if v != nil {
			return *v
		}
		var ret AvailabilityGroupConfigure
		return ret
	}).(AvailabilityGroupConfigureOutput)
}

// Property that determines whether a given availability replica can run in synchronous-commit mode
func (o AvailabilityGroupConfigurePtrOutput) AvailabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityMode
	}).(pulumi.StringPtrOutput)
}

// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
func (o AvailabilityGroupConfigurePtrOutput) BackupPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *int {
		if v == nil {
			return nil
		}
		return v.BackupPriority
	}).(pulumi.IntPtrOutput)
}

// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
func (o AvailabilityGroupConfigurePtrOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// Permitted authentication modes for the mirroring endpoint.
func (o AvailabilityGroupConfigurePtrOutput) EndpointAuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.EndpointAuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// The login which will connect to the mirroring endpoint.
func (o AvailabilityGroupConfigurePtrOutput) EndpointConnectLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.EndpointConnectLogin
	}).(pulumi.StringPtrOutput)
}

// Name of the mirroring endpoint URL
func (o AvailabilityGroupConfigurePtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Mirroring endpoint URL of availability group replica
func (o AvailabilityGroupConfigurePtrOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.EndpointUrl
	}).(pulumi.StringPtrOutput)
}

// Property to set the failover mode of the availability group replica
func (o AvailabilityGroupConfigurePtrOutput) FailoverMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.FailoverMode
	}).(pulumi.StringPtrOutput)
}

// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
func (o AvailabilityGroupConfigurePtrOutput) PrimaryAllowConnections() PrimaryAllowConnectionsPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *PrimaryAllowConnections {
		if v == nil {
			return nil
		}
		return v.PrimaryAllowConnections
	}).(PrimaryAllowConnectionsPtrOutput)
}

// Connectivity endpoint (URL) of the read only availability replica.
func (o AvailabilityGroupConfigurePtrOutput) ReadOnlyRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRoutingUrl
	}).(pulumi.StringPtrOutput)
}

// Connectivity endpoint (URL) of the read write availability replica.
func (o AvailabilityGroupConfigurePtrOutput) ReadWriteRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *string {
		if v == nil {
			return nil
		}
		return v.ReadWriteRoutingUrl
	}).(pulumi.StringPtrOutput)
}

// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
func (o AvailabilityGroupConfigurePtrOutput) SecondaryAllowConnections() SecondaryAllowConnectionsPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *SecondaryAllowConnections {
		if v == nil {
			return nil
		}
		return v.SecondaryAllowConnections
	}).(SecondaryAllowConnectionsPtrOutput)
}

// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
func (o AvailabilityGroupConfigurePtrOutput) SeedingMode() SeedingModePtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *SeedingMode {
		if v == nil {
			return nil
		}
		return v.SeedingMode
	}).(SeedingModePtrOutput)
}

// The time-out period of availability group session replica, in seconds.
func (o AvailabilityGroupConfigurePtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigure) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

// The specifications of the availability group replica configuration
type AvailabilityGroupConfigureResponse struct {
	// Property that determines whether a given availability replica can run in synchronous-commit mode
	AvailabilityMode *string `pulumi:"availabilityMode"`
	// The Availability Synchronization mode of the availability group replica.
	AvailabilityModeDescription string `pulumi:"availabilityModeDescription"`
	// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
	BackupPriority *int `pulumi:"backupPriority"`
	// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
	CertificateName *string `pulumi:"certificateName"`
	// Permitted authentication modes for the mirroring endpoint.
	EndpointAuthenticationMode *string `pulumi:"endpointAuthenticationMode"`
	// The login which will connect to the mirroring endpoint.
	EndpointConnectLogin *string `pulumi:"endpointConnectLogin"`
	// Name of the mirroring endpoint URL
	EndpointName *string `pulumi:"endpointName"`
	// Mirroring endpoint URL of availability group replica
	EndpointUrl *string `pulumi:"endpointUrl"`
	// Property to set the failover mode of the availability group replica
	FailoverMode *string `pulumi:"failoverMode"`
	// The failover mode of the availability group replica.
	FailoverModeDescription string `pulumi:"failoverModeDescription"`
	// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
	PrimaryAllowConnections *string `pulumi:"primaryAllowConnections"`
	// Whether the availability allows all connections or only read-write connections.
	PrimaryRoleAllowConnectionsDescription string `pulumi:"primaryRoleAllowConnectionsDescription"`
	// Connectivity endpoint (URL) of the read only availability replica.
	ReadOnlyRoutingUrl *string `pulumi:"readOnlyRoutingUrl"`
	// Connectivity endpoint (URL) of the read write availability replica.
	ReadWriteRoutingUrl *string `pulumi:"readWriteRoutingUrl"`
	// Date that the replica was created.
	ReplicaCreateDate string `pulumi:"replicaCreateDate"`
	// Date that the replica was modified.
	ReplicaModifyDate string `pulumi:"replicaModifyDate"`
	// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
	SecondaryAllowConnections *string `pulumi:"secondaryAllowConnections"`
	// Whether an availability replica that is performing the secondary role (that is, a secondary replica) can accept connections from clients.
	SecondaryRoleAllowConnectionsDescription string `pulumi:"secondaryRoleAllowConnectionsDescription"`
	// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
	SeedingMode *string `pulumi:"seedingMode"`
	// Describes seeding mode.
	SeedingModeDescription string `pulumi:"seedingModeDescription"`
	// The time-out period of availability group session replica, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
}

// The specifications of the availability group replica configuration
type AvailabilityGroupConfigureResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupConfigureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupConfigureResponse)(nil)).Elem()
}

func (o AvailabilityGroupConfigureResponseOutput) ToAvailabilityGroupConfigureResponseOutput() AvailabilityGroupConfigureResponseOutput {
	return o
}

func (o AvailabilityGroupConfigureResponseOutput) ToAvailabilityGroupConfigureResponseOutputWithContext(ctx context.Context) AvailabilityGroupConfigureResponseOutput {
	return o
}

// Property that determines whether a given availability replica can run in synchronous-commit mode
func (o AvailabilityGroupConfigureResponseOutput) AvailabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.AvailabilityMode }).(pulumi.StringPtrOutput)
}

// The Availability Synchronization mode of the availability group replica.
func (o AvailabilityGroupConfigureResponseOutput) AvailabilityModeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.AvailabilityModeDescription }).(pulumi.StringOutput)
}

// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
func (o AvailabilityGroupConfigureResponseOutput) BackupPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *int { return v.BackupPriority }).(pulumi.IntPtrOutput)
}

// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
func (o AvailabilityGroupConfigureResponseOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// Permitted authentication modes for the mirroring endpoint.
func (o AvailabilityGroupConfigureResponseOutput) EndpointAuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.EndpointAuthenticationMode }).(pulumi.StringPtrOutput)
}

// The login which will connect to the mirroring endpoint.
func (o AvailabilityGroupConfigureResponseOutput) EndpointConnectLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.EndpointConnectLogin }).(pulumi.StringPtrOutput)
}

// Name of the mirroring endpoint URL
func (o AvailabilityGroupConfigureResponseOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// Mirroring endpoint URL of availability group replica
func (o AvailabilityGroupConfigureResponseOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.EndpointUrl }).(pulumi.StringPtrOutput)
}

// Property to set the failover mode of the availability group replica
func (o AvailabilityGroupConfigureResponseOutput) FailoverMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.FailoverMode }).(pulumi.StringPtrOutput)
}

// The failover mode of the availability group replica.
func (o AvailabilityGroupConfigureResponseOutput) FailoverModeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.FailoverModeDescription }).(pulumi.StringOutput)
}

// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
func (o AvailabilityGroupConfigureResponseOutput) PrimaryAllowConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.PrimaryAllowConnections }).(pulumi.StringPtrOutput)
}

// Whether the availability allows all connections or only read-write connections.
func (o AvailabilityGroupConfigureResponseOutput) PrimaryRoleAllowConnectionsDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.PrimaryRoleAllowConnectionsDescription }).(pulumi.StringOutput)
}

// Connectivity endpoint (URL) of the read only availability replica.
func (o AvailabilityGroupConfigureResponseOutput) ReadOnlyRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.ReadOnlyRoutingUrl }).(pulumi.StringPtrOutput)
}

// Connectivity endpoint (URL) of the read write availability replica.
func (o AvailabilityGroupConfigureResponseOutput) ReadWriteRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.ReadWriteRoutingUrl }).(pulumi.StringPtrOutput)
}

// Date that the replica was created.
func (o AvailabilityGroupConfigureResponseOutput) ReplicaCreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.ReplicaCreateDate }).(pulumi.StringOutput)
}

// Date that the replica was modified.
func (o AvailabilityGroupConfigureResponseOutput) ReplicaModifyDate() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.ReplicaModifyDate }).(pulumi.StringOutput)
}

// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
func (o AvailabilityGroupConfigureResponseOutput) SecondaryAllowConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.SecondaryAllowConnections }).(pulumi.StringPtrOutput)
}

// Whether an availability replica that is performing the secondary role (that is, a secondary replica) can accept connections from clients.
func (o AvailabilityGroupConfigureResponseOutput) SecondaryRoleAllowConnectionsDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.SecondaryRoleAllowConnectionsDescription }).(pulumi.StringOutput)
}

// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
func (o AvailabilityGroupConfigureResponseOutput) SeedingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *string { return v.SeedingMode }).(pulumi.StringPtrOutput)
}

// Describes seeding mode.
func (o AvailabilityGroupConfigureResponseOutput) SeedingModeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) string { return v.SeedingModeDescription }).(pulumi.StringOutput)
}

// The time-out period of availability group session replica, in seconds.
func (o AvailabilityGroupConfigureResponseOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupConfigureResponse) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

type AvailabilityGroupConfigureResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupConfigureResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupConfigureResponse)(nil)).Elem()
}

func (o AvailabilityGroupConfigureResponsePtrOutput) ToAvailabilityGroupConfigureResponsePtrOutput() AvailabilityGroupConfigureResponsePtrOutput {
	return o
}

func (o AvailabilityGroupConfigureResponsePtrOutput) ToAvailabilityGroupConfigureResponsePtrOutputWithContext(ctx context.Context) AvailabilityGroupConfigureResponsePtrOutput {
	return o
}

func (o AvailabilityGroupConfigureResponsePtrOutput) Elem() AvailabilityGroupConfigureResponseOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) AvailabilityGroupConfigureResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityGroupConfigureResponse
		return ret
	}).(AvailabilityGroupConfigureResponseOutput)
}

// Property that determines whether a given availability replica can run in synchronous-commit mode
func (o AvailabilityGroupConfigureResponsePtrOutput) AvailabilityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityMode
	}).(pulumi.StringPtrOutput)
}

// The Availability Synchronization mode of the availability group replica.
func (o AvailabilityGroupConfigureResponsePtrOutput) AvailabilityModeDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AvailabilityModeDescription
	}).(pulumi.StringPtrOutput)
}

// Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group.
func (o AvailabilityGroupConfigureResponsePtrOutput) BackupPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackupPriority
	}).(pulumi.IntPtrOutput)
}

// Name of certificate to use for authentication. Required if any CERTIFICATE authentication modes are specified.
func (o AvailabilityGroupConfigureResponsePtrOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// Permitted authentication modes for the mirroring endpoint.
func (o AvailabilityGroupConfigureResponsePtrOutput) EndpointAuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointAuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// The login which will connect to the mirroring endpoint.
func (o AvailabilityGroupConfigureResponsePtrOutput) EndpointConnectLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointConnectLogin
	}).(pulumi.StringPtrOutput)
}

// Name of the mirroring endpoint URL
func (o AvailabilityGroupConfigureResponsePtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Mirroring endpoint URL of availability group replica
func (o AvailabilityGroupConfigureResponsePtrOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointUrl
	}).(pulumi.StringPtrOutput)
}

// Property to set the failover mode of the availability group replica
func (o AvailabilityGroupConfigureResponsePtrOutput) FailoverMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.FailoverMode
	}).(pulumi.StringPtrOutput)
}

// The failover mode of the availability group replica.
func (o AvailabilityGroupConfigureResponsePtrOutput) FailoverModeDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FailoverModeDescription
	}).(pulumi.StringPtrOutput)
}

// Whether the primary replica should allow all connections or only READ_WRITE connections (disallowing ReadOnly connections)
func (o AvailabilityGroupConfigureResponsePtrOutput) PrimaryAllowConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryAllowConnections
	}).(pulumi.StringPtrOutput)
}

// Whether the availability allows all connections or only read-write connections.
func (o AvailabilityGroupConfigureResponsePtrOutput) PrimaryRoleAllowConnectionsDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryRoleAllowConnectionsDescription
	}).(pulumi.StringPtrOutput)
}

// Connectivity endpoint (URL) of the read only availability replica.
func (o AvailabilityGroupConfigureResponsePtrOutput) ReadOnlyRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRoutingUrl
	}).(pulumi.StringPtrOutput)
}

// Connectivity endpoint (URL) of the read write availability replica.
func (o AvailabilityGroupConfigureResponsePtrOutput) ReadWriteRoutingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReadWriteRoutingUrl
	}).(pulumi.StringPtrOutput)
}

// Date that the replica was created.
func (o AvailabilityGroupConfigureResponsePtrOutput) ReplicaCreateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReplicaCreateDate
	}).(pulumi.StringPtrOutput)
}

// Date that the replica was modified.
func (o AvailabilityGroupConfigureResponsePtrOutput) ReplicaModifyDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReplicaModifyDate
	}).(pulumi.StringPtrOutput)
}

// Whether the secondary replica should allow all connections, no connections, or only ReadOnly connections.
func (o AvailabilityGroupConfigureResponsePtrOutput) SecondaryAllowConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryAllowConnections
	}).(pulumi.StringPtrOutput)
}

// Whether an availability replica that is performing the secondary role (that is, a secondary replica) can accept connections from clients.
func (o AvailabilityGroupConfigureResponsePtrOutput) SecondaryRoleAllowConnectionsDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryRoleAllowConnectionsDescription
	}).(pulumi.StringPtrOutput)
}

// Specifies how the secondary replica will be initially seeded. AUTOMATIC enables direct seeding. This method will seed the secondary replica over the network. This method does not require you to backup and restore a copy of the primary database on the replica. MANUAL specifies manual seeding (default). This method requires you to create a backup of the database on the primary replica and manually restore that backup on the secondary replica.
func (o AvailabilityGroupConfigureResponsePtrOutput) SeedingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return v.SeedingMode
	}).(pulumi.StringPtrOutput)
}

// Describes seeding mode.
func (o AvailabilityGroupConfigureResponsePtrOutput) SeedingModeDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SeedingModeDescription
	}).(pulumi.StringPtrOutput)
}

// The time-out period of availability group session replica, in seconds.
func (o AvailabilityGroupConfigureResponsePtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupConfigureResponse) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

// The specifications of the availability group state
type AvailabilityGroupInfo struct {
	// Specifies whether this is a basic availability group.
	BasicFeatures *bool `pulumi:"basicFeatures"`
	// Specifies whether the availability group supports failover for database health conditions.
	DbFailover *bool `pulumi:"dbFailover"`
	// Specifies whether DTC support has been enabled for this availability group.
	DtcSupport *bool `pulumi:"dtcSupport"`
	// User-defined failure condition level under which an automatic failover must be triggered.
	FailureConditionLevel *int `pulumi:"failureConditionLevel"`
	// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
	HealthCheckTimeout *int `pulumi:"healthCheckTimeout"`
	// SQL Server availability group contained system databases.
	IsContained *bool `pulumi:"isContained"`
	// Specifies whether this is a distributed availability group.
	IsDistributed *bool `pulumi:"isDistributed"`
	// The listener for the sql server availability group
	Listener *SqlAvailabilityGroupStaticIPListenerProperties `pulumi:"listener"`
	// The number of secondary replicas that must be in a synchronized state for a commit to complete.
	RequiredSynchronizedSecondariesToCommit *int `pulumi:"requiredSynchronizedSecondariesToCommit"`
}

// AvailabilityGroupInfoInput is an input type that accepts AvailabilityGroupInfoArgs and AvailabilityGroupInfoOutput values.
// You can construct a concrete instance of `AvailabilityGroupInfoInput` via:
//
//	AvailabilityGroupInfoArgs{...}
type AvailabilityGroupInfoInput interface {
	pulumi.Input

	ToAvailabilityGroupInfoOutput() AvailabilityGroupInfoOutput
	ToAvailabilityGroupInfoOutputWithContext(context.Context) AvailabilityGroupInfoOutput
}

// The specifications of the availability group state
type AvailabilityGroupInfoArgs struct {
	// Specifies whether this is a basic availability group.
	BasicFeatures pulumi.BoolPtrInput `pulumi:"basicFeatures"`
	// Specifies whether the availability group supports failover for database health conditions.
	DbFailover pulumi.BoolPtrInput `pulumi:"dbFailover"`
	// Specifies whether DTC support has been enabled for this availability group.
	DtcSupport pulumi.BoolPtrInput `pulumi:"dtcSupport"`
	// User-defined failure condition level under which an automatic failover must be triggered.
	FailureConditionLevel pulumi.IntPtrInput `pulumi:"failureConditionLevel"`
	// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
	HealthCheckTimeout pulumi.IntPtrInput `pulumi:"healthCheckTimeout"`
	// SQL Server availability group contained system databases.
	IsContained pulumi.BoolPtrInput `pulumi:"isContained"`
	// Specifies whether this is a distributed availability group.
	IsDistributed pulumi.BoolPtrInput `pulumi:"isDistributed"`
	// The listener for the sql server availability group
	Listener SqlAvailabilityGroupStaticIPListenerPropertiesPtrInput `pulumi:"listener"`
	// The number of secondary replicas that must be in a synchronized state for a commit to complete.
	RequiredSynchronizedSecondariesToCommit pulumi.IntPtrInput `pulumi:"requiredSynchronizedSecondariesToCommit"`
}

func (AvailabilityGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupInfo)(nil)).Elem()
}

func (i AvailabilityGroupInfoArgs) ToAvailabilityGroupInfoOutput() AvailabilityGroupInfoOutput {
	return i.ToAvailabilityGroupInfoOutputWithContext(context.Background())
}

func (i AvailabilityGroupInfoArgs) ToAvailabilityGroupInfoOutputWithContext(ctx context.Context) AvailabilityGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityGroupInfoOutput)
}

func (i AvailabilityGroupInfoArgs) ToAvailabilityGroupInfoPtrOutput() AvailabilityGroupInfoPtrOutput {
	return i.ToAvailabilityGroupInfoPtrOutputWithContext(context.Background())
}

func (i AvailabilityGroupInfoArgs) ToAvailabilityGroupInfoPtrOutputWithContext(ctx context.Context) AvailabilityGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityGroupInfoOutput).ToAvailabilityGroupInfoPtrOutputWithContext(ctx)
}

// AvailabilityGroupInfoPtrInput is an input type that accepts AvailabilityGroupInfoArgs, AvailabilityGroupInfoPtr and AvailabilityGroupInfoPtrOutput values.
// You can construct a concrete instance of `AvailabilityGroupInfoPtrInput` via:
//
//	        AvailabilityGroupInfoArgs{...}
//
//	or:
//
//	        nil
type AvailabilityGroupInfoPtrInput interface {
	pulumi.Input

	ToAvailabilityGroupInfoPtrOutput() AvailabilityGroupInfoPtrOutput
	ToAvailabilityGroupInfoPtrOutputWithContext(context.Context) AvailabilityGroupInfoPtrOutput
}

type availabilityGroupInfoPtrType AvailabilityGroupInfoArgs

func AvailabilityGroupInfoPtr(v *AvailabilityGroupInfoArgs) AvailabilityGroupInfoPtrInput {
	return (*availabilityGroupInfoPtrType)(v)
}

func (*availabilityGroupInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupInfo)(nil)).Elem()
}

func (i *availabilityGroupInfoPtrType) ToAvailabilityGroupInfoPtrOutput() AvailabilityGroupInfoPtrOutput {
	return i.ToAvailabilityGroupInfoPtrOutputWithContext(context.Background())
}

func (i *availabilityGroupInfoPtrType) ToAvailabilityGroupInfoPtrOutputWithContext(ctx context.Context) AvailabilityGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityGroupInfoPtrOutput)
}

// The specifications of the availability group state
type AvailabilityGroupInfoOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupInfo)(nil)).Elem()
}

func (o AvailabilityGroupInfoOutput) ToAvailabilityGroupInfoOutput() AvailabilityGroupInfoOutput {
	return o
}

func (o AvailabilityGroupInfoOutput) ToAvailabilityGroupInfoOutputWithContext(ctx context.Context) AvailabilityGroupInfoOutput {
	return o
}

func (o AvailabilityGroupInfoOutput) ToAvailabilityGroupInfoPtrOutput() AvailabilityGroupInfoPtrOutput {
	return o.ToAvailabilityGroupInfoPtrOutputWithContext(context.Background())
}

func (o AvailabilityGroupInfoOutput) ToAvailabilityGroupInfoPtrOutputWithContext(ctx context.Context) AvailabilityGroupInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityGroupInfo) *AvailabilityGroupInfo {
		return &v
	}).(AvailabilityGroupInfoPtrOutput)
}

// Specifies whether this is a basic availability group.
func (o AvailabilityGroupInfoOutput) BasicFeatures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *bool { return v.BasicFeatures }).(pulumi.BoolPtrOutput)
}

// Specifies whether the availability group supports failover for database health conditions.
func (o AvailabilityGroupInfoOutput) DbFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *bool { return v.DbFailover }).(pulumi.BoolPtrOutput)
}

// Specifies whether DTC support has been enabled for this availability group.
func (o AvailabilityGroupInfoOutput) DtcSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *bool { return v.DtcSupport }).(pulumi.BoolPtrOutput)
}

// User-defined failure condition level under which an automatic failover must be triggered.
func (o AvailabilityGroupInfoOutput) FailureConditionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *int { return v.FailureConditionLevel }).(pulumi.IntPtrOutput)
}

// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
func (o AvailabilityGroupInfoOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *int { return v.HealthCheckTimeout }).(pulumi.IntPtrOutput)
}

// SQL Server availability group contained system databases.
func (o AvailabilityGroupInfoOutput) IsContained() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *bool { return v.IsContained }).(pulumi.BoolPtrOutput)
}

// Specifies whether this is a distributed availability group.
func (o AvailabilityGroupInfoOutput) IsDistributed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *bool { return v.IsDistributed }).(pulumi.BoolPtrOutput)
}

// The listener for the sql server availability group
func (o AvailabilityGroupInfoOutput) Listener() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *SqlAvailabilityGroupStaticIPListenerProperties { return v.Listener }).(SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput)
}

// The number of secondary replicas that must be in a synchronized state for a commit to complete.
func (o AvailabilityGroupInfoOutput) RequiredSynchronizedSecondariesToCommit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfo) *int { return v.RequiredSynchronizedSecondariesToCommit }).(pulumi.IntPtrOutput)
}

type AvailabilityGroupInfoPtrOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupInfo)(nil)).Elem()
}

func (o AvailabilityGroupInfoPtrOutput) ToAvailabilityGroupInfoPtrOutput() AvailabilityGroupInfoPtrOutput {
	return o
}

func (o AvailabilityGroupInfoPtrOutput) ToAvailabilityGroupInfoPtrOutputWithContext(ctx context.Context) AvailabilityGroupInfoPtrOutput {
	return o
}

func (o AvailabilityGroupInfoPtrOutput) Elem() AvailabilityGroupInfoOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) AvailabilityGroupInfo {
		if v != nil {
			return *v
		}
		var ret AvailabilityGroupInfo
		return ret
	}).(AvailabilityGroupInfoOutput)
}

// Specifies whether this is a basic availability group.
func (o AvailabilityGroupInfoPtrOutput) BasicFeatures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *bool {
		if v == nil {
			return nil
		}
		return v.BasicFeatures
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the availability group supports failover for database health conditions.
func (o AvailabilityGroupInfoPtrOutput) DbFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *bool {
		if v == nil {
			return nil
		}
		return v.DbFailover
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether DTC support has been enabled for this availability group.
func (o AvailabilityGroupInfoPtrOutput) DtcSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *bool {
		if v == nil {
			return nil
		}
		return v.DtcSupport
	}).(pulumi.BoolPtrOutput)
}

// User-defined failure condition level under which an automatic failover must be triggered.
func (o AvailabilityGroupInfoPtrOutput) FailureConditionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *int {
		if v == nil {
			return nil
		}
		return v.FailureConditionLevel
	}).(pulumi.IntPtrOutput)
}

// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
func (o AvailabilityGroupInfoPtrOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckTimeout
	}).(pulumi.IntPtrOutput)
}

// SQL Server availability group contained system databases.
func (o AvailabilityGroupInfoPtrOutput) IsContained() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsContained
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether this is a distributed availability group.
func (o AvailabilityGroupInfoPtrOutput) IsDistributed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsDistributed
	}).(pulumi.BoolPtrOutput)
}

// The listener for the sql server availability group
func (o AvailabilityGroupInfoPtrOutput) Listener() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *SqlAvailabilityGroupStaticIPListenerProperties {
		if v == nil {
			return nil
		}
		return v.Listener
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput)
}

// The number of secondary replicas that must be in a synchronized state for a commit to complete.
func (o AvailabilityGroupInfoPtrOutput) RequiredSynchronizedSecondariesToCommit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfo) *int {
		if v == nil {
			return nil
		}
		return v.RequiredSynchronizedSecondariesToCommit
	}).(pulumi.IntPtrOutput)
}

// The specifications of the availability group state
type AvailabilityGroupInfoResponse struct {
	// Preferred location for performing backups on the availability databases in this availability group.
	AutomatedBackupPreferenceDescription string `pulumi:"automatedBackupPreferenceDescription"`
	// Specifies whether this is a basic availability group.
	BasicFeatures *bool `pulumi:"basicFeatures"`
	// SQL Server availability group cluster type description
	ClusterTypeDescription string `pulumi:"clusterTypeDescription"`
	// Specifies whether the availability group supports failover for database health conditions.
	DbFailover *bool `pulumi:"dbFailover"`
	// Specifies whether DTC support has been enabled for this availability group.
	DtcSupport *bool `pulumi:"dtcSupport"`
	// User-defined failure condition level under which an automatic failover must be triggered.
	FailureConditionLevel *int `pulumi:"failureConditionLevel"`
	// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
	HealthCheckTimeout *int `pulumi:"healthCheckTimeout"`
	// SQL Server availability group contained system databases.
	IsContained *bool `pulumi:"isContained"`
	// Specifies whether this is a distributed availability group.
	IsDistributed *bool `pulumi:"isDistributed"`
	// The listener for the sql server availability group
	Listener *SqlAvailabilityGroupStaticIPListenerPropertiesResponse `pulumi:"listener"`
	// Indicates the recovery health of the primary replica.
	PrimaryRecoveryHealthDescription string `pulumi:"primaryRecoveryHealthDescription"`
	// Name of the server instance that is hosting the current primary replica.
	PrimaryReplica         string `pulumi:"primaryReplica"`
	ReplicationPartnerType string `pulumi:"replicationPartnerType"`
	// The number of secondary replicas that must be in a synchronized state for a commit to complete.
	RequiredSynchronizedSecondariesToCommit *int `pulumi:"requiredSynchronizedSecondariesToCommit"`
	// Indicates the recovery health of a secondary replica.
	SecondaryRecoveryHealthDescription string `pulumi:"secondaryRecoveryHealthDescription"`
	// Reflects a roll-up of the synchronization health of all availability replicas in the availability group.
	SynchronizationHealthDescription string `pulumi:"synchronizationHealthDescription"`
	// SQL Server availability group current version.
	Version int `pulumi:"version"`
}

// The specifications of the availability group state
type AvailabilityGroupInfoResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupInfoResponse)(nil)).Elem()
}

func (o AvailabilityGroupInfoResponseOutput) ToAvailabilityGroupInfoResponseOutput() AvailabilityGroupInfoResponseOutput {
	return o
}

func (o AvailabilityGroupInfoResponseOutput) ToAvailabilityGroupInfoResponseOutputWithContext(ctx context.Context) AvailabilityGroupInfoResponseOutput {
	return o
}

// Preferred location for performing backups on the availability databases in this availability group.
func (o AvailabilityGroupInfoResponseOutput) AutomatedBackupPreferenceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.AutomatedBackupPreferenceDescription }).(pulumi.StringOutput)
}

// Specifies whether this is a basic availability group.
func (o AvailabilityGroupInfoResponseOutput) BasicFeatures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *bool { return v.BasicFeatures }).(pulumi.BoolPtrOutput)
}

// SQL Server availability group cluster type description
func (o AvailabilityGroupInfoResponseOutput) ClusterTypeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.ClusterTypeDescription }).(pulumi.StringOutput)
}

// Specifies whether the availability group supports failover for database health conditions.
func (o AvailabilityGroupInfoResponseOutput) DbFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *bool { return v.DbFailover }).(pulumi.BoolPtrOutput)
}

// Specifies whether DTC support has been enabled for this availability group.
func (o AvailabilityGroupInfoResponseOutput) DtcSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *bool { return v.DtcSupport }).(pulumi.BoolPtrOutput)
}

// User-defined failure condition level under which an automatic failover must be triggered.
func (o AvailabilityGroupInfoResponseOutput) FailureConditionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *int { return v.FailureConditionLevel }).(pulumi.IntPtrOutput)
}

// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
func (o AvailabilityGroupInfoResponseOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *int { return v.HealthCheckTimeout }).(pulumi.IntPtrOutput)
}

// SQL Server availability group contained system databases.
func (o AvailabilityGroupInfoResponseOutput) IsContained() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *bool { return v.IsContained }).(pulumi.BoolPtrOutput)
}

// Specifies whether this is a distributed availability group.
func (o AvailabilityGroupInfoResponseOutput) IsDistributed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *bool { return v.IsDistributed }).(pulumi.BoolPtrOutput)
}

// The listener for the sql server availability group
func (o AvailabilityGroupInfoResponseOutput) Listener() SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *SqlAvailabilityGroupStaticIPListenerPropertiesResponse {
		return v.Listener
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput)
}

// Indicates the recovery health of the primary replica.
func (o AvailabilityGroupInfoResponseOutput) PrimaryRecoveryHealthDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.PrimaryRecoveryHealthDescription }).(pulumi.StringOutput)
}

// Name of the server instance that is hosting the current primary replica.
func (o AvailabilityGroupInfoResponseOutput) PrimaryReplica() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.PrimaryReplica }).(pulumi.StringOutput)
}

func (o AvailabilityGroupInfoResponseOutput) ReplicationPartnerType() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.ReplicationPartnerType }).(pulumi.StringOutput)
}

// The number of secondary replicas that must be in a synchronized state for a commit to complete.
func (o AvailabilityGroupInfoResponseOutput) RequiredSynchronizedSecondariesToCommit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) *int { return v.RequiredSynchronizedSecondariesToCommit }).(pulumi.IntPtrOutput)
}

// Indicates the recovery health of a secondary replica.
func (o AvailabilityGroupInfoResponseOutput) SecondaryRecoveryHealthDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.SecondaryRecoveryHealthDescription }).(pulumi.StringOutput)
}

// Reflects a roll-up of the synchronization health of all availability replicas in the availability group.
func (o AvailabilityGroupInfoResponseOutput) SynchronizationHealthDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) string { return v.SynchronizationHealthDescription }).(pulumi.StringOutput)
}

// SQL Server availability group current version.
func (o AvailabilityGroupInfoResponseOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v AvailabilityGroupInfoResponse) int { return v.Version }).(pulumi.IntOutput)
}

type AvailabilityGroupInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupInfoResponse)(nil)).Elem()
}

func (o AvailabilityGroupInfoResponsePtrOutput) ToAvailabilityGroupInfoResponsePtrOutput() AvailabilityGroupInfoResponsePtrOutput {
	return o
}

func (o AvailabilityGroupInfoResponsePtrOutput) ToAvailabilityGroupInfoResponsePtrOutputWithContext(ctx context.Context) AvailabilityGroupInfoResponsePtrOutput {
	return o
}

func (o AvailabilityGroupInfoResponsePtrOutput) Elem() AvailabilityGroupInfoResponseOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) AvailabilityGroupInfoResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityGroupInfoResponse
		return ret
	}).(AvailabilityGroupInfoResponseOutput)
}

// Preferred location for performing backups on the availability databases in this availability group.
func (o AvailabilityGroupInfoResponsePtrOutput) AutomatedBackupPreferenceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AutomatedBackupPreferenceDescription
	}).(pulumi.StringPtrOutput)
}

// Specifies whether this is a basic availability group.
func (o AvailabilityGroupInfoResponsePtrOutput) BasicFeatures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BasicFeatures
	}).(pulumi.BoolPtrOutput)
}

// SQL Server availability group cluster type description
func (o AvailabilityGroupInfoResponsePtrOutput) ClusterTypeDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterTypeDescription
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the availability group supports failover for database health conditions.
func (o AvailabilityGroupInfoResponsePtrOutput) DbFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DbFailover
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether DTC support has been enabled for this availability group.
func (o AvailabilityGroupInfoResponsePtrOutput) DtcSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DtcSupport
	}).(pulumi.BoolPtrOutput)
}

// User-defined failure condition level under which an automatic failover must be triggered.
func (o AvailabilityGroupInfoResponsePtrOutput) FailureConditionLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.FailureConditionLevel
	}).(pulumi.IntPtrOutput)
}

// Wait time (in milliseconds) for the sp_server_diagnostics system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding.
func (o AvailabilityGroupInfoResponsePtrOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckTimeout
	}).(pulumi.IntPtrOutput)
}

// SQL Server availability group contained system databases.
func (o AvailabilityGroupInfoResponsePtrOutput) IsContained() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsContained
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether this is a distributed availability group.
func (o AvailabilityGroupInfoResponsePtrOutput) IsDistributed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsDistributed
	}).(pulumi.BoolPtrOutput)
}

// The listener for the sql server availability group
func (o AvailabilityGroupInfoResponsePtrOutput) Listener() SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *SqlAvailabilityGroupStaticIPListenerPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Listener
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput)
}

// Indicates the recovery health of the primary replica.
func (o AvailabilityGroupInfoResponsePtrOutput) PrimaryRecoveryHealthDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryRecoveryHealthDescription
	}).(pulumi.StringPtrOutput)
}

// Name of the server instance that is hosting the current primary replica.
func (o AvailabilityGroupInfoResponsePtrOutput) PrimaryReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryReplica
	}).(pulumi.StringPtrOutput)
}

func (o AvailabilityGroupInfoResponsePtrOutput) ReplicationPartnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReplicationPartnerType
	}).(pulumi.StringPtrOutput)
}

// The number of secondary replicas that must be in a synchronized state for a commit to complete.
func (o AvailabilityGroupInfoResponsePtrOutput) RequiredSynchronizedSecondariesToCommit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RequiredSynchronizedSecondariesToCommit
	}).(pulumi.IntPtrOutput)
}

// Indicates the recovery health of a secondary replica.
func (o AvailabilityGroupInfoResponsePtrOutput) SecondaryRecoveryHealthDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryRecoveryHealthDescription
	}).(pulumi.StringPtrOutput)
}

// Reflects a roll-up of the synchronization health of all availability replicas in the availability group.
func (o AvailabilityGroupInfoResponsePtrOutput) SynchronizationHealthDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SynchronizationHealthDescription
	}).(pulumi.StringPtrOutput)
}

// SQL Server availability group current version.
func (o AvailabilityGroupInfoResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.IntPtrOutput)
}

// The specifications of the availability group state
type AvailabilityGroupStateResponse struct {
	// Current Always On availability groups role of the availability group replica.
	AvailabilityGroupReplicaRole string `pulumi:"availabilityGroupReplicaRole"`
	// Whether a secondary replica is currently connected to the primary replica.
	ConnectedStateDescription string `pulumi:"connectedStateDescription"`
	// Text description of the last connection error of the availability group replica.
	LastConnectErrorDescription string `pulumi:"lastConnectErrorDescription"`
	// Date and time timestamp indicating when the last connect error occurred.
	LastConnectErrorTimestamp string `pulumi:"lastConnectErrorTimestamp"`
	// Current operational state of the availability group replica
	OperationalStateDescription string `pulumi:"operationalStateDescription"`
	// Recovery health of the availability group replica.
	RecoveryHealthDescription string `pulumi:"recoveryHealthDescription"`
	// Reflects a rollup of the database synchronization state (synchronization_state) of all joined availability databases (also known as replicas) and the availability mode of the replica (synchronous-commit or asynchronous-commit mode). The rollup will reflect the least healthy accumulated state the databases on the replica.
	SynchronizationHealthDescription string `pulumi:"synchronizationHealthDescription"`
}

// The specifications of the availability group state
type AvailabilityGroupStateResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityGroupStateResponse)(nil)).Elem()
}

func (o AvailabilityGroupStateResponseOutput) ToAvailabilityGroupStateResponseOutput() AvailabilityGroupStateResponseOutput {
	return o
}

func (o AvailabilityGroupStateResponseOutput) ToAvailabilityGroupStateResponseOutputWithContext(ctx context.Context) AvailabilityGroupStateResponseOutput {
	return o
}

// Current Always On availability groups role of the availability group replica.
func (o AvailabilityGroupStateResponseOutput) AvailabilityGroupReplicaRole() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.AvailabilityGroupReplicaRole }).(pulumi.StringOutput)
}

// Whether a secondary replica is currently connected to the primary replica.
func (o AvailabilityGroupStateResponseOutput) ConnectedStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.ConnectedStateDescription }).(pulumi.StringOutput)
}

// Text description of the last connection error of the availability group replica.
func (o AvailabilityGroupStateResponseOutput) LastConnectErrorDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.LastConnectErrorDescription }).(pulumi.StringOutput)
}

// Date and time timestamp indicating when the last connect error occurred.
func (o AvailabilityGroupStateResponseOutput) LastConnectErrorTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.LastConnectErrorTimestamp }).(pulumi.StringOutput)
}

// Current operational state of the availability group replica
func (o AvailabilityGroupStateResponseOutput) OperationalStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.OperationalStateDescription }).(pulumi.StringOutput)
}

// Recovery health of the availability group replica.
func (o AvailabilityGroupStateResponseOutput) RecoveryHealthDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.RecoveryHealthDescription }).(pulumi.StringOutput)
}

// Reflects a rollup of the database synchronization state (synchronization_state) of all joined availability databases (also known as replicas) and the availability mode of the replica (synchronous-commit or asynchronous-commit mode). The rollup will reflect the least healthy accumulated state the databases on the replica.
func (o AvailabilityGroupStateResponseOutput) SynchronizationHealthDescription() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityGroupStateResponse) string { return v.SynchronizationHealthDescription }).(pulumi.StringOutput)
}

type AvailabilityGroupStateResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityGroupStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityGroupStateResponse)(nil)).Elem()
}

func (o AvailabilityGroupStateResponsePtrOutput) ToAvailabilityGroupStateResponsePtrOutput() AvailabilityGroupStateResponsePtrOutput {
	return o
}

func (o AvailabilityGroupStateResponsePtrOutput) ToAvailabilityGroupStateResponsePtrOutputWithContext(ctx context.Context) AvailabilityGroupStateResponsePtrOutput {
	return o
}

func (o AvailabilityGroupStateResponsePtrOutput) Elem() AvailabilityGroupStateResponseOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) AvailabilityGroupStateResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityGroupStateResponse
		return ret
	}).(AvailabilityGroupStateResponseOutput)
}

// Current Always On availability groups role of the availability group replica.
func (o AvailabilityGroupStateResponsePtrOutput) AvailabilityGroupReplicaRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AvailabilityGroupReplicaRole
	}).(pulumi.StringPtrOutput)
}

// Whether a secondary replica is currently connected to the primary replica.
func (o AvailabilityGroupStateResponsePtrOutput) ConnectedStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectedStateDescription
	}).(pulumi.StringPtrOutput)
}

// Text description of the last connection error of the availability group replica.
func (o AvailabilityGroupStateResponsePtrOutput) LastConnectErrorDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastConnectErrorDescription
	}).(pulumi.StringPtrOutput)
}

// Date and time timestamp indicating when the last connect error occurred.
func (o AvailabilityGroupStateResponsePtrOutput) LastConnectErrorTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastConnectErrorTimestamp
	}).(pulumi.StringPtrOutput)
}

// Current operational state of the availability group replica
func (o AvailabilityGroupStateResponsePtrOutput) OperationalStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationalStateDescription
	}).(pulumi.StringPtrOutput)
}

// Recovery health of the availability group replica.
func (o AvailabilityGroupStateResponsePtrOutput) RecoveryHealthDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecoveryHealthDescription
	}).(pulumi.StringPtrOutput)
}

// Reflects a rollup of the database synchronization state (synchronization_state) of all joined availability databases (also known as replicas) and the availability mode of the replica (synchronous-commit or asynchronous-commit mode). The rollup will reflect the least healthy accumulated state the databases on the replica.
func (o AvailabilityGroupStateResponsePtrOutput) SynchronizationHealthDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailabilityGroupStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SynchronizationHealthDescription
	}).(pulumi.StringPtrOutput)
}

// The background job details.
type BackgroundJobResponse struct {
	// The end time of the background job.
	EndTime *string `pulumi:"endTime"`
	// The execution state of the background job.
	ExecutionState *string `pulumi:"executionState"`
	// The last execution status of the background job.
	LastExecutionStatus *string `pulumi:"lastExecutionStatus"`
	// The last execution time of the background job.
	LastExecutionTime *string `pulumi:"lastExecutionTime"`
	// The start time of the background job.
	StartTime *string `pulumi:"startTime"`
	// The state of the background job.
	State *string `pulumi:"state"`
}

// The background job details.
type BackgroundJobResponseOutput struct{ *pulumi.OutputState }

func (BackgroundJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackgroundJobResponse)(nil)).Elem()
}

func (o BackgroundJobResponseOutput) ToBackgroundJobResponseOutput() BackgroundJobResponseOutput {
	return o
}

func (o BackgroundJobResponseOutput) ToBackgroundJobResponseOutputWithContext(ctx context.Context) BackgroundJobResponseOutput {
	return o
}

// The end time of the background job.
func (o BackgroundJobResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundJobResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The execution state of the background job.
func (o BackgroundJobResponseOutput) ExecutionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundJobResponse) *string { return v.ExecutionState }).(pulumi.StringPtrOutput)
}

// The last execution status of the background job.
func (o BackgroundJobResponseOutput) LastExecutionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundJobResponse) *string { return v.LastExecutionStatus }).(pulumi.StringPtrOutput)
}

// The last execution time of the background job.
func (o BackgroundJobResponseOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundJobResponse) *string { return v.LastExecutionTime }).(pulumi.StringPtrOutput)
}

// The start time of the background job.
func (o BackgroundJobResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundJobResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The state of the background job.
func (o BackgroundJobResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackgroundJobResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type BackgroundJobResponsePtrOutput struct{ *pulumi.OutputState }

func (BackgroundJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackgroundJobResponse)(nil)).Elem()
}

func (o BackgroundJobResponsePtrOutput) ToBackgroundJobResponsePtrOutput() BackgroundJobResponsePtrOutput {
	return o
}

func (o BackgroundJobResponsePtrOutput) ToBackgroundJobResponsePtrOutputWithContext(ctx context.Context) BackgroundJobResponsePtrOutput {
	return o
}

func (o BackgroundJobResponsePtrOutput) Elem() BackgroundJobResponseOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) BackgroundJobResponse {
		if v != nil {
			return *v
		}
		var ret BackgroundJobResponse
		return ret
	}).(BackgroundJobResponseOutput)
}

// The end time of the background job.
func (o BackgroundJobResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The execution state of the background job.
func (o BackgroundJobResponsePtrOutput) ExecutionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionState
	}).(pulumi.StringPtrOutput)
}

// The last execution status of the background job.
func (o BackgroundJobResponsePtrOutput) LastExecutionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastExecutionStatus
	}).(pulumi.StringPtrOutput)
}

// The last execution time of the background job.
func (o BackgroundJobResponsePtrOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastExecutionTime
	}).(pulumi.StringPtrOutput)
}

// The start time of the background job.
func (o BackgroundJobResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The state of the background job.
func (o BackgroundJobResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackgroundJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The backup profile for the SQL server.
type BackupPolicy struct {
	// The differential backup interval in hours.
	DifferentialBackupHours *int `pulumi:"differentialBackupHours"`
	// The value indicating days between full backups.
	FullBackupDays *int `pulumi:"fullBackupDays"`
	// The retention period for all the databases in this managed instance.
	RetentionPeriodDays *int `pulumi:"retentionPeriodDays"`
	// The value indicating minutes between transaction log backups.
	TransactionLogBackupMinutes *int `pulumi:"transactionLogBackupMinutes"`
}

// BackupPolicyInput is an input type that accepts BackupPolicyArgs and BackupPolicyOutput values.
// You can construct a concrete instance of `BackupPolicyInput` via:
//
//	BackupPolicyArgs{...}
type BackupPolicyInput interface {
	pulumi.Input

	ToBackupPolicyOutput() BackupPolicyOutput
	ToBackupPolicyOutputWithContext(context.Context) BackupPolicyOutput
}

// The backup profile for the SQL server.
type BackupPolicyArgs struct {
	// The differential backup interval in hours.
	DifferentialBackupHours pulumi.IntPtrInput `pulumi:"differentialBackupHours"`
	// The value indicating days between full backups.
	FullBackupDays pulumi.IntPtrInput `pulumi:"fullBackupDays"`
	// The retention period for all the databases in this managed instance.
	RetentionPeriodDays pulumi.IntPtrInput `pulumi:"retentionPeriodDays"`
	// The value indicating minutes between transaction log backups.
	TransactionLogBackupMinutes pulumi.IntPtrInput `pulumi:"transactionLogBackupMinutes"`
}

func (BackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicy)(nil)).Elem()
}

func (i BackupPolicyArgs) ToBackupPolicyOutput() BackupPolicyOutput {
	return i.ToBackupPolicyOutputWithContext(context.Background())
}

func (i BackupPolicyArgs) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyOutput)
}

func (i BackupPolicyArgs) ToBackupPolicyPtrOutput() BackupPolicyPtrOutput {
	return i.ToBackupPolicyPtrOutputWithContext(context.Background())
}

func (i BackupPolicyArgs) ToBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyOutput).ToBackupPolicyPtrOutputWithContext(ctx)
}

// BackupPolicyPtrInput is an input type that accepts BackupPolicyArgs, BackupPolicyPtr and BackupPolicyPtrOutput values.
// You can construct a concrete instance of `BackupPolicyPtrInput` via:
//
//	        BackupPolicyArgs{...}
//
//	or:
//
//	        nil
type BackupPolicyPtrInput interface {
	pulumi.Input

	ToBackupPolicyPtrOutput() BackupPolicyPtrOutput
	ToBackupPolicyPtrOutputWithContext(context.Context) BackupPolicyPtrOutput
}

type backupPolicyPtrType BackupPolicyArgs

func BackupPolicyPtr(v *BackupPolicyArgs) BackupPolicyPtrInput {
	return (*backupPolicyPtrType)(v)
}

func (*backupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicy)(nil)).Elem()
}

func (i *backupPolicyPtrType) ToBackupPolicyPtrOutput() BackupPolicyPtrOutput {
	return i.ToBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *backupPolicyPtrType) ToBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPtrOutput)
}

// The backup profile for the SQL server.
type BackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyOutput) ToBackupPolicyOutput() BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToBackupPolicyPtrOutput() BackupPolicyPtrOutput {
	return o.ToBackupPolicyPtrOutputWithContext(context.Background())
}

func (o BackupPolicyOutput) ToBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupPolicy) *BackupPolicy {
		return &v
	}).(BackupPolicyPtrOutput)
}

// The differential backup interval in hours.
func (o BackupPolicyOutput) DifferentialBackupHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicy) *int { return v.DifferentialBackupHours }).(pulumi.IntPtrOutput)
}

// The value indicating days between full backups.
func (o BackupPolicyOutput) FullBackupDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicy) *int { return v.FullBackupDays }).(pulumi.IntPtrOutput)
}

// The retention period for all the databases in this managed instance.
func (o BackupPolicyOutput) RetentionPeriodDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicy) *int { return v.RetentionPeriodDays }).(pulumi.IntPtrOutput)
}

// The value indicating minutes between transaction log backups.
func (o BackupPolicyOutput) TransactionLogBackupMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicy) *int { return v.TransactionLogBackupMinutes }).(pulumi.IntPtrOutput)
}

type BackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyPtrOutput) ToBackupPolicyPtrOutput() BackupPolicyPtrOutput {
	return o
}

func (o BackupPolicyPtrOutput) ToBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyPtrOutput {
	return o
}

func (o BackupPolicyPtrOutput) Elem() BackupPolicyOutput {
	return o.ApplyT(func(v *BackupPolicy) BackupPolicy {
		if v != nil {
			return *v
		}
		var ret BackupPolicy
		return ret
	}).(BackupPolicyOutput)
}

// The differential backup interval in hours.
func (o BackupPolicyPtrOutput) DifferentialBackupHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.DifferentialBackupHours
	}).(pulumi.IntPtrOutput)
}

// The value indicating days between full backups.
func (o BackupPolicyPtrOutput) FullBackupDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupDays
	}).(pulumi.IntPtrOutput)
}

// The retention period for all the databases in this managed instance.
func (o BackupPolicyPtrOutput) RetentionPeriodDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodDays
	}).(pulumi.IntPtrOutput)
}

// The value indicating minutes between transaction log backups.
func (o BackupPolicyPtrOutput) TransactionLogBackupMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicy) *int {
		if v == nil {
			return nil
		}
		return v.TransactionLogBackupMinutes
	}).(pulumi.IntPtrOutput)
}

// The backup profile for the SQL server.
type BackupPolicyResponse struct {
	// The differential backup interval in hours.
	DifferentialBackupHours *int `pulumi:"differentialBackupHours"`
	// The value indicating days between full backups.
	FullBackupDays *int `pulumi:"fullBackupDays"`
	// The retention period for all the databases in this managed instance.
	RetentionPeriodDays *int `pulumi:"retentionPeriodDays"`
	// The value indicating minutes between transaction log backups.
	TransactionLogBackupMinutes *int `pulumi:"transactionLogBackupMinutes"`
}

// The backup profile for the SQL server.
type BackupPolicyResponseOutput struct{ *pulumi.OutputState }

func (BackupPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyResponse)(nil)).Elem()
}

func (o BackupPolicyResponseOutput) ToBackupPolicyResponseOutput() BackupPolicyResponseOutput {
	return o
}

func (o BackupPolicyResponseOutput) ToBackupPolicyResponseOutputWithContext(ctx context.Context) BackupPolicyResponseOutput {
	return o
}

// The differential backup interval in hours.
func (o BackupPolicyResponseOutput) DifferentialBackupHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicyResponse) *int { return v.DifferentialBackupHours }).(pulumi.IntPtrOutput)
}

// The value indicating days between full backups.
func (o BackupPolicyResponseOutput) FullBackupDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicyResponse) *int { return v.FullBackupDays }).(pulumi.IntPtrOutput)
}

// The retention period for all the databases in this managed instance.
func (o BackupPolicyResponseOutput) RetentionPeriodDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicyResponse) *int { return v.RetentionPeriodDays }).(pulumi.IntPtrOutput)
}

// The value indicating minutes between transaction log backups.
func (o BackupPolicyResponseOutput) TransactionLogBackupMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupPolicyResponse) *int { return v.TransactionLogBackupMinutes }).(pulumi.IntPtrOutput)
}

type BackupPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyResponse)(nil)).Elem()
}

func (o BackupPolicyResponsePtrOutput) ToBackupPolicyResponsePtrOutput() BackupPolicyResponsePtrOutput {
	return o
}

func (o BackupPolicyResponsePtrOutput) ToBackupPolicyResponsePtrOutputWithContext(ctx context.Context) BackupPolicyResponsePtrOutput {
	return o
}

func (o BackupPolicyResponsePtrOutput) Elem() BackupPolicyResponseOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) BackupPolicyResponse {
		if v != nil {
			return *v
		}
		var ret BackupPolicyResponse
		return ret
	}).(BackupPolicyResponseOutput)
}

// The differential backup interval in hours.
func (o BackupPolicyResponsePtrOutput) DifferentialBackupHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.DifferentialBackupHours
	}).(pulumi.IntPtrOutput)
}

// The value indicating days between full backups.
func (o BackupPolicyResponsePtrOutput) FullBackupDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupDays
	}).(pulumi.IntPtrOutput)
}

// The retention period for all the databases in this managed instance.
func (o BackupPolicyResponsePtrOutput) RetentionPeriodDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodDays
	}).(pulumi.IntPtrOutput)
}

// The value indicating minutes between transaction log backups.
func (o BackupPolicyResponsePtrOutput) TransactionLogBackupMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.TransactionLogBackupMinutes
	}).(pulumi.IntPtrOutput)
}

// Username and password for basic login authentication.
type BasicLoginInformation struct {
	// Login password.
	Password *string `pulumi:"password"`
	// Login username.
	Username *string `pulumi:"username"`
}

// BasicLoginInformationInput is an input type that accepts BasicLoginInformationArgs and BasicLoginInformationOutput values.
// You can construct a concrete instance of `BasicLoginInformationInput` via:
//
//	BasicLoginInformationArgs{...}
type BasicLoginInformationInput interface {
	pulumi.Input

	ToBasicLoginInformationOutput() BasicLoginInformationOutput
	ToBasicLoginInformationOutputWithContext(context.Context) BasicLoginInformationOutput
}

// Username and password for basic login authentication.
type BasicLoginInformationArgs struct {
	// Login password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Login username.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (BasicLoginInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicLoginInformation)(nil)).Elem()
}

func (i BasicLoginInformationArgs) ToBasicLoginInformationOutput() BasicLoginInformationOutput {
	return i.ToBasicLoginInformationOutputWithContext(context.Background())
}

func (i BasicLoginInformationArgs) ToBasicLoginInformationOutputWithContext(ctx context.Context) BasicLoginInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicLoginInformationOutput)
}

func (i BasicLoginInformationArgs) ToBasicLoginInformationPtrOutput() BasicLoginInformationPtrOutput {
	return i.ToBasicLoginInformationPtrOutputWithContext(context.Background())
}

func (i BasicLoginInformationArgs) ToBasicLoginInformationPtrOutputWithContext(ctx context.Context) BasicLoginInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicLoginInformationOutput).ToBasicLoginInformationPtrOutputWithContext(ctx)
}

// BasicLoginInformationPtrInput is an input type that accepts BasicLoginInformationArgs, BasicLoginInformationPtr and BasicLoginInformationPtrOutput values.
// You can construct a concrete instance of `BasicLoginInformationPtrInput` via:
//
//	        BasicLoginInformationArgs{...}
//
//	or:
//
//	        nil
type BasicLoginInformationPtrInput interface {
	pulumi.Input

	ToBasicLoginInformationPtrOutput() BasicLoginInformationPtrOutput
	ToBasicLoginInformationPtrOutputWithContext(context.Context) BasicLoginInformationPtrOutput
}

type basicLoginInformationPtrType BasicLoginInformationArgs

func BasicLoginInformationPtr(v *BasicLoginInformationArgs) BasicLoginInformationPtrInput {
	return (*basicLoginInformationPtrType)(v)
}

func (*basicLoginInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicLoginInformation)(nil)).Elem()
}

func (i *basicLoginInformationPtrType) ToBasicLoginInformationPtrOutput() BasicLoginInformationPtrOutput {
	return i.ToBasicLoginInformationPtrOutputWithContext(context.Background())
}

func (i *basicLoginInformationPtrType) ToBasicLoginInformationPtrOutputWithContext(ctx context.Context) BasicLoginInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicLoginInformationPtrOutput)
}

// Username and password for basic login authentication.
type BasicLoginInformationOutput struct{ *pulumi.OutputState }

func (BasicLoginInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicLoginInformation)(nil)).Elem()
}

func (o BasicLoginInformationOutput) ToBasicLoginInformationOutput() BasicLoginInformationOutput {
	return o
}

func (o BasicLoginInformationOutput) ToBasicLoginInformationOutputWithContext(ctx context.Context) BasicLoginInformationOutput {
	return o
}

func (o BasicLoginInformationOutput) ToBasicLoginInformationPtrOutput() BasicLoginInformationPtrOutput {
	return o.ToBasicLoginInformationPtrOutputWithContext(context.Background())
}

func (o BasicLoginInformationOutput) ToBasicLoginInformationPtrOutputWithContext(ctx context.Context) BasicLoginInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BasicLoginInformation) *BasicLoginInformation {
		return &v
	}).(BasicLoginInformationPtrOutput)
}

// Login password.
func (o BasicLoginInformationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicLoginInformation) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Login username.
func (o BasicLoginInformationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicLoginInformation) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type BasicLoginInformationPtrOutput struct{ *pulumi.OutputState }

func (BasicLoginInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicLoginInformation)(nil)).Elem()
}

func (o BasicLoginInformationPtrOutput) ToBasicLoginInformationPtrOutput() BasicLoginInformationPtrOutput {
	return o
}

func (o BasicLoginInformationPtrOutput) ToBasicLoginInformationPtrOutputWithContext(ctx context.Context) BasicLoginInformationPtrOutput {
	return o
}

func (o BasicLoginInformationPtrOutput) Elem() BasicLoginInformationOutput {
	return o.ApplyT(func(v *BasicLoginInformation) BasicLoginInformation {
		if v != nil {
			return *v
		}
		var ret BasicLoginInformation
		return ret
	}).(BasicLoginInformationOutput)
}

// Login password.
func (o BasicLoginInformationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicLoginInformation) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Login username.
func (o BasicLoginInformationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicLoginInformation) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Username and password for basic login authentication.
type BasicLoginInformationResponse struct {
	// Login username.
	Username *string `pulumi:"username"`
}

// Username and password for basic login authentication.
type BasicLoginInformationResponseOutput struct{ *pulumi.OutputState }

func (BasicLoginInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicLoginInformationResponse)(nil)).Elem()
}

func (o BasicLoginInformationResponseOutput) ToBasicLoginInformationResponseOutput() BasicLoginInformationResponseOutput {
	return o
}

func (o BasicLoginInformationResponseOutput) ToBasicLoginInformationResponseOutputWithContext(ctx context.Context) BasicLoginInformationResponseOutput {
	return o
}

// Login username.
func (o BasicLoginInformationResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicLoginInformationResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type BasicLoginInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (BasicLoginInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicLoginInformationResponse)(nil)).Elem()
}

func (o BasicLoginInformationResponsePtrOutput) ToBasicLoginInformationResponsePtrOutput() BasicLoginInformationResponsePtrOutput {
	return o
}

func (o BasicLoginInformationResponsePtrOutput) ToBasicLoginInformationResponsePtrOutputWithContext(ctx context.Context) BasicLoginInformationResponsePtrOutput {
	return o
}

func (o BasicLoginInformationResponsePtrOutput) Elem() BasicLoginInformationResponseOutput {
	return o.ApplyT(func(v *BasicLoginInformationResponse) BasicLoginInformationResponse {
		if v != nil {
			return *v
		}
		var ret BasicLoginInformationResponse
		return ret
	}).(BasicLoginInformationResponseOutput)
}

// Login username.
func (o BasicLoginInformationResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicLoginInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Client connection related configuration.
type ClientConnection struct {
	// Indicates if client connection is enabled for this SQL Server instance.
	Enabled *bool `pulumi:"enabled"`
}

// ClientConnectionInput is an input type that accepts ClientConnectionArgs and ClientConnectionOutput values.
// You can construct a concrete instance of `ClientConnectionInput` via:
//
//	ClientConnectionArgs{...}
type ClientConnectionInput interface {
	pulumi.Input

	ToClientConnectionOutput() ClientConnectionOutput
	ToClientConnectionOutputWithContext(context.Context) ClientConnectionOutput
}

// Client connection related configuration.
type ClientConnectionArgs struct {
	// Indicates if client connection is enabled for this SQL Server instance.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConnection)(nil)).Elem()
}

func (i ClientConnectionArgs) ToClientConnectionOutput() ClientConnectionOutput {
	return i.ToClientConnectionOutputWithContext(context.Background())
}

func (i ClientConnectionArgs) ToClientConnectionOutputWithContext(ctx context.Context) ClientConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConnectionOutput)
}

func (i ClientConnectionArgs) ToClientConnectionPtrOutput() ClientConnectionPtrOutput {
	return i.ToClientConnectionPtrOutputWithContext(context.Background())
}

func (i ClientConnectionArgs) ToClientConnectionPtrOutputWithContext(ctx context.Context) ClientConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConnectionOutput).ToClientConnectionPtrOutputWithContext(ctx)
}

// ClientConnectionPtrInput is an input type that accepts ClientConnectionArgs, ClientConnectionPtr and ClientConnectionPtrOutput values.
// You can construct a concrete instance of `ClientConnectionPtrInput` via:
//
//	        ClientConnectionArgs{...}
//
//	or:
//
//	        nil
type ClientConnectionPtrInput interface {
	pulumi.Input

	ToClientConnectionPtrOutput() ClientConnectionPtrOutput
	ToClientConnectionPtrOutputWithContext(context.Context) ClientConnectionPtrOutput
}

type clientConnectionPtrType ClientConnectionArgs

func ClientConnectionPtr(v *ClientConnectionArgs) ClientConnectionPtrInput {
	return (*clientConnectionPtrType)(v)
}

func (*clientConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConnection)(nil)).Elem()
}

func (i *clientConnectionPtrType) ToClientConnectionPtrOutput() ClientConnectionPtrOutput {
	return i.ToClientConnectionPtrOutputWithContext(context.Background())
}

func (i *clientConnectionPtrType) ToClientConnectionPtrOutputWithContext(ctx context.Context) ClientConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConnectionPtrOutput)
}

// Client connection related configuration.
type ClientConnectionOutput struct{ *pulumi.OutputState }

func (ClientConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConnection)(nil)).Elem()
}

func (o ClientConnectionOutput) ToClientConnectionOutput() ClientConnectionOutput {
	return o
}

func (o ClientConnectionOutput) ToClientConnectionOutputWithContext(ctx context.Context) ClientConnectionOutput {
	return o
}

func (o ClientConnectionOutput) ToClientConnectionPtrOutput() ClientConnectionPtrOutput {
	return o.ToClientConnectionPtrOutputWithContext(context.Background())
}

func (o ClientConnectionOutput) ToClientConnectionPtrOutputWithContext(ctx context.Context) ClientConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientConnection) *ClientConnection {
		return &v
	}).(ClientConnectionPtrOutput)
}

// Indicates if client connection is enabled for this SQL Server instance.
func (o ClientConnectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientConnection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientConnectionPtrOutput struct{ *pulumi.OutputState }

func (ClientConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConnection)(nil)).Elem()
}

func (o ClientConnectionPtrOutput) ToClientConnectionPtrOutput() ClientConnectionPtrOutput {
	return o
}

func (o ClientConnectionPtrOutput) ToClientConnectionPtrOutputWithContext(ctx context.Context) ClientConnectionPtrOutput {
	return o
}

func (o ClientConnectionPtrOutput) Elem() ClientConnectionOutput {
	return o.ApplyT(func(v *ClientConnection) ClientConnection {
		if v != nil {
			return *v
		}
		var ret ClientConnection
		return ret
	}).(ClientConnectionOutput)
}

// Indicates if client connection is enabled for this SQL Server instance.
func (o ClientConnectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Client connection related configuration.
type ClientConnectionResponse struct {
	// Indicates if client connection is enabled for this SQL Server instance.
	Enabled *bool `pulumi:"enabled"`
}

// Client connection related configuration.
type ClientConnectionResponseOutput struct{ *pulumi.OutputState }

func (ClientConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConnectionResponse)(nil)).Elem()
}

func (o ClientConnectionResponseOutput) ToClientConnectionResponseOutput() ClientConnectionResponseOutput {
	return o
}

func (o ClientConnectionResponseOutput) ToClientConnectionResponseOutputWithContext(ctx context.Context) ClientConnectionResponseOutput {
	return o
}

// Indicates if client connection is enabled for this SQL Server instance.
func (o ClientConnectionResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientConnectionResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientConnectionResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientConnectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConnectionResponse)(nil)).Elem()
}

func (o ClientConnectionResponsePtrOutput) ToClientConnectionResponsePtrOutput() ClientConnectionResponsePtrOutput {
	return o
}

func (o ClientConnectionResponsePtrOutput) ToClientConnectionResponsePtrOutputWithContext(ctx context.Context) ClientConnectionResponsePtrOutput {
	return o
}

func (o ClientConnectionResponsePtrOutput) Elem() ClientConnectionResponseOutput {
	return o.ApplyT(func(v *ClientConnectionResponse) ClientConnectionResponse {
		if v != nil {
			return *v
		}
		var ret ClientConnectionResponse
		return ret
	}).(ClientConnectionResponseOutput)
}

// Indicates if client connection is enabled for this SQL Server instance.
func (o ClientConnectionResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientConnectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Database mirroring endpoint related properties.
type DBMEndpointResponse struct {
	// Name of the certificate.
	CertificateName string `pulumi:"certificateName"`
	// The type of connection authentication required for connections to this endpoint
	ConnectionAuth string `pulumi:"connectionAuth"`
	// Encryption Algorithm
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Name of the database mirroring endpoint.
	EndpointName string `pulumi:"endpointName"`
	// Listener IP address.
	IpAddress string `pulumi:"ipAddress"`
	// Is the port number dynamically assigned.
	IsDynamicPort bool `pulumi:"isDynamicPort"`
	// Is Encryption enabled
	IsEncryptionEnabled bool `pulumi:"isEncryptionEnabled"`
	// The port number that the endpoint is listening on.
	Port int `pulumi:"port"`
	// Mirroring Role
	Role string `pulumi:"role"`
}

// Database mirroring endpoint related properties.
type DBMEndpointResponseOutput struct{ *pulumi.OutputState }

func (DBMEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBMEndpointResponse)(nil)).Elem()
}

func (o DBMEndpointResponseOutput) ToDBMEndpointResponseOutput() DBMEndpointResponseOutput {
	return o
}

func (o DBMEndpointResponseOutput) ToDBMEndpointResponseOutputWithContext(ctx context.Context) DBMEndpointResponseOutput {
	return o
}

// Name of the certificate.
func (o DBMEndpointResponseOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v DBMEndpointResponse) string { return v.CertificateName }).(pulumi.StringOutput)
}

// The type of connection authentication required for connections to this endpoint
func (o DBMEndpointResponseOutput) ConnectionAuth() pulumi.StringOutput {
	return o.ApplyT(func(v DBMEndpointResponse) string { return v.ConnectionAuth }).(pulumi.StringOutput)
}

// Encryption Algorithm
func (o DBMEndpointResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v DBMEndpointResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Name of the database mirroring endpoint.
func (o DBMEndpointResponseOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v DBMEndpointResponse) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Listener IP address.
func (o DBMEndpointResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DBMEndpointResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Is the port number dynamically assigned.
func (o DBMEndpointResponseOutput) IsDynamicPort() pulumi.BoolOutput {
	return o.ApplyT(func(v DBMEndpointResponse) bool { return v.IsDynamicPort }).(pulumi.BoolOutput)
}

// Is Encryption enabled
func (o DBMEndpointResponseOutput) IsEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DBMEndpointResponse) bool { return v.IsEncryptionEnabled }).(pulumi.BoolOutput)
}

// The port number that the endpoint is listening on.
func (o DBMEndpointResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DBMEndpointResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Mirroring Role
func (o DBMEndpointResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v DBMEndpointResponse) string { return v.Role }).(pulumi.StringOutput)
}

type DBMEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (DBMEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBMEndpointResponse)(nil)).Elem()
}

func (o DBMEndpointResponsePtrOutput) ToDBMEndpointResponsePtrOutput() DBMEndpointResponsePtrOutput {
	return o
}

func (o DBMEndpointResponsePtrOutput) ToDBMEndpointResponsePtrOutputWithContext(ctx context.Context) DBMEndpointResponsePtrOutput {
	return o
}

func (o DBMEndpointResponsePtrOutput) Elem() DBMEndpointResponseOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) DBMEndpointResponse {
		if v != nil {
			return *v
		}
		var ret DBMEndpointResponse
		return ret
	}).(DBMEndpointResponseOutput)
}

// Name of the certificate.
func (o DBMEndpointResponsePtrOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateName
	}).(pulumi.StringPtrOutput)
}

// The type of connection authentication required for connections to this endpoint
func (o DBMEndpointResponsePtrOutput) ConnectionAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionAuth
	}).(pulumi.StringPtrOutput)
}

// Encryption Algorithm
func (o DBMEndpointResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Name of the database mirroring endpoint.
func (o DBMEndpointResponsePtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Listener IP address.
func (o DBMEndpointResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// Is the port number dynamically assigned.
func (o DBMEndpointResponsePtrOutput) IsDynamicPort() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDynamicPort
	}).(pulumi.BoolPtrOutput)
}

// Is Encryption enabled
func (o DBMEndpointResponsePtrOutput) IsEncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEncryptionEnabled
	}).(pulumi.BoolPtrOutput)
}

// The port number that the endpoint is listening on.
func (o DBMEndpointResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Mirroring Role
func (o DBMEndpointResponsePtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBMEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The migration assessment related configuration.
type DataBaseMigrationAssessmentResponse struct {
	// The time when Migration Assessment Report upload was last performed.
	AssessmentUploadTime string `pulumi:"assessmentUploadTime"`
	// Issues and warnings impacting the migration of Database to particular Azure Migration Target.
	DatabaseAssessments []DataBaseMigrationAssessmentResponseDatabaseAssessments `pulumi:"databaseAssessments"`
	// The target readiness for migration for this database.
	TargetReadiness TargetReadinessResponse `pulumi:"targetReadiness"`
}

// The migration assessment related configuration.
type DataBaseMigrationAssessmentResponseOutput struct{ *pulumi.OutputState }

func (DataBaseMigrationAssessmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBaseMigrationAssessmentResponse)(nil)).Elem()
}

func (o DataBaseMigrationAssessmentResponseOutput) ToDataBaseMigrationAssessmentResponseOutput() DataBaseMigrationAssessmentResponseOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponseOutput) ToDataBaseMigrationAssessmentResponseOutputWithContext(ctx context.Context) DataBaseMigrationAssessmentResponseOutput {
	return o
}

// The time when Migration Assessment Report upload was last performed.
func (o DataBaseMigrationAssessmentResponseOutput) AssessmentUploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponse) string { return v.AssessmentUploadTime }).(pulumi.StringOutput)
}

// Issues and warnings impacting the migration of Database to particular Azure Migration Target.
func (o DataBaseMigrationAssessmentResponseOutput) DatabaseAssessments() DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponse) []DataBaseMigrationAssessmentResponseDatabaseAssessments {
		return v.DatabaseAssessments
	}).(DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput)
}

// The target readiness for migration for this database.
func (o DataBaseMigrationAssessmentResponseOutput) TargetReadiness() TargetReadinessResponseOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponse) TargetReadinessResponse { return v.TargetReadiness }).(TargetReadinessResponseOutput)
}

type DataBaseMigrationAssessmentResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBaseMigrationAssessmentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBaseMigrationAssessmentResponse)(nil)).Elem()
}

func (o DataBaseMigrationAssessmentResponsePtrOutput) ToDataBaseMigrationAssessmentResponsePtrOutput() DataBaseMigrationAssessmentResponsePtrOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponsePtrOutput) ToDataBaseMigrationAssessmentResponsePtrOutputWithContext(ctx context.Context) DataBaseMigrationAssessmentResponsePtrOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponsePtrOutput) Elem() DataBaseMigrationAssessmentResponseOutput {
	return o.ApplyT(func(v *DataBaseMigrationAssessmentResponse) DataBaseMigrationAssessmentResponse {
		if v != nil {
			return *v
		}
		var ret DataBaseMigrationAssessmentResponse
		return ret
	}).(DataBaseMigrationAssessmentResponseOutput)
}

// The time when Migration Assessment Report upload was last performed.
func (o DataBaseMigrationAssessmentResponsePtrOutput) AssessmentUploadTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBaseMigrationAssessmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AssessmentUploadTime
	}).(pulumi.StringPtrOutput)
}

// Issues and warnings impacting the migration of Database to particular Azure Migration Target.
func (o DataBaseMigrationAssessmentResponsePtrOutput) DatabaseAssessments() DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput {
	return o.ApplyT(func(v *DataBaseMigrationAssessmentResponse) []DataBaseMigrationAssessmentResponseDatabaseAssessments {
		if v == nil {
			return nil
		}
		return v.DatabaseAssessments
	}).(DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput)
}

// The target readiness for migration for this database.
func (o DataBaseMigrationAssessmentResponsePtrOutput) TargetReadiness() TargetReadinessResponsePtrOutput {
	return o.ApplyT(func(v *DataBaseMigrationAssessmentResponse) *TargetReadinessResponse {
		if v == nil {
			return nil
		}
		return &v.TargetReadiness
	}).(TargetReadinessResponsePtrOutput)
}

type DataBaseMigrationAssessmentResponseDatabaseAssessments struct {
	AppliesToMigrationTargetPlatform *string `pulumi:"appliesToMigrationTargetPlatform"`
	FeatureId                        *string `pulumi:"featureId"`
	IssueCategory                    *string `pulumi:"issueCategory"`
	MoreInformation                  *string `pulumi:"moreInformation"`
}

type DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput struct{ *pulumi.OutputState }

func (DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBaseMigrationAssessmentResponseDatabaseAssessments)(nil)).Elem()
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) ToDataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput() DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) ToDataBaseMigrationAssessmentResponseDatabaseAssessmentsOutputWithContext(ctx context.Context) DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) AppliesToMigrationTargetPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponseDatabaseAssessments) *string {
		return v.AppliesToMigrationTargetPlatform
	}).(pulumi.StringPtrOutput)
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) FeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponseDatabaseAssessments) *string { return v.FeatureId }).(pulumi.StringPtrOutput)
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) IssueCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponseDatabaseAssessments) *string { return v.IssueCategory }).(pulumi.StringPtrOutput)
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput) MoreInformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBaseMigrationAssessmentResponseDatabaseAssessments) *string { return v.MoreInformation }).(pulumi.StringPtrOutput)
}

type DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput struct{ *pulumi.OutputState }

func (DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBaseMigrationAssessmentResponseDatabaseAssessments)(nil)).Elem()
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput) ToDataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput() DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput) ToDataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutputWithContext(ctx context.Context) DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput {
	return o
}

func (o DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput) Index(i pulumi.IntInput) DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBaseMigrationAssessmentResponseDatabaseAssessments {
		return vs[0].([]DataBaseMigrationAssessmentResponseDatabaseAssessments)[vs[1].(int)]
	}).(DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput)
}

// Migration related configuration.
type DataBaseMigrationResponse struct {
	// Migration assessments related configuration.
	Assessment *DataBaseMigrationAssessmentResponse `pulumi:"assessment"`
}

// Migration related configuration.
type DataBaseMigrationResponseOutput struct{ *pulumi.OutputState }

func (DataBaseMigrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBaseMigrationResponse)(nil)).Elem()
}

func (o DataBaseMigrationResponseOutput) ToDataBaseMigrationResponseOutput() DataBaseMigrationResponseOutput {
	return o
}

func (o DataBaseMigrationResponseOutput) ToDataBaseMigrationResponseOutputWithContext(ctx context.Context) DataBaseMigrationResponseOutput {
	return o
}

// Migration assessments related configuration.
func (o DataBaseMigrationResponseOutput) Assessment() DataBaseMigrationAssessmentResponsePtrOutput {
	return o.ApplyT(func(v DataBaseMigrationResponse) *DataBaseMigrationAssessmentResponse { return v.Assessment }).(DataBaseMigrationAssessmentResponsePtrOutput)
}

type DataBaseMigrationResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBaseMigrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBaseMigrationResponse)(nil)).Elem()
}

func (o DataBaseMigrationResponsePtrOutput) ToDataBaseMigrationResponsePtrOutput() DataBaseMigrationResponsePtrOutput {
	return o
}

func (o DataBaseMigrationResponsePtrOutput) ToDataBaseMigrationResponsePtrOutputWithContext(ctx context.Context) DataBaseMigrationResponsePtrOutput {
	return o
}

func (o DataBaseMigrationResponsePtrOutput) Elem() DataBaseMigrationResponseOutput {
	return o.ApplyT(func(v *DataBaseMigrationResponse) DataBaseMigrationResponse {
		if v != nil {
			return *v
		}
		var ret DataBaseMigrationResponse
		return ret
	}).(DataBaseMigrationResponseOutput)
}

// Migration assessments related configuration.
func (o DataBaseMigrationResponsePtrOutput) Assessment() DataBaseMigrationAssessmentResponsePtrOutput {
	return o.ApplyT(func(v *DataBaseMigrationResponse) *DataBaseMigrationAssessmentResponse {
		if v == nil {
			return nil
		}
		return v.Assessment
	}).(DataBaseMigrationAssessmentResponsePtrOutput)
}

// The data controller properties.
type DataControllerProperties struct {
	// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
	BasicLoginInformation *BasicLoginInformation `pulumi:"basicLoginInformation"`
	// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
	ClusterId *string `pulumi:"clusterId"`
	// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
	ExtensionId *string `pulumi:"extensionId"`
	// The infrastructure the data controller is running on.
	Infrastructure *Infrastructure `pulumi:"infrastructure"`
	// The raw kubernetes information
	K8sRaw interface{} `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate *string `pulumi:"lastUploadedDate"`
	// Log analytics workspace id and primary key
	LogAnalyticsWorkspaceConfig *LogAnalyticsWorkspaceConfig `pulumi:"logAnalyticsWorkspaceConfig"`
	// Login credential for logs dashboard on the Kubernetes cluster.
	LogsDashboardCredential *BasicLoginInformation `pulumi:"logsDashboardCredential"`
	// Login credential for metrics dashboard on the Kubernetes cluster.
	MetricsDashboardCredential *BasicLoginInformation `pulumi:"metricsDashboardCredential"`
	// Properties from the Kubernetes data controller
	OnPremiseProperty *OnPremiseProperty `pulumi:"onPremiseProperty"`
	// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
	UploadServicePrincipal *UploadServicePrincipal `pulumi:"uploadServicePrincipal"`
	// Properties on upload watermark.  Mostly timestamp for each upload data type
	UploadWatermark *UploadWatermark `pulumi:"uploadWatermark"`
}

// Defaults sets the appropriate defaults for DataControllerProperties
func (val *DataControllerProperties) Defaults() *DataControllerProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Infrastructure == nil {
		infrastructure_ := Infrastructure("other")
		tmp.Infrastructure = &infrastructure_
	}
	return &tmp
}

// DataControllerPropertiesInput is an input type that accepts DataControllerPropertiesArgs and DataControllerPropertiesOutput values.
// You can construct a concrete instance of `DataControllerPropertiesInput` via:
//
//	DataControllerPropertiesArgs{...}
type DataControllerPropertiesInput interface {
	pulumi.Input

	ToDataControllerPropertiesOutput() DataControllerPropertiesOutput
	ToDataControllerPropertiesOutputWithContext(context.Context) DataControllerPropertiesOutput
}

// The data controller properties.
type DataControllerPropertiesArgs struct {
	// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
	BasicLoginInformation BasicLoginInformationPtrInput `pulumi:"basicLoginInformation"`
	// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
	ExtensionId pulumi.StringPtrInput `pulumi:"extensionId"`
	// The infrastructure the data controller is running on.
	Infrastructure InfrastructurePtrInput `pulumi:"infrastructure"`
	// The raw kubernetes information
	K8sRaw pulumi.Input `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate pulumi.StringPtrInput `pulumi:"lastUploadedDate"`
	// Log analytics workspace id and primary key
	LogAnalyticsWorkspaceConfig LogAnalyticsWorkspaceConfigPtrInput `pulumi:"logAnalyticsWorkspaceConfig"`
	// Login credential for logs dashboard on the Kubernetes cluster.
	LogsDashboardCredential BasicLoginInformationPtrInput `pulumi:"logsDashboardCredential"`
	// Login credential for metrics dashboard on the Kubernetes cluster.
	MetricsDashboardCredential BasicLoginInformationPtrInput `pulumi:"metricsDashboardCredential"`
	// Properties from the Kubernetes data controller
	OnPremiseProperty OnPremisePropertyPtrInput `pulumi:"onPremiseProperty"`
	// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
	UploadServicePrincipal UploadServicePrincipalPtrInput `pulumi:"uploadServicePrincipal"`
	// Properties on upload watermark.  Mostly timestamp for each upload data type
	UploadWatermark UploadWatermarkPtrInput `pulumi:"uploadWatermark"`
}

// Defaults sets the appropriate defaults for DataControllerPropertiesArgs
func (val *DataControllerPropertiesArgs) Defaults() *DataControllerPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Infrastructure == nil {
		tmp.Infrastructure = Infrastructure("other")
	}
	return &tmp
}
func (DataControllerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataControllerProperties)(nil)).Elem()
}

func (i DataControllerPropertiesArgs) ToDataControllerPropertiesOutput() DataControllerPropertiesOutput {
	return i.ToDataControllerPropertiesOutputWithContext(context.Background())
}

func (i DataControllerPropertiesArgs) ToDataControllerPropertiesOutputWithContext(ctx context.Context) DataControllerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataControllerPropertiesOutput)
}

// The data controller properties.
type DataControllerPropertiesOutput struct{ *pulumi.OutputState }

func (DataControllerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataControllerProperties)(nil)).Elem()
}

func (o DataControllerPropertiesOutput) ToDataControllerPropertiesOutput() DataControllerPropertiesOutput {
	return o
}

func (o DataControllerPropertiesOutput) ToDataControllerPropertiesOutputWithContext(ctx context.Context) DataControllerPropertiesOutput {
	return o
}

// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
func (o DataControllerPropertiesOutput) BasicLoginInformation() BasicLoginInformationPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *BasicLoginInformation { return v.BasicLoginInformation }).(BasicLoginInformationPtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
func (o DataControllerPropertiesOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
func (o DataControllerPropertiesOutput) ExtensionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *string { return v.ExtensionId }).(pulumi.StringPtrOutput)
}

// The infrastructure the data controller is running on.
func (o DataControllerPropertiesOutput) Infrastructure() InfrastructurePtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *Infrastructure { return v.Infrastructure }).(InfrastructurePtrOutput)
}

// The raw kubernetes information
func (o DataControllerPropertiesOutput) K8sRaw() pulumi.AnyOutput {
	return o.ApplyT(func(v DataControllerProperties) interface{} { return v.K8sRaw }).(pulumi.AnyOutput)
}

// Last uploaded date from Kubernetes cluster. Defaults to current date time
func (o DataControllerPropertiesOutput) LastUploadedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *string { return v.LastUploadedDate }).(pulumi.StringPtrOutput)
}

// Log analytics workspace id and primary key
func (o DataControllerPropertiesOutput) LogAnalyticsWorkspaceConfig() LogAnalyticsWorkspaceConfigPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *LogAnalyticsWorkspaceConfig { return v.LogAnalyticsWorkspaceConfig }).(LogAnalyticsWorkspaceConfigPtrOutput)
}

// Login credential for logs dashboard on the Kubernetes cluster.
func (o DataControllerPropertiesOutput) LogsDashboardCredential() BasicLoginInformationPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *BasicLoginInformation { return v.LogsDashboardCredential }).(BasicLoginInformationPtrOutput)
}

// Login credential for metrics dashboard on the Kubernetes cluster.
func (o DataControllerPropertiesOutput) MetricsDashboardCredential() BasicLoginInformationPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *BasicLoginInformation { return v.MetricsDashboardCredential }).(BasicLoginInformationPtrOutput)
}

// Properties from the Kubernetes data controller
func (o DataControllerPropertiesOutput) OnPremiseProperty() OnPremisePropertyPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *OnPremiseProperty { return v.OnPremiseProperty }).(OnPremisePropertyPtrOutput)
}

// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
func (o DataControllerPropertiesOutput) UploadServicePrincipal() UploadServicePrincipalPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *UploadServicePrincipal { return v.UploadServicePrincipal }).(UploadServicePrincipalPtrOutput)
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
func (o DataControllerPropertiesOutput) UploadWatermark() UploadWatermarkPtrOutput {
	return o.ApplyT(func(v DataControllerProperties) *UploadWatermark { return v.UploadWatermark }).(UploadWatermarkPtrOutput)
}

// The data controller properties.
type DataControllerPropertiesResponse struct {
	// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
	BasicLoginInformation *BasicLoginInformationResponse `pulumi:"basicLoginInformation"`
	// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
	ClusterId *string `pulumi:"clusterId"`
	// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
	ExtensionId *string `pulumi:"extensionId"`
	// The infrastructure the data controller is running on.
	Infrastructure *string `pulumi:"infrastructure"`
	// The raw kubernetes information
	K8sRaw interface{} `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate *string `pulumi:"lastUploadedDate"`
	// Log analytics workspace id and primary key
	LogAnalyticsWorkspaceConfig *LogAnalyticsWorkspaceConfigResponse `pulumi:"logAnalyticsWorkspaceConfig"`
	// Login credential for logs dashboard on the Kubernetes cluster.
	LogsDashboardCredential *BasicLoginInformationResponse `pulumi:"logsDashboardCredential"`
	// Login credential for metrics dashboard on the Kubernetes cluster.
	MetricsDashboardCredential *BasicLoginInformationResponse `pulumi:"metricsDashboardCredential"`
	// Properties from the Kubernetes data controller
	OnPremiseProperty *OnPremisePropertyResponse `pulumi:"onPremiseProperty"`
	// The provisioning state of the Arc Data Controller resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
	UploadServicePrincipal *UploadServicePrincipalResponse `pulumi:"uploadServicePrincipal"`
	// Properties on upload watermark.  Mostly timestamp for each upload data type
	UploadWatermark *UploadWatermarkResponse `pulumi:"uploadWatermark"`
}

// Defaults sets the appropriate defaults for DataControllerPropertiesResponse
func (val *DataControllerPropertiesResponse) Defaults() *DataControllerPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Infrastructure == nil {
		infrastructure_ := "other"
		tmp.Infrastructure = &infrastructure_
	}
	return &tmp
}

// The data controller properties.
type DataControllerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataControllerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataControllerPropertiesResponse)(nil)).Elem()
}

func (o DataControllerPropertiesResponseOutput) ToDataControllerPropertiesResponseOutput() DataControllerPropertiesResponseOutput {
	return o
}

func (o DataControllerPropertiesResponseOutput) ToDataControllerPropertiesResponseOutputWithContext(ctx context.Context) DataControllerPropertiesResponseOutput {
	return o
}

// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes native API.
func (o DataControllerPropertiesResponseOutput) BasicLoginInformation() BasicLoginInformationResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *BasicLoginInformationResponse {
		return v.BasicLoginInformation
	}).(BasicLoginInformationResponsePtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
func (o DataControllerPropertiesResponseOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
func (o DataControllerPropertiesResponseOutput) ExtensionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *string { return v.ExtensionId }).(pulumi.StringPtrOutput)
}

// The infrastructure the data controller is running on.
func (o DataControllerPropertiesResponseOutput) Infrastructure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *string { return v.Infrastructure }).(pulumi.StringPtrOutput)
}

// The raw kubernetes information
func (o DataControllerPropertiesResponseOutput) K8sRaw() pulumi.AnyOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) interface{} { return v.K8sRaw }).(pulumi.AnyOutput)
}

// Last uploaded date from Kubernetes cluster. Defaults to current date time
func (o DataControllerPropertiesResponseOutput) LastUploadedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *string { return v.LastUploadedDate }).(pulumi.StringPtrOutput)
}

// Log analytics workspace id and primary key
func (o DataControllerPropertiesResponseOutput) LogAnalyticsWorkspaceConfig() LogAnalyticsWorkspaceConfigResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *LogAnalyticsWorkspaceConfigResponse {
		return v.LogAnalyticsWorkspaceConfig
	}).(LogAnalyticsWorkspaceConfigResponsePtrOutput)
}

// Login credential for logs dashboard on the Kubernetes cluster.
func (o DataControllerPropertiesResponseOutput) LogsDashboardCredential() BasicLoginInformationResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *BasicLoginInformationResponse {
		return v.LogsDashboardCredential
	}).(BasicLoginInformationResponsePtrOutput)
}

// Login credential for metrics dashboard on the Kubernetes cluster.
func (o DataControllerPropertiesResponseOutput) MetricsDashboardCredential() BasicLoginInformationResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *BasicLoginInformationResponse {
		return v.MetricsDashboardCredential
	}).(BasicLoginInformationResponsePtrOutput)
}

// Properties from the Kubernetes data controller
func (o DataControllerPropertiesResponseOutput) OnPremiseProperty() OnPremisePropertyResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *OnPremisePropertyResponse { return v.OnPremiseProperty }).(OnPremisePropertyResponsePtrOutput)
}

// The provisioning state of the Arc Data Controller resource.
func (o DataControllerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
func (o DataControllerPropertiesResponseOutput) UploadServicePrincipal() UploadServicePrincipalResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *UploadServicePrincipalResponse {
		return v.UploadServicePrincipal
	}).(UploadServicePrincipalResponsePtrOutput)
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
func (o DataControllerPropertiesResponseOutput) UploadWatermark() UploadWatermarkResponsePtrOutput {
	return o.ApplyT(func(v DataControllerPropertiesResponse) *UploadWatermarkResponse { return v.UploadWatermark }).(UploadWatermarkResponsePtrOutput)
}

// Entra Authentication configuration.
type EntraAuthentication struct {
	// The client Id of the Managed Identity to query Microsoft Graph API. An empty string must be used for the system assigned Managed Identity.
	ClientId *string `pulumi:"clientId"`
	// The method used for Entra authentication
	IdentityType *string `pulumi:"identityType"`
}

// EntraAuthenticationInput is an input type that accepts EntraAuthenticationArgs and EntraAuthenticationOutput values.
// You can construct a concrete instance of `EntraAuthenticationInput` via:
//
//	EntraAuthenticationArgs{...}
type EntraAuthenticationInput interface {
	pulumi.Input

	ToEntraAuthenticationOutput() EntraAuthenticationOutput
	ToEntraAuthenticationOutputWithContext(context.Context) EntraAuthenticationOutput
}

// Entra Authentication configuration.
type EntraAuthenticationArgs struct {
	// The client Id of the Managed Identity to query Microsoft Graph API. An empty string must be used for the system assigned Managed Identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The method used for Entra authentication
	IdentityType pulumi.StringPtrInput `pulumi:"identityType"`
}

func (EntraAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntraAuthentication)(nil)).Elem()
}

func (i EntraAuthenticationArgs) ToEntraAuthenticationOutput() EntraAuthenticationOutput {
	return i.ToEntraAuthenticationOutputWithContext(context.Background())
}

func (i EntraAuthenticationArgs) ToEntraAuthenticationOutputWithContext(ctx context.Context) EntraAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntraAuthenticationOutput)
}

// EntraAuthenticationArrayInput is an input type that accepts EntraAuthenticationArray and EntraAuthenticationArrayOutput values.
// You can construct a concrete instance of `EntraAuthenticationArrayInput` via:
//
//	EntraAuthenticationArray{ EntraAuthenticationArgs{...} }
type EntraAuthenticationArrayInput interface {
	pulumi.Input

	ToEntraAuthenticationArrayOutput() EntraAuthenticationArrayOutput
	ToEntraAuthenticationArrayOutputWithContext(context.Context) EntraAuthenticationArrayOutput
}

type EntraAuthenticationArray []EntraAuthenticationInput

func (EntraAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntraAuthentication)(nil)).Elem()
}

func (i EntraAuthenticationArray) ToEntraAuthenticationArrayOutput() EntraAuthenticationArrayOutput {
	return i.ToEntraAuthenticationArrayOutputWithContext(context.Background())
}

func (i EntraAuthenticationArray) ToEntraAuthenticationArrayOutputWithContext(ctx context.Context) EntraAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntraAuthenticationArrayOutput)
}

// Entra Authentication configuration.
type EntraAuthenticationOutput struct{ *pulumi.OutputState }

func (EntraAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntraAuthentication)(nil)).Elem()
}

func (o EntraAuthenticationOutput) ToEntraAuthenticationOutput() EntraAuthenticationOutput {
	return o
}

func (o EntraAuthenticationOutput) ToEntraAuthenticationOutputWithContext(ctx context.Context) EntraAuthenticationOutput {
	return o
}

// The client Id of the Managed Identity to query Microsoft Graph API. An empty string must be used for the system assigned Managed Identity.
func (o EntraAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntraAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The method used for Entra authentication
func (o EntraAuthenticationOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntraAuthentication) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

type EntraAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (EntraAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntraAuthentication)(nil)).Elem()
}

func (o EntraAuthenticationArrayOutput) ToEntraAuthenticationArrayOutput() EntraAuthenticationArrayOutput {
	return o
}

func (o EntraAuthenticationArrayOutput) ToEntraAuthenticationArrayOutputWithContext(ctx context.Context) EntraAuthenticationArrayOutput {
	return o
}

func (o EntraAuthenticationArrayOutput) Index(i pulumi.IntInput) EntraAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntraAuthentication {
		return vs[0].([]EntraAuthentication)[vs[1].(int)]
	}).(EntraAuthenticationOutput)
}

// Entra Authentication configuration.
type EntraAuthenticationResponse struct {
	// The client Id of the Managed Identity to query Microsoft Graph API. An empty string must be used for the system assigned Managed Identity.
	ClientId *string `pulumi:"clientId"`
	// The method used for Entra authentication
	IdentityType *string `pulumi:"identityType"`
}

// Entra Authentication configuration.
type EntraAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (EntraAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntraAuthenticationResponse)(nil)).Elem()
}

func (o EntraAuthenticationResponseOutput) ToEntraAuthenticationResponseOutput() EntraAuthenticationResponseOutput {
	return o
}

func (o EntraAuthenticationResponseOutput) ToEntraAuthenticationResponseOutputWithContext(ctx context.Context) EntraAuthenticationResponseOutput {
	return o
}

// The client Id of the Managed Identity to query Microsoft Graph API. An empty string must be used for the system assigned Managed Identity.
func (o EntraAuthenticationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntraAuthenticationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The method used for Entra authentication
func (o EntraAuthenticationResponseOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntraAuthenticationResponse) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

type EntraAuthenticationResponseArrayOutput struct{ *pulumi.OutputState }

func (EntraAuthenticationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntraAuthenticationResponse)(nil)).Elem()
}

func (o EntraAuthenticationResponseArrayOutput) ToEntraAuthenticationResponseArrayOutput() EntraAuthenticationResponseArrayOutput {
	return o
}

func (o EntraAuthenticationResponseArrayOutput) ToEntraAuthenticationResponseArrayOutputWithContext(ctx context.Context) EntraAuthenticationResponseArrayOutput {
	return o
}

func (o EntraAuthenticationResponseArrayOutput) Index(i pulumi.IntInput) EntraAuthenticationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntraAuthenticationResponse {
		return vs[0].([]EntraAuthenticationResponse)[vs[1].(int)]
	}).(EntraAuthenticationResponseOutput)
}

// The complex type of the extended location.
type ExtendedLocation struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// The complex type of the extended location.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// The complex type of the extended location.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Failover Cluster Instance properties.
type FailoverClusterResponse struct {
	// The IP addresses and subnet masks associated with the SQL Failover Cluster Instance on this host.
	HostIPAddresses []HostIPAddressInformationResponse `pulumi:"hostIPAddresses"`
	// The host names which are part of the SQL FCI resource group.
	HostNames []string `pulumi:"hostNames"`
	// The GUID of the SQL Server's underlying Failover Cluster.
	Id string `pulumi:"id"`
	// The network name to connect to the SQL FCI.
	NetworkName string `pulumi:"networkName"`
	// The ARM IDs of the Arc SQL Server resources, belonging to the current server's Failover cluster.
	SqlInstanceIds []string `pulumi:"sqlInstanceIds"`
}

// Failover Cluster Instance properties.
type FailoverClusterResponseOutput struct{ *pulumi.OutputState }

func (FailoverClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverClusterResponse)(nil)).Elem()
}

func (o FailoverClusterResponseOutput) ToFailoverClusterResponseOutput() FailoverClusterResponseOutput {
	return o
}

func (o FailoverClusterResponseOutput) ToFailoverClusterResponseOutputWithContext(ctx context.Context) FailoverClusterResponseOutput {
	return o
}

// The IP addresses and subnet masks associated with the SQL Failover Cluster Instance on this host.
func (o FailoverClusterResponseOutput) HostIPAddresses() HostIPAddressInformationResponseArrayOutput {
	return o.ApplyT(func(v FailoverClusterResponse) []HostIPAddressInformationResponse { return v.HostIPAddresses }).(HostIPAddressInformationResponseArrayOutput)
}

// The host names which are part of the SQL FCI resource group.
func (o FailoverClusterResponseOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FailoverClusterResponse) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// The GUID of the SQL Server's underlying Failover Cluster.
func (o FailoverClusterResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverClusterResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The network name to connect to the SQL FCI.
func (o FailoverClusterResponseOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverClusterResponse) string { return v.NetworkName }).(pulumi.StringOutput)
}

// The ARM IDs of the Arc SQL Server resources, belonging to the current server's Failover cluster.
func (o FailoverClusterResponseOutput) SqlInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FailoverClusterResponse) []string { return v.SqlInstanceIds }).(pulumi.StringArrayOutput)
}

type FailoverClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (FailoverClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverClusterResponse)(nil)).Elem()
}

func (o FailoverClusterResponsePtrOutput) ToFailoverClusterResponsePtrOutput() FailoverClusterResponsePtrOutput {
	return o
}

func (o FailoverClusterResponsePtrOutput) ToFailoverClusterResponsePtrOutputWithContext(ctx context.Context) FailoverClusterResponsePtrOutput {
	return o
}

func (o FailoverClusterResponsePtrOutput) Elem() FailoverClusterResponseOutput {
	return o.ApplyT(func(v *FailoverClusterResponse) FailoverClusterResponse {
		if v != nil {
			return *v
		}
		var ret FailoverClusterResponse
		return ret
	}).(FailoverClusterResponseOutput)
}

// The IP addresses and subnet masks associated with the SQL Failover Cluster Instance on this host.
func (o FailoverClusterResponsePtrOutput) HostIPAddresses() HostIPAddressInformationResponseArrayOutput {
	return o.ApplyT(func(v *FailoverClusterResponse) []HostIPAddressInformationResponse {
		if v == nil {
			return nil
		}
		return v.HostIPAddresses
	}).(HostIPAddressInformationResponseArrayOutput)
}

// The host names which are part of the SQL FCI resource group.
func (o FailoverClusterResponsePtrOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FailoverClusterResponse) []string {
		if v == nil {
			return nil
		}
		return v.HostNames
	}).(pulumi.StringArrayOutput)
}

// The GUID of the SQL Server's underlying Failover Cluster.
func (o FailoverClusterResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FailoverClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The network name to connect to the SQL FCI.
func (o FailoverClusterResponsePtrOutput) NetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FailoverClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkName
	}).(pulumi.StringPtrOutput)
}

// The ARM IDs of the Arc SQL Server resources, belonging to the current server's Failover cluster.
func (o FailoverClusterResponsePtrOutput) SqlInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FailoverClusterResponse) []string {
		if v == nil {
			return nil
		}
		return v.SqlInstanceIds
	}).(pulumi.StringArrayOutput)
}

// The properties of a failover group resource.
type FailoverGroupProperties struct {
	// The resource ID of the partner SQL managed instance.
	PartnerManagedInstanceId string `pulumi:"partnerManagedInstanceId"`
	// The specifications of the failover group resource.
	Spec FailoverGroupSpec `pulumi:"spec"`
	// The status of the failover group custom resource.
	Status interface{} `pulumi:"status"`
}

// Defaults sets the appropriate defaults for FailoverGroupProperties
func (val *FailoverGroupProperties) Defaults() *FailoverGroupProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = *tmp.Spec.Defaults()

	return &tmp
}

// FailoverGroupPropertiesInput is an input type that accepts FailoverGroupPropertiesArgs and FailoverGroupPropertiesOutput values.
// You can construct a concrete instance of `FailoverGroupPropertiesInput` via:
//
//	FailoverGroupPropertiesArgs{...}
type FailoverGroupPropertiesInput interface {
	pulumi.Input

	ToFailoverGroupPropertiesOutput() FailoverGroupPropertiesOutput
	ToFailoverGroupPropertiesOutputWithContext(context.Context) FailoverGroupPropertiesOutput
}

// The properties of a failover group resource.
type FailoverGroupPropertiesArgs struct {
	// The resource ID of the partner SQL managed instance.
	PartnerManagedInstanceId pulumi.StringInput `pulumi:"partnerManagedInstanceId"`
	// The specifications of the failover group resource.
	Spec FailoverGroupSpecInput `pulumi:"spec"`
	// The status of the failover group custom resource.
	Status pulumi.Input `pulumi:"status"`
}

// Defaults sets the appropriate defaults for FailoverGroupPropertiesArgs
func (val *FailoverGroupPropertiesArgs) Defaults() *FailoverGroupPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (FailoverGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupProperties)(nil)).Elem()
}

func (i FailoverGroupPropertiesArgs) ToFailoverGroupPropertiesOutput() FailoverGroupPropertiesOutput {
	return i.ToFailoverGroupPropertiesOutputWithContext(context.Background())
}

func (i FailoverGroupPropertiesArgs) ToFailoverGroupPropertiesOutputWithContext(ctx context.Context) FailoverGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupPropertiesOutput)
}

// The properties of a failover group resource.
type FailoverGroupPropertiesOutput struct{ *pulumi.OutputState }

func (FailoverGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupProperties)(nil)).Elem()
}

func (o FailoverGroupPropertiesOutput) ToFailoverGroupPropertiesOutput() FailoverGroupPropertiesOutput {
	return o
}

func (o FailoverGroupPropertiesOutput) ToFailoverGroupPropertiesOutputWithContext(ctx context.Context) FailoverGroupPropertiesOutput {
	return o
}

// The resource ID of the partner SQL managed instance.
func (o FailoverGroupPropertiesOutput) PartnerManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupProperties) string { return v.PartnerManagedInstanceId }).(pulumi.StringOutput)
}

// The specifications of the failover group resource.
func (o FailoverGroupPropertiesOutput) Spec() FailoverGroupSpecOutput {
	return o.ApplyT(func(v FailoverGroupProperties) FailoverGroupSpec { return v.Spec }).(FailoverGroupSpecOutput)
}

// The status of the failover group custom resource.
func (o FailoverGroupPropertiesOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v FailoverGroupProperties) interface{} { return v.Status }).(pulumi.AnyOutput)
}

// The properties of a failover group resource.
type FailoverGroupPropertiesResponse struct {
	// The resource ID of the partner SQL managed instance.
	PartnerManagedInstanceId string `pulumi:"partnerManagedInstanceId"`
	// The provisioning state of the failover group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The specifications of the failover group resource.
	Spec FailoverGroupSpecResponse `pulumi:"spec"`
	// The status of the failover group custom resource.
	Status interface{} `pulumi:"status"`
}

// Defaults sets the appropriate defaults for FailoverGroupPropertiesResponse
func (val *FailoverGroupPropertiesResponse) Defaults() *FailoverGroupPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = *tmp.Spec.Defaults()

	return &tmp
}

// The properties of a failover group resource.
type FailoverGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FailoverGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupPropertiesResponse)(nil)).Elem()
}

func (o FailoverGroupPropertiesResponseOutput) ToFailoverGroupPropertiesResponseOutput() FailoverGroupPropertiesResponseOutput {
	return o
}

func (o FailoverGroupPropertiesResponseOutput) ToFailoverGroupPropertiesResponseOutputWithContext(ctx context.Context) FailoverGroupPropertiesResponseOutput {
	return o
}

// The resource ID of the partner SQL managed instance.
func (o FailoverGroupPropertiesResponseOutput) PartnerManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupPropertiesResponse) string { return v.PartnerManagedInstanceId }).(pulumi.StringOutput)
}

// The provisioning state of the failover group resource.
func (o FailoverGroupPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The specifications of the failover group resource.
func (o FailoverGroupPropertiesResponseOutput) Spec() FailoverGroupSpecResponseOutput {
	return o.ApplyT(func(v FailoverGroupPropertiesResponse) FailoverGroupSpecResponse { return v.Spec }).(FailoverGroupSpecResponseOutput)
}

// The status of the failover group custom resource.
func (o FailoverGroupPropertiesResponseOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v FailoverGroupPropertiesResponse) interface{} { return v.Status }).(pulumi.AnyOutput)
}

// The specifications of the failover group resource.
type FailoverGroupSpec struct {
	// The name of the partner SQL managed instance.
	PartnerMI *string `pulumi:"partnerMI"`
	// The mirroring endpoint public certificate for the partner SQL managed instance. Only PEM format is supported.
	PartnerMirroringCert *string `pulumi:"partnerMirroringCert"`
	// The mirroring endpoint URL of the partner SQL managed instance.
	PartnerMirroringURL *string `pulumi:"partnerMirroringURL"`
	// The partner sync mode of the SQL managed instance.
	PartnerSyncMode *string `pulumi:"partnerSyncMode"`
	// The role of the SQL managed instance in this failover group.
	Role string `pulumi:"role"`
	// The shared name of the failover group for this SQL managed instance. Both SQL managed instance and its partner have to use the same shared name.
	SharedName *string `pulumi:"sharedName"`
	// The name of the SQL managed instance with this failover group role.
	SourceMI *string `pulumi:"sourceMI"`
}

// Defaults sets the appropriate defaults for FailoverGroupSpec
func (val *FailoverGroupSpec) Defaults() *FailoverGroupSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PartnerSyncMode == nil {
		partnerSyncMode_ := "async"
		tmp.PartnerSyncMode = &partnerSyncMode_
	}
	if utilities.IsZero(tmp.Role) {
		tmp.Role = "primary"
	}
	return &tmp
}

// FailoverGroupSpecInput is an input type that accepts FailoverGroupSpecArgs and FailoverGroupSpecOutput values.
// You can construct a concrete instance of `FailoverGroupSpecInput` via:
//
//	FailoverGroupSpecArgs{...}
type FailoverGroupSpecInput interface {
	pulumi.Input

	ToFailoverGroupSpecOutput() FailoverGroupSpecOutput
	ToFailoverGroupSpecOutputWithContext(context.Context) FailoverGroupSpecOutput
}

// The specifications of the failover group resource.
type FailoverGroupSpecArgs struct {
	// The name of the partner SQL managed instance.
	PartnerMI pulumi.StringPtrInput `pulumi:"partnerMI"`
	// The mirroring endpoint public certificate for the partner SQL managed instance. Only PEM format is supported.
	PartnerMirroringCert pulumi.StringPtrInput `pulumi:"partnerMirroringCert"`
	// The mirroring endpoint URL of the partner SQL managed instance.
	PartnerMirroringURL pulumi.StringPtrInput `pulumi:"partnerMirroringURL"`
	// The partner sync mode of the SQL managed instance.
	PartnerSyncMode pulumi.StringPtrInput `pulumi:"partnerSyncMode"`
	// The role of the SQL managed instance in this failover group.
	Role pulumi.StringInput `pulumi:"role"`
	// The shared name of the failover group for this SQL managed instance. Both SQL managed instance and its partner have to use the same shared name.
	SharedName pulumi.StringPtrInput `pulumi:"sharedName"`
	// The name of the SQL managed instance with this failover group role.
	SourceMI pulumi.StringPtrInput `pulumi:"sourceMI"`
}

// Defaults sets the appropriate defaults for FailoverGroupSpecArgs
func (val *FailoverGroupSpecArgs) Defaults() *FailoverGroupSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PartnerSyncMode == nil {
		tmp.PartnerSyncMode = pulumi.StringPtr("async")
	}
	if tmp.Role == nil {
		tmp.Role = pulumi.String("primary")
	}
	return &tmp
}
func (FailoverGroupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupSpec)(nil)).Elem()
}

func (i FailoverGroupSpecArgs) ToFailoverGroupSpecOutput() FailoverGroupSpecOutput {
	return i.ToFailoverGroupSpecOutputWithContext(context.Background())
}

func (i FailoverGroupSpecArgs) ToFailoverGroupSpecOutputWithContext(ctx context.Context) FailoverGroupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupSpecOutput)
}

// The specifications of the failover group resource.
type FailoverGroupSpecOutput struct{ *pulumi.OutputState }

func (FailoverGroupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupSpec)(nil)).Elem()
}

func (o FailoverGroupSpecOutput) ToFailoverGroupSpecOutput() FailoverGroupSpecOutput {
	return o
}

func (o FailoverGroupSpecOutput) ToFailoverGroupSpecOutputWithContext(ctx context.Context) FailoverGroupSpecOutput {
	return o
}

// The name of the partner SQL managed instance.
func (o FailoverGroupSpecOutput) PartnerMI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpec) *string { return v.PartnerMI }).(pulumi.StringPtrOutput)
}

// The mirroring endpoint public certificate for the partner SQL managed instance. Only PEM format is supported.
func (o FailoverGroupSpecOutput) PartnerMirroringCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpec) *string { return v.PartnerMirroringCert }).(pulumi.StringPtrOutput)
}

// The mirroring endpoint URL of the partner SQL managed instance.
func (o FailoverGroupSpecOutput) PartnerMirroringURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpec) *string { return v.PartnerMirroringURL }).(pulumi.StringPtrOutput)
}

// The partner sync mode of the SQL managed instance.
func (o FailoverGroupSpecOutput) PartnerSyncMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpec) *string { return v.PartnerSyncMode }).(pulumi.StringPtrOutput)
}

// The role of the SQL managed instance in this failover group.
func (o FailoverGroupSpecOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupSpec) string { return v.Role }).(pulumi.StringOutput)
}

// The shared name of the failover group for this SQL managed instance. Both SQL managed instance and its partner have to use the same shared name.
func (o FailoverGroupSpecOutput) SharedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpec) *string { return v.SharedName }).(pulumi.StringPtrOutput)
}

// The name of the SQL managed instance with this failover group role.
func (o FailoverGroupSpecOutput) SourceMI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpec) *string { return v.SourceMI }).(pulumi.StringPtrOutput)
}

// The specifications of the failover group resource.
type FailoverGroupSpecResponse struct {
	// The name of the partner SQL managed instance.
	PartnerMI *string `pulumi:"partnerMI"`
	// The mirroring endpoint public certificate for the partner SQL managed instance. Only PEM format is supported.
	PartnerMirroringCert *string `pulumi:"partnerMirroringCert"`
	// The mirroring endpoint URL of the partner SQL managed instance.
	PartnerMirroringURL *string `pulumi:"partnerMirroringURL"`
	// The partner sync mode of the SQL managed instance.
	PartnerSyncMode *string `pulumi:"partnerSyncMode"`
	// The role of the SQL managed instance in this failover group.
	Role string `pulumi:"role"`
	// The shared name of the failover group for this SQL managed instance. Both SQL managed instance and its partner have to use the same shared name.
	SharedName *string `pulumi:"sharedName"`
	// The name of the SQL managed instance with this failover group role.
	SourceMI *string `pulumi:"sourceMI"`
}

// Defaults sets the appropriate defaults for FailoverGroupSpecResponse
func (val *FailoverGroupSpecResponse) Defaults() *FailoverGroupSpecResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PartnerSyncMode == nil {
		partnerSyncMode_ := "async"
		tmp.PartnerSyncMode = &partnerSyncMode_
	}
	if utilities.IsZero(tmp.Role) {
		tmp.Role = "primary"
	}
	return &tmp
}

// The specifications of the failover group resource.
type FailoverGroupSpecResponseOutput struct{ *pulumi.OutputState }

func (FailoverGroupSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupSpecResponse)(nil)).Elem()
}

func (o FailoverGroupSpecResponseOutput) ToFailoverGroupSpecResponseOutput() FailoverGroupSpecResponseOutput {
	return o
}

func (o FailoverGroupSpecResponseOutput) ToFailoverGroupSpecResponseOutputWithContext(ctx context.Context) FailoverGroupSpecResponseOutput {
	return o
}

// The name of the partner SQL managed instance.
func (o FailoverGroupSpecResponseOutput) PartnerMI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) *string { return v.PartnerMI }).(pulumi.StringPtrOutput)
}

// The mirroring endpoint public certificate for the partner SQL managed instance. Only PEM format is supported.
func (o FailoverGroupSpecResponseOutput) PartnerMirroringCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) *string { return v.PartnerMirroringCert }).(pulumi.StringPtrOutput)
}

// The mirroring endpoint URL of the partner SQL managed instance.
func (o FailoverGroupSpecResponseOutput) PartnerMirroringURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) *string { return v.PartnerMirroringURL }).(pulumi.StringPtrOutput)
}

// The partner sync mode of the SQL managed instance.
func (o FailoverGroupSpecResponseOutput) PartnerSyncMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) *string { return v.PartnerSyncMode }).(pulumi.StringPtrOutput)
}

// The role of the SQL managed instance in this failover group.
func (o FailoverGroupSpecResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) string { return v.Role }).(pulumi.StringOutput)
}

// The shared name of the failover group for this SQL managed instance. Both SQL managed instance and its partner have to use the same shared name.
func (o FailoverGroupSpecResponseOutput) SharedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) *string { return v.SharedName }).(pulumi.StringPtrOutput)
}

// The name of the SQL managed instance with this failover group role.
func (o FailoverGroupSpecResponseOutput) SourceMI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupSpecResponse) *string { return v.SourceMI }).(pulumi.StringPtrOutput)
}

// IP address and subnet mask.
type HostIPAddressInformationResponse struct {
	// IP address
	IpAddress string `pulumi:"ipAddress"`
	// Subnet mask
	SubnetMask string `pulumi:"subnetMask"`
}

// IP address and subnet mask.
type HostIPAddressInformationResponseOutput struct{ *pulumi.OutputState }

func (HostIPAddressInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostIPAddressInformationResponse)(nil)).Elem()
}

func (o HostIPAddressInformationResponseOutput) ToHostIPAddressInformationResponseOutput() HostIPAddressInformationResponseOutput {
	return o
}

func (o HostIPAddressInformationResponseOutput) ToHostIPAddressInformationResponseOutputWithContext(ctx context.Context) HostIPAddressInformationResponseOutput {
	return o
}

// IP address
func (o HostIPAddressInformationResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v HostIPAddressInformationResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Subnet mask
func (o HostIPAddressInformationResponseOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v HostIPAddressInformationResponse) string { return v.SubnetMask }).(pulumi.StringOutput)
}

type HostIPAddressInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (HostIPAddressInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostIPAddressInformationResponse)(nil)).Elem()
}

func (o HostIPAddressInformationResponseArrayOutput) ToHostIPAddressInformationResponseArrayOutput() HostIPAddressInformationResponseArrayOutput {
	return o
}

func (o HostIPAddressInformationResponseArrayOutput) ToHostIPAddressInformationResponseArrayOutputWithContext(ctx context.Context) HostIPAddressInformationResponseArrayOutput {
	return o
}

func (o HostIPAddressInformationResponseArrayOutput) Index(i pulumi.IntInput) HostIPAddressInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostIPAddressInformationResponse {
		return vs[0].([]HostIPAddressInformationResponse)[vs[1].(int)]
	}).(HostIPAddressInformationResponseOutput)
}

// The kubernetes active directory information.
type K8sActiveDirectory struct {
	// Account name for AAD
	AccountName *string                      `pulumi:"accountName"`
	Connector   *K8sActiveDirectoryConnector `pulumi:"connector"`
	// An array of encryption types
	EncryptionTypes []string `pulumi:"encryptionTypes"`
	// Keytab secret used to authenticate with Active Directory.
	KeytabSecret *string `pulumi:"keytabSecret"`
}

// K8sActiveDirectoryInput is an input type that accepts K8sActiveDirectoryArgs and K8sActiveDirectoryOutput values.
// You can construct a concrete instance of `K8sActiveDirectoryInput` via:
//
//	K8sActiveDirectoryArgs{...}
type K8sActiveDirectoryInput interface {
	pulumi.Input

	ToK8sActiveDirectoryOutput() K8sActiveDirectoryOutput
	ToK8sActiveDirectoryOutputWithContext(context.Context) K8sActiveDirectoryOutput
}

// The kubernetes active directory information.
type K8sActiveDirectoryArgs struct {
	// Account name for AAD
	AccountName pulumi.StringPtrInput               `pulumi:"accountName"`
	Connector   K8sActiveDirectoryConnectorPtrInput `pulumi:"connector"`
	// An array of encryption types
	EncryptionTypes pulumi.StringArrayInput `pulumi:"encryptionTypes"`
	// Keytab secret used to authenticate with Active Directory.
	KeytabSecret pulumi.StringPtrInput `pulumi:"keytabSecret"`
}

func (K8sActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sActiveDirectory)(nil)).Elem()
}

func (i K8sActiveDirectoryArgs) ToK8sActiveDirectoryOutput() K8sActiveDirectoryOutput {
	return i.ToK8sActiveDirectoryOutputWithContext(context.Background())
}

func (i K8sActiveDirectoryArgs) ToK8sActiveDirectoryOutputWithContext(ctx context.Context) K8sActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sActiveDirectoryOutput)
}

func (i K8sActiveDirectoryArgs) ToK8sActiveDirectoryPtrOutput() K8sActiveDirectoryPtrOutput {
	return i.ToK8sActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i K8sActiveDirectoryArgs) ToK8sActiveDirectoryPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sActiveDirectoryOutput).ToK8sActiveDirectoryPtrOutputWithContext(ctx)
}

// K8sActiveDirectoryPtrInput is an input type that accepts K8sActiveDirectoryArgs, K8sActiveDirectoryPtr and K8sActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `K8sActiveDirectoryPtrInput` via:
//
//	        K8sActiveDirectoryArgs{...}
//
//	or:
//
//	        nil
type K8sActiveDirectoryPtrInput interface {
	pulumi.Input

	ToK8sActiveDirectoryPtrOutput() K8sActiveDirectoryPtrOutput
	ToK8sActiveDirectoryPtrOutputWithContext(context.Context) K8sActiveDirectoryPtrOutput
}

type k8sActiveDirectoryPtrType K8sActiveDirectoryArgs

func K8sActiveDirectoryPtr(v *K8sActiveDirectoryArgs) K8sActiveDirectoryPtrInput {
	return (*k8sActiveDirectoryPtrType)(v)
}

func (*k8sActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sActiveDirectory)(nil)).Elem()
}

func (i *k8sActiveDirectoryPtrType) ToK8sActiveDirectoryPtrOutput() K8sActiveDirectoryPtrOutput {
	return i.ToK8sActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *k8sActiveDirectoryPtrType) ToK8sActiveDirectoryPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sActiveDirectoryPtrOutput)
}

// The kubernetes active directory information.
type K8sActiveDirectoryOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sActiveDirectory)(nil)).Elem()
}

func (o K8sActiveDirectoryOutput) ToK8sActiveDirectoryOutput() K8sActiveDirectoryOutput {
	return o
}

func (o K8sActiveDirectoryOutput) ToK8sActiveDirectoryOutputWithContext(ctx context.Context) K8sActiveDirectoryOutput {
	return o
}

func (o K8sActiveDirectoryOutput) ToK8sActiveDirectoryPtrOutput() K8sActiveDirectoryPtrOutput {
	return o.ToK8sActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o K8sActiveDirectoryOutput) ToK8sActiveDirectoryPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sActiveDirectory) *K8sActiveDirectory {
		return &v
	}).(K8sActiveDirectoryPtrOutput)
}

// Account name for AAD
func (o K8sActiveDirectoryOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectory) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

func (o K8sActiveDirectoryOutput) Connector() K8sActiveDirectoryConnectorPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectory) *K8sActiveDirectoryConnector { return v.Connector }).(K8sActiveDirectoryConnectorPtrOutput)
}

// An array of encryption types
func (o K8sActiveDirectoryOutput) EncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v K8sActiveDirectory) []string { return v.EncryptionTypes }).(pulumi.StringArrayOutput)
}

// Keytab secret used to authenticate with Active Directory.
func (o K8sActiveDirectoryOutput) KeytabSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectory) *string { return v.KeytabSecret }).(pulumi.StringPtrOutput)
}

type K8sActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sActiveDirectory)(nil)).Elem()
}

func (o K8sActiveDirectoryPtrOutput) ToK8sActiveDirectoryPtrOutput() K8sActiveDirectoryPtrOutput {
	return o
}

func (o K8sActiveDirectoryPtrOutput) ToK8sActiveDirectoryPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryPtrOutput {
	return o
}

func (o K8sActiveDirectoryPtrOutput) Elem() K8sActiveDirectoryOutput {
	return o.ApplyT(func(v *K8sActiveDirectory) K8sActiveDirectory {
		if v != nil {
			return *v
		}
		var ret K8sActiveDirectory
		return ret
	}).(K8sActiveDirectoryOutput)
}

// Account name for AAD
func (o K8sActiveDirectoryPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

func (o K8sActiveDirectoryPtrOutput) Connector() K8sActiveDirectoryConnectorPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectory) *K8sActiveDirectoryConnector {
		if v == nil {
			return nil
		}
		return v.Connector
	}).(K8sActiveDirectoryConnectorPtrOutput)
}

// An array of encryption types
func (o K8sActiveDirectoryPtrOutput) EncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *K8sActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.EncryptionTypes
	}).(pulumi.StringArrayOutput)
}

// Keytab secret used to authenticate with Active Directory.
func (o K8sActiveDirectoryPtrOutput) KeytabSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.KeytabSecret
	}).(pulumi.StringPtrOutput)
}

type K8sActiveDirectoryConnector struct {
	// Name of the connector
	Name *string `pulumi:"name"`
	// Name space of the connector
	Namespace *string `pulumi:"namespace"`
}

// K8sActiveDirectoryConnectorInput is an input type that accepts K8sActiveDirectoryConnectorArgs and K8sActiveDirectoryConnectorOutput values.
// You can construct a concrete instance of `K8sActiveDirectoryConnectorInput` via:
//
//	K8sActiveDirectoryConnectorArgs{...}
type K8sActiveDirectoryConnectorInput interface {
	pulumi.Input

	ToK8sActiveDirectoryConnectorOutput() K8sActiveDirectoryConnectorOutput
	ToK8sActiveDirectoryConnectorOutputWithContext(context.Context) K8sActiveDirectoryConnectorOutput
}

type K8sActiveDirectoryConnectorArgs struct {
	// Name of the connector
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name space of the connector
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (K8sActiveDirectoryConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sActiveDirectoryConnector)(nil)).Elem()
}

func (i K8sActiveDirectoryConnectorArgs) ToK8sActiveDirectoryConnectorOutput() K8sActiveDirectoryConnectorOutput {
	return i.ToK8sActiveDirectoryConnectorOutputWithContext(context.Background())
}

func (i K8sActiveDirectoryConnectorArgs) ToK8sActiveDirectoryConnectorOutputWithContext(ctx context.Context) K8sActiveDirectoryConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sActiveDirectoryConnectorOutput)
}

func (i K8sActiveDirectoryConnectorArgs) ToK8sActiveDirectoryConnectorPtrOutput() K8sActiveDirectoryConnectorPtrOutput {
	return i.ToK8sActiveDirectoryConnectorPtrOutputWithContext(context.Background())
}

func (i K8sActiveDirectoryConnectorArgs) ToK8sActiveDirectoryConnectorPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sActiveDirectoryConnectorOutput).ToK8sActiveDirectoryConnectorPtrOutputWithContext(ctx)
}

// K8sActiveDirectoryConnectorPtrInput is an input type that accepts K8sActiveDirectoryConnectorArgs, K8sActiveDirectoryConnectorPtr and K8sActiveDirectoryConnectorPtrOutput values.
// You can construct a concrete instance of `K8sActiveDirectoryConnectorPtrInput` via:
//
//	        K8sActiveDirectoryConnectorArgs{...}
//
//	or:
//
//	        nil
type K8sActiveDirectoryConnectorPtrInput interface {
	pulumi.Input

	ToK8sActiveDirectoryConnectorPtrOutput() K8sActiveDirectoryConnectorPtrOutput
	ToK8sActiveDirectoryConnectorPtrOutputWithContext(context.Context) K8sActiveDirectoryConnectorPtrOutput
}

type k8sActiveDirectoryConnectorPtrType K8sActiveDirectoryConnectorArgs

func K8sActiveDirectoryConnectorPtr(v *K8sActiveDirectoryConnectorArgs) K8sActiveDirectoryConnectorPtrInput {
	return (*k8sActiveDirectoryConnectorPtrType)(v)
}

func (*k8sActiveDirectoryConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sActiveDirectoryConnector)(nil)).Elem()
}

func (i *k8sActiveDirectoryConnectorPtrType) ToK8sActiveDirectoryConnectorPtrOutput() K8sActiveDirectoryConnectorPtrOutput {
	return i.ToK8sActiveDirectoryConnectorPtrOutputWithContext(context.Background())
}

func (i *k8sActiveDirectoryConnectorPtrType) ToK8sActiveDirectoryConnectorPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sActiveDirectoryConnectorPtrOutput)
}

type K8sActiveDirectoryConnectorOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sActiveDirectoryConnector)(nil)).Elem()
}

func (o K8sActiveDirectoryConnectorOutput) ToK8sActiveDirectoryConnectorOutput() K8sActiveDirectoryConnectorOutput {
	return o
}

func (o K8sActiveDirectoryConnectorOutput) ToK8sActiveDirectoryConnectorOutputWithContext(ctx context.Context) K8sActiveDirectoryConnectorOutput {
	return o
}

func (o K8sActiveDirectoryConnectorOutput) ToK8sActiveDirectoryConnectorPtrOutput() K8sActiveDirectoryConnectorPtrOutput {
	return o.ToK8sActiveDirectoryConnectorPtrOutputWithContext(context.Background())
}

func (o K8sActiveDirectoryConnectorOutput) ToK8sActiveDirectoryConnectorPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sActiveDirectoryConnector) *K8sActiveDirectoryConnector {
		return &v
	}).(K8sActiveDirectoryConnectorPtrOutput)
}

// Name of the connector
func (o K8sActiveDirectoryConnectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryConnector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name space of the connector
func (o K8sActiveDirectoryConnectorOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryConnector) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type K8sActiveDirectoryConnectorPtrOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sActiveDirectoryConnector)(nil)).Elem()
}

func (o K8sActiveDirectoryConnectorPtrOutput) ToK8sActiveDirectoryConnectorPtrOutput() K8sActiveDirectoryConnectorPtrOutput {
	return o
}

func (o K8sActiveDirectoryConnectorPtrOutput) ToK8sActiveDirectoryConnectorPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryConnectorPtrOutput {
	return o
}

func (o K8sActiveDirectoryConnectorPtrOutput) Elem() K8sActiveDirectoryConnectorOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryConnector) K8sActiveDirectoryConnector {
		if v != nil {
			return *v
		}
		var ret K8sActiveDirectoryConnector
		return ret
	}).(K8sActiveDirectoryConnectorOutput)
}

// Name of the connector
func (o K8sActiveDirectoryConnectorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryConnector) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name space of the connector
func (o K8sActiveDirectoryConnectorPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryConnector) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The kubernetes active directory information.
type K8sActiveDirectoryResponse struct {
	// Account name for AAD
	AccountName *string                              `pulumi:"accountName"`
	Connector   *K8sActiveDirectoryResponseConnector `pulumi:"connector"`
	// An array of encryption types
	EncryptionTypes []string `pulumi:"encryptionTypes"`
	// Keytab secret used to authenticate with Active Directory.
	KeytabSecret *string `pulumi:"keytabSecret"`
}

// The kubernetes active directory information.
type K8sActiveDirectoryResponseOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sActiveDirectoryResponse)(nil)).Elem()
}

func (o K8sActiveDirectoryResponseOutput) ToK8sActiveDirectoryResponseOutput() K8sActiveDirectoryResponseOutput {
	return o
}

func (o K8sActiveDirectoryResponseOutput) ToK8sActiveDirectoryResponseOutputWithContext(ctx context.Context) K8sActiveDirectoryResponseOutput {
	return o
}

// Account name for AAD
func (o K8sActiveDirectoryResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

func (o K8sActiveDirectoryResponseOutput) Connector() K8sActiveDirectoryResponseConnectorPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryResponse) *K8sActiveDirectoryResponseConnector { return v.Connector }).(K8sActiveDirectoryResponseConnectorPtrOutput)
}

// An array of encryption types
func (o K8sActiveDirectoryResponseOutput) EncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v K8sActiveDirectoryResponse) []string { return v.EncryptionTypes }).(pulumi.StringArrayOutput)
}

// Keytab secret used to authenticate with Active Directory.
func (o K8sActiveDirectoryResponseOutput) KeytabSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryResponse) *string { return v.KeytabSecret }).(pulumi.StringPtrOutput)
}

type K8sActiveDirectoryResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sActiveDirectoryResponse)(nil)).Elem()
}

func (o K8sActiveDirectoryResponsePtrOutput) ToK8sActiveDirectoryResponsePtrOutput() K8sActiveDirectoryResponsePtrOutput {
	return o
}

func (o K8sActiveDirectoryResponsePtrOutput) ToK8sActiveDirectoryResponsePtrOutputWithContext(ctx context.Context) K8sActiveDirectoryResponsePtrOutput {
	return o
}

func (o K8sActiveDirectoryResponsePtrOutput) Elem() K8sActiveDirectoryResponseOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponse) K8sActiveDirectoryResponse {
		if v != nil {
			return *v
		}
		var ret K8sActiveDirectoryResponse
		return ret
	}).(K8sActiveDirectoryResponseOutput)
}

// Account name for AAD
func (o K8sActiveDirectoryResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

func (o K8sActiveDirectoryResponsePtrOutput) Connector() K8sActiveDirectoryResponseConnectorPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponse) *K8sActiveDirectoryResponseConnector {
		if v == nil {
			return nil
		}
		return v.Connector
	}).(K8sActiveDirectoryResponseConnectorPtrOutput)
}

// An array of encryption types
func (o K8sActiveDirectoryResponsePtrOutput) EncryptionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponse) []string {
		if v == nil {
			return nil
		}
		return v.EncryptionTypes
	}).(pulumi.StringArrayOutput)
}

// Keytab secret used to authenticate with Active Directory.
func (o K8sActiveDirectoryResponsePtrOutput) KeytabSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeytabSecret
	}).(pulumi.StringPtrOutput)
}

type K8sActiveDirectoryResponseConnector struct {
	// Name of the connector
	Name *string `pulumi:"name"`
	// Name space of the connector
	Namespace *string `pulumi:"namespace"`
}

type K8sActiveDirectoryResponseConnectorOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryResponseConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sActiveDirectoryResponseConnector)(nil)).Elem()
}

func (o K8sActiveDirectoryResponseConnectorOutput) ToK8sActiveDirectoryResponseConnectorOutput() K8sActiveDirectoryResponseConnectorOutput {
	return o
}

func (o K8sActiveDirectoryResponseConnectorOutput) ToK8sActiveDirectoryResponseConnectorOutputWithContext(ctx context.Context) K8sActiveDirectoryResponseConnectorOutput {
	return o
}

// Name of the connector
func (o K8sActiveDirectoryResponseConnectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryResponseConnector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name space of the connector
func (o K8sActiveDirectoryResponseConnectorOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sActiveDirectoryResponseConnector) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type K8sActiveDirectoryResponseConnectorPtrOutput struct{ *pulumi.OutputState }

func (K8sActiveDirectoryResponseConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sActiveDirectoryResponseConnector)(nil)).Elem()
}

func (o K8sActiveDirectoryResponseConnectorPtrOutput) ToK8sActiveDirectoryResponseConnectorPtrOutput() K8sActiveDirectoryResponseConnectorPtrOutput {
	return o
}

func (o K8sActiveDirectoryResponseConnectorPtrOutput) ToK8sActiveDirectoryResponseConnectorPtrOutputWithContext(ctx context.Context) K8sActiveDirectoryResponseConnectorPtrOutput {
	return o
}

func (o K8sActiveDirectoryResponseConnectorPtrOutput) Elem() K8sActiveDirectoryResponseConnectorOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponseConnector) K8sActiveDirectoryResponseConnector {
		if v != nil {
			return *v
		}
		var ret K8sActiveDirectoryResponseConnector
		return ret
	}).(K8sActiveDirectoryResponseConnectorOutput)
}

// Name of the connector
func (o K8sActiveDirectoryResponseConnectorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponseConnector) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name space of the connector
func (o K8sActiveDirectoryResponseConnectorPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sActiveDirectoryResponseConnector) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The kubernetes network settings information.
type K8sNetworkSettings struct {
	// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
	Forceencryption *int `pulumi:"forceencryption"`
	// Specifies which ciphers are allowed by SQL Server for TLS
	Tlsciphers *string `pulumi:"tlsciphers"`
	// A comma-separated list of which TLS protocols are allowed by SQL Server
	Tlsprotocols *string `pulumi:"tlsprotocols"`
}

// K8sNetworkSettingsInput is an input type that accepts K8sNetworkSettingsArgs and K8sNetworkSettingsOutput values.
// You can construct a concrete instance of `K8sNetworkSettingsInput` via:
//
//	K8sNetworkSettingsArgs{...}
type K8sNetworkSettingsInput interface {
	pulumi.Input

	ToK8sNetworkSettingsOutput() K8sNetworkSettingsOutput
	ToK8sNetworkSettingsOutputWithContext(context.Context) K8sNetworkSettingsOutput
}

// The kubernetes network settings information.
type K8sNetworkSettingsArgs struct {
	// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
	Forceencryption pulumi.IntPtrInput `pulumi:"forceencryption"`
	// Specifies which ciphers are allowed by SQL Server for TLS
	Tlsciphers pulumi.StringPtrInput `pulumi:"tlsciphers"`
	// A comma-separated list of which TLS protocols are allowed by SQL Server
	Tlsprotocols pulumi.StringPtrInput `pulumi:"tlsprotocols"`
}

func (K8sNetworkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNetworkSettings)(nil)).Elem()
}

func (i K8sNetworkSettingsArgs) ToK8sNetworkSettingsOutput() K8sNetworkSettingsOutput {
	return i.ToK8sNetworkSettingsOutputWithContext(context.Background())
}

func (i K8sNetworkSettingsArgs) ToK8sNetworkSettingsOutputWithContext(ctx context.Context) K8sNetworkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNetworkSettingsOutput)
}

func (i K8sNetworkSettingsArgs) ToK8sNetworkSettingsPtrOutput() K8sNetworkSettingsPtrOutput {
	return i.ToK8sNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i K8sNetworkSettingsArgs) ToK8sNetworkSettingsPtrOutputWithContext(ctx context.Context) K8sNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNetworkSettingsOutput).ToK8sNetworkSettingsPtrOutputWithContext(ctx)
}

// K8sNetworkSettingsPtrInput is an input type that accepts K8sNetworkSettingsArgs, K8sNetworkSettingsPtr and K8sNetworkSettingsPtrOutput values.
// You can construct a concrete instance of `K8sNetworkSettingsPtrInput` via:
//
//	        K8sNetworkSettingsArgs{...}
//
//	or:
//
//	        nil
type K8sNetworkSettingsPtrInput interface {
	pulumi.Input

	ToK8sNetworkSettingsPtrOutput() K8sNetworkSettingsPtrOutput
	ToK8sNetworkSettingsPtrOutputWithContext(context.Context) K8sNetworkSettingsPtrOutput
}

type k8sNetworkSettingsPtrType K8sNetworkSettingsArgs

func K8sNetworkSettingsPtr(v *K8sNetworkSettingsArgs) K8sNetworkSettingsPtrInput {
	return (*k8sNetworkSettingsPtrType)(v)
}

func (*k8sNetworkSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNetworkSettings)(nil)).Elem()
}

func (i *k8sNetworkSettingsPtrType) ToK8sNetworkSettingsPtrOutput() K8sNetworkSettingsPtrOutput {
	return i.ToK8sNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *k8sNetworkSettingsPtrType) ToK8sNetworkSettingsPtrOutputWithContext(ctx context.Context) K8sNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNetworkSettingsPtrOutput)
}

// The kubernetes network settings information.
type K8sNetworkSettingsOutput struct{ *pulumi.OutputState }

func (K8sNetworkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNetworkSettings)(nil)).Elem()
}

func (o K8sNetworkSettingsOutput) ToK8sNetworkSettingsOutput() K8sNetworkSettingsOutput {
	return o
}

func (o K8sNetworkSettingsOutput) ToK8sNetworkSettingsOutputWithContext(ctx context.Context) K8sNetworkSettingsOutput {
	return o
}

func (o K8sNetworkSettingsOutput) ToK8sNetworkSettingsPtrOutput() K8sNetworkSettingsPtrOutput {
	return o.ToK8sNetworkSettingsPtrOutputWithContext(context.Background())
}

func (o K8sNetworkSettingsOutput) ToK8sNetworkSettingsPtrOutputWithContext(ctx context.Context) K8sNetworkSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sNetworkSettings) *K8sNetworkSettings {
		return &v
	}).(K8sNetworkSettingsPtrOutput)
}

// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
func (o K8sNetworkSettingsOutput) Forceencryption() pulumi.IntPtrOutput {
	return o.ApplyT(func(v K8sNetworkSettings) *int { return v.Forceencryption }).(pulumi.IntPtrOutput)
}

// Specifies which ciphers are allowed by SQL Server for TLS
func (o K8sNetworkSettingsOutput) Tlsciphers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sNetworkSettings) *string { return v.Tlsciphers }).(pulumi.StringPtrOutput)
}

// A comma-separated list of which TLS protocols are allowed by SQL Server
func (o K8sNetworkSettingsOutput) Tlsprotocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sNetworkSettings) *string { return v.Tlsprotocols }).(pulumi.StringPtrOutput)
}

type K8sNetworkSettingsPtrOutput struct{ *pulumi.OutputState }

func (K8sNetworkSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNetworkSettings)(nil)).Elem()
}

func (o K8sNetworkSettingsPtrOutput) ToK8sNetworkSettingsPtrOutput() K8sNetworkSettingsPtrOutput {
	return o
}

func (o K8sNetworkSettingsPtrOutput) ToK8sNetworkSettingsPtrOutputWithContext(ctx context.Context) K8sNetworkSettingsPtrOutput {
	return o
}

func (o K8sNetworkSettingsPtrOutput) Elem() K8sNetworkSettingsOutput {
	return o.ApplyT(func(v *K8sNetworkSettings) K8sNetworkSettings {
		if v != nil {
			return *v
		}
		var ret K8sNetworkSettings
		return ret
	}).(K8sNetworkSettingsOutput)
}

// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
func (o K8sNetworkSettingsPtrOutput) Forceencryption() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *K8sNetworkSettings) *int {
		if v == nil {
			return nil
		}
		return v.Forceencryption
	}).(pulumi.IntPtrOutput)
}

// Specifies which ciphers are allowed by SQL Server for TLS
func (o K8sNetworkSettingsPtrOutput) Tlsciphers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNetworkSettings) *string {
		if v == nil {
			return nil
		}
		return v.Tlsciphers
	}).(pulumi.StringPtrOutput)
}

// A comma-separated list of which TLS protocols are allowed by SQL Server
func (o K8sNetworkSettingsPtrOutput) Tlsprotocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNetworkSettings) *string {
		if v == nil {
			return nil
		}
		return v.Tlsprotocols
	}).(pulumi.StringPtrOutput)
}

// The kubernetes network settings information.
type K8sNetworkSettingsResponse struct {
	// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
	Forceencryption *int `pulumi:"forceencryption"`
	// Specifies which ciphers are allowed by SQL Server for TLS
	Tlsciphers *string `pulumi:"tlsciphers"`
	// A comma-separated list of which TLS protocols are allowed by SQL Server
	Tlsprotocols *string `pulumi:"tlsprotocols"`
}

// The kubernetes network settings information.
type K8sNetworkSettingsResponseOutput struct{ *pulumi.OutputState }

func (K8sNetworkSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNetworkSettingsResponse)(nil)).Elem()
}

func (o K8sNetworkSettingsResponseOutput) ToK8sNetworkSettingsResponseOutput() K8sNetworkSettingsResponseOutput {
	return o
}

func (o K8sNetworkSettingsResponseOutput) ToK8sNetworkSettingsResponseOutputWithContext(ctx context.Context) K8sNetworkSettingsResponseOutput {
	return o
}

// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
func (o K8sNetworkSettingsResponseOutput) Forceencryption() pulumi.IntPtrOutput {
	return o.ApplyT(func(v K8sNetworkSettingsResponse) *int { return v.Forceencryption }).(pulumi.IntPtrOutput)
}

// Specifies which ciphers are allowed by SQL Server for TLS
func (o K8sNetworkSettingsResponseOutput) Tlsciphers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sNetworkSettingsResponse) *string { return v.Tlsciphers }).(pulumi.StringPtrOutput)
}

// A comma-separated list of which TLS protocols are allowed by SQL Server
func (o K8sNetworkSettingsResponseOutput) Tlsprotocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sNetworkSettingsResponse) *string { return v.Tlsprotocols }).(pulumi.StringPtrOutput)
}

type K8sNetworkSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sNetworkSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNetworkSettingsResponse)(nil)).Elem()
}

func (o K8sNetworkSettingsResponsePtrOutput) ToK8sNetworkSettingsResponsePtrOutput() K8sNetworkSettingsResponsePtrOutput {
	return o
}

func (o K8sNetworkSettingsResponsePtrOutput) ToK8sNetworkSettingsResponsePtrOutputWithContext(ctx context.Context) K8sNetworkSettingsResponsePtrOutput {
	return o
}

func (o K8sNetworkSettingsResponsePtrOutput) Elem() K8sNetworkSettingsResponseOutput {
	return o.ApplyT(func(v *K8sNetworkSettingsResponse) K8sNetworkSettingsResponse {
		if v != nil {
			return *v
		}
		var ret K8sNetworkSettingsResponse
		return ret
	}).(K8sNetworkSettingsResponseOutput)
}

// If 1, then SQL Server forces all connections to be encrypted. By default, this option is 0
func (o K8sNetworkSettingsResponsePtrOutput) Forceencryption() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *K8sNetworkSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Forceencryption
	}).(pulumi.IntPtrOutput)
}

// Specifies which ciphers are allowed by SQL Server for TLS
func (o K8sNetworkSettingsResponsePtrOutput) Tlsciphers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNetworkSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tlsciphers
	}).(pulumi.StringPtrOutput)
}

// A comma-separated list of which TLS protocols are allowed by SQL Server
func (o K8sNetworkSettingsResponsePtrOutput) Tlsprotocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNetworkSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tlsprotocols
	}).(pulumi.StringPtrOutput)
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
type K8sResourceRequirements struct {
	// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
	Limits map[string]string `pulumi:"limits"`
	// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
	Requests map[string]string `pulumi:"requests"`
}

// K8sResourceRequirementsInput is an input type that accepts K8sResourceRequirementsArgs and K8sResourceRequirementsOutput values.
// You can construct a concrete instance of `K8sResourceRequirementsInput` via:
//
//	K8sResourceRequirementsArgs{...}
type K8sResourceRequirementsInput interface {
	pulumi.Input

	ToK8sResourceRequirementsOutput() K8sResourceRequirementsOutput
	ToK8sResourceRequirementsOutputWithContext(context.Context) K8sResourceRequirementsOutput
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
type K8sResourceRequirementsArgs struct {
	// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (K8sResourceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sResourceRequirements)(nil)).Elem()
}

func (i K8sResourceRequirementsArgs) ToK8sResourceRequirementsOutput() K8sResourceRequirementsOutput {
	return i.ToK8sResourceRequirementsOutputWithContext(context.Background())
}

func (i K8sResourceRequirementsArgs) ToK8sResourceRequirementsOutputWithContext(ctx context.Context) K8sResourceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sResourceRequirementsOutput)
}

func (i K8sResourceRequirementsArgs) ToK8sResourceRequirementsPtrOutput() K8sResourceRequirementsPtrOutput {
	return i.ToK8sResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i K8sResourceRequirementsArgs) ToK8sResourceRequirementsPtrOutputWithContext(ctx context.Context) K8sResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sResourceRequirementsOutput).ToK8sResourceRequirementsPtrOutputWithContext(ctx)
}

// K8sResourceRequirementsPtrInput is an input type that accepts K8sResourceRequirementsArgs, K8sResourceRequirementsPtr and K8sResourceRequirementsPtrOutput values.
// You can construct a concrete instance of `K8sResourceRequirementsPtrInput` via:
//
//	        K8sResourceRequirementsArgs{...}
//
//	or:
//
//	        nil
type K8sResourceRequirementsPtrInput interface {
	pulumi.Input

	ToK8sResourceRequirementsPtrOutput() K8sResourceRequirementsPtrOutput
	ToK8sResourceRequirementsPtrOutputWithContext(context.Context) K8sResourceRequirementsPtrOutput
}

type k8sResourceRequirementsPtrType K8sResourceRequirementsArgs

func K8sResourceRequirementsPtr(v *K8sResourceRequirementsArgs) K8sResourceRequirementsPtrInput {
	return (*k8sResourceRequirementsPtrType)(v)
}

func (*k8sResourceRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sResourceRequirements)(nil)).Elem()
}

func (i *k8sResourceRequirementsPtrType) ToK8sResourceRequirementsPtrOutput() K8sResourceRequirementsPtrOutput {
	return i.ToK8sResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i *k8sResourceRequirementsPtrType) ToK8sResourceRequirementsPtrOutputWithContext(ctx context.Context) K8sResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sResourceRequirementsPtrOutput)
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
type K8sResourceRequirementsOutput struct{ *pulumi.OutputState }

func (K8sResourceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sResourceRequirements)(nil)).Elem()
}

func (o K8sResourceRequirementsOutput) ToK8sResourceRequirementsOutput() K8sResourceRequirementsOutput {
	return o
}

func (o K8sResourceRequirementsOutput) ToK8sResourceRequirementsOutputWithContext(ctx context.Context) K8sResourceRequirementsOutput {
	return o
}

func (o K8sResourceRequirementsOutput) ToK8sResourceRequirementsPtrOutput() K8sResourceRequirementsPtrOutput {
	return o.ToK8sResourceRequirementsPtrOutputWithContext(context.Background())
}

func (o K8sResourceRequirementsOutput) ToK8sResourceRequirementsPtrOutputWithContext(ctx context.Context) K8sResourceRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sResourceRequirements) *K8sResourceRequirements {
		return &v
	}).(K8sResourceRequirementsPtrOutput)
}

// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sResourceRequirements) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sResourceRequirements) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type K8sResourceRequirementsPtrOutput struct{ *pulumi.OutputState }

func (K8sResourceRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sResourceRequirements)(nil)).Elem()
}

func (o K8sResourceRequirementsPtrOutput) ToK8sResourceRequirementsPtrOutput() K8sResourceRequirementsPtrOutput {
	return o
}

func (o K8sResourceRequirementsPtrOutput) ToK8sResourceRequirementsPtrOutputWithContext(ctx context.Context) K8sResourceRequirementsPtrOutput {
	return o
}

func (o K8sResourceRequirementsPtrOutput) Elem() K8sResourceRequirementsOutput {
	return o.ApplyT(func(v *K8sResourceRequirements) K8sResourceRequirements {
		if v != nil {
			return *v
		}
		var ret K8sResourceRequirements
		return ret
	}).(K8sResourceRequirementsOutput)
}

// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *K8sResourceRequirements) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *K8sResourceRequirements) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
type K8sResourceRequirementsResponse struct {
	// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
	Limits map[string]string `pulumi:"limits"`
	// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
	Requests map[string]string `pulumi:"requests"`
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
type K8sResourceRequirementsResponseOutput struct{ *pulumi.OutputState }

func (K8sResourceRequirementsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sResourceRequirementsResponse)(nil)).Elem()
}

func (o K8sResourceRequirementsResponseOutput) ToK8sResourceRequirementsResponseOutput() K8sResourceRequirementsResponseOutput {
	return o
}

func (o K8sResourceRequirementsResponseOutput) ToK8sResourceRequirementsResponseOutputWithContext(ctx context.Context) K8sResourceRequirementsResponseOutput {
	return o
}

// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsResponseOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sResourceRequirementsResponse) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsResponseOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sResourceRequirementsResponse) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type K8sResourceRequirementsResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sResourceRequirementsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sResourceRequirementsResponse)(nil)).Elem()
}

func (o K8sResourceRequirementsResponsePtrOutput) ToK8sResourceRequirementsResponsePtrOutput() K8sResourceRequirementsResponsePtrOutput {
	return o
}

func (o K8sResourceRequirementsResponsePtrOutput) ToK8sResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) K8sResourceRequirementsResponsePtrOutput {
	return o
}

func (o K8sResourceRequirementsResponsePtrOutput) Elem() K8sResourceRequirementsResponseOutput {
	return o.ApplyT(func(v *K8sResourceRequirementsResponse) K8sResourceRequirementsResponse {
		if v != nil {
			return *v
		}
		var ret K8sResourceRequirementsResponse
		return ret
	}).(K8sResourceRequirementsResponseOutput)
}

// Limits for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsResponsePtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *K8sResourceRequirementsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests for a kubernetes resource type (e.g 'cpu', 'memory'). The 'cpu' request must be less than or equal to 'cpu' limit. Default 'cpu' is 2, minimum is 1. Default 'memory' is '4Gi', minimum is '2Gi. If sku.tier is GeneralPurpose, maximum 'cpu' is 24 and maximum 'memory' is '128Gi'.
func (o K8sResourceRequirementsResponsePtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *K8sResourceRequirementsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// The kubernetes scheduling information.
type K8sScheduling struct {
	// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
	Default *K8sSchedulingOptions `pulumi:"default"`
}

// K8sSchedulingInput is an input type that accepts K8sSchedulingArgs and K8sSchedulingOutput values.
// You can construct a concrete instance of `K8sSchedulingInput` via:
//
//	K8sSchedulingArgs{...}
type K8sSchedulingInput interface {
	pulumi.Input

	ToK8sSchedulingOutput() K8sSchedulingOutput
	ToK8sSchedulingOutputWithContext(context.Context) K8sSchedulingOutput
}

// The kubernetes scheduling information.
type K8sSchedulingArgs struct {
	// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
	Default K8sSchedulingOptionsPtrInput `pulumi:"default"`
}

func (K8sSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sScheduling)(nil)).Elem()
}

func (i K8sSchedulingArgs) ToK8sSchedulingOutput() K8sSchedulingOutput {
	return i.ToK8sSchedulingOutputWithContext(context.Background())
}

func (i K8sSchedulingArgs) ToK8sSchedulingOutputWithContext(ctx context.Context) K8sSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSchedulingOutput)
}

func (i K8sSchedulingArgs) ToK8sSchedulingPtrOutput() K8sSchedulingPtrOutput {
	return i.ToK8sSchedulingPtrOutputWithContext(context.Background())
}

func (i K8sSchedulingArgs) ToK8sSchedulingPtrOutputWithContext(ctx context.Context) K8sSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSchedulingOutput).ToK8sSchedulingPtrOutputWithContext(ctx)
}

// K8sSchedulingPtrInput is an input type that accepts K8sSchedulingArgs, K8sSchedulingPtr and K8sSchedulingPtrOutput values.
// You can construct a concrete instance of `K8sSchedulingPtrInput` via:
//
//	        K8sSchedulingArgs{...}
//
//	or:
//
//	        nil
type K8sSchedulingPtrInput interface {
	pulumi.Input

	ToK8sSchedulingPtrOutput() K8sSchedulingPtrOutput
	ToK8sSchedulingPtrOutputWithContext(context.Context) K8sSchedulingPtrOutput
}

type k8sSchedulingPtrType K8sSchedulingArgs

func K8sSchedulingPtr(v *K8sSchedulingArgs) K8sSchedulingPtrInput {
	return (*k8sSchedulingPtrType)(v)
}

func (*k8sSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sScheduling)(nil)).Elem()
}

func (i *k8sSchedulingPtrType) ToK8sSchedulingPtrOutput() K8sSchedulingPtrOutput {
	return i.ToK8sSchedulingPtrOutputWithContext(context.Background())
}

func (i *k8sSchedulingPtrType) ToK8sSchedulingPtrOutputWithContext(ctx context.Context) K8sSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSchedulingPtrOutput)
}

// The kubernetes scheduling information.
type K8sSchedulingOutput struct{ *pulumi.OutputState }

func (K8sSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sScheduling)(nil)).Elem()
}

func (o K8sSchedulingOutput) ToK8sSchedulingOutput() K8sSchedulingOutput {
	return o
}

func (o K8sSchedulingOutput) ToK8sSchedulingOutputWithContext(ctx context.Context) K8sSchedulingOutput {
	return o
}

func (o K8sSchedulingOutput) ToK8sSchedulingPtrOutput() K8sSchedulingPtrOutput {
	return o.ToK8sSchedulingPtrOutputWithContext(context.Background())
}

func (o K8sSchedulingOutput) ToK8sSchedulingPtrOutputWithContext(ctx context.Context) K8sSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sScheduling) *K8sScheduling {
		return &v
	}).(K8sSchedulingPtrOutput)
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
func (o K8sSchedulingOutput) Default() K8sSchedulingOptionsPtrOutput {
	return o.ApplyT(func(v K8sScheduling) *K8sSchedulingOptions { return v.Default }).(K8sSchedulingOptionsPtrOutput)
}

type K8sSchedulingPtrOutput struct{ *pulumi.OutputState }

func (K8sSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sScheduling)(nil)).Elem()
}

func (o K8sSchedulingPtrOutput) ToK8sSchedulingPtrOutput() K8sSchedulingPtrOutput {
	return o
}

func (o K8sSchedulingPtrOutput) ToK8sSchedulingPtrOutputWithContext(ctx context.Context) K8sSchedulingPtrOutput {
	return o
}

func (o K8sSchedulingPtrOutput) Elem() K8sSchedulingOutput {
	return o.ApplyT(func(v *K8sScheduling) K8sScheduling {
		if v != nil {
			return *v
		}
		var ret K8sScheduling
		return ret
	}).(K8sSchedulingOutput)
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
func (o K8sSchedulingPtrOutput) Default() K8sSchedulingOptionsPtrOutput {
	return o.ApplyT(func(v *K8sScheduling) *K8sSchedulingOptions {
		if v == nil {
			return nil
		}
		return v.Default
	}).(K8sSchedulingOptionsPtrOutput)
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
type K8sSchedulingOptions struct {
	// The kubernetes resource limits and requests used to restrict or reserve resource usage.
	Resources *K8sResourceRequirements `pulumi:"resources"`
}

// K8sSchedulingOptionsInput is an input type that accepts K8sSchedulingOptionsArgs and K8sSchedulingOptionsOutput values.
// You can construct a concrete instance of `K8sSchedulingOptionsInput` via:
//
//	K8sSchedulingOptionsArgs{...}
type K8sSchedulingOptionsInput interface {
	pulumi.Input

	ToK8sSchedulingOptionsOutput() K8sSchedulingOptionsOutput
	ToK8sSchedulingOptionsOutputWithContext(context.Context) K8sSchedulingOptionsOutput
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
type K8sSchedulingOptionsArgs struct {
	// The kubernetes resource limits and requests used to restrict or reserve resource usage.
	Resources K8sResourceRequirementsPtrInput `pulumi:"resources"`
}

func (K8sSchedulingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSchedulingOptions)(nil)).Elem()
}

func (i K8sSchedulingOptionsArgs) ToK8sSchedulingOptionsOutput() K8sSchedulingOptionsOutput {
	return i.ToK8sSchedulingOptionsOutputWithContext(context.Background())
}

func (i K8sSchedulingOptionsArgs) ToK8sSchedulingOptionsOutputWithContext(ctx context.Context) K8sSchedulingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSchedulingOptionsOutput)
}

func (i K8sSchedulingOptionsArgs) ToK8sSchedulingOptionsPtrOutput() K8sSchedulingOptionsPtrOutput {
	return i.ToK8sSchedulingOptionsPtrOutputWithContext(context.Background())
}

func (i K8sSchedulingOptionsArgs) ToK8sSchedulingOptionsPtrOutputWithContext(ctx context.Context) K8sSchedulingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSchedulingOptionsOutput).ToK8sSchedulingOptionsPtrOutputWithContext(ctx)
}

// K8sSchedulingOptionsPtrInput is an input type that accepts K8sSchedulingOptionsArgs, K8sSchedulingOptionsPtr and K8sSchedulingOptionsPtrOutput values.
// You can construct a concrete instance of `K8sSchedulingOptionsPtrInput` via:
//
//	        K8sSchedulingOptionsArgs{...}
//
//	or:
//
//	        nil
type K8sSchedulingOptionsPtrInput interface {
	pulumi.Input

	ToK8sSchedulingOptionsPtrOutput() K8sSchedulingOptionsPtrOutput
	ToK8sSchedulingOptionsPtrOutputWithContext(context.Context) K8sSchedulingOptionsPtrOutput
}

type k8sSchedulingOptionsPtrType K8sSchedulingOptionsArgs

func K8sSchedulingOptionsPtr(v *K8sSchedulingOptionsArgs) K8sSchedulingOptionsPtrInput {
	return (*k8sSchedulingOptionsPtrType)(v)
}

func (*k8sSchedulingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSchedulingOptions)(nil)).Elem()
}

func (i *k8sSchedulingOptionsPtrType) ToK8sSchedulingOptionsPtrOutput() K8sSchedulingOptionsPtrOutput {
	return i.ToK8sSchedulingOptionsPtrOutputWithContext(context.Background())
}

func (i *k8sSchedulingOptionsPtrType) ToK8sSchedulingOptionsPtrOutputWithContext(ctx context.Context) K8sSchedulingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSchedulingOptionsPtrOutput)
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
type K8sSchedulingOptionsOutput struct{ *pulumi.OutputState }

func (K8sSchedulingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSchedulingOptions)(nil)).Elem()
}

func (o K8sSchedulingOptionsOutput) ToK8sSchedulingOptionsOutput() K8sSchedulingOptionsOutput {
	return o
}

func (o K8sSchedulingOptionsOutput) ToK8sSchedulingOptionsOutputWithContext(ctx context.Context) K8sSchedulingOptionsOutput {
	return o
}

func (o K8sSchedulingOptionsOutput) ToK8sSchedulingOptionsPtrOutput() K8sSchedulingOptionsPtrOutput {
	return o.ToK8sSchedulingOptionsPtrOutputWithContext(context.Background())
}

func (o K8sSchedulingOptionsOutput) ToK8sSchedulingOptionsPtrOutputWithContext(ctx context.Context) K8sSchedulingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sSchedulingOptions) *K8sSchedulingOptions {
		return &v
	}).(K8sSchedulingOptionsPtrOutput)
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
func (o K8sSchedulingOptionsOutput) Resources() K8sResourceRequirementsPtrOutput {
	return o.ApplyT(func(v K8sSchedulingOptions) *K8sResourceRequirements { return v.Resources }).(K8sResourceRequirementsPtrOutput)
}

type K8sSchedulingOptionsPtrOutput struct{ *pulumi.OutputState }

func (K8sSchedulingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSchedulingOptions)(nil)).Elem()
}

func (o K8sSchedulingOptionsPtrOutput) ToK8sSchedulingOptionsPtrOutput() K8sSchedulingOptionsPtrOutput {
	return o
}

func (o K8sSchedulingOptionsPtrOutput) ToK8sSchedulingOptionsPtrOutputWithContext(ctx context.Context) K8sSchedulingOptionsPtrOutput {
	return o
}

func (o K8sSchedulingOptionsPtrOutput) Elem() K8sSchedulingOptionsOutput {
	return o.ApplyT(func(v *K8sSchedulingOptions) K8sSchedulingOptions {
		if v != nil {
			return *v
		}
		var ret K8sSchedulingOptions
		return ret
	}).(K8sSchedulingOptionsOutput)
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
func (o K8sSchedulingOptionsPtrOutput) Resources() K8sResourceRequirementsPtrOutput {
	return o.ApplyT(func(v *K8sSchedulingOptions) *K8sResourceRequirements {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(K8sResourceRequirementsPtrOutput)
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
type K8sSchedulingOptionsResponse struct {
	// The kubernetes resource limits and requests used to restrict or reserve resource usage.
	Resources *K8sResourceRequirementsResponse `pulumi:"resources"`
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
type K8sSchedulingOptionsResponseOutput struct{ *pulumi.OutputState }

func (K8sSchedulingOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSchedulingOptionsResponse)(nil)).Elem()
}

func (o K8sSchedulingOptionsResponseOutput) ToK8sSchedulingOptionsResponseOutput() K8sSchedulingOptionsResponseOutput {
	return o
}

func (o K8sSchedulingOptionsResponseOutput) ToK8sSchedulingOptionsResponseOutputWithContext(ctx context.Context) K8sSchedulingOptionsResponseOutput {
	return o
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
func (o K8sSchedulingOptionsResponseOutput) Resources() K8sResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v K8sSchedulingOptionsResponse) *K8sResourceRequirementsResponse { return v.Resources }).(K8sResourceRequirementsResponsePtrOutput)
}

type K8sSchedulingOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sSchedulingOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSchedulingOptionsResponse)(nil)).Elem()
}

func (o K8sSchedulingOptionsResponsePtrOutput) ToK8sSchedulingOptionsResponsePtrOutput() K8sSchedulingOptionsResponsePtrOutput {
	return o
}

func (o K8sSchedulingOptionsResponsePtrOutput) ToK8sSchedulingOptionsResponsePtrOutputWithContext(ctx context.Context) K8sSchedulingOptionsResponsePtrOutput {
	return o
}

func (o K8sSchedulingOptionsResponsePtrOutput) Elem() K8sSchedulingOptionsResponseOutput {
	return o.ApplyT(func(v *K8sSchedulingOptionsResponse) K8sSchedulingOptionsResponse {
		if v != nil {
			return *v
		}
		var ret K8sSchedulingOptionsResponse
		return ret
	}).(K8sSchedulingOptionsResponseOutput)
}

// The kubernetes resource limits and requests used to restrict or reserve resource usage.
func (o K8sSchedulingOptionsResponsePtrOutput) Resources() K8sResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v *K8sSchedulingOptionsResponse) *K8sResourceRequirementsResponse {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(K8sResourceRequirementsResponsePtrOutput)
}

// The kubernetes scheduling information.
type K8sSchedulingResponse struct {
	// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
	Default *K8sSchedulingOptionsResponse `pulumi:"default"`
}

// The kubernetes scheduling information.
type K8sSchedulingResponseOutput struct{ *pulumi.OutputState }

func (K8sSchedulingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSchedulingResponse)(nil)).Elem()
}

func (o K8sSchedulingResponseOutput) ToK8sSchedulingResponseOutput() K8sSchedulingResponseOutput {
	return o
}

func (o K8sSchedulingResponseOutput) ToK8sSchedulingResponseOutputWithContext(ctx context.Context) K8sSchedulingResponseOutput {
	return o
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
func (o K8sSchedulingResponseOutput) Default() K8sSchedulingOptionsResponsePtrOutput {
	return o.ApplyT(func(v K8sSchedulingResponse) *K8sSchedulingOptionsResponse { return v.Default }).(K8sSchedulingOptionsResponsePtrOutput)
}

type K8sSchedulingResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sSchedulingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSchedulingResponse)(nil)).Elem()
}

func (o K8sSchedulingResponsePtrOutput) ToK8sSchedulingResponsePtrOutput() K8sSchedulingResponsePtrOutput {
	return o
}

func (o K8sSchedulingResponsePtrOutput) ToK8sSchedulingResponsePtrOutputWithContext(ctx context.Context) K8sSchedulingResponsePtrOutput {
	return o
}

func (o K8sSchedulingResponsePtrOutput) Elem() K8sSchedulingResponseOutput {
	return o.ApplyT(func(v *K8sSchedulingResponse) K8sSchedulingResponse {
		if v != nil {
			return *v
		}
		var ret K8sSchedulingResponse
		return ret
	}).(K8sSchedulingResponseOutput)
}

// The kubernetes scheduling options. It describes restrictions used to help Kubernetes select appropriate nodes to host the database service
func (o K8sSchedulingResponsePtrOutput) Default() K8sSchedulingOptionsResponsePtrOutput {
	return o.ApplyT(func(v *K8sSchedulingResponse) *K8sSchedulingOptionsResponse {
		if v == nil {
			return nil
		}
		return v.Default
	}).(K8sSchedulingOptionsResponsePtrOutput)
}

// The kubernetes security information.
type K8sSecurity struct {
	// The kubernetes active directory information.
	ActiveDirectory *K8sActiveDirectory `pulumi:"activeDirectory"`
	// Admin login secret key
	AdminLoginSecret *string `pulumi:"adminLoginSecret"`
	// Service certificate secret used
	ServiceCertificateSecret *string `pulumi:"serviceCertificateSecret"`
	// Transparent data encryption information.
	TransparentDataEncryption *K8stransparentDataEncryption `pulumi:"transparentDataEncryption"`
}

// K8sSecurityInput is an input type that accepts K8sSecurityArgs and K8sSecurityOutput values.
// You can construct a concrete instance of `K8sSecurityInput` via:
//
//	K8sSecurityArgs{...}
type K8sSecurityInput interface {
	pulumi.Input

	ToK8sSecurityOutput() K8sSecurityOutput
	ToK8sSecurityOutputWithContext(context.Context) K8sSecurityOutput
}

// The kubernetes security information.
type K8sSecurityArgs struct {
	// The kubernetes active directory information.
	ActiveDirectory K8sActiveDirectoryPtrInput `pulumi:"activeDirectory"`
	// Admin login secret key
	AdminLoginSecret pulumi.StringPtrInput `pulumi:"adminLoginSecret"`
	// Service certificate secret used
	ServiceCertificateSecret pulumi.StringPtrInput `pulumi:"serviceCertificateSecret"`
	// Transparent data encryption information.
	TransparentDataEncryption K8stransparentDataEncryptionPtrInput `pulumi:"transparentDataEncryption"`
}

func (K8sSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSecurity)(nil)).Elem()
}

func (i K8sSecurityArgs) ToK8sSecurityOutput() K8sSecurityOutput {
	return i.ToK8sSecurityOutputWithContext(context.Background())
}

func (i K8sSecurityArgs) ToK8sSecurityOutputWithContext(ctx context.Context) K8sSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSecurityOutput)
}

func (i K8sSecurityArgs) ToK8sSecurityPtrOutput() K8sSecurityPtrOutput {
	return i.ToK8sSecurityPtrOutputWithContext(context.Background())
}

func (i K8sSecurityArgs) ToK8sSecurityPtrOutputWithContext(ctx context.Context) K8sSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSecurityOutput).ToK8sSecurityPtrOutputWithContext(ctx)
}

// K8sSecurityPtrInput is an input type that accepts K8sSecurityArgs, K8sSecurityPtr and K8sSecurityPtrOutput values.
// You can construct a concrete instance of `K8sSecurityPtrInput` via:
//
//	        K8sSecurityArgs{...}
//
//	or:
//
//	        nil
type K8sSecurityPtrInput interface {
	pulumi.Input

	ToK8sSecurityPtrOutput() K8sSecurityPtrOutput
	ToK8sSecurityPtrOutputWithContext(context.Context) K8sSecurityPtrOutput
}

type k8sSecurityPtrType K8sSecurityArgs

func K8sSecurityPtr(v *K8sSecurityArgs) K8sSecurityPtrInput {
	return (*k8sSecurityPtrType)(v)
}

func (*k8sSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSecurity)(nil)).Elem()
}

func (i *k8sSecurityPtrType) ToK8sSecurityPtrOutput() K8sSecurityPtrOutput {
	return i.ToK8sSecurityPtrOutputWithContext(context.Background())
}

func (i *k8sSecurityPtrType) ToK8sSecurityPtrOutputWithContext(ctx context.Context) K8sSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSecurityPtrOutput)
}

// The kubernetes security information.
type K8sSecurityOutput struct{ *pulumi.OutputState }

func (K8sSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSecurity)(nil)).Elem()
}

func (o K8sSecurityOutput) ToK8sSecurityOutput() K8sSecurityOutput {
	return o
}

func (o K8sSecurityOutput) ToK8sSecurityOutputWithContext(ctx context.Context) K8sSecurityOutput {
	return o
}

func (o K8sSecurityOutput) ToK8sSecurityPtrOutput() K8sSecurityPtrOutput {
	return o.ToK8sSecurityPtrOutputWithContext(context.Background())
}

func (o K8sSecurityOutput) ToK8sSecurityPtrOutputWithContext(ctx context.Context) K8sSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sSecurity) *K8sSecurity {
		return &v
	}).(K8sSecurityPtrOutput)
}

// The kubernetes active directory information.
func (o K8sSecurityOutput) ActiveDirectory() K8sActiveDirectoryPtrOutput {
	return o.ApplyT(func(v K8sSecurity) *K8sActiveDirectory { return v.ActiveDirectory }).(K8sActiveDirectoryPtrOutput)
}

// Admin login secret key
func (o K8sSecurityOutput) AdminLoginSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSecurity) *string { return v.AdminLoginSecret }).(pulumi.StringPtrOutput)
}

// Service certificate secret used
func (o K8sSecurityOutput) ServiceCertificateSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSecurity) *string { return v.ServiceCertificateSecret }).(pulumi.StringPtrOutput)
}

// Transparent data encryption information.
func (o K8sSecurityOutput) TransparentDataEncryption() K8stransparentDataEncryptionPtrOutput {
	return o.ApplyT(func(v K8sSecurity) *K8stransparentDataEncryption { return v.TransparentDataEncryption }).(K8stransparentDataEncryptionPtrOutput)
}

type K8sSecurityPtrOutput struct{ *pulumi.OutputState }

func (K8sSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSecurity)(nil)).Elem()
}

func (o K8sSecurityPtrOutput) ToK8sSecurityPtrOutput() K8sSecurityPtrOutput {
	return o
}

func (o K8sSecurityPtrOutput) ToK8sSecurityPtrOutputWithContext(ctx context.Context) K8sSecurityPtrOutput {
	return o
}

func (o K8sSecurityPtrOutput) Elem() K8sSecurityOutput {
	return o.ApplyT(func(v *K8sSecurity) K8sSecurity {
		if v != nil {
			return *v
		}
		var ret K8sSecurity
		return ret
	}).(K8sSecurityOutput)
}

// The kubernetes active directory information.
func (o K8sSecurityPtrOutput) ActiveDirectory() K8sActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *K8sSecurity) *K8sActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(K8sActiveDirectoryPtrOutput)
}

// Admin login secret key
func (o K8sSecurityPtrOutput) AdminLoginSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sSecurity) *string {
		if v == nil {
			return nil
		}
		return v.AdminLoginSecret
	}).(pulumi.StringPtrOutput)
}

// Service certificate secret used
func (o K8sSecurityPtrOutput) ServiceCertificateSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sSecurity) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCertificateSecret
	}).(pulumi.StringPtrOutput)
}

// Transparent data encryption information.
func (o K8sSecurityPtrOutput) TransparentDataEncryption() K8stransparentDataEncryptionPtrOutput {
	return o.ApplyT(func(v *K8sSecurity) *K8stransparentDataEncryption {
		if v == nil {
			return nil
		}
		return v.TransparentDataEncryption
	}).(K8stransparentDataEncryptionPtrOutput)
}

// The kubernetes security information.
type K8sSecurityResponse struct {
	// The kubernetes active directory information.
	ActiveDirectory *K8sActiveDirectoryResponse `pulumi:"activeDirectory"`
	// Admin login secret key
	AdminLoginSecret *string `pulumi:"adminLoginSecret"`
	// Service certificate secret used
	ServiceCertificateSecret *string `pulumi:"serviceCertificateSecret"`
	// Transparent data encryption information.
	TransparentDataEncryption *K8stransparentDataEncryptionResponse `pulumi:"transparentDataEncryption"`
}

// The kubernetes security information.
type K8sSecurityResponseOutput struct{ *pulumi.OutputState }

func (K8sSecurityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSecurityResponse)(nil)).Elem()
}

func (o K8sSecurityResponseOutput) ToK8sSecurityResponseOutput() K8sSecurityResponseOutput {
	return o
}

func (o K8sSecurityResponseOutput) ToK8sSecurityResponseOutputWithContext(ctx context.Context) K8sSecurityResponseOutput {
	return o
}

// The kubernetes active directory information.
func (o K8sSecurityResponseOutput) ActiveDirectory() K8sActiveDirectoryResponsePtrOutput {
	return o.ApplyT(func(v K8sSecurityResponse) *K8sActiveDirectoryResponse { return v.ActiveDirectory }).(K8sActiveDirectoryResponsePtrOutput)
}

// Admin login secret key
func (o K8sSecurityResponseOutput) AdminLoginSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSecurityResponse) *string { return v.AdminLoginSecret }).(pulumi.StringPtrOutput)
}

// Service certificate secret used
func (o K8sSecurityResponseOutput) ServiceCertificateSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSecurityResponse) *string { return v.ServiceCertificateSecret }).(pulumi.StringPtrOutput)
}

// Transparent data encryption information.
func (o K8sSecurityResponseOutput) TransparentDataEncryption() K8stransparentDataEncryptionResponsePtrOutput {
	return o.ApplyT(func(v K8sSecurityResponse) *K8stransparentDataEncryptionResponse { return v.TransparentDataEncryption }).(K8stransparentDataEncryptionResponsePtrOutput)
}

type K8sSecurityResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sSecurityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSecurityResponse)(nil)).Elem()
}

func (o K8sSecurityResponsePtrOutput) ToK8sSecurityResponsePtrOutput() K8sSecurityResponsePtrOutput {
	return o
}

func (o K8sSecurityResponsePtrOutput) ToK8sSecurityResponsePtrOutputWithContext(ctx context.Context) K8sSecurityResponsePtrOutput {
	return o
}

func (o K8sSecurityResponsePtrOutput) Elem() K8sSecurityResponseOutput {
	return o.ApplyT(func(v *K8sSecurityResponse) K8sSecurityResponse {
		if v != nil {
			return *v
		}
		var ret K8sSecurityResponse
		return ret
	}).(K8sSecurityResponseOutput)
}

// The kubernetes active directory information.
func (o K8sSecurityResponsePtrOutput) ActiveDirectory() K8sActiveDirectoryResponsePtrOutput {
	return o.ApplyT(func(v *K8sSecurityResponse) *K8sActiveDirectoryResponse {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(K8sActiveDirectoryResponsePtrOutput)
}

// Admin login secret key
func (o K8sSecurityResponsePtrOutput) AdminLoginSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sSecurityResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminLoginSecret
	}).(pulumi.StringPtrOutput)
}

// Service certificate secret used
func (o K8sSecurityResponsePtrOutput) ServiceCertificateSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sSecurityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCertificateSecret
	}).(pulumi.StringPtrOutput)
}

// Transparent data encryption information.
func (o K8sSecurityResponsePtrOutput) TransparentDataEncryption() K8stransparentDataEncryptionResponsePtrOutput {
	return o.ApplyT(func(v *K8sSecurityResponse) *K8stransparentDataEncryptionResponse {
		if v == nil {
			return nil
		}
		return v.TransparentDataEncryption
	}).(K8stransparentDataEncryptionResponsePtrOutput)
}

// The kubernetes settings information.
type K8sSettings struct {
	// The kubernetes network settings information.
	Network *K8sNetworkSettings `pulumi:"network"`
}

// K8sSettingsInput is an input type that accepts K8sSettingsArgs and K8sSettingsOutput values.
// You can construct a concrete instance of `K8sSettingsInput` via:
//
//	K8sSettingsArgs{...}
type K8sSettingsInput interface {
	pulumi.Input

	ToK8sSettingsOutput() K8sSettingsOutput
	ToK8sSettingsOutputWithContext(context.Context) K8sSettingsOutput
}

// The kubernetes settings information.
type K8sSettingsArgs struct {
	// The kubernetes network settings information.
	Network K8sNetworkSettingsPtrInput `pulumi:"network"`
}

func (K8sSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSettings)(nil)).Elem()
}

func (i K8sSettingsArgs) ToK8sSettingsOutput() K8sSettingsOutput {
	return i.ToK8sSettingsOutputWithContext(context.Background())
}

func (i K8sSettingsArgs) ToK8sSettingsOutputWithContext(ctx context.Context) K8sSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSettingsOutput)
}

func (i K8sSettingsArgs) ToK8sSettingsPtrOutput() K8sSettingsPtrOutput {
	return i.ToK8sSettingsPtrOutputWithContext(context.Background())
}

func (i K8sSettingsArgs) ToK8sSettingsPtrOutputWithContext(ctx context.Context) K8sSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSettingsOutput).ToK8sSettingsPtrOutputWithContext(ctx)
}

// K8sSettingsPtrInput is an input type that accepts K8sSettingsArgs, K8sSettingsPtr and K8sSettingsPtrOutput values.
// You can construct a concrete instance of `K8sSettingsPtrInput` via:
//
//	        K8sSettingsArgs{...}
//
//	or:
//
//	        nil
type K8sSettingsPtrInput interface {
	pulumi.Input

	ToK8sSettingsPtrOutput() K8sSettingsPtrOutput
	ToK8sSettingsPtrOutputWithContext(context.Context) K8sSettingsPtrOutput
}

type k8sSettingsPtrType K8sSettingsArgs

func K8sSettingsPtr(v *K8sSettingsArgs) K8sSettingsPtrInput {
	return (*k8sSettingsPtrType)(v)
}

func (*k8sSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSettings)(nil)).Elem()
}

func (i *k8sSettingsPtrType) ToK8sSettingsPtrOutput() K8sSettingsPtrOutput {
	return i.ToK8sSettingsPtrOutputWithContext(context.Background())
}

func (i *k8sSettingsPtrType) ToK8sSettingsPtrOutputWithContext(ctx context.Context) K8sSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSettingsPtrOutput)
}

// The kubernetes settings information.
type K8sSettingsOutput struct{ *pulumi.OutputState }

func (K8sSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSettings)(nil)).Elem()
}

func (o K8sSettingsOutput) ToK8sSettingsOutput() K8sSettingsOutput {
	return o
}

func (o K8sSettingsOutput) ToK8sSettingsOutputWithContext(ctx context.Context) K8sSettingsOutput {
	return o
}

func (o K8sSettingsOutput) ToK8sSettingsPtrOutput() K8sSettingsPtrOutput {
	return o.ToK8sSettingsPtrOutputWithContext(context.Background())
}

func (o K8sSettingsOutput) ToK8sSettingsPtrOutputWithContext(ctx context.Context) K8sSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sSettings) *K8sSettings {
		return &v
	}).(K8sSettingsPtrOutput)
}

// The kubernetes network settings information.
func (o K8sSettingsOutput) Network() K8sNetworkSettingsPtrOutput {
	return o.ApplyT(func(v K8sSettings) *K8sNetworkSettings { return v.Network }).(K8sNetworkSettingsPtrOutput)
}

type K8sSettingsPtrOutput struct{ *pulumi.OutputState }

func (K8sSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSettings)(nil)).Elem()
}

func (o K8sSettingsPtrOutput) ToK8sSettingsPtrOutput() K8sSettingsPtrOutput {
	return o
}

func (o K8sSettingsPtrOutput) ToK8sSettingsPtrOutputWithContext(ctx context.Context) K8sSettingsPtrOutput {
	return o
}

func (o K8sSettingsPtrOutput) Elem() K8sSettingsOutput {
	return o.ApplyT(func(v *K8sSettings) K8sSettings {
		if v != nil {
			return *v
		}
		var ret K8sSettings
		return ret
	}).(K8sSettingsOutput)
}

// The kubernetes network settings information.
func (o K8sSettingsPtrOutput) Network() K8sNetworkSettingsPtrOutput {
	return o.ApplyT(func(v *K8sSettings) *K8sNetworkSettings {
		if v == nil {
			return nil
		}
		return v.Network
	}).(K8sNetworkSettingsPtrOutput)
}

// The kubernetes settings information.
type K8sSettingsResponse struct {
	// The kubernetes network settings information.
	Network *K8sNetworkSettingsResponse `pulumi:"network"`
}

// The kubernetes settings information.
type K8sSettingsResponseOutput struct{ *pulumi.OutputState }

func (K8sSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSettingsResponse)(nil)).Elem()
}

func (o K8sSettingsResponseOutput) ToK8sSettingsResponseOutput() K8sSettingsResponseOutput {
	return o
}

func (o K8sSettingsResponseOutput) ToK8sSettingsResponseOutputWithContext(ctx context.Context) K8sSettingsResponseOutput {
	return o
}

// The kubernetes network settings information.
func (o K8sSettingsResponseOutput) Network() K8sNetworkSettingsResponsePtrOutput {
	return o.ApplyT(func(v K8sSettingsResponse) *K8sNetworkSettingsResponse { return v.Network }).(K8sNetworkSettingsResponsePtrOutput)
}

type K8sSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (K8sSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sSettingsResponse)(nil)).Elem()
}

func (o K8sSettingsResponsePtrOutput) ToK8sSettingsResponsePtrOutput() K8sSettingsResponsePtrOutput {
	return o
}

func (o K8sSettingsResponsePtrOutput) ToK8sSettingsResponsePtrOutputWithContext(ctx context.Context) K8sSettingsResponsePtrOutput {
	return o
}

func (o K8sSettingsResponsePtrOutput) Elem() K8sSettingsResponseOutput {
	return o.ApplyT(func(v *K8sSettingsResponse) K8sSettingsResponse {
		if v != nil {
			return *v
		}
		var ret K8sSettingsResponse
		return ret
	}).(K8sSettingsResponseOutput)
}

// The kubernetes network settings information.
func (o K8sSettingsResponsePtrOutput) Network() K8sNetworkSettingsResponsePtrOutput {
	return o.ApplyT(func(v *K8sSettingsResponse) *K8sNetworkSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Network
	}).(K8sNetworkSettingsResponsePtrOutput)
}

// Transparent data encryption information.
type K8stransparentDataEncryption struct {
	// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
	Mode *string `pulumi:"mode"`
	// Protector secret for customer managed Transparent data encryption mode
	ProtectorSecret *string `pulumi:"protectorSecret"`
}

// K8stransparentDataEncryptionInput is an input type that accepts K8stransparentDataEncryptionArgs and K8stransparentDataEncryptionOutput values.
// You can construct a concrete instance of `K8stransparentDataEncryptionInput` via:
//
//	K8stransparentDataEncryptionArgs{...}
type K8stransparentDataEncryptionInput interface {
	pulumi.Input

	ToK8stransparentDataEncryptionOutput() K8stransparentDataEncryptionOutput
	ToK8stransparentDataEncryptionOutputWithContext(context.Context) K8stransparentDataEncryptionOutput
}

// Transparent data encryption information.
type K8stransparentDataEncryptionArgs struct {
	// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Protector secret for customer managed Transparent data encryption mode
	ProtectorSecret pulumi.StringPtrInput `pulumi:"protectorSecret"`
}

func (K8stransparentDataEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8stransparentDataEncryption)(nil)).Elem()
}

func (i K8stransparentDataEncryptionArgs) ToK8stransparentDataEncryptionOutput() K8stransparentDataEncryptionOutput {
	return i.ToK8stransparentDataEncryptionOutputWithContext(context.Background())
}

func (i K8stransparentDataEncryptionArgs) ToK8stransparentDataEncryptionOutputWithContext(ctx context.Context) K8stransparentDataEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8stransparentDataEncryptionOutput)
}

func (i K8stransparentDataEncryptionArgs) ToK8stransparentDataEncryptionPtrOutput() K8stransparentDataEncryptionPtrOutput {
	return i.ToK8stransparentDataEncryptionPtrOutputWithContext(context.Background())
}

func (i K8stransparentDataEncryptionArgs) ToK8stransparentDataEncryptionPtrOutputWithContext(ctx context.Context) K8stransparentDataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8stransparentDataEncryptionOutput).ToK8stransparentDataEncryptionPtrOutputWithContext(ctx)
}

// K8stransparentDataEncryptionPtrInput is an input type that accepts K8stransparentDataEncryptionArgs, K8stransparentDataEncryptionPtr and K8stransparentDataEncryptionPtrOutput values.
// You can construct a concrete instance of `K8stransparentDataEncryptionPtrInput` via:
//
//	        K8stransparentDataEncryptionArgs{...}
//
//	or:
//
//	        nil
type K8stransparentDataEncryptionPtrInput interface {
	pulumi.Input

	ToK8stransparentDataEncryptionPtrOutput() K8stransparentDataEncryptionPtrOutput
	ToK8stransparentDataEncryptionPtrOutputWithContext(context.Context) K8stransparentDataEncryptionPtrOutput
}

type k8stransparentDataEncryptionPtrType K8stransparentDataEncryptionArgs

func K8stransparentDataEncryptionPtr(v *K8stransparentDataEncryptionArgs) K8stransparentDataEncryptionPtrInput {
	return (*k8stransparentDataEncryptionPtrType)(v)
}

func (*k8stransparentDataEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8stransparentDataEncryption)(nil)).Elem()
}

func (i *k8stransparentDataEncryptionPtrType) ToK8stransparentDataEncryptionPtrOutput() K8stransparentDataEncryptionPtrOutput {
	return i.ToK8stransparentDataEncryptionPtrOutputWithContext(context.Background())
}

func (i *k8stransparentDataEncryptionPtrType) ToK8stransparentDataEncryptionPtrOutputWithContext(ctx context.Context) K8stransparentDataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8stransparentDataEncryptionPtrOutput)
}

// Transparent data encryption information.
type K8stransparentDataEncryptionOutput struct{ *pulumi.OutputState }

func (K8stransparentDataEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8stransparentDataEncryption)(nil)).Elem()
}

func (o K8stransparentDataEncryptionOutput) ToK8stransparentDataEncryptionOutput() K8stransparentDataEncryptionOutput {
	return o
}

func (o K8stransparentDataEncryptionOutput) ToK8stransparentDataEncryptionOutputWithContext(ctx context.Context) K8stransparentDataEncryptionOutput {
	return o
}

func (o K8stransparentDataEncryptionOutput) ToK8stransparentDataEncryptionPtrOutput() K8stransparentDataEncryptionPtrOutput {
	return o.ToK8stransparentDataEncryptionPtrOutputWithContext(context.Background())
}

func (o K8stransparentDataEncryptionOutput) ToK8stransparentDataEncryptionPtrOutputWithContext(ctx context.Context) K8stransparentDataEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8stransparentDataEncryption) *K8stransparentDataEncryption {
		return &v
	}).(K8stransparentDataEncryptionPtrOutput)
}

// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
func (o K8stransparentDataEncryptionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8stransparentDataEncryption) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Protector secret for customer managed Transparent data encryption mode
func (o K8stransparentDataEncryptionOutput) ProtectorSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8stransparentDataEncryption) *string { return v.ProtectorSecret }).(pulumi.StringPtrOutput)
}

type K8stransparentDataEncryptionPtrOutput struct{ *pulumi.OutputState }

func (K8stransparentDataEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8stransparentDataEncryption)(nil)).Elem()
}

func (o K8stransparentDataEncryptionPtrOutput) ToK8stransparentDataEncryptionPtrOutput() K8stransparentDataEncryptionPtrOutput {
	return o
}

func (o K8stransparentDataEncryptionPtrOutput) ToK8stransparentDataEncryptionPtrOutputWithContext(ctx context.Context) K8stransparentDataEncryptionPtrOutput {
	return o
}

func (o K8stransparentDataEncryptionPtrOutput) Elem() K8stransparentDataEncryptionOutput {
	return o.ApplyT(func(v *K8stransparentDataEncryption) K8stransparentDataEncryption {
		if v != nil {
			return *v
		}
		var ret K8stransparentDataEncryption
		return ret
	}).(K8stransparentDataEncryptionOutput)
}

// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
func (o K8stransparentDataEncryptionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8stransparentDataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Protector secret for customer managed Transparent data encryption mode
func (o K8stransparentDataEncryptionPtrOutput) ProtectorSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8stransparentDataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.ProtectorSecret
	}).(pulumi.StringPtrOutput)
}

// Transparent data encryption information.
type K8stransparentDataEncryptionResponse struct {
	// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
	Mode *string `pulumi:"mode"`
	// Protector secret for customer managed Transparent data encryption mode
	ProtectorSecret *string `pulumi:"protectorSecret"`
}

// Transparent data encryption information.
type K8stransparentDataEncryptionResponseOutput struct{ *pulumi.OutputState }

func (K8stransparentDataEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8stransparentDataEncryptionResponse)(nil)).Elem()
}

func (o K8stransparentDataEncryptionResponseOutput) ToK8stransparentDataEncryptionResponseOutput() K8stransparentDataEncryptionResponseOutput {
	return o
}

func (o K8stransparentDataEncryptionResponseOutput) ToK8stransparentDataEncryptionResponseOutputWithContext(ctx context.Context) K8stransparentDataEncryptionResponseOutput {
	return o
}

// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
func (o K8stransparentDataEncryptionResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8stransparentDataEncryptionResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Protector secret for customer managed Transparent data encryption mode
func (o K8stransparentDataEncryptionResponseOutput) ProtectorSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8stransparentDataEncryptionResponse) *string { return v.ProtectorSecret }).(pulumi.StringPtrOutput)
}

type K8stransparentDataEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (K8stransparentDataEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8stransparentDataEncryptionResponse)(nil)).Elem()
}

func (o K8stransparentDataEncryptionResponsePtrOutput) ToK8stransparentDataEncryptionResponsePtrOutput() K8stransparentDataEncryptionResponsePtrOutput {
	return o
}

func (o K8stransparentDataEncryptionResponsePtrOutput) ToK8stransparentDataEncryptionResponsePtrOutputWithContext(ctx context.Context) K8stransparentDataEncryptionResponsePtrOutput {
	return o
}

func (o K8stransparentDataEncryptionResponsePtrOutput) Elem() K8stransparentDataEncryptionResponseOutput {
	return o.ApplyT(func(v *K8stransparentDataEncryptionResponse) K8stransparentDataEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret K8stransparentDataEncryptionResponse
		return ret
	}).(K8stransparentDataEncryptionResponseOutput)
}

// Transparent data encryption mode. Can be Service Managed, Customer managed or disabled
func (o K8stransparentDataEncryptionResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8stransparentDataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Protector secret for customer managed Transparent data encryption mode
func (o K8stransparentDataEncryptionResponsePtrOutput) ProtectorSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8stransparentDataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectorSecret
	}).(pulumi.StringPtrOutput)
}

// Keytab used for authenticate with Active Directory.
type KeytabInformation struct {
	// A base64-encoded keytab.
	Keytab *string `pulumi:"keytab"`
}

// KeytabInformationInput is an input type that accepts KeytabInformationArgs and KeytabInformationOutput values.
// You can construct a concrete instance of `KeytabInformationInput` via:
//
//	KeytabInformationArgs{...}
type KeytabInformationInput interface {
	pulumi.Input

	ToKeytabInformationOutput() KeytabInformationOutput
	ToKeytabInformationOutputWithContext(context.Context) KeytabInformationOutput
}

// Keytab used for authenticate with Active Directory.
type KeytabInformationArgs struct {
	// A base64-encoded keytab.
	Keytab pulumi.StringPtrInput `pulumi:"keytab"`
}

func (KeytabInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeytabInformation)(nil)).Elem()
}

func (i KeytabInformationArgs) ToKeytabInformationOutput() KeytabInformationOutput {
	return i.ToKeytabInformationOutputWithContext(context.Background())
}

func (i KeytabInformationArgs) ToKeytabInformationOutputWithContext(ctx context.Context) KeytabInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeytabInformationOutput)
}

func (i KeytabInformationArgs) ToKeytabInformationPtrOutput() KeytabInformationPtrOutput {
	return i.ToKeytabInformationPtrOutputWithContext(context.Background())
}

func (i KeytabInformationArgs) ToKeytabInformationPtrOutputWithContext(ctx context.Context) KeytabInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeytabInformationOutput).ToKeytabInformationPtrOutputWithContext(ctx)
}

// KeytabInformationPtrInput is an input type that accepts KeytabInformationArgs, KeytabInformationPtr and KeytabInformationPtrOutput values.
// You can construct a concrete instance of `KeytabInformationPtrInput` via:
//
//	        KeytabInformationArgs{...}
//
//	or:
//
//	        nil
type KeytabInformationPtrInput interface {
	pulumi.Input

	ToKeytabInformationPtrOutput() KeytabInformationPtrOutput
	ToKeytabInformationPtrOutputWithContext(context.Context) KeytabInformationPtrOutput
}

type keytabInformationPtrType KeytabInformationArgs

func KeytabInformationPtr(v *KeytabInformationArgs) KeytabInformationPtrInput {
	return (*keytabInformationPtrType)(v)
}

func (*keytabInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeytabInformation)(nil)).Elem()
}

func (i *keytabInformationPtrType) ToKeytabInformationPtrOutput() KeytabInformationPtrOutput {
	return i.ToKeytabInformationPtrOutputWithContext(context.Background())
}

func (i *keytabInformationPtrType) ToKeytabInformationPtrOutputWithContext(ctx context.Context) KeytabInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeytabInformationPtrOutput)
}

// Keytab used for authenticate with Active Directory.
type KeytabInformationOutput struct{ *pulumi.OutputState }

func (KeytabInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeytabInformation)(nil)).Elem()
}

func (o KeytabInformationOutput) ToKeytabInformationOutput() KeytabInformationOutput {
	return o
}

func (o KeytabInformationOutput) ToKeytabInformationOutputWithContext(ctx context.Context) KeytabInformationOutput {
	return o
}

func (o KeytabInformationOutput) ToKeytabInformationPtrOutput() KeytabInformationPtrOutput {
	return o.ToKeytabInformationPtrOutputWithContext(context.Background())
}

func (o KeytabInformationOutput) ToKeytabInformationPtrOutputWithContext(ctx context.Context) KeytabInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeytabInformation) *KeytabInformation {
		return &v
	}).(KeytabInformationPtrOutput)
}

// A base64-encoded keytab.
func (o KeytabInformationOutput) Keytab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeytabInformation) *string { return v.Keytab }).(pulumi.StringPtrOutput)
}

type KeytabInformationPtrOutput struct{ *pulumi.OutputState }

func (KeytabInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeytabInformation)(nil)).Elem()
}

func (o KeytabInformationPtrOutput) ToKeytabInformationPtrOutput() KeytabInformationPtrOutput {
	return o
}

func (o KeytabInformationPtrOutput) ToKeytabInformationPtrOutputWithContext(ctx context.Context) KeytabInformationPtrOutput {
	return o
}

func (o KeytabInformationPtrOutput) Elem() KeytabInformationOutput {
	return o.ApplyT(func(v *KeytabInformation) KeytabInformation {
		if v != nil {
			return *v
		}
		var ret KeytabInformation
		return ret
	}).(KeytabInformationOutput)
}

// A base64-encoded keytab.
func (o KeytabInformationPtrOutput) Keytab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeytabInformation) *string {
		if v == nil {
			return nil
		}
		return v.Keytab
	}).(pulumi.StringPtrOutput)
}

// Log analytics workspace id and primary key
type LogAnalyticsWorkspaceConfig struct {
	// Primary key of the workspace
	PrimaryKey *string `pulumi:"primaryKey"`
	// Azure Log Analytics workspace ID
	WorkspaceId *string `pulumi:"workspaceId"`
}

// LogAnalyticsWorkspaceConfigInput is an input type that accepts LogAnalyticsWorkspaceConfigArgs and LogAnalyticsWorkspaceConfigOutput values.
// You can construct a concrete instance of `LogAnalyticsWorkspaceConfigInput` via:
//
//	LogAnalyticsWorkspaceConfigArgs{...}
type LogAnalyticsWorkspaceConfigInput interface {
	pulumi.Input

	ToLogAnalyticsWorkspaceConfigOutput() LogAnalyticsWorkspaceConfigOutput
	ToLogAnalyticsWorkspaceConfigOutputWithContext(context.Context) LogAnalyticsWorkspaceConfigOutput
}

// Log analytics workspace id and primary key
type LogAnalyticsWorkspaceConfigArgs struct {
	// Primary key of the workspace
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// Azure Log Analytics workspace ID
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (LogAnalyticsWorkspaceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsWorkspaceConfig)(nil)).Elem()
}

func (i LogAnalyticsWorkspaceConfigArgs) ToLogAnalyticsWorkspaceConfigOutput() LogAnalyticsWorkspaceConfigOutput {
	return i.ToLogAnalyticsWorkspaceConfigOutputWithContext(context.Background())
}

func (i LogAnalyticsWorkspaceConfigArgs) ToLogAnalyticsWorkspaceConfigOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsWorkspaceConfigOutput)
}

func (i LogAnalyticsWorkspaceConfigArgs) ToLogAnalyticsWorkspaceConfigPtrOutput() LogAnalyticsWorkspaceConfigPtrOutput {
	return i.ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(context.Background())
}

func (i LogAnalyticsWorkspaceConfigArgs) ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsWorkspaceConfigOutput).ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(ctx)
}

// LogAnalyticsWorkspaceConfigPtrInput is an input type that accepts LogAnalyticsWorkspaceConfigArgs, LogAnalyticsWorkspaceConfigPtr and LogAnalyticsWorkspaceConfigPtrOutput values.
// You can construct a concrete instance of `LogAnalyticsWorkspaceConfigPtrInput` via:
//
//	        LogAnalyticsWorkspaceConfigArgs{...}
//
//	or:
//
//	        nil
type LogAnalyticsWorkspaceConfigPtrInput interface {
	pulumi.Input

	ToLogAnalyticsWorkspaceConfigPtrOutput() LogAnalyticsWorkspaceConfigPtrOutput
	ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(context.Context) LogAnalyticsWorkspaceConfigPtrOutput
}

type logAnalyticsWorkspaceConfigPtrType LogAnalyticsWorkspaceConfigArgs

func LogAnalyticsWorkspaceConfigPtr(v *LogAnalyticsWorkspaceConfigArgs) LogAnalyticsWorkspaceConfigPtrInput {
	return (*logAnalyticsWorkspaceConfigPtrType)(v)
}

func (*logAnalyticsWorkspaceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsWorkspaceConfig)(nil)).Elem()
}

func (i *logAnalyticsWorkspaceConfigPtrType) ToLogAnalyticsWorkspaceConfigPtrOutput() LogAnalyticsWorkspaceConfigPtrOutput {
	return i.ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(context.Background())
}

func (i *logAnalyticsWorkspaceConfigPtrType) ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsWorkspaceConfigPtrOutput)
}

// Log analytics workspace id and primary key
type LogAnalyticsWorkspaceConfigOutput struct{ *pulumi.OutputState }

func (LogAnalyticsWorkspaceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsWorkspaceConfig)(nil)).Elem()
}

func (o LogAnalyticsWorkspaceConfigOutput) ToLogAnalyticsWorkspaceConfigOutput() LogAnalyticsWorkspaceConfigOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigOutput) ToLogAnalyticsWorkspaceConfigOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigOutput) ToLogAnalyticsWorkspaceConfigPtrOutput() LogAnalyticsWorkspaceConfigPtrOutput {
	return o.ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(context.Background())
}

func (o LogAnalyticsWorkspaceConfigOutput) ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogAnalyticsWorkspaceConfig) *LogAnalyticsWorkspaceConfig {
		return &v
	}).(LogAnalyticsWorkspaceConfigPtrOutput)
}

// Primary key of the workspace
func (o LogAnalyticsWorkspaceConfigOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsWorkspaceConfig) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// Azure Log Analytics workspace ID
func (o LogAnalyticsWorkspaceConfigOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsWorkspaceConfig) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type LogAnalyticsWorkspaceConfigPtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsWorkspaceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsWorkspaceConfig)(nil)).Elem()
}

func (o LogAnalyticsWorkspaceConfigPtrOutput) ToLogAnalyticsWorkspaceConfigPtrOutput() LogAnalyticsWorkspaceConfigPtrOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigPtrOutput) ToLogAnalyticsWorkspaceConfigPtrOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigPtrOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigPtrOutput) Elem() LogAnalyticsWorkspaceConfigOutput {
	return o.ApplyT(func(v *LogAnalyticsWorkspaceConfig) LogAnalyticsWorkspaceConfig {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsWorkspaceConfig
		return ret
	}).(LogAnalyticsWorkspaceConfigOutput)
}

// Primary key of the workspace
func (o LogAnalyticsWorkspaceConfigPtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsWorkspaceConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Azure Log Analytics workspace ID
func (o LogAnalyticsWorkspaceConfigPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsWorkspaceConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// Log analytics workspace id and primary key
type LogAnalyticsWorkspaceConfigResponse struct {
	// Azure Log Analytics workspace ID
	WorkspaceId *string `pulumi:"workspaceId"`
}

// Log analytics workspace id and primary key
type LogAnalyticsWorkspaceConfigResponseOutput struct{ *pulumi.OutputState }

func (LogAnalyticsWorkspaceConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsWorkspaceConfigResponse)(nil)).Elem()
}

func (o LogAnalyticsWorkspaceConfigResponseOutput) ToLogAnalyticsWorkspaceConfigResponseOutput() LogAnalyticsWorkspaceConfigResponseOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigResponseOutput) ToLogAnalyticsWorkspaceConfigResponseOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigResponseOutput {
	return o
}

// Azure Log Analytics workspace ID
func (o LogAnalyticsWorkspaceConfigResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsWorkspaceConfigResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type LogAnalyticsWorkspaceConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsWorkspaceConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsWorkspaceConfigResponse)(nil)).Elem()
}

func (o LogAnalyticsWorkspaceConfigResponsePtrOutput) ToLogAnalyticsWorkspaceConfigResponsePtrOutput() LogAnalyticsWorkspaceConfigResponsePtrOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigResponsePtrOutput) ToLogAnalyticsWorkspaceConfigResponsePtrOutputWithContext(ctx context.Context) LogAnalyticsWorkspaceConfigResponsePtrOutput {
	return o
}

func (o LogAnalyticsWorkspaceConfigResponsePtrOutput) Elem() LogAnalyticsWorkspaceConfigResponseOutput {
	return o.ApplyT(func(v *LogAnalyticsWorkspaceConfigResponse) LogAnalyticsWorkspaceConfigResponse {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsWorkspaceConfigResponse
		return ret
	}).(LogAnalyticsWorkspaceConfigResponseOutput)
}

// Azure Log Analytics workspace ID
func (o LogAnalyticsWorkspaceConfigResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsWorkspaceConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// Migration related configuration.
type Migration struct {
	// Migration assessments related configuration.
	Assessment *MigrationAssessment `pulumi:"assessment"`
}

// MigrationInput is an input type that accepts MigrationArgs and MigrationOutput values.
// You can construct a concrete instance of `MigrationInput` via:
//
//	MigrationArgs{...}
type MigrationInput interface {
	pulumi.Input

	ToMigrationOutput() MigrationOutput
	ToMigrationOutputWithContext(context.Context) MigrationOutput
}

// Migration related configuration.
type MigrationArgs struct {
	// Migration assessments related configuration.
	Assessment MigrationAssessmentPtrInput `pulumi:"assessment"`
}

func (MigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Migration)(nil)).Elem()
}

func (i MigrationArgs) ToMigrationOutput() MigrationOutput {
	return i.ToMigrationOutputWithContext(context.Background())
}

func (i MigrationArgs) ToMigrationOutputWithContext(ctx context.Context) MigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationOutput)
}

func (i MigrationArgs) ToMigrationPtrOutput() MigrationPtrOutput {
	return i.ToMigrationPtrOutputWithContext(context.Background())
}

func (i MigrationArgs) ToMigrationPtrOutputWithContext(ctx context.Context) MigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationOutput).ToMigrationPtrOutputWithContext(ctx)
}

// MigrationPtrInput is an input type that accepts MigrationArgs, MigrationPtr and MigrationPtrOutput values.
// You can construct a concrete instance of `MigrationPtrInput` via:
//
//	        MigrationArgs{...}
//
//	or:
//
//	        nil
type MigrationPtrInput interface {
	pulumi.Input

	ToMigrationPtrOutput() MigrationPtrOutput
	ToMigrationPtrOutputWithContext(context.Context) MigrationPtrOutput
}

type migrationPtrType MigrationArgs

func MigrationPtr(v *MigrationArgs) MigrationPtrInput {
	return (*migrationPtrType)(v)
}

func (*migrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Migration)(nil)).Elem()
}

func (i *migrationPtrType) ToMigrationPtrOutput() MigrationPtrOutput {
	return i.ToMigrationPtrOutputWithContext(context.Background())
}

func (i *migrationPtrType) ToMigrationPtrOutputWithContext(ctx context.Context) MigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationPtrOutput)
}

// Migration related configuration.
type MigrationOutput struct{ *pulumi.OutputState }

func (MigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Migration)(nil)).Elem()
}

func (o MigrationOutput) ToMigrationOutput() MigrationOutput {
	return o
}

func (o MigrationOutput) ToMigrationOutputWithContext(ctx context.Context) MigrationOutput {
	return o
}

func (o MigrationOutput) ToMigrationPtrOutput() MigrationPtrOutput {
	return o.ToMigrationPtrOutputWithContext(context.Background())
}

func (o MigrationOutput) ToMigrationPtrOutputWithContext(ctx context.Context) MigrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Migration) *Migration {
		return &v
	}).(MigrationPtrOutput)
}

// Migration assessments related configuration.
func (o MigrationOutput) Assessment() MigrationAssessmentPtrOutput {
	return o.ApplyT(func(v Migration) *MigrationAssessment { return v.Assessment }).(MigrationAssessmentPtrOutput)
}

type MigrationPtrOutput struct{ *pulumi.OutputState }

func (MigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Migration)(nil)).Elem()
}

func (o MigrationPtrOutput) ToMigrationPtrOutput() MigrationPtrOutput {
	return o
}

func (o MigrationPtrOutput) ToMigrationPtrOutputWithContext(ctx context.Context) MigrationPtrOutput {
	return o
}

func (o MigrationPtrOutput) Elem() MigrationOutput {
	return o.ApplyT(func(v *Migration) Migration {
		if v != nil {
			return *v
		}
		var ret Migration
		return ret
	}).(MigrationOutput)
}

// Migration assessments related configuration.
func (o MigrationPtrOutput) Assessment() MigrationAssessmentPtrOutput {
	return o.ApplyT(func(v *Migration) *MigrationAssessment {
		if v == nil {
			return nil
		}
		return v.Assessment
	}).(MigrationAssessmentPtrOutput)
}

// The migration assessment related configuration.
type MigrationAssessment struct {
	// Indicates if migration assessment is enabled for this SQL Server instance.
	Enabled *bool `pulumi:"enabled"`
}

// MigrationAssessmentInput is an input type that accepts MigrationAssessmentArgs and MigrationAssessmentOutput values.
// You can construct a concrete instance of `MigrationAssessmentInput` via:
//
//	MigrationAssessmentArgs{...}
type MigrationAssessmentInput interface {
	pulumi.Input

	ToMigrationAssessmentOutput() MigrationAssessmentOutput
	ToMigrationAssessmentOutputWithContext(context.Context) MigrationAssessmentOutput
}

// The migration assessment related configuration.
type MigrationAssessmentArgs struct {
	// Indicates if migration assessment is enabled for this SQL Server instance.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (MigrationAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationAssessment)(nil)).Elem()
}

func (i MigrationAssessmentArgs) ToMigrationAssessmentOutput() MigrationAssessmentOutput {
	return i.ToMigrationAssessmentOutputWithContext(context.Background())
}

func (i MigrationAssessmentArgs) ToMigrationAssessmentOutputWithContext(ctx context.Context) MigrationAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationAssessmentOutput)
}

func (i MigrationAssessmentArgs) ToMigrationAssessmentPtrOutput() MigrationAssessmentPtrOutput {
	return i.ToMigrationAssessmentPtrOutputWithContext(context.Background())
}

func (i MigrationAssessmentArgs) ToMigrationAssessmentPtrOutputWithContext(ctx context.Context) MigrationAssessmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationAssessmentOutput).ToMigrationAssessmentPtrOutputWithContext(ctx)
}

// MigrationAssessmentPtrInput is an input type that accepts MigrationAssessmentArgs, MigrationAssessmentPtr and MigrationAssessmentPtrOutput values.
// You can construct a concrete instance of `MigrationAssessmentPtrInput` via:
//
//	        MigrationAssessmentArgs{...}
//
//	or:
//
//	        nil
type MigrationAssessmentPtrInput interface {
	pulumi.Input

	ToMigrationAssessmentPtrOutput() MigrationAssessmentPtrOutput
	ToMigrationAssessmentPtrOutputWithContext(context.Context) MigrationAssessmentPtrOutput
}

type migrationAssessmentPtrType MigrationAssessmentArgs

func MigrationAssessmentPtr(v *MigrationAssessmentArgs) MigrationAssessmentPtrInput {
	return (*migrationAssessmentPtrType)(v)
}

func (*migrationAssessmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationAssessment)(nil)).Elem()
}

func (i *migrationAssessmentPtrType) ToMigrationAssessmentPtrOutput() MigrationAssessmentPtrOutput {
	return i.ToMigrationAssessmentPtrOutputWithContext(context.Background())
}

func (i *migrationAssessmentPtrType) ToMigrationAssessmentPtrOutputWithContext(ctx context.Context) MigrationAssessmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationAssessmentPtrOutput)
}

// The migration assessment related configuration.
type MigrationAssessmentOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationAssessment)(nil)).Elem()
}

func (o MigrationAssessmentOutput) ToMigrationAssessmentOutput() MigrationAssessmentOutput {
	return o
}

func (o MigrationAssessmentOutput) ToMigrationAssessmentOutputWithContext(ctx context.Context) MigrationAssessmentOutput {
	return o
}

func (o MigrationAssessmentOutput) ToMigrationAssessmentPtrOutput() MigrationAssessmentPtrOutput {
	return o.ToMigrationAssessmentPtrOutputWithContext(context.Background())
}

func (o MigrationAssessmentOutput) ToMigrationAssessmentPtrOutputWithContext(ctx context.Context) MigrationAssessmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationAssessment) *MigrationAssessment {
		return &v
	}).(MigrationAssessmentPtrOutput)
}

// Indicates if migration assessment is enabled for this SQL Server instance.
func (o MigrationAssessmentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationAssessment) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type MigrationAssessmentPtrOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationAssessment)(nil)).Elem()
}

func (o MigrationAssessmentPtrOutput) ToMigrationAssessmentPtrOutput() MigrationAssessmentPtrOutput {
	return o
}

func (o MigrationAssessmentPtrOutput) ToMigrationAssessmentPtrOutputWithContext(ctx context.Context) MigrationAssessmentPtrOutput {
	return o
}

func (o MigrationAssessmentPtrOutput) Elem() MigrationAssessmentOutput {
	return o.ApplyT(func(v *MigrationAssessment) MigrationAssessment {
		if v != nil {
			return *v
		}
		var ret MigrationAssessment
		return ret
	}).(MigrationAssessmentOutput)
}

// Indicates if migration assessment is enabled for this SQL Server instance.
func (o MigrationAssessmentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationAssessment) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The migration assessment related configuration.
type MigrationAssessmentResponse struct {
	// The time when Migration Assessment Report upload was last performed.
	AssessmentUploadTime string `pulumi:"assessmentUploadTime"`
	// Indicates if migration assessment is enabled for this SQL Server instance.
	Enabled *bool `pulumi:"enabled"`
	// Issues and warnings impacting the migration of SQL Server instance to particular Azure Migration Target.
	ServerAssessments []MigrationAssessmentResponseServerAssessments `pulumi:"serverAssessments"`
	// SKU Recommendation results for Azure migration targets for SQL Server.
	SkuRecommendationResults SkuRecommendationResultsResponse `pulumi:"skuRecommendationResults"`
}

// The migration assessment related configuration.
type MigrationAssessmentResponseOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationAssessmentResponse)(nil)).Elem()
}

func (o MigrationAssessmentResponseOutput) ToMigrationAssessmentResponseOutput() MigrationAssessmentResponseOutput {
	return o
}

func (o MigrationAssessmentResponseOutput) ToMigrationAssessmentResponseOutputWithContext(ctx context.Context) MigrationAssessmentResponseOutput {
	return o
}

// The time when Migration Assessment Report upload was last performed.
func (o MigrationAssessmentResponseOutput) AssessmentUploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationAssessmentResponse) string { return v.AssessmentUploadTime }).(pulumi.StringOutput)
}

// Indicates if migration assessment is enabled for this SQL Server instance.
func (o MigrationAssessmentResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Issues and warnings impacting the migration of SQL Server instance to particular Azure Migration Target.
func (o MigrationAssessmentResponseOutput) ServerAssessments() MigrationAssessmentResponseServerAssessmentsArrayOutput {
	return o.ApplyT(func(v MigrationAssessmentResponse) []MigrationAssessmentResponseServerAssessments {
		return v.ServerAssessments
	}).(MigrationAssessmentResponseServerAssessmentsArrayOutput)
}

// SKU Recommendation results for Azure migration targets for SQL Server.
func (o MigrationAssessmentResponseOutput) SkuRecommendationResults() SkuRecommendationResultsResponseOutput {
	return o.ApplyT(func(v MigrationAssessmentResponse) SkuRecommendationResultsResponse {
		return v.SkuRecommendationResults
	}).(SkuRecommendationResultsResponseOutput)
}

type MigrationAssessmentResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationAssessmentResponse)(nil)).Elem()
}

func (o MigrationAssessmentResponsePtrOutput) ToMigrationAssessmentResponsePtrOutput() MigrationAssessmentResponsePtrOutput {
	return o
}

func (o MigrationAssessmentResponsePtrOutput) ToMigrationAssessmentResponsePtrOutputWithContext(ctx context.Context) MigrationAssessmentResponsePtrOutput {
	return o
}

func (o MigrationAssessmentResponsePtrOutput) Elem() MigrationAssessmentResponseOutput {
	return o.ApplyT(func(v *MigrationAssessmentResponse) MigrationAssessmentResponse {
		if v != nil {
			return *v
		}
		var ret MigrationAssessmentResponse
		return ret
	}).(MigrationAssessmentResponseOutput)
}

// The time when Migration Assessment Report upload was last performed.
func (o MigrationAssessmentResponsePtrOutput) AssessmentUploadTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationAssessmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AssessmentUploadTime
	}).(pulumi.StringPtrOutput)
}

// Indicates if migration assessment is enabled for this SQL Server instance.
func (o MigrationAssessmentResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationAssessmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Issues and warnings impacting the migration of SQL Server instance to particular Azure Migration Target.
func (o MigrationAssessmentResponsePtrOutput) ServerAssessments() MigrationAssessmentResponseServerAssessmentsArrayOutput {
	return o.ApplyT(func(v *MigrationAssessmentResponse) []MigrationAssessmentResponseServerAssessments {
		if v == nil {
			return nil
		}
		return v.ServerAssessments
	}).(MigrationAssessmentResponseServerAssessmentsArrayOutput)
}

// SKU Recommendation results for Azure migration targets for SQL Server.
func (o MigrationAssessmentResponsePtrOutput) SkuRecommendationResults() SkuRecommendationResultsResponsePtrOutput {
	return o.ApplyT(func(v *MigrationAssessmentResponse) *SkuRecommendationResultsResponse {
		if v == nil {
			return nil
		}
		return &v.SkuRecommendationResults
	}).(SkuRecommendationResultsResponsePtrOutput)
}

type MigrationAssessmentResponseImpactedObjects struct {
	ImpactDetail *string `pulumi:"impactDetail"`
	Name         *string `pulumi:"name"`
	ObjectType   *string `pulumi:"objectType"`
}

type MigrationAssessmentResponseImpactedObjectsOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentResponseImpactedObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationAssessmentResponseImpactedObjects)(nil)).Elem()
}

func (o MigrationAssessmentResponseImpactedObjectsOutput) ToMigrationAssessmentResponseImpactedObjectsOutput() MigrationAssessmentResponseImpactedObjectsOutput {
	return o
}

func (o MigrationAssessmentResponseImpactedObjectsOutput) ToMigrationAssessmentResponseImpactedObjectsOutputWithContext(ctx context.Context) MigrationAssessmentResponseImpactedObjectsOutput {
	return o
}

func (o MigrationAssessmentResponseImpactedObjectsOutput) ImpactDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseImpactedObjects) *string { return v.ImpactDetail }).(pulumi.StringPtrOutput)
}

func (o MigrationAssessmentResponseImpactedObjectsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseImpactedObjects) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrationAssessmentResponseImpactedObjectsOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseImpactedObjects) *string { return v.ObjectType }).(pulumi.StringPtrOutput)
}

type MigrationAssessmentResponseImpactedObjectsArrayOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentResponseImpactedObjectsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationAssessmentResponseImpactedObjects)(nil)).Elem()
}

func (o MigrationAssessmentResponseImpactedObjectsArrayOutput) ToMigrationAssessmentResponseImpactedObjectsArrayOutput() MigrationAssessmentResponseImpactedObjectsArrayOutput {
	return o
}

func (o MigrationAssessmentResponseImpactedObjectsArrayOutput) ToMigrationAssessmentResponseImpactedObjectsArrayOutputWithContext(ctx context.Context) MigrationAssessmentResponseImpactedObjectsArrayOutput {
	return o
}

func (o MigrationAssessmentResponseImpactedObjectsArrayOutput) Index(i pulumi.IntInput) MigrationAssessmentResponseImpactedObjectsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrationAssessmentResponseImpactedObjects {
		return vs[0].([]MigrationAssessmentResponseImpactedObjects)[vs[1].(int)]
	}).(MigrationAssessmentResponseImpactedObjectsOutput)
}

type MigrationAssessmentResponseServerAssessments struct {
	AppliesToMigrationTargetPlatform *string                                      `pulumi:"appliesToMigrationTargetPlatform"`
	FeatureId                        *string                                      `pulumi:"featureId"`
	ImpactedObjects                  []MigrationAssessmentResponseImpactedObjects `pulumi:"impactedObjects"`
	IssueCategory                    *string                                      `pulumi:"issueCategory"`
	MoreInformation                  *string                                      `pulumi:"moreInformation"`
}

type MigrationAssessmentResponseServerAssessmentsOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentResponseServerAssessmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationAssessmentResponseServerAssessments)(nil)).Elem()
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) ToMigrationAssessmentResponseServerAssessmentsOutput() MigrationAssessmentResponseServerAssessmentsOutput {
	return o
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) ToMigrationAssessmentResponseServerAssessmentsOutputWithContext(ctx context.Context) MigrationAssessmentResponseServerAssessmentsOutput {
	return o
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) AppliesToMigrationTargetPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseServerAssessments) *string {
		return v.AppliesToMigrationTargetPlatform
	}).(pulumi.StringPtrOutput)
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) FeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseServerAssessments) *string { return v.FeatureId }).(pulumi.StringPtrOutput)
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) ImpactedObjects() MigrationAssessmentResponseImpactedObjectsArrayOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseServerAssessments) []MigrationAssessmentResponseImpactedObjects {
		return v.ImpactedObjects
	}).(MigrationAssessmentResponseImpactedObjectsArrayOutput)
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) IssueCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseServerAssessments) *string { return v.IssueCategory }).(pulumi.StringPtrOutput)
}

func (o MigrationAssessmentResponseServerAssessmentsOutput) MoreInformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationAssessmentResponseServerAssessments) *string { return v.MoreInformation }).(pulumi.StringPtrOutput)
}

type MigrationAssessmentResponseServerAssessmentsArrayOutput struct{ *pulumi.OutputState }

func (MigrationAssessmentResponseServerAssessmentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationAssessmentResponseServerAssessments)(nil)).Elem()
}

func (o MigrationAssessmentResponseServerAssessmentsArrayOutput) ToMigrationAssessmentResponseServerAssessmentsArrayOutput() MigrationAssessmentResponseServerAssessmentsArrayOutput {
	return o
}

func (o MigrationAssessmentResponseServerAssessmentsArrayOutput) ToMigrationAssessmentResponseServerAssessmentsArrayOutputWithContext(ctx context.Context) MigrationAssessmentResponseServerAssessmentsArrayOutput {
	return o
}

func (o MigrationAssessmentResponseServerAssessmentsArrayOutput) Index(i pulumi.IntInput) MigrationAssessmentResponseServerAssessmentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrationAssessmentResponseServerAssessments {
		return vs[0].([]MigrationAssessmentResponseServerAssessments)[vs[1].(int)]
	}).(MigrationAssessmentResponseServerAssessmentsOutput)
}

// Migration related configuration.
type MigrationResponse struct {
	// Migration assessments related configuration.
	Assessment *MigrationAssessmentResponse `pulumi:"assessment"`
}

// Migration related configuration.
type MigrationResponseOutput struct{ *pulumi.OutputState }

func (MigrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationResponse)(nil)).Elem()
}

func (o MigrationResponseOutput) ToMigrationResponseOutput() MigrationResponseOutput {
	return o
}

func (o MigrationResponseOutput) ToMigrationResponseOutputWithContext(ctx context.Context) MigrationResponseOutput {
	return o
}

// Migration assessments related configuration.
func (o MigrationResponseOutput) Assessment() MigrationAssessmentResponsePtrOutput {
	return o.ApplyT(func(v MigrationResponse) *MigrationAssessmentResponse { return v.Assessment }).(MigrationAssessmentResponsePtrOutput)
}

type MigrationResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationResponse)(nil)).Elem()
}

func (o MigrationResponsePtrOutput) ToMigrationResponsePtrOutput() MigrationResponsePtrOutput {
	return o
}

func (o MigrationResponsePtrOutput) ToMigrationResponsePtrOutputWithContext(ctx context.Context) MigrationResponsePtrOutput {
	return o
}

func (o MigrationResponsePtrOutput) Elem() MigrationResponseOutput {
	return o.ApplyT(func(v *MigrationResponse) MigrationResponse {
		if v != nil {
			return *v
		}
		var ret MigrationResponse
		return ret
	}).(MigrationResponseOutput)
}

// Migration assessments related configuration.
func (o MigrationResponsePtrOutput) Assessment() MigrationAssessmentResponsePtrOutput {
	return o.ApplyT(func(v *MigrationResponse) *MigrationAssessmentResponse {
		if v == nil {
			return nil
		}
		return v.Assessment
	}).(MigrationAssessmentResponsePtrOutput)
}

// The monitoring configuration.
type Monitoring struct {
	// Indicates if monitoring is enabled for this SQL Server instance.
	Enabled *bool `pulumi:"enabled"`
}

// MonitoringInput is an input type that accepts MonitoringArgs and MonitoringOutput values.
// You can construct a concrete instance of `MonitoringInput` via:
//
//	MonitoringArgs{...}
type MonitoringInput interface {
	pulumi.Input

	ToMonitoringOutput() MonitoringOutput
	ToMonitoringOutputWithContext(context.Context) MonitoringOutput
}

// The monitoring configuration.
type MonitoringArgs struct {
	// Indicates if monitoring is enabled for this SQL Server instance.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (MonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Monitoring)(nil)).Elem()
}

func (i MonitoringArgs) ToMonitoringOutput() MonitoringOutput {
	return i.ToMonitoringOutputWithContext(context.Background())
}

func (i MonitoringArgs) ToMonitoringOutputWithContext(ctx context.Context) MonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringOutput)
}

func (i MonitoringArgs) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return i.ToMonitoringPtrOutputWithContext(context.Background())
}

func (i MonitoringArgs) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringOutput).ToMonitoringPtrOutputWithContext(ctx)
}

// MonitoringPtrInput is an input type that accepts MonitoringArgs, MonitoringPtr and MonitoringPtrOutput values.
// You can construct a concrete instance of `MonitoringPtrInput` via:
//
//	        MonitoringArgs{...}
//
//	or:
//
//	        nil
type MonitoringPtrInput interface {
	pulumi.Input

	ToMonitoringPtrOutput() MonitoringPtrOutput
	ToMonitoringPtrOutputWithContext(context.Context) MonitoringPtrOutput
}

type monitoringPtrType MonitoringArgs

func MonitoringPtr(v *MonitoringArgs) MonitoringPtrInput {
	return (*monitoringPtrType)(v)
}

func (*monitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Monitoring)(nil)).Elem()
}

func (i *monitoringPtrType) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return i.ToMonitoringPtrOutputWithContext(context.Background())
}

func (i *monitoringPtrType) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringPtrOutput)
}

// The monitoring configuration.
type MonitoringOutput struct{ *pulumi.OutputState }

func (MonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Monitoring)(nil)).Elem()
}

func (o MonitoringOutput) ToMonitoringOutput() MonitoringOutput {
	return o
}

func (o MonitoringOutput) ToMonitoringOutputWithContext(ctx context.Context) MonitoringOutput {
	return o
}

func (o MonitoringOutput) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return o.ToMonitoringPtrOutputWithContext(context.Background())
}

func (o MonitoringOutput) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Monitoring) *Monitoring {
		return &v
	}).(MonitoringPtrOutput)
}

// Indicates if monitoring is enabled for this SQL Server instance.
func (o MonitoringOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Monitoring) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type MonitoringPtrOutput struct{ *pulumi.OutputState }

func (MonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Monitoring)(nil)).Elem()
}

func (o MonitoringPtrOutput) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return o
}

func (o MonitoringPtrOutput) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return o
}

func (o MonitoringPtrOutput) Elem() MonitoringOutput {
	return o.ApplyT(func(v *Monitoring) Monitoring {
		if v != nil {
			return *v
		}
		var ret Monitoring
		return ret
	}).(MonitoringOutput)
}

// Indicates if monitoring is enabled for this SQL Server instance.
func (o MonitoringPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Monitoring) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The monitoring configuration.
type MonitoringResponse struct {
	// Indicates if monitoring is enabled for this SQL Server instance.
	Enabled *bool `pulumi:"enabled"`
}

// The monitoring configuration.
type MonitoringResponseOutput struct{ *pulumi.OutputState }

func (MonitoringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringResponse)(nil)).Elem()
}

func (o MonitoringResponseOutput) ToMonitoringResponseOutput() MonitoringResponseOutput {
	return o
}

func (o MonitoringResponseOutput) ToMonitoringResponseOutputWithContext(ctx context.Context) MonitoringResponseOutput {
	return o
}

// Indicates if monitoring is enabled for this SQL Server instance.
func (o MonitoringResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type MonitoringResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitoringResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringResponse)(nil)).Elem()
}

func (o MonitoringResponsePtrOutput) ToMonitoringResponsePtrOutput() MonitoringResponsePtrOutput {
	return o
}

func (o MonitoringResponsePtrOutput) ToMonitoringResponsePtrOutputWithContext(ctx context.Context) MonitoringResponsePtrOutput {
	return o
}

func (o MonitoringResponsePtrOutput) Elem() MonitoringResponseOutput {
	return o.ApplyT(func(v *MonitoringResponse) MonitoringResponse {
		if v != nil {
			return *v
		}
		var ret MonitoringResponse
		return ret
	}).(MonitoringResponseOutput)
}

// Indicates if monitoring is enabled for this SQL Server instance.
func (o MonitoringResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Properties from the Kubernetes data controller
type OnPremiseProperty struct {
	// A globally unique ID identifying the associated Kubernetes cluster
	Id string `pulumi:"id"`
	// Certificate that contains the Kubernetes cluster public key used to verify signing
	PublicSigningKey string `pulumi:"publicSigningKey"`
	// Unique thumbprint returned to customer to verify the certificate being uploaded
	SigningCertificateThumbprint *string `pulumi:"signingCertificateThumbprint"`
}

// OnPremisePropertyInput is an input type that accepts OnPremisePropertyArgs and OnPremisePropertyOutput values.
// You can construct a concrete instance of `OnPremisePropertyInput` via:
//
//	OnPremisePropertyArgs{...}
type OnPremisePropertyInput interface {
	pulumi.Input

	ToOnPremisePropertyOutput() OnPremisePropertyOutput
	ToOnPremisePropertyOutputWithContext(context.Context) OnPremisePropertyOutput
}

// Properties from the Kubernetes data controller
type OnPremisePropertyArgs struct {
	// A globally unique ID identifying the associated Kubernetes cluster
	Id pulumi.StringInput `pulumi:"id"`
	// Certificate that contains the Kubernetes cluster public key used to verify signing
	PublicSigningKey pulumi.StringInput `pulumi:"publicSigningKey"`
	// Unique thumbprint returned to customer to verify the certificate being uploaded
	SigningCertificateThumbprint pulumi.StringPtrInput `pulumi:"signingCertificateThumbprint"`
}

func (OnPremisePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremiseProperty)(nil)).Elem()
}

func (i OnPremisePropertyArgs) ToOnPremisePropertyOutput() OnPremisePropertyOutput {
	return i.ToOnPremisePropertyOutputWithContext(context.Background())
}

func (i OnPremisePropertyArgs) ToOnPremisePropertyOutputWithContext(ctx context.Context) OnPremisePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremisePropertyOutput)
}

func (i OnPremisePropertyArgs) ToOnPremisePropertyPtrOutput() OnPremisePropertyPtrOutput {
	return i.ToOnPremisePropertyPtrOutputWithContext(context.Background())
}

func (i OnPremisePropertyArgs) ToOnPremisePropertyPtrOutputWithContext(ctx context.Context) OnPremisePropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremisePropertyOutput).ToOnPremisePropertyPtrOutputWithContext(ctx)
}

// OnPremisePropertyPtrInput is an input type that accepts OnPremisePropertyArgs, OnPremisePropertyPtr and OnPremisePropertyPtrOutput values.
// You can construct a concrete instance of `OnPremisePropertyPtrInput` via:
//
//	        OnPremisePropertyArgs{...}
//
//	or:
//
//	        nil
type OnPremisePropertyPtrInput interface {
	pulumi.Input

	ToOnPremisePropertyPtrOutput() OnPremisePropertyPtrOutput
	ToOnPremisePropertyPtrOutputWithContext(context.Context) OnPremisePropertyPtrOutput
}

type onPremisePropertyPtrType OnPremisePropertyArgs

func OnPremisePropertyPtr(v *OnPremisePropertyArgs) OnPremisePropertyPtrInput {
	return (*onPremisePropertyPtrType)(v)
}

func (*onPremisePropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremiseProperty)(nil)).Elem()
}

func (i *onPremisePropertyPtrType) ToOnPremisePropertyPtrOutput() OnPremisePropertyPtrOutput {
	return i.ToOnPremisePropertyPtrOutputWithContext(context.Background())
}

func (i *onPremisePropertyPtrType) ToOnPremisePropertyPtrOutputWithContext(ctx context.Context) OnPremisePropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremisePropertyPtrOutput)
}

// Properties from the Kubernetes data controller
type OnPremisePropertyOutput struct{ *pulumi.OutputState }

func (OnPremisePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremiseProperty)(nil)).Elem()
}

func (o OnPremisePropertyOutput) ToOnPremisePropertyOutput() OnPremisePropertyOutput {
	return o
}

func (o OnPremisePropertyOutput) ToOnPremisePropertyOutputWithContext(ctx context.Context) OnPremisePropertyOutput {
	return o
}

func (o OnPremisePropertyOutput) ToOnPremisePropertyPtrOutput() OnPremisePropertyPtrOutput {
	return o.ToOnPremisePropertyPtrOutputWithContext(context.Background())
}

func (o OnPremisePropertyOutput) ToOnPremisePropertyPtrOutputWithContext(ctx context.Context) OnPremisePropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnPremiseProperty) *OnPremiseProperty {
		return &v
	}).(OnPremisePropertyPtrOutput)
}

// A globally unique ID identifying the associated Kubernetes cluster
func (o OnPremisePropertyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremiseProperty) string { return v.Id }).(pulumi.StringOutput)
}

// Certificate that contains the Kubernetes cluster public key used to verify signing
func (o OnPremisePropertyOutput) PublicSigningKey() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremiseProperty) string { return v.PublicSigningKey }).(pulumi.StringOutput)
}

// Unique thumbprint returned to customer to verify the certificate being uploaded
func (o OnPremisePropertyOutput) SigningCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnPremiseProperty) *string { return v.SigningCertificateThumbprint }).(pulumi.StringPtrOutput)
}

type OnPremisePropertyPtrOutput struct{ *pulumi.OutputState }

func (OnPremisePropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremiseProperty)(nil)).Elem()
}

func (o OnPremisePropertyPtrOutput) ToOnPremisePropertyPtrOutput() OnPremisePropertyPtrOutput {
	return o
}

func (o OnPremisePropertyPtrOutput) ToOnPremisePropertyPtrOutputWithContext(ctx context.Context) OnPremisePropertyPtrOutput {
	return o
}

func (o OnPremisePropertyPtrOutput) Elem() OnPremisePropertyOutput {
	return o.ApplyT(func(v *OnPremiseProperty) OnPremiseProperty {
		if v != nil {
			return *v
		}
		var ret OnPremiseProperty
		return ret
	}).(OnPremisePropertyOutput)
}

// A globally unique ID identifying the associated Kubernetes cluster
func (o OnPremisePropertyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremiseProperty) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Certificate that contains the Kubernetes cluster public key used to verify signing
func (o OnPremisePropertyPtrOutput) PublicSigningKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremiseProperty) *string {
		if v == nil {
			return nil
		}
		return &v.PublicSigningKey
	}).(pulumi.StringPtrOutput)
}

// Unique thumbprint returned to customer to verify the certificate being uploaded
func (o OnPremisePropertyPtrOutput) SigningCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremiseProperty) *string {
		if v == nil {
			return nil
		}
		return v.SigningCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// Properties from the Kubernetes data controller
type OnPremisePropertyResponse struct {
	// A globally unique ID identifying the associated Kubernetes cluster
	Id string `pulumi:"id"`
	// Certificate that contains the Kubernetes cluster public key used to verify signing
	PublicSigningKey string `pulumi:"publicSigningKey"`
	// Unique thumbprint returned to customer to verify the certificate being uploaded
	SigningCertificateThumbprint *string `pulumi:"signingCertificateThumbprint"`
}

// Properties from the Kubernetes data controller
type OnPremisePropertyResponseOutput struct{ *pulumi.OutputState }

func (OnPremisePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremisePropertyResponse)(nil)).Elem()
}

func (o OnPremisePropertyResponseOutput) ToOnPremisePropertyResponseOutput() OnPremisePropertyResponseOutput {
	return o
}

func (o OnPremisePropertyResponseOutput) ToOnPremisePropertyResponseOutputWithContext(ctx context.Context) OnPremisePropertyResponseOutput {
	return o
}

// A globally unique ID identifying the associated Kubernetes cluster
func (o OnPremisePropertyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremisePropertyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Certificate that contains the Kubernetes cluster public key used to verify signing
func (o OnPremisePropertyResponseOutput) PublicSigningKey() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremisePropertyResponse) string { return v.PublicSigningKey }).(pulumi.StringOutput)
}

// Unique thumbprint returned to customer to verify the certificate being uploaded
func (o OnPremisePropertyResponseOutput) SigningCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnPremisePropertyResponse) *string { return v.SigningCertificateThumbprint }).(pulumi.StringPtrOutput)
}

type OnPremisePropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (OnPremisePropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremisePropertyResponse)(nil)).Elem()
}

func (o OnPremisePropertyResponsePtrOutput) ToOnPremisePropertyResponsePtrOutput() OnPremisePropertyResponsePtrOutput {
	return o
}

func (o OnPremisePropertyResponsePtrOutput) ToOnPremisePropertyResponsePtrOutputWithContext(ctx context.Context) OnPremisePropertyResponsePtrOutput {
	return o
}

func (o OnPremisePropertyResponsePtrOutput) Elem() OnPremisePropertyResponseOutput {
	return o.ApplyT(func(v *OnPremisePropertyResponse) OnPremisePropertyResponse {
		if v != nil {
			return *v
		}
		var ret OnPremisePropertyResponse
		return ret
	}).(OnPremisePropertyResponseOutput)
}

// A globally unique ID identifying the associated Kubernetes cluster
func (o OnPremisePropertyResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremisePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Certificate that contains the Kubernetes cluster public key used to verify signing
func (o OnPremisePropertyResponsePtrOutput) PublicSigningKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremisePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicSigningKey
	}).(pulumi.StringPtrOutput)
}

// Unique thumbprint returned to customer to verify the certificate being uploaded
func (o OnPremisePropertyResponsePtrOutput) SigningCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremisePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.SigningCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// Postgres Instance properties.
type PostgresInstanceProperties struct {
	// The instance admin
	Admin *string `pulumi:"admin"`
	// Username and password for basic authentication.
	BasicLoginInformation *BasicLoginInformation `pulumi:"basicLoginInformation"`
	// The data controller id
	DataControllerId *string `pulumi:"dataControllerId"`
	// The raw kubernetes information
	K8sRaw interface{} `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate *string `pulumi:"lastUploadedDate"`
}

// PostgresInstancePropertiesInput is an input type that accepts PostgresInstancePropertiesArgs and PostgresInstancePropertiesOutput values.
// You can construct a concrete instance of `PostgresInstancePropertiesInput` via:
//
//	PostgresInstancePropertiesArgs{...}
type PostgresInstancePropertiesInput interface {
	pulumi.Input

	ToPostgresInstancePropertiesOutput() PostgresInstancePropertiesOutput
	ToPostgresInstancePropertiesOutputWithContext(context.Context) PostgresInstancePropertiesOutput
}

// Postgres Instance properties.
type PostgresInstancePropertiesArgs struct {
	// The instance admin
	Admin pulumi.StringPtrInput `pulumi:"admin"`
	// Username and password for basic authentication.
	BasicLoginInformation BasicLoginInformationPtrInput `pulumi:"basicLoginInformation"`
	// The data controller id
	DataControllerId pulumi.StringPtrInput `pulumi:"dataControllerId"`
	// The raw kubernetes information
	K8sRaw pulumi.Input `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate pulumi.StringPtrInput `pulumi:"lastUploadedDate"`
}

func (PostgresInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceProperties)(nil)).Elem()
}

func (i PostgresInstancePropertiesArgs) ToPostgresInstancePropertiesOutput() PostgresInstancePropertiesOutput {
	return i.ToPostgresInstancePropertiesOutputWithContext(context.Background())
}

func (i PostgresInstancePropertiesArgs) ToPostgresInstancePropertiesOutputWithContext(ctx context.Context) PostgresInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInstancePropertiesOutput)
}

// Postgres Instance properties.
type PostgresInstancePropertiesOutput struct{ *pulumi.OutputState }

func (PostgresInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceProperties)(nil)).Elem()
}

func (o PostgresInstancePropertiesOutput) ToPostgresInstancePropertiesOutput() PostgresInstancePropertiesOutput {
	return o
}

func (o PostgresInstancePropertiesOutput) ToPostgresInstancePropertiesOutputWithContext(ctx context.Context) PostgresInstancePropertiesOutput {
	return o
}

// The instance admin
func (o PostgresInstancePropertiesOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceProperties) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

// Username and password for basic authentication.
func (o PostgresInstancePropertiesOutput) BasicLoginInformation() BasicLoginInformationPtrOutput {
	return o.ApplyT(func(v PostgresInstanceProperties) *BasicLoginInformation { return v.BasicLoginInformation }).(BasicLoginInformationPtrOutput)
}

// The data controller id
func (o PostgresInstancePropertiesOutput) DataControllerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceProperties) *string { return v.DataControllerId }).(pulumi.StringPtrOutput)
}

// The raw kubernetes information
func (o PostgresInstancePropertiesOutput) K8sRaw() pulumi.AnyOutput {
	return o.ApplyT(func(v PostgresInstanceProperties) interface{} { return v.K8sRaw }).(pulumi.AnyOutput)
}

// Last uploaded date from Kubernetes cluster. Defaults to current date time
func (o PostgresInstancePropertiesOutput) LastUploadedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceProperties) *string { return v.LastUploadedDate }).(pulumi.StringPtrOutput)
}

// Postgres Instance properties.
type PostgresInstancePropertiesResponse struct {
	// The instance admin
	Admin *string `pulumi:"admin"`
	// Username and password for basic authentication.
	BasicLoginInformation *BasicLoginInformationResponse `pulumi:"basicLoginInformation"`
	// The data controller id
	DataControllerId *string `pulumi:"dataControllerId"`
	// The raw kubernetes information
	K8sRaw interface{} `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate *string `pulumi:"lastUploadedDate"`
	// The provisioning state of the Azure Arc-enabled PostgreSQL instance.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Postgres Instance properties.
type PostgresInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (PostgresInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstancePropertiesResponse)(nil)).Elem()
}

func (o PostgresInstancePropertiesResponseOutput) ToPostgresInstancePropertiesResponseOutput() PostgresInstancePropertiesResponseOutput {
	return o
}

func (o PostgresInstancePropertiesResponseOutput) ToPostgresInstancePropertiesResponseOutputWithContext(ctx context.Context) PostgresInstancePropertiesResponseOutput {
	return o
}

// The instance admin
func (o PostgresInstancePropertiesResponseOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstancePropertiesResponse) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

// Username and password for basic authentication.
func (o PostgresInstancePropertiesResponseOutput) BasicLoginInformation() BasicLoginInformationResponsePtrOutput {
	return o.ApplyT(func(v PostgresInstancePropertiesResponse) *BasicLoginInformationResponse {
		return v.BasicLoginInformation
	}).(BasicLoginInformationResponsePtrOutput)
}

// The data controller id
func (o PostgresInstancePropertiesResponseOutput) DataControllerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstancePropertiesResponse) *string { return v.DataControllerId }).(pulumi.StringPtrOutput)
}

// The raw kubernetes information
func (o PostgresInstancePropertiesResponseOutput) K8sRaw() pulumi.AnyOutput {
	return o.ApplyT(func(v PostgresInstancePropertiesResponse) interface{} { return v.K8sRaw }).(pulumi.AnyOutput)
}

// Last uploaded date from Kubernetes cluster. Defaults to current date time
func (o PostgresInstancePropertiesResponseOutput) LastUploadedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstancePropertiesResponse) *string { return v.LastUploadedDate }).(pulumi.StringPtrOutput)
}

// The provisioning state of the Azure Arc-enabled PostgreSQL instance.
func (o PostgresInstancePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresInstancePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
type PostgresInstanceSku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
	Dev *bool `pulumi:"dev"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU.  It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier.
	Tier *PostgresInstanceSkuTier `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for PostgresInstanceSku
func (val *PostgresInstanceSku) Defaults() *PostgresInstanceSku {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Dev == nil {
		dev_ := true
		tmp.Dev = &dev_
	}
	if tmp.Tier == nil {
		tier_ := PostgresInstanceSkuTier("Hyperscale")
		tmp.Tier = &tier_
	}
	return &tmp
}

// PostgresInstanceSkuInput is an input type that accepts PostgresInstanceSkuArgs and PostgresInstanceSkuOutput values.
// You can construct a concrete instance of `PostgresInstanceSkuInput` via:
//
//	PostgresInstanceSkuArgs{...}
type PostgresInstanceSkuInput interface {
	pulumi.Input

	ToPostgresInstanceSkuOutput() PostgresInstanceSkuOutput
	ToPostgresInstanceSkuOutputWithContext(context.Context) PostgresInstanceSkuOutput
}

// The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
type PostgresInstanceSkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
	Dev pulumi.BoolPtrInput `pulumi:"dev"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.  It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier.
	Tier PostgresInstanceSkuTierPtrInput `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for PostgresInstanceSkuArgs
func (val *PostgresInstanceSkuArgs) Defaults() *PostgresInstanceSkuArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Dev == nil {
		tmp.Dev = pulumi.BoolPtr(true)
	}
	if tmp.Tier == nil {
		tmp.Tier = PostgresInstanceSkuTier("Hyperscale")
	}
	return &tmp
}
func (PostgresInstanceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSku)(nil)).Elem()
}

func (i PostgresInstanceSkuArgs) ToPostgresInstanceSkuOutput() PostgresInstanceSkuOutput {
	return i.ToPostgresInstanceSkuOutputWithContext(context.Background())
}

func (i PostgresInstanceSkuArgs) ToPostgresInstanceSkuOutputWithContext(ctx context.Context) PostgresInstanceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInstanceSkuOutput)
}

func (i PostgresInstanceSkuArgs) ToPostgresInstanceSkuPtrOutput() PostgresInstanceSkuPtrOutput {
	return i.ToPostgresInstanceSkuPtrOutputWithContext(context.Background())
}

func (i PostgresInstanceSkuArgs) ToPostgresInstanceSkuPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInstanceSkuOutput).ToPostgresInstanceSkuPtrOutputWithContext(ctx)
}

// PostgresInstanceSkuPtrInput is an input type that accepts PostgresInstanceSkuArgs, PostgresInstanceSkuPtr and PostgresInstanceSkuPtrOutput values.
// You can construct a concrete instance of `PostgresInstanceSkuPtrInput` via:
//
//	        PostgresInstanceSkuArgs{...}
//
//	or:
//
//	        nil
type PostgresInstanceSkuPtrInput interface {
	pulumi.Input

	ToPostgresInstanceSkuPtrOutput() PostgresInstanceSkuPtrOutput
	ToPostgresInstanceSkuPtrOutputWithContext(context.Context) PostgresInstanceSkuPtrOutput
}

type postgresInstanceSkuPtrType PostgresInstanceSkuArgs

func PostgresInstanceSkuPtr(v *PostgresInstanceSkuArgs) PostgresInstanceSkuPtrInput {
	return (*postgresInstanceSkuPtrType)(v)
}

func (*postgresInstanceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInstanceSku)(nil)).Elem()
}

func (i *postgresInstanceSkuPtrType) ToPostgresInstanceSkuPtrOutput() PostgresInstanceSkuPtrOutput {
	return i.ToPostgresInstanceSkuPtrOutputWithContext(context.Background())
}

func (i *postgresInstanceSkuPtrType) ToPostgresInstanceSkuPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInstanceSkuPtrOutput)
}

// The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
type PostgresInstanceSkuOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSku)(nil)).Elem()
}

func (o PostgresInstanceSkuOutput) ToPostgresInstanceSkuOutput() PostgresInstanceSkuOutput {
	return o
}

func (o PostgresInstanceSkuOutput) ToPostgresInstanceSkuOutputWithContext(ctx context.Context) PostgresInstanceSkuOutput {
	return o
}

func (o PostgresInstanceSkuOutput) ToPostgresInstanceSkuPtrOutput() PostgresInstanceSkuPtrOutput {
	return o.ToPostgresInstanceSkuPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuOutput) ToPostgresInstanceSkuPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresInstanceSku) *PostgresInstanceSku {
		return &v
	}).(PostgresInstanceSkuPtrOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o PostgresInstanceSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o PostgresInstanceSkuOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSku) *bool { return v.Dev }).(pulumi.BoolPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o PostgresInstanceSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.  It is typically a letter+number code
func (o PostgresInstanceSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresInstanceSku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o PostgresInstanceSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
func (o PostgresInstanceSkuOutput) Tier() PostgresInstanceSkuTierPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSku) *PostgresInstanceSkuTier { return v.Tier }).(PostgresInstanceSkuTierPtrOutput)
}

type PostgresInstanceSkuPtrOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInstanceSku)(nil)).Elem()
}

func (o PostgresInstanceSkuPtrOutput) ToPostgresInstanceSkuPtrOutput() PostgresInstanceSkuPtrOutput {
	return o
}

func (o PostgresInstanceSkuPtrOutput) ToPostgresInstanceSkuPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuPtrOutput {
	return o
}

func (o PostgresInstanceSkuPtrOutput) Elem() PostgresInstanceSkuOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) PostgresInstanceSku {
		if v != nil {
			return *v
		}
		var ret PostgresInstanceSku
		return ret
	}).(PostgresInstanceSkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o PostgresInstanceSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o PostgresInstanceSkuPtrOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) *bool {
		if v == nil {
			return nil
		}
		return v.Dev
	}).(pulumi.BoolPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o PostgresInstanceSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.  It is typically a letter+number code
func (o PostgresInstanceSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o PostgresInstanceSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
func (o PostgresInstanceSkuPtrOutput) Tier() PostgresInstanceSkuTierPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSku) *PostgresInstanceSkuTier {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(PostgresInstanceSkuTierPtrOutput)
}

// The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
type PostgresInstanceSkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
	Dev *bool `pulumi:"dev"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU.  It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier.
	Tier *string `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for PostgresInstanceSkuResponse
func (val *PostgresInstanceSkuResponse) Defaults() *PostgresInstanceSkuResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Dev == nil {
		dev_ := true
		tmp.Dev = &dev_
	}
	if tmp.Tier == nil {
		tier_ := "Hyperscale"
		tmp.Tier = &tier_
	}
	return &tmp
}

// The resource model definition representing SKU for Azure Database for PostgresSQL - Azure Arc
type PostgresInstanceSkuResponseOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSkuResponse)(nil)).Elem()
}

func (o PostgresInstanceSkuResponseOutput) ToPostgresInstanceSkuResponseOutput() PostgresInstanceSkuResponseOutput {
	return o
}

func (o PostgresInstanceSkuResponseOutput) ToPostgresInstanceSkuResponseOutputWithContext(ctx context.Context) PostgresInstanceSkuResponseOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o PostgresInstanceSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o PostgresInstanceSkuResponseOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSkuResponse) *bool { return v.Dev }).(pulumi.BoolPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o PostgresInstanceSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.  It is typically a letter+number code
func (o PostgresInstanceSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresInstanceSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o PostgresInstanceSkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
func (o PostgresInstanceSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgresInstanceSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PostgresInstanceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInstanceSkuResponse)(nil)).Elem()
}

func (o PostgresInstanceSkuResponsePtrOutput) ToPostgresInstanceSkuResponsePtrOutput() PostgresInstanceSkuResponsePtrOutput {
	return o
}

func (o PostgresInstanceSkuResponsePtrOutput) ToPostgresInstanceSkuResponsePtrOutputWithContext(ctx context.Context) PostgresInstanceSkuResponsePtrOutput {
	return o
}

func (o PostgresInstanceSkuResponsePtrOutput) Elem() PostgresInstanceSkuResponseOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) PostgresInstanceSkuResponse {
		if v != nil {
			return *v
		}
		var ret PostgresInstanceSkuResponse
		return ret
	}).(PostgresInstanceSkuResponseOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o PostgresInstanceSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o PostgresInstanceSkuResponsePtrOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Dev
	}).(pulumi.BoolPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o PostgresInstanceSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.  It is typically a letter+number code
func (o PostgresInstanceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o PostgresInstanceSkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
func (o PostgresInstanceSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The sequencer action details.
type SequencerActionResponse struct {
	// The unique identifier of the sequencer action.
	ActionId *string `pulumi:"actionId"`
	// The result of the sequencer action.
	Result *string `pulumi:"result"`
	// The state of the sequencer action.
	State *string `pulumi:"state"`
}

// The sequencer action details.
type SequencerActionResponseOutput struct{ *pulumi.OutputState }

func (SequencerActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SequencerActionResponse)(nil)).Elem()
}

func (o SequencerActionResponseOutput) ToSequencerActionResponseOutput() SequencerActionResponseOutput {
	return o
}

func (o SequencerActionResponseOutput) ToSequencerActionResponseOutputWithContext(ctx context.Context) SequencerActionResponseOutput {
	return o
}

// The unique identifier of the sequencer action.
func (o SequencerActionResponseOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SequencerActionResponse) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

// The result of the sequencer action.
func (o SequencerActionResponseOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SequencerActionResponse) *string { return v.Result }).(pulumi.StringPtrOutput)
}

// The state of the sequencer action.
func (o SequencerActionResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SequencerActionResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SequencerActionResponseArrayOutput struct{ *pulumi.OutputState }

func (SequencerActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SequencerActionResponse)(nil)).Elem()
}

func (o SequencerActionResponseArrayOutput) ToSequencerActionResponseArrayOutput() SequencerActionResponseArrayOutput {
	return o
}

func (o SequencerActionResponseArrayOutput) ToSequencerActionResponseArrayOutputWithContext(ctx context.Context) SequencerActionResponseArrayOutput {
	return o
}

func (o SequencerActionResponseArrayOutput) Index(i pulumi.IntInput) SequencerActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SequencerActionResponse {
		return vs[0].([]SequencerActionResponse)[vs[1].(int)]
	}).(SequencerActionResponseOutput)
}

// SKU Recommendation results for Azure SQL Database.
type SkuRecommendationResultsAzureSqlDatabaseResponse struct {
	// The Monthly cost of the particular SKU.
	MonthlyCost *SkuRecommendationResultsMonthlyCostResponse `pulumi:"monthlyCost"`
	// Number of blocker issues to fix before migrating to the target platform.
	NumberOfServerBlockerIssues *int `pulumi:"numberOfServerBlockerIssues"`
	// The target recommendation Status for this database.
	RecommendationStatus *string                                                    `pulumi:"recommendationStatus"`
	TargetSku            *SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku `pulumi:"targetSku"`
}

// SKU Recommendation results for Azure SQL Database.
type SkuRecommendationResultsAzureSqlDatabaseResponseOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlDatabaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlDatabaseResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseOutput() SkuRecommendationResultsAzureSqlDatabaseResponseOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlDatabaseResponseOutput {
	return o
}

// The Monthly cost of the particular SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseOutput) MonthlyCost() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponse) *SkuRecommendationResultsMonthlyCostResponse {
		return v.MonthlyCost
	}).(SkuRecommendationResultsMonthlyCostResponsePtrOutput)
}

// Number of blocker issues to fix before migrating to the target platform.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseOutput) NumberOfServerBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponse) *int { return v.NumberOfServerBlockerIssues }).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponse) *string { return v.RecommendationStatus }).(pulumi.StringPtrOutput)
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseOutput) TargetSku() SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponse) *SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku {
		return v.TargetSku
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput)
}

type SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlDatabaseResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput() SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponsePtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) Elem() SkuRecommendationResultsAzureSqlDatabaseResponseOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponse) SkuRecommendationResultsAzureSqlDatabaseResponse {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlDatabaseResponse
		return ret
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseOutput)
}

// The Monthly cost of the particular SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) MonthlyCost() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponse) *SkuRecommendationResultsMonthlyCostResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyCost
	}).(SkuRecommendationResultsMonthlyCostResponsePtrOutput)
}

// Number of blocker issues to fix before migrating to the target platform.
func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) NumberOfServerBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfServerBlockerIssues
	}).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecommendationStatus
	}).(pulumi.StringPtrOutput)
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput) TargetSku() SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponse) *SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku {
		if v == nil {
			return nil
		}
		return v.TargetSku
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput)
}

type SkuRecommendationResultsAzureSqlDatabaseResponseCategory struct {
	// The compute tier of the target SKU.
	ComputeTier *string `pulumi:"computeTier"`
	// The hardware type of the target SKU.
	HardwareType *string `pulumi:"hardwareType"`
	// The SQL purchasing model of the target SKU.
	SqlPurchasingModel *string `pulumi:"sqlPurchasingModel"`
	// The SQL service tier of the target SKU.
	SqlServiceTier *string `pulumi:"sqlServiceTier"`
	// Indicates if zone redundancy is available for the target SKU.
	ZoneRedundancyAvailable *bool `pulumi:"zoneRedundancyAvailable"`
}

type SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlDatabaseResponseCategory)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput() SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput {
	return o
}

// The compute tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) ComputeTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string { return v.ComputeTier }).(pulumi.StringPtrOutput)
}

// The hardware type of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string { return v.HardwareType }).(pulumi.StringPtrOutput)
}

// The SQL purchasing model of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) SqlPurchasingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string { return v.SqlPurchasingModel }).(pulumi.StringPtrOutput)
}

// The SQL service tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) SqlServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string { return v.SqlServiceTier }).(pulumi.StringPtrOutput)
}

// Indicates if zone redundancy is available for the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput) ZoneRedundancyAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *bool {
		return v.ZoneRedundancyAvailable
	}).(pulumi.BoolPtrOutput)
}

type SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlDatabaseResponseCategory)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput() SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) Elem() SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseCategory) SkuRecommendationResultsAzureSqlDatabaseResponseCategory {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlDatabaseResponseCategory
		return ret
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput)
}

// The compute tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) ComputeTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.ComputeTier
	}).(pulumi.StringPtrOutput)
}

// The hardware type of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.HardwareType
	}).(pulumi.StringPtrOutput)
}

// The SQL purchasing model of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) SqlPurchasingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.SqlPurchasingModel
	}).(pulumi.StringPtrOutput)
}

// The SQL service tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) SqlServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceTier
	}).(pulumi.StringPtrOutput)
}

// Indicates if zone redundancy is available for the target SKU.
func (o SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput) ZoneRedundancyAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseCategory) *bool {
		if v == nil {
			return nil
		}
		return v.ZoneRedundancyAvailable
	}).(pulumi.BoolPtrOutput)
}

type SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku struct {
	Category *SkuRecommendationResultsAzureSqlDatabaseResponseCategory `pulumi:"category"`
}

type SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput() SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput) Category() SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku) *SkuRecommendationResultsAzureSqlDatabaseResponseCategory {
		return v.Category
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput)
}

type SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput() SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput) ToSkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput) Elem() SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku) SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku
		return ret
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput)
}

func (o SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput) Category() SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlDatabaseResponseTargetSku) *SkuRecommendationResultsAzureSqlDatabaseResponseCategory {
		if v == nil {
			return nil
		}
		return v.Category
	}).(SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput)
}

// SKU Recommendation results for Azure SQL Managed Instance.
type SkuRecommendationResultsAzureSqlManagedInstanceResponse struct {
	// The Monthly cost of the particular SKU.
	MonthlyCost *SkuRecommendationResultsMonthlyCostResponse `pulumi:"monthlyCost"`
	// Number of blocker issues to fix before migrating to the target platform.
	NumberOfServerBlockerIssues *int `pulumi:"numberOfServerBlockerIssues"`
	// The target recommendation Status for this database.
	RecommendationStatus *string                                                           `pulumi:"recommendationStatus"`
	TargetSku            *SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku `pulumi:"targetSku"`
}

// SKU Recommendation results for Azure SQL Managed Instance.
type SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlManagedInstanceResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseOutput() SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput {
	return o
}

// The Monthly cost of the particular SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) MonthlyCost() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponse) *SkuRecommendationResultsMonthlyCostResponse {
		return v.MonthlyCost
	}).(SkuRecommendationResultsMonthlyCostResponsePtrOutput)
}

// Number of blocker issues to fix before migrating to the target platform.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) NumberOfServerBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponse) *int {
		return v.NumberOfServerBlockerIssues
	}).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponse) *string { return v.RecommendationStatus }).(pulumi.StringPtrOutput)
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput) TargetSku() SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponse) *SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku {
		return v.TargetSku
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput)
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlManagedInstanceResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput() SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) Elem() SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponse) SkuRecommendationResultsAzureSqlManagedInstanceResponse {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlManagedInstanceResponse
		return ret
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput)
}

// The Monthly cost of the particular SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) MonthlyCost() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponse) *SkuRecommendationResultsMonthlyCostResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyCost
	}).(SkuRecommendationResultsMonthlyCostResponsePtrOutput)
}

// Number of blocker issues to fix before migrating to the target platform.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) NumberOfServerBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfServerBlockerIssues
	}).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecommendationStatus
	}).(pulumi.StringPtrOutput)
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput) TargetSku() SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponse) *SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku {
		if v == nil {
			return nil
		}
		return v.TargetSku
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput)
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory struct {
	// The compute tier of the target SKU.
	ComputeTier *string `pulumi:"computeTier"`
	// The hardware type of the target SKU.
	HardwareType *string `pulumi:"hardwareType"`
	// The SQL purchasing model of the target SKU.
	SqlPurchasingModel *string `pulumi:"sqlPurchasingModel"`
	// The SQL service tier of the target SKU.
	SqlServiceTier *string `pulumi:"sqlServiceTier"`
	// Indicates if zone redundancy is available for the target SKU.
	ZoneRedundancyAvailable *bool `pulumi:"zoneRedundancyAvailable"`
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput() SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput {
	return o
}

// The compute tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) ComputeTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string { return v.ComputeTier }).(pulumi.StringPtrOutput)
}

// The hardware type of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string { return v.HardwareType }).(pulumi.StringPtrOutput)
}

// The SQL purchasing model of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) SqlPurchasingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string {
		return v.SqlPurchasingModel
	}).(pulumi.StringPtrOutput)
}

// The SQL service tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) SqlServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string {
		return v.SqlServiceTier
	}).(pulumi.StringPtrOutput)
}

// Indicates if zone redundancy is available for the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput) ZoneRedundancyAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *bool {
		return v.ZoneRedundancyAvailable
	}).(pulumi.BoolPtrOutput)
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput() SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) Elem() SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory
		return ret
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput)
}

// The compute tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) ComputeTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.ComputeTier
	}).(pulumi.StringPtrOutput)
}

// The hardware type of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.HardwareType
	}).(pulumi.StringPtrOutput)
}

// The SQL purchasing model of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) SqlPurchasingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.SqlPurchasingModel
	}).(pulumi.StringPtrOutput)
}

// The SQL service tier of the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) SqlServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceTier
	}).(pulumi.StringPtrOutput)
}

// Indicates if zone redundancy is available for the target SKU.
func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput) ZoneRedundancyAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory) *bool {
		if v == nil {
			return nil
		}
		return v.ZoneRedundancyAvailable
	}).(pulumi.BoolPtrOutput)
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku struct {
	Category *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory `pulumi:"category"`
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput() SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput) Category() SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku) *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory {
		return v.Category
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput)
}

type SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput() SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput) ToSkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput) Elem() SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku) SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku
		return ret
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput)
}

func (o SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput) Category() SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSku) *SkuRecommendationResultsAzureSqlManagedInstanceResponseCategory {
		if v == nil {
			return nil
		}
		return v.Category
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput)
}

// SKU Recommendation results for Azure SQL Virtual Machine.
type SkuRecommendationResultsAzureSqlVirtualMachineResponse struct {
	// The Monthly cost of the particular SKU.
	MonthlyCost *SkuRecommendationResultsMonthlyCostResponse `pulumi:"monthlyCost"`
	// Number of blocker issues to fix before migrating to the target platform.
	NumberOfServerBlockerIssues *int `pulumi:"numberOfServerBlockerIssues"`
	// The target recommendation Status for this database.
	RecommendationStatus *string                                                          `pulumi:"recommendationStatus"`
	TargetSku            *SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku `pulumi:"targetSku"`
}

// SKU Recommendation results for Azure SQL Virtual Machine.
type SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlVirtualMachineResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseOutput() SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput {
	return o
}

// The Monthly cost of the particular SKU.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) MonthlyCost() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponse) *SkuRecommendationResultsMonthlyCostResponse {
		return v.MonthlyCost
	}).(SkuRecommendationResultsMonthlyCostResponsePtrOutput)
}

// Number of blocker issues to fix before migrating to the target platform.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) NumberOfServerBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponse) *int {
		return v.NumberOfServerBlockerIssues
	}).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponse) *string { return v.RecommendationStatus }).(pulumi.StringPtrOutput)
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput) TargetSku() SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponse) *SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku {
		return v.TargetSku
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput)
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlVirtualMachineResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput() SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) Elem() SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponse) SkuRecommendationResultsAzureSqlVirtualMachineResponse {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlVirtualMachineResponse
		return ret
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput)
}

// The Monthly cost of the particular SKU.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) MonthlyCost() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponse) *SkuRecommendationResultsMonthlyCostResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyCost
	}).(SkuRecommendationResultsMonthlyCostResponsePtrOutput)
}

// Number of blocker issues to fix before migrating to the target platform.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) NumberOfServerBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfServerBlockerIssues
	}).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecommendationStatus
	}).(pulumi.StringPtrOutput)
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput) TargetSku() SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponse) *SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku {
		if v == nil {
			return nil
		}
		return v.TargetSku
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput)
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory struct {
	// Available VM SKUs for the Azure SQL Virtual Machine.
	AvailableVmSkus []string `pulumi:"availableVmSkus"`
	// The virtual machine family of the target SKU.
	VirtualMachineFamily *string `pulumi:"virtualMachineFamily"`
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput() SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput {
	return o
}

// Available VM SKUs for the Azure SQL Virtual Machine.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput) AvailableVmSkus() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory) []string {
		return v.AvailableVmSkus
	}).(pulumi.StringArrayOutput)
}

// The virtual machine family of the target SKU.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput) VirtualMachineFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory) *string {
		return v.VirtualMachineFamily
	}).(pulumi.StringPtrOutput)
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput() SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput) Elem() SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory) SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory
		return ret
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput)
}

// Available VM SKUs for the Azure SQL Virtual Machine.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput) AvailableVmSkus() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory) []string {
		if v == nil {
			return nil
		}
		return v.AvailableVmSkus
	}).(pulumi.StringArrayOutput)
}

// The virtual machine family of the target SKU.
func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput) VirtualMachineFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineFamily
	}).(pulumi.StringPtrOutput)
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku struct {
	Category *SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory `pulumi:"category"`
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput() SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput) Category() SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku) *SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory {
		return v.Category
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput)
}

type SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku)(nil)).Elem()
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput() SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput) ToSkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutputWithContext(ctx context.Context) SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput {
	return o
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput) Elem() SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku) SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku
		return ret
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput)
}

func (o SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput) Category() SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSku) *SkuRecommendationResultsAzureSqlVirtualMachineResponseCategory {
		if v == nil {
			return nil
		}
		return v.Category
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput)
}

// The Monthly cost of the particular SKU.
type SkuRecommendationResultsMonthlyCostResponse struct {
	// Represents the Cost of Compute.
	ComputeCost *float64 `pulumi:"computeCost"`
	// Represents the Cost of Storage.
	StorageCost *float64 `pulumi:"storageCost"`
	// Represents the Total Cost.
	TotalCost *float64 `pulumi:"totalCost"`
}

// The Monthly cost of the particular SKU.
type SkuRecommendationResultsMonthlyCostResponseOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsMonthlyCostResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsMonthlyCostResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsMonthlyCostResponseOutput) ToSkuRecommendationResultsMonthlyCostResponseOutput() SkuRecommendationResultsMonthlyCostResponseOutput {
	return o
}

func (o SkuRecommendationResultsMonthlyCostResponseOutput) ToSkuRecommendationResultsMonthlyCostResponseOutputWithContext(ctx context.Context) SkuRecommendationResultsMonthlyCostResponseOutput {
	return o
}

// Represents the Cost of Compute.
func (o SkuRecommendationResultsMonthlyCostResponseOutput) ComputeCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsMonthlyCostResponse) *float64 { return v.ComputeCost }).(pulumi.Float64PtrOutput)
}

// Represents the Cost of Storage.
func (o SkuRecommendationResultsMonthlyCostResponseOutput) StorageCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsMonthlyCostResponse) *float64 { return v.StorageCost }).(pulumi.Float64PtrOutput)
}

// Represents the Total Cost.
func (o SkuRecommendationResultsMonthlyCostResponseOutput) TotalCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsMonthlyCostResponse) *float64 { return v.TotalCost }).(pulumi.Float64PtrOutput)
}

type SkuRecommendationResultsMonthlyCostResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsMonthlyCostResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsMonthlyCostResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsMonthlyCostResponsePtrOutput) ToSkuRecommendationResultsMonthlyCostResponsePtrOutput() SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsMonthlyCostResponsePtrOutput) ToSkuRecommendationResultsMonthlyCostResponsePtrOutputWithContext(ctx context.Context) SkuRecommendationResultsMonthlyCostResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsMonthlyCostResponsePtrOutput) Elem() SkuRecommendationResultsMonthlyCostResponseOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsMonthlyCostResponse) SkuRecommendationResultsMonthlyCostResponse {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsMonthlyCostResponse
		return ret
	}).(SkuRecommendationResultsMonthlyCostResponseOutput)
}

// Represents the Cost of Compute.
func (o SkuRecommendationResultsMonthlyCostResponsePtrOutput) ComputeCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsMonthlyCostResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ComputeCost
	}).(pulumi.Float64PtrOutput)
}

// Represents the Cost of Storage.
func (o SkuRecommendationResultsMonthlyCostResponsePtrOutput) StorageCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsMonthlyCostResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.StorageCost
	}).(pulumi.Float64PtrOutput)
}

// Represents the Total Cost.
func (o SkuRecommendationResultsMonthlyCostResponsePtrOutput) TotalCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsMonthlyCostResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TotalCost
	}).(pulumi.Float64PtrOutput)
}

// SKU Recommendation results for Azure migration targets for SQL Server.
type SkuRecommendationResultsResponse struct {
	// SKU Recommendation results for Azure SQL Database.
	AzureSqlDatabase *SkuRecommendationResultsAzureSqlDatabaseResponse `pulumi:"azureSqlDatabase"`
	// SKU Recommendation results for Azure SQL Managed Instance.
	AzureSqlManagedInstance *SkuRecommendationResultsAzureSqlManagedInstanceResponse `pulumi:"azureSqlManagedInstance"`
	// SKU Recommendation results for Azure SQL Virtual Machine.
	AzureSqlVirtualMachine *SkuRecommendationResultsAzureSqlVirtualMachineResponse `pulumi:"azureSqlVirtualMachine"`
}

// SKU Recommendation results for Azure migration targets for SQL Server.
type SkuRecommendationResultsResponseOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationResultsResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsResponseOutput) ToSkuRecommendationResultsResponseOutput() SkuRecommendationResultsResponseOutput {
	return o
}

func (o SkuRecommendationResultsResponseOutput) ToSkuRecommendationResultsResponseOutputWithContext(ctx context.Context) SkuRecommendationResultsResponseOutput {
	return o
}

// SKU Recommendation results for Azure SQL Database.
func (o SkuRecommendationResultsResponseOutput) AzureSqlDatabase() SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsResponse) *SkuRecommendationResultsAzureSqlDatabaseResponse {
		return v.AzureSqlDatabase
	}).(SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput)
}

// SKU Recommendation results for Azure SQL Managed Instance.
func (o SkuRecommendationResultsResponseOutput) AzureSqlManagedInstance() SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsResponse) *SkuRecommendationResultsAzureSqlManagedInstanceResponse {
		return v.AzureSqlManagedInstance
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput)
}

// SKU Recommendation results for Azure SQL Virtual Machine.
func (o SkuRecommendationResultsResponseOutput) AzureSqlVirtualMachine() SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput {
	return o.ApplyT(func(v SkuRecommendationResultsResponse) *SkuRecommendationResultsAzureSqlVirtualMachineResponse {
		return v.AzureSqlVirtualMachine
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput)
}

type SkuRecommendationResultsResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationResultsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationResultsResponse)(nil)).Elem()
}

func (o SkuRecommendationResultsResponsePtrOutput) ToSkuRecommendationResultsResponsePtrOutput() SkuRecommendationResultsResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsResponsePtrOutput) ToSkuRecommendationResultsResponsePtrOutputWithContext(ctx context.Context) SkuRecommendationResultsResponsePtrOutput {
	return o
}

func (o SkuRecommendationResultsResponsePtrOutput) Elem() SkuRecommendationResultsResponseOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsResponse) SkuRecommendationResultsResponse {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationResultsResponse
		return ret
	}).(SkuRecommendationResultsResponseOutput)
}

// SKU Recommendation results for Azure SQL Database.
func (o SkuRecommendationResultsResponsePtrOutput) AzureSqlDatabase() SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsResponse) *SkuRecommendationResultsAzureSqlDatabaseResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlDatabase
	}).(SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput)
}

// SKU Recommendation results for Azure SQL Managed Instance.
func (o SkuRecommendationResultsResponsePtrOutput) AzureSqlManagedInstance() SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsResponse) *SkuRecommendationResultsAzureSqlManagedInstanceResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlManagedInstance
	}).(SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput)
}

// SKU Recommendation results for Azure SQL Virtual Machine.
func (o SkuRecommendationResultsResponsePtrOutput) AzureSqlVirtualMachine() SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput {
	return o.ApplyT(func(v *SkuRecommendationResultsResponse) *SkuRecommendationResultsAzureSqlVirtualMachineResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlVirtualMachine
	}).(SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput)
}

// The SKU recommendation summary.
type SkuRecommendationSummaryResponse struct {
	// Number of blocker issues to fix before migrating this database to the target platform.
	NumOfBlockerIssues *int `pulumi:"numOfBlockerIssues"`
	// The target recommendation Status for this database.
	RecommendationStatus *string `pulumi:"recommendationStatus"`
}

// The SKU recommendation summary.
type SkuRecommendationSummaryResponseOutput struct{ *pulumi.OutputState }

func (SkuRecommendationSummaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuRecommendationSummaryResponse)(nil)).Elem()
}

func (o SkuRecommendationSummaryResponseOutput) ToSkuRecommendationSummaryResponseOutput() SkuRecommendationSummaryResponseOutput {
	return o
}

func (o SkuRecommendationSummaryResponseOutput) ToSkuRecommendationSummaryResponseOutputWithContext(ctx context.Context) SkuRecommendationSummaryResponseOutput {
	return o
}

// Number of blocker issues to fix before migrating this database to the target platform.
func (o SkuRecommendationSummaryResponseOutput) NumOfBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuRecommendationSummaryResponse) *int { return v.NumOfBlockerIssues }).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationSummaryResponseOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuRecommendationSummaryResponse) *string { return v.RecommendationStatus }).(pulumi.StringPtrOutput)
}

type SkuRecommendationSummaryResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuRecommendationSummaryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuRecommendationSummaryResponse)(nil)).Elem()
}

func (o SkuRecommendationSummaryResponsePtrOutput) ToSkuRecommendationSummaryResponsePtrOutput() SkuRecommendationSummaryResponsePtrOutput {
	return o
}

func (o SkuRecommendationSummaryResponsePtrOutput) ToSkuRecommendationSummaryResponsePtrOutputWithContext(ctx context.Context) SkuRecommendationSummaryResponsePtrOutput {
	return o
}

func (o SkuRecommendationSummaryResponsePtrOutput) Elem() SkuRecommendationSummaryResponseOutput {
	return o.ApplyT(func(v *SkuRecommendationSummaryResponse) SkuRecommendationSummaryResponse {
		if v != nil {
			return *v
		}
		var ret SkuRecommendationSummaryResponse
		return ret
	}).(SkuRecommendationSummaryResponseOutput)
}

// Number of blocker issues to fix before migrating this database to the target platform.
func (o SkuRecommendationSummaryResponsePtrOutput) NumOfBlockerIssues() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumOfBlockerIssues
	}).(pulumi.IntPtrOutput)
}

// The target recommendation Status for this database.
func (o SkuRecommendationSummaryResponsePtrOutput) RecommendationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuRecommendationSummaryResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecommendationStatus
	}).(pulumi.StringPtrOutput)
}

// The properties of Arc Sql availability group database replica resource
type SqlAvailabilityGroupDatabaseReplicaResourceProperties struct {
	// the database name.
	DatabaseName *string `pulumi:"databaseName"`
}

// SqlAvailabilityGroupDatabaseReplicaResourcePropertiesInput is an input type that accepts SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs and SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupDatabaseReplicaResourcePropertiesInput` via:
//
//	SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs{...}
type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput
	ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutputWithContext(context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput
}

// The properties of Arc Sql availability group database replica resource
type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs struct {
	// the database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupDatabaseReplicaResourceProperties)(nil)).Elem()
}

func (i SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput {
	return i.ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput)
}

// SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayInput is an input type that accepts SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArray and SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayInput` via:
//
//	SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArray{ SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArgs{...} }
type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput
	ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutputWithContext(context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput
}

type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArray []SqlAvailabilityGroupDatabaseReplicaResourcePropertiesInput

func (SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupDatabaseReplicaResourceProperties)(nil)).Elem()
}

func (i SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArray) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput {
	return i.ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArray) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput)
}

// The properties of Arc Sql availability group database replica resource
type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupDatabaseReplicaResourceProperties)(nil)).Elem()
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput {
	return o
}

// the database name.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourceProperties) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupDatabaseReplicaResourceProperties)(nil)).Elem()
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput) Index(i pulumi.IntInput) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlAvailabilityGroupDatabaseReplicaResourceProperties {
		return vs[0].([]SqlAvailabilityGroupDatabaseReplicaResourceProperties)[vs[1].(int)]
	}).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput)
}

// The properties of Arc Sql availability group database replica resource
type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse struct {
	// the database name.
	DatabaseName *string `pulumi:"databaseName"`
	// Description of the database state of the availability replica.
	DatabaseStateDescription string `pulumi:"databaseStateDescription"`
	// Whether this replica is transaction committer.
	IsCommitParticipant bool `pulumi:"isCommitParticipant"`
	// Whether the availability database is local.
	IsLocal bool `pulumi:"isLocal"`
	// Returns 1 if the replica is primary, or 0 if it is a secondary replica.
	IsPrimaryReplica bool `pulumi:"isPrimaryReplica"`
	// Whether this data movement is suspended.
	IsSuspended bool `pulumi:"isSuspended"`
	// the database replica name.
	ReplicaName string `pulumi:"replicaName"`
	// Description of the database suspended state reason.
	SuspendReasonDescription string `pulumi:"suspendReasonDescription"`
	// Description of the health of database.
	SynchronizationHealthDescription string `pulumi:"synchronizationHealthDescription"`
	// Description of the data-movement state.
	SynchronizationStateDescription string `pulumi:"synchronizationStateDescription"`
}

// The properties of Arc Sql availability group database replica resource
type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse)(nil)).Elem()
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput {
	return o
}

// the database name.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Description of the database state of the availability replica.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) DatabaseStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) string {
		return v.DatabaseStateDescription
	}).(pulumi.StringOutput)
}

// Whether this replica is transaction committer.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) IsCommitParticipant() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) bool {
		return v.IsCommitParticipant
	}).(pulumi.BoolOutput)
}

// Whether the availability database is local.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) IsLocal() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) bool { return v.IsLocal }).(pulumi.BoolOutput)
}

// Returns 1 if the replica is primary, or 0 if it is a secondary replica.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) IsPrimaryReplica() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) bool { return v.IsPrimaryReplica }).(pulumi.BoolOutput)
}

// Whether this data movement is suspended.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) IsSuspended() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) bool { return v.IsSuspended }).(pulumi.BoolOutput)
}

// the database replica name.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) ReplicaName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) string { return v.ReplicaName }).(pulumi.StringOutput)
}

// Description of the database suspended state reason.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) SuspendReasonDescription() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) string {
		return v.SuspendReasonDescription
	}).(pulumi.StringOutput)
}

// Description of the health of database.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) SynchronizationHealthDescription() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) string {
		return v.SynchronizationHealthDescription
	}).(pulumi.StringOutput)
}

// Description of the data-movement state.
func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput) SynchronizationStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse) string {
		return v.SynchronizationStateDescription
	}).(pulumi.StringOutput)
}

type SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse)(nil)).Elem()
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput) ToSqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput) Index(i pulumi.IntInput) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse {
		return vs[0].([]SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse)[vs[1].(int)]
	}).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput)
}

// The properties of Arc Sql availability group replica resource
type SqlAvailabilityGroupReplicaResourceProperties struct {
	// null
	Configure *AvailabilityGroupConfigure `pulumi:"configure"`
	// The replica name.
	ReplicaName *string `pulumi:"replicaName"`
	// Resource id of this replica. This is required for a distributed availability group, in which case it describes the location of the availability group that hosts one replica in the DAG. In a non-distributed availability group this field is optional but can be used to store the Azure resource id for AG.
	ReplicaResourceId *string `pulumi:"replicaResourceId"`
}

// SqlAvailabilityGroupReplicaResourcePropertiesInput is an input type that accepts SqlAvailabilityGroupReplicaResourcePropertiesArgs and SqlAvailabilityGroupReplicaResourcePropertiesOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupReplicaResourcePropertiesInput` via:
//
//	SqlAvailabilityGroupReplicaResourcePropertiesArgs{...}
type SqlAvailabilityGroupReplicaResourcePropertiesInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupReplicaResourcePropertiesOutput() SqlAvailabilityGroupReplicaResourcePropertiesOutput
	ToSqlAvailabilityGroupReplicaResourcePropertiesOutputWithContext(context.Context) SqlAvailabilityGroupReplicaResourcePropertiesOutput
}

// The properties of Arc Sql availability group replica resource
type SqlAvailabilityGroupReplicaResourcePropertiesArgs struct {
	// null
	Configure AvailabilityGroupConfigurePtrInput `pulumi:"configure"`
	// The replica name.
	ReplicaName pulumi.StringPtrInput `pulumi:"replicaName"`
	// Resource id of this replica. This is required for a distributed availability group, in which case it describes the location of the availability group that hosts one replica in the DAG. In a non-distributed availability group this field is optional but can be used to store the Azure resource id for AG.
	ReplicaResourceId pulumi.StringPtrInput `pulumi:"replicaResourceId"`
}

func (SqlAvailabilityGroupReplicaResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupReplicaResourceProperties)(nil)).Elem()
}

func (i SqlAvailabilityGroupReplicaResourcePropertiesArgs) ToSqlAvailabilityGroupReplicaResourcePropertiesOutput() SqlAvailabilityGroupReplicaResourcePropertiesOutput {
	return i.ToSqlAvailabilityGroupReplicaResourcePropertiesOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupReplicaResourcePropertiesArgs) ToSqlAvailabilityGroupReplicaResourcePropertiesOutputWithContext(ctx context.Context) SqlAvailabilityGroupReplicaResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupReplicaResourcePropertiesOutput)
}

// SqlAvailabilityGroupReplicaResourcePropertiesArrayInput is an input type that accepts SqlAvailabilityGroupReplicaResourcePropertiesArray and SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupReplicaResourcePropertiesArrayInput` via:
//
//	SqlAvailabilityGroupReplicaResourcePropertiesArray{ SqlAvailabilityGroupReplicaResourcePropertiesArgs{...} }
type SqlAvailabilityGroupReplicaResourcePropertiesArrayInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutput() SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput
	ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutputWithContext(context.Context) SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput
}

type SqlAvailabilityGroupReplicaResourcePropertiesArray []SqlAvailabilityGroupReplicaResourcePropertiesInput

func (SqlAvailabilityGroupReplicaResourcePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupReplicaResourceProperties)(nil)).Elem()
}

func (i SqlAvailabilityGroupReplicaResourcePropertiesArray) ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutput() SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput {
	return i.ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupReplicaResourcePropertiesArray) ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput)
}

// The properties of Arc Sql availability group replica resource
type SqlAvailabilityGroupReplicaResourcePropertiesOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupReplicaResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupReplicaResourceProperties)(nil)).Elem()
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesOutput() SqlAvailabilityGroupReplicaResourcePropertiesOutput {
	return o
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesOutputWithContext(ctx context.Context) SqlAvailabilityGroupReplicaResourcePropertiesOutput {
	return o
}

// null
func (o SqlAvailabilityGroupReplicaResourcePropertiesOutput) Configure() AvailabilityGroupConfigurePtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourceProperties) *AvailabilityGroupConfigure { return v.Configure }).(AvailabilityGroupConfigurePtrOutput)
}

// The replica name.
func (o SqlAvailabilityGroupReplicaResourcePropertiesOutput) ReplicaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourceProperties) *string { return v.ReplicaName }).(pulumi.StringPtrOutput)
}

// Resource id of this replica. This is required for a distributed availability group, in which case it describes the location of the availability group that hosts one replica in the DAG. In a non-distributed availability group this field is optional but can be used to store the Azure resource id for AG.
func (o SqlAvailabilityGroupReplicaResourcePropertiesOutput) ReplicaResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourceProperties) *string { return v.ReplicaResourceId }).(pulumi.StringPtrOutput)
}

type SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupReplicaResourceProperties)(nil)).Elem()
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutput() SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput {
	return o
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput {
	return o
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput) Index(i pulumi.IntInput) SqlAvailabilityGroupReplicaResourcePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlAvailabilityGroupReplicaResourceProperties {
		return vs[0].([]SqlAvailabilityGroupReplicaResourceProperties)[vs[1].(int)]
	}).(SqlAvailabilityGroupReplicaResourcePropertiesOutput)
}

// The properties of Arc Sql availability group replica resource
type SqlAvailabilityGroupReplicaResourcePropertiesResponse struct {
	// null
	Configure *AvailabilityGroupConfigureResponse `pulumi:"configure"`
	// ID GUID of the availability group.
	ReplicaId string `pulumi:"replicaId"`
	// The replica name.
	ReplicaName *string `pulumi:"replicaName"`
	// Resource id of this replica. This is required for a distributed availability group, in which case it describes the location of the availability group that hosts one replica in the DAG. In a non-distributed availability group this field is optional but can be used to store the Azure resource id for AG.
	ReplicaResourceId *string `pulumi:"replicaResourceId"`
	// null
	State *AvailabilityGroupStateResponse `pulumi:"state"`
}

// The properties of Arc Sql availability group replica resource
type SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupReplicaResourcePropertiesResponse)(nil)).Elem()
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesResponseOutput() SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput {
	return o
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesResponseOutputWithContext(ctx context.Context) SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput {
	return o
}

// null
func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) Configure() AvailabilityGroupConfigureResponsePtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourcePropertiesResponse) *AvailabilityGroupConfigureResponse {
		return v.Configure
	}).(AvailabilityGroupConfigureResponsePtrOutput)
}

// ID GUID of the availability group.
func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) ReplicaId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourcePropertiesResponse) string { return v.ReplicaId }).(pulumi.StringOutput)
}

// The replica name.
func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) ReplicaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourcePropertiesResponse) *string { return v.ReplicaName }).(pulumi.StringPtrOutput)
}

// Resource id of this replica. This is required for a distributed availability group, in which case it describes the location of the availability group that hosts one replica in the DAG. In a non-distributed availability group this field is optional but can be used to store the Azure resource id for AG.
func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) ReplicaResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourcePropertiesResponse) *string { return v.ReplicaResourceId }).(pulumi.StringPtrOutput)
}

// null
func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput) State() AvailabilityGroupStateResponsePtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupReplicaResourcePropertiesResponse) *AvailabilityGroupStateResponse {
		return v.State
	}).(AvailabilityGroupStateResponsePtrOutput)
}

type SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupReplicaResourcePropertiesResponse)(nil)).Elem()
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput() SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput {
	return o
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput) ToSqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput {
	return o
}

func (o SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput) Index(i pulumi.IntInput) SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlAvailabilityGroupReplicaResourcePropertiesResponse {
		return vs[0].([]SqlAvailabilityGroupReplicaResourcePropertiesResponse)[vs[1].(int)]
	}).(SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput)
}

// The properties of a static IP Arc Sql availability group listener
type SqlAvailabilityGroupStaticIPListenerProperties struct {
	// the DNS name for the listener.
	DnsName *string `pulumi:"dnsName"`
	// IP V4 Addresses and masks for the listener.
	IpV4AddressesAndMasks []SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks `pulumi:"ipV4AddressesAndMasks"`
	// IP V6 Addresses for the listener
	IpV6Addresses []string `pulumi:"ipV6Addresses"`
	// Network port for the listener. Default is 1433.
	Port *int `pulumi:"port"`
}

// SqlAvailabilityGroupStaticIPListenerPropertiesInput is an input type that accepts SqlAvailabilityGroupStaticIPListenerPropertiesArgs and SqlAvailabilityGroupStaticIPListenerPropertiesOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupStaticIPListenerPropertiesInput` via:
//
//	SqlAvailabilityGroupStaticIPListenerPropertiesArgs{...}
type SqlAvailabilityGroupStaticIPListenerPropertiesInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupStaticIPListenerPropertiesOutput() SqlAvailabilityGroupStaticIPListenerPropertiesOutput
	ToSqlAvailabilityGroupStaticIPListenerPropertiesOutputWithContext(context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesOutput
}

// The properties of a static IP Arc Sql availability group listener
type SqlAvailabilityGroupStaticIPListenerPropertiesArgs struct {
	// the DNS name for the listener.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP V4 Addresses and masks for the listener.
	IpV4AddressesAndMasks SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayInput `pulumi:"ipV4AddressesAndMasks"`
	// IP V6 Addresses for the listener
	IpV6Addresses pulumi.StringArrayInput `pulumi:"ipV6Addresses"`
	// Network port for the listener. Default is 1433.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (SqlAvailabilityGroupStaticIPListenerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupStaticIPListenerProperties)(nil)).Elem()
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesArgs) ToSqlAvailabilityGroupStaticIPListenerPropertiesOutput() SqlAvailabilityGroupStaticIPListenerPropertiesOutput {
	return i.ToSqlAvailabilityGroupStaticIPListenerPropertiesOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesArgs) ToSqlAvailabilityGroupStaticIPListenerPropertiesOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupStaticIPListenerPropertiesOutput)
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesArgs) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return i.ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesArgs) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupStaticIPListenerPropertiesOutput).ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(ctx)
}

// SqlAvailabilityGroupStaticIPListenerPropertiesPtrInput is an input type that accepts SqlAvailabilityGroupStaticIPListenerPropertiesArgs, SqlAvailabilityGroupStaticIPListenerPropertiesPtr and SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupStaticIPListenerPropertiesPtrInput` via:
//
//	        SqlAvailabilityGroupStaticIPListenerPropertiesArgs{...}
//
//	or:
//
//	        nil
type SqlAvailabilityGroupStaticIPListenerPropertiesPtrInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput
	ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput
}

type sqlAvailabilityGroupStaticIPListenerPropertiesPtrType SqlAvailabilityGroupStaticIPListenerPropertiesArgs

func SqlAvailabilityGroupStaticIPListenerPropertiesPtr(v *SqlAvailabilityGroupStaticIPListenerPropertiesArgs) SqlAvailabilityGroupStaticIPListenerPropertiesPtrInput {
	return (*sqlAvailabilityGroupStaticIPListenerPropertiesPtrType)(v)
}

func (*sqlAvailabilityGroupStaticIPListenerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroupStaticIPListenerProperties)(nil)).Elem()
}

func (i *sqlAvailabilityGroupStaticIPListenerPropertiesPtrType) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return i.ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(context.Background())
}

func (i *sqlAvailabilityGroupStaticIPListenerPropertiesPtrType) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput)
}

// The properties of a static IP Arc Sql availability group listener
type SqlAvailabilityGroupStaticIPListenerPropertiesOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupStaticIPListenerProperties)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesOutput() SqlAvailabilityGroupStaticIPListenerPropertiesOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return o.ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(context.Background())
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlAvailabilityGroupStaticIPListenerProperties) *SqlAvailabilityGroupStaticIPListenerProperties {
		return &v
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput)
}

// the DNS name for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerProperties) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP V4 Addresses and masks for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) IpV4AddressesAndMasks() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerProperties) []SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks {
		return v.IpV4AddressesAndMasks
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput)
}

// IP V6 Addresses for the listener
func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) IpV6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerProperties) []string { return v.IpV6Addresses }).(pulumi.StringArrayOutput)
}

// Network port for the listener. Default is 1433.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroupStaticIPListenerProperties)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput() SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesPtrOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) Elem() SqlAvailabilityGroupStaticIPListenerPropertiesOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerProperties) SqlAvailabilityGroupStaticIPListenerProperties {
		if v != nil {
			return *v
		}
		var ret SqlAvailabilityGroupStaticIPListenerProperties
		return ret
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesOutput)
}

// the DNS name for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsName
	}).(pulumi.StringPtrOutput)
}

// IP V4 Addresses and masks for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) IpV4AddressesAndMasks() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerProperties) []SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks {
		if v == nil {
			return nil
		}
		return v.IpV4AddressesAndMasks
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput)
}

// IP V6 Addresses for the listener
func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) IpV6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerProperties) []string {
		if v == nil {
			return nil
		}
		return v.IpV6Addresses
	}).(pulumi.StringArrayOutput)
}

// Network port for the listener. Default is 1433.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks struct {
	// IPV4 address
	IpAddress *string `pulumi:"ipAddress"`
	// IPV4 netmask
	Mask *string `pulumi:"mask"`
}

// SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksInput is an input type that accepts SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs and SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksInput` via:
//
//	SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs{...}
type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput
	ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutputWithContext(context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput
}

type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs struct {
	// IPV4 address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IPV4 netmask
	Mask pulumi.StringPtrInput `pulumi:"mask"`
}

func (SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks)(nil)).Elem()
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput {
	return i.ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput)
}

// SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayInput is an input type that accepts SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArray and SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput values.
// You can construct a concrete instance of `SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayInput` via:
//
//	SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArray{ SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArgs{...} }
type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput
	ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutputWithContext(context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput
}

type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArray []SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksInput

func (SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks)(nil)).Elem()
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArray) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput {
	return i.ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutputWithContext(context.Background())
}

func (i SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArray) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput {
	return o
}

// IPV4 address
func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks) *string {
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IPV4 netmask
func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput() SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput) Index(i pulumi.IntInput) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks {
		return vs[0].([]SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasks)[vs[1].(int)]
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput)
}

// The properties of a static IP Arc Sql availability group listener
type SqlAvailabilityGroupStaticIPListenerPropertiesResponse struct {
	// the DNS name for the listener.
	DnsName *string `pulumi:"dnsName"`
	// IP V4 Addresses and masks for the listener.
	IpV4AddressesAndMasks []SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks `pulumi:"ipV4AddressesAndMasks"`
	// IP V6 Addresses for the listener
	IpV6Addresses []string `pulumi:"ipV6Addresses"`
	// Network port for the listener. Default is 1433.
	Port *int `pulumi:"port"`
}

// The properties of a static IP Arc Sql availability group listener
type SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupStaticIPListenerPropertiesResponse)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput() SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponseOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput {
	return o
}

// the DNS name for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesResponse) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP V4 Addresses and masks for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) IpV4AddressesAndMasks() SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesResponse) []SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks {
		return v.IpV4AddressesAndMasks
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput)
}

// IP V6 Addresses for the listener
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) IpV6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesResponse) []string { return v.IpV6Addresses }).(pulumi.StringArrayOutput)
}

// Network port for the listener. Default is 1433.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroupStaticIPListenerPropertiesResponse)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput() SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) Elem() SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerPropertiesResponse) SqlAvailabilityGroupStaticIPListenerPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SqlAvailabilityGroupStaticIPListenerPropertiesResponse
		return ret
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput)
}

// the DNS name for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsName
	}).(pulumi.StringPtrOutput)
}

// IP V4 Addresses and masks for the listener.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) IpV4AddressesAndMasks() SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerPropertiesResponse) []SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks {
		if v == nil {
			return nil
		}
		return v.IpV4AddressesAndMasks
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput)
}

// IP V6 Addresses for the listener
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) IpV6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpV6Addresses
	}).(pulumi.StringArrayOutput)
}

// Network port for the listener. Default is 1433.
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupStaticIPListenerPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks struct {
	// IPV4 address
	IpAddress *string `pulumi:"ipAddress"`
	// IPV4 netmask
	Mask *string `pulumi:"mask"`
}

type SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput() SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput {
	return o
}

// IPV4 address
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks) *string {
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IPV4 netmask
func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks) *string {
		return v.Mask
	}).(pulumi.StringPtrOutput)
}

type SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks)(nil)).Elem()
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput() SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput) ToSqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutputWithContext(ctx context.Context) SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput {
	return o
}

func (o SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput) Index(i pulumi.IntInput) SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks {
		return vs[0].([]SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasks)[vs[1].(int)]
	}).(SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput)
}

// The raw kubernetes information.
type SqlManagedInstanceK8sRaw struct {
	// The kubernetes spec information.
	Spec *SqlManagedInstanceK8sSpec `pulumi:"spec"`
}

// SqlManagedInstanceK8sRawInput is an input type that accepts SqlManagedInstanceK8sRawArgs and SqlManagedInstanceK8sRawOutput values.
// You can construct a concrete instance of `SqlManagedInstanceK8sRawInput` via:
//
//	SqlManagedInstanceK8sRawArgs{...}
type SqlManagedInstanceK8sRawInput interface {
	pulumi.Input

	ToSqlManagedInstanceK8sRawOutput() SqlManagedInstanceK8sRawOutput
	ToSqlManagedInstanceK8sRawOutputWithContext(context.Context) SqlManagedInstanceK8sRawOutput
}

// The raw kubernetes information.
type SqlManagedInstanceK8sRawArgs struct {
	// The kubernetes spec information.
	Spec SqlManagedInstanceK8sSpecPtrInput `pulumi:"spec"`
}

func (SqlManagedInstanceK8sRawArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceK8sRaw)(nil)).Elem()
}

func (i SqlManagedInstanceK8sRawArgs) ToSqlManagedInstanceK8sRawOutput() SqlManagedInstanceK8sRawOutput {
	return i.ToSqlManagedInstanceK8sRawOutputWithContext(context.Background())
}

func (i SqlManagedInstanceK8sRawArgs) ToSqlManagedInstanceK8sRawOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceK8sRawOutput)
}

func (i SqlManagedInstanceK8sRawArgs) ToSqlManagedInstanceK8sRawPtrOutput() SqlManagedInstanceK8sRawPtrOutput {
	return i.ToSqlManagedInstanceK8sRawPtrOutputWithContext(context.Background())
}

func (i SqlManagedInstanceK8sRawArgs) ToSqlManagedInstanceK8sRawPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceK8sRawOutput).ToSqlManagedInstanceK8sRawPtrOutputWithContext(ctx)
}

// SqlManagedInstanceK8sRawPtrInput is an input type that accepts SqlManagedInstanceK8sRawArgs, SqlManagedInstanceK8sRawPtr and SqlManagedInstanceK8sRawPtrOutput values.
// You can construct a concrete instance of `SqlManagedInstanceK8sRawPtrInput` via:
//
//	        SqlManagedInstanceK8sRawArgs{...}
//
//	or:
//
//	        nil
type SqlManagedInstanceK8sRawPtrInput interface {
	pulumi.Input

	ToSqlManagedInstanceK8sRawPtrOutput() SqlManagedInstanceK8sRawPtrOutput
	ToSqlManagedInstanceK8sRawPtrOutputWithContext(context.Context) SqlManagedInstanceK8sRawPtrOutput
}

type sqlManagedInstanceK8sRawPtrType SqlManagedInstanceK8sRawArgs

func SqlManagedInstanceK8sRawPtr(v *SqlManagedInstanceK8sRawArgs) SqlManagedInstanceK8sRawPtrInput {
	return (*sqlManagedInstanceK8sRawPtrType)(v)
}

func (*sqlManagedInstanceK8sRawPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceK8sRaw)(nil)).Elem()
}

func (i *sqlManagedInstanceK8sRawPtrType) ToSqlManagedInstanceK8sRawPtrOutput() SqlManagedInstanceK8sRawPtrOutput {
	return i.ToSqlManagedInstanceK8sRawPtrOutputWithContext(context.Background())
}

func (i *sqlManagedInstanceK8sRawPtrType) ToSqlManagedInstanceK8sRawPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceK8sRawPtrOutput)
}

// The raw kubernetes information.
type SqlManagedInstanceK8sRawOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sRawOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceK8sRaw)(nil)).Elem()
}

func (o SqlManagedInstanceK8sRawOutput) ToSqlManagedInstanceK8sRawOutput() SqlManagedInstanceK8sRawOutput {
	return o
}

func (o SqlManagedInstanceK8sRawOutput) ToSqlManagedInstanceK8sRawOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawOutput {
	return o
}

func (o SqlManagedInstanceK8sRawOutput) ToSqlManagedInstanceK8sRawPtrOutput() SqlManagedInstanceK8sRawPtrOutput {
	return o.ToSqlManagedInstanceK8sRawPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceK8sRawOutput) ToSqlManagedInstanceK8sRawPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlManagedInstanceK8sRaw) *SqlManagedInstanceK8sRaw {
		return &v
	}).(SqlManagedInstanceK8sRawPtrOutput)
}

// The kubernetes spec information.
func (o SqlManagedInstanceK8sRawOutput) Spec() SqlManagedInstanceK8sSpecPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sRaw) *SqlManagedInstanceK8sSpec { return v.Spec }).(SqlManagedInstanceK8sSpecPtrOutput)
}

type SqlManagedInstanceK8sRawPtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sRawPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceK8sRaw)(nil)).Elem()
}

func (o SqlManagedInstanceK8sRawPtrOutput) ToSqlManagedInstanceK8sRawPtrOutput() SqlManagedInstanceK8sRawPtrOutput {
	return o
}

func (o SqlManagedInstanceK8sRawPtrOutput) ToSqlManagedInstanceK8sRawPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawPtrOutput {
	return o
}

func (o SqlManagedInstanceK8sRawPtrOutput) Elem() SqlManagedInstanceK8sRawOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sRaw) SqlManagedInstanceK8sRaw {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceK8sRaw
		return ret
	}).(SqlManagedInstanceK8sRawOutput)
}

// The kubernetes spec information.
func (o SqlManagedInstanceK8sRawPtrOutput) Spec() SqlManagedInstanceK8sSpecPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sRaw) *SqlManagedInstanceK8sSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(SqlManagedInstanceK8sSpecPtrOutput)
}

// The raw kubernetes information.
type SqlManagedInstanceK8sRawResponse struct {
	// The kubernetes spec information.
	Spec *SqlManagedInstanceK8sSpecResponse `pulumi:"spec"`
}

// The raw kubernetes information.
type SqlManagedInstanceK8sRawResponseOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sRawResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceK8sRawResponse)(nil)).Elem()
}

func (o SqlManagedInstanceK8sRawResponseOutput) ToSqlManagedInstanceK8sRawResponseOutput() SqlManagedInstanceK8sRawResponseOutput {
	return o
}

func (o SqlManagedInstanceK8sRawResponseOutput) ToSqlManagedInstanceK8sRawResponseOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawResponseOutput {
	return o
}

// The kubernetes spec information.
func (o SqlManagedInstanceK8sRawResponseOutput) Spec() SqlManagedInstanceK8sSpecResponsePtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sRawResponse) *SqlManagedInstanceK8sSpecResponse { return v.Spec }).(SqlManagedInstanceK8sSpecResponsePtrOutput)
}

type SqlManagedInstanceK8sRawResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sRawResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceK8sRawResponse)(nil)).Elem()
}

func (o SqlManagedInstanceK8sRawResponsePtrOutput) ToSqlManagedInstanceK8sRawResponsePtrOutput() SqlManagedInstanceK8sRawResponsePtrOutput {
	return o
}

func (o SqlManagedInstanceK8sRawResponsePtrOutput) ToSqlManagedInstanceK8sRawResponsePtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sRawResponsePtrOutput {
	return o
}

func (o SqlManagedInstanceK8sRawResponsePtrOutput) Elem() SqlManagedInstanceK8sRawResponseOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sRawResponse) SqlManagedInstanceK8sRawResponse {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceK8sRawResponse
		return ret
	}).(SqlManagedInstanceK8sRawResponseOutput)
}

// The kubernetes spec information.
func (o SqlManagedInstanceK8sRawResponsePtrOutput) Spec() SqlManagedInstanceK8sSpecResponsePtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sRawResponse) *SqlManagedInstanceK8sSpecResponse {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(SqlManagedInstanceK8sSpecResponsePtrOutput)
}

// The kubernetes spec information.
type SqlManagedInstanceK8sSpec struct {
	// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
	Replicas *int `pulumi:"replicas"`
	// The kubernetes scheduling information.
	Scheduling *K8sScheduling `pulumi:"scheduling"`
	// The kubernetes security information.
	Security *K8sSecurity `pulumi:"security"`
	// The kubernetes settings information.
	Settings *K8sSettings `pulumi:"settings"`
}

// SqlManagedInstanceK8sSpecInput is an input type that accepts SqlManagedInstanceK8sSpecArgs and SqlManagedInstanceK8sSpecOutput values.
// You can construct a concrete instance of `SqlManagedInstanceK8sSpecInput` via:
//
//	SqlManagedInstanceK8sSpecArgs{...}
type SqlManagedInstanceK8sSpecInput interface {
	pulumi.Input

	ToSqlManagedInstanceK8sSpecOutput() SqlManagedInstanceK8sSpecOutput
	ToSqlManagedInstanceK8sSpecOutputWithContext(context.Context) SqlManagedInstanceK8sSpecOutput
}

// The kubernetes spec information.
type SqlManagedInstanceK8sSpecArgs struct {
	// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// The kubernetes scheduling information.
	Scheduling K8sSchedulingPtrInput `pulumi:"scheduling"`
	// The kubernetes security information.
	Security K8sSecurityPtrInput `pulumi:"security"`
	// The kubernetes settings information.
	Settings K8sSettingsPtrInput `pulumi:"settings"`
}

func (SqlManagedInstanceK8sSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceK8sSpec)(nil)).Elem()
}

func (i SqlManagedInstanceK8sSpecArgs) ToSqlManagedInstanceK8sSpecOutput() SqlManagedInstanceK8sSpecOutput {
	return i.ToSqlManagedInstanceK8sSpecOutputWithContext(context.Background())
}

func (i SqlManagedInstanceK8sSpecArgs) ToSqlManagedInstanceK8sSpecOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceK8sSpecOutput)
}

func (i SqlManagedInstanceK8sSpecArgs) ToSqlManagedInstanceK8sSpecPtrOutput() SqlManagedInstanceK8sSpecPtrOutput {
	return i.ToSqlManagedInstanceK8sSpecPtrOutputWithContext(context.Background())
}

func (i SqlManagedInstanceK8sSpecArgs) ToSqlManagedInstanceK8sSpecPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceK8sSpecOutput).ToSqlManagedInstanceK8sSpecPtrOutputWithContext(ctx)
}

// SqlManagedInstanceK8sSpecPtrInput is an input type that accepts SqlManagedInstanceK8sSpecArgs, SqlManagedInstanceK8sSpecPtr and SqlManagedInstanceK8sSpecPtrOutput values.
// You can construct a concrete instance of `SqlManagedInstanceK8sSpecPtrInput` via:
//
//	        SqlManagedInstanceK8sSpecArgs{...}
//
//	or:
//
//	        nil
type SqlManagedInstanceK8sSpecPtrInput interface {
	pulumi.Input

	ToSqlManagedInstanceK8sSpecPtrOutput() SqlManagedInstanceK8sSpecPtrOutput
	ToSqlManagedInstanceK8sSpecPtrOutputWithContext(context.Context) SqlManagedInstanceK8sSpecPtrOutput
}

type sqlManagedInstanceK8sSpecPtrType SqlManagedInstanceK8sSpecArgs

func SqlManagedInstanceK8sSpecPtr(v *SqlManagedInstanceK8sSpecArgs) SqlManagedInstanceK8sSpecPtrInput {
	return (*sqlManagedInstanceK8sSpecPtrType)(v)
}

func (*sqlManagedInstanceK8sSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceK8sSpec)(nil)).Elem()
}

func (i *sqlManagedInstanceK8sSpecPtrType) ToSqlManagedInstanceK8sSpecPtrOutput() SqlManagedInstanceK8sSpecPtrOutput {
	return i.ToSqlManagedInstanceK8sSpecPtrOutputWithContext(context.Background())
}

func (i *sqlManagedInstanceK8sSpecPtrType) ToSqlManagedInstanceK8sSpecPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceK8sSpecPtrOutput)
}

// The kubernetes spec information.
type SqlManagedInstanceK8sSpecOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceK8sSpec)(nil)).Elem()
}

func (o SqlManagedInstanceK8sSpecOutput) ToSqlManagedInstanceK8sSpecOutput() SqlManagedInstanceK8sSpecOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecOutput) ToSqlManagedInstanceK8sSpecOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecOutput) ToSqlManagedInstanceK8sSpecPtrOutput() SqlManagedInstanceK8sSpecPtrOutput {
	return o.ToSqlManagedInstanceK8sSpecPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceK8sSpecOutput) ToSqlManagedInstanceK8sSpecPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlManagedInstanceK8sSpec) *SqlManagedInstanceK8sSpec {
		return &v
	}).(SqlManagedInstanceK8sSpecPtrOutput)
}

// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
func (o SqlManagedInstanceK8sSpecOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpec) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The kubernetes scheduling information.
func (o SqlManagedInstanceK8sSpecOutput) Scheduling() K8sSchedulingPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpec) *K8sScheduling { return v.Scheduling }).(K8sSchedulingPtrOutput)
}

// The kubernetes security information.
func (o SqlManagedInstanceK8sSpecOutput) Security() K8sSecurityPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpec) *K8sSecurity { return v.Security }).(K8sSecurityPtrOutput)
}

// The kubernetes settings information.
func (o SqlManagedInstanceK8sSpecOutput) Settings() K8sSettingsPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpec) *K8sSettings { return v.Settings }).(K8sSettingsPtrOutput)
}

type SqlManagedInstanceK8sSpecPtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceK8sSpec)(nil)).Elem()
}

func (o SqlManagedInstanceK8sSpecPtrOutput) ToSqlManagedInstanceK8sSpecPtrOutput() SqlManagedInstanceK8sSpecPtrOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecPtrOutput) ToSqlManagedInstanceK8sSpecPtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecPtrOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecPtrOutput) Elem() SqlManagedInstanceK8sSpecOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpec) SqlManagedInstanceK8sSpec {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceK8sSpec
		return ret
	}).(SqlManagedInstanceK8sSpecOutput)
}

// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
func (o SqlManagedInstanceK8sSpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpec) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// The kubernetes scheduling information.
func (o SqlManagedInstanceK8sSpecPtrOutput) Scheduling() K8sSchedulingPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpec) *K8sScheduling {
		if v == nil {
			return nil
		}
		return v.Scheduling
	}).(K8sSchedulingPtrOutput)
}

// The kubernetes security information.
func (o SqlManagedInstanceK8sSpecPtrOutput) Security() K8sSecurityPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpec) *K8sSecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(K8sSecurityPtrOutput)
}

// The kubernetes settings information.
func (o SqlManagedInstanceK8sSpecPtrOutput) Settings() K8sSettingsPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpec) *K8sSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(K8sSettingsPtrOutput)
}

// The kubernetes spec information.
type SqlManagedInstanceK8sSpecResponse struct {
	// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
	Replicas *int `pulumi:"replicas"`
	// The kubernetes scheduling information.
	Scheduling *K8sSchedulingResponse `pulumi:"scheduling"`
	// The kubernetes security information.
	Security *K8sSecurityResponse `pulumi:"security"`
	// The kubernetes settings information.
	Settings *K8sSettingsResponse `pulumi:"settings"`
}

// The kubernetes spec information.
type SqlManagedInstanceK8sSpecResponseOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceK8sSpecResponse)(nil)).Elem()
}

func (o SqlManagedInstanceK8sSpecResponseOutput) ToSqlManagedInstanceK8sSpecResponseOutput() SqlManagedInstanceK8sSpecResponseOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecResponseOutput) ToSqlManagedInstanceK8sSpecResponseOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecResponseOutput {
	return o
}

// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
func (o SqlManagedInstanceK8sSpecResponseOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpecResponse) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The kubernetes scheduling information.
func (o SqlManagedInstanceK8sSpecResponseOutput) Scheduling() K8sSchedulingResponsePtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpecResponse) *K8sSchedulingResponse { return v.Scheduling }).(K8sSchedulingResponsePtrOutput)
}

// The kubernetes security information.
func (o SqlManagedInstanceK8sSpecResponseOutput) Security() K8sSecurityResponsePtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpecResponse) *K8sSecurityResponse { return v.Security }).(K8sSecurityResponsePtrOutput)
}

// The kubernetes settings information.
func (o SqlManagedInstanceK8sSpecResponseOutput) Settings() K8sSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceK8sSpecResponse) *K8sSettingsResponse { return v.Settings }).(K8sSettingsResponsePtrOutput)
}

type SqlManagedInstanceK8sSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceK8sSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceK8sSpecResponse)(nil)).Elem()
}

func (o SqlManagedInstanceK8sSpecResponsePtrOutput) ToSqlManagedInstanceK8sSpecResponsePtrOutput() SqlManagedInstanceK8sSpecResponsePtrOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecResponsePtrOutput) ToSqlManagedInstanceK8sSpecResponsePtrOutputWithContext(ctx context.Context) SqlManagedInstanceK8sSpecResponsePtrOutput {
	return o
}

func (o SqlManagedInstanceK8sSpecResponsePtrOutput) Elem() SqlManagedInstanceK8sSpecResponseOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpecResponse) SqlManagedInstanceK8sSpecResponse {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceK8sSpecResponse
		return ret
	}).(SqlManagedInstanceK8sSpecResponseOutput)
}

// This option specifies the number of SQL Managed Instance replicas that will be deployed in your Kubernetes cluster for high availability purposes. If sku.tier is BusinessCritical, allowed values are '2' or '3' with default of '3'. If sku.tier is GeneralPurpose, replicas must be '1'.
func (o SqlManagedInstanceK8sSpecResponsePtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpecResponse) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// The kubernetes scheduling information.
func (o SqlManagedInstanceK8sSpecResponsePtrOutput) Scheduling() K8sSchedulingResponsePtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpecResponse) *K8sSchedulingResponse {
		if v == nil {
			return nil
		}
		return v.Scheduling
	}).(K8sSchedulingResponsePtrOutput)
}

// The kubernetes security information.
func (o SqlManagedInstanceK8sSpecResponsePtrOutput) Security() K8sSecurityResponsePtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpecResponse) *K8sSecurityResponse {
		if v == nil {
			return nil
		}
		return v.Security
	}).(K8sSecurityResponsePtrOutput)
}

// The kubernetes settings information.
func (o SqlManagedInstanceK8sSpecResponsePtrOutput) Settings() K8sSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceK8sSpecResponse) *K8sSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(K8sSettingsResponsePtrOutput)
}

// Properties of sqlManagedInstance.
type SqlManagedInstanceProperties struct {
	// Active Directory information related to this SQL Managed Instance.
	ActiveDirectoryInformation *ActiveDirectoryInformation `pulumi:"activeDirectoryInformation"`
	// The instance admin user
	Admin *string `pulumi:"admin"`
	// Username and password for basic authentication.
	BasicLoginInformation *BasicLoginInformation `pulumi:"basicLoginInformation"`
	// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
	ClusterId *string `pulumi:"clusterId"`
	// null
	DataControllerId *string `pulumi:"dataControllerId"`
	// The instance end time
	EndTime *string `pulumi:"endTime"`
	// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
	ExtensionId *string `pulumi:"extensionId"`
	// The raw kubernetes information
	K8sRaw *SqlManagedInstanceK8sRaw `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate *string `pulumi:"lastUploadedDate"`
	// The license type to apply for this managed instance.
	LicenseType *string `pulumi:"licenseType"`
	// The instance start time
	StartTime *string `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for SqlManagedInstanceProperties
func (val *SqlManagedInstanceProperties) Defaults() *SqlManagedInstanceProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LicenseType == nil {
		licenseType_ := "BasePrice"
		tmp.LicenseType = &licenseType_
	}
	return &tmp
}

// SqlManagedInstancePropertiesInput is an input type that accepts SqlManagedInstancePropertiesArgs and SqlManagedInstancePropertiesOutput values.
// You can construct a concrete instance of `SqlManagedInstancePropertiesInput` via:
//
//	SqlManagedInstancePropertiesArgs{...}
type SqlManagedInstancePropertiesInput interface {
	pulumi.Input

	ToSqlManagedInstancePropertiesOutput() SqlManagedInstancePropertiesOutput
	ToSqlManagedInstancePropertiesOutputWithContext(context.Context) SqlManagedInstancePropertiesOutput
}

// Properties of sqlManagedInstance.
type SqlManagedInstancePropertiesArgs struct {
	// Active Directory information related to this SQL Managed Instance.
	ActiveDirectoryInformation ActiveDirectoryInformationPtrInput `pulumi:"activeDirectoryInformation"`
	// The instance admin user
	Admin pulumi.StringPtrInput `pulumi:"admin"`
	// Username and password for basic authentication.
	BasicLoginInformation BasicLoginInformationPtrInput `pulumi:"basicLoginInformation"`
	// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// null
	DataControllerId pulumi.StringPtrInput `pulumi:"dataControllerId"`
	// The instance end time
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
	ExtensionId pulumi.StringPtrInput `pulumi:"extensionId"`
	// The raw kubernetes information
	K8sRaw SqlManagedInstanceK8sRawPtrInput `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate pulumi.StringPtrInput `pulumi:"lastUploadedDate"`
	// The license type to apply for this managed instance.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// The instance start time
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for SqlManagedInstancePropertiesArgs
func (val *SqlManagedInstancePropertiesArgs) Defaults() *SqlManagedInstancePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LicenseType == nil {
		tmp.LicenseType = pulumi.StringPtr("BasePrice")
	}
	return &tmp
}
func (SqlManagedInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceProperties)(nil)).Elem()
}

func (i SqlManagedInstancePropertiesArgs) ToSqlManagedInstancePropertiesOutput() SqlManagedInstancePropertiesOutput {
	return i.ToSqlManagedInstancePropertiesOutputWithContext(context.Background())
}

func (i SqlManagedInstancePropertiesArgs) ToSqlManagedInstancePropertiesOutputWithContext(ctx context.Context) SqlManagedInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstancePropertiesOutput)
}

// Properties of sqlManagedInstance.
type SqlManagedInstancePropertiesOutput struct{ *pulumi.OutputState }

func (SqlManagedInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceProperties)(nil)).Elem()
}

func (o SqlManagedInstancePropertiesOutput) ToSqlManagedInstancePropertiesOutput() SqlManagedInstancePropertiesOutput {
	return o
}

func (o SqlManagedInstancePropertiesOutput) ToSqlManagedInstancePropertiesOutputWithContext(ctx context.Context) SqlManagedInstancePropertiesOutput {
	return o
}

// Active Directory information related to this SQL Managed Instance.
func (o SqlManagedInstancePropertiesOutput) ActiveDirectoryInformation() ActiveDirectoryInformationPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *ActiveDirectoryInformation { return v.ActiveDirectoryInformation }).(ActiveDirectoryInformationPtrOutput)
}

// The instance admin user
func (o SqlManagedInstancePropertiesOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

// Username and password for basic authentication.
func (o SqlManagedInstancePropertiesOutput) BasicLoginInformation() BasicLoginInformationPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *BasicLoginInformation { return v.BasicLoginInformation }).(BasicLoginInformationPtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
func (o SqlManagedInstancePropertiesOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// null
func (o SqlManagedInstancePropertiesOutput) DataControllerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.DataControllerId }).(pulumi.StringPtrOutput)
}

// The instance end time
func (o SqlManagedInstancePropertiesOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
func (o SqlManagedInstancePropertiesOutput) ExtensionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.ExtensionId }).(pulumi.StringPtrOutput)
}

// The raw kubernetes information
func (o SqlManagedInstancePropertiesOutput) K8sRaw() SqlManagedInstanceK8sRawPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *SqlManagedInstanceK8sRaw { return v.K8sRaw }).(SqlManagedInstanceK8sRawPtrOutput)
}

// Last uploaded date from Kubernetes cluster. Defaults to current date time
func (o SqlManagedInstancePropertiesOutput) LastUploadedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.LastUploadedDate }).(pulumi.StringPtrOutput)
}

// The license type to apply for this managed instance.
func (o SqlManagedInstancePropertiesOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The instance start time
func (o SqlManagedInstancePropertiesOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceProperties) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Properties of sqlManagedInstance.
type SqlManagedInstancePropertiesResponse struct {
	// The instance admin user
	Admin *string `pulumi:"admin"`
	// Username and password for basic authentication.
	BasicLoginInformation *BasicLoginInformationResponse `pulumi:"basicLoginInformation"`
	// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
	ClusterId *string `pulumi:"clusterId"`
	// null
	DataControllerId *string `pulumi:"dataControllerId"`
	// The instance end time
	EndTime *string `pulumi:"endTime"`
	// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
	ExtensionId *string `pulumi:"extensionId"`
	// The raw kubernetes information
	K8sRaw *SqlManagedInstanceK8sRawResponse `pulumi:"k8sRaw"`
	// Last uploaded date from Kubernetes cluster. Defaults to current date time
	LastUploadedDate *string `pulumi:"lastUploadedDate"`
	// The license type to apply for this managed instance.
	LicenseType *string `pulumi:"licenseType"`
	// The provisioning state of the Arc-enabled SQL Managed Instance resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The instance start time
	StartTime *string `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for SqlManagedInstancePropertiesResponse
func (val *SqlManagedInstancePropertiesResponse) Defaults() *SqlManagedInstancePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LicenseType == nil {
		licenseType_ := "BasePrice"
		tmp.LicenseType = &licenseType_
	}
	return &tmp
}

// Properties of sqlManagedInstance.
type SqlManagedInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlManagedInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstancePropertiesResponse)(nil)).Elem()
}

func (o SqlManagedInstancePropertiesResponseOutput) ToSqlManagedInstancePropertiesResponseOutput() SqlManagedInstancePropertiesResponseOutput {
	return o
}

func (o SqlManagedInstancePropertiesResponseOutput) ToSqlManagedInstancePropertiesResponseOutputWithContext(ctx context.Context) SqlManagedInstancePropertiesResponseOutput {
	return o
}

// The instance admin user
func (o SqlManagedInstancePropertiesResponseOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

// Username and password for basic authentication.
func (o SqlManagedInstancePropertiesResponseOutput) BasicLoginInformation() BasicLoginInformationResponsePtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *BasicLoginInformationResponse {
		return v.BasicLoginInformation
	}).(BasicLoginInformationResponsePtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
func (o SqlManagedInstancePropertiesResponseOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// null
func (o SqlManagedInstancePropertiesResponseOutput) DataControllerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.DataControllerId }).(pulumi.StringPtrOutput)
}

// The instance end time
func (o SqlManagedInstancePropertiesResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
func (o SqlManagedInstancePropertiesResponseOutput) ExtensionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.ExtensionId }).(pulumi.StringPtrOutput)
}

// The raw kubernetes information
func (o SqlManagedInstancePropertiesResponseOutput) K8sRaw() SqlManagedInstanceK8sRawResponsePtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *SqlManagedInstanceK8sRawResponse { return v.K8sRaw }).(SqlManagedInstanceK8sRawResponsePtrOutput)
}

// Last uploaded date from Kubernetes cluster. Defaults to current date time
func (o SqlManagedInstancePropertiesResponseOutput) LastUploadedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.LastUploadedDate }).(pulumi.StringPtrOutput)
}

// The license type to apply for this managed instance.
func (o SqlManagedInstancePropertiesResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The provisioning state of the Arc-enabled SQL Managed Instance resource.
func (o SqlManagedInstancePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The instance start time
func (o SqlManagedInstancePropertiesResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstancePropertiesResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU for Azure Managed Instance - Azure Arc
type SqlManagedInstanceSku struct {
	// The SKU capacity
	Capacity *int `pulumi:"capacity"`
	// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
	Dev *bool `pulumi:"dev"`
	// The SKU family
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name SqlManagedInstanceSkuName `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// The pricing tier for the instance.
	Tier *SqlManagedInstanceSkuTier `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for SqlManagedInstanceSku
func (val *SqlManagedInstanceSku) Defaults() *SqlManagedInstanceSku {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Dev == nil {
		dev_ := true
		tmp.Dev = &dev_
	}
	if tmp.Tier == nil {
		tier_ := SqlManagedInstanceSkuTier("GeneralPurpose")
		tmp.Tier = &tier_
	}
	return &tmp
}

// SqlManagedInstanceSkuInput is an input type that accepts SqlManagedInstanceSkuArgs and SqlManagedInstanceSkuOutput values.
// You can construct a concrete instance of `SqlManagedInstanceSkuInput` via:
//
//	SqlManagedInstanceSkuArgs{...}
type SqlManagedInstanceSkuInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuOutput() SqlManagedInstanceSkuOutput
	ToSqlManagedInstanceSkuOutputWithContext(context.Context) SqlManagedInstanceSkuOutput
}

// The resource model definition representing SKU for Azure Managed Instance - Azure Arc
type SqlManagedInstanceSkuArgs struct {
	// The SKU capacity
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
	Dev pulumi.BoolPtrInput `pulumi:"dev"`
	// The SKU family
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name SqlManagedInstanceSkuNameInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The pricing tier for the instance.
	Tier SqlManagedInstanceSkuTierPtrInput `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for SqlManagedInstanceSkuArgs
func (val *SqlManagedInstanceSkuArgs) Defaults() *SqlManagedInstanceSkuArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Dev == nil {
		tmp.Dev = pulumi.BoolPtr(true)
	}
	if tmp.Tier == nil {
		tmp.Tier = SqlManagedInstanceSkuTier("GeneralPurpose")
	}
	return &tmp
}
func (SqlManagedInstanceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSku)(nil)).Elem()
}

func (i SqlManagedInstanceSkuArgs) ToSqlManagedInstanceSkuOutput() SqlManagedInstanceSkuOutput {
	return i.ToSqlManagedInstanceSkuOutputWithContext(context.Background())
}

func (i SqlManagedInstanceSkuArgs) ToSqlManagedInstanceSkuOutputWithContext(ctx context.Context) SqlManagedInstanceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceSkuOutput)
}

func (i SqlManagedInstanceSkuArgs) ToSqlManagedInstanceSkuPtrOutput() SqlManagedInstanceSkuPtrOutput {
	return i.ToSqlManagedInstanceSkuPtrOutputWithContext(context.Background())
}

func (i SqlManagedInstanceSkuArgs) ToSqlManagedInstanceSkuPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceSkuOutput).ToSqlManagedInstanceSkuPtrOutputWithContext(ctx)
}

// SqlManagedInstanceSkuPtrInput is an input type that accepts SqlManagedInstanceSkuArgs, SqlManagedInstanceSkuPtr and SqlManagedInstanceSkuPtrOutput values.
// You can construct a concrete instance of `SqlManagedInstanceSkuPtrInput` via:
//
//	        SqlManagedInstanceSkuArgs{...}
//
//	or:
//
//	        nil
type SqlManagedInstanceSkuPtrInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuPtrOutput() SqlManagedInstanceSkuPtrOutput
	ToSqlManagedInstanceSkuPtrOutputWithContext(context.Context) SqlManagedInstanceSkuPtrOutput
}

type sqlManagedInstanceSkuPtrType SqlManagedInstanceSkuArgs

func SqlManagedInstanceSkuPtr(v *SqlManagedInstanceSkuArgs) SqlManagedInstanceSkuPtrInput {
	return (*sqlManagedInstanceSkuPtrType)(v)
}

func (*sqlManagedInstanceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceSku)(nil)).Elem()
}

func (i *sqlManagedInstanceSkuPtrType) ToSqlManagedInstanceSkuPtrOutput() SqlManagedInstanceSkuPtrOutput {
	return i.ToSqlManagedInstanceSkuPtrOutputWithContext(context.Background())
}

func (i *sqlManagedInstanceSkuPtrType) ToSqlManagedInstanceSkuPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlManagedInstanceSkuPtrOutput)
}

// The resource model definition representing SKU for Azure Managed Instance - Azure Arc
type SqlManagedInstanceSkuOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSku)(nil)).Elem()
}

func (o SqlManagedInstanceSkuOutput) ToSqlManagedInstanceSkuOutput() SqlManagedInstanceSkuOutput {
	return o
}

func (o SqlManagedInstanceSkuOutput) ToSqlManagedInstanceSkuOutputWithContext(ctx context.Context) SqlManagedInstanceSkuOutput {
	return o
}

func (o SqlManagedInstanceSkuOutput) ToSqlManagedInstanceSkuPtrOutput() SqlManagedInstanceSkuPtrOutput {
	return o.ToSqlManagedInstanceSkuPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuOutput) ToSqlManagedInstanceSkuPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlManagedInstanceSku) *SqlManagedInstanceSku {
		return &v
	}).(SqlManagedInstanceSkuPtrOutput)
}

// The SKU capacity
func (o SqlManagedInstanceSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o SqlManagedInstanceSkuOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSku) *bool { return v.Dev }).(pulumi.BoolPtrOutput)
}

// The SKU family
func (o SqlManagedInstanceSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o SqlManagedInstanceSkuOutput) Name() SqlManagedInstanceSkuNameOutput {
	return o.ApplyT(func(v SqlManagedInstanceSku) SqlManagedInstanceSkuName { return v.Name }).(SqlManagedInstanceSkuNameOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SqlManagedInstanceSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The pricing tier for the instance.
func (o SqlManagedInstanceSkuOutput) Tier() SqlManagedInstanceSkuTierPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSku) *SqlManagedInstanceSkuTier { return v.Tier }).(SqlManagedInstanceSkuTierPtrOutput)
}

type SqlManagedInstanceSkuPtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceSku)(nil)).Elem()
}

func (o SqlManagedInstanceSkuPtrOutput) ToSqlManagedInstanceSkuPtrOutput() SqlManagedInstanceSkuPtrOutput {
	return o
}

func (o SqlManagedInstanceSkuPtrOutput) ToSqlManagedInstanceSkuPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuPtrOutput {
	return o
}

func (o SqlManagedInstanceSkuPtrOutput) Elem() SqlManagedInstanceSkuOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) SqlManagedInstanceSku {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceSku
		return ret
	}).(SqlManagedInstanceSkuOutput)
}

// The SKU capacity
func (o SqlManagedInstanceSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o SqlManagedInstanceSkuPtrOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) *bool {
		if v == nil {
			return nil
		}
		return v.Dev
	}).(pulumi.BoolPtrOutput)
}

// The SKU family
func (o SqlManagedInstanceSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o SqlManagedInstanceSkuPtrOutput) Name() SqlManagedInstanceSkuNamePtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) *SqlManagedInstanceSkuName {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(SqlManagedInstanceSkuNamePtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SqlManagedInstanceSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The pricing tier for the instance.
func (o SqlManagedInstanceSkuPtrOutput) Tier() SqlManagedInstanceSkuTierPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSku) *SqlManagedInstanceSkuTier {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(SqlManagedInstanceSkuTierPtrOutput)
}

// The resource model definition representing SKU for Azure Managed Instance - Azure Arc
type SqlManagedInstanceSkuResponse struct {
	// The SKU capacity
	Capacity *int `pulumi:"capacity"`
	// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
	Dev *bool `pulumi:"dev"`
	// The SKU family
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// The pricing tier for the instance.
	Tier *string `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for SqlManagedInstanceSkuResponse
func (val *SqlManagedInstanceSkuResponse) Defaults() *SqlManagedInstanceSkuResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Dev == nil {
		dev_ := true
		tmp.Dev = &dev_
	}
	if tmp.Tier == nil {
		tier_ := "GeneralPurpose"
		tmp.Tier = &tier_
	}
	return &tmp
}

// The resource model definition representing SKU for Azure Managed Instance - Azure Arc
type SqlManagedInstanceSkuResponseOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuResponse)(nil)).Elem()
}

func (o SqlManagedInstanceSkuResponseOutput) ToSqlManagedInstanceSkuResponseOutput() SqlManagedInstanceSkuResponseOutput {
	return o
}

func (o SqlManagedInstanceSkuResponseOutput) ToSqlManagedInstanceSkuResponseOutputWithContext(ctx context.Context) SqlManagedInstanceSkuResponseOutput {
	return o
}

// The SKU capacity
func (o SqlManagedInstanceSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o SqlManagedInstanceSkuResponseOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSkuResponse) *bool { return v.Dev }).(pulumi.BoolPtrOutput)
}

// The SKU family
func (o SqlManagedInstanceSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o SqlManagedInstanceSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SqlManagedInstanceSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SqlManagedInstanceSkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The pricing tier for the instance.
func (o SqlManagedInstanceSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlManagedInstanceSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SqlManagedInstanceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceSkuResponse)(nil)).Elem()
}

func (o SqlManagedInstanceSkuResponsePtrOutput) ToSqlManagedInstanceSkuResponsePtrOutput() SqlManagedInstanceSkuResponsePtrOutput {
	return o
}

func (o SqlManagedInstanceSkuResponsePtrOutput) ToSqlManagedInstanceSkuResponsePtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuResponsePtrOutput {
	return o
}

func (o SqlManagedInstanceSkuResponsePtrOutput) Elem() SqlManagedInstanceSkuResponseOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) SqlManagedInstanceSkuResponse {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceSkuResponse
		return ret
	}).(SqlManagedInstanceSkuResponseOutput)
}

// The SKU capacity
func (o SqlManagedInstanceSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Whether dev/test is enabled. When the dev field is set to true, the resource is used for dev/test purpose.
func (o SqlManagedInstanceSkuResponsePtrOutput) Dev() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Dev
	}).(pulumi.BoolPtrOutput)
}

// The SKU family
func (o SqlManagedInstanceSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o SqlManagedInstanceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SqlManagedInstanceSkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The pricing tier for the instance.
func (o SqlManagedInstanceSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The properties of Arc Sql Server availability group resource
type SqlServerAvailabilityGroupResourceProperties struct {
	// A list of Availability Group Database Replicas.
	Databases *SqlServerAvailabilityGroupResourcePropertiesDatabases `pulumi:"databases"`
	// Availability Group Info
	Info *AvailabilityGroupInfo `pulumi:"info"`
	// A list of Availability Group Replicas.
	Replicas *SqlServerAvailabilityGroupResourcePropertiesReplicas `pulumi:"replicas"`
}

// SqlServerAvailabilityGroupResourcePropertiesInput is an input type that accepts SqlServerAvailabilityGroupResourcePropertiesArgs and SqlServerAvailabilityGroupResourcePropertiesOutput values.
// You can construct a concrete instance of `SqlServerAvailabilityGroupResourcePropertiesInput` via:
//
//	SqlServerAvailabilityGroupResourcePropertiesArgs{...}
type SqlServerAvailabilityGroupResourcePropertiesInput interface {
	pulumi.Input

	ToSqlServerAvailabilityGroupResourcePropertiesOutput() SqlServerAvailabilityGroupResourcePropertiesOutput
	ToSqlServerAvailabilityGroupResourcePropertiesOutputWithContext(context.Context) SqlServerAvailabilityGroupResourcePropertiesOutput
}

// The properties of Arc Sql Server availability group resource
type SqlServerAvailabilityGroupResourcePropertiesArgs struct {
	// A list of Availability Group Database Replicas.
	Databases SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrInput `pulumi:"databases"`
	// Availability Group Info
	Info AvailabilityGroupInfoPtrInput `pulumi:"info"`
	// A list of Availability Group Replicas.
	Replicas SqlServerAvailabilityGroupResourcePropertiesReplicasPtrInput `pulumi:"replicas"`
}

func (SqlServerAvailabilityGroupResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourceProperties)(nil)).Elem()
}

func (i SqlServerAvailabilityGroupResourcePropertiesArgs) ToSqlServerAvailabilityGroupResourcePropertiesOutput() SqlServerAvailabilityGroupResourcePropertiesOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesOutputWithContext(context.Background())
}

func (i SqlServerAvailabilityGroupResourcePropertiesArgs) ToSqlServerAvailabilityGroupResourcePropertiesOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesOutput)
}

// The properties of Arc Sql Server availability group resource
type SqlServerAvailabilityGroupResourcePropertiesOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourceProperties)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesOutput) ToSqlServerAvailabilityGroupResourcePropertiesOutput() SqlServerAvailabilityGroupResourcePropertiesOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesOutput) ToSqlServerAvailabilityGroupResourcePropertiesOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesOutput {
	return o
}

// A list of Availability Group Database Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesOutput) Databases() SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourceProperties) *SqlServerAvailabilityGroupResourcePropertiesDatabases {
		return v.Databases
	}).(SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput)
}

// Availability Group Info
func (o SqlServerAvailabilityGroupResourcePropertiesOutput) Info() AvailabilityGroupInfoPtrOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourceProperties) *AvailabilityGroupInfo { return v.Info }).(AvailabilityGroupInfoPtrOutput)
}

// A list of Availability Group Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesOutput) Replicas() SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourceProperties) *SqlServerAvailabilityGroupResourcePropertiesReplicas {
		return v.Replicas
	}).(SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput)
}

// A list of Availability Group Database Replicas.
type SqlServerAvailabilityGroupResourcePropertiesDatabases struct {
	// Array of Availability Group Database Replicas.
	Value []SqlAvailabilityGroupDatabaseReplicaResourceProperties `pulumi:"value"`
}

// SqlServerAvailabilityGroupResourcePropertiesDatabasesInput is an input type that accepts SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs and SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput values.
// You can construct a concrete instance of `SqlServerAvailabilityGroupResourcePropertiesDatabasesInput` via:
//
//	SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs{...}
type SqlServerAvailabilityGroupResourcePropertiesDatabasesInput interface {
	pulumi.Input

	ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput
	ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutputWithContext(context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput
}

// A list of Availability Group Database Replicas.
type SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs struct {
	// Array of Availability Group Database Replicas.
	Value SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayInput `pulumi:"value"`
}

func (SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesDatabases)(nil)).Elem()
}

func (i SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutputWithContext(context.Background())
}

func (i SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput)
}

func (i SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(context.Background())
}

func (i SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput).ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(ctx)
}

// SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrInput is an input type that accepts SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs, SqlServerAvailabilityGroupResourcePropertiesDatabasesPtr and SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput values.
// You can construct a concrete instance of `SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrInput` via:
//
//	        SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs{...}
//
//	or:
//
//	        nil
type SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrInput interface {
	pulumi.Input

	ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput
	ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput
}

type sqlServerAvailabilityGroupResourcePropertiesDatabasesPtrType SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs

func SqlServerAvailabilityGroupResourcePropertiesDatabasesPtr(v *SqlServerAvailabilityGroupResourcePropertiesDatabasesArgs) SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrInput {
	return (*sqlServerAvailabilityGroupResourcePropertiesDatabasesPtrType)(v)
}

func (*sqlServerAvailabilityGroupResourcePropertiesDatabasesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerAvailabilityGroupResourcePropertiesDatabases)(nil)).Elem()
}

func (i *sqlServerAvailabilityGroupResourcePropertiesDatabasesPtrType) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(context.Background())
}

func (i *sqlServerAvailabilityGroupResourcePropertiesDatabasesPtrType) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput)
}

// A list of Availability Group Database Replicas.
type SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesDatabases)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return o.ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(context.Background())
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlServerAvailabilityGroupResourcePropertiesDatabases) *SqlServerAvailabilityGroupResourcePropertiesDatabases {
		return &v
	}).(SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput)
}

// Array of Availability Group Database Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput) Value() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesDatabases) []SqlAvailabilityGroupDatabaseReplicaResourceProperties {
		return v.Value
	}).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput)
}

type SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerAvailabilityGroupResourcePropertiesDatabases)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput() SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput) Elem() SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesDatabases) SqlServerAvailabilityGroupResourcePropertiesDatabases {
		if v != nil {
			return *v
		}
		var ret SqlServerAvailabilityGroupResourcePropertiesDatabases
		return ret
	}).(SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput)
}

// Array of Availability Group Database Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput) Value() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesDatabases) []SqlAvailabilityGroupDatabaseReplicaResourceProperties {
		if v == nil {
			return nil
		}
		return v.Value
	}).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput)
}

// A list of Availability Group Replicas.
type SqlServerAvailabilityGroupResourcePropertiesReplicas struct {
	// Array of Availability Group Replicas.
	Value []SqlAvailabilityGroupReplicaResourceProperties `pulumi:"value"`
}

// SqlServerAvailabilityGroupResourcePropertiesReplicasInput is an input type that accepts SqlServerAvailabilityGroupResourcePropertiesReplicasArgs and SqlServerAvailabilityGroupResourcePropertiesReplicasOutput values.
// You can construct a concrete instance of `SqlServerAvailabilityGroupResourcePropertiesReplicasInput` via:
//
//	SqlServerAvailabilityGroupResourcePropertiesReplicasArgs{...}
type SqlServerAvailabilityGroupResourcePropertiesReplicasInput interface {
	pulumi.Input

	ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasOutput
	ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutputWithContext(context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasOutput
}

// A list of Availability Group Replicas.
type SqlServerAvailabilityGroupResourcePropertiesReplicasArgs struct {
	// Array of Availability Group Replicas.
	Value SqlAvailabilityGroupReplicaResourcePropertiesArrayInput `pulumi:"value"`
}

func (SqlServerAvailabilityGroupResourcePropertiesReplicasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesReplicas)(nil)).Elem()
}

func (i SqlServerAvailabilityGroupResourcePropertiesReplicasArgs) ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutputWithContext(context.Background())
}

func (i SqlServerAvailabilityGroupResourcePropertiesReplicasArgs) ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesReplicasOutput)
}

func (i SqlServerAvailabilityGroupResourcePropertiesReplicasArgs) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(context.Background())
}

func (i SqlServerAvailabilityGroupResourcePropertiesReplicasArgs) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesReplicasOutput).ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(ctx)
}

// SqlServerAvailabilityGroupResourcePropertiesReplicasPtrInput is an input type that accepts SqlServerAvailabilityGroupResourcePropertiesReplicasArgs, SqlServerAvailabilityGroupResourcePropertiesReplicasPtr and SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput values.
// You can construct a concrete instance of `SqlServerAvailabilityGroupResourcePropertiesReplicasPtrInput` via:
//
//	        SqlServerAvailabilityGroupResourcePropertiesReplicasArgs{...}
//
//	or:
//
//	        nil
type SqlServerAvailabilityGroupResourcePropertiesReplicasPtrInput interface {
	pulumi.Input

	ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput
	ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput
}

type sqlServerAvailabilityGroupResourcePropertiesReplicasPtrType SqlServerAvailabilityGroupResourcePropertiesReplicasArgs

func SqlServerAvailabilityGroupResourcePropertiesReplicasPtr(v *SqlServerAvailabilityGroupResourcePropertiesReplicasArgs) SqlServerAvailabilityGroupResourcePropertiesReplicasPtrInput {
	return (*sqlServerAvailabilityGroupResourcePropertiesReplicasPtrType)(v)
}

func (*sqlServerAvailabilityGroupResourcePropertiesReplicasPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerAvailabilityGroupResourcePropertiesReplicas)(nil)).Elem()
}

func (i *sqlServerAvailabilityGroupResourcePropertiesReplicasPtrType) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return i.ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(context.Background())
}

func (i *sqlServerAvailabilityGroupResourcePropertiesReplicasPtrType) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput)
}

// A list of Availability Group Replicas.
type SqlServerAvailabilityGroupResourcePropertiesReplicasOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesReplicasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesReplicas)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasOutput) ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasOutput) ToSqlServerAvailabilityGroupResourcePropertiesReplicasOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasOutput) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return o.ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(context.Background())
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasOutput) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlServerAvailabilityGroupResourcePropertiesReplicas) *SqlServerAvailabilityGroupResourcePropertiesReplicas {
		return &v
	}).(SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput)
}

// Array of Availability Group Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesReplicasOutput) Value() SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesReplicas) []SqlAvailabilityGroupReplicaResourceProperties {
		return v.Value
	}).(SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput)
}

type SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerAvailabilityGroupResourcePropertiesReplicas)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput() SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput) Elem() SqlServerAvailabilityGroupResourcePropertiesReplicasOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesReplicas) SqlServerAvailabilityGroupResourcePropertiesReplicas {
		if v != nil {
			return *v
		}
		var ret SqlServerAvailabilityGroupResourcePropertiesReplicas
		return ret
	}).(SqlServerAvailabilityGroupResourcePropertiesReplicasOutput)
}

// Array of Availability Group Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput) Value() SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesReplicas) []SqlAvailabilityGroupReplicaResourceProperties {
		if v == nil {
			return nil
		}
		return v.Value
	}).(SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput)
}

// The properties of Arc Sql Server availability group resource
type SqlServerAvailabilityGroupResourcePropertiesResponse struct {
	// ID GUID of the availability group.
	AvailabilityGroupId string `pulumi:"availabilityGroupId"`
	// Timestamp for when the data was collected from the client machine.
	CollectionTimestamp string `pulumi:"collectionTimestamp"`
	// A list of Availability Group Database Replicas.
	Databases *SqlServerAvailabilityGroupResourcePropertiesResponseDatabases `pulumi:"databases"`
	// Availability Group Info
	Info *AvailabilityGroupInfoResponse `pulumi:"info"`
	// the SQL Server Instance name.
	InstanceName string `pulumi:"instanceName"`
	// The provisioning state of the Arc-enabled SQL Server availability group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A list of Availability Group Replicas.
	Replicas *SqlServerAvailabilityGroupResourcePropertiesResponseReplicas `pulumi:"replicas"`
	// the SQL server name.
	ServerName string `pulumi:"serverName"`
	// The unique ID of the hybrid machine that this resource belongs to.
	VmId string `pulumi:"vmId"`
}

// The properties of Arc Sql Server availability group resource
type SqlServerAvailabilityGroupResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesResponse)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseOutput() SqlServerAvailabilityGroupResourcePropertiesResponseOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesResponseOutput {
	return o
}

// ID GUID of the availability group.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) AvailabilityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) string { return v.AvailabilityGroupId }).(pulumi.StringOutput)
}

// Timestamp for when the data was collected from the client machine.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) CollectionTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) string { return v.CollectionTimestamp }).(pulumi.StringOutput)
}

// A list of Availability Group Database Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) Databases() SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) *SqlServerAvailabilityGroupResourcePropertiesResponseDatabases {
		return v.Databases
	}).(SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput)
}

// Availability Group Info
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) Info() AvailabilityGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) *AvailabilityGroupInfoResponse {
		return v.Info
	}).(AvailabilityGroupInfoResponsePtrOutput)
}

// the SQL Server Instance name.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The provisioning state of the Arc-enabled SQL Server availability group resource.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A list of Availability Group Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) Replicas() SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) *SqlServerAvailabilityGroupResourcePropertiesResponseReplicas {
		return v.Replicas
	}).(SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput)
}

// the SQL server name.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// The unique ID of the hybrid machine that this resource belongs to.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponse) string { return v.VmId }).(pulumi.StringOutput)
}

// A list of Availability Group Database Replicas.
type SqlServerAvailabilityGroupResourcePropertiesResponseDatabases struct {
	// Link to retrieve next page of results.
	NextLink string `pulumi:"nextLink"`
	// Array of Availability Group Database Replicas.
	Value []SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse `pulumi:"value"`
}

// A list of Availability Group Database Replicas.
type SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesResponseDatabases)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput() SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput {
	return o
}

// Link to retrieve next page of results.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponseDatabases) string { return v.NextLink }).(pulumi.StringOutput)
}

// Array of Availability Group Database Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput) Value() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponseDatabases) []SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse {
		return v.Value
	}).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput)
}

type SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerAvailabilityGroupResourcePropertiesResponseDatabases)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput() SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput) Elem() SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesResponseDatabases) SqlServerAvailabilityGroupResourcePropertiesResponseDatabases {
		if v != nil {
			return *v
		}
		var ret SqlServerAvailabilityGroupResourcePropertiesResponseDatabases
		return ret
	}).(SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput)
}

// Link to retrieve next page of results.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesResponseDatabases) *string {
		if v == nil {
			return nil
		}
		return &v.NextLink
	}).(pulumi.StringPtrOutput)
}

// Array of Availability Group Database Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput) Value() SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesResponseDatabases) []SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Value
	}).(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput)
}

// A list of Availability Group Replicas.
type SqlServerAvailabilityGroupResourcePropertiesResponseReplicas struct {
	// Link to retrieve next page of results.
	NextLink string `pulumi:"nextLink"`
	// Array of Availability Group Replicas.
	Value []SqlAvailabilityGroupReplicaResourcePropertiesResponse `pulumi:"value"`
}

// A list of Availability Group Replicas.
type SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerAvailabilityGroupResourcePropertiesResponseReplicas)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput() SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput {
	return o
}

// Link to retrieve next page of results.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponseReplicas) string { return v.NextLink }).(pulumi.StringOutput)
}

// Array of Availability Group Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput) Value() SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput {
	return o.ApplyT(func(v SqlServerAvailabilityGroupResourcePropertiesResponseReplicas) []SqlAvailabilityGroupReplicaResourcePropertiesResponse {
		return v.Value
	}).(SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput)
}

type SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput struct{ *pulumi.OutputState }

func (SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerAvailabilityGroupResourcePropertiesResponseReplicas)(nil)).Elem()
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput() SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput) ToSqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutputWithContext(ctx context.Context) SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput {
	return o
}

func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput) Elem() SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesResponseReplicas) SqlServerAvailabilityGroupResourcePropertiesResponseReplicas {
		if v != nil {
			return *v
		}
		var ret SqlServerAvailabilityGroupResourcePropertiesResponseReplicas
		return ret
	}).(SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput)
}

// Link to retrieve next page of results.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesResponseReplicas) *string {
		if v == nil {
			return nil
		}
		return &v.NextLink
	}).(pulumi.StringPtrOutput)
}

// Array of Availability Group Replicas.
func (o SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput) Value() SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *SqlServerAvailabilityGroupResourcePropertiesResponseReplicas) []SqlAvailabilityGroupReplicaResourcePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Value
	}).(SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput)
}

// The properties of Arc Sql Server database resource
type SqlServerDatabaseResourceProperties struct {
	BackupInformation *SqlServerDatabaseResourcePropertiesBackupInformation `pulumi:"backupInformation"`
	// The backup profile for the SQL server.
	BackupPolicy *BackupPolicy `pulumi:"backupPolicy"`
	// Collation of the database.
	CollationName *string `pulumi:"collationName"`
	// Compatibility level of the database
	CompatibilityLevel *int `pulumi:"compatibilityLevel"`
	// Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.
	CreateMode *string `pulumi:"createMode"`
	// Total size in MB for the data (mdf and ndf) files for this database.
	DataFileSizeMB *float64 `pulumi:"dataFileSizeMB"`
	// Creation date of the database.
	DatabaseCreationDate *string `pulumi:"databaseCreationDate"`
	// List of features that are enabled for the database
	DatabaseOptions *SqlServerDatabaseResourcePropertiesDatabaseOptions `pulumi:"databaseOptions"`
	// Whether the database is read only or not.
	IsReadOnly *bool `pulumi:"isReadOnly"`
	// Total size in MB for the log (ldf) files for this database.
	LogFileSizeMB *float64 `pulumi:"logFileSizeMB"`
	// Status of the database.
	RecoveryMode *string `pulumi:"recoveryMode"`
	// Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
	RestorePointInTime *string `pulumi:"restorePointInTime"`
	// Size of the database.
	SizeMB *float64 `pulumi:"sizeMB"`
	// The name of the source database associated with create operation of this database.
	SourceDatabaseId *string `pulumi:"sourceDatabaseId"`
	// Space left of the database.
	SpaceAvailableMB *float64 `pulumi:"spaceAvailableMB"`
	// State of the database.
	State *string `pulumi:"state"`
}

// SqlServerDatabaseResourcePropertiesInput is an input type that accepts SqlServerDatabaseResourcePropertiesArgs and SqlServerDatabaseResourcePropertiesOutput values.
// You can construct a concrete instance of `SqlServerDatabaseResourcePropertiesInput` via:
//
//	SqlServerDatabaseResourcePropertiesArgs{...}
type SqlServerDatabaseResourcePropertiesInput interface {
	pulumi.Input

	ToSqlServerDatabaseResourcePropertiesOutput() SqlServerDatabaseResourcePropertiesOutput
	ToSqlServerDatabaseResourcePropertiesOutputWithContext(context.Context) SqlServerDatabaseResourcePropertiesOutput
}

// The properties of Arc Sql Server database resource
type SqlServerDatabaseResourcePropertiesArgs struct {
	BackupInformation SqlServerDatabaseResourcePropertiesBackupInformationPtrInput `pulumi:"backupInformation"`
	// The backup profile for the SQL server.
	BackupPolicy BackupPolicyPtrInput `pulumi:"backupPolicy"`
	// Collation of the database.
	CollationName pulumi.StringPtrInput `pulumi:"collationName"`
	// Compatibility level of the database
	CompatibilityLevel pulumi.IntPtrInput `pulumi:"compatibilityLevel"`
	// Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Total size in MB for the data (mdf and ndf) files for this database.
	DataFileSizeMB pulumi.Float64PtrInput `pulumi:"dataFileSizeMB"`
	// Creation date of the database.
	DatabaseCreationDate pulumi.StringPtrInput `pulumi:"databaseCreationDate"`
	// List of features that are enabled for the database
	DatabaseOptions SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrInput `pulumi:"databaseOptions"`
	// Whether the database is read only or not.
	IsReadOnly pulumi.BoolPtrInput `pulumi:"isReadOnly"`
	// Total size in MB for the log (ldf) files for this database.
	LogFileSizeMB pulumi.Float64PtrInput `pulumi:"logFileSizeMB"`
	// Status of the database.
	RecoveryMode pulumi.StringPtrInput `pulumi:"recoveryMode"`
	// Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
	RestorePointInTime pulumi.StringPtrInput `pulumi:"restorePointInTime"`
	// Size of the database.
	SizeMB pulumi.Float64PtrInput `pulumi:"sizeMB"`
	// The name of the source database associated with create operation of this database.
	SourceDatabaseId pulumi.StringPtrInput `pulumi:"sourceDatabaseId"`
	// Space left of the database.
	SpaceAvailableMB pulumi.Float64PtrInput `pulumi:"spaceAvailableMB"`
	// State of the database.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SqlServerDatabaseResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourceProperties)(nil)).Elem()
}

func (i SqlServerDatabaseResourcePropertiesArgs) ToSqlServerDatabaseResourcePropertiesOutput() SqlServerDatabaseResourcePropertiesOutput {
	return i.ToSqlServerDatabaseResourcePropertiesOutputWithContext(context.Background())
}

func (i SqlServerDatabaseResourcePropertiesArgs) ToSqlServerDatabaseResourcePropertiesOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesOutput)
}

// The properties of Arc Sql Server database resource
type SqlServerDatabaseResourcePropertiesOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourceProperties)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesOutput) ToSqlServerDatabaseResourcePropertiesOutput() SqlServerDatabaseResourcePropertiesOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesOutput) ToSqlServerDatabaseResourcePropertiesOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesOutput) BackupInformation() SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *SqlServerDatabaseResourcePropertiesBackupInformation {
		return v.BackupInformation
	}).(SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput)
}

// The backup profile for the SQL server.
func (o SqlServerDatabaseResourcePropertiesOutput) BackupPolicy() BackupPolicyPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *BackupPolicy { return v.BackupPolicy }).(BackupPolicyPtrOutput)
}

// Collation of the database.
func (o SqlServerDatabaseResourcePropertiesOutput) CollationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.CollationName }).(pulumi.StringPtrOutput)
}

// Compatibility level of the database
func (o SqlServerDatabaseResourcePropertiesOutput) CompatibilityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *int { return v.CompatibilityLevel }).(pulumi.IntPtrOutput)
}

// Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.
func (o SqlServerDatabaseResourcePropertiesOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Total size in MB for the data (mdf and ndf) files for this database.
func (o SqlServerDatabaseResourcePropertiesOutput) DataFileSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *float64 { return v.DataFileSizeMB }).(pulumi.Float64PtrOutput)
}

// Creation date of the database.
func (o SqlServerDatabaseResourcePropertiesOutput) DatabaseCreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.DatabaseCreationDate }).(pulumi.StringPtrOutput)
}

// List of features that are enabled for the database
func (o SqlServerDatabaseResourcePropertiesOutput) DatabaseOptions() SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *SqlServerDatabaseResourcePropertiesDatabaseOptions {
		return v.DatabaseOptions
	}).(SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput)
}

// Whether the database is read only or not.
func (o SqlServerDatabaseResourcePropertiesOutput) IsReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *bool { return v.IsReadOnly }).(pulumi.BoolPtrOutput)
}

// Total size in MB for the log (ldf) files for this database.
func (o SqlServerDatabaseResourcePropertiesOutput) LogFileSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *float64 { return v.LogFileSizeMB }).(pulumi.Float64PtrOutput)
}

// Status of the database.
func (o SqlServerDatabaseResourcePropertiesOutput) RecoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.RecoveryMode }).(pulumi.StringPtrOutput)
}

// Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
func (o SqlServerDatabaseResourcePropertiesOutput) RestorePointInTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.RestorePointInTime }).(pulumi.StringPtrOutput)
}

// Size of the database.
func (o SqlServerDatabaseResourcePropertiesOutput) SizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *float64 { return v.SizeMB }).(pulumi.Float64PtrOutput)
}

// The name of the source database associated with create operation of this database.
func (o SqlServerDatabaseResourcePropertiesOutput) SourceDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.SourceDatabaseId }).(pulumi.StringPtrOutput)
}

// Space left of the database.
func (o SqlServerDatabaseResourcePropertiesOutput) SpaceAvailableMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *float64 { return v.SpaceAvailableMB }).(pulumi.Float64PtrOutput)
}

// State of the database.
func (o SqlServerDatabaseResourcePropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourceProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SqlServerDatabaseResourcePropertiesBackupInformation struct {
	// Date time of last full backup.
	LastFullBackup *string `pulumi:"lastFullBackup"`
	// Date time of last log backup.
	LastLogBackup *string `pulumi:"lastLogBackup"`
}

// SqlServerDatabaseResourcePropertiesBackupInformationInput is an input type that accepts SqlServerDatabaseResourcePropertiesBackupInformationArgs and SqlServerDatabaseResourcePropertiesBackupInformationOutput values.
// You can construct a concrete instance of `SqlServerDatabaseResourcePropertiesBackupInformationInput` via:
//
//	SqlServerDatabaseResourcePropertiesBackupInformationArgs{...}
type SqlServerDatabaseResourcePropertiesBackupInformationInput interface {
	pulumi.Input

	ToSqlServerDatabaseResourcePropertiesBackupInformationOutput() SqlServerDatabaseResourcePropertiesBackupInformationOutput
	ToSqlServerDatabaseResourcePropertiesBackupInformationOutputWithContext(context.Context) SqlServerDatabaseResourcePropertiesBackupInformationOutput
}

type SqlServerDatabaseResourcePropertiesBackupInformationArgs struct {
	// Date time of last full backup.
	LastFullBackup pulumi.StringPtrInput `pulumi:"lastFullBackup"`
	// Date time of last log backup.
	LastLogBackup pulumi.StringPtrInput `pulumi:"lastLogBackup"`
}

func (SqlServerDatabaseResourcePropertiesBackupInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesBackupInformation)(nil)).Elem()
}

func (i SqlServerDatabaseResourcePropertiesBackupInformationArgs) ToSqlServerDatabaseResourcePropertiesBackupInformationOutput() SqlServerDatabaseResourcePropertiesBackupInformationOutput {
	return i.ToSqlServerDatabaseResourcePropertiesBackupInformationOutputWithContext(context.Background())
}

func (i SqlServerDatabaseResourcePropertiesBackupInformationArgs) ToSqlServerDatabaseResourcePropertiesBackupInformationOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesBackupInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesBackupInformationOutput)
}

func (i SqlServerDatabaseResourcePropertiesBackupInformationArgs) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutput() SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return i.ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(context.Background())
}

func (i SqlServerDatabaseResourcePropertiesBackupInformationArgs) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesBackupInformationOutput).ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(ctx)
}

// SqlServerDatabaseResourcePropertiesBackupInformationPtrInput is an input type that accepts SqlServerDatabaseResourcePropertiesBackupInformationArgs, SqlServerDatabaseResourcePropertiesBackupInformationPtr and SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput values.
// You can construct a concrete instance of `SqlServerDatabaseResourcePropertiesBackupInformationPtrInput` via:
//
//	        SqlServerDatabaseResourcePropertiesBackupInformationArgs{...}
//
//	or:
//
//	        nil
type SqlServerDatabaseResourcePropertiesBackupInformationPtrInput interface {
	pulumi.Input

	ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutput() SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput
	ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(context.Context) SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput
}

type sqlServerDatabaseResourcePropertiesBackupInformationPtrType SqlServerDatabaseResourcePropertiesBackupInformationArgs

func SqlServerDatabaseResourcePropertiesBackupInformationPtr(v *SqlServerDatabaseResourcePropertiesBackupInformationArgs) SqlServerDatabaseResourcePropertiesBackupInformationPtrInput {
	return (*sqlServerDatabaseResourcePropertiesBackupInformationPtrType)(v)
}

func (*sqlServerDatabaseResourcePropertiesBackupInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerDatabaseResourcePropertiesBackupInformation)(nil)).Elem()
}

func (i *sqlServerDatabaseResourcePropertiesBackupInformationPtrType) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutput() SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return i.ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(context.Background())
}

func (i *sqlServerDatabaseResourcePropertiesBackupInformationPtrType) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput)
}

type SqlServerDatabaseResourcePropertiesBackupInformationOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesBackupInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesBackupInformation)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationOutput) ToSqlServerDatabaseResourcePropertiesBackupInformationOutput() SqlServerDatabaseResourcePropertiesBackupInformationOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationOutput) ToSqlServerDatabaseResourcePropertiesBackupInformationOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesBackupInformationOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationOutput) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutput() SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return o.ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(context.Background())
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationOutput) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlServerDatabaseResourcePropertiesBackupInformation) *SqlServerDatabaseResourcePropertiesBackupInformation {
		return &v
	}).(SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput)
}

// Date time of last full backup.
func (o SqlServerDatabaseResourcePropertiesBackupInformationOutput) LastFullBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesBackupInformation) *string { return v.LastFullBackup }).(pulumi.StringPtrOutput)
}

// Date time of last log backup.
func (o SqlServerDatabaseResourcePropertiesBackupInformationOutput) LastLogBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesBackupInformation) *string { return v.LastLogBackup }).(pulumi.StringPtrOutput)
}

type SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerDatabaseResourcePropertiesBackupInformation)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutput() SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput) ToSqlServerDatabaseResourcePropertiesBackupInformationPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput) Elem() SqlServerDatabaseResourcePropertiesBackupInformationOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesBackupInformation) SqlServerDatabaseResourcePropertiesBackupInformation {
		if v != nil {
			return *v
		}
		var ret SqlServerDatabaseResourcePropertiesBackupInformation
		return ret
	}).(SqlServerDatabaseResourcePropertiesBackupInformationOutput)
}

// Date time of last full backup.
func (o SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput) LastFullBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesBackupInformation) *string {
		if v == nil {
			return nil
		}
		return v.LastFullBackup
	}).(pulumi.StringPtrOutput)
}

// Date time of last log backup.
func (o SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput) LastLogBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesBackupInformation) *string {
		if v == nil {
			return nil
		}
		return v.LastLogBackup
	}).(pulumi.StringPtrOutput)
}

// List of features that are enabled for the database
type SqlServerDatabaseResourcePropertiesDatabaseOptions struct {
	IsAutoCloseOn               *bool `pulumi:"isAutoCloseOn"`
	IsAutoCreateStatsOn         *bool `pulumi:"isAutoCreateStatsOn"`
	IsAutoShrinkOn              *bool `pulumi:"isAutoShrinkOn"`
	IsAutoUpdateStatsOn         *bool `pulumi:"isAutoUpdateStatsOn"`
	IsEncrypted                 *bool `pulumi:"isEncrypted"`
	IsMemoryOptimizationEnabled *bool `pulumi:"isMemoryOptimizationEnabled"`
	IsRemoteDataArchiveEnabled  *bool `pulumi:"isRemoteDataArchiveEnabled"`
	IsTrustworthyOn             *bool `pulumi:"isTrustworthyOn"`
}

// SqlServerDatabaseResourcePropertiesDatabaseOptionsInput is an input type that accepts SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs and SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput values.
// You can construct a concrete instance of `SqlServerDatabaseResourcePropertiesDatabaseOptionsInput` via:
//
//	SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs{...}
type SqlServerDatabaseResourcePropertiesDatabaseOptionsInput interface {
	pulumi.Input

	ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput
	ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutputWithContext(context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput
}

// List of features that are enabled for the database
type SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs struct {
	IsAutoCloseOn               pulumi.BoolPtrInput `pulumi:"isAutoCloseOn"`
	IsAutoCreateStatsOn         pulumi.BoolPtrInput `pulumi:"isAutoCreateStatsOn"`
	IsAutoShrinkOn              pulumi.BoolPtrInput `pulumi:"isAutoShrinkOn"`
	IsAutoUpdateStatsOn         pulumi.BoolPtrInput `pulumi:"isAutoUpdateStatsOn"`
	IsEncrypted                 pulumi.BoolPtrInput `pulumi:"isEncrypted"`
	IsMemoryOptimizationEnabled pulumi.BoolPtrInput `pulumi:"isMemoryOptimizationEnabled"`
	IsRemoteDataArchiveEnabled  pulumi.BoolPtrInput `pulumi:"isRemoteDataArchiveEnabled"`
	IsTrustworthyOn             pulumi.BoolPtrInput `pulumi:"isTrustworthyOn"`
}

func (SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesDatabaseOptions)(nil)).Elem()
}

func (i SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput {
	return i.ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutputWithContext(context.Background())
}

func (i SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput)
}

func (i SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return i.ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(context.Background())
}

func (i SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput).ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(ctx)
}

// SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrInput is an input type that accepts SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs, SqlServerDatabaseResourcePropertiesDatabaseOptionsPtr and SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput values.
// You can construct a concrete instance of `SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrInput` via:
//
//	        SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs{...}
//
//	or:
//
//	        nil
type SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrInput interface {
	pulumi.Input

	ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput
	ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput
}

type sqlServerDatabaseResourcePropertiesDatabaseOptionsPtrType SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs

func SqlServerDatabaseResourcePropertiesDatabaseOptionsPtr(v *SqlServerDatabaseResourcePropertiesDatabaseOptionsArgs) SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrInput {
	return (*sqlServerDatabaseResourcePropertiesDatabaseOptionsPtrType)(v)
}

func (*sqlServerDatabaseResourcePropertiesDatabaseOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerDatabaseResourcePropertiesDatabaseOptions)(nil)).Elem()
}

func (i *sqlServerDatabaseResourcePropertiesDatabaseOptionsPtrType) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return i.ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(context.Background())
}

func (i *sqlServerDatabaseResourcePropertiesDatabaseOptionsPtrType) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput)
}

// List of features that are enabled for the database
type SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesDatabaseOptions)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return o.ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(context.Background())
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlServerDatabaseResourcePropertiesDatabaseOptions) *SqlServerDatabaseResourcePropertiesDatabaseOptions {
		return &v
	}).(SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsAutoCloseOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsAutoCloseOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsAutoCreateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsAutoCreateStatsOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsAutoShrinkOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsAutoShrinkOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsAutoUpdateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsAutoUpdateStatsOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsEncrypted }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsMemoryOptimizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsMemoryOptimizationEnabled }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsRemoteDataArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsRemoteDataArchiveEnabled }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput) IsTrustworthyOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool { return v.IsTrustworthyOn }).(pulumi.BoolPtrOutput)
}

type SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerDatabaseResourcePropertiesDatabaseOptions)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput() SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) ToSqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) Elem() SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) SqlServerDatabaseResourcePropertiesDatabaseOptions {
		if v != nil {
			return *v
		}
		var ret SqlServerDatabaseResourcePropertiesDatabaseOptions
		return ret
	}).(SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsAutoCloseOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoCloseOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsAutoCreateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoCreateStatsOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsAutoShrinkOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoShrinkOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsAutoUpdateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoUpdateStatsOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsEncrypted
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsMemoryOptimizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsMemoryOptimizationEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsRemoteDataArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsRemoteDataArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput) IsTrustworthyOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsTrustworthyOn
	}).(pulumi.BoolPtrOutput)
}

// The properties of Arc Sql Server database resource
type SqlServerDatabaseResourcePropertiesResponse struct {
	BackupInformation *SqlServerDatabaseResourcePropertiesResponseBackupInformation `pulumi:"backupInformation"`
	// The backup profile for the SQL server.
	BackupPolicy *BackupPolicyResponse `pulumi:"backupPolicy"`
	// Collation of the database.
	CollationName *string `pulumi:"collationName"`
	// Compatibility level of the database
	CompatibilityLevel *int `pulumi:"compatibilityLevel"`
	// Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.
	CreateMode *string `pulumi:"createMode"`
	// Total size in MB for the data (mdf and ndf) files for this database.
	DataFileSizeMB *float64 `pulumi:"dataFileSizeMB"`
	// Creation date of the database.
	DatabaseCreationDate *string `pulumi:"databaseCreationDate"`
	// List of features that are enabled for the database
	DatabaseOptions *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions `pulumi:"databaseOptions"`
	// This records the earliest start date and time that restore is available for this database (ISO8601 format).
	EarliestRestoreDate string `pulumi:"earliestRestoreDate"`
	// Whether the database is read only or not.
	IsReadOnly *bool `pulumi:"isReadOnly"`
	// The time when last successful database upload was performed.
	LastDatabaseUploadTime string `pulumi:"lastDatabaseUploadTime"`
	// Total size in MB for the log (ldf) files for this database.
	LogFileSizeMB *float64 `pulumi:"logFileSizeMB"`
	// Migration related configuration.
	Migration *DataBaseMigrationResponse `pulumi:"migration"`
	// The provisioning state of the Arc-enabled SQL Server database resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Status of the database.
	RecoveryMode *string `pulumi:"recoveryMode"`
	// Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
	RestorePointInTime *string `pulumi:"restorePointInTime"`
	// Size of the database.
	SizeMB *float64 `pulumi:"sizeMB"`
	// The name of the source database associated with create operation of this database.
	SourceDatabaseId *string `pulumi:"sourceDatabaseId"`
	// Space left of the database.
	SpaceAvailableMB *float64 `pulumi:"spaceAvailableMB"`
	// State of the database.
	State *string `pulumi:"state"`
	// The unique ID of the hybrid machine that this resource belongs to.
	VmId string `pulumi:"vmId"`
}

// The properties of Arc Sql Server database resource
type SqlServerDatabaseResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesResponse)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesResponseOutput) ToSqlServerDatabaseResourcePropertiesResponseOutput() SqlServerDatabaseResourcePropertiesResponseOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseOutput) ToSqlServerDatabaseResourcePropertiesResponseOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesResponseOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseOutput) BackupInformation() SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *SqlServerDatabaseResourcePropertiesResponseBackupInformation {
		return v.BackupInformation
	}).(SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput)
}

// The backup profile for the SQL server.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) BackupPolicy() BackupPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *BackupPolicyResponse { return v.BackupPolicy }).(BackupPolicyResponsePtrOutput)
}

// Collation of the database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) CollationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.CollationName }).(pulumi.StringPtrOutput)
}

// Compatibility level of the database
func (o SqlServerDatabaseResourcePropertiesResponseOutput) CompatibilityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *int { return v.CompatibilityLevel }).(pulumi.IntPtrOutput)
}

// Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Total size in MB for the data (mdf and ndf) files for this database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) DataFileSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *float64 { return v.DataFileSizeMB }).(pulumi.Float64PtrOutput)
}

// Creation date of the database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) DatabaseCreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.DatabaseCreationDate }).(pulumi.StringPtrOutput)
}

// List of features that are enabled for the database
func (o SqlServerDatabaseResourcePropertiesResponseOutput) DatabaseOptions() SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions {
		return v.DatabaseOptions
	}).(SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput)
}

// This records the earliest start date and time that restore is available for this database (ISO8601 format).
func (o SqlServerDatabaseResourcePropertiesResponseOutput) EarliestRestoreDate() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) string { return v.EarliestRestoreDate }).(pulumi.StringOutput)
}

// Whether the database is read only or not.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) IsReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *bool { return v.IsReadOnly }).(pulumi.BoolPtrOutput)
}

// The time when last successful database upload was performed.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) LastDatabaseUploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) string { return v.LastDatabaseUploadTime }).(pulumi.StringOutput)
}

// Total size in MB for the log (ldf) files for this database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) LogFileSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *float64 { return v.LogFileSizeMB }).(pulumi.Float64PtrOutput)
}

// Migration related configuration.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) Migration() DataBaseMigrationResponsePtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *DataBaseMigrationResponse { return v.Migration }).(DataBaseMigrationResponsePtrOutput)
}

// The provisioning state of the Arc-enabled SQL Server database resource.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Status of the database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) RecoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.RecoveryMode }).(pulumi.StringPtrOutput)
}

// Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) RestorePointInTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.RestorePointInTime }).(pulumi.StringPtrOutput)
}

// Size of the database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) SizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *float64 { return v.SizeMB }).(pulumi.Float64PtrOutput)
}

// The name of the source database associated with create operation of this database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) SourceDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.SourceDatabaseId }).(pulumi.StringPtrOutput)
}

// Space left of the database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) SpaceAvailableMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *float64 { return v.SpaceAvailableMB }).(pulumi.Float64PtrOutput)
}

// State of the database.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The unique ID of the hybrid machine that this resource belongs to.
func (o SqlServerDatabaseResourcePropertiesResponseOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponse) string { return v.VmId }).(pulumi.StringOutput)
}

type SqlServerDatabaseResourcePropertiesResponseBackupInformation struct {
	// Date time of last full backup.
	LastFullBackup *string `pulumi:"lastFullBackup"`
	// Date time of last log backup.
	LastLogBackup *string `pulumi:"lastLogBackup"`
}

type SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesResponseBackupInformation)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput) ToSqlServerDatabaseResourcePropertiesResponseBackupInformationOutput() SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput) ToSqlServerDatabaseResourcePropertiesResponseBackupInformationOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput {
	return o
}

// Date time of last full backup.
func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput) LastFullBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseBackupInformation) *string { return v.LastFullBackup }).(pulumi.StringPtrOutput)
}

// Date time of last log backup.
func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput) LastLogBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseBackupInformation) *string { return v.LastLogBackup }).(pulumi.StringPtrOutput)
}

type SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerDatabaseResourcePropertiesResponseBackupInformation)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput) ToSqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput() SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput) ToSqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput) Elem() SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseBackupInformation) SqlServerDatabaseResourcePropertiesResponseBackupInformation {
		if v != nil {
			return *v
		}
		var ret SqlServerDatabaseResourcePropertiesResponseBackupInformation
		return ret
	}).(SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput)
}

// Date time of last full backup.
func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput) LastFullBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseBackupInformation) *string {
		if v == nil {
			return nil
		}
		return v.LastFullBackup
	}).(pulumi.StringPtrOutput)
}

// Date time of last log backup.
func (o SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput) LastLogBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseBackupInformation) *string {
		if v == nil {
			return nil
		}
		return v.LastLogBackup
	}).(pulumi.StringPtrOutput)
}

// List of features that are enabled for the database
type SqlServerDatabaseResourcePropertiesResponseDatabaseOptions struct {
	IsAutoCloseOn               *bool `pulumi:"isAutoCloseOn"`
	IsAutoCreateStatsOn         *bool `pulumi:"isAutoCreateStatsOn"`
	IsAutoShrinkOn              *bool `pulumi:"isAutoShrinkOn"`
	IsAutoUpdateStatsOn         *bool `pulumi:"isAutoUpdateStatsOn"`
	IsEncrypted                 *bool `pulumi:"isEncrypted"`
	IsMemoryOptimizationEnabled *bool `pulumi:"isMemoryOptimizationEnabled"`
	IsRemoteDataArchiveEnabled  *bool `pulumi:"isRemoteDataArchiveEnabled"`
	IsTrustworthyOn             *bool `pulumi:"isTrustworthyOn"`
}

// List of features that are enabled for the database
type SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerDatabaseResourcePropertiesResponseDatabaseOptions)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) ToSqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput() SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) ToSqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsAutoCloseOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool { return v.IsAutoCloseOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsAutoCreateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool { return v.IsAutoCreateStatsOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsAutoShrinkOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool { return v.IsAutoShrinkOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsAutoUpdateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool { return v.IsAutoUpdateStatsOn }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool { return v.IsEncrypted }).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsMemoryOptimizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		return v.IsMemoryOptimizationEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsRemoteDataArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		return v.IsRemoteDataArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput) IsTrustworthyOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool { return v.IsTrustworthyOn }).(pulumi.BoolPtrOutput)
}

type SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput struct{ *pulumi.OutputState }

func (SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerDatabaseResourcePropertiesResponseDatabaseOptions)(nil)).Elem()
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) ToSqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput() SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) ToSqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutputWithContext(ctx context.Context) SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput {
	return o
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) Elem() SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) SqlServerDatabaseResourcePropertiesResponseDatabaseOptions {
		if v != nil {
			return *v
		}
		var ret SqlServerDatabaseResourcePropertiesResponseDatabaseOptions
		return ret
	}).(SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsAutoCloseOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoCloseOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsAutoCreateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoCreateStatsOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsAutoShrinkOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoShrinkOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsAutoUpdateStatsOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoUpdateStatsOn
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsEncrypted
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsMemoryOptimizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsMemoryOptimizationEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsRemoteDataArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsRemoteDataArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput) IsTrustworthyOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlServerDatabaseResourcePropertiesResponseDatabaseOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsTrustworthyOn
	}).(pulumi.BoolPtrOutput)
}

// Properties of SQL Server ESU license.
type SqlServerEsuLicenseProperties struct {
	// The activation state of the license.
	ActivationState string `pulumi:"activationState"`
	// SQL Server ESU license type.
	BillingPlan string `pulumi:"billingPlan"`
	// The number of total cores of the license covers.
	PhysicalCores int `pulumi:"physicalCores"`
	// The Azure scope to which the license will apply.
	ScopeType string `pulumi:"scopeType"`
	// The SQL Server version the license covers.
	Version string `pulumi:"version"`
}

// SqlServerEsuLicensePropertiesInput is an input type that accepts SqlServerEsuLicensePropertiesArgs and SqlServerEsuLicensePropertiesOutput values.
// You can construct a concrete instance of `SqlServerEsuLicensePropertiesInput` via:
//
//	SqlServerEsuLicensePropertiesArgs{...}
type SqlServerEsuLicensePropertiesInput interface {
	pulumi.Input

	ToSqlServerEsuLicensePropertiesOutput() SqlServerEsuLicensePropertiesOutput
	ToSqlServerEsuLicensePropertiesOutputWithContext(context.Context) SqlServerEsuLicensePropertiesOutput
}

// Properties of SQL Server ESU license.
type SqlServerEsuLicensePropertiesArgs struct {
	// The activation state of the license.
	ActivationState pulumi.StringInput `pulumi:"activationState"`
	// SQL Server ESU license type.
	BillingPlan pulumi.StringInput `pulumi:"billingPlan"`
	// The number of total cores of the license covers.
	PhysicalCores pulumi.IntInput `pulumi:"physicalCores"`
	// The Azure scope to which the license will apply.
	ScopeType pulumi.StringInput `pulumi:"scopeType"`
	// The SQL Server version the license covers.
	Version pulumi.StringInput `pulumi:"version"`
}

func (SqlServerEsuLicensePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerEsuLicenseProperties)(nil)).Elem()
}

func (i SqlServerEsuLicensePropertiesArgs) ToSqlServerEsuLicensePropertiesOutput() SqlServerEsuLicensePropertiesOutput {
	return i.ToSqlServerEsuLicensePropertiesOutputWithContext(context.Background())
}

func (i SqlServerEsuLicensePropertiesArgs) ToSqlServerEsuLicensePropertiesOutputWithContext(ctx context.Context) SqlServerEsuLicensePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerEsuLicensePropertiesOutput)
}

// Properties of SQL Server ESU license.
type SqlServerEsuLicensePropertiesOutput struct{ *pulumi.OutputState }

func (SqlServerEsuLicensePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerEsuLicenseProperties)(nil)).Elem()
}

func (o SqlServerEsuLicensePropertiesOutput) ToSqlServerEsuLicensePropertiesOutput() SqlServerEsuLicensePropertiesOutput {
	return o
}

func (o SqlServerEsuLicensePropertiesOutput) ToSqlServerEsuLicensePropertiesOutputWithContext(ctx context.Context) SqlServerEsuLicensePropertiesOutput {
	return o
}

// The activation state of the license.
func (o SqlServerEsuLicensePropertiesOutput) ActivationState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicenseProperties) string { return v.ActivationState }).(pulumi.StringOutput)
}

// SQL Server ESU license type.
func (o SqlServerEsuLicensePropertiesOutput) BillingPlan() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicenseProperties) string { return v.BillingPlan }).(pulumi.StringOutput)
}

// The number of total cores of the license covers.
func (o SqlServerEsuLicensePropertiesOutput) PhysicalCores() pulumi.IntOutput {
	return o.ApplyT(func(v SqlServerEsuLicenseProperties) int { return v.PhysicalCores }).(pulumi.IntOutput)
}

// The Azure scope to which the license will apply.
func (o SqlServerEsuLicensePropertiesOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicenseProperties) string { return v.ScopeType }).(pulumi.StringOutput)
}

// The SQL Server version the license covers.
func (o SqlServerEsuLicensePropertiesOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicenseProperties) string { return v.Version }).(pulumi.StringOutput)
}

// Properties of SQL Server ESU license.
type SqlServerEsuLicensePropertiesResponse struct {
	// The timestamp of the activation of the SqlServerEsuLicense in ISO 8601 date-time format.
	ActivatedAt string `pulumi:"activatedAt"`
	// The activation state of the license.
	ActivationState string `pulumi:"activationState"`
	// SQL Server ESU license type.
	BillingPlan string `pulumi:"billingPlan"`
	// The number of total cores of the license covers.
	PhysicalCores int `pulumi:"physicalCores"`
	// The Azure scope to which the license will apply.
	ScopeType string `pulumi:"scopeType"`
	// The tenantId the SQL Server ESU license resource subscription resides in.
	TenantId string `pulumi:"tenantId"`
	// The timestamp of the termination of the SqlServerEsuLicense in ISO 8601 date-time format.
	TerminatedAt string `pulumi:"terminatedAt"`
	// The unique ID of this license. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
	UniqueId string `pulumi:"uniqueId"`
	// The SQL Server version the license covers.
	Version string `pulumi:"version"`
}

// Properties of SQL Server ESU license.
type SqlServerEsuLicensePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlServerEsuLicensePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerEsuLicensePropertiesResponse)(nil)).Elem()
}

func (o SqlServerEsuLicensePropertiesResponseOutput) ToSqlServerEsuLicensePropertiesResponseOutput() SqlServerEsuLicensePropertiesResponseOutput {
	return o
}

func (o SqlServerEsuLicensePropertiesResponseOutput) ToSqlServerEsuLicensePropertiesResponseOutputWithContext(ctx context.Context) SqlServerEsuLicensePropertiesResponseOutput {
	return o
}

// The timestamp of the activation of the SqlServerEsuLicense in ISO 8601 date-time format.
func (o SqlServerEsuLicensePropertiesResponseOutput) ActivatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.ActivatedAt }).(pulumi.StringOutput)
}

// The activation state of the license.
func (o SqlServerEsuLicensePropertiesResponseOutput) ActivationState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.ActivationState }).(pulumi.StringOutput)
}

// SQL Server ESU license type.
func (o SqlServerEsuLicensePropertiesResponseOutput) BillingPlan() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.BillingPlan }).(pulumi.StringOutput)
}

// The number of total cores of the license covers.
func (o SqlServerEsuLicensePropertiesResponseOutput) PhysicalCores() pulumi.IntOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) int { return v.PhysicalCores }).(pulumi.IntOutput)
}

// The Azure scope to which the license will apply.
func (o SqlServerEsuLicensePropertiesResponseOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.ScopeType }).(pulumi.StringOutput)
}

// The tenantId the SQL Server ESU license resource subscription resides in.
func (o SqlServerEsuLicensePropertiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The timestamp of the termination of the SqlServerEsuLicense in ISO 8601 date-time format.
func (o SqlServerEsuLicensePropertiesResponseOutput) TerminatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.TerminatedAt }).(pulumi.StringOutput)
}

// The unique ID of this license. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
func (o SqlServerEsuLicensePropertiesResponseOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.UniqueId }).(pulumi.StringOutput)
}

// The SQL Server version the license covers.
func (o SqlServerEsuLicensePropertiesResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerEsuLicensePropertiesResponse) string { return v.Version }).(pulumi.StringOutput)
}

// The status of the job running on the SQL Server instance.
type SqlServerInstanceJobStatusResponse struct {
	// The background job details.
	BackgroundJob *BackgroundJobResponse `pulumi:"backgroundJob"`
	// The unique identifier of the job.
	Id *string `pulumi:"id"`
	// The name of the SQL Server instance.
	InstanceName *string `pulumi:"instanceName"`
	// The exception message if the job failed.
	JobException *string `pulumi:"jobException"`
	// The status of the job.
	JobStatus *string `pulumi:"jobStatus"`
	// The list of sequencer actions.
	SequencerActions []SequencerActionResponse `pulumi:"sequencerActions"`
}

// The status of the job running on the SQL Server instance.
type SqlServerInstanceJobStatusResponseOutput struct{ *pulumi.OutputState }

func (SqlServerInstanceJobStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerInstanceJobStatusResponse)(nil)).Elem()
}

func (o SqlServerInstanceJobStatusResponseOutput) ToSqlServerInstanceJobStatusResponseOutput() SqlServerInstanceJobStatusResponseOutput {
	return o
}

func (o SqlServerInstanceJobStatusResponseOutput) ToSqlServerInstanceJobStatusResponseOutputWithContext(ctx context.Context) SqlServerInstanceJobStatusResponseOutput {
	return o
}

// The background job details.
func (o SqlServerInstanceJobStatusResponseOutput) BackgroundJob() BackgroundJobResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstanceJobStatusResponse) *BackgroundJobResponse { return v.BackgroundJob }).(BackgroundJobResponsePtrOutput)
}

// The unique identifier of the job.
func (o SqlServerInstanceJobStatusResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceJobStatusResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the SQL Server instance.
func (o SqlServerInstanceJobStatusResponseOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceJobStatusResponse) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The exception message if the job failed.
func (o SqlServerInstanceJobStatusResponseOutput) JobException() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceJobStatusResponse) *string { return v.JobException }).(pulumi.StringPtrOutput)
}

// The status of the job.
func (o SqlServerInstanceJobStatusResponseOutput) JobStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceJobStatusResponse) *string { return v.JobStatus }).(pulumi.StringPtrOutput)
}

// The list of sequencer actions.
func (o SqlServerInstanceJobStatusResponseOutput) SequencerActions() SequencerActionResponseArrayOutput {
	return o.ApplyT(func(v SqlServerInstanceJobStatusResponse) []SequencerActionResponse { return v.SequencerActions }).(SequencerActionResponseArrayOutput)
}

type SqlServerInstanceJobStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (SqlServerInstanceJobStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlServerInstanceJobStatusResponse)(nil)).Elem()
}

func (o SqlServerInstanceJobStatusResponseArrayOutput) ToSqlServerInstanceJobStatusResponseArrayOutput() SqlServerInstanceJobStatusResponseArrayOutput {
	return o
}

func (o SqlServerInstanceJobStatusResponseArrayOutput) ToSqlServerInstanceJobStatusResponseArrayOutputWithContext(ctx context.Context) SqlServerInstanceJobStatusResponseArrayOutput {
	return o
}

func (o SqlServerInstanceJobStatusResponseArrayOutput) Index(i pulumi.IntInput) SqlServerInstanceJobStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlServerInstanceJobStatusResponse {
		return vs[0].([]SqlServerInstanceJobStatusResponse)[vs[1].(int)]
	}).(SqlServerInstanceJobStatusResponseOutput)
}

// Properties of SqlServerInstance.
type SqlServerInstanceProperties struct {
	// Authentication related configuration for the SQL Server Instance.
	Authentication *Authentication `pulumi:"authentication"`
	// The backup profile for the SQL server.
	BackupPolicy *BackupPolicy `pulumi:"backupPolicy"`
	// Client connection related configuration.
	ClientConnection *ClientConnection `pulumi:"clientConnection"`
	// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
	Cores *string `pulumi:"cores"`
	// SQL Server edition.
	Edition *string `pulumi:"edition"`
	// Type of host for Azure Arc SQL Server
	HostType *string `pulumi:"hostType"`
	// SQL Server instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Migration related configuration.
	Migration *Migration `pulumi:"migration"`
	// The monitoring configuration.
	Monitoring *Monitoring `pulumi:"monitoring"`
	// Indicates if the resource represents a SQL Server engine or a SQL Server component service installed on the host.
	ServiceType *string `pulumi:"serviceType"`
	// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
	UpgradeLockedUntil *string `pulumi:"upgradeLockedUntil"`
	// SQL Server version.
	Version *string `pulumi:"version"`
}

// SqlServerInstancePropertiesInput is an input type that accepts SqlServerInstancePropertiesArgs and SqlServerInstancePropertiesOutput values.
// You can construct a concrete instance of `SqlServerInstancePropertiesInput` via:
//
//	SqlServerInstancePropertiesArgs{...}
type SqlServerInstancePropertiesInput interface {
	pulumi.Input

	ToSqlServerInstancePropertiesOutput() SqlServerInstancePropertiesOutput
	ToSqlServerInstancePropertiesOutputWithContext(context.Context) SqlServerInstancePropertiesOutput
}

// Properties of SqlServerInstance.
type SqlServerInstancePropertiesArgs struct {
	// Authentication related configuration for the SQL Server Instance.
	Authentication AuthenticationPtrInput `pulumi:"authentication"`
	// The backup profile for the SQL server.
	BackupPolicy BackupPolicyPtrInput `pulumi:"backupPolicy"`
	// Client connection related configuration.
	ClientConnection ClientConnectionPtrInput `pulumi:"clientConnection"`
	// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
	Cores pulumi.StringPtrInput `pulumi:"cores"`
	// SQL Server edition.
	Edition pulumi.StringPtrInput `pulumi:"edition"`
	// Type of host for Azure Arc SQL Server
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// SQL Server instance name.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Migration related configuration.
	Migration MigrationPtrInput `pulumi:"migration"`
	// The monitoring configuration.
	Monitoring MonitoringPtrInput `pulumi:"monitoring"`
	// Indicates if the resource represents a SQL Server engine or a SQL Server component service installed on the host.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
	UpgradeLockedUntil pulumi.StringPtrInput `pulumi:"upgradeLockedUntil"`
	// SQL Server version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SqlServerInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerInstanceProperties)(nil)).Elem()
}

func (i SqlServerInstancePropertiesArgs) ToSqlServerInstancePropertiesOutput() SqlServerInstancePropertiesOutput {
	return i.ToSqlServerInstancePropertiesOutputWithContext(context.Background())
}

func (i SqlServerInstancePropertiesArgs) ToSqlServerInstancePropertiesOutputWithContext(ctx context.Context) SqlServerInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerInstancePropertiesOutput)
}

func (i SqlServerInstancePropertiesArgs) ToSqlServerInstancePropertiesPtrOutput() SqlServerInstancePropertiesPtrOutput {
	return i.ToSqlServerInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i SqlServerInstancePropertiesArgs) ToSqlServerInstancePropertiesPtrOutputWithContext(ctx context.Context) SqlServerInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerInstancePropertiesOutput).ToSqlServerInstancePropertiesPtrOutputWithContext(ctx)
}

// SqlServerInstancePropertiesPtrInput is an input type that accepts SqlServerInstancePropertiesArgs, SqlServerInstancePropertiesPtr and SqlServerInstancePropertiesPtrOutput values.
// You can construct a concrete instance of `SqlServerInstancePropertiesPtrInput` via:
//
//	        SqlServerInstancePropertiesArgs{...}
//
//	or:
//
//	        nil
type SqlServerInstancePropertiesPtrInput interface {
	pulumi.Input

	ToSqlServerInstancePropertiesPtrOutput() SqlServerInstancePropertiesPtrOutput
	ToSqlServerInstancePropertiesPtrOutputWithContext(context.Context) SqlServerInstancePropertiesPtrOutput
}

type sqlServerInstancePropertiesPtrType SqlServerInstancePropertiesArgs

func SqlServerInstancePropertiesPtr(v *SqlServerInstancePropertiesArgs) SqlServerInstancePropertiesPtrInput {
	return (*sqlServerInstancePropertiesPtrType)(v)
}

func (*sqlServerInstancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerInstanceProperties)(nil)).Elem()
}

func (i *sqlServerInstancePropertiesPtrType) ToSqlServerInstancePropertiesPtrOutput() SqlServerInstancePropertiesPtrOutput {
	return i.ToSqlServerInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *sqlServerInstancePropertiesPtrType) ToSqlServerInstancePropertiesPtrOutputWithContext(ctx context.Context) SqlServerInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerInstancePropertiesPtrOutput)
}

// Properties of SqlServerInstance.
type SqlServerInstancePropertiesOutput struct{ *pulumi.OutputState }

func (SqlServerInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerInstanceProperties)(nil)).Elem()
}

func (o SqlServerInstancePropertiesOutput) ToSqlServerInstancePropertiesOutput() SqlServerInstancePropertiesOutput {
	return o
}

func (o SqlServerInstancePropertiesOutput) ToSqlServerInstancePropertiesOutputWithContext(ctx context.Context) SqlServerInstancePropertiesOutput {
	return o
}

func (o SqlServerInstancePropertiesOutput) ToSqlServerInstancePropertiesPtrOutput() SqlServerInstancePropertiesPtrOutput {
	return o.ToSqlServerInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o SqlServerInstancePropertiesOutput) ToSqlServerInstancePropertiesPtrOutputWithContext(ctx context.Context) SqlServerInstancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlServerInstanceProperties) *SqlServerInstanceProperties {
		return &v
	}).(SqlServerInstancePropertiesPtrOutput)
}

// Authentication related configuration for the SQL Server Instance.
func (o SqlServerInstancePropertiesOutput) Authentication() AuthenticationPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *Authentication { return v.Authentication }).(AuthenticationPtrOutput)
}

// The backup profile for the SQL server.
func (o SqlServerInstancePropertiesOutput) BackupPolicy() BackupPolicyPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *BackupPolicy { return v.BackupPolicy }).(BackupPolicyPtrOutput)
}

// Client connection related configuration.
func (o SqlServerInstancePropertiesOutput) ClientConnection() ClientConnectionPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *ClientConnection { return v.ClientConnection }).(ClientConnectionPtrOutput)
}

// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
func (o SqlServerInstancePropertiesOutput) Cores() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.Cores }).(pulumi.StringPtrOutput)
}

// SQL Server edition.
func (o SqlServerInstancePropertiesOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// Type of host for Azure Arc SQL Server
func (o SqlServerInstancePropertiesOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// SQL Server instance name.
func (o SqlServerInstancePropertiesOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Migration related configuration.
func (o SqlServerInstancePropertiesOutput) Migration() MigrationPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *Migration { return v.Migration }).(MigrationPtrOutput)
}

// The monitoring configuration.
func (o SqlServerInstancePropertiesOutput) Monitoring() MonitoringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *Monitoring { return v.Monitoring }).(MonitoringPtrOutput)
}

// Indicates if the resource represents a SQL Server engine or a SQL Server component service installed on the host.
func (o SqlServerInstancePropertiesOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
func (o SqlServerInstancePropertiesOutput) UpgradeLockedUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.UpgradeLockedUntil }).(pulumi.StringPtrOutput)
}

// SQL Server version.
func (o SqlServerInstancePropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SqlServerInstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SqlServerInstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlServerInstanceProperties)(nil)).Elem()
}

func (o SqlServerInstancePropertiesPtrOutput) ToSqlServerInstancePropertiesPtrOutput() SqlServerInstancePropertiesPtrOutput {
	return o
}

func (o SqlServerInstancePropertiesPtrOutput) ToSqlServerInstancePropertiesPtrOutputWithContext(ctx context.Context) SqlServerInstancePropertiesPtrOutput {
	return o
}

func (o SqlServerInstancePropertiesPtrOutput) Elem() SqlServerInstancePropertiesOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) SqlServerInstanceProperties {
		if v != nil {
			return *v
		}
		var ret SqlServerInstanceProperties
		return ret
	}).(SqlServerInstancePropertiesOutput)
}

// Authentication related configuration for the SQL Server Instance.
func (o SqlServerInstancePropertiesPtrOutput) Authentication() AuthenticationPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *Authentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(AuthenticationPtrOutput)
}

// The backup profile for the SQL server.
func (o SqlServerInstancePropertiesPtrOutput) BackupPolicy() BackupPolicyPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *BackupPolicy {
		if v == nil {
			return nil
		}
		return v.BackupPolicy
	}).(BackupPolicyPtrOutput)
}

// Client connection related configuration.
func (o SqlServerInstancePropertiesPtrOutput) ClientConnection() ClientConnectionPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *ClientConnection {
		if v == nil {
			return nil
		}
		return v.ClientConnection
	}).(ClientConnectionPtrOutput)
}

// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
func (o SqlServerInstancePropertiesPtrOutput) Cores() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Cores
	}).(pulumi.StringPtrOutput)
}

// SQL Server edition.
func (o SqlServerInstancePropertiesPtrOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Edition
	}).(pulumi.StringPtrOutput)
}

// Type of host for Azure Arc SQL Server
func (o SqlServerInstancePropertiesPtrOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostType
	}).(pulumi.StringPtrOutput)
}

// SQL Server instance name.
func (o SqlServerInstancePropertiesPtrOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.InstanceName
	}).(pulumi.StringPtrOutput)
}

// Migration related configuration.
func (o SqlServerInstancePropertiesPtrOutput) Migration() MigrationPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *Migration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(MigrationPtrOutput)
}

// The monitoring configuration.
func (o SqlServerInstancePropertiesPtrOutput) Monitoring() MonitoringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *Monitoring {
		if v == nil {
			return nil
		}
		return v.Monitoring
	}).(MonitoringPtrOutput)
}

// Indicates if the resource represents a SQL Server engine or a SQL Server component service installed on the host.
func (o SqlServerInstancePropertiesPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
func (o SqlServerInstancePropertiesPtrOutput) UpgradeLockedUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.UpgradeLockedUntil
	}).(pulumi.StringPtrOutput)
}

// SQL Server version.
func (o SqlServerInstancePropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlServerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties of SqlServerInstance.
type SqlServerInstancePropertiesResponse struct {
	// The role of the SQL Server, based on availability.
	AlwaysOnRole string `pulumi:"alwaysOnRole"`
	// Authentication related configuration for the SQL Server Instance.
	Authentication *AuthenticationResponse `pulumi:"authentication"`
	// Status of Azure Defender.
	AzureDefenderStatus string `pulumi:"azureDefenderStatus"`
	// Timestamp of last Azure Defender status update.
	AzureDefenderStatusLastUpdated string `pulumi:"azureDefenderStatusLastUpdated"`
	// The backup profile for the SQL server.
	BackupPolicy *BackupPolicyResponse `pulumi:"backupPolicy"`
	// Client connection related configuration.
	ClientConnection *ClientConnectionResponse `pulumi:"clientConnection"`
	// SQL Server collation.
	Collation string `pulumi:"collation"`
	// ARM Resource id of the container resource (Azure Arc for Servers).
	ContainerResourceId string `pulumi:"containerResourceId"`
	// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
	Cores *string `pulumi:"cores"`
	// The time when the resource was created.
	CreateTime string `pulumi:"createTime"`
	// SQL Server current version.
	CurrentVersion string `pulumi:"currentVersion"`
	// Database mirroring endpoint related properties.
	DatabaseMirroringEndpoint *DBMEndpointResponse `pulumi:"databaseMirroringEndpoint"`
	// Indicates whether database master key exists in SQL Server.
	DbMasterKeyExists bool `pulumi:"dbMasterKeyExists"`
	// SQL Server edition.
	Edition *string `pulumi:"edition"`
	// Failover Cluster Instance properties.
	FailoverCluster *FailoverClusterResponse `pulumi:"failoverCluster"`
	// Type of host for Azure Arc SQL Server
	HostType *string `pulumi:"hostType"`
	// SQL Server instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Indicates whether DigiCert PKI root-authority certificate (trusted by Azure) exists in SQL Server and trusted for Azure database.windows.net domains.
	IsDigiCertPkiCertTrustConfigured bool `pulumi:"isDigiCertPkiCertTrustConfigured"`
	// Indicates whether always On availability groups is enabled in SQL Server.
	IsHadrEnabled bool `pulumi:"isHadrEnabled"`
	// Indicates whether Microsoft PKI root-authority certificate (trusted by Azure) exists in SQL Server and trusted for Azure database.windows.net domains.
	IsMicrosoftPkiCertTrustConfigured bool `pulumi:"isMicrosoftPkiCertTrustConfigured"`
	// The time when last successful inventory upload was performed.
	LastInventoryUploadTime string `pulumi:"lastInventoryUploadTime"`
	// The time when last successful usage upload was performed.
	LastUsageUploadTime string `pulumi:"lastUsageUploadTime"`
	// SQL Server license type.
	LicenseType string `pulumi:"licenseType"`
	// max server memory (MB) value configured for this instance.
	MaxServerMemoryMB float64 `pulumi:"maxServerMemoryMB"`
	// Migration related configuration.
	Migration *MigrationResponse `pulumi:"migration"`
	// The monitoring configuration.
	Monitoring *MonitoringResponse `pulumi:"monitoring"`
	// SQL Server update level.
	PatchLevel string `pulumi:"patchLevel"`
	// SQL Server product ID.
	ProductId string `pulumi:"productId"`
	// The provisioning state of the Arc-enabled SQL Server resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicates if the resource represents a SQL Server engine or a SQL Server component service installed on the host.
	ServiceType *string `pulumi:"serviceType"`
	// The cloud connectivity status.
	Status string `pulumi:"status"`
	// Dynamic TCP ports used by SQL Server.
	TcpDynamicPorts string `pulumi:"tcpDynamicPorts"`
	// Static TCP ports used by SQL Server.
	TcpStaticPorts string `pulumi:"tcpStaticPorts"`
	// An array of integers, where each value represents the enabled trace flags in SQL Server.
	TraceFlags []int `pulumi:"traceFlags"`
	// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
	UpgradeLockedUntil *string `pulumi:"upgradeLockedUntil"`
	// The number of logical processors used by the SQL Server instance.
	VCore string `pulumi:"vCore"`
	// SQL Server version.
	Version *string `pulumi:"version"`
	// The unique ID of the hybrid machine that this resource belongs to.
	VmId string `pulumi:"vmId"`
}

// Properties of SqlServerInstance.
type SqlServerInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlServerInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerInstancePropertiesResponse)(nil)).Elem()
}

func (o SqlServerInstancePropertiesResponseOutput) ToSqlServerInstancePropertiesResponseOutput() SqlServerInstancePropertiesResponseOutput {
	return o
}

func (o SqlServerInstancePropertiesResponseOutput) ToSqlServerInstancePropertiesResponseOutputWithContext(ctx context.Context) SqlServerInstancePropertiesResponseOutput {
	return o
}

// The role of the SQL Server, based on availability.
func (o SqlServerInstancePropertiesResponseOutput) AlwaysOnRole() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.AlwaysOnRole }).(pulumi.StringOutput)
}

// Authentication related configuration for the SQL Server Instance.
func (o SqlServerInstancePropertiesResponseOutput) Authentication() AuthenticationResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *AuthenticationResponse { return v.Authentication }).(AuthenticationResponsePtrOutput)
}

// Status of Azure Defender.
func (o SqlServerInstancePropertiesResponseOutput) AzureDefenderStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.AzureDefenderStatus }).(pulumi.StringOutput)
}

// Timestamp of last Azure Defender status update.
func (o SqlServerInstancePropertiesResponseOutput) AzureDefenderStatusLastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.AzureDefenderStatusLastUpdated }).(pulumi.StringOutput)
}

// The backup profile for the SQL server.
func (o SqlServerInstancePropertiesResponseOutput) BackupPolicy() BackupPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *BackupPolicyResponse { return v.BackupPolicy }).(BackupPolicyResponsePtrOutput)
}

// Client connection related configuration.
func (o SqlServerInstancePropertiesResponseOutput) ClientConnection() ClientConnectionResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *ClientConnectionResponse { return v.ClientConnection }).(ClientConnectionResponsePtrOutput)
}

// SQL Server collation.
func (o SqlServerInstancePropertiesResponseOutput) Collation() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.Collation }).(pulumi.StringOutput)
}

// ARM Resource id of the container resource (Azure Arc for Servers).
func (o SqlServerInstancePropertiesResponseOutput) ContainerResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.ContainerResourceId }).(pulumi.StringOutput)
}

// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
func (o SqlServerInstancePropertiesResponseOutput) Cores() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.Cores }).(pulumi.StringPtrOutput)
}

// The time when the resource was created.
func (o SqlServerInstancePropertiesResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// SQL Server current version.
func (o SqlServerInstancePropertiesResponseOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// Database mirroring endpoint related properties.
func (o SqlServerInstancePropertiesResponseOutput) DatabaseMirroringEndpoint() DBMEndpointResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *DBMEndpointResponse { return v.DatabaseMirroringEndpoint }).(DBMEndpointResponsePtrOutput)
}

// Indicates whether database master key exists in SQL Server.
func (o SqlServerInstancePropertiesResponseOutput) DbMasterKeyExists() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) bool { return v.DbMasterKeyExists }).(pulumi.BoolOutput)
}

// SQL Server edition.
func (o SqlServerInstancePropertiesResponseOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// Failover Cluster Instance properties.
func (o SqlServerInstancePropertiesResponseOutput) FailoverCluster() FailoverClusterResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *FailoverClusterResponse { return v.FailoverCluster }).(FailoverClusterResponsePtrOutput)
}

// Type of host for Azure Arc SQL Server
func (o SqlServerInstancePropertiesResponseOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// SQL Server instance name.
func (o SqlServerInstancePropertiesResponseOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Indicates whether DigiCert PKI root-authority certificate (trusted by Azure) exists in SQL Server and trusted for Azure database.windows.net domains.
func (o SqlServerInstancePropertiesResponseOutput) IsDigiCertPkiCertTrustConfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) bool { return v.IsDigiCertPkiCertTrustConfigured }).(pulumi.BoolOutput)
}

// Indicates whether always On availability groups is enabled in SQL Server.
func (o SqlServerInstancePropertiesResponseOutput) IsHadrEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) bool { return v.IsHadrEnabled }).(pulumi.BoolOutput)
}

// Indicates whether Microsoft PKI root-authority certificate (trusted by Azure) exists in SQL Server and trusted for Azure database.windows.net domains.
func (o SqlServerInstancePropertiesResponseOutput) IsMicrosoftPkiCertTrustConfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) bool { return v.IsMicrosoftPkiCertTrustConfigured }).(pulumi.BoolOutput)
}

// The time when last successful inventory upload was performed.
func (o SqlServerInstancePropertiesResponseOutput) LastInventoryUploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.LastInventoryUploadTime }).(pulumi.StringOutput)
}

// The time when last successful usage upload was performed.
func (o SqlServerInstancePropertiesResponseOutput) LastUsageUploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.LastUsageUploadTime }).(pulumi.StringOutput)
}

// SQL Server license type.
func (o SqlServerInstancePropertiesResponseOutput) LicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.LicenseType }).(pulumi.StringOutput)
}

// max server memory (MB) value configured for this instance.
func (o SqlServerInstancePropertiesResponseOutput) MaxServerMemoryMB() pulumi.Float64Output {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) float64 { return v.MaxServerMemoryMB }).(pulumi.Float64Output)
}

// Migration related configuration.
func (o SqlServerInstancePropertiesResponseOutput) Migration() MigrationResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *MigrationResponse { return v.Migration }).(MigrationResponsePtrOutput)
}

// The monitoring configuration.
func (o SqlServerInstancePropertiesResponseOutput) Monitoring() MonitoringResponsePtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *MonitoringResponse { return v.Monitoring }).(MonitoringResponsePtrOutput)
}

// SQL Server update level.
func (o SqlServerInstancePropertiesResponseOutput) PatchLevel() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.PatchLevel }).(pulumi.StringOutput)
}

// SQL Server product ID.
func (o SqlServerInstancePropertiesResponseOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.ProductId }).(pulumi.StringOutput)
}

// The provisioning state of the Arc-enabled SQL Server resource.
func (o SqlServerInstancePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates if the resource represents a SQL Server engine or a SQL Server component service installed on the host.
func (o SqlServerInstancePropertiesResponseOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// The cloud connectivity status.
func (o SqlServerInstancePropertiesResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Dynamic TCP ports used by SQL Server.
func (o SqlServerInstancePropertiesResponseOutput) TcpDynamicPorts() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.TcpDynamicPorts }).(pulumi.StringOutput)
}

// Static TCP ports used by SQL Server.
func (o SqlServerInstancePropertiesResponseOutput) TcpStaticPorts() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.TcpStaticPorts }).(pulumi.StringOutput)
}

// An array of integers, where each value represents the enabled trace flags in SQL Server.
func (o SqlServerInstancePropertiesResponseOutput) TraceFlags() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) []int { return v.TraceFlags }).(pulumi.IntArrayOutput)
}

// Upgrade Action for this resource is locked until it expires. The Expiration time indicated by this value. It is not locked when it is empty.
func (o SqlServerInstancePropertiesResponseOutput) UpgradeLockedUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.UpgradeLockedUntil }).(pulumi.StringPtrOutput)
}

// The number of logical processors used by the SQL Server instance.
func (o SqlServerInstancePropertiesResponseOutput) VCore() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.VCore }).(pulumi.StringOutput)
}

// SQL Server version.
func (o SqlServerInstancePropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The unique ID of the hybrid machine that this resource belongs to.
func (o SqlServerInstancePropertiesResponseOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerInstancePropertiesResponse) string { return v.VmId }).(pulumi.StringOutput)
}

// The telemetry column for the SQL Server instance.
type SqlServerInstanceTelemetryColumnResponse struct {
	// The name of the telemetry column.
	Name *string `pulumi:"name"`
	// The type of the telemetry column.
	Type *string `pulumi:"type"`
}

// The telemetry column for the SQL Server instance.
type SqlServerInstanceTelemetryColumnResponseOutput struct{ *pulumi.OutputState }

func (SqlServerInstanceTelemetryColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerInstanceTelemetryColumnResponse)(nil)).Elem()
}

func (o SqlServerInstanceTelemetryColumnResponseOutput) ToSqlServerInstanceTelemetryColumnResponseOutput() SqlServerInstanceTelemetryColumnResponseOutput {
	return o
}

func (o SqlServerInstanceTelemetryColumnResponseOutput) ToSqlServerInstanceTelemetryColumnResponseOutputWithContext(ctx context.Context) SqlServerInstanceTelemetryColumnResponseOutput {
	return o
}

// The name of the telemetry column.
func (o SqlServerInstanceTelemetryColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceTelemetryColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the telemetry column.
func (o SqlServerInstanceTelemetryColumnResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerInstanceTelemetryColumnResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SqlServerInstanceTelemetryColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (SqlServerInstanceTelemetryColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlServerInstanceTelemetryColumnResponse)(nil)).Elem()
}

func (o SqlServerInstanceTelemetryColumnResponseArrayOutput) ToSqlServerInstanceTelemetryColumnResponseArrayOutput() SqlServerInstanceTelemetryColumnResponseArrayOutput {
	return o
}

func (o SqlServerInstanceTelemetryColumnResponseArrayOutput) ToSqlServerInstanceTelemetryColumnResponseArrayOutputWithContext(ctx context.Context) SqlServerInstanceTelemetryColumnResponseArrayOutput {
	return o
}

func (o SqlServerInstanceTelemetryColumnResponseArrayOutput) Index(i pulumi.IntInput) SqlServerInstanceTelemetryColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlServerInstanceTelemetryColumnResponse {
		return vs[0].([]SqlServerInstanceTelemetryColumnResponse)[vs[1].(int)]
	}).(SqlServerInstanceTelemetryColumnResponseOutput)
}

// Properties of SQL Server License.
type SqlServerLicenseProperties struct {
	// The activation state of the license.
	ActivationState string `pulumi:"activationState"`
	// SQL Server license type.
	BillingPlan string `pulumi:"billingPlan"`
	// This property represents the choice between SQL Server Core and ESU licenses.
	LicenseCategory string `pulumi:"licenseCategory"`
	// The number of total cores of the license covers.
	PhysicalCores int `pulumi:"physicalCores"`
	// The Azure scope to which the license will apply.
	ScopeType string `pulumi:"scopeType"`
}

// SqlServerLicensePropertiesInput is an input type that accepts SqlServerLicensePropertiesArgs and SqlServerLicensePropertiesOutput values.
// You can construct a concrete instance of `SqlServerLicensePropertiesInput` via:
//
//	SqlServerLicensePropertiesArgs{...}
type SqlServerLicensePropertiesInput interface {
	pulumi.Input

	ToSqlServerLicensePropertiesOutput() SqlServerLicensePropertiesOutput
	ToSqlServerLicensePropertiesOutputWithContext(context.Context) SqlServerLicensePropertiesOutput
}

// Properties of SQL Server License.
type SqlServerLicensePropertiesArgs struct {
	// The activation state of the license.
	ActivationState pulumi.StringInput `pulumi:"activationState"`
	// SQL Server license type.
	BillingPlan pulumi.StringInput `pulumi:"billingPlan"`
	// This property represents the choice between SQL Server Core and ESU licenses.
	LicenseCategory pulumi.StringInput `pulumi:"licenseCategory"`
	// The number of total cores of the license covers.
	PhysicalCores pulumi.IntInput `pulumi:"physicalCores"`
	// The Azure scope to which the license will apply.
	ScopeType pulumi.StringInput `pulumi:"scopeType"`
}

func (SqlServerLicensePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLicenseProperties)(nil)).Elem()
}

func (i SqlServerLicensePropertiesArgs) ToSqlServerLicensePropertiesOutput() SqlServerLicensePropertiesOutput {
	return i.ToSqlServerLicensePropertiesOutputWithContext(context.Background())
}

func (i SqlServerLicensePropertiesArgs) ToSqlServerLicensePropertiesOutputWithContext(ctx context.Context) SqlServerLicensePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerLicensePropertiesOutput)
}

// Properties of SQL Server License.
type SqlServerLicensePropertiesOutput struct{ *pulumi.OutputState }

func (SqlServerLicensePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLicenseProperties)(nil)).Elem()
}

func (o SqlServerLicensePropertiesOutput) ToSqlServerLicensePropertiesOutput() SqlServerLicensePropertiesOutput {
	return o
}

func (o SqlServerLicensePropertiesOutput) ToSqlServerLicensePropertiesOutputWithContext(ctx context.Context) SqlServerLicensePropertiesOutput {
	return o
}

// The activation state of the license.
func (o SqlServerLicensePropertiesOutput) ActivationState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicenseProperties) string { return v.ActivationState }).(pulumi.StringOutput)
}

// SQL Server license type.
func (o SqlServerLicensePropertiesOutput) BillingPlan() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicenseProperties) string { return v.BillingPlan }).(pulumi.StringOutput)
}

// This property represents the choice between SQL Server Core and ESU licenses.
func (o SqlServerLicensePropertiesOutput) LicenseCategory() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicenseProperties) string { return v.LicenseCategory }).(pulumi.StringOutput)
}

// The number of total cores of the license covers.
func (o SqlServerLicensePropertiesOutput) PhysicalCores() pulumi.IntOutput {
	return o.ApplyT(func(v SqlServerLicenseProperties) int { return v.PhysicalCores }).(pulumi.IntOutput)
}

// The Azure scope to which the license will apply.
func (o SqlServerLicensePropertiesOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicenseProperties) string { return v.ScopeType }).(pulumi.StringOutput)
}

// Properties of SQL Server License.
type SqlServerLicensePropertiesResponse struct {
	// The activation state of the license.
	ActivationState string `pulumi:"activationState"`
	// SQL Server license type.
	BillingPlan string `pulumi:"billingPlan"`
	// The timestamp of the most recent activation of the SqlServerLicense.
	LastActivatedAt string `pulumi:"lastActivatedAt"`
	// The timestamp of the most recent deactivation of the SqlServerLicense.
	LastDeactivatedAt string `pulumi:"lastDeactivatedAt"`
	// This property represents the choice between SQL Server Core and ESU licenses.
	LicenseCategory string `pulumi:"licenseCategory"`
	// The number of total cores of the license covers.
	PhysicalCores int `pulumi:"physicalCores"`
	// The Azure scope to which the license will apply.
	ScopeType string `pulumi:"scopeType"`
	// The tenantId the SQL Server license resource subscription resides in.
	TenantId string `pulumi:"tenantId"`
}

// Properties of SQL Server License.
type SqlServerLicensePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqlServerLicensePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLicensePropertiesResponse)(nil)).Elem()
}

func (o SqlServerLicensePropertiesResponseOutput) ToSqlServerLicensePropertiesResponseOutput() SqlServerLicensePropertiesResponseOutput {
	return o
}

func (o SqlServerLicensePropertiesResponseOutput) ToSqlServerLicensePropertiesResponseOutputWithContext(ctx context.Context) SqlServerLicensePropertiesResponseOutput {
	return o
}

// The activation state of the license.
func (o SqlServerLicensePropertiesResponseOutput) ActivationState() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.ActivationState }).(pulumi.StringOutput)
}

// SQL Server license type.
func (o SqlServerLicensePropertiesResponseOutput) BillingPlan() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.BillingPlan }).(pulumi.StringOutput)
}

// The timestamp of the most recent activation of the SqlServerLicense.
func (o SqlServerLicensePropertiesResponseOutput) LastActivatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.LastActivatedAt }).(pulumi.StringOutput)
}

// The timestamp of the most recent deactivation of the SqlServerLicense.
func (o SqlServerLicensePropertiesResponseOutput) LastDeactivatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.LastDeactivatedAt }).(pulumi.StringOutput)
}

// This property represents the choice between SQL Server Core and ESU licenses.
func (o SqlServerLicensePropertiesResponseOutput) LicenseCategory() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.LicenseCategory }).(pulumi.StringOutput)
}

// The number of total cores of the license covers.
func (o SqlServerLicensePropertiesResponseOutput) PhysicalCores() pulumi.IntOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) int { return v.PhysicalCores }).(pulumi.IntOutput)
}

// The Azure scope to which the license will apply.
func (o SqlServerLicensePropertiesResponseOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.ScopeType }).(pulumi.StringOutput)
}

// The tenantId the SQL Server license resource subscription resides in.
func (o SqlServerLicensePropertiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLicensePropertiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The target readiness for migration for this database.
type TargetReadinessResponse struct {
	// The SKU recommendation summary.
	AzureSqlDatabase *SkuRecommendationSummaryResponse `pulumi:"azureSqlDatabase"`
	// The SKU recommendation summary.
	AzureSqlManagedInstance *SkuRecommendationSummaryResponse `pulumi:"azureSqlManagedInstance"`
	// The SKU recommendation summary.
	AzureSqlVirtualMachine *SkuRecommendationSummaryResponse `pulumi:"azureSqlVirtualMachine"`
}

// The target readiness for migration for this database.
type TargetReadinessResponseOutput struct{ *pulumi.OutputState }

func (TargetReadinessResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetReadinessResponse)(nil)).Elem()
}

func (o TargetReadinessResponseOutput) ToTargetReadinessResponseOutput() TargetReadinessResponseOutput {
	return o
}

func (o TargetReadinessResponseOutput) ToTargetReadinessResponseOutputWithContext(ctx context.Context) TargetReadinessResponseOutput {
	return o
}

// The SKU recommendation summary.
func (o TargetReadinessResponseOutput) AzureSqlDatabase() SkuRecommendationSummaryResponsePtrOutput {
	return o.ApplyT(func(v TargetReadinessResponse) *SkuRecommendationSummaryResponse { return v.AzureSqlDatabase }).(SkuRecommendationSummaryResponsePtrOutput)
}

// The SKU recommendation summary.
func (o TargetReadinessResponseOutput) AzureSqlManagedInstance() SkuRecommendationSummaryResponsePtrOutput {
	return o.ApplyT(func(v TargetReadinessResponse) *SkuRecommendationSummaryResponse { return v.AzureSqlManagedInstance }).(SkuRecommendationSummaryResponsePtrOutput)
}

// The SKU recommendation summary.
func (o TargetReadinessResponseOutput) AzureSqlVirtualMachine() SkuRecommendationSummaryResponsePtrOutput {
	return o.ApplyT(func(v TargetReadinessResponse) *SkuRecommendationSummaryResponse { return v.AzureSqlVirtualMachine }).(SkuRecommendationSummaryResponsePtrOutput)
}

type TargetReadinessResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetReadinessResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetReadinessResponse)(nil)).Elem()
}

func (o TargetReadinessResponsePtrOutput) ToTargetReadinessResponsePtrOutput() TargetReadinessResponsePtrOutput {
	return o
}

func (o TargetReadinessResponsePtrOutput) ToTargetReadinessResponsePtrOutputWithContext(ctx context.Context) TargetReadinessResponsePtrOutput {
	return o
}

func (o TargetReadinessResponsePtrOutput) Elem() TargetReadinessResponseOutput {
	return o.ApplyT(func(v *TargetReadinessResponse) TargetReadinessResponse {
		if v != nil {
			return *v
		}
		var ret TargetReadinessResponse
		return ret
	}).(TargetReadinessResponseOutput)
}

// The SKU recommendation summary.
func (o TargetReadinessResponsePtrOutput) AzureSqlDatabase() SkuRecommendationSummaryResponsePtrOutput {
	return o.ApplyT(func(v *TargetReadinessResponse) *SkuRecommendationSummaryResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlDatabase
	}).(SkuRecommendationSummaryResponsePtrOutput)
}

// The SKU recommendation summary.
func (o TargetReadinessResponsePtrOutput) AzureSqlManagedInstance() SkuRecommendationSummaryResponsePtrOutput {
	return o.ApplyT(func(v *TargetReadinessResponse) *SkuRecommendationSummaryResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlManagedInstance
	}).(SkuRecommendationSummaryResponsePtrOutput)
}

// The SKU recommendation summary.
func (o TargetReadinessResponsePtrOutput) AzureSqlVirtualMachine() SkuRecommendationSummaryResponsePtrOutput {
	return o.ApplyT(func(v *TargetReadinessResponse) *SkuRecommendationSummaryResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlVirtualMachine
	}).(SkuRecommendationSummaryResponsePtrOutput)
}

// Service principal for uploading billing, metrics and logs.
type UploadServicePrincipal struct {
	// Authority for the service principal. Example: https://login.microsoftonline.com/
	Authority *string `pulumi:"authority"`
	// Client ID of the service principal for uploading data.
	ClientId *string `pulumi:"clientId"`
	// Secret of the service principal
	ClientSecret *string `pulumi:"clientSecret"`
	// Tenant ID of the service principal.
	TenantId *string `pulumi:"tenantId"`
}

// UploadServicePrincipalInput is an input type that accepts UploadServicePrincipalArgs and UploadServicePrincipalOutput values.
// You can construct a concrete instance of `UploadServicePrincipalInput` via:
//
//	UploadServicePrincipalArgs{...}
type UploadServicePrincipalInput interface {
	pulumi.Input

	ToUploadServicePrincipalOutput() UploadServicePrincipalOutput
	ToUploadServicePrincipalOutputWithContext(context.Context) UploadServicePrincipalOutput
}

// Service principal for uploading billing, metrics and logs.
type UploadServicePrincipalArgs struct {
	// Authority for the service principal. Example: https://login.microsoftonline.com/
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// Client ID of the service principal for uploading data.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Secret of the service principal
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Tenant ID of the service principal.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (UploadServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadServicePrincipal)(nil)).Elem()
}

func (i UploadServicePrincipalArgs) ToUploadServicePrincipalOutput() UploadServicePrincipalOutput {
	return i.ToUploadServicePrincipalOutputWithContext(context.Background())
}

func (i UploadServicePrincipalArgs) ToUploadServicePrincipalOutputWithContext(ctx context.Context) UploadServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadServicePrincipalOutput)
}

func (i UploadServicePrincipalArgs) ToUploadServicePrincipalPtrOutput() UploadServicePrincipalPtrOutput {
	return i.ToUploadServicePrincipalPtrOutputWithContext(context.Background())
}

func (i UploadServicePrincipalArgs) ToUploadServicePrincipalPtrOutputWithContext(ctx context.Context) UploadServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadServicePrincipalOutput).ToUploadServicePrincipalPtrOutputWithContext(ctx)
}

// UploadServicePrincipalPtrInput is an input type that accepts UploadServicePrincipalArgs, UploadServicePrincipalPtr and UploadServicePrincipalPtrOutput values.
// You can construct a concrete instance of `UploadServicePrincipalPtrInput` via:
//
//	        UploadServicePrincipalArgs{...}
//
//	or:
//
//	        nil
type UploadServicePrincipalPtrInput interface {
	pulumi.Input

	ToUploadServicePrincipalPtrOutput() UploadServicePrincipalPtrOutput
	ToUploadServicePrincipalPtrOutputWithContext(context.Context) UploadServicePrincipalPtrOutput
}

type uploadServicePrincipalPtrType UploadServicePrincipalArgs

func UploadServicePrincipalPtr(v *UploadServicePrincipalArgs) UploadServicePrincipalPtrInput {
	return (*uploadServicePrincipalPtrType)(v)
}

func (*uploadServicePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadServicePrincipal)(nil)).Elem()
}

func (i *uploadServicePrincipalPtrType) ToUploadServicePrincipalPtrOutput() UploadServicePrincipalPtrOutput {
	return i.ToUploadServicePrincipalPtrOutputWithContext(context.Background())
}

func (i *uploadServicePrincipalPtrType) ToUploadServicePrincipalPtrOutputWithContext(ctx context.Context) UploadServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadServicePrincipalPtrOutput)
}

// Service principal for uploading billing, metrics and logs.
type UploadServicePrincipalOutput struct{ *pulumi.OutputState }

func (UploadServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadServicePrincipal)(nil)).Elem()
}

func (o UploadServicePrincipalOutput) ToUploadServicePrincipalOutput() UploadServicePrincipalOutput {
	return o
}

func (o UploadServicePrincipalOutput) ToUploadServicePrincipalOutputWithContext(ctx context.Context) UploadServicePrincipalOutput {
	return o
}

func (o UploadServicePrincipalOutput) ToUploadServicePrincipalPtrOutput() UploadServicePrincipalPtrOutput {
	return o.ToUploadServicePrincipalPtrOutputWithContext(context.Background())
}

func (o UploadServicePrincipalOutput) ToUploadServicePrincipalPtrOutputWithContext(ctx context.Context) UploadServicePrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UploadServicePrincipal) *UploadServicePrincipal {
		return &v
	}).(UploadServicePrincipalPtrOutput)
}

// Authority for the service principal. Example: https://login.microsoftonline.com/
func (o UploadServicePrincipalOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipal) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// Client ID of the service principal for uploading data.
func (o UploadServicePrincipalOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipal) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Secret of the service principal
func (o UploadServicePrincipalOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipal) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Tenant ID of the service principal.
func (o UploadServicePrincipalOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipal) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type UploadServicePrincipalPtrOutput struct{ *pulumi.OutputState }

func (UploadServicePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadServicePrincipal)(nil)).Elem()
}

func (o UploadServicePrincipalPtrOutput) ToUploadServicePrincipalPtrOutput() UploadServicePrincipalPtrOutput {
	return o
}

func (o UploadServicePrincipalPtrOutput) ToUploadServicePrincipalPtrOutputWithContext(ctx context.Context) UploadServicePrincipalPtrOutput {
	return o
}

func (o UploadServicePrincipalPtrOutput) Elem() UploadServicePrincipalOutput {
	return o.ApplyT(func(v *UploadServicePrincipal) UploadServicePrincipal {
		if v != nil {
			return *v
		}
		var ret UploadServicePrincipal
		return ret
	}).(UploadServicePrincipalOutput)
}

// Authority for the service principal. Example: https://login.microsoftonline.com/
func (o UploadServicePrincipalPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// Client ID of the service principal for uploading data.
func (o UploadServicePrincipalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Secret of the service principal
func (o UploadServicePrincipalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Tenant ID of the service principal.
func (o UploadServicePrincipalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Service principal for uploading billing, metrics and logs.
type UploadServicePrincipalResponse struct {
	// Authority for the service principal. Example: https://login.microsoftonline.com/
	Authority *string `pulumi:"authority"`
	// Client ID of the service principal for uploading data.
	ClientId *string `pulumi:"clientId"`
	// Tenant ID of the service principal.
	TenantId *string `pulumi:"tenantId"`
}

// Service principal for uploading billing, metrics and logs.
type UploadServicePrincipalResponseOutput struct{ *pulumi.OutputState }

func (UploadServicePrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadServicePrincipalResponse)(nil)).Elem()
}

func (o UploadServicePrincipalResponseOutput) ToUploadServicePrincipalResponseOutput() UploadServicePrincipalResponseOutput {
	return o
}

func (o UploadServicePrincipalResponseOutput) ToUploadServicePrincipalResponseOutputWithContext(ctx context.Context) UploadServicePrincipalResponseOutput {
	return o
}

// Authority for the service principal. Example: https://login.microsoftonline.com/
func (o UploadServicePrincipalResponseOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipalResponse) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// Client ID of the service principal for uploading data.
func (o UploadServicePrincipalResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipalResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Tenant ID of the service principal.
func (o UploadServicePrincipalResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadServicePrincipalResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type UploadServicePrincipalResponsePtrOutput struct{ *pulumi.OutputState }

func (UploadServicePrincipalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadServicePrincipalResponse)(nil)).Elem()
}

func (o UploadServicePrincipalResponsePtrOutput) ToUploadServicePrincipalResponsePtrOutput() UploadServicePrincipalResponsePtrOutput {
	return o
}

func (o UploadServicePrincipalResponsePtrOutput) ToUploadServicePrincipalResponsePtrOutputWithContext(ctx context.Context) UploadServicePrincipalResponsePtrOutput {
	return o
}

func (o UploadServicePrincipalResponsePtrOutput) Elem() UploadServicePrincipalResponseOutput {
	return o.ApplyT(func(v *UploadServicePrincipalResponse) UploadServicePrincipalResponse {
		if v != nil {
			return *v
		}
		var ret UploadServicePrincipalResponse
		return ret
	}).(UploadServicePrincipalResponseOutput)
}

// Authority for the service principal. Example: https://login.microsoftonline.com/
func (o UploadServicePrincipalResponsePtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// Client ID of the service principal for uploading data.
func (o UploadServicePrincipalResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Tenant ID of the service principal.
func (o UploadServicePrincipalResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
type UploadWatermark struct {
	// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
	Logs *string `pulumi:"logs"`
	// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
	Metrics *string `pulumi:"metrics"`
	// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
	Usages *string `pulumi:"usages"`
}

// UploadWatermarkInput is an input type that accepts UploadWatermarkArgs and UploadWatermarkOutput values.
// You can construct a concrete instance of `UploadWatermarkInput` via:
//
//	UploadWatermarkArgs{...}
type UploadWatermarkInput interface {
	pulumi.Input

	ToUploadWatermarkOutput() UploadWatermarkOutput
	ToUploadWatermarkOutputWithContext(context.Context) UploadWatermarkOutput
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
type UploadWatermarkArgs struct {
	// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
	Logs pulumi.StringPtrInput `pulumi:"logs"`
	// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
	Metrics pulumi.StringPtrInput `pulumi:"metrics"`
	// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
	Usages pulumi.StringPtrInput `pulumi:"usages"`
}

func (UploadWatermarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadWatermark)(nil)).Elem()
}

func (i UploadWatermarkArgs) ToUploadWatermarkOutput() UploadWatermarkOutput {
	return i.ToUploadWatermarkOutputWithContext(context.Background())
}

func (i UploadWatermarkArgs) ToUploadWatermarkOutputWithContext(ctx context.Context) UploadWatermarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadWatermarkOutput)
}

func (i UploadWatermarkArgs) ToUploadWatermarkPtrOutput() UploadWatermarkPtrOutput {
	return i.ToUploadWatermarkPtrOutputWithContext(context.Background())
}

func (i UploadWatermarkArgs) ToUploadWatermarkPtrOutputWithContext(ctx context.Context) UploadWatermarkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadWatermarkOutput).ToUploadWatermarkPtrOutputWithContext(ctx)
}

// UploadWatermarkPtrInput is an input type that accepts UploadWatermarkArgs, UploadWatermarkPtr and UploadWatermarkPtrOutput values.
// You can construct a concrete instance of `UploadWatermarkPtrInput` via:
//
//	        UploadWatermarkArgs{...}
//
//	or:
//
//	        nil
type UploadWatermarkPtrInput interface {
	pulumi.Input

	ToUploadWatermarkPtrOutput() UploadWatermarkPtrOutput
	ToUploadWatermarkPtrOutputWithContext(context.Context) UploadWatermarkPtrOutput
}

type uploadWatermarkPtrType UploadWatermarkArgs

func UploadWatermarkPtr(v *UploadWatermarkArgs) UploadWatermarkPtrInput {
	return (*uploadWatermarkPtrType)(v)
}

func (*uploadWatermarkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadWatermark)(nil)).Elem()
}

func (i *uploadWatermarkPtrType) ToUploadWatermarkPtrOutput() UploadWatermarkPtrOutput {
	return i.ToUploadWatermarkPtrOutputWithContext(context.Background())
}

func (i *uploadWatermarkPtrType) ToUploadWatermarkPtrOutputWithContext(ctx context.Context) UploadWatermarkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadWatermarkPtrOutput)
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
type UploadWatermarkOutput struct{ *pulumi.OutputState }

func (UploadWatermarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadWatermark)(nil)).Elem()
}

func (o UploadWatermarkOutput) ToUploadWatermarkOutput() UploadWatermarkOutput {
	return o
}

func (o UploadWatermarkOutput) ToUploadWatermarkOutputWithContext(ctx context.Context) UploadWatermarkOutput {
	return o
}

func (o UploadWatermarkOutput) ToUploadWatermarkPtrOutput() UploadWatermarkPtrOutput {
	return o.ToUploadWatermarkPtrOutputWithContext(context.Background())
}

func (o UploadWatermarkOutput) ToUploadWatermarkPtrOutputWithContext(ctx context.Context) UploadWatermarkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UploadWatermark) *UploadWatermark {
		return &v
	}).(UploadWatermarkPtrOutput)
}

// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkOutput) Logs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadWatermark) *string { return v.Logs }).(pulumi.StringPtrOutput)
}

// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkOutput) Metrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadWatermark) *string { return v.Metrics }).(pulumi.StringPtrOutput)
}

// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkOutput) Usages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadWatermark) *string { return v.Usages }).(pulumi.StringPtrOutput)
}

type UploadWatermarkPtrOutput struct{ *pulumi.OutputState }

func (UploadWatermarkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadWatermark)(nil)).Elem()
}

func (o UploadWatermarkPtrOutput) ToUploadWatermarkPtrOutput() UploadWatermarkPtrOutput {
	return o
}

func (o UploadWatermarkPtrOutput) ToUploadWatermarkPtrOutputWithContext(ctx context.Context) UploadWatermarkPtrOutput {
	return o
}

func (o UploadWatermarkPtrOutput) Elem() UploadWatermarkOutput {
	return o.ApplyT(func(v *UploadWatermark) UploadWatermark {
		if v != nil {
			return *v
		}
		var ret UploadWatermark
		return ret
	}).(UploadWatermarkOutput)
}

// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkPtrOutput) Logs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadWatermark) *string {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(pulumi.StringPtrOutput)
}

// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkPtrOutput) Metrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadWatermark) *string {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(pulumi.StringPtrOutput)
}

// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkPtrOutput) Usages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadWatermark) *string {
		if v == nil {
			return nil
		}
		return v.Usages
	}).(pulumi.StringPtrOutput)
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
type UploadWatermarkResponse struct {
	// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
	Logs *string `pulumi:"logs"`
	// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
	Metrics *string `pulumi:"metrics"`
	// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
	Usages *string `pulumi:"usages"`
}

// Properties on upload watermark.  Mostly timestamp for each upload data type
type UploadWatermarkResponseOutput struct{ *pulumi.OutputState }

func (UploadWatermarkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadWatermarkResponse)(nil)).Elem()
}

func (o UploadWatermarkResponseOutput) ToUploadWatermarkResponseOutput() UploadWatermarkResponseOutput {
	return o
}

func (o UploadWatermarkResponseOutput) ToUploadWatermarkResponseOutputWithContext(ctx context.Context) UploadWatermarkResponseOutput {
	return o
}

// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkResponseOutput) Logs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadWatermarkResponse) *string { return v.Logs }).(pulumi.StringPtrOutput)
}

// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkResponseOutput) Metrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadWatermarkResponse) *string { return v.Metrics }).(pulumi.StringPtrOutput)
}

// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkResponseOutput) Usages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadWatermarkResponse) *string { return v.Usages }).(pulumi.StringPtrOutput)
}

type UploadWatermarkResponsePtrOutput struct{ *pulumi.OutputState }

func (UploadWatermarkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadWatermarkResponse)(nil)).Elem()
}

func (o UploadWatermarkResponsePtrOutput) ToUploadWatermarkResponsePtrOutput() UploadWatermarkResponsePtrOutput {
	return o
}

func (o UploadWatermarkResponsePtrOutput) ToUploadWatermarkResponsePtrOutputWithContext(ctx context.Context) UploadWatermarkResponsePtrOutput {
	return o
}

func (o UploadWatermarkResponsePtrOutput) Elem() UploadWatermarkResponseOutput {
	return o.ApplyT(func(v *UploadWatermarkResponse) UploadWatermarkResponse {
		if v != nil {
			return *v
		}
		var ret UploadWatermarkResponse
		return ret
	}).(UploadWatermarkResponseOutput)
}

// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkResponsePtrOutput) Logs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadWatermarkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(pulumi.StringPtrOutput)
}

// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkResponsePtrOutput) Metrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadWatermarkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(pulumi.StringPtrOutput)
}

// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
func (o UploadWatermarkResponsePtrOutput) Usages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadWatermarkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Usages
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActiveDirectoryConnectorDNSDetailsOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorDNSDetailsResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorDomainDetailsOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorDomainDetailsResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorSpecOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorSpecResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorStatusOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorStatusPtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorStatusResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryConnectorStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllerOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllerPtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllerArrayOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllerResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllerResponsePtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllerResponseArrayOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllersOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllersPtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllersResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainControllersResponsePtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryInformationOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryInformationPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationOutput{})
	pulumi.RegisterOutputType(AuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupConfigureOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupConfigurePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupConfigureResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupConfigureResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupInfoOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupInfoPtrOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupInfoResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupStateResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityGroupStateResponsePtrOutput{})
	pulumi.RegisterOutputType(BackgroundJobResponseOutput{})
	pulumi.RegisterOutputType(BackgroundJobResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyOutput{})
	pulumi.RegisterOutputType(BackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyResponseOutput{})
	pulumi.RegisterOutputType(BackupPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(BasicLoginInformationOutput{})
	pulumi.RegisterOutputType(BasicLoginInformationPtrOutput{})
	pulumi.RegisterOutputType(BasicLoginInformationResponseOutput{})
	pulumi.RegisterOutputType(BasicLoginInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientConnectionOutput{})
	pulumi.RegisterOutputType(ClientConnectionPtrOutput{})
	pulumi.RegisterOutputType(ClientConnectionResponseOutput{})
	pulumi.RegisterOutputType(ClientConnectionResponsePtrOutput{})
	pulumi.RegisterOutputType(DBMEndpointResponseOutput{})
	pulumi.RegisterOutputType(DBMEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBaseMigrationAssessmentResponseOutput{})
	pulumi.RegisterOutputType(DataBaseMigrationAssessmentResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBaseMigrationAssessmentResponseDatabaseAssessmentsOutput{})
	pulumi.RegisterOutputType(DataBaseMigrationAssessmentResponseDatabaseAssessmentsArrayOutput{})
	pulumi.RegisterOutputType(DataBaseMigrationResponseOutput{})
	pulumi.RegisterOutputType(DataBaseMigrationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataControllerPropertiesOutput{})
	pulumi.RegisterOutputType(DataControllerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EntraAuthenticationOutput{})
	pulumi.RegisterOutputType(EntraAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(EntraAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(EntraAuthenticationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(FailoverClusterResponseOutput{})
	pulumi.RegisterOutputType(FailoverClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(FailoverGroupPropertiesOutput{})
	pulumi.RegisterOutputType(FailoverGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FailoverGroupSpecOutput{})
	pulumi.RegisterOutputType(FailoverGroupSpecResponseOutput{})
	pulumi.RegisterOutputType(HostIPAddressInformationResponseOutput{})
	pulumi.RegisterOutputType(HostIPAddressInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryConnectorOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryConnectorPtrOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryResponseOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryResponsePtrOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryResponseConnectorOutput{})
	pulumi.RegisterOutputType(K8sActiveDirectoryResponseConnectorPtrOutput{})
	pulumi.RegisterOutputType(K8sNetworkSettingsOutput{})
	pulumi.RegisterOutputType(K8sNetworkSettingsPtrOutput{})
	pulumi.RegisterOutputType(K8sNetworkSettingsResponseOutput{})
	pulumi.RegisterOutputType(K8sNetworkSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(K8sResourceRequirementsOutput{})
	pulumi.RegisterOutputType(K8sResourceRequirementsPtrOutput{})
	pulumi.RegisterOutputType(K8sResourceRequirementsResponseOutput{})
	pulumi.RegisterOutputType(K8sResourceRequirementsResponsePtrOutput{})
	pulumi.RegisterOutputType(K8sSchedulingOutput{})
	pulumi.RegisterOutputType(K8sSchedulingPtrOutput{})
	pulumi.RegisterOutputType(K8sSchedulingOptionsOutput{})
	pulumi.RegisterOutputType(K8sSchedulingOptionsPtrOutput{})
	pulumi.RegisterOutputType(K8sSchedulingOptionsResponseOutput{})
	pulumi.RegisterOutputType(K8sSchedulingOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(K8sSchedulingResponseOutput{})
	pulumi.RegisterOutputType(K8sSchedulingResponsePtrOutput{})
	pulumi.RegisterOutputType(K8sSecurityOutput{})
	pulumi.RegisterOutputType(K8sSecurityPtrOutput{})
	pulumi.RegisterOutputType(K8sSecurityResponseOutput{})
	pulumi.RegisterOutputType(K8sSecurityResponsePtrOutput{})
	pulumi.RegisterOutputType(K8sSettingsOutput{})
	pulumi.RegisterOutputType(K8sSettingsPtrOutput{})
	pulumi.RegisterOutputType(K8sSettingsResponseOutput{})
	pulumi.RegisterOutputType(K8sSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(K8stransparentDataEncryptionOutput{})
	pulumi.RegisterOutputType(K8stransparentDataEncryptionPtrOutput{})
	pulumi.RegisterOutputType(K8stransparentDataEncryptionResponseOutput{})
	pulumi.RegisterOutputType(K8stransparentDataEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(KeytabInformationOutput{})
	pulumi.RegisterOutputType(KeytabInformationPtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsWorkspaceConfigOutput{})
	pulumi.RegisterOutputType(LogAnalyticsWorkspaceConfigPtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsWorkspaceConfigResponseOutput{})
	pulumi.RegisterOutputType(LogAnalyticsWorkspaceConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrationOutput{})
	pulumi.RegisterOutputType(MigrationPtrOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentPtrOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentResponseOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentResponseImpactedObjectsOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentResponseImpactedObjectsArrayOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentResponseServerAssessmentsOutput{})
	pulumi.RegisterOutputType(MigrationAssessmentResponseServerAssessmentsArrayOutput{})
	pulumi.RegisterOutputType(MigrationResponseOutput{})
	pulumi.RegisterOutputType(MigrationResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitoringOutput{})
	pulumi.RegisterOutputType(MonitoringPtrOutput{})
	pulumi.RegisterOutputType(MonitoringResponseOutput{})
	pulumi.RegisterOutputType(MonitoringResponsePtrOutput{})
	pulumi.RegisterOutputType(OnPremisePropertyOutput{})
	pulumi.RegisterOutputType(OnPremisePropertyPtrOutput{})
	pulumi.RegisterOutputType(OnPremisePropertyResponseOutput{})
	pulumi.RegisterOutputType(OnPremisePropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(PostgresInstancePropertiesOutput{})
	pulumi.RegisterOutputType(PostgresInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuPtrOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuResponseOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SequencerActionResponseOutput{})
	pulumi.RegisterOutputType(SequencerActionResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlDatabaseResponseOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlDatabaseResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlDatabaseResponseCategoryOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlDatabaseResponseCategoryPtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlDatabaseResponseTargetSkuPtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlManagedInstanceResponseOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlManagedInstanceResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlManagedInstanceResponseCategoryPtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlManagedInstanceResponseTargetSkuPtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlVirtualMachineResponseOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlVirtualMachineResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlVirtualMachineResponseCategoryPtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsAzureSqlVirtualMachineResponseTargetSkuPtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsMonthlyCostResponseOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsMonthlyCostResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsResponseOutput{})
	pulumi.RegisterOutputType(SkuRecommendationResultsResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuRecommendationSummaryResponseOutput{})
	pulumi.RegisterOutputType(SkuRecommendationSummaryResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesArrayOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupDatabaseReplicaResourcePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupReplicaResourcePropertiesOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupReplicaResourcePropertiesArrayOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupReplicaResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupReplicaResourcePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesIpV4AddressesAndMasksArrayOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksOutput{})
	pulumi.RegisterOutputType(SqlAvailabilityGroupStaticIPListenerPropertiesResponseIpV4AddressesAndMasksArrayOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sRawOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sRawPtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sRawResponseOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sRawResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sSpecOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sSpecPtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sSpecResponseOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceK8sSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstancePropertiesOutput{})
	pulumi.RegisterOutputType(SqlManagedInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuPtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuResponseOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesDatabasesOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesDatabasesPtrOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesReplicasOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesReplicasPtrOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesResponseDatabasesPtrOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesResponseReplicasOutput{})
	pulumi.RegisterOutputType(SqlServerAvailabilityGroupResourcePropertiesResponseReplicasPtrOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesBackupInformationOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesBackupInformationPtrOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesDatabaseOptionsOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesDatabaseOptionsPtrOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesResponseBackupInformationOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesResponseBackupInformationPtrOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsOutput{})
	pulumi.RegisterOutputType(SqlServerDatabaseResourcePropertiesResponseDatabaseOptionsPtrOutput{})
	pulumi.RegisterOutputType(SqlServerEsuLicensePropertiesOutput{})
	pulumi.RegisterOutputType(SqlServerEsuLicensePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlServerInstanceJobStatusResponseOutput{})
	pulumi.RegisterOutputType(SqlServerInstanceJobStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlServerInstancePropertiesOutput{})
	pulumi.RegisterOutputType(SqlServerInstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SqlServerInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SqlServerInstanceTelemetryColumnResponseOutput{})
	pulumi.RegisterOutputType(SqlServerInstanceTelemetryColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlServerLicensePropertiesOutput{})
	pulumi.RegisterOutputType(SqlServerLicensePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TargetReadinessResponseOutput{})
	pulumi.RegisterOutputType(TargetReadinessResponsePtrOutput{})
	pulumi.RegisterOutputType(UploadServicePrincipalOutput{})
	pulumi.RegisterOutputType(UploadServicePrincipalPtrOutput{})
	pulumi.RegisterOutputType(UploadServicePrincipalResponseOutput{})
	pulumi.RegisterOutputType(UploadServicePrincipalResponsePtrOutput{})
	pulumi.RegisterOutputType(UploadWatermarkOutput{})
	pulumi.RegisterOutputType(UploadWatermarkPtrOutput{})
	pulumi.RegisterOutputType(UploadWatermarkResponseOutput{})
	pulumi.RegisterOutputType(UploadWatermarkResponsePtrOutput{})
}
