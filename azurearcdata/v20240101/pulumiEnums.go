// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The service account provisioning mode for this Active Directory connector.
type AccountProvisioningMode string

const (
	AccountProvisioningModeAutomatic = AccountProvisioningMode("automatic")
	AccountProvisioningModeManual    = AccountProvisioningMode("manual")
)

func (AccountProvisioningMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProvisioningMode)(nil)).Elem()
}

func (e AccountProvisioningMode) ToAccountProvisioningModeOutput() AccountProvisioningModeOutput {
	return pulumi.ToOutput(e).(AccountProvisioningModeOutput)
}

func (e AccountProvisioningMode) ToAccountProvisioningModeOutputWithContext(ctx context.Context) AccountProvisioningModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccountProvisioningModeOutput)
}

func (e AccountProvisioningMode) ToAccountProvisioningModePtrOutput() AccountProvisioningModePtrOutput {
	return e.ToAccountProvisioningModePtrOutputWithContext(context.Background())
}

func (e AccountProvisioningMode) ToAccountProvisioningModePtrOutputWithContext(ctx context.Context) AccountProvisioningModePtrOutput {
	return AccountProvisioningMode(e).ToAccountProvisioningModeOutputWithContext(ctx).ToAccountProvisioningModePtrOutputWithContext(ctx)
}

func (e AccountProvisioningMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccountProvisioningMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccountProvisioningMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccountProvisioningMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccountProvisioningModeOutput struct{ *pulumi.OutputState }

func (AccountProvisioningModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProvisioningMode)(nil)).Elem()
}

func (o AccountProvisioningModeOutput) ToAccountProvisioningModeOutput() AccountProvisioningModeOutput {
	return o
}

func (o AccountProvisioningModeOutput) ToAccountProvisioningModeOutputWithContext(ctx context.Context) AccountProvisioningModeOutput {
	return o
}

func (o AccountProvisioningModeOutput) ToAccountProvisioningModePtrOutput() AccountProvisioningModePtrOutput {
	return o.ToAccountProvisioningModePtrOutputWithContext(context.Background())
}

func (o AccountProvisioningModeOutput) ToAccountProvisioningModePtrOutputWithContext(ctx context.Context) AccountProvisioningModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountProvisioningMode) *AccountProvisioningMode {
		return &v
	}).(AccountProvisioningModePtrOutput)
}

func (o AccountProvisioningModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccountProvisioningModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccountProvisioningMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccountProvisioningModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccountProvisioningModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccountProvisioningMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccountProvisioningModePtrOutput struct{ *pulumi.OutputState }

func (AccountProvisioningModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProvisioningMode)(nil)).Elem()
}

func (o AccountProvisioningModePtrOutput) ToAccountProvisioningModePtrOutput() AccountProvisioningModePtrOutput {
	return o
}

func (o AccountProvisioningModePtrOutput) ToAccountProvisioningModePtrOutputWithContext(ctx context.Context) AccountProvisioningModePtrOutput {
	return o
}

func (o AccountProvisioningModePtrOutput) Elem() AccountProvisioningModeOutput {
	return o.ApplyT(func(v *AccountProvisioningMode) AccountProvisioningMode {
		if v != nil {
			return *v
		}
		var ret AccountProvisioningMode
		return ret
	}).(AccountProvisioningModeOutput)
}

func (o AccountProvisioningModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccountProvisioningModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccountProvisioningMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccountProvisioningModeInput is an input type that accepts values of the AccountProvisioningMode enum
// A concrete instance of `AccountProvisioningModeInput` can be one of the following:
//
//	AccountProvisioningModeAutomatic
//	AccountProvisioningModeManual
type AccountProvisioningModeInput interface {
	pulumi.Input

	ToAccountProvisioningModeOutput() AccountProvisioningModeOutput
	ToAccountProvisioningModeOutputWithContext(context.Context) AccountProvisioningModeOutput
}

var accountProvisioningModePtrType = reflect.TypeOf((**AccountProvisioningMode)(nil)).Elem()

type AccountProvisioningModePtrInput interface {
	pulumi.Input

	ToAccountProvisioningModePtrOutput() AccountProvisioningModePtrOutput
	ToAccountProvisioningModePtrOutputWithContext(context.Context) AccountProvisioningModePtrOutput
}

type accountProvisioningModePtr string

func AccountProvisioningModePtr(v string) AccountProvisioningModePtrInput {
	return (*accountProvisioningModePtr)(&v)
}

func (*accountProvisioningModePtr) ElementType() reflect.Type {
	return accountProvisioningModePtrType
}

func (in *accountProvisioningModePtr) ToAccountProvisioningModePtrOutput() AccountProvisioningModePtrOutput {
	return pulumi.ToOutput(in).(AccountProvisioningModePtrOutput)
}

func (in *accountProvisioningModePtr) ToAccountProvisioningModePtrOutputWithContext(ctx context.Context) AccountProvisioningModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccountProvisioningModePtrOutput)
}

// The aggregation type to use for the numerical columns in the dataset.
type AggregationType string

const (
	AggregationTypeAverage = AggregationType("Average")
	AggregationTypeMinimum = AggregationType("Minimum")
	AggregationTypeMaximum = AggregationType("Maximum")
	AggregationTypeSum     = AggregationType("Sum")
	AggregationTypeCount   = AggregationType("Count")
)

func (AggregationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregationType)(nil)).Elem()
}

func (e AggregationType) ToAggregationTypeOutput() AggregationTypeOutput {
	return pulumi.ToOutput(e).(AggregationTypeOutput)
}

func (e AggregationType) ToAggregationTypeOutputWithContext(ctx context.Context) AggregationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AggregationTypeOutput)
}

func (e AggregationType) ToAggregationTypePtrOutput() AggregationTypePtrOutput {
	return e.ToAggregationTypePtrOutputWithContext(context.Background())
}

func (e AggregationType) ToAggregationTypePtrOutputWithContext(ctx context.Context) AggregationTypePtrOutput {
	return AggregationType(e).ToAggregationTypeOutputWithContext(ctx).ToAggregationTypePtrOutputWithContext(ctx)
}

func (e AggregationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AggregationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AggregationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AggregationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AggregationTypeOutput struct{ *pulumi.OutputState }

func (AggregationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregationType)(nil)).Elem()
}

func (o AggregationTypeOutput) ToAggregationTypeOutput() AggregationTypeOutput {
	return o
}

func (o AggregationTypeOutput) ToAggregationTypeOutputWithContext(ctx context.Context) AggregationTypeOutput {
	return o
}

func (o AggregationTypeOutput) ToAggregationTypePtrOutput() AggregationTypePtrOutput {
	return o.ToAggregationTypePtrOutputWithContext(context.Background())
}

func (o AggregationTypeOutput) ToAggregationTypePtrOutputWithContext(ctx context.Context) AggregationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AggregationType) *AggregationType {
		return &v
	}).(AggregationTypePtrOutput)
}

func (o AggregationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AggregationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AggregationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AggregationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AggregationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AggregationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AggregationTypePtrOutput struct{ *pulumi.OutputState }

func (AggregationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AggregationType)(nil)).Elem()
}

func (o AggregationTypePtrOutput) ToAggregationTypePtrOutput() AggregationTypePtrOutput {
	return o
}

func (o AggregationTypePtrOutput) ToAggregationTypePtrOutputWithContext(ctx context.Context) AggregationTypePtrOutput {
	return o
}

func (o AggregationTypePtrOutput) Elem() AggregationTypeOutput {
	return o.ApplyT(func(v *AggregationType) AggregationType {
		if v != nil {
			return *v
		}
		var ret AggregationType
		return ret
	}).(AggregationTypeOutput)
}

func (o AggregationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AggregationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AggregationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AggregationTypeInput is an input type that accepts values of the AggregationType enum
// A concrete instance of `AggregationTypeInput` can be one of the following:
//
//	AggregationTypeAverage
//	AggregationTypeMinimum
//	AggregationTypeMaximum
//	AggregationTypeSum
//	AggregationTypeCount
type AggregationTypeInput interface {
	pulumi.Input

	ToAggregationTypeOutput() AggregationTypeOutput
	ToAggregationTypeOutputWithContext(context.Context) AggregationTypeOutput
}

var aggregationTypePtrType = reflect.TypeOf((**AggregationType)(nil)).Elem()

type AggregationTypePtrInput interface {
	pulumi.Input

	ToAggregationTypePtrOutput() AggregationTypePtrOutput
	ToAggregationTypePtrOutputWithContext(context.Context) AggregationTypePtrOutput
}

type aggregationTypePtr string

func AggregationTypePtr(v string) AggregationTypePtrInput {
	return (*aggregationTypePtr)(&v)
}

func (*aggregationTypePtr) ElementType() reflect.Type {
	return aggregationTypePtrType
}

func (in *aggregationTypePtr) ToAggregationTypePtrOutput() AggregationTypePtrOutput {
	return pulumi.ToOutput(in).(AggregationTypePtrOutput)
}

func (in *aggregationTypePtr) ToAggregationTypePtrOutputWithContext(ctx context.Context) AggregationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AggregationTypePtrOutput)
}

// The license type to apply for this managed instance.
type ArcSqlManagedInstanceLicenseType string

const (
	ArcSqlManagedInstanceLicenseTypeBasePrice        = ArcSqlManagedInstanceLicenseType("BasePrice")
	ArcSqlManagedInstanceLicenseTypeLicenseIncluded  = ArcSqlManagedInstanceLicenseType("LicenseIncluded")
	ArcSqlManagedInstanceLicenseTypeDisasterRecovery = ArcSqlManagedInstanceLicenseType("DisasterRecovery")
)

func (ArcSqlManagedInstanceLicenseType) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcSqlManagedInstanceLicenseType)(nil)).Elem()
}

func (e ArcSqlManagedInstanceLicenseType) ToArcSqlManagedInstanceLicenseTypeOutput() ArcSqlManagedInstanceLicenseTypeOutput {
	return pulumi.ToOutput(e).(ArcSqlManagedInstanceLicenseTypeOutput)
}

func (e ArcSqlManagedInstanceLicenseType) ToArcSqlManagedInstanceLicenseTypeOutputWithContext(ctx context.Context) ArcSqlManagedInstanceLicenseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArcSqlManagedInstanceLicenseTypeOutput)
}

func (e ArcSqlManagedInstanceLicenseType) ToArcSqlManagedInstanceLicenseTypePtrOutput() ArcSqlManagedInstanceLicenseTypePtrOutput {
	return e.ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(context.Background())
}

func (e ArcSqlManagedInstanceLicenseType) ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ArcSqlManagedInstanceLicenseTypePtrOutput {
	return ArcSqlManagedInstanceLicenseType(e).ToArcSqlManagedInstanceLicenseTypeOutputWithContext(ctx).ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(ctx)
}

func (e ArcSqlManagedInstanceLicenseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArcSqlManagedInstanceLicenseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArcSqlManagedInstanceLicenseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ArcSqlManagedInstanceLicenseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArcSqlManagedInstanceLicenseTypeOutput struct{ *pulumi.OutputState }

func (ArcSqlManagedInstanceLicenseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcSqlManagedInstanceLicenseType)(nil)).Elem()
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToArcSqlManagedInstanceLicenseTypeOutput() ArcSqlManagedInstanceLicenseTypeOutput {
	return o
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToArcSqlManagedInstanceLicenseTypeOutputWithContext(ctx context.Context) ArcSqlManagedInstanceLicenseTypeOutput {
	return o
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToArcSqlManagedInstanceLicenseTypePtrOutput() ArcSqlManagedInstanceLicenseTypePtrOutput {
	return o.ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(context.Background())
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ArcSqlManagedInstanceLicenseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArcSqlManagedInstanceLicenseType) *ArcSqlManagedInstanceLicenseType {
		return &v
	}).(ArcSqlManagedInstanceLicenseTypePtrOutput)
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArcSqlManagedInstanceLicenseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArcSqlManagedInstanceLicenseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArcSqlManagedInstanceLicenseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArcSqlManagedInstanceLicenseTypePtrOutput struct{ *pulumi.OutputState }

func (ArcSqlManagedInstanceLicenseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcSqlManagedInstanceLicenseType)(nil)).Elem()
}

func (o ArcSqlManagedInstanceLicenseTypePtrOutput) ToArcSqlManagedInstanceLicenseTypePtrOutput() ArcSqlManagedInstanceLicenseTypePtrOutput {
	return o
}

func (o ArcSqlManagedInstanceLicenseTypePtrOutput) ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ArcSqlManagedInstanceLicenseTypePtrOutput {
	return o
}

func (o ArcSqlManagedInstanceLicenseTypePtrOutput) Elem() ArcSqlManagedInstanceLicenseTypeOutput {
	return o.ApplyT(func(v *ArcSqlManagedInstanceLicenseType) ArcSqlManagedInstanceLicenseType {
		if v != nil {
			return *v
		}
		var ret ArcSqlManagedInstanceLicenseType
		return ret
	}).(ArcSqlManagedInstanceLicenseTypeOutput)
}

func (o ArcSqlManagedInstanceLicenseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArcSqlManagedInstanceLicenseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ArcSqlManagedInstanceLicenseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArcSqlManagedInstanceLicenseTypeInput is an input type that accepts values of the ArcSqlManagedInstanceLicenseType enum
// A concrete instance of `ArcSqlManagedInstanceLicenseTypeInput` can be one of the following:
//
//	ArcSqlManagedInstanceLicenseTypeBasePrice
//	ArcSqlManagedInstanceLicenseTypeLicenseIncluded
//	ArcSqlManagedInstanceLicenseTypeDisasterRecovery
type ArcSqlManagedInstanceLicenseTypeInput interface {
	pulumi.Input

	ToArcSqlManagedInstanceLicenseTypeOutput() ArcSqlManagedInstanceLicenseTypeOutput
	ToArcSqlManagedInstanceLicenseTypeOutputWithContext(context.Context) ArcSqlManagedInstanceLicenseTypeOutput
}

var arcSqlManagedInstanceLicenseTypePtrType = reflect.TypeOf((**ArcSqlManagedInstanceLicenseType)(nil)).Elem()

type ArcSqlManagedInstanceLicenseTypePtrInput interface {
	pulumi.Input

	ToArcSqlManagedInstanceLicenseTypePtrOutput() ArcSqlManagedInstanceLicenseTypePtrOutput
	ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(context.Context) ArcSqlManagedInstanceLicenseTypePtrOutput
}

type arcSqlManagedInstanceLicenseTypePtr string

func ArcSqlManagedInstanceLicenseTypePtr(v string) ArcSqlManagedInstanceLicenseTypePtrInput {
	return (*arcSqlManagedInstanceLicenseTypePtr)(&v)
}

func (*arcSqlManagedInstanceLicenseTypePtr) ElementType() reflect.Type {
	return arcSqlManagedInstanceLicenseTypePtrType
}

func (in *arcSqlManagedInstanceLicenseTypePtr) ToArcSqlManagedInstanceLicenseTypePtrOutput() ArcSqlManagedInstanceLicenseTypePtrOutput {
	return pulumi.ToOutput(in).(ArcSqlManagedInstanceLicenseTypePtrOutput)
}

func (in *arcSqlManagedInstanceLicenseTypePtr) ToArcSqlManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ArcSqlManagedInstanceLicenseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArcSqlManagedInstanceLicenseTypePtrOutput)
}

// Database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. sourceDatabaseId and restorePointInTime must be specified.
type DatabaseCreateMode string

const (
	DatabaseCreateModeDefault            = DatabaseCreateMode("Default")
	DatabaseCreateModePointInTimeRestore = DatabaseCreateMode("PointInTimeRestore")
)

func (DatabaseCreateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCreateMode)(nil)).Elem()
}

func (e DatabaseCreateMode) ToDatabaseCreateModeOutput() DatabaseCreateModeOutput {
	return pulumi.ToOutput(e).(DatabaseCreateModeOutput)
}

func (e DatabaseCreateMode) ToDatabaseCreateModeOutputWithContext(ctx context.Context) DatabaseCreateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseCreateModeOutput)
}

func (e DatabaseCreateMode) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return e.ToDatabaseCreateModePtrOutputWithContext(context.Background())
}

func (e DatabaseCreateMode) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return DatabaseCreateMode(e).ToDatabaseCreateModeOutputWithContext(ctx).ToDatabaseCreateModePtrOutputWithContext(ctx)
}

func (e DatabaseCreateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseCreateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseCreateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseCreateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseCreateModeOutput struct{ *pulumi.OutputState }

func (DatabaseCreateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCreateMode)(nil)).Elem()
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModeOutput() DatabaseCreateModeOutput {
	return o
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModeOutputWithContext(ctx context.Context) DatabaseCreateModeOutput {
	return o
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return o.ToDatabaseCreateModePtrOutputWithContext(context.Background())
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseCreateMode) *DatabaseCreateMode {
		return &v
	}).(DatabaseCreateModePtrOutput)
}

func (o DatabaseCreateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseCreateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseCreateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseCreateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseCreateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseCreateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseCreateModePtrOutput struct{ *pulumi.OutputState }

func (DatabaseCreateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseCreateMode)(nil)).Elem()
}

func (o DatabaseCreateModePtrOutput) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return o
}

func (o DatabaseCreateModePtrOutput) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return o
}

func (o DatabaseCreateModePtrOutput) Elem() DatabaseCreateModeOutput {
	return o.ApplyT(func(v *DatabaseCreateMode) DatabaseCreateMode {
		if v != nil {
			return *v
		}
		var ret DatabaseCreateMode
		return ret
	}).(DatabaseCreateModeOutput)
}

func (o DatabaseCreateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseCreateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseCreateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseCreateModeInput is an input type that accepts values of the DatabaseCreateMode enum
// A concrete instance of `DatabaseCreateModeInput` can be one of the following:
//
//	DatabaseCreateModeDefault
//	DatabaseCreateModePointInTimeRestore
type DatabaseCreateModeInput interface {
	pulumi.Input

	ToDatabaseCreateModeOutput() DatabaseCreateModeOutput
	ToDatabaseCreateModeOutputWithContext(context.Context) DatabaseCreateModeOutput
}

var databaseCreateModePtrType = reflect.TypeOf((**DatabaseCreateMode)(nil)).Elem()

type DatabaseCreateModePtrInput interface {
	pulumi.Input

	ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput
	ToDatabaseCreateModePtrOutputWithContext(context.Context) DatabaseCreateModePtrOutput
}

type databaseCreateModePtr string

func DatabaseCreateModePtr(v string) DatabaseCreateModePtrInput {
	return (*databaseCreateModePtr)(&v)
}

func (*databaseCreateModePtr) ElementType() reflect.Type {
	return databaseCreateModePtrType
}

func (in *databaseCreateModePtr) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return pulumi.ToOutput(in).(DatabaseCreateModePtrOutput)
}

func (in *databaseCreateModePtr) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseCreateModePtrOutput)
}

// State of the database.
type DatabaseState string

const (
	DatabaseStateOnline           = DatabaseState("Online")
	DatabaseStateRestoring        = DatabaseState("Restoring")
	DatabaseStateRecovering       = DatabaseState("Recovering")
	DatabaseStateRecoveryPending  = DatabaseState("RecoveryPending")
	DatabaseStateSuspect          = DatabaseState("Suspect")
	DatabaseStateEmergency        = DatabaseState("Emergency")
	DatabaseStateOffline          = DatabaseState("Offline")
	DatabaseStateCopying          = DatabaseState("Copying")
	DatabaseStateOfflineSecondary = DatabaseState("OfflineSecondary")
)

func (DatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseState)(nil)).Elem()
}

func (e DatabaseState) ToDatabaseStateOutput() DatabaseStateOutput {
	return pulumi.ToOutput(e).(DatabaseStateOutput)
}

func (e DatabaseState) ToDatabaseStateOutputWithContext(ctx context.Context) DatabaseStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseStateOutput)
}

func (e DatabaseState) ToDatabaseStatePtrOutput() DatabaseStatePtrOutput {
	return e.ToDatabaseStatePtrOutputWithContext(context.Background())
}

func (e DatabaseState) ToDatabaseStatePtrOutputWithContext(ctx context.Context) DatabaseStatePtrOutput {
	return DatabaseState(e).ToDatabaseStateOutputWithContext(ctx).ToDatabaseStatePtrOutputWithContext(ctx)
}

func (e DatabaseState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseStateOutput struct{ *pulumi.OutputState }

func (DatabaseStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseState)(nil)).Elem()
}

func (o DatabaseStateOutput) ToDatabaseStateOutput() DatabaseStateOutput {
	return o
}

func (o DatabaseStateOutput) ToDatabaseStateOutputWithContext(ctx context.Context) DatabaseStateOutput {
	return o
}

func (o DatabaseStateOutput) ToDatabaseStatePtrOutput() DatabaseStatePtrOutput {
	return o.ToDatabaseStatePtrOutputWithContext(context.Background())
}

func (o DatabaseStateOutput) ToDatabaseStatePtrOutputWithContext(ctx context.Context) DatabaseStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseState) *DatabaseState {
		return &v
	}).(DatabaseStatePtrOutput)
}

func (o DatabaseStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseStatePtrOutput struct{ *pulumi.OutputState }

func (DatabaseStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseState)(nil)).Elem()
}

func (o DatabaseStatePtrOutput) ToDatabaseStatePtrOutput() DatabaseStatePtrOutput {
	return o
}

func (o DatabaseStatePtrOutput) ToDatabaseStatePtrOutputWithContext(ctx context.Context) DatabaseStatePtrOutput {
	return o
}

func (o DatabaseStatePtrOutput) Elem() DatabaseStateOutput {
	return o.ApplyT(func(v *DatabaseState) DatabaseState {
		if v != nil {
			return *v
		}
		var ret DatabaseState
		return ret
	}).(DatabaseStateOutput)
}

func (o DatabaseStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseStateInput is an input type that accepts values of the DatabaseState enum
// A concrete instance of `DatabaseStateInput` can be one of the following:
//
//	DatabaseStateOnline
//	DatabaseStateRestoring
//	DatabaseStateRecovering
//	DatabaseStateRecoveryPending
//	DatabaseStateSuspect
//	DatabaseStateEmergency
//	DatabaseStateOffline
//	DatabaseStateCopying
//	DatabaseStateOfflineSecondary
type DatabaseStateInput interface {
	pulumi.Input

	ToDatabaseStateOutput() DatabaseStateOutput
	ToDatabaseStateOutputWithContext(context.Context) DatabaseStateOutput
}

var databaseStatePtrType = reflect.TypeOf((**DatabaseState)(nil)).Elem()

type DatabaseStatePtrInput interface {
	pulumi.Input

	ToDatabaseStatePtrOutput() DatabaseStatePtrOutput
	ToDatabaseStatePtrOutputWithContext(context.Context) DatabaseStatePtrOutput
}

type databaseStatePtr string

func DatabaseStatePtr(v string) DatabaseStatePtrInput {
	return (*databaseStatePtr)(&v)
}

func (*databaseStatePtr) ElementType() reflect.Type {
	return databaseStatePtrType
}

func (in *databaseStatePtr) ToDatabaseStatePtrOutput() DatabaseStatePtrOutput {
	return pulumi.ToOutput(in).(DatabaseStatePtrOutput)
}

func (in *databaseStatePtr) ToDatabaseStatePtrOutputWithContext(ctx context.Context) DatabaseStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseStatePtrOutput)
}

// SQL Server edition.
type EditionType string

const (
	EditionTypeEvaluation             = EditionType("Evaluation")
	EditionTypeEnterprise             = EditionType("Enterprise")
	EditionTypeStandard               = EditionType("Standard")
	EditionTypeWeb                    = EditionType("Web")
	EditionTypeDeveloper              = EditionType("Developer")
	EditionTypeExpress                = EditionType("Express")
	EditionType_Business_Intelligence = EditionType("Business Intelligence")
)

func (EditionType) ElementType() reflect.Type {
	return reflect.TypeOf((*EditionType)(nil)).Elem()
}

func (e EditionType) ToEditionTypeOutput() EditionTypeOutput {
	return pulumi.ToOutput(e).(EditionTypeOutput)
}

func (e EditionType) ToEditionTypeOutputWithContext(ctx context.Context) EditionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EditionTypeOutput)
}

func (e EditionType) ToEditionTypePtrOutput() EditionTypePtrOutput {
	return e.ToEditionTypePtrOutputWithContext(context.Background())
}

func (e EditionType) ToEditionTypePtrOutputWithContext(ctx context.Context) EditionTypePtrOutput {
	return EditionType(e).ToEditionTypeOutputWithContext(ctx).ToEditionTypePtrOutputWithContext(ctx)
}

func (e EditionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EditionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EditionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EditionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EditionTypeOutput struct{ *pulumi.OutputState }

func (EditionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EditionType)(nil)).Elem()
}

func (o EditionTypeOutput) ToEditionTypeOutput() EditionTypeOutput {
	return o
}

func (o EditionTypeOutput) ToEditionTypeOutputWithContext(ctx context.Context) EditionTypeOutput {
	return o
}

func (o EditionTypeOutput) ToEditionTypePtrOutput() EditionTypePtrOutput {
	return o.ToEditionTypePtrOutputWithContext(context.Background())
}

func (o EditionTypeOutput) ToEditionTypePtrOutputWithContext(ctx context.Context) EditionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EditionType) *EditionType {
		return &v
	}).(EditionTypePtrOutput)
}

func (o EditionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EditionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EditionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EditionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EditionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EditionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EditionTypePtrOutput struct{ *pulumi.OutputState }

func (EditionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EditionType)(nil)).Elem()
}

func (o EditionTypePtrOutput) ToEditionTypePtrOutput() EditionTypePtrOutput {
	return o
}

func (o EditionTypePtrOutput) ToEditionTypePtrOutputWithContext(ctx context.Context) EditionTypePtrOutput {
	return o
}

func (o EditionTypePtrOutput) Elem() EditionTypeOutput {
	return o.ApplyT(func(v *EditionType) EditionType {
		if v != nil {
			return *v
		}
		var ret EditionType
		return ret
	}).(EditionTypeOutput)
}

func (o EditionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EditionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EditionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EditionTypeInput is an input type that accepts values of the EditionType enum
// A concrete instance of `EditionTypeInput` can be one of the following:
//
//	EditionTypeEvaluation
//	EditionTypeEnterprise
//	EditionTypeStandard
//	EditionTypeWeb
//	EditionTypeDeveloper
//	EditionTypeExpress
//	EditionType_Business_Intelligence
type EditionTypeInput interface {
	pulumi.Input

	ToEditionTypeOutput() EditionTypeOutput
	ToEditionTypeOutputWithContext(context.Context) EditionTypeOutput
}

var editionTypePtrType = reflect.TypeOf((**EditionType)(nil)).Elem()

type EditionTypePtrInput interface {
	pulumi.Input

	ToEditionTypePtrOutput() EditionTypePtrOutput
	ToEditionTypePtrOutputWithContext(context.Context) EditionTypePtrOutput
}

type editionTypePtr string

func EditionTypePtr(v string) EditionTypePtrInput {
	return (*editionTypePtr)(&v)
}

func (*editionTypePtr) ElementType() reflect.Type {
	return editionTypePtrType
}

func (in *editionTypePtr) ToEditionTypePtrOutput() EditionTypePtrOutput {
	return pulumi.ToOutput(in).(EditionTypePtrOutput)
}

func (in *editionTypePtr) ToEditionTypePtrOutputWithContext(ctx context.Context) EditionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EditionTypePtrOutput)
}

// The type of the extended location.
type ExtendedLocationTypes string

const (
	ExtendedLocationTypesCustomLocation = ExtendedLocationTypes("CustomLocation")
)

func (ExtendedLocationTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return e.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return ExtendedLocationTypes(e).ToExtendedLocationTypesOutputWithContext(ctx).ToExtendedLocationTypesPtrOutputWithContext(ctx)
}

func (e ExtendedLocationTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypesOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationTypes) *ExtendedLocationTypes {
		return &v
	}).(ExtendedLocationTypesPtrOutput)
}

func (o ExtendedLocationTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypesPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) Elem() ExtendedLocationTypesOutput {
	return o.ApplyT(func(v *ExtendedLocationTypes) ExtendedLocationTypes {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationTypes
		return ret
	}).(ExtendedLocationTypesOutput)
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypesInput is an input type that accepts values of the ExtendedLocationTypes enum
// A concrete instance of `ExtendedLocationTypesInput` can be one of the following:
//
//	ExtendedLocationTypesCustomLocation
type ExtendedLocationTypesInput interface {
	pulumi.Input

	ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput
	ToExtendedLocationTypesOutputWithContext(context.Context) ExtendedLocationTypesOutput
}

var extendedLocationTypesPtrType = reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()

type ExtendedLocationTypesPtrInput interface {
	pulumi.Input

	ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput
	ToExtendedLocationTypesPtrOutputWithContext(context.Context) ExtendedLocationTypesPtrOutput
}

type extendedLocationTypesPtr string

func ExtendedLocationTypesPtr(v string) ExtendedLocationTypesPtrInput {
	return (*extendedLocationTypesPtr)(&v)
}

func (*extendedLocationTypesPtr) ElementType() reflect.Type {
	return extendedLocationTypesPtrType
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypesPtrOutput)
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypesPtrOutput)
}

// The partner sync mode of the SQL managed instance.
type FailoverGroupPartnerSyncMode string

const (
	FailoverGroupPartnerSyncModeAsync = FailoverGroupPartnerSyncMode("async")
	FailoverGroupPartnerSyncModeSync  = FailoverGroupPartnerSyncMode("sync")
)

func (FailoverGroupPartnerSyncMode) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupPartnerSyncMode)(nil)).Elem()
}

func (e FailoverGroupPartnerSyncMode) ToFailoverGroupPartnerSyncModeOutput() FailoverGroupPartnerSyncModeOutput {
	return pulumi.ToOutput(e).(FailoverGroupPartnerSyncModeOutput)
}

func (e FailoverGroupPartnerSyncMode) ToFailoverGroupPartnerSyncModeOutputWithContext(ctx context.Context) FailoverGroupPartnerSyncModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FailoverGroupPartnerSyncModeOutput)
}

func (e FailoverGroupPartnerSyncMode) ToFailoverGroupPartnerSyncModePtrOutput() FailoverGroupPartnerSyncModePtrOutput {
	return e.ToFailoverGroupPartnerSyncModePtrOutputWithContext(context.Background())
}

func (e FailoverGroupPartnerSyncMode) ToFailoverGroupPartnerSyncModePtrOutputWithContext(ctx context.Context) FailoverGroupPartnerSyncModePtrOutput {
	return FailoverGroupPartnerSyncMode(e).ToFailoverGroupPartnerSyncModeOutputWithContext(ctx).ToFailoverGroupPartnerSyncModePtrOutputWithContext(ctx)
}

func (e FailoverGroupPartnerSyncMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FailoverGroupPartnerSyncMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FailoverGroupPartnerSyncMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FailoverGroupPartnerSyncMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FailoverGroupPartnerSyncModeOutput struct{ *pulumi.OutputState }

func (FailoverGroupPartnerSyncModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupPartnerSyncMode)(nil)).Elem()
}

func (o FailoverGroupPartnerSyncModeOutput) ToFailoverGroupPartnerSyncModeOutput() FailoverGroupPartnerSyncModeOutput {
	return o
}

func (o FailoverGroupPartnerSyncModeOutput) ToFailoverGroupPartnerSyncModeOutputWithContext(ctx context.Context) FailoverGroupPartnerSyncModeOutput {
	return o
}

func (o FailoverGroupPartnerSyncModeOutput) ToFailoverGroupPartnerSyncModePtrOutput() FailoverGroupPartnerSyncModePtrOutput {
	return o.ToFailoverGroupPartnerSyncModePtrOutputWithContext(context.Background())
}

func (o FailoverGroupPartnerSyncModeOutput) ToFailoverGroupPartnerSyncModePtrOutputWithContext(ctx context.Context) FailoverGroupPartnerSyncModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FailoverGroupPartnerSyncMode) *FailoverGroupPartnerSyncMode {
		return &v
	}).(FailoverGroupPartnerSyncModePtrOutput)
}

func (o FailoverGroupPartnerSyncModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FailoverGroupPartnerSyncModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FailoverGroupPartnerSyncMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FailoverGroupPartnerSyncModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FailoverGroupPartnerSyncModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FailoverGroupPartnerSyncMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FailoverGroupPartnerSyncModePtrOutput struct{ *pulumi.OutputState }

func (FailoverGroupPartnerSyncModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverGroupPartnerSyncMode)(nil)).Elem()
}

func (o FailoverGroupPartnerSyncModePtrOutput) ToFailoverGroupPartnerSyncModePtrOutput() FailoverGroupPartnerSyncModePtrOutput {
	return o
}

func (o FailoverGroupPartnerSyncModePtrOutput) ToFailoverGroupPartnerSyncModePtrOutputWithContext(ctx context.Context) FailoverGroupPartnerSyncModePtrOutput {
	return o
}

func (o FailoverGroupPartnerSyncModePtrOutput) Elem() FailoverGroupPartnerSyncModeOutput {
	return o.ApplyT(func(v *FailoverGroupPartnerSyncMode) FailoverGroupPartnerSyncMode {
		if v != nil {
			return *v
		}
		var ret FailoverGroupPartnerSyncMode
		return ret
	}).(FailoverGroupPartnerSyncModeOutput)
}

func (o FailoverGroupPartnerSyncModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FailoverGroupPartnerSyncModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FailoverGroupPartnerSyncMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FailoverGroupPartnerSyncModeInput is an input type that accepts values of the FailoverGroupPartnerSyncMode enum
// A concrete instance of `FailoverGroupPartnerSyncModeInput` can be one of the following:
//
//	FailoverGroupPartnerSyncModeAsync
//	FailoverGroupPartnerSyncModeSync
type FailoverGroupPartnerSyncModeInput interface {
	pulumi.Input

	ToFailoverGroupPartnerSyncModeOutput() FailoverGroupPartnerSyncModeOutput
	ToFailoverGroupPartnerSyncModeOutputWithContext(context.Context) FailoverGroupPartnerSyncModeOutput
}

var failoverGroupPartnerSyncModePtrType = reflect.TypeOf((**FailoverGroupPartnerSyncMode)(nil)).Elem()

type FailoverGroupPartnerSyncModePtrInput interface {
	pulumi.Input

	ToFailoverGroupPartnerSyncModePtrOutput() FailoverGroupPartnerSyncModePtrOutput
	ToFailoverGroupPartnerSyncModePtrOutputWithContext(context.Context) FailoverGroupPartnerSyncModePtrOutput
}

type failoverGroupPartnerSyncModePtr string

func FailoverGroupPartnerSyncModePtr(v string) FailoverGroupPartnerSyncModePtrInput {
	return (*failoverGroupPartnerSyncModePtr)(&v)
}

func (*failoverGroupPartnerSyncModePtr) ElementType() reflect.Type {
	return failoverGroupPartnerSyncModePtrType
}

func (in *failoverGroupPartnerSyncModePtr) ToFailoverGroupPartnerSyncModePtrOutput() FailoverGroupPartnerSyncModePtrOutput {
	return pulumi.ToOutput(in).(FailoverGroupPartnerSyncModePtrOutput)
}

func (in *failoverGroupPartnerSyncModePtr) ToFailoverGroupPartnerSyncModePtrOutputWithContext(ctx context.Context) FailoverGroupPartnerSyncModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FailoverGroupPartnerSyncModePtrOutput)
}

// Type of host for Azure Arc SQL Server
type HostType string

const (
	HostType_Azure_Virtual_Machine        = HostType("Azure Virtual Machine")
	HostType_Azure_VMWare_Virtual_Machine = HostType("Azure VMWare Virtual Machine")
	HostType_Azure_Kubernetes_Service     = HostType("Azure Kubernetes Service")
	HostType_AWS_VMWare_Virtual_Machine   = HostType("AWS VMWare Virtual Machine")
	HostType_AWS_Kubernetes_Service       = HostType("AWS Kubernetes Service")
	HostType_GCP_VMWare_Virtual_Machine   = HostType("GCP VMWare Virtual Machine")
	HostType_GCP_Kubernetes_Service       = HostType("GCP Kubernetes Service")
	HostTypeContainer                     = HostType("Container")
	HostType_Virtual_Machine              = HostType("Virtual Machine")
	HostType_Physical_Server              = HostType("Physical Server")
	HostType_AWS_Virtual_Machine          = HostType("AWS Virtual Machine")
	HostType_GCP_Virtual_Machine          = HostType("GCP Virtual Machine")
	HostTypeOther                         = HostType("Other")
)

func (HostType) ElementType() reflect.Type {
	return reflect.TypeOf((*HostType)(nil)).Elem()
}

func (e HostType) ToHostTypeOutput() HostTypeOutput {
	return pulumi.ToOutput(e).(HostTypeOutput)
}

func (e HostType) ToHostTypeOutputWithContext(ctx context.Context) HostTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HostTypeOutput)
}

func (e HostType) ToHostTypePtrOutput() HostTypePtrOutput {
	return e.ToHostTypePtrOutputWithContext(context.Background())
}

func (e HostType) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return HostType(e).ToHostTypeOutputWithContext(ctx).ToHostTypePtrOutputWithContext(ctx)
}

func (e HostType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HostType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HostTypeOutput struct{ *pulumi.OutputState }

func (HostTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostType)(nil)).Elem()
}

func (o HostTypeOutput) ToHostTypeOutput() HostTypeOutput {
	return o
}

func (o HostTypeOutput) ToHostTypeOutputWithContext(ctx context.Context) HostTypeOutput {
	return o
}

func (o HostTypeOutput) ToHostTypePtrOutput() HostTypePtrOutput {
	return o.ToHostTypePtrOutputWithContext(context.Background())
}

func (o HostTypeOutput) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostType) *HostType {
		return &v
	}).(HostTypePtrOutput)
}

func (o HostTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HostTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HostTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HostTypePtrOutput struct{ *pulumi.OutputState }

func (HostTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostType)(nil)).Elem()
}

func (o HostTypePtrOutput) ToHostTypePtrOutput() HostTypePtrOutput {
	return o
}

func (o HostTypePtrOutput) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return o
}

func (o HostTypePtrOutput) Elem() HostTypeOutput {
	return o.ApplyT(func(v *HostType) HostType {
		if v != nil {
			return *v
		}
		var ret HostType
		return ret
	}).(HostTypeOutput)
}

func (o HostTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HostType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HostTypeInput is an input type that accepts values of the HostType enum
// A concrete instance of `HostTypeInput` can be one of the following:
//
//	HostType_Azure_Virtual_Machine
//	HostType_Azure_VMWare_Virtual_Machine
//	HostType_Azure_Kubernetes_Service
//	HostType_AWS_VMWare_Virtual_Machine
//	HostType_AWS_Kubernetes_Service
//	HostType_GCP_VMWare_Virtual_Machine
//	HostType_GCP_Kubernetes_Service
//	HostTypeContainer
//	HostType_Virtual_Machine
//	HostType_Physical_Server
//	HostType_AWS_Virtual_Machine
//	HostType_GCP_Virtual_Machine
//	HostTypeOther
type HostTypeInput interface {
	pulumi.Input

	ToHostTypeOutput() HostTypeOutput
	ToHostTypeOutputWithContext(context.Context) HostTypeOutput
}

var hostTypePtrType = reflect.TypeOf((**HostType)(nil)).Elem()

type HostTypePtrInput interface {
	pulumi.Input

	ToHostTypePtrOutput() HostTypePtrOutput
	ToHostTypePtrOutputWithContext(context.Context) HostTypePtrOutput
}

type hostTypePtr string

func HostTypePtr(v string) HostTypePtrInput {
	return (*hostTypePtr)(&v)
}

func (*hostTypePtr) ElementType() reflect.Type {
	return hostTypePtrType
}

func (in *hostTypePtr) ToHostTypePtrOutput() HostTypePtrOutput {
	return pulumi.ToOutput(in).(HostTypePtrOutput)
}

func (in *hostTypePtr) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HostTypePtrOutput)
}

// The infrastructure the data controller is running on.
type Infrastructure string

const (
	InfrastructureAzure      = Infrastructure("azure")
	InfrastructureGcp        = Infrastructure("gcp")
	InfrastructureAws        = Infrastructure("aws")
	InfrastructureAlibaba    = Infrastructure("alibaba")
	InfrastructureOnpremises = Infrastructure("onpremises")
	InfrastructureOther      = Infrastructure("other")
)

func (Infrastructure) ElementType() reflect.Type {
	return reflect.TypeOf((*Infrastructure)(nil)).Elem()
}

func (e Infrastructure) ToInfrastructureOutput() InfrastructureOutput {
	return pulumi.ToOutput(e).(InfrastructureOutput)
}

func (e Infrastructure) ToInfrastructureOutputWithContext(ctx context.Context) InfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InfrastructureOutput)
}

func (e Infrastructure) ToInfrastructurePtrOutput() InfrastructurePtrOutput {
	return e.ToInfrastructurePtrOutputWithContext(context.Background())
}

func (e Infrastructure) ToInfrastructurePtrOutputWithContext(ctx context.Context) InfrastructurePtrOutput {
	return Infrastructure(e).ToInfrastructureOutputWithContext(ctx).ToInfrastructurePtrOutputWithContext(ctx)
}

func (e Infrastructure) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Infrastructure) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Infrastructure) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Infrastructure) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InfrastructureOutput struct{ *pulumi.OutputState }

func (InfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Infrastructure)(nil)).Elem()
}

func (o InfrastructureOutput) ToInfrastructureOutput() InfrastructureOutput {
	return o
}

func (o InfrastructureOutput) ToInfrastructureOutputWithContext(ctx context.Context) InfrastructureOutput {
	return o
}

func (o InfrastructureOutput) ToInfrastructurePtrOutput() InfrastructurePtrOutput {
	return o.ToInfrastructurePtrOutputWithContext(context.Background())
}

func (o InfrastructureOutput) ToInfrastructurePtrOutputWithContext(ctx context.Context) InfrastructurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Infrastructure) *Infrastructure {
		return &v
	}).(InfrastructurePtrOutput)
}

func (o InfrastructureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InfrastructureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Infrastructure) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InfrastructureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InfrastructureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Infrastructure) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InfrastructurePtrOutput struct{ *pulumi.OutputState }

func (InfrastructurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Infrastructure)(nil)).Elem()
}

func (o InfrastructurePtrOutput) ToInfrastructurePtrOutput() InfrastructurePtrOutput {
	return o
}

func (o InfrastructurePtrOutput) ToInfrastructurePtrOutputWithContext(ctx context.Context) InfrastructurePtrOutput {
	return o
}

func (o InfrastructurePtrOutput) Elem() InfrastructureOutput {
	return o.ApplyT(func(v *Infrastructure) Infrastructure {
		if v != nil {
			return *v
		}
		var ret Infrastructure
		return ret
	}).(InfrastructureOutput)
}

func (o InfrastructurePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InfrastructurePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Infrastructure) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InfrastructureInput is an input type that accepts values of the Infrastructure enum
// A concrete instance of `InfrastructureInput` can be one of the following:
//
//	InfrastructureAzure
//	InfrastructureGcp
//	InfrastructureAws
//	InfrastructureAlibaba
//	InfrastructureOnpremises
//	InfrastructureOther
type InfrastructureInput interface {
	pulumi.Input

	ToInfrastructureOutput() InfrastructureOutput
	ToInfrastructureOutputWithContext(context.Context) InfrastructureOutput
}

var infrastructurePtrType = reflect.TypeOf((**Infrastructure)(nil)).Elem()

type InfrastructurePtrInput interface {
	pulumi.Input

	ToInfrastructurePtrOutput() InfrastructurePtrOutput
	ToInfrastructurePtrOutputWithContext(context.Context) InfrastructurePtrOutput
}

type infrastructurePtr string

func InfrastructurePtr(v string) InfrastructurePtrInput {
	return (*infrastructurePtr)(&v)
}

func (*infrastructurePtr) ElementType() reflect.Type {
	return infrastructurePtrType
}

func (in *infrastructurePtr) ToInfrastructurePtrOutput() InfrastructurePtrOutput {
	return pulumi.ToOutput(in).(InfrastructurePtrOutput)
}

func (in *infrastructurePtr) ToInfrastructurePtrOutputWithContext(ctx context.Context) InfrastructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InfrastructurePtrOutput)
}

// The role of the SQL managed instance in this failover group.
type InstanceFailoverGroupRole string

const (
	InstanceFailoverGroupRolePrimary                        = InstanceFailoverGroupRole("primary")
	InstanceFailoverGroupRoleSecondary                      = InstanceFailoverGroupRole("secondary")
	InstanceFailoverGroupRole_Force_Primary_Allow_Data_Loss = InstanceFailoverGroupRole("force-primary-allow-data-loss")
	InstanceFailoverGroupRole_Force_Secondary               = InstanceFailoverGroupRole("force-secondary")
)

func (InstanceFailoverGroupRole) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFailoverGroupRole)(nil)).Elem()
}

func (e InstanceFailoverGroupRole) ToInstanceFailoverGroupRoleOutput() InstanceFailoverGroupRoleOutput {
	return pulumi.ToOutput(e).(InstanceFailoverGroupRoleOutput)
}

func (e InstanceFailoverGroupRole) ToInstanceFailoverGroupRoleOutputWithContext(ctx context.Context) InstanceFailoverGroupRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceFailoverGroupRoleOutput)
}

func (e InstanceFailoverGroupRole) ToInstanceFailoverGroupRolePtrOutput() InstanceFailoverGroupRolePtrOutput {
	return e.ToInstanceFailoverGroupRolePtrOutputWithContext(context.Background())
}

func (e InstanceFailoverGroupRole) ToInstanceFailoverGroupRolePtrOutputWithContext(ctx context.Context) InstanceFailoverGroupRolePtrOutput {
	return InstanceFailoverGroupRole(e).ToInstanceFailoverGroupRoleOutputWithContext(ctx).ToInstanceFailoverGroupRolePtrOutputWithContext(ctx)
}

func (e InstanceFailoverGroupRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceFailoverGroupRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceFailoverGroupRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceFailoverGroupRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceFailoverGroupRoleOutput struct{ *pulumi.OutputState }

func (InstanceFailoverGroupRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFailoverGroupRole)(nil)).Elem()
}

func (o InstanceFailoverGroupRoleOutput) ToInstanceFailoverGroupRoleOutput() InstanceFailoverGroupRoleOutput {
	return o
}

func (o InstanceFailoverGroupRoleOutput) ToInstanceFailoverGroupRoleOutputWithContext(ctx context.Context) InstanceFailoverGroupRoleOutput {
	return o
}

func (o InstanceFailoverGroupRoleOutput) ToInstanceFailoverGroupRolePtrOutput() InstanceFailoverGroupRolePtrOutput {
	return o.ToInstanceFailoverGroupRolePtrOutputWithContext(context.Background())
}

func (o InstanceFailoverGroupRoleOutput) ToInstanceFailoverGroupRolePtrOutputWithContext(ctx context.Context) InstanceFailoverGroupRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceFailoverGroupRole) *InstanceFailoverGroupRole {
		return &v
	}).(InstanceFailoverGroupRolePtrOutput)
}

func (o InstanceFailoverGroupRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceFailoverGroupRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceFailoverGroupRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceFailoverGroupRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceFailoverGroupRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceFailoverGroupRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceFailoverGroupRolePtrOutput struct{ *pulumi.OutputState }

func (InstanceFailoverGroupRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceFailoverGroupRole)(nil)).Elem()
}

func (o InstanceFailoverGroupRolePtrOutput) ToInstanceFailoverGroupRolePtrOutput() InstanceFailoverGroupRolePtrOutput {
	return o
}

func (o InstanceFailoverGroupRolePtrOutput) ToInstanceFailoverGroupRolePtrOutputWithContext(ctx context.Context) InstanceFailoverGroupRolePtrOutput {
	return o
}

func (o InstanceFailoverGroupRolePtrOutput) Elem() InstanceFailoverGroupRoleOutput {
	return o.ApplyT(func(v *InstanceFailoverGroupRole) InstanceFailoverGroupRole {
		if v != nil {
			return *v
		}
		var ret InstanceFailoverGroupRole
		return ret
	}).(InstanceFailoverGroupRoleOutput)
}

func (o InstanceFailoverGroupRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceFailoverGroupRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceFailoverGroupRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceFailoverGroupRoleInput is an input type that accepts values of the InstanceFailoverGroupRole enum
// A concrete instance of `InstanceFailoverGroupRoleInput` can be one of the following:
//
//	InstanceFailoverGroupRolePrimary
//	InstanceFailoverGroupRoleSecondary
//	InstanceFailoverGroupRole_Force_Primary_Allow_Data_Loss
//	InstanceFailoverGroupRole_Force_Secondary
type InstanceFailoverGroupRoleInput interface {
	pulumi.Input

	ToInstanceFailoverGroupRoleOutput() InstanceFailoverGroupRoleOutput
	ToInstanceFailoverGroupRoleOutputWithContext(context.Context) InstanceFailoverGroupRoleOutput
}

var instanceFailoverGroupRolePtrType = reflect.TypeOf((**InstanceFailoverGroupRole)(nil)).Elem()

type InstanceFailoverGroupRolePtrInput interface {
	pulumi.Input

	ToInstanceFailoverGroupRolePtrOutput() InstanceFailoverGroupRolePtrOutput
	ToInstanceFailoverGroupRolePtrOutputWithContext(context.Context) InstanceFailoverGroupRolePtrOutput
}

type instanceFailoverGroupRolePtr string

func InstanceFailoverGroupRolePtr(v string) InstanceFailoverGroupRolePtrInput {
	return (*instanceFailoverGroupRolePtr)(&v)
}

func (*instanceFailoverGroupRolePtr) ElementType() reflect.Type {
	return instanceFailoverGroupRolePtrType
}

func (in *instanceFailoverGroupRolePtr) ToInstanceFailoverGroupRolePtrOutput() InstanceFailoverGroupRolePtrOutput {
	return pulumi.ToOutput(in).(InstanceFailoverGroupRolePtrOutput)
}

func (in *instanceFailoverGroupRolePtr) ToInstanceFailoverGroupRolePtrOutputWithContext(ctx context.Context) InstanceFailoverGroupRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceFailoverGroupRolePtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
type PostgresInstanceSkuTier string

const (
	PostgresInstanceSkuTierHyperscale = PostgresInstanceSkuTier("Hyperscale")
)

func (PostgresInstanceSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSkuTier)(nil)).Elem()
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierOutput() PostgresInstanceSkuTierOutput {
	return pulumi.ToOutput(e).(PostgresInstanceSkuTierOutput)
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierOutputWithContext(ctx context.Context) PostgresInstanceSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PostgresInstanceSkuTierOutput)
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return e.ToPostgresInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return PostgresInstanceSkuTier(e).ToPostgresInstanceSkuTierOutputWithContext(ctx).ToPostgresInstanceSkuTierPtrOutputWithContext(ctx)
}

func (e PostgresInstanceSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PostgresInstanceSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PostgresInstanceSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PostgresInstanceSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PostgresInstanceSkuTierOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSkuTier)(nil)).Elem()
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierOutput() PostgresInstanceSkuTierOutput {
	return o
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierOutputWithContext(ctx context.Context) PostgresInstanceSkuTierOutput {
	return o
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return o.ToPostgresInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresInstanceSkuTier) *PostgresInstanceSkuTier {
		return &v
	}).(PostgresInstanceSkuTierPtrOutput)
}

func (o PostgresInstanceSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresInstanceSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresInstanceSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresInstanceSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresInstanceSkuTierPtrOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInstanceSkuTier)(nil)).Elem()
}

func (o PostgresInstanceSkuTierPtrOutput) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return o
}

func (o PostgresInstanceSkuTierPtrOutput) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return o
}

func (o PostgresInstanceSkuTierPtrOutput) Elem() PostgresInstanceSkuTierOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuTier) PostgresInstanceSkuTier {
		if v != nil {
			return *v
		}
		var ret PostgresInstanceSkuTier
		return ret
	}).(PostgresInstanceSkuTierOutput)
}

func (o PostgresInstanceSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresInstanceSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PostgresInstanceSkuTierInput is an input type that accepts values of the PostgresInstanceSkuTier enum
// A concrete instance of `PostgresInstanceSkuTierInput` can be one of the following:
//
//	PostgresInstanceSkuTierHyperscale
type PostgresInstanceSkuTierInput interface {
	pulumi.Input

	ToPostgresInstanceSkuTierOutput() PostgresInstanceSkuTierOutput
	ToPostgresInstanceSkuTierOutputWithContext(context.Context) PostgresInstanceSkuTierOutput
}

var postgresInstanceSkuTierPtrType = reflect.TypeOf((**PostgresInstanceSkuTier)(nil)).Elem()

type PostgresInstanceSkuTierPtrInput interface {
	pulumi.Input

	ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput
	ToPostgresInstanceSkuTierPtrOutputWithContext(context.Context) PostgresInstanceSkuTierPtrOutput
}

type postgresInstanceSkuTierPtr string

func PostgresInstanceSkuTierPtr(v string) PostgresInstanceSkuTierPtrInput {
	return (*postgresInstanceSkuTierPtr)(&v)
}

func (*postgresInstanceSkuTierPtr) ElementType() reflect.Type {
	return postgresInstanceSkuTierPtrType
}

func (in *postgresInstanceSkuTierPtr) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return pulumi.ToOutput(in).(PostgresInstanceSkuTierPtrOutput)
}

func (in *postgresInstanceSkuTierPtr) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PostgresInstanceSkuTierPtrOutput)
}

// Status of the database.
type RecoveryMode string

const (
	RecoveryModeFull         = RecoveryMode("Full")
	RecoveryMode_Bulk_Logged = RecoveryMode("Bulk-logged")
	RecoveryModeSimple       = RecoveryMode("Simple")
)

func (RecoveryMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryMode)(nil)).Elem()
}

func (e RecoveryMode) ToRecoveryModeOutput() RecoveryModeOutput {
	return pulumi.ToOutput(e).(RecoveryModeOutput)
}

func (e RecoveryMode) ToRecoveryModeOutputWithContext(ctx context.Context) RecoveryModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecoveryModeOutput)
}

func (e RecoveryMode) ToRecoveryModePtrOutput() RecoveryModePtrOutput {
	return e.ToRecoveryModePtrOutputWithContext(context.Background())
}

func (e RecoveryMode) ToRecoveryModePtrOutputWithContext(ctx context.Context) RecoveryModePtrOutput {
	return RecoveryMode(e).ToRecoveryModeOutputWithContext(ctx).ToRecoveryModePtrOutputWithContext(ctx)
}

func (e RecoveryMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecoveryMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecoveryMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecoveryMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecoveryModeOutput struct{ *pulumi.OutputState }

func (RecoveryModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryMode)(nil)).Elem()
}

func (o RecoveryModeOutput) ToRecoveryModeOutput() RecoveryModeOutput {
	return o
}

func (o RecoveryModeOutput) ToRecoveryModeOutputWithContext(ctx context.Context) RecoveryModeOutput {
	return o
}

func (o RecoveryModeOutput) ToRecoveryModePtrOutput() RecoveryModePtrOutput {
	return o.ToRecoveryModePtrOutputWithContext(context.Background())
}

func (o RecoveryModeOutput) ToRecoveryModePtrOutputWithContext(ctx context.Context) RecoveryModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryMode) *RecoveryMode {
		return &v
	}).(RecoveryModePtrOutput)
}

func (o RecoveryModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecoveryModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecoveryMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecoveryModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecoveryModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecoveryMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecoveryModePtrOutput struct{ *pulumi.OutputState }

func (RecoveryModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryMode)(nil)).Elem()
}

func (o RecoveryModePtrOutput) ToRecoveryModePtrOutput() RecoveryModePtrOutput {
	return o
}

func (o RecoveryModePtrOutput) ToRecoveryModePtrOutputWithContext(ctx context.Context) RecoveryModePtrOutput {
	return o
}

func (o RecoveryModePtrOutput) Elem() RecoveryModeOutput {
	return o.ApplyT(func(v *RecoveryMode) RecoveryMode {
		if v != nil {
			return *v
		}
		var ret RecoveryMode
		return ret
	}).(RecoveryModeOutput)
}

func (o RecoveryModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecoveryModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecoveryMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecoveryModeInput is an input type that accepts values of the RecoveryMode enum
// A concrete instance of `RecoveryModeInput` can be one of the following:
//
//	RecoveryModeFull
//	RecoveryMode_Bulk_Logged
//	RecoveryModeSimple
type RecoveryModeInput interface {
	pulumi.Input

	ToRecoveryModeOutput() RecoveryModeOutput
	ToRecoveryModeOutputWithContext(context.Context) RecoveryModeOutput
}

var recoveryModePtrType = reflect.TypeOf((**RecoveryMode)(nil)).Elem()

type RecoveryModePtrInput interface {
	pulumi.Input

	ToRecoveryModePtrOutput() RecoveryModePtrOutput
	ToRecoveryModePtrOutputWithContext(context.Context) RecoveryModePtrOutput
}

type recoveryModePtr string

func RecoveryModePtr(v string) RecoveryModePtrInput {
	return (*recoveryModePtr)(&v)
}

func (*recoveryModePtr) ElementType() reflect.Type {
	return recoveryModePtrType
}

func (in *recoveryModePtr) ToRecoveryModePtrOutput() RecoveryModePtrOutput {
	return pulumi.ToOutput(in).(RecoveryModePtrOutput)
}

func (in *recoveryModePtr) ToRecoveryModePtrOutputWithContext(ctx context.Context) RecoveryModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecoveryModePtrOutput)
}

// The name of the SKU.
type SqlManagedInstanceSkuName string

const (
	SqlManagedInstanceSkuNameVCore = SqlManagedInstanceSkuName("vCore")
)

func (SqlManagedInstanceSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuName)(nil)).Elem()
}

func (e SqlManagedInstanceSkuName) ToSqlManagedInstanceSkuNameOutput() SqlManagedInstanceSkuNameOutput {
	return pulumi.ToOutput(e).(SqlManagedInstanceSkuNameOutput)
}

func (e SqlManagedInstanceSkuName) ToSqlManagedInstanceSkuNameOutputWithContext(ctx context.Context) SqlManagedInstanceSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SqlManagedInstanceSkuNameOutput)
}

func (e SqlManagedInstanceSkuName) ToSqlManagedInstanceSkuNamePtrOutput() SqlManagedInstanceSkuNamePtrOutput {
	return e.ToSqlManagedInstanceSkuNamePtrOutputWithContext(context.Background())
}

func (e SqlManagedInstanceSkuName) ToSqlManagedInstanceSkuNamePtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuNamePtrOutput {
	return SqlManagedInstanceSkuName(e).ToSqlManagedInstanceSkuNameOutputWithContext(ctx).ToSqlManagedInstanceSkuNamePtrOutputWithContext(ctx)
}

func (e SqlManagedInstanceSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlManagedInstanceSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlManagedInstanceSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlManagedInstanceSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SqlManagedInstanceSkuNameOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuName)(nil)).Elem()
}

func (o SqlManagedInstanceSkuNameOutput) ToSqlManagedInstanceSkuNameOutput() SqlManagedInstanceSkuNameOutput {
	return o
}

func (o SqlManagedInstanceSkuNameOutput) ToSqlManagedInstanceSkuNameOutputWithContext(ctx context.Context) SqlManagedInstanceSkuNameOutput {
	return o
}

func (o SqlManagedInstanceSkuNameOutput) ToSqlManagedInstanceSkuNamePtrOutput() SqlManagedInstanceSkuNamePtrOutput {
	return o.ToSqlManagedInstanceSkuNamePtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuNameOutput) ToSqlManagedInstanceSkuNamePtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlManagedInstanceSkuName) *SqlManagedInstanceSkuName {
		return &v
	}).(SqlManagedInstanceSkuNamePtrOutput)
}

func (o SqlManagedInstanceSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlManagedInstanceSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SqlManagedInstanceSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlManagedInstanceSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SqlManagedInstanceSkuNamePtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceSkuName)(nil)).Elem()
}

func (o SqlManagedInstanceSkuNamePtrOutput) ToSqlManagedInstanceSkuNamePtrOutput() SqlManagedInstanceSkuNamePtrOutput {
	return o
}

func (o SqlManagedInstanceSkuNamePtrOutput) ToSqlManagedInstanceSkuNamePtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuNamePtrOutput {
	return o
}

func (o SqlManagedInstanceSkuNamePtrOutput) Elem() SqlManagedInstanceSkuNameOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuName) SqlManagedInstanceSkuName {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceSkuName
		return ret
	}).(SqlManagedInstanceSkuNameOutput)
}

func (o SqlManagedInstanceSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SqlManagedInstanceSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SqlManagedInstanceSkuNameInput is an input type that accepts values of the SqlManagedInstanceSkuName enum
// A concrete instance of `SqlManagedInstanceSkuNameInput` can be one of the following:
//
//	SqlManagedInstanceSkuNameVCore
type SqlManagedInstanceSkuNameInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuNameOutput() SqlManagedInstanceSkuNameOutput
	ToSqlManagedInstanceSkuNameOutputWithContext(context.Context) SqlManagedInstanceSkuNameOutput
}

var sqlManagedInstanceSkuNamePtrType = reflect.TypeOf((**SqlManagedInstanceSkuName)(nil)).Elem()

type SqlManagedInstanceSkuNamePtrInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuNamePtrOutput() SqlManagedInstanceSkuNamePtrOutput
	ToSqlManagedInstanceSkuNamePtrOutputWithContext(context.Context) SqlManagedInstanceSkuNamePtrOutput
}

type sqlManagedInstanceSkuNamePtr string

func SqlManagedInstanceSkuNamePtr(v string) SqlManagedInstanceSkuNamePtrInput {
	return (*sqlManagedInstanceSkuNamePtr)(&v)
}

func (*sqlManagedInstanceSkuNamePtr) ElementType() reflect.Type {
	return sqlManagedInstanceSkuNamePtrType
}

func (in *sqlManagedInstanceSkuNamePtr) ToSqlManagedInstanceSkuNamePtrOutput() SqlManagedInstanceSkuNamePtrOutput {
	return pulumi.ToOutput(in).(SqlManagedInstanceSkuNamePtrOutput)
}

func (in *sqlManagedInstanceSkuNamePtr) ToSqlManagedInstanceSkuNamePtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SqlManagedInstanceSkuNamePtrOutput)
}

// The pricing tier for the instance.
type SqlManagedInstanceSkuTier string

const (
	SqlManagedInstanceSkuTierGeneralPurpose   = SqlManagedInstanceSkuTier("GeneralPurpose")
	SqlManagedInstanceSkuTierBusinessCritical = SqlManagedInstanceSkuTier("BusinessCritical")
)

func (SqlManagedInstanceSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuTier)(nil)).Elem()
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierOutput() SqlManagedInstanceSkuTierOutput {
	return pulumi.ToOutput(e).(SqlManagedInstanceSkuTierOutput)
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SqlManagedInstanceSkuTierOutput)
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return e.ToSqlManagedInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return SqlManagedInstanceSkuTier(e).ToSqlManagedInstanceSkuTierOutputWithContext(ctx).ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx)
}

func (e SqlManagedInstanceSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlManagedInstanceSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlManagedInstanceSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlManagedInstanceSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SqlManagedInstanceSkuTierOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuTier)(nil)).Elem()
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierOutput() SqlManagedInstanceSkuTierOutput {
	return o
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierOutput {
	return o
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return o.ToSqlManagedInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlManagedInstanceSkuTier) *SqlManagedInstanceSkuTier {
		return &v
	}).(SqlManagedInstanceSkuTierPtrOutput)
}

func (o SqlManagedInstanceSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlManagedInstanceSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SqlManagedInstanceSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlManagedInstanceSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SqlManagedInstanceSkuTierPtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceSkuTier)(nil)).Elem()
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return o
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return o
}

func (o SqlManagedInstanceSkuTierPtrOutput) Elem() SqlManagedInstanceSkuTierOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuTier) SqlManagedInstanceSkuTier {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceSkuTier
		return ret
	}).(SqlManagedInstanceSkuTierOutput)
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SqlManagedInstanceSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SqlManagedInstanceSkuTierInput is an input type that accepts values of the SqlManagedInstanceSkuTier enum
// A concrete instance of `SqlManagedInstanceSkuTierInput` can be one of the following:
//
//	SqlManagedInstanceSkuTierGeneralPurpose
//	SqlManagedInstanceSkuTierBusinessCritical
type SqlManagedInstanceSkuTierInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuTierOutput() SqlManagedInstanceSkuTierOutput
	ToSqlManagedInstanceSkuTierOutputWithContext(context.Context) SqlManagedInstanceSkuTierOutput
}

var sqlManagedInstanceSkuTierPtrType = reflect.TypeOf((**SqlManagedInstanceSkuTier)(nil)).Elem()

type SqlManagedInstanceSkuTierPtrInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput
	ToSqlManagedInstanceSkuTierPtrOutputWithContext(context.Context) SqlManagedInstanceSkuTierPtrOutput
}

type sqlManagedInstanceSkuTierPtr string

func SqlManagedInstanceSkuTierPtr(v string) SqlManagedInstanceSkuTierPtrInput {
	return (*sqlManagedInstanceSkuTierPtr)(&v)
}

func (*sqlManagedInstanceSkuTierPtr) ElementType() reflect.Type {
	return sqlManagedInstanceSkuTierPtrType
}

func (in *sqlManagedInstanceSkuTierPtr) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return pulumi.ToOutput(in).(SqlManagedInstanceSkuTierPtrOutput)
}

func (in *sqlManagedInstanceSkuTierPtr) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SqlManagedInstanceSkuTierPtrOutput)
}

// SQL Server version.
type SqlVersion string

const (
	SqlVersion_SQL_Server_2012 = SqlVersion("SQL Server 2012")
	SqlVersion_SQL_Server_2014 = SqlVersion("SQL Server 2014")
	SqlVersion_SQL_Server_2016 = SqlVersion("SQL Server 2016")
	SqlVersion_SQL_Server_2017 = SqlVersion("SQL Server 2017")
	SqlVersion_SQL_Server_2019 = SqlVersion("SQL Server 2019")
	SqlVersion_SQL_Server_2022 = SqlVersion("SQL Server 2022")
	SqlVersionUnknown          = SqlVersion("Unknown")
)

func (SqlVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlVersion)(nil)).Elem()
}

func (e SqlVersion) ToSqlVersionOutput() SqlVersionOutput {
	return pulumi.ToOutput(e).(SqlVersionOutput)
}

func (e SqlVersion) ToSqlVersionOutputWithContext(ctx context.Context) SqlVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SqlVersionOutput)
}

func (e SqlVersion) ToSqlVersionPtrOutput() SqlVersionPtrOutput {
	return e.ToSqlVersionPtrOutputWithContext(context.Background())
}

func (e SqlVersion) ToSqlVersionPtrOutputWithContext(ctx context.Context) SqlVersionPtrOutput {
	return SqlVersion(e).ToSqlVersionOutputWithContext(ctx).ToSqlVersionPtrOutputWithContext(ctx)
}

func (e SqlVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SqlVersionOutput struct{ *pulumi.OutputState }

func (SqlVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlVersion)(nil)).Elem()
}

func (o SqlVersionOutput) ToSqlVersionOutput() SqlVersionOutput {
	return o
}

func (o SqlVersionOutput) ToSqlVersionOutputWithContext(ctx context.Context) SqlVersionOutput {
	return o
}

func (o SqlVersionOutput) ToSqlVersionPtrOutput() SqlVersionPtrOutput {
	return o.ToSqlVersionPtrOutputWithContext(context.Background())
}

func (o SqlVersionOutput) ToSqlVersionPtrOutputWithContext(ctx context.Context) SqlVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlVersion) *SqlVersion {
		return &v
	}).(SqlVersionPtrOutput)
}

func (o SqlVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SqlVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SqlVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SqlVersionPtrOutput struct{ *pulumi.OutputState }

func (SqlVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlVersion)(nil)).Elem()
}

func (o SqlVersionPtrOutput) ToSqlVersionPtrOutput() SqlVersionPtrOutput {
	return o
}

func (o SqlVersionPtrOutput) ToSqlVersionPtrOutputWithContext(ctx context.Context) SqlVersionPtrOutput {
	return o
}

func (o SqlVersionPtrOutput) Elem() SqlVersionOutput {
	return o.ApplyT(func(v *SqlVersion) SqlVersion {
		if v != nil {
			return *v
		}
		var ret SqlVersion
		return ret
	}).(SqlVersionOutput)
}

func (o SqlVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SqlVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SqlVersionInput is an input type that accepts values of the SqlVersion enum
// A concrete instance of `SqlVersionInput` can be one of the following:
//
//	SqlVersion_SQL_Server_2012
//	SqlVersion_SQL_Server_2014
//	SqlVersion_SQL_Server_2016
//	SqlVersion_SQL_Server_2017
//	SqlVersion_SQL_Server_2019
//	SqlVersion_SQL_Server_2022
//	SqlVersionUnknown
type SqlVersionInput interface {
	pulumi.Input

	ToSqlVersionOutput() SqlVersionOutput
	ToSqlVersionOutputWithContext(context.Context) SqlVersionOutput
}

var sqlVersionPtrType = reflect.TypeOf((**SqlVersion)(nil)).Elem()

type SqlVersionPtrInput interface {
	pulumi.Input

	ToSqlVersionPtrOutput() SqlVersionPtrOutput
	ToSqlVersionPtrOutputWithContext(context.Context) SqlVersionPtrOutput
}

type sqlVersionPtr string

func SqlVersionPtr(v string) SqlVersionPtrInput {
	return (*sqlVersionPtr)(&v)
}

func (*sqlVersionPtr) ElementType() reflect.Type {
	return sqlVersionPtrType
}

func (in *sqlVersionPtr) ToSqlVersionPtrOutput() SqlVersionPtrOutput {
	return pulumi.ToOutput(in).(SqlVersionPtrOutput)
}

func (in *sqlVersionPtr) ToSqlVersionPtrOutputWithContext(ctx context.Context) SqlVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SqlVersionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountProvisioningModeOutput{})
	pulumi.RegisterOutputType(AccountProvisioningModePtrOutput{})
	pulumi.RegisterOutputType(AggregationTypeOutput{})
	pulumi.RegisterOutputType(AggregationTypePtrOutput{})
	pulumi.RegisterOutputType(ArcSqlManagedInstanceLicenseTypeOutput{})
	pulumi.RegisterOutputType(ArcSqlManagedInstanceLicenseTypePtrOutput{})
	pulumi.RegisterOutputType(DatabaseCreateModeOutput{})
	pulumi.RegisterOutputType(DatabaseCreateModePtrOutput{})
	pulumi.RegisterOutputType(DatabaseStateOutput{})
	pulumi.RegisterOutputType(DatabaseStatePtrOutput{})
	pulumi.RegisterOutputType(EditionTypeOutput{})
	pulumi.RegisterOutputType(EditionTypePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesPtrOutput{})
	pulumi.RegisterOutputType(FailoverGroupPartnerSyncModeOutput{})
	pulumi.RegisterOutputType(FailoverGroupPartnerSyncModePtrOutput{})
	pulumi.RegisterOutputType(HostTypeOutput{})
	pulumi.RegisterOutputType(HostTypePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureOutput{})
	pulumi.RegisterOutputType(InfrastructurePtrOutput{})
	pulumi.RegisterOutputType(InstanceFailoverGroupRoleOutput{})
	pulumi.RegisterOutputType(InstanceFailoverGroupRolePtrOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuTierOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuTierPtrOutput{})
	pulumi.RegisterOutputType(RecoveryModeOutput{})
	pulumi.RegisterOutputType(RecoveryModePtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuNameOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuNamePtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuTierOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuTierPtrOutput{})
	pulumi.RegisterOutputType(SqlVersionOutput{})
	pulumi.RegisterOutputType(SqlVersionPtrOutput{})
}
