// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a SQL Server license resource
func LookupSqlServerLicense(ctx *pulumi.Context, args *LookupSqlServerLicenseArgs, opts ...pulumi.InvokeOption) (*LookupSqlServerLicenseResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSqlServerLicenseResult
	err := ctx.Invoke("azure-native:azurearcdata/v20250301preview:getSqlServerLicense", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSqlServerLicenseArgs struct {
	// The name of the Azure resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of SQL Server License
	SqlServerLicenseName string `pulumi:"sqlServerLicenseName"`
}

// Describe SQL Server license resource.
type LookupSqlServerLicenseResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// SQL Server license properties
	Properties SqlServerLicensePropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSqlServerLicenseOutput(ctx *pulumi.Context, args LookupSqlServerLicenseOutputArgs, opts ...pulumi.InvokeOption) LookupSqlServerLicenseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSqlServerLicenseResultOutput, error) {
			args := v.(LookupSqlServerLicenseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:azurearcdata/v20250301preview:getSqlServerLicense", args, LookupSqlServerLicenseResultOutput{}, options).(LookupSqlServerLicenseResultOutput), nil
		}).(LookupSqlServerLicenseResultOutput)
}

type LookupSqlServerLicenseOutputArgs struct {
	// The name of the Azure resource group
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of SQL Server License
	SqlServerLicenseName pulumi.StringInput `pulumi:"sqlServerLicenseName"`
}

func (LookupSqlServerLicenseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlServerLicenseArgs)(nil)).Elem()
}

// Describe SQL Server license resource.
type LookupSqlServerLicenseResultOutput struct{ *pulumi.OutputState }

func (LookupSqlServerLicenseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlServerLicenseResult)(nil)).Elem()
}

func (o LookupSqlServerLicenseResultOutput) ToLookupSqlServerLicenseResultOutput() LookupSqlServerLicenseResultOutput {
	return o
}

func (o LookupSqlServerLicenseResultOutput) ToLookupSqlServerLicenseResultOutputWithContext(ctx context.Context) LookupSqlServerLicenseResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSqlServerLicenseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSqlServerLicenseResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSqlServerLicenseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) string { return v.Name }).(pulumi.StringOutput)
}

// SQL Server license properties
func (o LookupSqlServerLicenseResultOutput) Properties() SqlServerLicensePropertiesResponseOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) SqlServerLicensePropertiesResponse { return v.Properties }).(SqlServerLicensePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSqlServerLicenseResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSqlServerLicenseResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSqlServerLicenseResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlServerLicenseResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSqlServerLicenseResultOutput{})
}
