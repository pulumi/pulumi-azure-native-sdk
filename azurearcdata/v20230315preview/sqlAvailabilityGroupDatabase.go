// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Arc Sql Server Availability Group Database
type SqlAvailabilityGroupDatabase struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of Arc Sql Availability Group Multiple Database Replica
	Properties SqlAvailabilityGroupMultiDatabaseReplicaResourcePropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlAvailabilityGroupDatabase registers a new resource with the given unique name, arguments, and options.
func NewSqlAvailabilityGroupDatabase(ctx *pulumi.Context,
	name string, args *SqlAvailabilityGroupDatabaseArgs, opts ...pulumi.ResourceOption) (*SqlAvailabilityGroupDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SqlAvailabilityGroupName == nil {
		return nil, errors.New("invalid value for required argument 'SqlAvailabilityGroupName'")
	}
	var resource SqlAvailabilityGroupDatabase
	err := ctx.RegisterResource("azure-native:azurearcdata/v20230315preview:SqlAvailabilityGroupDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlAvailabilityGroupDatabase gets an existing SqlAvailabilityGroupDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlAvailabilityGroupDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlAvailabilityGroupDatabaseState, opts ...pulumi.ResourceOption) (*SqlAvailabilityGroupDatabase, error) {
	var resource SqlAvailabilityGroupDatabase
	err := ctx.ReadResource("azure-native:azurearcdata/v20230315preview:SqlAvailabilityGroupDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlAvailabilityGroupDatabase resources.
type sqlAvailabilityGroupDatabaseState struct {
}

type SqlAvailabilityGroupDatabaseState struct {
}

func (SqlAvailabilityGroupDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlAvailabilityGroupDatabaseState)(nil)).Elem()
}

type sqlAvailabilityGroupDatabaseArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Properties of Arc Sql Availability Group Multiple Database Replica
	Properties SqlAvailabilityGroupMultiDatabaseReplicaResourceProperties `pulumi:"properties"`
	// The name of the Azure resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of SQL Availability Group Database
	SqlAvailabilityGroupDatabaseName *string `pulumi:"sqlAvailabilityGroupDatabaseName"`
	// Name of SQL Availability Group
	SqlAvailabilityGroupName string `pulumi:"sqlAvailabilityGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SqlAvailabilityGroupDatabase resource.
type SqlAvailabilityGroupDatabaseArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Properties of Arc Sql Availability Group Multiple Database Replica
	Properties SqlAvailabilityGroupMultiDatabaseReplicaResourcePropertiesInput
	// The name of the Azure resource group
	ResourceGroupName pulumi.StringInput
	// Name of SQL Availability Group Database
	SqlAvailabilityGroupDatabaseName pulumi.StringPtrInput
	// Name of SQL Availability Group
	SqlAvailabilityGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (SqlAvailabilityGroupDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlAvailabilityGroupDatabaseArgs)(nil)).Elem()
}

type SqlAvailabilityGroupDatabaseInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupDatabaseOutput() SqlAvailabilityGroupDatabaseOutput
	ToSqlAvailabilityGroupDatabaseOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseOutput
}

func (*SqlAvailabilityGroupDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroupDatabase)(nil)).Elem()
}

func (i *SqlAvailabilityGroupDatabase) ToSqlAvailabilityGroupDatabaseOutput() SqlAvailabilityGroupDatabaseOutput {
	return i.ToSqlAvailabilityGroupDatabaseOutputWithContext(context.Background())
}

func (i *SqlAvailabilityGroupDatabase) ToSqlAvailabilityGroupDatabaseOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupDatabaseOutput)
}

type SqlAvailabilityGroupDatabaseOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroupDatabase)(nil)).Elem()
}

func (o SqlAvailabilityGroupDatabaseOutput) ToSqlAvailabilityGroupDatabaseOutput() SqlAvailabilityGroupDatabaseOutput {
	return o
}

func (o SqlAvailabilityGroupDatabaseOutput) ToSqlAvailabilityGroupDatabaseOutputWithContext(ctx context.Context) SqlAvailabilityGroupDatabaseOutput {
	return o
}

// The geo-location where the resource lives
func (o SqlAvailabilityGroupDatabaseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupDatabase) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o SqlAvailabilityGroupDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of Arc Sql Availability Group Multiple Database Replica
func (o SqlAvailabilityGroupDatabaseOutput) Properties() SqlAvailabilityGroupMultiDatabaseReplicaResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupDatabase) SqlAvailabilityGroupMultiDatabaseReplicaResourcePropertiesResponseOutput {
		return v.Properties
	}).(SqlAvailabilityGroupMultiDatabaseReplicaResourcePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SqlAvailabilityGroupDatabaseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupDatabase) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o SqlAvailabilityGroupDatabaseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupDatabase) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SqlAvailabilityGroupDatabaseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroupDatabase) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SqlAvailabilityGroupDatabaseOutput{})
}
