// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A SqlAvailabilityGroup.
type SqlAvailabilityGroup struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// null
	Properties SqlAvailabilityGroupPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlAvailabilityGroup registers a new resource with the given unique name, arguments, and options.
func NewSqlAvailabilityGroup(ctx *pulumi.Context,
	name string, args *SqlAvailabilityGroupArgs, opts ...pulumi.ResourceOption) (*SqlAvailabilityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurearcdata:SqlAvailabilityGroup"),
		},
	})
	opts = append(opts, aliases)
	var resource SqlAvailabilityGroup
	err := ctx.RegisterResource("azure-native:azurearcdata/v20230315preview:SqlAvailabilityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlAvailabilityGroup gets an existing SqlAvailabilityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlAvailabilityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlAvailabilityGroupState, opts ...pulumi.ResourceOption) (*SqlAvailabilityGroup, error) {
	var resource SqlAvailabilityGroup
	err := ctx.ReadResource("azure-native:azurearcdata/v20230315preview:SqlAvailabilityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlAvailabilityGroup resources.
type sqlAvailabilityGroupState struct {
}

type SqlAvailabilityGroupState struct {
}

func (SqlAvailabilityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlAvailabilityGroupState)(nil)).Elem()
}

type sqlAvailabilityGroupArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// null
	Properties *SqlAvailabilityGroupProperties `pulumi:"properties"`
	// The name of the Azure resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of SQL Availability Group
	SqlAvailabilityGroupName *string `pulumi:"sqlAvailabilityGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SqlAvailabilityGroup resource.
type SqlAvailabilityGroupArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// null
	Properties SqlAvailabilityGroupPropertiesPtrInput
	// The name of the Azure resource group
	ResourceGroupName pulumi.StringInput
	// Name of SQL Availability Group
	SqlAvailabilityGroupName pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (SqlAvailabilityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlAvailabilityGroupArgs)(nil)).Elem()
}

type SqlAvailabilityGroupInput interface {
	pulumi.Input

	ToSqlAvailabilityGroupOutput() SqlAvailabilityGroupOutput
	ToSqlAvailabilityGroupOutputWithContext(ctx context.Context) SqlAvailabilityGroupOutput
}

func (*SqlAvailabilityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroup)(nil)).Elem()
}

func (i *SqlAvailabilityGroup) ToSqlAvailabilityGroupOutput() SqlAvailabilityGroupOutput {
	return i.ToSqlAvailabilityGroupOutputWithContext(context.Background())
}

func (i *SqlAvailabilityGroup) ToSqlAvailabilityGroupOutputWithContext(ctx context.Context) SqlAvailabilityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAvailabilityGroupOutput)
}

type SqlAvailabilityGroupOutput struct{ *pulumi.OutputState }

func (SqlAvailabilityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAvailabilityGroup)(nil)).Elem()
}

func (o SqlAvailabilityGroupOutput) ToSqlAvailabilityGroupOutput() SqlAvailabilityGroupOutput {
	return o
}

func (o SqlAvailabilityGroupOutput) ToSqlAvailabilityGroupOutputWithContext(ctx context.Context) SqlAvailabilityGroupOutput {
	return o
}

// The geo-location where the resource lives
func (o SqlAvailabilityGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o SqlAvailabilityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// null
func (o SqlAvailabilityGroupOutput) Properties() SqlAvailabilityGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroup) SqlAvailabilityGroupPropertiesResponseOutput { return v.Properties }).(SqlAvailabilityGroupPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SqlAvailabilityGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o SqlAvailabilityGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SqlAvailabilityGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlAvailabilityGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SqlAvailabilityGroupOutput{})
}
