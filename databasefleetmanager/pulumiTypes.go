// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasefleetmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Database Identity properties.
type DatabaseIdentity struct {
	// Client Id of the database identity.
	ClientId *string `pulumi:"clientId"`
	// Principal Id of the database identity.
	PrincipalId *string `pulumi:"principalId"`
	// Resource Id of the database identity.
	ResourceId *string `pulumi:"resourceId"`
}

// DatabaseIdentityInput is an input type that accepts DatabaseIdentityArgs and DatabaseIdentityOutput values.
// You can construct a concrete instance of `DatabaseIdentityInput` via:
//
//	DatabaseIdentityArgs{...}
type DatabaseIdentityInput interface {
	pulumi.Input

	ToDatabaseIdentityOutput() DatabaseIdentityOutput
	ToDatabaseIdentityOutputWithContext(context.Context) DatabaseIdentityOutput
}

// Database Identity properties.
type DatabaseIdentityArgs struct {
	// Client Id of the database identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Principal Id of the database identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Resource Id of the database identity.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabaseIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIdentity)(nil)).Elem()
}

func (i DatabaseIdentityArgs) ToDatabaseIdentityOutput() DatabaseIdentityOutput {
	return i.ToDatabaseIdentityOutputWithContext(context.Background())
}

func (i DatabaseIdentityArgs) ToDatabaseIdentityOutputWithContext(ctx context.Context) DatabaseIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIdentityOutput)
}

// DatabaseIdentityArrayInput is an input type that accepts DatabaseIdentityArray and DatabaseIdentityArrayOutput values.
// You can construct a concrete instance of `DatabaseIdentityArrayInput` via:
//
//	DatabaseIdentityArray{ DatabaseIdentityArgs{...} }
type DatabaseIdentityArrayInput interface {
	pulumi.Input

	ToDatabaseIdentityArrayOutput() DatabaseIdentityArrayOutput
	ToDatabaseIdentityArrayOutputWithContext(context.Context) DatabaseIdentityArrayOutput
}

type DatabaseIdentityArray []DatabaseIdentityInput

func (DatabaseIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseIdentity)(nil)).Elem()
}

func (i DatabaseIdentityArray) ToDatabaseIdentityArrayOutput() DatabaseIdentityArrayOutput {
	return i.ToDatabaseIdentityArrayOutputWithContext(context.Background())
}

func (i DatabaseIdentityArray) ToDatabaseIdentityArrayOutputWithContext(ctx context.Context) DatabaseIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIdentityArrayOutput)
}

// Database Identity properties.
type DatabaseIdentityOutput struct{ *pulumi.OutputState }

func (DatabaseIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIdentity)(nil)).Elem()
}

func (o DatabaseIdentityOutput) ToDatabaseIdentityOutput() DatabaseIdentityOutput {
	return o
}

func (o DatabaseIdentityOutput) ToDatabaseIdentityOutputWithContext(ctx context.Context) DatabaseIdentityOutput {
	return o
}

// Client Id of the database identity.
func (o DatabaseIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Principal Id of the database identity.
func (o DatabaseIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Resource Id of the database identity.
func (o DatabaseIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DatabaseIdentityArrayOutput struct{ *pulumi.OutputState }

func (DatabaseIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseIdentity)(nil)).Elem()
}

func (o DatabaseIdentityArrayOutput) ToDatabaseIdentityArrayOutput() DatabaseIdentityArrayOutput {
	return o
}

func (o DatabaseIdentityArrayOutput) ToDatabaseIdentityArrayOutputWithContext(ctx context.Context) DatabaseIdentityArrayOutput {
	return o
}

func (o DatabaseIdentityArrayOutput) Index(i pulumi.IntInput) DatabaseIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseIdentity {
		return vs[0].([]DatabaseIdentity)[vs[1].(int)]
	}).(DatabaseIdentityOutput)
}

// Database Identity properties.
type DatabaseIdentityResponse struct {
	// Client Id of the database identity.
	ClientId *string `pulumi:"clientId"`
	// Principal Id of the database identity.
	PrincipalId *string `pulumi:"principalId"`
	// Resource Id of the database identity.
	ResourceId *string `pulumi:"resourceId"`
}

// Database Identity properties.
type DatabaseIdentityResponseOutput struct{ *pulumi.OutputState }

func (DatabaseIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIdentityResponse)(nil)).Elem()
}

func (o DatabaseIdentityResponseOutput) ToDatabaseIdentityResponseOutput() DatabaseIdentityResponseOutput {
	return o
}

func (o DatabaseIdentityResponseOutput) ToDatabaseIdentityResponseOutputWithContext(ctx context.Context) DatabaseIdentityResponseOutput {
	return o
}

// Client Id of the database identity.
func (o DatabaseIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Principal Id of the database identity.
func (o DatabaseIdentityResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIdentityResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Resource Id of the database identity.
func (o DatabaseIdentityResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIdentityResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DatabaseIdentityResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseIdentityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseIdentityResponse)(nil)).Elem()
}

func (o DatabaseIdentityResponseArrayOutput) ToDatabaseIdentityResponseArrayOutput() DatabaseIdentityResponseArrayOutput {
	return o
}

func (o DatabaseIdentityResponseArrayOutput) ToDatabaseIdentityResponseArrayOutputWithContext(ctx context.Context) DatabaseIdentityResponseArrayOutput {
	return o
}

func (o DatabaseIdentityResponseArrayOutput) Index(i pulumi.IntInput) DatabaseIdentityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseIdentityResponse {
		return vs[0].([]DatabaseIdentityResponse)[vs[1].(int)]
	}).(DatabaseIdentityResponseOutput)
}

// A Firewall rule properties.
type FirewallRuleProperties struct {
	// End IP address.
	EndIpAddress *string `pulumi:"endIpAddress"`
	// Start IP address.
	StartIpAddress *string `pulumi:"startIpAddress"`
}

// FirewallRulePropertiesInput is an input type that accepts FirewallRulePropertiesArgs and FirewallRulePropertiesOutput values.
// You can construct a concrete instance of `FirewallRulePropertiesInput` via:
//
//	FirewallRulePropertiesArgs{...}
type FirewallRulePropertiesInput interface {
	pulumi.Input

	ToFirewallRulePropertiesOutput() FirewallRulePropertiesOutput
	ToFirewallRulePropertiesOutputWithContext(context.Context) FirewallRulePropertiesOutput
}

// A Firewall rule properties.
type FirewallRulePropertiesArgs struct {
	// End IP address.
	EndIpAddress pulumi.StringPtrInput `pulumi:"endIpAddress"`
	// Start IP address.
	StartIpAddress pulumi.StringPtrInput `pulumi:"startIpAddress"`
}

func (FirewallRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleProperties)(nil)).Elem()
}

func (i FirewallRulePropertiesArgs) ToFirewallRulePropertiesOutput() FirewallRulePropertiesOutput {
	return i.ToFirewallRulePropertiesOutputWithContext(context.Background())
}

func (i FirewallRulePropertiesArgs) ToFirewallRulePropertiesOutputWithContext(ctx context.Context) FirewallRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRulePropertiesOutput)
}

func (i FirewallRulePropertiesArgs) ToFirewallRulePropertiesPtrOutput() FirewallRulePropertiesPtrOutput {
	return i.ToFirewallRulePropertiesPtrOutputWithContext(context.Background())
}

func (i FirewallRulePropertiesArgs) ToFirewallRulePropertiesPtrOutputWithContext(ctx context.Context) FirewallRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRulePropertiesOutput).ToFirewallRulePropertiesPtrOutputWithContext(ctx)
}

// FirewallRulePropertiesPtrInput is an input type that accepts FirewallRulePropertiesArgs, FirewallRulePropertiesPtr and FirewallRulePropertiesPtrOutput values.
// You can construct a concrete instance of `FirewallRulePropertiesPtrInput` via:
//
//	        FirewallRulePropertiesArgs{...}
//
//	or:
//
//	        nil
type FirewallRulePropertiesPtrInput interface {
	pulumi.Input

	ToFirewallRulePropertiesPtrOutput() FirewallRulePropertiesPtrOutput
	ToFirewallRulePropertiesPtrOutputWithContext(context.Context) FirewallRulePropertiesPtrOutput
}

type firewallRulePropertiesPtrType FirewallRulePropertiesArgs

func FirewallRulePropertiesPtr(v *FirewallRulePropertiesArgs) FirewallRulePropertiesPtrInput {
	return (*firewallRulePropertiesPtrType)(v)
}

func (*firewallRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleProperties)(nil)).Elem()
}

func (i *firewallRulePropertiesPtrType) ToFirewallRulePropertiesPtrOutput() FirewallRulePropertiesPtrOutput {
	return i.ToFirewallRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *firewallRulePropertiesPtrType) ToFirewallRulePropertiesPtrOutputWithContext(ctx context.Context) FirewallRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRulePropertiesPtrOutput)
}

// A Firewall rule properties.
type FirewallRulePropertiesOutput struct{ *pulumi.OutputState }

func (FirewallRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleProperties)(nil)).Elem()
}

func (o FirewallRulePropertiesOutput) ToFirewallRulePropertiesOutput() FirewallRulePropertiesOutput {
	return o
}

func (o FirewallRulePropertiesOutput) ToFirewallRulePropertiesOutputWithContext(ctx context.Context) FirewallRulePropertiesOutput {
	return o
}

func (o FirewallRulePropertiesOutput) ToFirewallRulePropertiesPtrOutput() FirewallRulePropertiesPtrOutput {
	return o.ToFirewallRulePropertiesPtrOutputWithContext(context.Background())
}

func (o FirewallRulePropertiesOutput) ToFirewallRulePropertiesPtrOutputWithContext(ctx context.Context) FirewallRulePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleProperties) *FirewallRuleProperties {
		return &v
	}).(FirewallRulePropertiesPtrOutput)
}

// End IP address.
func (o FirewallRulePropertiesOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleProperties) *string { return v.EndIpAddress }).(pulumi.StringPtrOutput)
}

// Start IP address.
func (o FirewallRulePropertiesOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleProperties) *string { return v.StartIpAddress }).(pulumi.StringPtrOutput)
}

type FirewallRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FirewallRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleProperties)(nil)).Elem()
}

func (o FirewallRulePropertiesPtrOutput) ToFirewallRulePropertiesPtrOutput() FirewallRulePropertiesPtrOutput {
	return o
}

func (o FirewallRulePropertiesPtrOutput) ToFirewallRulePropertiesPtrOutputWithContext(ctx context.Context) FirewallRulePropertiesPtrOutput {
	return o
}

func (o FirewallRulePropertiesPtrOutput) Elem() FirewallRulePropertiesOutput {
	return o.ApplyT(func(v *FirewallRuleProperties) FirewallRuleProperties {
		if v != nil {
			return *v
		}
		var ret FirewallRuleProperties
		return ret
	}).(FirewallRulePropertiesOutput)
}

// End IP address.
func (o FirewallRulePropertiesPtrOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallRuleProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndIpAddress
	}).(pulumi.StringPtrOutput)
}

// Start IP address.
func (o FirewallRulePropertiesPtrOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallRuleProperties) *string {
		if v == nil {
			return nil
		}
		return v.StartIpAddress
	}).(pulumi.StringPtrOutput)
}

// A Firewall rule properties.
type FirewallRulePropertiesResponse struct {
	// End IP address.
	EndIpAddress *string `pulumi:"endIpAddress"`
	// Provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Start IP address.
	StartIpAddress *string `pulumi:"startIpAddress"`
}

// A Firewall rule properties.
type FirewallRulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FirewallRulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRulePropertiesResponse)(nil)).Elem()
}

func (o FirewallRulePropertiesResponseOutput) ToFirewallRulePropertiesResponseOutput() FirewallRulePropertiesResponseOutput {
	return o
}

func (o FirewallRulePropertiesResponseOutput) ToFirewallRulePropertiesResponseOutputWithContext(ctx context.Context) FirewallRulePropertiesResponseOutput {
	return o
}

// End IP address.
func (o FirewallRulePropertiesResponseOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRulePropertiesResponse) *string { return v.EndIpAddress }).(pulumi.StringPtrOutput)
}

// Provisioning state.
func (o FirewallRulePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallRulePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Start IP address.
func (o FirewallRulePropertiesResponseOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRulePropertiesResponse) *string { return v.StartIpAddress }).(pulumi.StringPtrOutput)
}

// Fleet database properties.
type FleetDatabaseProperties struct {
	// Database collation.
	Collation *string `pulumi:"collation"`
	// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
	CreateMode *string `pulumi:"createMode"`
	// Identity property.
	Identity *Identity `pulumi:"identity"`
	// Additional database properties to be applied as the underlying database resource tags.
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// Restore from time when CreateMode is PointInTimeRestore.
	RestoreFromTime *string `pulumi:"restoreFromTime"`
	// Source database name used when CreateMode is Copy or PointInTimeRestore.
	SourceDatabaseName *string `pulumi:"sourceDatabaseName"`
	// Name of the tier this database belongs to.
	TierName *string `pulumi:"tierName"`
	// Transparent Data Encryption properties
	TransparentDataEncryption *TransparentDataEncryption `pulumi:"transparentDataEncryption"`
}

// FleetDatabasePropertiesInput is an input type that accepts FleetDatabasePropertiesArgs and FleetDatabasePropertiesOutput values.
// You can construct a concrete instance of `FleetDatabasePropertiesInput` via:
//
//	FleetDatabasePropertiesArgs{...}
type FleetDatabasePropertiesInput interface {
	pulumi.Input

	ToFleetDatabasePropertiesOutput() FleetDatabasePropertiesOutput
	ToFleetDatabasePropertiesOutputWithContext(context.Context) FleetDatabasePropertiesOutput
}

// Fleet database properties.
type FleetDatabasePropertiesArgs struct {
	// Database collation.
	Collation pulumi.StringPtrInput `pulumi:"collation"`
	// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Identity property.
	Identity IdentityPtrInput `pulumi:"identity"`
	// Additional database properties to be applied as the underlying database resource tags.
	ResourceTags pulumi.StringMapInput `pulumi:"resourceTags"`
	// Restore from time when CreateMode is PointInTimeRestore.
	RestoreFromTime pulumi.StringPtrInput `pulumi:"restoreFromTime"`
	// Source database name used when CreateMode is Copy or PointInTimeRestore.
	SourceDatabaseName pulumi.StringPtrInput `pulumi:"sourceDatabaseName"`
	// Name of the tier this database belongs to.
	TierName pulumi.StringPtrInput `pulumi:"tierName"`
	// Transparent Data Encryption properties
	TransparentDataEncryption TransparentDataEncryptionPtrInput `pulumi:"transparentDataEncryption"`
}

func (FleetDatabasePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetDatabaseProperties)(nil)).Elem()
}

func (i FleetDatabasePropertiesArgs) ToFleetDatabasePropertiesOutput() FleetDatabasePropertiesOutput {
	return i.ToFleetDatabasePropertiesOutputWithContext(context.Background())
}

func (i FleetDatabasePropertiesArgs) ToFleetDatabasePropertiesOutputWithContext(ctx context.Context) FleetDatabasePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetDatabasePropertiesOutput)
}

func (i FleetDatabasePropertiesArgs) ToFleetDatabasePropertiesPtrOutput() FleetDatabasePropertiesPtrOutput {
	return i.ToFleetDatabasePropertiesPtrOutputWithContext(context.Background())
}

func (i FleetDatabasePropertiesArgs) ToFleetDatabasePropertiesPtrOutputWithContext(ctx context.Context) FleetDatabasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetDatabasePropertiesOutput).ToFleetDatabasePropertiesPtrOutputWithContext(ctx)
}

// FleetDatabasePropertiesPtrInput is an input type that accepts FleetDatabasePropertiesArgs, FleetDatabasePropertiesPtr and FleetDatabasePropertiesPtrOutput values.
// You can construct a concrete instance of `FleetDatabasePropertiesPtrInput` via:
//
//	        FleetDatabasePropertiesArgs{...}
//
//	or:
//
//	        nil
type FleetDatabasePropertiesPtrInput interface {
	pulumi.Input

	ToFleetDatabasePropertiesPtrOutput() FleetDatabasePropertiesPtrOutput
	ToFleetDatabasePropertiesPtrOutputWithContext(context.Context) FleetDatabasePropertiesPtrOutput
}

type fleetDatabasePropertiesPtrType FleetDatabasePropertiesArgs

func FleetDatabasePropertiesPtr(v *FleetDatabasePropertiesArgs) FleetDatabasePropertiesPtrInput {
	return (*fleetDatabasePropertiesPtrType)(v)
}

func (*fleetDatabasePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetDatabaseProperties)(nil)).Elem()
}

func (i *fleetDatabasePropertiesPtrType) ToFleetDatabasePropertiesPtrOutput() FleetDatabasePropertiesPtrOutput {
	return i.ToFleetDatabasePropertiesPtrOutputWithContext(context.Background())
}

func (i *fleetDatabasePropertiesPtrType) ToFleetDatabasePropertiesPtrOutputWithContext(ctx context.Context) FleetDatabasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetDatabasePropertiesPtrOutput)
}

// Fleet database properties.
type FleetDatabasePropertiesOutput struct{ *pulumi.OutputState }

func (FleetDatabasePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetDatabaseProperties)(nil)).Elem()
}

func (o FleetDatabasePropertiesOutput) ToFleetDatabasePropertiesOutput() FleetDatabasePropertiesOutput {
	return o
}

func (o FleetDatabasePropertiesOutput) ToFleetDatabasePropertiesOutputWithContext(ctx context.Context) FleetDatabasePropertiesOutput {
	return o
}

func (o FleetDatabasePropertiesOutput) ToFleetDatabasePropertiesPtrOutput() FleetDatabasePropertiesPtrOutput {
	return o.ToFleetDatabasePropertiesPtrOutputWithContext(context.Background())
}

func (o FleetDatabasePropertiesOutput) ToFleetDatabasePropertiesPtrOutputWithContext(ctx context.Context) FleetDatabasePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetDatabaseProperties) *FleetDatabaseProperties {
		return &v
	}).(FleetDatabasePropertiesPtrOutput)
}

// Database collation.
func (o FleetDatabasePropertiesOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *string { return v.Collation }).(pulumi.StringPtrOutput)
}

// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
func (o FleetDatabasePropertiesOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Identity property.
func (o FleetDatabasePropertiesOutput) Identity() IdentityPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *Identity { return v.Identity }).(IdentityPtrOutput)
}

// Additional database properties to be applied as the underlying database resource tags.
func (o FleetDatabasePropertiesOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) map[string]string { return v.ResourceTags }).(pulumi.StringMapOutput)
}

// Restore from time when CreateMode is PointInTimeRestore.
func (o FleetDatabasePropertiesOutput) RestoreFromTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *string { return v.RestoreFromTime }).(pulumi.StringPtrOutput)
}

// Source database name used when CreateMode is Copy or PointInTimeRestore.
func (o FleetDatabasePropertiesOutput) SourceDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *string { return v.SourceDatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the tier this database belongs to.
func (o FleetDatabasePropertiesOutput) TierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *string { return v.TierName }).(pulumi.StringPtrOutput)
}

// Transparent Data Encryption properties
func (o FleetDatabasePropertiesOutput) TransparentDataEncryption() TransparentDataEncryptionPtrOutput {
	return o.ApplyT(func(v FleetDatabaseProperties) *TransparentDataEncryption { return v.TransparentDataEncryption }).(TransparentDataEncryptionPtrOutput)
}

type FleetDatabasePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FleetDatabasePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetDatabaseProperties)(nil)).Elem()
}

func (o FleetDatabasePropertiesPtrOutput) ToFleetDatabasePropertiesPtrOutput() FleetDatabasePropertiesPtrOutput {
	return o
}

func (o FleetDatabasePropertiesPtrOutput) ToFleetDatabasePropertiesPtrOutputWithContext(ctx context.Context) FleetDatabasePropertiesPtrOutput {
	return o
}

func (o FleetDatabasePropertiesPtrOutput) Elem() FleetDatabasePropertiesOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) FleetDatabaseProperties {
		if v != nil {
			return *v
		}
		var ret FleetDatabaseProperties
		return ret
	}).(FleetDatabasePropertiesOutput)
}

// Database collation.
func (o FleetDatabasePropertiesPtrOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Collation
	}).(pulumi.StringPtrOutput)
}

// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
func (o FleetDatabasePropertiesPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Identity property.
func (o FleetDatabasePropertiesPtrOutput) Identity() IdentityPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *Identity {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(IdentityPtrOutput)
}

// Additional database properties to be applied as the underlying database resource tags.
func (o FleetDatabasePropertiesPtrOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(pulumi.StringMapOutput)
}

// Restore from time when CreateMode is PointInTimeRestore.
func (o FleetDatabasePropertiesPtrOutput) RestoreFromTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RestoreFromTime
	}).(pulumi.StringPtrOutput)
}

// Source database name used when CreateMode is Copy or PointInTimeRestore.
func (o FleetDatabasePropertiesPtrOutput) SourceDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceDatabaseName
	}).(pulumi.StringPtrOutput)
}

// Name of the tier this database belongs to.
func (o FleetDatabasePropertiesPtrOutput) TierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *string {
		if v == nil {
			return nil
		}
		return v.TierName
	}).(pulumi.StringPtrOutput)
}

// Transparent Data Encryption properties
func (o FleetDatabasePropertiesPtrOutput) TransparentDataEncryption() TransparentDataEncryptionPtrOutput {
	return o.ApplyT(func(v *FleetDatabaseProperties) *TransparentDataEncryption {
		if v == nil {
			return nil
		}
		return v.TransparentDataEncryption
	}).(TransparentDataEncryptionPtrOutput)
}

// Fleet database properties.
type FleetDatabasePropertiesResponse struct {
	// Backup retention in days.
	BackupRetentionDays int `pulumi:"backupRetentionDays"`
	// Database collation.
	Collation *string `pulumi:"collation"`
	// Connection string to connect to the database with.
	ConnectionString string `pulumi:"connectionString"`
	// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
	CreateMode *string `pulumi:"createMode"`
	// Maximum database size in Gb.
	DatabaseSizeGbMax int `pulumi:"databaseSizeGbMax"`
	// Earliest restore time.
	EarliestRestoreTime string `pulumi:"earliestRestoreTime"`
	// Identity property.
	Identity *IdentityResponse `pulumi:"identity"`
	// Latest restore time.
	LatestRestoreTime string `pulumi:"latestRestoreTime"`
	// Resource identifier for the underlying database resource.
	OriginalDatabaseId string `pulumi:"originalDatabaseId"`
	// Database state.
	ProvisioningState string `pulumi:"provisioningState"`
	// If true, database is recoverable.
	Recoverable bool `pulumi:"recoverable"`
	// Additional database properties to be applied as the underlying database resource tags.
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// Restore from time when CreateMode is PointInTimeRestore.
	RestoreFromTime *string `pulumi:"restoreFromTime"`
	// Source database name used when CreateMode is Copy or PointInTimeRestore.
	SourceDatabaseName *string `pulumi:"sourceDatabaseName"`
	// Name of the tier this database belongs to.
	TierName *string `pulumi:"tierName"`
	// Transparent Data Encryption properties
	TransparentDataEncryption *TransparentDataEncryptionResponse `pulumi:"transparentDataEncryption"`
}

// Fleet database properties.
type FleetDatabasePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FleetDatabasePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetDatabasePropertiesResponse)(nil)).Elem()
}

func (o FleetDatabasePropertiesResponseOutput) ToFleetDatabasePropertiesResponseOutput() FleetDatabasePropertiesResponseOutput {
	return o
}

func (o FleetDatabasePropertiesResponseOutput) ToFleetDatabasePropertiesResponseOutputWithContext(ctx context.Context) FleetDatabasePropertiesResponseOutput {
	return o
}

// Backup retention in days.
func (o FleetDatabasePropertiesResponseOutput) BackupRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) int { return v.BackupRetentionDays }).(pulumi.IntOutput)
}

// Database collation.
func (o FleetDatabasePropertiesResponseOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *string { return v.Collation }).(pulumi.StringPtrOutput)
}

// Connection string to connect to the database with.
func (o FleetDatabasePropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
func (o FleetDatabasePropertiesResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Maximum database size in Gb.
func (o FleetDatabasePropertiesResponseOutput) DatabaseSizeGbMax() pulumi.IntOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) int { return v.DatabaseSizeGbMax }).(pulumi.IntOutput)
}

// Earliest restore time.
func (o FleetDatabasePropertiesResponseOutput) EarliestRestoreTime() pulumi.StringOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) string { return v.EarliestRestoreTime }).(pulumi.StringOutput)
}

// Identity property.
func (o FleetDatabasePropertiesResponseOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Latest restore time.
func (o FleetDatabasePropertiesResponseOutput) LatestRestoreTime() pulumi.StringOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) string { return v.LatestRestoreTime }).(pulumi.StringOutput)
}

// Resource identifier for the underlying database resource.
func (o FleetDatabasePropertiesResponseOutput) OriginalDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) string { return v.OriginalDatabaseId }).(pulumi.StringOutput)
}

// Database state.
func (o FleetDatabasePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// If true, database is recoverable.
func (o FleetDatabasePropertiesResponseOutput) Recoverable() pulumi.BoolOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) bool { return v.Recoverable }).(pulumi.BoolOutput)
}

// Additional database properties to be applied as the underlying database resource tags.
func (o FleetDatabasePropertiesResponseOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) map[string]string { return v.ResourceTags }).(pulumi.StringMapOutput)
}

// Restore from time when CreateMode is PointInTimeRestore.
func (o FleetDatabasePropertiesResponseOutput) RestoreFromTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *string { return v.RestoreFromTime }).(pulumi.StringPtrOutput)
}

// Source database name used when CreateMode is Copy or PointInTimeRestore.
func (o FleetDatabasePropertiesResponseOutput) SourceDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *string { return v.SourceDatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the tier this database belongs to.
func (o FleetDatabasePropertiesResponseOutput) TierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *string { return v.TierName }).(pulumi.StringPtrOutput)
}

// Transparent Data Encryption properties
func (o FleetDatabasePropertiesResponseOutput) TransparentDataEncryption() TransparentDataEncryptionResponsePtrOutput {
	return o.ApplyT(func(v FleetDatabasePropertiesResponse) *TransparentDataEncryptionResponse {
		return v.TransparentDataEncryption
	}).(TransparentDataEncryptionResponsePtrOutput)
}

// The Database Fleet properties.
type FleetProperties struct {
	// Fleet description.
	Description *string `pulumi:"description"`
}

// FleetPropertiesInput is an input type that accepts FleetPropertiesArgs and FleetPropertiesOutput values.
// You can construct a concrete instance of `FleetPropertiesInput` via:
//
//	FleetPropertiesArgs{...}
type FleetPropertiesInput interface {
	pulumi.Input

	ToFleetPropertiesOutput() FleetPropertiesOutput
	ToFleetPropertiesOutputWithContext(context.Context) FleetPropertiesOutput
}

// The Database Fleet properties.
type FleetPropertiesArgs struct {
	// Fleet description.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (FleetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetProperties)(nil)).Elem()
}

func (i FleetPropertiesArgs) ToFleetPropertiesOutput() FleetPropertiesOutput {
	return i.ToFleetPropertiesOutputWithContext(context.Background())
}

func (i FleetPropertiesArgs) ToFleetPropertiesOutputWithContext(ctx context.Context) FleetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetPropertiesOutput)
}

func (i FleetPropertiesArgs) ToFleetPropertiesPtrOutput() FleetPropertiesPtrOutput {
	return i.ToFleetPropertiesPtrOutputWithContext(context.Background())
}

func (i FleetPropertiesArgs) ToFleetPropertiesPtrOutputWithContext(ctx context.Context) FleetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetPropertiesOutput).ToFleetPropertiesPtrOutputWithContext(ctx)
}

// FleetPropertiesPtrInput is an input type that accepts FleetPropertiesArgs, FleetPropertiesPtr and FleetPropertiesPtrOutput values.
// You can construct a concrete instance of `FleetPropertiesPtrInput` via:
//
//	        FleetPropertiesArgs{...}
//
//	or:
//
//	        nil
type FleetPropertiesPtrInput interface {
	pulumi.Input

	ToFleetPropertiesPtrOutput() FleetPropertiesPtrOutput
	ToFleetPropertiesPtrOutputWithContext(context.Context) FleetPropertiesPtrOutput
}

type fleetPropertiesPtrType FleetPropertiesArgs

func FleetPropertiesPtr(v *FleetPropertiesArgs) FleetPropertiesPtrInput {
	return (*fleetPropertiesPtrType)(v)
}

func (*fleetPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetProperties)(nil)).Elem()
}

func (i *fleetPropertiesPtrType) ToFleetPropertiesPtrOutput() FleetPropertiesPtrOutput {
	return i.ToFleetPropertiesPtrOutputWithContext(context.Background())
}

func (i *fleetPropertiesPtrType) ToFleetPropertiesPtrOutputWithContext(ctx context.Context) FleetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetPropertiesPtrOutput)
}

// The Database Fleet properties.
type FleetPropertiesOutput struct{ *pulumi.OutputState }

func (FleetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetProperties)(nil)).Elem()
}

func (o FleetPropertiesOutput) ToFleetPropertiesOutput() FleetPropertiesOutput {
	return o
}

func (o FleetPropertiesOutput) ToFleetPropertiesOutputWithContext(ctx context.Context) FleetPropertiesOutput {
	return o
}

func (o FleetPropertiesOutput) ToFleetPropertiesPtrOutput() FleetPropertiesPtrOutput {
	return o.ToFleetPropertiesPtrOutputWithContext(context.Background())
}

func (o FleetPropertiesOutput) ToFleetPropertiesPtrOutputWithContext(ctx context.Context) FleetPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetProperties) *FleetProperties {
		return &v
	}).(FleetPropertiesPtrOutput)
}

// Fleet description.
func (o FleetPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type FleetPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FleetPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetProperties)(nil)).Elem()
}

func (o FleetPropertiesPtrOutput) ToFleetPropertiesPtrOutput() FleetPropertiesPtrOutput {
	return o
}

func (o FleetPropertiesPtrOutput) ToFleetPropertiesPtrOutputWithContext(ctx context.Context) FleetPropertiesPtrOutput {
	return o
}

func (o FleetPropertiesPtrOutput) Elem() FleetPropertiesOutput {
	return o.ApplyT(func(v *FleetProperties) FleetProperties {
		if v != nil {
			return *v
		}
		var ret FleetProperties
		return ret
	}).(FleetPropertiesOutput)
}

// Fleet description.
func (o FleetPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The Database Fleet properties.
type FleetPropertiesResponse struct {
	// Fleet description.
	Description *string `pulumi:"description"`
	// Provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The Database Fleet properties.
type FleetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FleetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetPropertiesResponse)(nil)).Elem()
}

func (o FleetPropertiesResponseOutput) ToFleetPropertiesResponseOutput() FleetPropertiesResponseOutput {
	return o
}

func (o FleetPropertiesResponseOutput) ToFleetPropertiesResponseOutputWithContext(ctx context.Context) FleetPropertiesResponseOutput {
	return o
}

// Fleet description.
func (o FleetPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Provisioning state.
func (o FleetPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FleetPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A Fleet tier properties.
type FleetTierProperties struct {
	// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
	Capacity *int `pulumi:"capacity"`
	// Maximum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMax *float64 `pulumi:"databaseCapacityMax"`
	// Minimum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMin *float64 `pulumi:"databaseCapacityMin"`
	// Maximum database size in Gb.
	DatabaseSizeGbMax *int `pulumi:"databaseSizeGbMax"`
	// Family of provisioned resources, for example Gen5.
	Family *string `pulumi:"family"`
	// Number of high availability replicas for databases in this tier.
	HighAvailabilityReplicaCount *int `pulumi:"highAvailabilityReplicaCount"`
	// Maximum number of databases per pool.
	PoolNumOfDatabasesMax *int `pulumi:"poolNumOfDatabasesMax"`
	// If true, databases are pooled.
	Pooled *bool `pulumi:"pooled"`
	// If true, serverless resources are provisioned in the tier.
	Serverless *bool `pulumi:"serverless"`
	// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
	ServiceTier *string `pulumi:"serviceTier"`
	// Enable zone redundancy for all databases in this tier.
	ZoneRedundancy *string `pulumi:"zoneRedundancy"`
}

// FleetTierPropertiesInput is an input type that accepts FleetTierPropertiesArgs and FleetTierPropertiesOutput values.
// You can construct a concrete instance of `FleetTierPropertiesInput` via:
//
//	FleetTierPropertiesArgs{...}
type FleetTierPropertiesInput interface {
	pulumi.Input

	ToFleetTierPropertiesOutput() FleetTierPropertiesOutput
	ToFleetTierPropertiesOutputWithContext(context.Context) FleetTierPropertiesOutput
}

// A Fleet tier properties.
type FleetTierPropertiesArgs struct {
	// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Maximum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMax pulumi.Float64PtrInput `pulumi:"databaseCapacityMax"`
	// Minimum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMin pulumi.Float64PtrInput `pulumi:"databaseCapacityMin"`
	// Maximum database size in Gb.
	DatabaseSizeGbMax pulumi.IntPtrInput `pulumi:"databaseSizeGbMax"`
	// Family of provisioned resources, for example Gen5.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Number of high availability replicas for databases in this tier.
	HighAvailabilityReplicaCount pulumi.IntPtrInput `pulumi:"highAvailabilityReplicaCount"`
	// Maximum number of databases per pool.
	PoolNumOfDatabasesMax pulumi.IntPtrInput `pulumi:"poolNumOfDatabasesMax"`
	// If true, databases are pooled.
	Pooled pulumi.BoolPtrInput `pulumi:"pooled"`
	// If true, serverless resources are provisioned in the tier.
	Serverless pulumi.BoolPtrInput `pulumi:"serverless"`
	// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
	ServiceTier pulumi.StringPtrInput `pulumi:"serviceTier"`
	// Enable zone redundancy for all databases in this tier.
	ZoneRedundancy pulumi.StringPtrInput `pulumi:"zoneRedundancy"`
}

func (FleetTierPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTierProperties)(nil)).Elem()
}

func (i FleetTierPropertiesArgs) ToFleetTierPropertiesOutput() FleetTierPropertiesOutput {
	return i.ToFleetTierPropertiesOutputWithContext(context.Background())
}

func (i FleetTierPropertiesArgs) ToFleetTierPropertiesOutputWithContext(ctx context.Context) FleetTierPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTierPropertiesOutput)
}

func (i FleetTierPropertiesArgs) ToFleetTierPropertiesPtrOutput() FleetTierPropertiesPtrOutput {
	return i.ToFleetTierPropertiesPtrOutputWithContext(context.Background())
}

func (i FleetTierPropertiesArgs) ToFleetTierPropertiesPtrOutputWithContext(ctx context.Context) FleetTierPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTierPropertiesOutput).ToFleetTierPropertiesPtrOutputWithContext(ctx)
}

// FleetTierPropertiesPtrInput is an input type that accepts FleetTierPropertiesArgs, FleetTierPropertiesPtr and FleetTierPropertiesPtrOutput values.
// You can construct a concrete instance of `FleetTierPropertiesPtrInput` via:
//
//	        FleetTierPropertiesArgs{...}
//
//	or:
//
//	        nil
type FleetTierPropertiesPtrInput interface {
	pulumi.Input

	ToFleetTierPropertiesPtrOutput() FleetTierPropertiesPtrOutput
	ToFleetTierPropertiesPtrOutputWithContext(context.Context) FleetTierPropertiesPtrOutput
}

type fleetTierPropertiesPtrType FleetTierPropertiesArgs

func FleetTierPropertiesPtr(v *FleetTierPropertiesArgs) FleetTierPropertiesPtrInput {
	return (*fleetTierPropertiesPtrType)(v)
}

func (*fleetTierPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTierProperties)(nil)).Elem()
}

func (i *fleetTierPropertiesPtrType) ToFleetTierPropertiesPtrOutput() FleetTierPropertiesPtrOutput {
	return i.ToFleetTierPropertiesPtrOutputWithContext(context.Background())
}

func (i *fleetTierPropertiesPtrType) ToFleetTierPropertiesPtrOutputWithContext(ctx context.Context) FleetTierPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTierPropertiesPtrOutput)
}

// A Fleet tier properties.
type FleetTierPropertiesOutput struct{ *pulumi.OutputState }

func (FleetTierPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTierProperties)(nil)).Elem()
}

func (o FleetTierPropertiesOutput) ToFleetTierPropertiesOutput() FleetTierPropertiesOutput {
	return o
}

func (o FleetTierPropertiesOutput) ToFleetTierPropertiesOutputWithContext(ctx context.Context) FleetTierPropertiesOutput {
	return o
}

func (o FleetTierPropertiesOutput) ToFleetTierPropertiesPtrOutput() FleetTierPropertiesPtrOutput {
	return o.ToFleetTierPropertiesPtrOutputWithContext(context.Background())
}

func (o FleetTierPropertiesOutput) ToFleetTierPropertiesPtrOutputWithContext(ctx context.Context) FleetTierPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetTierProperties) *FleetTierProperties {
		return &v
	}).(FleetTierPropertiesPtrOutput)
}

// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
func (o FleetTierPropertiesOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Maximum allocated capacity per database, in units matching the specified service tier.
func (o FleetTierPropertiesOutput) DatabaseCapacityMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *float64 { return v.DatabaseCapacityMax }).(pulumi.Float64PtrOutput)
}

// Minimum allocated capacity per database, in units matching the specified service tier.
func (o FleetTierPropertiesOutput) DatabaseCapacityMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *float64 { return v.DatabaseCapacityMin }).(pulumi.Float64PtrOutput)
}

// Maximum database size in Gb.
func (o FleetTierPropertiesOutput) DatabaseSizeGbMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *int { return v.DatabaseSizeGbMax }).(pulumi.IntPtrOutput)
}

// Family of provisioned resources, for example Gen5.
func (o FleetTierPropertiesOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Number of high availability replicas for databases in this tier.
func (o FleetTierPropertiesOutput) HighAvailabilityReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *int { return v.HighAvailabilityReplicaCount }).(pulumi.IntPtrOutput)
}

// Maximum number of databases per pool.
func (o FleetTierPropertiesOutput) PoolNumOfDatabasesMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *int { return v.PoolNumOfDatabasesMax }).(pulumi.IntPtrOutput)
}

// If true, databases are pooled.
func (o FleetTierPropertiesOutput) Pooled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *bool { return v.Pooled }).(pulumi.BoolPtrOutput)
}

// If true, serverless resources are provisioned in the tier.
func (o FleetTierPropertiesOutput) Serverless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *bool { return v.Serverless }).(pulumi.BoolPtrOutput)
}

// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
func (o FleetTierPropertiesOutput) ServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *string { return v.ServiceTier }).(pulumi.StringPtrOutput)
}

// Enable zone redundancy for all databases in this tier.
func (o FleetTierPropertiesOutput) ZoneRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetTierProperties) *string { return v.ZoneRedundancy }).(pulumi.StringPtrOutput)
}

type FleetTierPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FleetTierPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTierProperties)(nil)).Elem()
}

func (o FleetTierPropertiesPtrOutput) ToFleetTierPropertiesPtrOutput() FleetTierPropertiesPtrOutput {
	return o
}

func (o FleetTierPropertiesPtrOutput) ToFleetTierPropertiesPtrOutputWithContext(ctx context.Context) FleetTierPropertiesPtrOutput {
	return o
}

func (o FleetTierPropertiesPtrOutput) Elem() FleetTierPropertiesOutput {
	return o.ApplyT(func(v *FleetTierProperties) FleetTierProperties {
		if v != nil {
			return *v
		}
		var ret FleetTierProperties
		return ret
	}).(FleetTierPropertiesOutput)
}

// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
func (o FleetTierPropertiesPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Maximum allocated capacity per database, in units matching the specified service tier.
func (o FleetTierPropertiesPtrOutput) DatabaseCapacityMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.DatabaseCapacityMax
	}).(pulumi.Float64PtrOutput)
}

// Minimum allocated capacity per database, in units matching the specified service tier.
func (o FleetTierPropertiesPtrOutput) DatabaseCapacityMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.DatabaseCapacityMin
	}).(pulumi.Float64PtrOutput)
}

// Maximum database size in Gb.
func (o FleetTierPropertiesPtrOutput) DatabaseSizeGbMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *int {
		if v == nil {
			return nil
		}
		return v.DatabaseSizeGbMax
	}).(pulumi.IntPtrOutput)
}

// Family of provisioned resources, for example Gen5.
func (o FleetTierPropertiesPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Number of high availability replicas for databases in this tier.
func (o FleetTierPropertiesPtrOutput) HighAvailabilityReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *int {
		if v == nil {
			return nil
		}
		return v.HighAvailabilityReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of databases per pool.
func (o FleetTierPropertiesPtrOutput) PoolNumOfDatabasesMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *int {
		if v == nil {
			return nil
		}
		return v.PoolNumOfDatabasesMax
	}).(pulumi.IntPtrOutput)
}

// If true, databases are pooled.
func (o FleetTierPropertiesPtrOutput) Pooled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Pooled
	}).(pulumi.BoolPtrOutput)
}

// If true, serverless resources are provisioned in the tier.
func (o FleetTierPropertiesPtrOutput) Serverless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Serverless
	}).(pulumi.BoolPtrOutput)
}

// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
func (o FleetTierPropertiesPtrOutput) ServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTier
	}).(pulumi.StringPtrOutput)
}

// Enable zone redundancy for all databases in this tier.
func (o FleetTierPropertiesPtrOutput) ZoneRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetTierProperties) *string {
		if v == nil {
			return nil
		}
		return v.ZoneRedundancy
	}).(pulumi.StringPtrOutput)
}

// A Fleet tier properties.
type FleetTierPropertiesResponse struct {
	// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
	Capacity *int `pulumi:"capacity"`
	// Maximum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMax *float64 `pulumi:"databaseCapacityMax"`
	// Minimum allocated capacity per database, in units matching the specified service tier.
	DatabaseCapacityMin *float64 `pulumi:"databaseCapacityMin"`
	// Maximum database size in Gb.
	DatabaseSizeGbMax *int `pulumi:"databaseSizeGbMax"`
	// If true, tier is disabled.
	Disabled bool `pulumi:"disabled"`
	// Family of provisioned resources, for example Gen5.
	Family *string `pulumi:"family"`
	// Number of high availability replicas for databases in this tier.
	HighAvailabilityReplicaCount *int `pulumi:"highAvailabilityReplicaCount"`
	// Maximum number of databases per pool.
	PoolNumOfDatabasesMax *int `pulumi:"poolNumOfDatabasesMax"`
	// If true, databases are pooled.
	Pooled *bool `pulumi:"pooled"`
	// Provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// If true, serverless resources are provisioned in the tier.
	Serverless *bool `pulumi:"serverless"`
	// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
	ServiceTier *string `pulumi:"serviceTier"`
	// Enable zone redundancy for all databases in this tier.
	ZoneRedundancy *string `pulumi:"zoneRedundancy"`
}

// A Fleet tier properties.
type FleetTierPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FleetTierPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTierPropertiesResponse)(nil)).Elem()
}

func (o FleetTierPropertiesResponseOutput) ToFleetTierPropertiesResponseOutput() FleetTierPropertiesResponseOutput {
	return o
}

func (o FleetTierPropertiesResponseOutput) ToFleetTierPropertiesResponseOutputWithContext(ctx context.Context) FleetTierPropertiesResponseOutput {
	return o
}

// Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.
func (o FleetTierPropertiesResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Maximum allocated capacity per database, in units matching the specified service tier.
func (o FleetTierPropertiesResponseOutput) DatabaseCapacityMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *float64 { return v.DatabaseCapacityMax }).(pulumi.Float64PtrOutput)
}

// Minimum allocated capacity per database, in units matching the specified service tier.
func (o FleetTierPropertiesResponseOutput) DatabaseCapacityMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *float64 { return v.DatabaseCapacityMin }).(pulumi.Float64PtrOutput)
}

// Maximum database size in Gb.
func (o FleetTierPropertiesResponseOutput) DatabaseSizeGbMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *int { return v.DatabaseSizeGbMax }).(pulumi.IntPtrOutput)
}

// If true, tier is disabled.
func (o FleetTierPropertiesResponseOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// Family of provisioned resources, for example Gen5.
func (o FleetTierPropertiesResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Number of high availability replicas for databases in this tier.
func (o FleetTierPropertiesResponseOutput) HighAvailabilityReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *int { return v.HighAvailabilityReplicaCount }).(pulumi.IntPtrOutput)
}

// Maximum number of databases per pool.
func (o FleetTierPropertiesResponseOutput) PoolNumOfDatabasesMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *int { return v.PoolNumOfDatabasesMax }).(pulumi.IntPtrOutput)
}

// If true, databases are pooled.
func (o FleetTierPropertiesResponseOutput) Pooled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *bool { return v.Pooled }).(pulumi.BoolPtrOutput)
}

// Provisioning state.
func (o FleetTierPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// If true, serverless resources are provisioned in the tier.
func (o FleetTierPropertiesResponseOutput) Serverless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *bool { return v.Serverless }).(pulumi.BoolPtrOutput)
}

// Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.
func (o FleetTierPropertiesResponseOutput) ServiceTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *string { return v.ServiceTier }).(pulumi.StringPtrOutput)
}

// Enable zone redundancy for all databases in this tier.
func (o FleetTierPropertiesResponseOutput) ZoneRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetTierPropertiesResponse) *string { return v.ZoneRedundancy }).(pulumi.StringPtrOutput)
}

// A Fleetspace properties.
type FleetspaceProperties struct {
	// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
	CapacityMax *int `pulumi:"capacityMax"`
	// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
	MainPrincipal *MainPrincipal `pulumi:"mainPrincipal"`
}

// FleetspacePropertiesInput is an input type that accepts FleetspacePropertiesArgs and FleetspacePropertiesOutput values.
// You can construct a concrete instance of `FleetspacePropertiesInput` via:
//
//	FleetspacePropertiesArgs{...}
type FleetspacePropertiesInput interface {
	pulumi.Input

	ToFleetspacePropertiesOutput() FleetspacePropertiesOutput
	ToFleetspacePropertiesOutputWithContext(context.Context) FleetspacePropertiesOutput
}

// A Fleetspace properties.
type FleetspacePropertiesArgs struct {
	// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
	CapacityMax pulumi.IntPtrInput `pulumi:"capacityMax"`
	// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
	MainPrincipal MainPrincipalPtrInput `pulumi:"mainPrincipal"`
}

func (FleetspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetspaceProperties)(nil)).Elem()
}

func (i FleetspacePropertiesArgs) ToFleetspacePropertiesOutput() FleetspacePropertiesOutput {
	return i.ToFleetspacePropertiesOutputWithContext(context.Background())
}

func (i FleetspacePropertiesArgs) ToFleetspacePropertiesOutputWithContext(ctx context.Context) FleetspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetspacePropertiesOutput)
}

func (i FleetspacePropertiesArgs) ToFleetspacePropertiesPtrOutput() FleetspacePropertiesPtrOutput {
	return i.ToFleetspacePropertiesPtrOutputWithContext(context.Background())
}

func (i FleetspacePropertiesArgs) ToFleetspacePropertiesPtrOutputWithContext(ctx context.Context) FleetspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetspacePropertiesOutput).ToFleetspacePropertiesPtrOutputWithContext(ctx)
}

// FleetspacePropertiesPtrInput is an input type that accepts FleetspacePropertiesArgs, FleetspacePropertiesPtr and FleetspacePropertiesPtrOutput values.
// You can construct a concrete instance of `FleetspacePropertiesPtrInput` via:
//
//	        FleetspacePropertiesArgs{...}
//
//	or:
//
//	        nil
type FleetspacePropertiesPtrInput interface {
	pulumi.Input

	ToFleetspacePropertiesPtrOutput() FleetspacePropertiesPtrOutput
	ToFleetspacePropertiesPtrOutputWithContext(context.Context) FleetspacePropertiesPtrOutput
}

type fleetspacePropertiesPtrType FleetspacePropertiesArgs

func FleetspacePropertiesPtr(v *FleetspacePropertiesArgs) FleetspacePropertiesPtrInput {
	return (*fleetspacePropertiesPtrType)(v)
}

func (*fleetspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetspaceProperties)(nil)).Elem()
}

func (i *fleetspacePropertiesPtrType) ToFleetspacePropertiesPtrOutput() FleetspacePropertiesPtrOutput {
	return i.ToFleetspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *fleetspacePropertiesPtrType) ToFleetspacePropertiesPtrOutputWithContext(ctx context.Context) FleetspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetspacePropertiesPtrOutput)
}

// A Fleetspace properties.
type FleetspacePropertiesOutput struct{ *pulumi.OutputState }

func (FleetspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetspaceProperties)(nil)).Elem()
}

func (o FleetspacePropertiesOutput) ToFleetspacePropertiesOutput() FleetspacePropertiesOutput {
	return o
}

func (o FleetspacePropertiesOutput) ToFleetspacePropertiesOutputWithContext(ctx context.Context) FleetspacePropertiesOutput {
	return o
}

func (o FleetspacePropertiesOutput) ToFleetspacePropertiesPtrOutput() FleetspacePropertiesPtrOutput {
	return o.ToFleetspacePropertiesPtrOutputWithContext(context.Background())
}

func (o FleetspacePropertiesOutput) ToFleetspacePropertiesPtrOutputWithContext(ctx context.Context) FleetspacePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetspaceProperties) *FleetspaceProperties {
		return &v
	}).(FleetspacePropertiesPtrOutput)
}

// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
func (o FleetspacePropertiesOutput) CapacityMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetspaceProperties) *int { return v.CapacityMax }).(pulumi.IntPtrOutput)
}

// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
func (o FleetspacePropertiesOutput) MainPrincipal() MainPrincipalPtrOutput {
	return o.ApplyT(func(v FleetspaceProperties) *MainPrincipal { return v.MainPrincipal }).(MainPrincipalPtrOutput)
}

type FleetspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FleetspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetspaceProperties)(nil)).Elem()
}

func (o FleetspacePropertiesPtrOutput) ToFleetspacePropertiesPtrOutput() FleetspacePropertiesPtrOutput {
	return o
}

func (o FleetspacePropertiesPtrOutput) ToFleetspacePropertiesPtrOutputWithContext(ctx context.Context) FleetspacePropertiesPtrOutput {
	return o
}

func (o FleetspacePropertiesPtrOutput) Elem() FleetspacePropertiesOutput {
	return o.ApplyT(func(v *FleetspaceProperties) FleetspaceProperties {
		if v != nil {
			return *v
		}
		var ret FleetspaceProperties
		return ret
	}).(FleetspacePropertiesOutput)
}

// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
func (o FleetspacePropertiesPtrOutput) CapacityMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.CapacityMax
	}).(pulumi.IntPtrOutput)
}

// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
func (o FleetspacePropertiesPtrOutput) MainPrincipal() MainPrincipalPtrOutput {
	return o.ApplyT(func(v *FleetspaceProperties) *MainPrincipal {
		if v == nil {
			return nil
		}
		return v.MainPrincipal
	}).(MainPrincipalPtrOutput)
}

// A Fleetspace properties.
type FleetspacePropertiesResponse struct {
	// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
	CapacityMax *int `pulumi:"capacityMax"`
	// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
	MainPrincipal *MainPrincipalResponse `pulumi:"mainPrincipal"`
	// Fleetspace state.
	ProvisioningState string `pulumi:"provisioningState"`
}

// A Fleetspace properties.
type FleetspacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FleetspacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetspacePropertiesResponse)(nil)).Elem()
}

func (o FleetspacePropertiesResponseOutput) ToFleetspacePropertiesResponseOutput() FleetspacePropertiesResponseOutput {
	return o
}

func (o FleetspacePropertiesResponseOutput) ToFleetspacePropertiesResponseOutputWithContext(ctx context.Context) FleetspacePropertiesResponseOutput {
	return o
}

// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
func (o FleetspacePropertiesResponseOutput) CapacityMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetspacePropertiesResponse) *int { return v.CapacityMax }).(pulumi.IntPtrOutput)
}

// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
func (o FleetspacePropertiesResponseOutput) MainPrincipal() MainPrincipalResponsePtrOutput {
	return o.ApplyT(func(v FleetspacePropertiesResponse) *MainPrincipalResponse { return v.MainPrincipal }).(MainPrincipalResponsePtrOutput)
}

// Fleetspace state.
func (o FleetspacePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FleetspacePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Database Identity.
type Identity struct {
	// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
	FederatedClientId *string `pulumi:"federatedClientId"`
	// Identity type of the main principal.
	IdentityType *string `pulumi:"identityType"`
	// User identity ids
	UserAssignedIdentities []DatabaseIdentity `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//	IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Database Identity.
type IdentityArgs struct {
	// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
	FederatedClientId pulumi.StringPtrInput `pulumi:"federatedClientId"`
	// Identity type of the main principal.
	IdentityType pulumi.StringPtrInput `pulumi:"identityType"`
	// User identity ids
	UserAssignedIdentities DatabaseIdentityArrayInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//	        IdentityArgs{...}
//
//	or:
//
//	        nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Database Identity.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
func (o IdentityOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.FederatedClientId }).(pulumi.StringPtrOutput)
}

// Identity type of the main principal.
func (o IdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// User identity ids
func (o IdentityOutput) UserAssignedIdentities() DatabaseIdentityArrayOutput {
	return o.ApplyT(func(v Identity) []DatabaseIdentity { return v.UserAssignedIdentities }).(DatabaseIdentityArrayOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
func (o IdentityPtrOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.FederatedClientId
	}).(pulumi.StringPtrOutput)
}

// Identity type of the main principal.
func (o IdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User identity ids
func (o IdentityPtrOutput) UserAssignedIdentities() DatabaseIdentityArrayOutput {
	return o.ApplyT(func(v *Identity) []DatabaseIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(DatabaseIdentityArrayOutput)
}

// Database Identity.
type IdentityResponse struct {
	// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
	FederatedClientId *string `pulumi:"federatedClientId"`
	// Identity type of the main principal.
	IdentityType *string `pulumi:"identityType"`
	// User identity ids
	UserAssignedIdentities []DatabaseIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Database Identity.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
func (o IdentityResponseOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.FederatedClientId }).(pulumi.StringPtrOutput)
}

// Identity type of the main principal.
func (o IdentityResponseOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// User identity ids
func (o IdentityResponseOutput) UserAssignedIdentities() DatabaseIdentityResponseArrayOutput {
	return o.ApplyT(func(v IdentityResponse) []DatabaseIdentityResponse { return v.UserAssignedIdentities }).(DatabaseIdentityResponseArrayOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The federated client id for the SQL Database. It is used for cross tenant CMK scenario.
func (o IdentityResponsePtrOutput) FederatedClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.FederatedClientId
	}).(pulumi.StringPtrOutput)
}

// Identity type of the main principal.
func (o IdentityResponsePtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User identity ids
func (o IdentityResponsePtrOutput) UserAssignedIdentities() DatabaseIdentityResponseArrayOutput {
	return o.ApplyT(func(v *IdentityResponse) []DatabaseIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(DatabaseIdentityResponseArrayOutput)
}

// A main principal.
type MainPrincipal struct {
	// Application Id of the main principal.
	ApplicationId *string `pulumi:"applicationId"`
	// Login name of the main principal.
	Login *string `pulumi:"login"`
	// Object Id of the main principal.
	ObjectId *string `pulumi:"objectId"`
	// Principal type of the main principal.
	PrincipalType *string `pulumi:"principalType"`
	// Tenant Id of the main principal.
	TenantId *string `pulumi:"tenantId"`
}

// MainPrincipalInput is an input type that accepts MainPrincipalArgs and MainPrincipalOutput values.
// You can construct a concrete instance of `MainPrincipalInput` via:
//
//	MainPrincipalArgs{...}
type MainPrincipalInput interface {
	pulumi.Input

	ToMainPrincipalOutput() MainPrincipalOutput
	ToMainPrincipalOutputWithContext(context.Context) MainPrincipalOutput
}

// A main principal.
type MainPrincipalArgs struct {
	// Application Id of the main principal.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// Login name of the main principal.
	Login pulumi.StringPtrInput `pulumi:"login"`
	// Object Id of the main principal.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Principal type of the main principal.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// Tenant Id of the main principal.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (MainPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MainPrincipal)(nil)).Elem()
}

func (i MainPrincipalArgs) ToMainPrincipalOutput() MainPrincipalOutput {
	return i.ToMainPrincipalOutputWithContext(context.Background())
}

func (i MainPrincipalArgs) ToMainPrincipalOutputWithContext(ctx context.Context) MainPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainPrincipalOutput)
}

func (i MainPrincipalArgs) ToMainPrincipalPtrOutput() MainPrincipalPtrOutput {
	return i.ToMainPrincipalPtrOutputWithContext(context.Background())
}

func (i MainPrincipalArgs) ToMainPrincipalPtrOutputWithContext(ctx context.Context) MainPrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainPrincipalOutput).ToMainPrincipalPtrOutputWithContext(ctx)
}

// MainPrincipalPtrInput is an input type that accepts MainPrincipalArgs, MainPrincipalPtr and MainPrincipalPtrOutput values.
// You can construct a concrete instance of `MainPrincipalPtrInput` via:
//
//	        MainPrincipalArgs{...}
//
//	or:
//
//	        nil
type MainPrincipalPtrInput interface {
	pulumi.Input

	ToMainPrincipalPtrOutput() MainPrincipalPtrOutput
	ToMainPrincipalPtrOutputWithContext(context.Context) MainPrincipalPtrOutput
}

type mainPrincipalPtrType MainPrincipalArgs

func MainPrincipalPtr(v *MainPrincipalArgs) MainPrincipalPtrInput {
	return (*mainPrincipalPtrType)(v)
}

func (*mainPrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MainPrincipal)(nil)).Elem()
}

func (i *mainPrincipalPtrType) ToMainPrincipalPtrOutput() MainPrincipalPtrOutput {
	return i.ToMainPrincipalPtrOutputWithContext(context.Background())
}

func (i *mainPrincipalPtrType) ToMainPrincipalPtrOutputWithContext(ctx context.Context) MainPrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MainPrincipalPtrOutput)
}

// A main principal.
type MainPrincipalOutput struct{ *pulumi.OutputState }

func (MainPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MainPrincipal)(nil)).Elem()
}

func (o MainPrincipalOutput) ToMainPrincipalOutput() MainPrincipalOutput {
	return o
}

func (o MainPrincipalOutput) ToMainPrincipalOutputWithContext(ctx context.Context) MainPrincipalOutput {
	return o
}

func (o MainPrincipalOutput) ToMainPrincipalPtrOutput() MainPrincipalPtrOutput {
	return o.ToMainPrincipalPtrOutputWithContext(context.Background())
}

func (o MainPrincipalOutput) ToMainPrincipalPtrOutputWithContext(ctx context.Context) MainPrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MainPrincipal) *MainPrincipal {
		return &v
	}).(MainPrincipalPtrOutput)
}

// Application Id of the main principal.
func (o MainPrincipalOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipal) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// Login name of the main principal.
func (o MainPrincipalOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipal) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Object Id of the main principal.
func (o MainPrincipalOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipal) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Principal type of the main principal.
func (o MainPrincipalOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipal) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Tenant Id of the main principal.
func (o MainPrincipalOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipal) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type MainPrincipalPtrOutput struct{ *pulumi.OutputState }

func (MainPrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MainPrincipal)(nil)).Elem()
}

func (o MainPrincipalPtrOutput) ToMainPrincipalPtrOutput() MainPrincipalPtrOutput {
	return o
}

func (o MainPrincipalPtrOutput) ToMainPrincipalPtrOutputWithContext(ctx context.Context) MainPrincipalPtrOutput {
	return o
}

func (o MainPrincipalPtrOutput) Elem() MainPrincipalOutput {
	return o.ApplyT(func(v *MainPrincipal) MainPrincipal {
		if v != nil {
			return *v
		}
		var ret MainPrincipal
		return ret
	}).(MainPrincipalOutput)
}

// Application Id of the main principal.
func (o MainPrincipalPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Login name of the main principal.
func (o MainPrincipalPtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipal) *string {
		if v == nil {
			return nil
		}
		return v.Login
	}).(pulumi.StringPtrOutput)
}

// Object Id of the main principal.
func (o MainPrincipalPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Principal type of the main principal.
func (o MainPrincipalPtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipal) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Tenant Id of the main principal.
func (o MainPrincipalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipal) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// A main principal.
type MainPrincipalResponse struct {
	// Application Id of the main principal.
	ApplicationId *string `pulumi:"applicationId"`
	// Login name of the main principal.
	Login *string `pulumi:"login"`
	// Object Id of the main principal.
	ObjectId *string `pulumi:"objectId"`
	// Principal type of the main principal.
	PrincipalType *string `pulumi:"principalType"`
	// Tenant Id of the main principal.
	TenantId *string `pulumi:"tenantId"`
}

// A main principal.
type MainPrincipalResponseOutput struct{ *pulumi.OutputState }

func (MainPrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MainPrincipalResponse)(nil)).Elem()
}

func (o MainPrincipalResponseOutput) ToMainPrincipalResponseOutput() MainPrincipalResponseOutput {
	return o
}

func (o MainPrincipalResponseOutput) ToMainPrincipalResponseOutputWithContext(ctx context.Context) MainPrincipalResponseOutput {
	return o
}

// Application Id of the main principal.
func (o MainPrincipalResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipalResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// Login name of the main principal.
func (o MainPrincipalResponseOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipalResponse) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Object Id of the main principal.
func (o MainPrincipalResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipalResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Principal type of the main principal.
func (o MainPrincipalResponseOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipalResponse) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Tenant Id of the main principal.
func (o MainPrincipalResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MainPrincipalResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type MainPrincipalResponsePtrOutput struct{ *pulumi.OutputState }

func (MainPrincipalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MainPrincipalResponse)(nil)).Elem()
}

func (o MainPrincipalResponsePtrOutput) ToMainPrincipalResponsePtrOutput() MainPrincipalResponsePtrOutput {
	return o
}

func (o MainPrincipalResponsePtrOutput) ToMainPrincipalResponsePtrOutputWithContext(ctx context.Context) MainPrincipalResponsePtrOutput {
	return o
}

func (o MainPrincipalResponsePtrOutput) Elem() MainPrincipalResponseOutput {
	return o.ApplyT(func(v *MainPrincipalResponse) MainPrincipalResponse {
		if v != nil {
			return *v
		}
		var ret MainPrincipalResponse
		return ret
	}).(MainPrincipalResponseOutput)
}

// Application Id of the main principal.
func (o MainPrincipalResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Login name of the main principal.
func (o MainPrincipalResponsePtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Login
	}).(pulumi.StringPtrOutput)
}

// Object Id of the main principal.
func (o MainPrincipalResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Principal type of the main principal.
func (o MainPrincipalResponsePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Tenant Id of the main principal.
func (o MainPrincipalResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MainPrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Transparent Data Encryption properties.
type TransparentDataEncryption struct {
	// Enable key auto rotation
	EnableAutoRotation *bool `pulumi:"enableAutoRotation"`
	// Customer Managed Key (CMK) Uri.
	KeyUri *string `pulumi:"keyUri"`
	// Additional Keys
	Keys []string `pulumi:"keys"`
}

// TransparentDataEncryptionInput is an input type that accepts TransparentDataEncryptionArgs and TransparentDataEncryptionOutput values.
// You can construct a concrete instance of `TransparentDataEncryptionInput` via:
//
//	TransparentDataEncryptionArgs{...}
type TransparentDataEncryptionInput interface {
	pulumi.Input

	ToTransparentDataEncryptionOutput() TransparentDataEncryptionOutput
	ToTransparentDataEncryptionOutputWithContext(context.Context) TransparentDataEncryptionOutput
}

// Transparent Data Encryption properties.
type TransparentDataEncryptionArgs struct {
	// Enable key auto rotation
	EnableAutoRotation pulumi.BoolPtrInput `pulumi:"enableAutoRotation"`
	// Customer Managed Key (CMK) Uri.
	KeyUri pulumi.StringPtrInput `pulumi:"keyUri"`
	// Additional Keys
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (TransparentDataEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransparentDataEncryption)(nil)).Elem()
}

func (i TransparentDataEncryptionArgs) ToTransparentDataEncryptionOutput() TransparentDataEncryptionOutput {
	return i.ToTransparentDataEncryptionOutputWithContext(context.Background())
}

func (i TransparentDataEncryptionArgs) ToTransparentDataEncryptionOutputWithContext(ctx context.Context) TransparentDataEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransparentDataEncryptionOutput)
}

func (i TransparentDataEncryptionArgs) ToTransparentDataEncryptionPtrOutput() TransparentDataEncryptionPtrOutput {
	return i.ToTransparentDataEncryptionPtrOutputWithContext(context.Background())
}

func (i TransparentDataEncryptionArgs) ToTransparentDataEncryptionPtrOutputWithContext(ctx context.Context) TransparentDataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransparentDataEncryptionOutput).ToTransparentDataEncryptionPtrOutputWithContext(ctx)
}

// TransparentDataEncryptionPtrInput is an input type that accepts TransparentDataEncryptionArgs, TransparentDataEncryptionPtr and TransparentDataEncryptionPtrOutput values.
// You can construct a concrete instance of `TransparentDataEncryptionPtrInput` via:
//
//	        TransparentDataEncryptionArgs{...}
//
//	or:
//
//	        nil
type TransparentDataEncryptionPtrInput interface {
	pulumi.Input

	ToTransparentDataEncryptionPtrOutput() TransparentDataEncryptionPtrOutput
	ToTransparentDataEncryptionPtrOutputWithContext(context.Context) TransparentDataEncryptionPtrOutput
}

type transparentDataEncryptionPtrType TransparentDataEncryptionArgs

func TransparentDataEncryptionPtr(v *TransparentDataEncryptionArgs) TransparentDataEncryptionPtrInput {
	return (*transparentDataEncryptionPtrType)(v)
}

func (*transparentDataEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransparentDataEncryption)(nil)).Elem()
}

func (i *transparentDataEncryptionPtrType) ToTransparentDataEncryptionPtrOutput() TransparentDataEncryptionPtrOutput {
	return i.ToTransparentDataEncryptionPtrOutputWithContext(context.Background())
}

func (i *transparentDataEncryptionPtrType) ToTransparentDataEncryptionPtrOutputWithContext(ctx context.Context) TransparentDataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransparentDataEncryptionPtrOutput)
}

// Transparent Data Encryption properties.
type TransparentDataEncryptionOutput struct{ *pulumi.OutputState }

func (TransparentDataEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransparentDataEncryption)(nil)).Elem()
}

func (o TransparentDataEncryptionOutput) ToTransparentDataEncryptionOutput() TransparentDataEncryptionOutput {
	return o
}

func (o TransparentDataEncryptionOutput) ToTransparentDataEncryptionOutputWithContext(ctx context.Context) TransparentDataEncryptionOutput {
	return o
}

func (o TransparentDataEncryptionOutput) ToTransparentDataEncryptionPtrOutput() TransparentDataEncryptionPtrOutput {
	return o.ToTransparentDataEncryptionPtrOutputWithContext(context.Background())
}

func (o TransparentDataEncryptionOutput) ToTransparentDataEncryptionPtrOutputWithContext(ctx context.Context) TransparentDataEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransparentDataEncryption) *TransparentDataEncryption {
		return &v
	}).(TransparentDataEncryptionPtrOutput)
}

// Enable key auto rotation
func (o TransparentDataEncryptionOutput) EnableAutoRotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransparentDataEncryption) *bool { return v.EnableAutoRotation }).(pulumi.BoolPtrOutput)
}

// Customer Managed Key (CMK) Uri.
func (o TransparentDataEncryptionOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransparentDataEncryption) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

// Additional Keys
func (o TransparentDataEncryptionOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransparentDataEncryption) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type TransparentDataEncryptionPtrOutput struct{ *pulumi.OutputState }

func (TransparentDataEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransparentDataEncryption)(nil)).Elem()
}

func (o TransparentDataEncryptionPtrOutput) ToTransparentDataEncryptionPtrOutput() TransparentDataEncryptionPtrOutput {
	return o
}

func (o TransparentDataEncryptionPtrOutput) ToTransparentDataEncryptionPtrOutputWithContext(ctx context.Context) TransparentDataEncryptionPtrOutput {
	return o
}

func (o TransparentDataEncryptionPtrOutput) Elem() TransparentDataEncryptionOutput {
	return o.ApplyT(func(v *TransparentDataEncryption) TransparentDataEncryption {
		if v != nil {
			return *v
		}
		var ret TransparentDataEncryption
		return ret
	}).(TransparentDataEncryptionOutput)
}

// Enable key auto rotation
func (o TransparentDataEncryptionPtrOutput) EnableAutoRotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransparentDataEncryption) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoRotation
	}).(pulumi.BoolPtrOutput)
}

// Customer Managed Key (CMK) Uri.
func (o TransparentDataEncryptionPtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransparentDataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// Additional Keys
func (o TransparentDataEncryptionPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransparentDataEncryption) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Transparent Data Encryption properties.
type TransparentDataEncryptionResponse struct {
	// Enable key auto rotation
	EnableAutoRotation *bool `pulumi:"enableAutoRotation"`
	// Customer Managed Key (CMK) Uri.
	KeyUri *string `pulumi:"keyUri"`
	// Additional Keys
	Keys []string `pulumi:"keys"`
}

// Transparent Data Encryption properties.
type TransparentDataEncryptionResponseOutput struct{ *pulumi.OutputState }

func (TransparentDataEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransparentDataEncryptionResponse)(nil)).Elem()
}

func (o TransparentDataEncryptionResponseOutput) ToTransparentDataEncryptionResponseOutput() TransparentDataEncryptionResponseOutput {
	return o
}

func (o TransparentDataEncryptionResponseOutput) ToTransparentDataEncryptionResponseOutputWithContext(ctx context.Context) TransparentDataEncryptionResponseOutput {
	return o
}

// Enable key auto rotation
func (o TransparentDataEncryptionResponseOutput) EnableAutoRotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransparentDataEncryptionResponse) *bool { return v.EnableAutoRotation }).(pulumi.BoolPtrOutput)
}

// Customer Managed Key (CMK) Uri.
func (o TransparentDataEncryptionResponseOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransparentDataEncryptionResponse) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

// Additional Keys
func (o TransparentDataEncryptionResponseOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransparentDataEncryptionResponse) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type TransparentDataEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (TransparentDataEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransparentDataEncryptionResponse)(nil)).Elem()
}

func (o TransparentDataEncryptionResponsePtrOutput) ToTransparentDataEncryptionResponsePtrOutput() TransparentDataEncryptionResponsePtrOutput {
	return o
}

func (o TransparentDataEncryptionResponsePtrOutput) ToTransparentDataEncryptionResponsePtrOutputWithContext(ctx context.Context) TransparentDataEncryptionResponsePtrOutput {
	return o
}

func (o TransparentDataEncryptionResponsePtrOutput) Elem() TransparentDataEncryptionResponseOutput {
	return o.ApplyT(func(v *TransparentDataEncryptionResponse) TransparentDataEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret TransparentDataEncryptionResponse
		return ret
	}).(TransparentDataEncryptionResponseOutput)
}

// Enable key auto rotation
func (o TransparentDataEncryptionResponsePtrOutput) EnableAutoRotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransparentDataEncryptionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoRotation
	}).(pulumi.BoolPtrOutput)
}

// Customer Managed Key (CMK) Uri.
func (o TransparentDataEncryptionResponsePtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransparentDataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// Additional Keys
func (o TransparentDataEncryptionResponsePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransparentDataEncryptionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseIdentityOutput{})
	pulumi.RegisterOutputType(DatabaseIdentityArrayOutput{})
	pulumi.RegisterOutputType(DatabaseIdentityResponseOutput{})
	pulumi.RegisterOutputType(DatabaseIdentityResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallRulePropertiesOutput{})
	pulumi.RegisterOutputType(FirewallRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FirewallRulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(FleetDatabasePropertiesOutput{})
	pulumi.RegisterOutputType(FleetDatabasePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FleetDatabasePropertiesResponseOutput{})
	pulumi.RegisterOutputType(FleetPropertiesOutput{})
	pulumi.RegisterOutputType(FleetPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FleetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FleetTierPropertiesOutput{})
	pulumi.RegisterOutputType(FleetTierPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FleetTierPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FleetspacePropertiesOutput{})
	pulumi.RegisterOutputType(FleetspacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FleetspacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MainPrincipalOutput{})
	pulumi.RegisterOutputType(MainPrincipalPtrOutput{})
	pulumi.RegisterOutputType(MainPrincipalResponseOutput{})
	pulumi.RegisterOutputType(MainPrincipalResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TransparentDataEncryptionOutput{})
	pulumi.RegisterOutputType(TransparentDataEncryptionPtrOutput{})
	pulumi.RegisterOutputType(TransparentDataEncryptionResponseOutput{})
	pulumi.RegisterOutputType(TransparentDataEncryptionResponsePtrOutput{})
}
