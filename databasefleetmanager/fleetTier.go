// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasefleetmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A SQL Database Fleet tier.
//
// Uses Azure REST API version 2025-02-01-preview.
type FleetTier struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// A Fleet tier properties.
	Properties FleetTierPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFleetTier registers a new resource with the given unique name, arguments, and options.
func NewFleetTier(ctx *pulumi.Context,
	name string, args *FleetTierArgs, opts ...pulumi.ResourceOption) (*FleetTier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FleetName == nil {
		return nil, errors.New("invalid value for required argument 'FleetName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:databasefleetmanager/v20250201preview:FleetTier"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource FleetTier
	err := ctx.RegisterResource("azure-native:databasefleetmanager:FleetTier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleetTier gets an existing FleetTier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleetTier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetTierState, opts ...pulumi.ResourceOption) (*FleetTier, error) {
	var resource FleetTier
	err := ctx.ReadResource("azure-native:databasefleetmanager:FleetTier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FleetTier resources.
type fleetTierState struct {
}

type FleetTierState struct {
}

func (FleetTierState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetTierState)(nil)).Elem()
}

type fleetTierArgs struct {
	// Name of the database fleet.
	FleetName string `pulumi:"fleetName"`
	// A Fleet tier properties.
	Properties *FleetTierProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the tier.
	TierName *string `pulumi:"tierName"`
}

// The set of arguments for constructing a FleetTier resource.
type FleetTierArgs struct {
	// Name of the database fleet.
	FleetName pulumi.StringInput
	// A Fleet tier properties.
	Properties FleetTierPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the tier.
	TierName pulumi.StringPtrInput
}

func (FleetTierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetTierArgs)(nil)).Elem()
}

type FleetTierInput interface {
	pulumi.Input

	ToFleetTierOutput() FleetTierOutput
	ToFleetTierOutputWithContext(ctx context.Context) FleetTierOutput
}

func (*FleetTier) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTier)(nil)).Elem()
}

func (i *FleetTier) ToFleetTierOutput() FleetTierOutput {
	return i.ToFleetTierOutputWithContext(context.Background())
}

func (i *FleetTier) ToFleetTierOutputWithContext(ctx context.Context) FleetTierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTierOutput)
}

type FleetTierOutput struct{ *pulumi.OutputState }

func (FleetTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTier)(nil)).Elem()
}

func (o FleetTierOutput) ToFleetTierOutput() FleetTierOutput {
	return o
}

func (o FleetTierOutput) ToFleetTierOutputWithContext(ctx context.Context) FleetTierOutput {
	return o
}

// The name of the resource
func (o FleetTierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetTier) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A Fleet tier properties.
func (o FleetTierOutput) Properties() FleetTierPropertiesResponseOutput {
	return o.ApplyT(func(v *FleetTier) FleetTierPropertiesResponseOutput { return v.Properties }).(FleetTierPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o FleetTierOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *FleetTier) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o FleetTierOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetTier) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FleetTierOutput{})
}
