// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
type DatabaseCreateMode string

const (
	// Create a database.
	DatabaseCreateModeDefault = DatabaseCreateMode("Default")
	// Copy the source database (source database name must be specified).
	DatabaseCreateModeCopy = DatabaseCreateMode("Copy")
	// Create a database by restoring source database from a point in time (source database name and restore from time must be specified).
	DatabaseCreateModePointInTimeRestore = DatabaseCreateMode("PointInTimeRestore")
)

func (DatabaseCreateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCreateMode)(nil)).Elem()
}

func (e DatabaseCreateMode) ToDatabaseCreateModeOutput() DatabaseCreateModeOutput {
	return pulumi.ToOutput(e).(DatabaseCreateModeOutput)
}

func (e DatabaseCreateMode) ToDatabaseCreateModeOutputWithContext(ctx context.Context) DatabaseCreateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseCreateModeOutput)
}

func (e DatabaseCreateMode) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return e.ToDatabaseCreateModePtrOutputWithContext(context.Background())
}

func (e DatabaseCreateMode) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return DatabaseCreateMode(e).ToDatabaseCreateModeOutputWithContext(ctx).ToDatabaseCreateModePtrOutputWithContext(ctx)
}

func (e DatabaseCreateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseCreateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseCreateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseCreateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseCreateModeOutput struct{ *pulumi.OutputState }

func (DatabaseCreateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseCreateMode)(nil)).Elem()
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModeOutput() DatabaseCreateModeOutput {
	return o
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModeOutputWithContext(ctx context.Context) DatabaseCreateModeOutput {
	return o
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return o.ToDatabaseCreateModePtrOutputWithContext(context.Background())
}

func (o DatabaseCreateModeOutput) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseCreateMode) *DatabaseCreateMode {
		return &v
	}).(DatabaseCreateModePtrOutput)
}

func (o DatabaseCreateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseCreateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseCreateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseCreateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseCreateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseCreateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseCreateModePtrOutput struct{ *pulumi.OutputState }

func (DatabaseCreateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseCreateMode)(nil)).Elem()
}

func (o DatabaseCreateModePtrOutput) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return o
}

func (o DatabaseCreateModePtrOutput) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return o
}

func (o DatabaseCreateModePtrOutput) Elem() DatabaseCreateModeOutput {
	return o.ApplyT(func(v *DatabaseCreateMode) DatabaseCreateMode {
		if v != nil {
			return *v
		}
		var ret DatabaseCreateMode
		return ret
	}).(DatabaseCreateModeOutput)
}

func (o DatabaseCreateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseCreateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseCreateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseCreateModeInput is an input type that accepts values of the DatabaseCreateMode enum
// A concrete instance of `DatabaseCreateModeInput` can be one of the following:
//
//	DatabaseCreateModeDefault
//	DatabaseCreateModeCopy
//	DatabaseCreateModePointInTimeRestore
type DatabaseCreateModeInput interface {
	pulumi.Input

	ToDatabaseCreateModeOutput() DatabaseCreateModeOutput
	ToDatabaseCreateModeOutputWithContext(context.Context) DatabaseCreateModeOutput
}

var databaseCreateModePtrType = reflect.TypeOf((**DatabaseCreateMode)(nil)).Elem()

type DatabaseCreateModePtrInput interface {
	pulumi.Input

	ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput
	ToDatabaseCreateModePtrOutputWithContext(context.Context) DatabaseCreateModePtrOutput
}

type databaseCreateModePtr string

func DatabaseCreateModePtr(v string) DatabaseCreateModePtrInput {
	return (*databaseCreateModePtr)(&v)
}

func (*databaseCreateModePtr) ElementType() reflect.Type {
	return databaseCreateModePtrType
}

func (in *databaseCreateModePtr) ToDatabaseCreateModePtrOutput() DatabaseCreateModePtrOutput {
	return pulumi.ToOutput(in).(DatabaseCreateModePtrOutput)
}

func (in *databaseCreateModePtr) ToDatabaseCreateModePtrOutputWithContext(ctx context.Context) DatabaseCreateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseCreateModePtrOutput)
}

// Identity type of the main principal.
type IdentityType string

const (
	// No identity.
	IdentityTypeNone = IdentityType("None")
	// User assigned identity.
	IdentityTypeUserAssigned = IdentityType("UserAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeNone
//	IdentityTypeUserAssigned
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

// Principal type of the main principal.
type PrincipalType string

const (
	// Application principal type.
	PrincipalTypeApplication = PrincipalType("Application")
	// User principal type.
	PrincipalTypeUser = PrincipalType("User")
)

func (PrincipalType) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (e PrincipalType) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return pulumi.ToOutput(e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return e.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return PrincipalType(e).ToPrincipalTypeOutputWithContext(ctx).ToPrincipalTypePtrOutputWithContext(ctx)
}

func (e PrincipalType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrincipalTypeOutput struct{ *pulumi.OutputState }

func (PrincipalTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrincipalType) *PrincipalType {
		return &v
	}).(PrincipalTypePtrOutput)
}

func (o PrincipalTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrincipalTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrincipalTypePtrOutput struct{ *pulumi.OutputState }

func (PrincipalTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalType)(nil)).Elem()
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) Elem() PrincipalTypeOutput {
	return o.ApplyT(func(v *PrincipalType) PrincipalType {
		if v != nil {
			return *v
		}
		var ret PrincipalType
		return ret
	}).(PrincipalTypeOutput)
}

func (o PrincipalTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrincipalType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrincipalTypeInput is an input type that accepts values of the PrincipalType enum
// A concrete instance of `PrincipalTypeInput` can be one of the following:
//
//	PrincipalTypeApplication
//	PrincipalTypeUser
type PrincipalTypeInput interface {
	pulumi.Input

	ToPrincipalTypeOutput() PrincipalTypeOutput
	ToPrincipalTypeOutputWithContext(context.Context) PrincipalTypeOutput
}

var principalTypePtrType = reflect.TypeOf((**PrincipalType)(nil)).Elem()

type PrincipalTypePtrInput interface {
	pulumi.Input

	ToPrincipalTypePtrOutput() PrincipalTypePtrOutput
	ToPrincipalTypePtrOutputWithContext(context.Context) PrincipalTypePtrOutput
}

type principalTypePtr string

func PrincipalTypePtr(v string) PrincipalTypePtrInput {
	return (*principalTypePtr)(&v)
}

func (*principalTypePtr) ElementType() reflect.Type {
	return principalTypePtrType
}

func (in *principalTypePtr) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return pulumi.ToOutput(in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrincipalTypePtrOutput)
}

// Enable zone redundancy for all databases in this tier.
type ZoneRedundancy string

const (
	// Zone redundancy enabled.
	ZoneRedundancyEnabled = ZoneRedundancy("Enabled")
	// Zone redundancy disabled.
	ZoneRedundancyDisabled = ZoneRedundancy("Disabled")
)

func (ZoneRedundancy) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneRedundancy)(nil)).Elem()
}

func (e ZoneRedundancy) ToZoneRedundancyOutput() ZoneRedundancyOutput {
	return pulumi.ToOutput(e).(ZoneRedundancyOutput)
}

func (e ZoneRedundancy) ToZoneRedundancyOutputWithContext(ctx context.Context) ZoneRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ZoneRedundancyOutput)
}

func (e ZoneRedundancy) ToZoneRedundancyPtrOutput() ZoneRedundancyPtrOutput {
	return e.ToZoneRedundancyPtrOutputWithContext(context.Background())
}

func (e ZoneRedundancy) ToZoneRedundancyPtrOutputWithContext(ctx context.Context) ZoneRedundancyPtrOutput {
	return ZoneRedundancy(e).ToZoneRedundancyOutputWithContext(ctx).ToZoneRedundancyPtrOutputWithContext(ctx)
}

func (e ZoneRedundancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ZoneRedundancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ZoneRedundancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ZoneRedundancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ZoneRedundancyOutput struct{ *pulumi.OutputState }

func (ZoneRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneRedundancy)(nil)).Elem()
}

func (o ZoneRedundancyOutput) ToZoneRedundancyOutput() ZoneRedundancyOutput {
	return o
}

func (o ZoneRedundancyOutput) ToZoneRedundancyOutputWithContext(ctx context.Context) ZoneRedundancyOutput {
	return o
}

func (o ZoneRedundancyOutput) ToZoneRedundancyPtrOutput() ZoneRedundancyPtrOutput {
	return o.ToZoneRedundancyPtrOutputWithContext(context.Background())
}

func (o ZoneRedundancyOutput) ToZoneRedundancyPtrOutputWithContext(ctx context.Context) ZoneRedundancyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneRedundancy) *ZoneRedundancy {
		return &v
	}).(ZoneRedundancyPtrOutput)
}

func (o ZoneRedundancyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ZoneRedundancyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ZoneRedundancy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ZoneRedundancyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZoneRedundancyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ZoneRedundancy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ZoneRedundancyPtrOutput struct{ *pulumi.OutputState }

func (ZoneRedundancyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneRedundancy)(nil)).Elem()
}

func (o ZoneRedundancyPtrOutput) ToZoneRedundancyPtrOutput() ZoneRedundancyPtrOutput {
	return o
}

func (o ZoneRedundancyPtrOutput) ToZoneRedundancyPtrOutputWithContext(ctx context.Context) ZoneRedundancyPtrOutput {
	return o
}

func (o ZoneRedundancyPtrOutput) Elem() ZoneRedundancyOutput {
	return o.ApplyT(func(v *ZoneRedundancy) ZoneRedundancy {
		if v != nil {
			return *v
		}
		var ret ZoneRedundancy
		return ret
	}).(ZoneRedundancyOutput)
}

func (o ZoneRedundancyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZoneRedundancyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ZoneRedundancy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ZoneRedundancyInput is an input type that accepts values of the ZoneRedundancy enum
// A concrete instance of `ZoneRedundancyInput` can be one of the following:
//
//	ZoneRedundancyEnabled
//	ZoneRedundancyDisabled
type ZoneRedundancyInput interface {
	pulumi.Input

	ToZoneRedundancyOutput() ZoneRedundancyOutput
	ToZoneRedundancyOutputWithContext(context.Context) ZoneRedundancyOutput
}

var zoneRedundancyPtrType = reflect.TypeOf((**ZoneRedundancy)(nil)).Elem()

type ZoneRedundancyPtrInput interface {
	pulumi.Input

	ToZoneRedundancyPtrOutput() ZoneRedundancyPtrOutput
	ToZoneRedundancyPtrOutputWithContext(context.Context) ZoneRedundancyPtrOutput
}

type zoneRedundancyPtr string

func ZoneRedundancyPtr(v string) ZoneRedundancyPtrInput {
	return (*zoneRedundancyPtr)(&v)
}

func (*zoneRedundancyPtr) ElementType() reflect.Type {
	return zoneRedundancyPtrType
}

func (in *zoneRedundancyPtr) ToZoneRedundancyPtrOutput() ZoneRedundancyPtrOutput {
	return pulumi.ToOutput(in).(ZoneRedundancyPtrOutput)
}

func (in *zoneRedundancyPtr) ToZoneRedundancyPtrOutputWithContext(ctx context.Context) ZoneRedundancyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ZoneRedundancyPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseCreateModeOutput{})
	pulumi.RegisterOutputType(DatabaseCreateModePtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(PrincipalTypeOutput{})
	pulumi.RegisterOutputType(PrincipalTypePtrOutput{})
	pulumi.RegisterOutputType(ZoneRedundancyOutput{})
	pulumi.RegisterOutputType(ZoneRedundancyPtrOutput{})
}
