// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The role of the contact.
type Role string

const (
	RoleNoc        = Role("Noc")
	RolePolicy     = Role("Policy")
	RoleTechnical  = Role("Technical")
	RoleService    = Role("Service")
	RoleEscalation = Role("Escalation")
	RoleOther      = Role("Other")
)

func (Role) ElementType() reflect.Type {
	return reflect.TypeOf((*Role)(nil)).Elem()
}

func (e Role) ToRoleOutput() RoleOutput {
	return pulumi.ToOutput(e).(RoleOutput)
}

func (e Role) ToRoleOutputWithContext(ctx context.Context) RoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoleOutput)
}

func (e Role) ToRolePtrOutput() RolePtrOutput {
	return e.ToRolePtrOutputWithContext(context.Background())
}

func (e Role) ToRolePtrOutputWithContext(ctx context.Context) RolePtrOutput {
	return Role(e).ToRoleOutputWithContext(ctx).ToRolePtrOutputWithContext(ctx)
}

func (e Role) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Role) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Role) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Role) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoleOutput struct{ *pulumi.OutputState }

func (RoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Role)(nil)).Elem()
}

func (o RoleOutput) ToRoleOutput() RoleOutput {
	return o
}

func (o RoleOutput) ToRoleOutputWithContext(ctx context.Context) RoleOutput {
	return o
}

func (o RoleOutput) ToRolePtrOutput() RolePtrOutput {
	return o.ToRolePtrOutputWithContext(context.Background())
}

func (o RoleOutput) ToRolePtrOutputWithContext(ctx context.Context) RolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Role) *Role {
		return &v
	}).(RolePtrOutput)
}

func (o RoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Role) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Role) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RolePtrOutput struct{ *pulumi.OutputState }

func (RolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Role)(nil)).Elem()
}

func (o RolePtrOutput) ToRolePtrOutput() RolePtrOutput {
	return o
}

func (o RolePtrOutput) ToRolePtrOutputWithContext(ctx context.Context) RolePtrOutput {
	return o
}

func (o RolePtrOutput) Elem() RoleOutput {
	return o.ApplyT(func(v *Role) Role {
		if v != nil {
			return *v
		}
		var ret Role
		return ret
	}).(RoleOutput)
}

func (o RolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Role) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoleInput is an input type that accepts values of the Role enum
// A concrete instance of `RoleInput` can be one of the following:
//
//	RoleNoc
//	RolePolicy
//	RoleTechnical
//	RoleService
//	RoleEscalation
//	RoleOther
type RoleInput interface {
	pulumi.Input

	ToRoleOutput() RoleOutput
	ToRoleOutputWithContext(context.Context) RoleOutput
}

var rolePtrType = reflect.TypeOf((**Role)(nil)).Elem()

type RolePtrInput interface {
	pulumi.Input

	ToRolePtrOutput() RolePtrOutput
	ToRolePtrOutputWithContext(context.Context) RolePtrOutput
}

type rolePtr string

func RolePtr(v string) RolePtrInput {
	return (*rolePtr)(&v)
}

func (*rolePtr) ElementType() reflect.Type {
	return rolePtrType
}

func (in *rolePtr) ToRolePtrOutput() RolePtrOutput {
	return pulumi.ToOutput(in).(RolePtrOutput)
}

func (in *rolePtr) ToRolePtrOutputWithContext(ctx context.Context) RolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RolePtrOutput)
}

// The validation state of the ASN associated with the peer.
type ValidationState string

const (
	ValidationStateNone     = ValidationState("None")
	ValidationStatePending  = ValidationState("Pending")
	ValidationStateApproved = ValidationState("Approved")
	ValidationStateFailed   = ValidationState("Failed")
)

func (ValidationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationState)(nil)).Elem()
}

func (e ValidationState) ToValidationStateOutput() ValidationStateOutput {
	return pulumi.ToOutput(e).(ValidationStateOutput)
}

func (e ValidationState) ToValidationStateOutputWithContext(ctx context.Context) ValidationStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValidationStateOutput)
}

func (e ValidationState) ToValidationStatePtrOutput() ValidationStatePtrOutput {
	return e.ToValidationStatePtrOutputWithContext(context.Background())
}

func (e ValidationState) ToValidationStatePtrOutputWithContext(ctx context.Context) ValidationStatePtrOutput {
	return ValidationState(e).ToValidationStateOutputWithContext(ctx).ToValidationStatePtrOutputWithContext(ctx)
}

func (e ValidationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValidationStateOutput struct{ *pulumi.OutputState }

func (ValidationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationState)(nil)).Elem()
}

func (o ValidationStateOutput) ToValidationStateOutput() ValidationStateOutput {
	return o
}

func (o ValidationStateOutput) ToValidationStateOutputWithContext(ctx context.Context) ValidationStateOutput {
	return o
}

func (o ValidationStateOutput) ToValidationStatePtrOutput() ValidationStatePtrOutput {
	return o.ToValidationStatePtrOutputWithContext(context.Background())
}

func (o ValidationStateOutput) ToValidationStatePtrOutputWithContext(ctx context.Context) ValidationStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidationState) *ValidationState {
		return &v
	}).(ValidationStatePtrOutput)
}

func (o ValidationStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValidationStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValidationStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValidationStatePtrOutput struct{ *pulumi.OutputState }

func (ValidationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationState)(nil)).Elem()
}

func (o ValidationStatePtrOutput) ToValidationStatePtrOutput() ValidationStatePtrOutput {
	return o
}

func (o ValidationStatePtrOutput) ToValidationStatePtrOutputWithContext(ctx context.Context) ValidationStatePtrOutput {
	return o
}

func (o ValidationStatePtrOutput) Elem() ValidationStateOutput {
	return o.ApplyT(func(v *ValidationState) ValidationState {
		if v != nil {
			return *v
		}
		var ret ValidationState
		return ret
	}).(ValidationStateOutput)
}

func (o ValidationStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValidationState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValidationStateInput is an input type that accepts values of the ValidationState enum
// A concrete instance of `ValidationStateInput` can be one of the following:
//
//	ValidationStateNone
//	ValidationStatePending
//	ValidationStateApproved
//	ValidationStateFailed
type ValidationStateInput interface {
	pulumi.Input

	ToValidationStateOutput() ValidationStateOutput
	ToValidationStateOutputWithContext(context.Context) ValidationStateOutput
}

var validationStatePtrType = reflect.TypeOf((**ValidationState)(nil)).Elem()

type ValidationStatePtrInput interface {
	pulumi.Input

	ToValidationStatePtrOutput() ValidationStatePtrOutput
	ToValidationStatePtrOutputWithContext(context.Context) ValidationStatePtrOutput
}

type validationStatePtr string

func ValidationStatePtr(v string) ValidationStatePtrInput {
	return (*validationStatePtr)(&v)
}

func (*validationStatePtr) ElementType() reflect.Type {
	return validationStatePtrType
}

func (in *validationStatePtr) ToValidationStatePtrOutput() ValidationStatePtrOutput {
	return pulumi.ToOutput(in).(ValidationStatePtrOutput)
}

func (in *validationStatePtr) ToValidationStatePtrOutputWithContext(ctx context.Context) ValidationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValidationStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RoleOutput{})
	pulumi.RegisterOutputType(RolePtrOutput{})
	pulumi.RegisterOutputType(ValidationStateOutput{})
	pulumi.RegisterOutputType(ValidationStatePtrOutput{})
}
