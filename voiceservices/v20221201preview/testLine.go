// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221201preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A TestLine resource
type TestLine struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The phone number
	PhoneNumber pulumi.StringOutput `pulumi:"phoneNumber"`
	// Resource provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Purpose of this test line, e.g. automated or manual testing
	Purpose pulumi.StringOutput `pulumi:"purpose"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTestLine registers a new resource with the given unique name, arguments, and options.
func NewTestLine(ctx *pulumi.Context,
	name string, args *TestLineArgs, opts ...pulumi.ResourceOption) (*TestLine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommunicationsGatewayName == nil {
		return nil, errors.New("invalid value for required argument 'CommunicationsGatewayName'")
	}
	if args.PhoneNumber == nil {
		return nil, errors.New("invalid value for required argument 'PhoneNumber'")
	}
	if args.Purpose == nil {
		return nil, errors.New("invalid value for required argument 'Purpose'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:voiceservices:TestLine"),
		},
		{
			Type: pulumi.String("azure-native:voiceservices/v20230131:TestLine"),
		},
		{
			Type: pulumi.String("azure-native:voiceservices/v20230403:TestLine"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TestLine
	err := ctx.RegisterResource("azure-native:voiceservices/v20221201preview:TestLine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTestLine gets an existing TestLine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTestLine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TestLineState, opts ...pulumi.ResourceOption) (*TestLine, error) {
	var resource TestLine
	err := ctx.ReadResource("azure-native:voiceservices/v20221201preview:TestLine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TestLine resources.
type testLineState struct {
}

type TestLineState struct {
}

func (TestLineState) ElementType() reflect.Type {
	return reflect.TypeOf((*testLineState)(nil)).Elem()
}

type testLineArgs struct {
	// Unique identifier for this deployment
	CommunicationsGatewayName string `pulumi:"communicationsGatewayName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The phone number
	PhoneNumber string `pulumi:"phoneNumber"`
	// Purpose of this test line, e.g. automated or manual testing
	Purpose TestLinePurpose `pulumi:"purpose"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Unique identifier for this test line
	TestLineName *string `pulumi:"testLineName"`
}

// The set of arguments for constructing a TestLine resource.
type TestLineArgs struct {
	// Unique identifier for this deployment
	CommunicationsGatewayName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The phone number
	PhoneNumber pulumi.StringInput
	// Purpose of this test line, e.g. automated or manual testing
	Purpose TestLinePurposeInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Unique identifier for this test line
	TestLineName pulumi.StringPtrInput
}

func (TestLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*testLineArgs)(nil)).Elem()
}

type TestLineInput interface {
	pulumi.Input

	ToTestLineOutput() TestLineOutput
	ToTestLineOutputWithContext(ctx context.Context) TestLineOutput
}

func (*TestLine) ElementType() reflect.Type {
	return reflect.TypeOf((**TestLine)(nil)).Elem()
}

func (i *TestLine) ToTestLineOutput() TestLineOutput {
	return i.ToTestLineOutputWithContext(context.Background())
}

func (i *TestLine) ToTestLineOutputWithContext(ctx context.Context) TestLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TestLineOutput)
}

type TestLineOutput struct{ *pulumi.OutputState }

func (TestLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TestLine)(nil)).Elem()
}

func (o TestLineOutput) ToTestLineOutput() TestLineOutput {
	return o
}

func (o TestLineOutput) ToTestLineOutputWithContext(ctx context.Context) TestLineOutput {
	return o
}

// The geo-location where the resource lives
func (o TestLineOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o TestLineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The phone number
func (o TestLineOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringOutput { return v.PhoneNumber }).(pulumi.StringOutput)
}

// Resource provisioning state.
func (o TestLineOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Purpose of this test line, e.g. automated or manual testing
func (o TestLineOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringOutput { return v.Purpose }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o TestLineOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *TestLine) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o TestLineOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o TestLineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TestLine) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TestLineOutput{})
}
