// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package voiceservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The scope at which the auto-generated domain name can be re-used
type AutoGeneratedDomainNameLabelScope string

const (
	AutoGeneratedDomainNameLabelScopeTenantReuse        = AutoGeneratedDomainNameLabelScope("TenantReuse")
	AutoGeneratedDomainNameLabelScopeSubscriptionReuse  = AutoGeneratedDomainNameLabelScope("SubscriptionReuse")
	AutoGeneratedDomainNameLabelScopeResourceGroupReuse = AutoGeneratedDomainNameLabelScope("ResourceGroupReuse")
	AutoGeneratedDomainNameLabelScopeNoReuse            = AutoGeneratedDomainNameLabelScope("NoReuse")
)

func (AutoGeneratedDomainNameLabelScope) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoGeneratedDomainNameLabelScope)(nil)).Elem()
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopeOutput() AutoGeneratedDomainNameLabelScopeOutput {
	return pulumi.ToOutput(e).(AutoGeneratedDomainNameLabelScopeOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopeOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoGeneratedDomainNameLabelScopeOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return e.ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(context.Background())
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return AutoGeneratedDomainNameLabelScope(e).ToAutoGeneratedDomainNameLabelScopeOutputWithContext(ctx).ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx)
}

func (e AutoGeneratedDomainNameLabelScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoGeneratedDomainNameLabelScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoGeneratedDomainNameLabelScopeOutput struct{ *pulumi.OutputState }

func (AutoGeneratedDomainNameLabelScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoGeneratedDomainNameLabelScope)(nil)).Elem()
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopeOutput() AutoGeneratedDomainNameLabelScopeOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopeOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopeOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return o.ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoGeneratedDomainNameLabelScope) *AutoGeneratedDomainNameLabelScope {
		return &v
	}).(AutoGeneratedDomainNameLabelScopePtrOutput)
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoGeneratedDomainNameLabelScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoGeneratedDomainNameLabelScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoGeneratedDomainNameLabelScopePtrOutput struct{ *pulumi.OutputState }

func (AutoGeneratedDomainNameLabelScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoGeneratedDomainNameLabelScope)(nil)).Elem()
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) Elem() AutoGeneratedDomainNameLabelScopeOutput {
	return o.ApplyT(func(v *AutoGeneratedDomainNameLabelScope) AutoGeneratedDomainNameLabelScope {
		if v != nil {
			return *v
		}
		var ret AutoGeneratedDomainNameLabelScope
		return ret
	}).(AutoGeneratedDomainNameLabelScopeOutput)
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoGeneratedDomainNameLabelScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoGeneratedDomainNameLabelScopeInput is an input type that accepts values of the AutoGeneratedDomainNameLabelScope enum
// A concrete instance of `AutoGeneratedDomainNameLabelScopeInput` can be one of the following:
//
//	AutoGeneratedDomainNameLabelScopeTenantReuse
//	AutoGeneratedDomainNameLabelScopeSubscriptionReuse
//	AutoGeneratedDomainNameLabelScopeResourceGroupReuse
//	AutoGeneratedDomainNameLabelScopeNoReuse
type AutoGeneratedDomainNameLabelScopeInput interface {
	pulumi.Input

	ToAutoGeneratedDomainNameLabelScopeOutput() AutoGeneratedDomainNameLabelScopeOutput
	ToAutoGeneratedDomainNameLabelScopeOutputWithContext(context.Context) AutoGeneratedDomainNameLabelScopeOutput
}

var autoGeneratedDomainNameLabelScopePtrType = reflect.TypeOf((**AutoGeneratedDomainNameLabelScope)(nil)).Elem()

type AutoGeneratedDomainNameLabelScopePtrInput interface {
	pulumi.Input

	ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput
	ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(context.Context) AutoGeneratedDomainNameLabelScopePtrOutput
}

type autoGeneratedDomainNameLabelScopePtr string

func AutoGeneratedDomainNameLabelScopePtr(v string) AutoGeneratedDomainNameLabelScopePtrInput {
	return (*autoGeneratedDomainNameLabelScopePtr)(&v)
}

func (*autoGeneratedDomainNameLabelScopePtr) ElementType() reflect.Type {
	return autoGeneratedDomainNameLabelScopePtrType
}

func (in *autoGeneratedDomainNameLabelScopePtr) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return pulumi.ToOutput(in).(AutoGeneratedDomainNameLabelScopePtrOutput)
}

func (in *autoGeneratedDomainNameLabelScopePtr) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoGeneratedDomainNameLabelScopePtrOutput)
}

func (in *autoGeneratedDomainNameLabelScopePtr) ToOutput(ctx context.Context) pulumix.Output[*AutoGeneratedDomainNameLabelScope] {
	return pulumix.Output[*AutoGeneratedDomainNameLabelScope]{
		OutputState: in.ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Available platform types.
type CommunicationsPlatform string

const (
	CommunicationsPlatformOperatorConnect  = CommunicationsPlatform("OperatorConnect")
	CommunicationsPlatformTeamsPhoneMobile = CommunicationsPlatform("TeamsPhoneMobile")
)

func (CommunicationsPlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunicationsPlatform)(nil)).Elem()
}

func (e CommunicationsPlatform) ToCommunicationsPlatformOutput() CommunicationsPlatformOutput {
	return pulumi.ToOutput(e).(CommunicationsPlatformOutput)
}

func (e CommunicationsPlatform) ToCommunicationsPlatformOutputWithContext(ctx context.Context) CommunicationsPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CommunicationsPlatformOutput)
}

func (e CommunicationsPlatform) ToCommunicationsPlatformPtrOutput() CommunicationsPlatformPtrOutput {
	return e.ToCommunicationsPlatformPtrOutputWithContext(context.Background())
}

func (e CommunicationsPlatform) ToCommunicationsPlatformPtrOutputWithContext(ctx context.Context) CommunicationsPlatformPtrOutput {
	return CommunicationsPlatform(e).ToCommunicationsPlatformOutputWithContext(ctx).ToCommunicationsPlatformPtrOutputWithContext(ctx)
}

func (e CommunicationsPlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CommunicationsPlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CommunicationsPlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CommunicationsPlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CommunicationsPlatformOutput struct{ *pulumi.OutputState }

func (CommunicationsPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunicationsPlatform)(nil)).Elem()
}

func (o CommunicationsPlatformOutput) ToCommunicationsPlatformOutput() CommunicationsPlatformOutput {
	return o
}

func (o CommunicationsPlatformOutput) ToCommunicationsPlatformOutputWithContext(ctx context.Context) CommunicationsPlatformOutput {
	return o
}

func (o CommunicationsPlatformOutput) ToCommunicationsPlatformPtrOutput() CommunicationsPlatformPtrOutput {
	return o.ToCommunicationsPlatformPtrOutputWithContext(context.Background())
}

func (o CommunicationsPlatformOutput) ToCommunicationsPlatformPtrOutputWithContext(ctx context.Context) CommunicationsPlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommunicationsPlatform) *CommunicationsPlatform {
		return &v
	}).(CommunicationsPlatformPtrOutput)
}

func (o CommunicationsPlatformOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CommunicationsPlatformOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CommunicationsPlatform) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CommunicationsPlatformOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CommunicationsPlatformOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CommunicationsPlatform) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CommunicationsPlatformPtrOutput struct{ *pulumi.OutputState }

func (CommunicationsPlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunicationsPlatform)(nil)).Elem()
}

func (o CommunicationsPlatformPtrOutput) ToCommunicationsPlatformPtrOutput() CommunicationsPlatformPtrOutput {
	return o
}

func (o CommunicationsPlatformPtrOutput) ToCommunicationsPlatformPtrOutputWithContext(ctx context.Context) CommunicationsPlatformPtrOutput {
	return o
}

func (o CommunicationsPlatformPtrOutput) Elem() CommunicationsPlatformOutput {
	return o.ApplyT(func(v *CommunicationsPlatform) CommunicationsPlatform {
		if v != nil {
			return *v
		}
		var ret CommunicationsPlatform
		return ret
	}).(CommunicationsPlatformOutput)
}

func (o CommunicationsPlatformPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CommunicationsPlatformPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CommunicationsPlatform) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CommunicationsPlatformInput is an input type that accepts values of the CommunicationsPlatform enum
// A concrete instance of `CommunicationsPlatformInput` can be one of the following:
//
//	CommunicationsPlatformOperatorConnect
//	CommunicationsPlatformTeamsPhoneMobile
type CommunicationsPlatformInput interface {
	pulumi.Input

	ToCommunicationsPlatformOutput() CommunicationsPlatformOutput
	ToCommunicationsPlatformOutputWithContext(context.Context) CommunicationsPlatformOutput
}

var communicationsPlatformPtrType = reflect.TypeOf((**CommunicationsPlatform)(nil)).Elem()

type CommunicationsPlatformPtrInput interface {
	pulumi.Input

	ToCommunicationsPlatformPtrOutput() CommunicationsPlatformPtrOutput
	ToCommunicationsPlatformPtrOutputWithContext(context.Context) CommunicationsPlatformPtrOutput
}

type communicationsPlatformPtr string

func CommunicationsPlatformPtr(v string) CommunicationsPlatformPtrInput {
	return (*communicationsPlatformPtr)(&v)
}

func (*communicationsPlatformPtr) ElementType() reflect.Type {
	return communicationsPlatformPtrType
}

func (in *communicationsPlatformPtr) ToCommunicationsPlatformPtrOutput() CommunicationsPlatformPtrOutput {
	return pulumi.ToOutput(in).(CommunicationsPlatformPtrOutput)
}

func (in *communicationsPlatformPtr) ToCommunicationsPlatformPtrOutputWithContext(ctx context.Context) CommunicationsPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CommunicationsPlatformPtrOutput)
}

func (in *communicationsPlatformPtr) ToOutput(ctx context.Context) pulumix.Output[*CommunicationsPlatform] {
	return pulumix.Output[*CommunicationsPlatform]{
		OutputState: in.ToCommunicationsPlatformPtrOutputWithContext(ctx).OutputState,
	}
}

// How to connect back to the operator network, e.g. MAPS
type Connectivity string

const (
	// This deployment connects to the operator network using a Public IP address, e.g. when using MAPS
	ConnectivityPublicAddress = Connectivity("PublicAddress")
)

func (Connectivity) ElementType() reflect.Type {
	return reflect.TypeOf((*Connectivity)(nil)).Elem()
}

func (e Connectivity) ToConnectivityOutput() ConnectivityOutput {
	return pulumi.ToOutput(e).(ConnectivityOutput)
}

func (e Connectivity) ToConnectivityOutputWithContext(ctx context.Context) ConnectivityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectivityOutput)
}

func (e Connectivity) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return e.ToConnectivityPtrOutputWithContext(context.Background())
}

func (e Connectivity) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return Connectivity(e).ToConnectivityOutputWithContext(ctx).ToConnectivityPtrOutputWithContext(ctx)
}

func (e Connectivity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Connectivity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Connectivity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Connectivity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectivityOutput struct{ *pulumi.OutputState }

func (ConnectivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Connectivity)(nil)).Elem()
}

func (o ConnectivityOutput) ToConnectivityOutput() ConnectivityOutput {
	return o
}

func (o ConnectivityOutput) ToConnectivityOutputWithContext(ctx context.Context) ConnectivityOutput {
	return o
}

func (o ConnectivityOutput) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return o.ToConnectivityPtrOutputWithContext(context.Background())
}

func (o ConnectivityOutput) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Connectivity) *Connectivity {
		return &v
	}).(ConnectivityPtrOutput)
}

func (o ConnectivityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectivityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Connectivity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectivityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectivityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Connectivity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectivityPtrOutput struct{ *pulumi.OutputState }

func (ConnectivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connectivity)(nil)).Elem()
}

func (o ConnectivityPtrOutput) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return o
}

func (o ConnectivityPtrOutput) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return o
}

func (o ConnectivityPtrOutput) Elem() ConnectivityOutput {
	return o.ApplyT(func(v *Connectivity) Connectivity {
		if v != nil {
			return *v
		}
		var ret Connectivity
		return ret
	}).(ConnectivityOutput)
}

func (o ConnectivityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectivityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Connectivity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectivityInput is an input type that accepts values of the Connectivity enum
// A concrete instance of `ConnectivityInput` can be one of the following:
//
//	ConnectivityPublicAddress
type ConnectivityInput interface {
	pulumi.Input

	ToConnectivityOutput() ConnectivityOutput
	ToConnectivityOutputWithContext(context.Context) ConnectivityOutput
}

var connectivityPtrType = reflect.TypeOf((**Connectivity)(nil)).Elem()

type ConnectivityPtrInput interface {
	pulumi.Input

	ToConnectivityPtrOutput() ConnectivityPtrOutput
	ToConnectivityPtrOutputWithContext(context.Context) ConnectivityPtrOutput
}

type connectivityPtr string

func ConnectivityPtr(v string) ConnectivityPtrInput {
	return (*connectivityPtr)(&v)
}

func (*connectivityPtr) ElementType() reflect.Type {
	return connectivityPtrType
}

func (in *connectivityPtr) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return pulumi.ToOutput(in).(ConnectivityPtrOutput)
}

func (in *connectivityPtr) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectivityPtrOutput)
}

func (in *connectivityPtr) ToOutput(ctx context.Context) pulumix.Output[*Connectivity] {
	return pulumix.Output[*Connectivity]{
		OutputState: in.ToConnectivityPtrOutputWithContext(ctx).OutputState,
	}
}

// How to handle 911 calls
type E911Type string

const (
	// Emergency calls are not handled different from other calls
	E911TypeStandard = E911Type("Standard")
	// Emergency calls are routed directly to the ESRP
	E911TypeDirectToEsrp = E911Type("DirectToEsrp")
)

func (E911Type) ElementType() reflect.Type {
	return reflect.TypeOf((*E911Type)(nil)).Elem()
}

func (e E911Type) ToE911TypeOutput() E911TypeOutput {
	return pulumi.ToOutput(e).(E911TypeOutput)
}

func (e E911Type) ToE911TypeOutputWithContext(ctx context.Context) E911TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(E911TypeOutput)
}

func (e E911Type) ToE911TypePtrOutput() E911TypePtrOutput {
	return e.ToE911TypePtrOutputWithContext(context.Background())
}

func (e E911Type) ToE911TypePtrOutputWithContext(ctx context.Context) E911TypePtrOutput {
	return E911Type(e).ToE911TypeOutputWithContext(ctx).ToE911TypePtrOutputWithContext(ctx)
}

func (e E911Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e E911Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e E911Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e E911Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type E911TypeOutput struct{ *pulumi.OutputState }

func (E911TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*E911Type)(nil)).Elem()
}

func (o E911TypeOutput) ToE911TypeOutput() E911TypeOutput {
	return o
}

func (o E911TypeOutput) ToE911TypeOutputWithContext(ctx context.Context) E911TypeOutput {
	return o
}

func (o E911TypeOutput) ToE911TypePtrOutput() E911TypePtrOutput {
	return o.ToE911TypePtrOutputWithContext(context.Background())
}

func (o E911TypeOutput) ToE911TypePtrOutputWithContext(ctx context.Context) E911TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v E911Type) *E911Type {
		return &v
	}).(E911TypePtrOutput)
}

func (o E911TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o E911TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e E911Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o E911TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o E911TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e E911Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type E911TypePtrOutput struct{ *pulumi.OutputState }

func (E911TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**E911Type)(nil)).Elem()
}

func (o E911TypePtrOutput) ToE911TypePtrOutput() E911TypePtrOutput {
	return o
}

func (o E911TypePtrOutput) ToE911TypePtrOutputWithContext(ctx context.Context) E911TypePtrOutput {
	return o
}

func (o E911TypePtrOutput) Elem() E911TypeOutput {
	return o.ApplyT(func(v *E911Type) E911Type {
		if v != nil {
			return *v
		}
		var ret E911Type
		return ret
	}).(E911TypeOutput)
}

func (o E911TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o E911TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *E911Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// E911TypeInput is an input type that accepts values of the E911Type enum
// A concrete instance of `E911TypeInput` can be one of the following:
//
//	E911TypeStandard
//	E911TypeDirectToEsrp
type E911TypeInput interface {
	pulumi.Input

	ToE911TypeOutput() E911TypeOutput
	ToE911TypeOutputWithContext(context.Context) E911TypeOutput
}

var e911typePtrType = reflect.TypeOf((**E911Type)(nil)).Elem()

type E911TypePtrInput interface {
	pulumi.Input

	ToE911TypePtrOutput() E911TypePtrOutput
	ToE911TypePtrOutputWithContext(context.Context) E911TypePtrOutput
}

type e911typePtr string

func E911TypePtr(v string) E911TypePtrInput {
	return (*e911typePtr)(&v)
}

func (*e911typePtr) ElementType() reflect.Type {
	return e911typePtrType
}

func (in *e911typePtr) ToE911TypePtrOutput() E911TypePtrOutput {
	return pulumi.ToOutput(in).(E911TypePtrOutput)
}

func (in *e911typePtr) ToE911TypePtrOutputWithContext(ctx context.Context) E911TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(E911TypePtrOutput)
}

func (in *e911typePtr) ToOutput(ctx context.Context) pulumix.Output[*E911Type] {
	return pulumix.Output[*E911Type]{
		OutputState: in.ToE911TypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentityType] {
	return pulumix.Output[*ManagedServiceIdentityType]{
		OutputState: in.ToManagedServiceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The voice codecs expected for communication with Teams.
type TeamsCodecs string

const (
	TeamsCodecsPCMA     = TeamsCodecs("PCMA")
	TeamsCodecsPCMU     = TeamsCodecs("PCMU")
	TeamsCodecsG722     = TeamsCodecs("G722")
	TeamsCodecs_G722_2  = TeamsCodecs("G722_2")
	TeamsCodecs_SILK_8  = TeamsCodecs("SILK_8")
	TeamsCodecs_SILK_16 = TeamsCodecs("SILK_16")
)

func (TeamsCodecs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsCodecs)(nil)).Elem()
}

func (e TeamsCodecs) ToTeamsCodecsOutput() TeamsCodecsOutput {
	return pulumi.ToOutput(e).(TeamsCodecsOutput)
}

func (e TeamsCodecs) ToTeamsCodecsOutputWithContext(ctx context.Context) TeamsCodecsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TeamsCodecsOutput)
}

func (e TeamsCodecs) ToTeamsCodecsPtrOutput() TeamsCodecsPtrOutput {
	return e.ToTeamsCodecsPtrOutputWithContext(context.Background())
}

func (e TeamsCodecs) ToTeamsCodecsPtrOutputWithContext(ctx context.Context) TeamsCodecsPtrOutput {
	return TeamsCodecs(e).ToTeamsCodecsOutputWithContext(ctx).ToTeamsCodecsPtrOutputWithContext(ctx)
}

func (e TeamsCodecs) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TeamsCodecs) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TeamsCodecs) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TeamsCodecs) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TeamsCodecsOutput struct{ *pulumi.OutputState }

func (TeamsCodecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsCodecs)(nil)).Elem()
}

func (o TeamsCodecsOutput) ToTeamsCodecsOutput() TeamsCodecsOutput {
	return o
}

func (o TeamsCodecsOutput) ToTeamsCodecsOutputWithContext(ctx context.Context) TeamsCodecsOutput {
	return o
}

func (o TeamsCodecsOutput) ToTeamsCodecsPtrOutput() TeamsCodecsPtrOutput {
	return o.ToTeamsCodecsPtrOutputWithContext(context.Background())
}

func (o TeamsCodecsOutput) ToTeamsCodecsPtrOutputWithContext(ctx context.Context) TeamsCodecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsCodecs) *TeamsCodecs {
		return &v
	}).(TeamsCodecsPtrOutput)
}

func (o TeamsCodecsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TeamsCodecsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TeamsCodecs) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TeamsCodecsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TeamsCodecsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TeamsCodecs) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TeamsCodecsPtrOutput struct{ *pulumi.OutputState }

func (TeamsCodecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsCodecs)(nil)).Elem()
}

func (o TeamsCodecsPtrOutput) ToTeamsCodecsPtrOutput() TeamsCodecsPtrOutput {
	return o
}

func (o TeamsCodecsPtrOutput) ToTeamsCodecsPtrOutputWithContext(ctx context.Context) TeamsCodecsPtrOutput {
	return o
}

func (o TeamsCodecsPtrOutput) Elem() TeamsCodecsOutput {
	return o.ApplyT(func(v *TeamsCodecs) TeamsCodecs {
		if v != nil {
			return *v
		}
		var ret TeamsCodecs
		return ret
	}).(TeamsCodecsOutput)
}

func (o TeamsCodecsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TeamsCodecsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TeamsCodecs) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TeamsCodecsInput is an input type that accepts values of the TeamsCodecs enum
// A concrete instance of `TeamsCodecsInput` can be one of the following:
//
//	TeamsCodecsPCMA
//	TeamsCodecsPCMU
//	TeamsCodecsG722
//	TeamsCodecs_G722_2
//	TeamsCodecs_SILK_8
//	TeamsCodecs_SILK_16
type TeamsCodecsInput interface {
	pulumi.Input

	ToTeamsCodecsOutput() TeamsCodecsOutput
	ToTeamsCodecsOutputWithContext(context.Context) TeamsCodecsOutput
}

var teamsCodecsPtrType = reflect.TypeOf((**TeamsCodecs)(nil)).Elem()

type TeamsCodecsPtrInput interface {
	pulumi.Input

	ToTeamsCodecsPtrOutput() TeamsCodecsPtrOutput
	ToTeamsCodecsPtrOutputWithContext(context.Context) TeamsCodecsPtrOutput
}

type teamsCodecsPtr string

func TeamsCodecsPtr(v string) TeamsCodecsPtrInput {
	return (*teamsCodecsPtr)(&v)
}

func (*teamsCodecsPtr) ElementType() reflect.Type {
	return teamsCodecsPtrType
}

func (in *teamsCodecsPtr) ToTeamsCodecsPtrOutput() TeamsCodecsPtrOutput {
	return pulumi.ToOutput(in).(TeamsCodecsPtrOutput)
}

func (in *teamsCodecsPtr) ToTeamsCodecsPtrOutputWithContext(ctx context.Context) TeamsCodecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TeamsCodecsPtrOutput)
}

func (in *teamsCodecsPtr) ToOutput(ctx context.Context) pulumix.Output[*TeamsCodecs] {
	return pulumix.Output[*TeamsCodecs]{
		OutputState: in.ToTeamsCodecsPtrOutputWithContext(ctx).OutputState,
	}
}

// Purpose of this test line, e.g. automated or manual testing
type TestLinePurpose string

const (
	TestLinePurposeManual    = TestLinePurpose("Manual")
	TestLinePurposeAutomated = TestLinePurpose("Automated")
)

func (TestLinePurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*TestLinePurpose)(nil)).Elem()
}

func (e TestLinePurpose) ToTestLinePurposeOutput() TestLinePurposeOutput {
	return pulumi.ToOutput(e).(TestLinePurposeOutput)
}

func (e TestLinePurpose) ToTestLinePurposeOutputWithContext(ctx context.Context) TestLinePurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TestLinePurposeOutput)
}

func (e TestLinePurpose) ToTestLinePurposePtrOutput() TestLinePurposePtrOutput {
	return e.ToTestLinePurposePtrOutputWithContext(context.Background())
}

func (e TestLinePurpose) ToTestLinePurposePtrOutputWithContext(ctx context.Context) TestLinePurposePtrOutput {
	return TestLinePurpose(e).ToTestLinePurposeOutputWithContext(ctx).ToTestLinePurposePtrOutputWithContext(ctx)
}

func (e TestLinePurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TestLinePurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TestLinePurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TestLinePurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TestLinePurposeOutput struct{ *pulumi.OutputState }

func (TestLinePurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TestLinePurpose)(nil)).Elem()
}

func (o TestLinePurposeOutput) ToTestLinePurposeOutput() TestLinePurposeOutput {
	return o
}

func (o TestLinePurposeOutput) ToTestLinePurposeOutputWithContext(ctx context.Context) TestLinePurposeOutput {
	return o
}

func (o TestLinePurposeOutput) ToTestLinePurposePtrOutput() TestLinePurposePtrOutput {
	return o.ToTestLinePurposePtrOutputWithContext(context.Background())
}

func (o TestLinePurposeOutput) ToTestLinePurposePtrOutputWithContext(ctx context.Context) TestLinePurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TestLinePurpose) *TestLinePurpose {
		return &v
	}).(TestLinePurposePtrOutput)
}

func (o TestLinePurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TestLinePurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TestLinePurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TestLinePurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TestLinePurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TestLinePurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TestLinePurposePtrOutput struct{ *pulumi.OutputState }

func (TestLinePurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TestLinePurpose)(nil)).Elem()
}

func (o TestLinePurposePtrOutput) ToTestLinePurposePtrOutput() TestLinePurposePtrOutput {
	return o
}

func (o TestLinePurposePtrOutput) ToTestLinePurposePtrOutputWithContext(ctx context.Context) TestLinePurposePtrOutput {
	return o
}

func (o TestLinePurposePtrOutput) Elem() TestLinePurposeOutput {
	return o.ApplyT(func(v *TestLinePurpose) TestLinePurpose {
		if v != nil {
			return *v
		}
		var ret TestLinePurpose
		return ret
	}).(TestLinePurposeOutput)
}

func (o TestLinePurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TestLinePurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TestLinePurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TestLinePurposeInput is an input type that accepts values of the TestLinePurpose enum
// A concrete instance of `TestLinePurposeInput` can be one of the following:
//
//	TestLinePurposeManual
//	TestLinePurposeAutomated
type TestLinePurposeInput interface {
	pulumi.Input

	ToTestLinePurposeOutput() TestLinePurposeOutput
	ToTestLinePurposeOutputWithContext(context.Context) TestLinePurposeOutput
}

var testLinePurposePtrType = reflect.TypeOf((**TestLinePurpose)(nil)).Elem()

type TestLinePurposePtrInput interface {
	pulumi.Input

	ToTestLinePurposePtrOutput() TestLinePurposePtrOutput
	ToTestLinePurposePtrOutputWithContext(context.Context) TestLinePurposePtrOutput
}

type testLinePurposePtr string

func TestLinePurposePtr(v string) TestLinePurposePtrInput {
	return (*testLinePurposePtr)(&v)
}

func (*testLinePurposePtr) ElementType() reflect.Type {
	return testLinePurposePtrType
}

func (in *testLinePurposePtr) ToTestLinePurposePtrOutput() TestLinePurposePtrOutput {
	return pulumi.ToOutput(in).(TestLinePurposePtrOutput)
}

func (in *testLinePurposePtr) ToTestLinePurposePtrOutputWithContext(ctx context.Context) TestLinePurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TestLinePurposePtrOutput)
}

func (in *testLinePurposePtr) ToOutput(ctx context.Context) pulumix.Output[*TestLinePurpose] {
	return pulumix.Output[*TestLinePurpose]{
		OutputState: in.ToTestLinePurposePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AutoGeneratedDomainNameLabelScopeOutput{})
	pulumi.RegisterOutputType(AutoGeneratedDomainNameLabelScopePtrOutput{})
	pulumi.RegisterOutputType(CommunicationsPlatformOutput{})
	pulumi.RegisterOutputType(CommunicationsPlatformPtrOutput{})
	pulumi.RegisterOutputType(ConnectivityOutput{})
	pulumi.RegisterOutputType(ConnectivityPtrOutput{})
	pulumi.RegisterOutputType(E911TypeOutput{})
	pulumi.RegisterOutputType(E911TypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(TeamsCodecsOutput{})
	pulumi.RegisterOutputType(TeamsCodecsPtrOutput{})
	pulumi.RegisterOutputType(TestLinePurposeOutput{})
	pulumi.RegisterOutputType(TestLinePurposePtrOutput{})
}
