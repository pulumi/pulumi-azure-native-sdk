// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230615

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The L3 Isolation Domain resource definition.
type L3IsolationDomain struct {
	pulumi.CustomResourceState

	// Administrative state of the resource.
	AdministrativeState pulumi.StringOutput `pulumi:"administrativeState"`
	// Aggregate route configurations.
	AggregateRouteConfiguration AggregateRouteConfigurationResponsePtrOutput `pulumi:"aggregateRouteConfiguration"`
	// Switch configuration description.
	Annotation pulumi.StringPtrOutput `pulumi:"annotation"`
	// Configuration state of the resource.
	ConfigurationState pulumi.StringOutput `pulumi:"configurationState"`
	// Connected Subnet RoutePolicy
	ConnectedSubnetRoutePolicy ConnectedSubnetRoutePolicyResponsePtrOutput `pulumi:"connectedSubnetRoutePolicy"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// ARM Resource ID of the Network Fabric.
	NetworkFabricId pulumi.StringOutput `pulumi:"networkFabricId"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Advertise Connected Subnets. Ex: "True" | "False".
	RedistributeConnectedSubnets pulumi.StringPtrOutput `pulumi:"redistributeConnectedSubnets"`
	// Advertise Static Routes. Ex: "True" | "False".
	RedistributeStaticRoutes pulumi.StringPtrOutput `pulumi:"redistributeStaticRoutes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewL3IsolationDomain registers a new resource with the given unique name, arguments, and options.
func NewL3IsolationDomain(ctx *pulumi.Context,
	name string, args *L3IsolationDomainArgs, opts ...pulumi.ResourceOption) (*L3IsolationDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkFabricId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFabricId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RedistributeConnectedSubnets == nil {
		args.RedistributeConnectedSubnets = pulumi.StringPtr("True")
	}
	if args.RedistributeStaticRoutes == nil {
		args.RedistributeStaticRoutes = pulumi.StringPtr("False")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:managednetworkfabric:L3IsolationDomain"),
		},
		{
			Type: pulumi.String("azure-native:managednetworkfabric/v20230201preview:L3IsolationDomain"),
		},
	})
	opts = append(opts, aliases)
	var resource L3IsolationDomain
	err := ctx.RegisterResource("azure-native:managednetworkfabric/v20230615:L3IsolationDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetL3IsolationDomain gets an existing L3IsolationDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetL3IsolationDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *L3IsolationDomainState, opts ...pulumi.ResourceOption) (*L3IsolationDomain, error) {
	var resource L3IsolationDomain
	err := ctx.ReadResource("azure-native:managednetworkfabric/v20230615:L3IsolationDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering L3IsolationDomain resources.
type l3isolationDomainState struct {
}

type L3IsolationDomainState struct {
}

func (L3IsolationDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*l3isolationDomainState)(nil)).Elem()
}

type l3isolationDomainArgs struct {
	// Aggregate route configurations.
	AggregateRouteConfiguration *AggregateRouteConfiguration `pulumi:"aggregateRouteConfiguration"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Connected Subnet RoutePolicy
	ConnectedSubnetRoutePolicy *ConnectedSubnetRoutePolicy `pulumi:"connectedSubnetRoutePolicy"`
	// Name of the L3 Isolation Domain.
	L3IsolationDomainName *string `pulumi:"l3IsolationDomainName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// ARM Resource ID of the Network Fabric.
	NetworkFabricId string `pulumi:"networkFabricId"`
	// Advertise Connected Subnets. Ex: "True" | "False".
	RedistributeConnectedSubnets *string `pulumi:"redistributeConnectedSubnets"`
	// Advertise Static Routes. Ex: "True" | "False".
	RedistributeStaticRoutes *string `pulumi:"redistributeStaticRoutes"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a L3IsolationDomain resource.
type L3IsolationDomainArgs struct {
	// Aggregate route configurations.
	AggregateRouteConfiguration AggregateRouteConfigurationPtrInput
	// Switch configuration description.
	Annotation pulumi.StringPtrInput
	// Connected Subnet RoutePolicy
	ConnectedSubnetRoutePolicy ConnectedSubnetRoutePolicyPtrInput
	// Name of the L3 Isolation Domain.
	L3IsolationDomainName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// ARM Resource ID of the Network Fabric.
	NetworkFabricId pulumi.StringInput
	// Advertise Connected Subnets. Ex: "True" | "False".
	RedistributeConnectedSubnets pulumi.StringPtrInput
	// Advertise Static Routes. Ex: "True" | "False".
	RedistributeStaticRoutes pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (L3IsolationDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*l3isolationDomainArgs)(nil)).Elem()
}

type L3IsolationDomainInput interface {
	pulumi.Input

	ToL3IsolationDomainOutput() L3IsolationDomainOutput
	ToL3IsolationDomainOutputWithContext(ctx context.Context) L3IsolationDomainOutput
}

func (*L3IsolationDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**L3IsolationDomain)(nil)).Elem()
}

func (i *L3IsolationDomain) ToL3IsolationDomainOutput() L3IsolationDomainOutput {
	return i.ToL3IsolationDomainOutputWithContext(context.Background())
}

func (i *L3IsolationDomain) ToL3IsolationDomainOutputWithContext(ctx context.Context) L3IsolationDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L3IsolationDomainOutput)
}

type L3IsolationDomainOutput struct{ *pulumi.OutputState }

func (L3IsolationDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L3IsolationDomain)(nil)).Elem()
}

func (o L3IsolationDomainOutput) ToL3IsolationDomainOutput() L3IsolationDomainOutput {
	return o
}

func (o L3IsolationDomainOutput) ToL3IsolationDomainOutputWithContext(ctx context.Context) L3IsolationDomainOutput {
	return o
}

// Administrative state of the resource.
func (o L3IsolationDomainOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.AdministrativeState }).(pulumi.StringOutput)
}

// Aggregate route configurations.
func (o L3IsolationDomainOutput) AggregateRouteConfiguration() AggregateRouteConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *L3IsolationDomain) AggregateRouteConfigurationResponsePtrOutput {
		return v.AggregateRouteConfiguration
	}).(AggregateRouteConfigurationResponsePtrOutput)
}

// Switch configuration description.
func (o L3IsolationDomainOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringPtrOutput { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Configuration state of the resource.
func (o L3IsolationDomainOutput) ConfigurationState() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.ConfigurationState }).(pulumi.StringOutput)
}

// Connected Subnet RoutePolicy
func (o L3IsolationDomainOutput) ConnectedSubnetRoutePolicy() ConnectedSubnetRoutePolicyResponsePtrOutput {
	return o.ApplyT(func(v *L3IsolationDomain) ConnectedSubnetRoutePolicyResponsePtrOutput {
		return v.ConnectedSubnetRoutePolicy
	}).(ConnectedSubnetRoutePolicyResponsePtrOutput)
}

// The geo-location where the resource lives
func (o L3IsolationDomainOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o L3IsolationDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ARM Resource ID of the Network Fabric.
func (o L3IsolationDomainOutput) NetworkFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.NetworkFabricId }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o L3IsolationDomainOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Advertise Connected Subnets. Ex: "True" | "False".
func (o L3IsolationDomainOutput) RedistributeConnectedSubnets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringPtrOutput { return v.RedistributeConnectedSubnets }).(pulumi.StringPtrOutput)
}

// Advertise Static Routes. Ex: "True" | "False".
func (o L3IsolationDomainOutput) RedistributeStaticRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringPtrOutput { return v.RedistributeStaticRoutes }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o L3IsolationDomainOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *L3IsolationDomain) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o L3IsolationDomainOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o L3IsolationDomainOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *L3IsolationDomain) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(L3IsolationDomainOutput{})
}
