// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230615

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a InternalNetworks.
func LookupInternalNetwork(ctx *pulumi.Context, args *LookupInternalNetworkArgs, opts ...pulumi.InvokeOption) (*LookupInternalNetworkResult, error) {
	var rv LookupInternalNetworkResult
	err := ctx.Invoke("azure-native:managednetworkfabric/v20230615:getInternalNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupInternalNetworkArgs struct {
	// Name of the Internal Network.
	InternalNetworkName string `pulumi:"internalNetworkName"`
	// Name of the L3 Isolation Domain.
	L3IsolationDomainName string `pulumi:"l3IsolationDomainName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Defines the Internal Network resource.
type LookupInternalNetworkResult struct {
	// Administrative state of the resource.
	AdministrativeState string `pulumi:"administrativeState"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// BGP configuration properties.
	BgpConfiguration *InternalNetworkPropertiesResponseBgpConfiguration `pulumi:"bgpConfiguration"`
	// Configuration state of the resource.
	ConfigurationState string `pulumi:"configurationState"`
	// List of Connected IPv4 Subnets.
	ConnectedIPv4Subnets []ConnectedSubnetResponse `pulumi:"connectedIPv4Subnets"`
	// List of connected IPv6 Subnets.
	ConnectedIPv6Subnets []ConnectedSubnetResponse `pulumi:"connectedIPv6Subnets"`
	// Egress Acl. ARM resource ID of Access Control Lists.
	EgressAclId *string `pulumi:"egressAclId"`
	// Export Route Policy either IPv4 or IPv6.
	ExportRoutePolicy *ExportRoutePolicyResponse `pulumi:"exportRoutePolicy"`
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ExportRoutePolicyId *string `pulumi:"exportRoutePolicyId"`
	// Extension. Example: NoExtension | NPB.
	Extension *string `pulumi:"extension"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Import Route Policy either IPv4 or IPv6.
	ImportRoutePolicy *ImportRoutePolicyResponse `pulumi:"importRoutePolicy"`
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ImportRoutePolicyId *string `pulumi:"importRoutePolicyId"`
	// Ingress Acl. ARM resource ID of Access Control Lists.
	IngressAclId *string `pulumi:"ingressAclId"`
	// To check whether monitoring of internal network is enabled or not.
	IsMonitoringEnabled *string `pulumi:"isMonitoringEnabled"`
	// Maximum transmission unit. Default value is 1500.
	Mtu *int `pulumi:"mtu"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Static Route Configuration properties.
	StaticRouteConfiguration *InternalNetworkPropertiesResponseStaticRouteConfiguration `pulumi:"staticRouteConfiguration"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Vlan identifier. Example: 1001.
	VlanId int `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for LookupInternalNetworkResult
func (val *LookupInternalNetworkResult) Defaults() *LookupInternalNetworkResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BgpConfiguration = tmp.BgpConfiguration.Defaults()

	if tmp.Extension == nil {
		extension_ := "NoExtension"
		tmp.Extension = &extension_
	}
	if tmp.IsMonitoringEnabled == nil {
		isMonitoringEnabled_ := "False"
		tmp.IsMonitoringEnabled = &isMonitoringEnabled_
	}
	if tmp.Mtu == nil {
		mtu_ := 1500
		tmp.Mtu = &mtu_
	}
	tmp.StaticRouteConfiguration = tmp.StaticRouteConfiguration.Defaults()

	return &tmp
}

func LookupInternalNetworkOutput(ctx *pulumi.Context, args LookupInternalNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupInternalNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInternalNetworkResult, error) {
			args := v.(LookupInternalNetworkArgs)
			r, err := LookupInternalNetwork(ctx, &args, opts...)
			var s LookupInternalNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInternalNetworkResultOutput)
}

type LookupInternalNetworkOutputArgs struct {
	// Name of the Internal Network.
	InternalNetworkName pulumi.StringInput `pulumi:"internalNetworkName"`
	// Name of the L3 Isolation Domain.
	L3IsolationDomainName pulumi.StringInput `pulumi:"l3IsolationDomainName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupInternalNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInternalNetworkArgs)(nil)).Elem()
}

// Defines the Internal Network resource.
type LookupInternalNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupInternalNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInternalNetworkResult)(nil)).Elem()
}

func (o LookupInternalNetworkResultOutput) ToLookupInternalNetworkResultOutput() LookupInternalNetworkResultOutput {
	return o
}

func (o LookupInternalNetworkResultOutput) ToLookupInternalNetworkResultOutputWithContext(ctx context.Context) LookupInternalNetworkResultOutput {
	return o
}

// Administrative state of the resource.
func (o LookupInternalNetworkResultOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) string { return v.AdministrativeState }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o LookupInternalNetworkResultOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// BGP configuration properties.
func (o LookupInternalNetworkResultOutput) BgpConfiguration() InternalNetworkPropertiesResponseBgpConfigurationPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *InternalNetworkPropertiesResponseBgpConfiguration {
		return v.BgpConfiguration
	}).(InternalNetworkPropertiesResponseBgpConfigurationPtrOutput)
}

// Configuration state of the resource.
func (o LookupInternalNetworkResultOutput) ConfigurationState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) string { return v.ConfigurationState }).(pulumi.StringOutput)
}

// List of Connected IPv4 Subnets.
func (o LookupInternalNetworkResultOutput) ConnectedIPv4Subnets() ConnectedSubnetResponseArrayOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) []ConnectedSubnetResponse { return v.ConnectedIPv4Subnets }).(ConnectedSubnetResponseArrayOutput)
}

// List of connected IPv6 Subnets.
func (o LookupInternalNetworkResultOutput) ConnectedIPv6Subnets() ConnectedSubnetResponseArrayOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) []ConnectedSubnetResponse { return v.ConnectedIPv6Subnets }).(ConnectedSubnetResponseArrayOutput)
}

// Egress Acl. ARM resource ID of Access Control Lists.
func (o LookupInternalNetworkResultOutput) EgressAclId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.EgressAclId }).(pulumi.StringPtrOutput)
}

// Export Route Policy either IPv4 or IPv6.
func (o LookupInternalNetworkResultOutput) ExportRoutePolicy() ExportRoutePolicyResponsePtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *ExportRoutePolicyResponse { return v.ExportRoutePolicy }).(ExportRoutePolicyResponsePtrOutput)
}

// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
func (o LookupInternalNetworkResultOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.ExportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// Extension. Example: NoExtension | NPB.
func (o LookupInternalNetworkResultOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupInternalNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// Import Route Policy either IPv4 or IPv6.
func (o LookupInternalNetworkResultOutput) ImportRoutePolicy() ImportRoutePolicyResponsePtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *ImportRoutePolicyResponse { return v.ImportRoutePolicy }).(ImportRoutePolicyResponsePtrOutput)
}

// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
func (o LookupInternalNetworkResultOutput) ImportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.ImportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// Ingress Acl. ARM resource ID of Access Control Lists.
func (o LookupInternalNetworkResultOutput) IngressAclId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.IngressAclId }).(pulumi.StringPtrOutput)
}

// To check whether monitoring of internal network is enabled or not.
func (o LookupInternalNetworkResultOutput) IsMonitoringEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *string { return v.IsMonitoringEnabled }).(pulumi.StringPtrOutput)
}

// Maximum transmission unit. Default value is 1500.
func (o LookupInternalNetworkResultOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o LookupInternalNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupInternalNetworkResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Static Route Configuration properties.
func (o LookupInternalNetworkResultOutput) StaticRouteConfiguration() InternalNetworkPropertiesResponseStaticRouteConfigurationPtrOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) *InternalNetworkPropertiesResponseStaticRouteConfiguration {
		return v.StaticRouteConfiguration
	}).(InternalNetworkPropertiesResponseStaticRouteConfigurationPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupInternalNetworkResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupInternalNetworkResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) string { return v.Type }).(pulumi.StringOutput)
}

// Vlan identifier. Example: 1001.
func (o LookupInternalNetworkResultOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInternalNetworkResult) int { return v.VlanId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInternalNetworkResultOutput{})
}
