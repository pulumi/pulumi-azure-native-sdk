// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230615

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Defines the External Network resource.
type ExternalNetwork struct {
	pulumi.CustomResourceState

	// Administrative state of the resource.
	AdministrativeState pulumi.StringOutput `pulumi:"administrativeState"`
	// Switch configuration description.
	Annotation pulumi.StringPtrOutput `pulumi:"annotation"`
	// Configuration state of the resource.
	ConfigurationState pulumi.StringOutput `pulumi:"configurationState"`
	// Export Route Policy either IPv4 or IPv6.
	ExportRoutePolicy ExportRoutePolicyResponsePtrOutput `pulumi:"exportRoutePolicy"`
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ExportRoutePolicyId pulumi.StringPtrOutput `pulumi:"exportRoutePolicyId"`
	// Import Route Policy either IPv4 or IPv6.
	ImportRoutePolicy ImportRoutePolicyResponsePtrOutput `pulumi:"importRoutePolicy"`
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ImportRoutePolicyId pulumi.StringPtrOutput `pulumi:"importRoutePolicyId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets the networkToNetworkInterconnectId of the resource.
	NetworkToNetworkInterconnectId pulumi.StringOutput `pulumi:"networkToNetworkInterconnectId"`
	// option A properties object
	OptionAProperties ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput `pulumi:"optionAProperties"`
	// option B properties object
	OptionBProperties L3OptionBPropertiesResponsePtrOutput `pulumi:"optionBProperties"`
	// Peering option list.
	PeeringOption pulumi.StringOutput `pulumi:"peeringOption"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewExternalNetwork registers a new resource with the given unique name, arguments, and options.
func NewExternalNetwork(ctx *pulumi.Context,
	name string, args *ExternalNetworkArgs, opts ...pulumi.ResourceOption) (*ExternalNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.L3IsolationDomainName == nil {
		return nil, errors.New("invalid value for required argument 'L3IsolationDomainName'")
	}
	if args.PeeringOption == nil {
		return nil, errors.New("invalid value for required argument 'PeeringOption'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.OptionAProperties != nil {
		args.OptionAProperties = args.OptionAProperties.ToExternalNetworkPropertiesOptionAPropertiesPtrOutput().ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *ExternalNetworkPropertiesOptionAProperties {
			return v.Defaults()
		}).(ExternalNetworkPropertiesOptionAPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:managednetworkfabric:ExternalNetwork"),
		},
		{
			Type: pulumi.String("azure-native:managednetworkfabric/v20230201preview:ExternalNetwork"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ExternalNetwork
	err := ctx.RegisterResource("azure-native:managednetworkfabric/v20230615:ExternalNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalNetwork gets an existing ExternalNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalNetworkState, opts ...pulumi.ResourceOption) (*ExternalNetwork, error) {
	var resource ExternalNetwork
	err := ctx.ReadResource("azure-native:managednetworkfabric/v20230615:ExternalNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalNetwork resources.
type externalNetworkState struct {
}

type ExternalNetworkState struct {
}

func (ExternalNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalNetworkState)(nil)).Elem()
}

type externalNetworkArgs struct {
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Export Route Policy either IPv4 or IPv6.
	ExportRoutePolicy *ExportRoutePolicy `pulumi:"exportRoutePolicy"`
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ExportRoutePolicyId *string `pulumi:"exportRoutePolicyId"`
	// Name of the External Network.
	ExternalNetworkName *string `pulumi:"externalNetworkName"`
	// Import Route Policy either IPv4 or IPv6.
	ImportRoutePolicy *ImportRoutePolicy `pulumi:"importRoutePolicy"`
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ImportRoutePolicyId *string `pulumi:"importRoutePolicyId"`
	// Name of the L3 Isolation Domain.
	L3IsolationDomainName string `pulumi:"l3IsolationDomainName"`
	// option A properties object
	OptionAProperties *ExternalNetworkPropertiesOptionAProperties `pulumi:"optionAProperties"`
	// option B properties object
	OptionBProperties *L3OptionBProperties `pulumi:"optionBProperties"`
	// Peering option list.
	PeeringOption string `pulumi:"peeringOption"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ExternalNetwork resource.
type ExternalNetworkArgs struct {
	// Switch configuration description.
	Annotation pulumi.StringPtrInput
	// Export Route Policy either IPv4 or IPv6.
	ExportRoutePolicy ExportRoutePolicyPtrInput
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ExportRoutePolicyId pulumi.StringPtrInput
	// Name of the External Network.
	ExternalNetworkName pulumi.StringPtrInput
	// Import Route Policy either IPv4 or IPv6.
	ImportRoutePolicy ImportRoutePolicyPtrInput
	// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
	ImportRoutePolicyId pulumi.StringPtrInput
	// Name of the L3 Isolation Domain.
	L3IsolationDomainName pulumi.StringInput
	// option A properties object
	OptionAProperties ExternalNetworkPropertiesOptionAPropertiesPtrInput
	// option B properties object
	OptionBProperties L3OptionBPropertiesPtrInput
	// Peering option list.
	PeeringOption pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (ExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalNetworkArgs)(nil)).Elem()
}

type ExternalNetworkInput interface {
	pulumi.Input

	ToExternalNetworkOutput() ExternalNetworkOutput
	ToExternalNetworkOutputWithContext(ctx context.Context) ExternalNetworkOutput
}

func (*ExternalNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetwork)(nil)).Elem()
}

func (i *ExternalNetwork) ToExternalNetworkOutput() ExternalNetworkOutput {
	return i.ToExternalNetworkOutputWithContext(context.Background())
}

func (i *ExternalNetwork) ToExternalNetworkOutputWithContext(ctx context.Context) ExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkOutput)
}

func (i *ExternalNetwork) ToOutput(ctx context.Context) pulumix.Output[*ExternalNetwork] {
	return pulumix.Output[*ExternalNetwork]{
		OutputState: i.ToExternalNetworkOutputWithContext(ctx).OutputState,
	}
}

type ExternalNetworkOutput struct{ *pulumi.OutputState }

func (ExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetwork)(nil)).Elem()
}

func (o ExternalNetworkOutput) ToExternalNetworkOutput() ExternalNetworkOutput {
	return o
}

func (o ExternalNetworkOutput) ToExternalNetworkOutputWithContext(ctx context.Context) ExternalNetworkOutput {
	return o
}

func (o ExternalNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[*ExternalNetwork] {
	return pulumix.Output[*ExternalNetwork]{
		OutputState: o.OutputState,
	}
}

// Administrative state of the resource.
func (o ExternalNetworkOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.AdministrativeState }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o ExternalNetworkOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringPtrOutput { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Configuration state of the resource.
func (o ExternalNetworkOutput) ConfigurationState() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.ConfigurationState }).(pulumi.StringOutput)
}

// Export Route Policy either IPv4 or IPv6.
func (o ExternalNetworkOutput) ExportRoutePolicy() ExportRoutePolicyResponsePtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) ExportRoutePolicyResponsePtrOutput { return v.ExportRoutePolicy }).(ExportRoutePolicyResponsePtrOutput)
}

// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
func (o ExternalNetworkOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringPtrOutput { return v.ExportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// Import Route Policy either IPv4 or IPv6.
func (o ExternalNetworkOutput) ImportRoutePolicy() ImportRoutePolicyResponsePtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) ImportRoutePolicyResponsePtrOutput { return v.ImportRoutePolicy }).(ImportRoutePolicyResponsePtrOutput)
}

// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
func (o ExternalNetworkOutput) ImportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringPtrOutput { return v.ImportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ExternalNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets the networkToNetworkInterconnectId of the resource.
func (o ExternalNetworkOutput) NetworkToNetworkInterconnectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.NetworkToNetworkInterconnectId }).(pulumi.StringOutput)
}

// option A properties object
func (o ExternalNetworkOutput) OptionAProperties() ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput {
		return v.OptionAProperties
	}).(ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput)
}

// option B properties object
func (o ExternalNetworkOutput) OptionBProperties() L3OptionBPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ExternalNetwork) L3OptionBPropertiesResponsePtrOutput { return v.OptionBProperties }).(L3OptionBPropertiesResponsePtrOutput)
}

// Peering option list.
func (o ExternalNetworkOutput) PeeringOption() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.PeeringOption }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o ExternalNetworkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ExternalNetworkOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ExternalNetwork) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ExternalNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ExternalNetworkOutput{})
}
