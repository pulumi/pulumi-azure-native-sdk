// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230615

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Implements an IP Community GET method.
func LookupIpCommunity(ctx *pulumi.Context, args *LookupIpCommunityArgs, opts ...pulumi.InvokeOption) (*LookupIpCommunityResult, error) {
	var rv LookupIpCommunityResult
	err := ctx.Invoke("azure-native:managednetworkfabric/v20230615:getIpCommunity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIpCommunityArgs struct {
	// Name of the IP Community.
	IpCommunityName string `pulumi:"ipCommunityName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The IP Community resource definition.
type LookupIpCommunityResult struct {
	// Administrative state of the resource.
	AdministrativeState string `pulumi:"administrativeState"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Configuration state of the resource.
	ConfigurationState string `pulumi:"configurationState"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// List of IP Community Rules.
	IpCommunityRules []IpCommunityRuleResponse `pulumi:"ipCommunityRules"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupIpCommunityOutput(ctx *pulumi.Context, args LookupIpCommunityOutputArgs, opts ...pulumi.InvokeOption) LookupIpCommunityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpCommunityResult, error) {
			args := v.(LookupIpCommunityArgs)
			r, err := LookupIpCommunity(ctx, &args, opts...)
			var s LookupIpCommunityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpCommunityResultOutput)
}

type LookupIpCommunityOutputArgs struct {
	// Name of the IP Community.
	IpCommunityName pulumi.StringInput `pulumi:"ipCommunityName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupIpCommunityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpCommunityArgs)(nil)).Elem()
}

// The IP Community resource definition.
type LookupIpCommunityResultOutput struct{ *pulumi.OutputState }

func (LookupIpCommunityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpCommunityResult)(nil)).Elem()
}

func (o LookupIpCommunityResultOutput) ToLookupIpCommunityResultOutput() LookupIpCommunityResultOutput {
	return o
}

func (o LookupIpCommunityResultOutput) ToLookupIpCommunityResultOutputWithContext(ctx context.Context) LookupIpCommunityResultOutput {
	return o
}

// Administrative state of the resource.
func (o LookupIpCommunityResultOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.AdministrativeState }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o LookupIpCommunityResultOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Configuration state of the resource.
func (o LookupIpCommunityResultOutput) ConfigurationState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.ConfigurationState }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupIpCommunityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of IP Community Rules.
func (o LookupIpCommunityResultOutput) IpCommunityRules() IpCommunityRuleResponseArrayOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) []IpCommunityRuleResponse { return v.IpCommunityRules }).(IpCommunityRuleResponseArrayOutput)
}

// The geo-location where the resource lives
func (o LookupIpCommunityResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupIpCommunityResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupIpCommunityResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupIpCommunityResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupIpCommunityResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupIpCommunityResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpCommunityResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpCommunityResultOutput{})
}
