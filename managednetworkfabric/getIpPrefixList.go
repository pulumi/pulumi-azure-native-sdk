// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managednetworkfabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Implements Ip Prefix List GET method.
// API Version: 2023-02-01-preview.
func LookupIpPrefixList(ctx *pulumi.Context, args *LookupIpPrefixListArgs, opts ...pulumi.InvokeOption) (*LookupIpPrefixListResult, error) {
	var rv LookupIpPrefixListResult
	err := ctx.Invoke("azure-native:managednetworkfabric:getIpPrefixList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIpPrefixListArgs struct {
	// Name of the Ip Prefix List
	IpPrefixListName string `pulumi:"ipPrefixListName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The IpPrefixList resource definition.
type LookupIpPrefixListResult struct {
	// action. Example: allow | deny.
	Action string `pulumi:"action"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
	NetworkAddress string `pulumi:"networkAddress"`
	// Gets the provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// sequenceNumber of the Ip Prefix List.
	SequenceNumber int `pulumi:"sequenceNumber"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupIpPrefixListOutput(ctx *pulumi.Context, args LookupIpPrefixListOutputArgs, opts ...pulumi.InvokeOption) LookupIpPrefixListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpPrefixListResult, error) {
			args := v.(LookupIpPrefixListArgs)
			r, err := LookupIpPrefixList(ctx, &args, opts...)
			var s LookupIpPrefixListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpPrefixListResultOutput)
}

type LookupIpPrefixListOutputArgs struct {
	// Name of the Ip Prefix List
	IpPrefixListName pulumi.StringInput `pulumi:"ipPrefixListName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupIpPrefixListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpPrefixListArgs)(nil)).Elem()
}

// The IpPrefixList resource definition.
type LookupIpPrefixListResultOutput struct{ *pulumi.OutputState }

func (LookupIpPrefixListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpPrefixListResult)(nil)).Elem()
}

func (o LookupIpPrefixListResultOutput) ToLookupIpPrefixListResultOutput() LookupIpPrefixListResultOutput {
	return o
}

func (o LookupIpPrefixListResultOutput) ToLookupIpPrefixListResultOutputWithContext(ctx context.Context) LookupIpPrefixListResultOutput {
	return o
}

// action. Example: allow | deny.
func (o LookupIpPrefixListResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.Action }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o LookupIpPrefixListResultOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupIpPrefixListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupIpPrefixListResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupIpPrefixListResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.Name }).(pulumi.StringOutput)
}

// networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
func (o LookupIpPrefixListResultOutput) NetworkAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.NetworkAddress }).(pulumi.StringOutput)
}

// Gets the provisioning state of the resource.
func (o LookupIpPrefixListResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// sequenceNumber of the Ip Prefix List.
func (o LookupIpPrefixListResultOutput) SequenceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) int { return v.SequenceNumber }).(pulumi.IntOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupIpPrefixListResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupIpPrefixListResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupIpPrefixListResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpPrefixListResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpPrefixListResultOutput{})
}
