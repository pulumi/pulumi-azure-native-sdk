// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managednetworkfabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The NetworkPacketBroker resource definition.
// Azure REST API version: 2023-06-15.
type NetworkPacketBroker struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// List of neighbor group IDs configured on NPB.
	NeighborGroupIds pulumi.StringArrayOutput `pulumi:"neighborGroupIds"`
	// List of ARM resource IDs of Network Devices [NPB].
	NetworkDeviceIds pulumi.StringArrayOutput `pulumi:"networkDeviceIds"`
	// ARM resource ID of the Network Fabric.
	NetworkFabricId pulumi.StringOutput `pulumi:"networkFabricId"`
	// List of network Tap IDs configured on NPB.
	NetworkTapIds pulumi.StringArrayOutput `pulumi:"networkTapIds"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// List of network interfaces across NPB devices that are used to mirror source traffic.
	SourceInterfaceIds pulumi.StringArrayOutput `pulumi:"sourceInterfaceIds"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkPacketBroker registers a new resource with the given unique name, arguments, and options.
func NewNetworkPacketBroker(ctx *pulumi.Context,
	name string, args *NetworkPacketBrokerArgs, opts ...pulumi.ResourceOption) (*NetworkPacketBroker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkFabricId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkFabricId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:managednetworkfabric/v20230615:NetworkPacketBroker"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NetworkPacketBroker
	err := ctx.RegisterResource("azure-native:managednetworkfabric:NetworkPacketBroker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPacketBroker gets an existing NetworkPacketBroker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkPacketBroker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkPacketBrokerState, opts ...pulumi.ResourceOption) (*NetworkPacketBroker, error) {
	var resource NetworkPacketBroker
	err := ctx.ReadResource("azure-native:managednetworkfabric:NetworkPacketBroker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkPacketBroker resources.
type networkPacketBrokerState struct {
}

type NetworkPacketBrokerState struct {
}

func (NetworkPacketBrokerState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPacketBrokerState)(nil)).Elem()
}

type networkPacketBrokerArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// ARM resource ID of the Network Fabric.
	NetworkFabricId string `pulumi:"networkFabricId"`
	// Name of the Network Packet Broker.
	NetworkPacketBrokerName *string `pulumi:"networkPacketBrokerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkPacketBroker resource.
type NetworkPacketBrokerArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// ARM resource ID of the Network Fabric.
	NetworkFabricId pulumi.StringInput
	// Name of the Network Packet Broker.
	NetworkPacketBrokerName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (NetworkPacketBrokerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPacketBrokerArgs)(nil)).Elem()
}

type NetworkPacketBrokerInput interface {
	pulumi.Input

	ToNetworkPacketBrokerOutput() NetworkPacketBrokerOutput
	ToNetworkPacketBrokerOutputWithContext(ctx context.Context) NetworkPacketBrokerOutput
}

func (*NetworkPacketBroker) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketBroker)(nil)).Elem()
}

func (i *NetworkPacketBroker) ToNetworkPacketBrokerOutput() NetworkPacketBrokerOutput {
	return i.ToNetworkPacketBrokerOutputWithContext(context.Background())
}

func (i *NetworkPacketBroker) ToNetworkPacketBrokerOutputWithContext(ctx context.Context) NetworkPacketBrokerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketBrokerOutput)
}

type NetworkPacketBrokerOutput struct{ *pulumi.OutputState }

func (NetworkPacketBrokerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketBroker)(nil)).Elem()
}

func (o NetworkPacketBrokerOutput) ToNetworkPacketBrokerOutput() NetworkPacketBrokerOutput {
	return o
}

func (o NetworkPacketBrokerOutput) ToNetworkPacketBrokerOutputWithContext(ctx context.Context) NetworkPacketBrokerOutput {
	return o
}

// The geo-location where the resource lives
func (o NetworkPacketBrokerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o NetworkPacketBrokerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of neighbor group IDs configured on NPB.
func (o NetworkPacketBrokerOutput) NeighborGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringArrayOutput { return v.NeighborGroupIds }).(pulumi.StringArrayOutput)
}

// List of ARM resource IDs of Network Devices [NPB].
func (o NetworkPacketBrokerOutput) NetworkDeviceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringArrayOutput { return v.NetworkDeviceIds }).(pulumi.StringArrayOutput)
}

// ARM resource ID of the Network Fabric.
func (o NetworkPacketBrokerOutput) NetworkFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringOutput { return v.NetworkFabricId }).(pulumi.StringOutput)
}

// List of network Tap IDs configured on NPB.
func (o NetworkPacketBrokerOutput) NetworkTapIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringArrayOutput { return v.NetworkTapIds }).(pulumi.StringArrayOutput)
}

// Provisioning state of the resource.
func (o NetworkPacketBrokerOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of network interfaces across NPB devices that are used to mirror source traffic.
func (o NetworkPacketBrokerOutput) SourceInterfaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringArrayOutput { return v.SourceInterfaceIds }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o NetworkPacketBrokerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o NetworkPacketBrokerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o NetworkPacketBrokerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketBroker) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkPacketBrokerOutput{})
}
