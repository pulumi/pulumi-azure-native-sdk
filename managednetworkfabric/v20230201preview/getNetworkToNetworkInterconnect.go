// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Implements NetworkToNetworkInterconnects GET method.
func LookupNetworkToNetworkInterconnect(ctx *pulumi.Context, args *LookupNetworkToNetworkInterconnectArgs, opts ...pulumi.InvokeOption) (*LookupNetworkToNetworkInterconnectResult, error) {
	var rv LookupNetworkToNetworkInterconnectResult
	err := ctx.Invoke("azure-native:managednetworkfabric/v20230201preview:getNetworkToNetworkInterconnect", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupNetworkToNetworkInterconnectArgs struct {
	// Name of the NetworkFabric.
	NetworkFabricName string `pulumi:"networkFabricName"`
	// Name of the NetworkToNetworkInterconnect
	NetworkToNetworkInterconnectName string `pulumi:"networkToNetworkInterconnectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The NetworkToNetworkInterconnect resource definition.
type LookupNetworkToNetworkInterconnectResult struct {
	// Gets the administrativeState of the resource. Example -Enabled/Disabled
	AdministrativeState string `pulumi:"administrativeState"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Configuration to use NNI for Infrastructure Management. Example: True/False.
	IsManagementType string `pulumi:"isManagementType"`
	// Common properties for Layer2Configuration.
	Layer2Configuration *Layer2ConfigurationResponse `pulumi:"layer2Configuration"`
	// Common properties for Layer3Configuration.
	Layer3Configuration *Layer3ConfigurationResponse `pulumi:"layer3Configuration"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Type of NNI used. Example: CE | NPB
	NniType *string `pulumi:"nniType"`
	// Gets the provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Based on this parameter the layer2/layer3 is made as mandatory. Example: True/False
	UseOptionB string `pulumi:"useOptionB"`
}

// Defaults sets the appropriate defaults for LookupNetworkToNetworkInterconnectResult
func (val *LookupNetworkToNetworkInterconnectResult) Defaults() *LookupNetworkToNetworkInterconnectResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Layer2Configuration = tmp.Layer2Configuration.Defaults()

	if tmp.NniType == nil {
		nniType_ := "CE"
		tmp.NniType = &nniType_
	}
	return &tmp
}

func LookupNetworkToNetworkInterconnectOutput(ctx *pulumi.Context, args LookupNetworkToNetworkInterconnectOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkToNetworkInterconnectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkToNetworkInterconnectResult, error) {
			args := v.(LookupNetworkToNetworkInterconnectArgs)
			r, err := LookupNetworkToNetworkInterconnect(ctx, &args, opts...)
			var s LookupNetworkToNetworkInterconnectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkToNetworkInterconnectResultOutput)
}

type LookupNetworkToNetworkInterconnectOutputArgs struct {
	// Name of the NetworkFabric.
	NetworkFabricName pulumi.StringInput `pulumi:"networkFabricName"`
	// Name of the NetworkToNetworkInterconnect
	NetworkToNetworkInterconnectName pulumi.StringInput `pulumi:"networkToNetworkInterconnectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNetworkToNetworkInterconnectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkToNetworkInterconnectArgs)(nil)).Elem()
}

// The NetworkToNetworkInterconnect resource definition.
type LookupNetworkToNetworkInterconnectResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkToNetworkInterconnectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkToNetworkInterconnectResult)(nil)).Elem()
}

func (o LookupNetworkToNetworkInterconnectResultOutput) ToLookupNetworkToNetworkInterconnectResultOutput() LookupNetworkToNetworkInterconnectResultOutput {
	return o
}

func (o LookupNetworkToNetworkInterconnectResultOutput) ToLookupNetworkToNetworkInterconnectResultOutputWithContext(ctx context.Context) LookupNetworkToNetworkInterconnectResultOutput {
	return o
}

// Gets the administrativeState of the resource. Example -Enabled/Disabled
func (o LookupNetworkToNetworkInterconnectResultOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.AdministrativeState }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupNetworkToNetworkInterconnectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.Id }).(pulumi.StringOutput)
}

// Configuration to use NNI for Infrastructure Management. Example: True/False.
func (o LookupNetworkToNetworkInterconnectResultOutput) IsManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.IsManagementType }).(pulumi.StringOutput)
}

// Common properties for Layer2Configuration.
func (o LookupNetworkToNetworkInterconnectResultOutput) Layer2Configuration() Layer2ConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) *Layer2ConfigurationResponse {
		return v.Layer2Configuration
	}).(Layer2ConfigurationResponsePtrOutput)
}

// Common properties for Layer3Configuration.
func (o LookupNetworkToNetworkInterconnectResultOutput) Layer3Configuration() Layer3ConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) *Layer3ConfigurationResponse {
		return v.Layer3Configuration
	}).(Layer3ConfigurationResponsePtrOutput)
}

// The name of the resource
func (o LookupNetworkToNetworkInterconnectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of NNI used. Example: CE | NPB
func (o LookupNetworkToNetworkInterconnectResultOutput) NniType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) *string { return v.NniType }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the resource.
func (o LookupNetworkToNetworkInterconnectResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupNetworkToNetworkInterconnectResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupNetworkToNetworkInterconnectResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.Type }).(pulumi.StringOutput)
}

// Based on this parameter the layer2/layer3 is made as mandatory. Example: True/False
func (o LookupNetworkToNetworkInterconnectResultOutput) UseOptionB() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkToNetworkInterconnectResult) string { return v.UseOptionB }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkToNetworkInterconnectResultOutput{})
}
