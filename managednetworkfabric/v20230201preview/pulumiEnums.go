// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// IP address family. Example: ipv4 | ipv6.
type AddressFamily string

const (
	AddressFamilyIpv4 = AddressFamily("ipv4")
	AddressFamilyIpv6 = AddressFamily("ipv6")
)

func (AddressFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressFamily)(nil)).Elem()
}

func (e AddressFamily) ToAddressFamilyOutput() AddressFamilyOutput {
	return pulumi.ToOutput(e).(AddressFamilyOutput)
}

func (e AddressFamily) ToAddressFamilyOutputWithContext(ctx context.Context) AddressFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressFamilyOutput)
}

func (e AddressFamily) ToAddressFamilyPtrOutput() AddressFamilyPtrOutput {
	return e.ToAddressFamilyPtrOutputWithContext(context.Background())
}

func (e AddressFamily) ToAddressFamilyPtrOutputWithContext(ctx context.Context) AddressFamilyPtrOutput {
	return AddressFamily(e).ToAddressFamilyOutputWithContext(ctx).ToAddressFamilyPtrOutputWithContext(ctx)
}

func (e AddressFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressFamilyOutput struct{ *pulumi.OutputState }

func (AddressFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressFamily)(nil)).Elem()
}

func (o AddressFamilyOutput) ToAddressFamilyOutput() AddressFamilyOutput {
	return o
}

func (o AddressFamilyOutput) ToAddressFamilyOutputWithContext(ctx context.Context) AddressFamilyOutput {
	return o
}

func (o AddressFamilyOutput) ToAddressFamilyPtrOutput() AddressFamilyPtrOutput {
	return o.ToAddressFamilyPtrOutputWithContext(context.Background())
}

func (o AddressFamilyOutput) ToAddressFamilyPtrOutputWithContext(ctx context.Context) AddressFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressFamily) *AddressFamily {
		return &v
	}).(AddressFamilyPtrOutput)
}

func (o AddressFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressFamilyPtrOutput struct{ *pulumi.OutputState }

func (AddressFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressFamily)(nil)).Elem()
}

func (o AddressFamilyPtrOutput) ToAddressFamilyPtrOutput() AddressFamilyPtrOutput {
	return o
}

func (o AddressFamilyPtrOutput) ToAddressFamilyPtrOutputWithContext(ctx context.Context) AddressFamilyPtrOutput {
	return o
}

func (o AddressFamilyPtrOutput) Elem() AddressFamilyOutput {
	return o.ApplyT(func(v *AddressFamily) AddressFamily {
		if v != nil {
			return *v
		}
		var ret AddressFamily
		return ret
	}).(AddressFamilyOutput)
}

func (o AddressFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressFamilyInput is an input type that accepts values of the AddressFamily enum
// A concrete instance of `AddressFamilyInput` can be one of the following:
//
//	AddressFamilyIpv4
//	AddressFamilyIpv6
type AddressFamilyInput interface {
	pulumi.Input

	ToAddressFamilyOutput() AddressFamilyOutput
	ToAddressFamilyOutputWithContext(context.Context) AddressFamilyOutput
}

var addressFamilyPtrType = reflect.TypeOf((**AddressFamily)(nil)).Elem()

type AddressFamilyPtrInput interface {
	pulumi.Input

	ToAddressFamilyPtrOutput() AddressFamilyPtrOutput
	ToAddressFamilyPtrOutputWithContext(context.Context) AddressFamilyPtrOutput
}

type addressFamilyPtr string

func AddressFamilyPtr(v string) AddressFamilyPtrInput {
	return (*addressFamilyPtr)(&v)
}

func (*addressFamilyPtr) ElementType() reflect.Type {
	return addressFamilyPtrType
}

func (in *addressFamilyPtr) ToAddressFamilyPtrOutput() AddressFamilyPtrOutput {
	return pulumi.ToOutput(in).(AddressFamilyPtrOutput)
}

func (in *addressFamilyPtr) ToAddressFamilyPtrOutputWithContext(ctx context.Context) AddressFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressFamilyPtrOutput)
}

func (in *addressFamilyPtr) ToOutput(ctx context.Context) pulumix.Output[*AddressFamily] {
	return pulumix.Output[*AddressFamily]{
		OutputState: in.ToAddressFamilyPtrOutputWithContext(ctx).OutputState,
	}
}

// Enable Or Disable state.
type AllowASOverride string

const (
	AllowASOverrideEnable  = AllowASOverride("Enable")
	AllowASOverrideDisable = AllowASOverride("Disable")
)

func (AllowASOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowASOverride)(nil)).Elem()
}

func (e AllowASOverride) ToAllowASOverrideOutput() AllowASOverrideOutput {
	return pulumi.ToOutput(e).(AllowASOverrideOutput)
}

func (e AllowASOverride) ToAllowASOverrideOutputWithContext(ctx context.Context) AllowASOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AllowASOverrideOutput)
}

func (e AllowASOverride) ToAllowASOverridePtrOutput() AllowASOverridePtrOutput {
	return e.ToAllowASOverridePtrOutputWithContext(context.Background())
}

func (e AllowASOverride) ToAllowASOverridePtrOutputWithContext(ctx context.Context) AllowASOverridePtrOutput {
	return AllowASOverride(e).ToAllowASOverrideOutputWithContext(ctx).ToAllowASOverridePtrOutputWithContext(ctx)
}

func (e AllowASOverride) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllowASOverride) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllowASOverride) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AllowASOverride) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AllowASOverrideOutput struct{ *pulumi.OutputState }

func (AllowASOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowASOverride)(nil)).Elem()
}

func (o AllowASOverrideOutput) ToAllowASOverrideOutput() AllowASOverrideOutput {
	return o
}

func (o AllowASOverrideOutput) ToAllowASOverrideOutputWithContext(ctx context.Context) AllowASOverrideOutput {
	return o
}

func (o AllowASOverrideOutput) ToAllowASOverridePtrOutput() AllowASOverridePtrOutput {
	return o.ToAllowASOverridePtrOutputWithContext(context.Background())
}

func (o AllowASOverrideOutput) ToAllowASOverridePtrOutputWithContext(ctx context.Context) AllowASOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AllowASOverride) *AllowASOverride {
		return &v
	}).(AllowASOverridePtrOutput)
}

func (o AllowASOverrideOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AllowASOverrideOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllowASOverride) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AllowASOverrideOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllowASOverrideOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllowASOverride) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AllowASOverridePtrOutput struct{ *pulumi.OutputState }

func (AllowASOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowASOverride)(nil)).Elem()
}

func (o AllowASOverridePtrOutput) ToAllowASOverridePtrOutput() AllowASOverridePtrOutput {
	return o
}

func (o AllowASOverridePtrOutput) ToAllowASOverridePtrOutputWithContext(ctx context.Context) AllowASOverridePtrOutput {
	return o
}

func (o AllowASOverridePtrOutput) Elem() AllowASOverrideOutput {
	return o.ApplyT(func(v *AllowASOverride) AllowASOverride {
		if v != nil {
			return *v
		}
		var ret AllowASOverride
		return ret
	}).(AllowASOverrideOutput)
}

func (o AllowASOverridePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllowASOverridePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AllowASOverride) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AllowASOverrideInput is an input type that accepts values of the AllowASOverride enum
// A concrete instance of `AllowASOverrideInput` can be one of the following:
//
//	AllowASOverrideEnable
//	AllowASOverrideDisable
type AllowASOverrideInput interface {
	pulumi.Input

	ToAllowASOverrideOutput() AllowASOverrideOutput
	ToAllowASOverrideOutputWithContext(context.Context) AllowASOverrideOutput
}

var allowASOverridePtrType = reflect.TypeOf((**AllowASOverride)(nil)).Elem()

type AllowASOverridePtrInput interface {
	pulumi.Input

	ToAllowASOverridePtrOutput() AllowASOverridePtrOutput
	ToAllowASOverridePtrOutputWithContext(context.Context) AllowASOverridePtrOutput
}

type allowASOverridePtr string

func AllowASOverridePtr(v string) AllowASOverridePtrInput {
	return (*allowASOverridePtr)(&v)
}

func (*allowASOverridePtr) ElementType() reflect.Type {
	return allowASOverridePtrType
}

func (in *allowASOverridePtr) ToAllowASOverridePtrOutput() AllowASOverridePtrOutput {
	return pulumi.ToOutput(in).(AllowASOverridePtrOutput)
}

func (in *allowASOverridePtr) ToAllowASOverridePtrOutputWithContext(ctx context.Context) AllowASOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AllowASOverridePtrOutput)
}

func (in *allowASOverridePtr) ToOutput(ctx context.Context) pulumix.Output[*AllowASOverride] {
	return pulumix.Output[*AllowASOverride]{
		OutputState: in.ToAllowASOverridePtrOutputWithContext(ctx).OutputState,
	}
}

// Based on this parameter the layer2/layer3 is made as mandatory. Example: True/False
type BooleanEnumProperty string

const (
	BooleanEnumPropertyTrue  = BooleanEnumProperty("True")
	BooleanEnumPropertyFalse = BooleanEnumProperty("False")
)

func (BooleanEnumProperty) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanEnumProperty)(nil)).Elem()
}

func (e BooleanEnumProperty) ToBooleanEnumPropertyOutput() BooleanEnumPropertyOutput {
	return pulumi.ToOutput(e).(BooleanEnumPropertyOutput)
}

func (e BooleanEnumProperty) ToBooleanEnumPropertyOutputWithContext(ctx context.Context) BooleanEnumPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BooleanEnumPropertyOutput)
}

func (e BooleanEnumProperty) ToBooleanEnumPropertyPtrOutput() BooleanEnumPropertyPtrOutput {
	return e.ToBooleanEnumPropertyPtrOutputWithContext(context.Background())
}

func (e BooleanEnumProperty) ToBooleanEnumPropertyPtrOutputWithContext(ctx context.Context) BooleanEnumPropertyPtrOutput {
	return BooleanEnumProperty(e).ToBooleanEnumPropertyOutputWithContext(ctx).ToBooleanEnumPropertyPtrOutputWithContext(ctx)
}

func (e BooleanEnumProperty) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BooleanEnumProperty) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BooleanEnumProperty) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BooleanEnumProperty) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BooleanEnumPropertyOutput struct{ *pulumi.OutputState }

func (BooleanEnumPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanEnumProperty)(nil)).Elem()
}

func (o BooleanEnumPropertyOutput) ToBooleanEnumPropertyOutput() BooleanEnumPropertyOutput {
	return o
}

func (o BooleanEnumPropertyOutput) ToBooleanEnumPropertyOutputWithContext(ctx context.Context) BooleanEnumPropertyOutput {
	return o
}

func (o BooleanEnumPropertyOutput) ToBooleanEnumPropertyPtrOutput() BooleanEnumPropertyPtrOutput {
	return o.ToBooleanEnumPropertyPtrOutputWithContext(context.Background())
}

func (o BooleanEnumPropertyOutput) ToBooleanEnumPropertyPtrOutputWithContext(ctx context.Context) BooleanEnumPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BooleanEnumProperty) *BooleanEnumProperty {
		return &v
	}).(BooleanEnumPropertyPtrOutput)
}

func (o BooleanEnumPropertyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BooleanEnumPropertyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BooleanEnumProperty) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BooleanEnumPropertyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BooleanEnumPropertyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BooleanEnumProperty) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BooleanEnumPropertyPtrOutput struct{ *pulumi.OutputState }

func (BooleanEnumPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BooleanEnumProperty)(nil)).Elem()
}

func (o BooleanEnumPropertyPtrOutput) ToBooleanEnumPropertyPtrOutput() BooleanEnumPropertyPtrOutput {
	return o
}

func (o BooleanEnumPropertyPtrOutput) ToBooleanEnumPropertyPtrOutputWithContext(ctx context.Context) BooleanEnumPropertyPtrOutput {
	return o
}

func (o BooleanEnumPropertyPtrOutput) Elem() BooleanEnumPropertyOutput {
	return o.ApplyT(func(v *BooleanEnumProperty) BooleanEnumProperty {
		if v != nil {
			return *v
		}
		var ret BooleanEnumProperty
		return ret
	}).(BooleanEnumPropertyOutput)
}

func (o BooleanEnumPropertyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BooleanEnumPropertyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BooleanEnumProperty) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BooleanEnumPropertyInput is an input type that accepts values of the BooleanEnumProperty enum
// A concrete instance of `BooleanEnumPropertyInput` can be one of the following:
//
//	BooleanEnumPropertyTrue
//	BooleanEnumPropertyFalse
type BooleanEnumPropertyInput interface {
	pulumi.Input

	ToBooleanEnumPropertyOutput() BooleanEnumPropertyOutput
	ToBooleanEnumPropertyOutputWithContext(context.Context) BooleanEnumPropertyOutput
}

var booleanEnumPropertyPtrType = reflect.TypeOf((**BooleanEnumProperty)(nil)).Elem()

type BooleanEnumPropertyPtrInput interface {
	pulumi.Input

	ToBooleanEnumPropertyPtrOutput() BooleanEnumPropertyPtrOutput
	ToBooleanEnumPropertyPtrOutputWithContext(context.Context) BooleanEnumPropertyPtrOutput
}

type booleanEnumPropertyPtr string

func BooleanEnumPropertyPtr(v string) BooleanEnumPropertyPtrInput {
	return (*booleanEnumPropertyPtr)(&v)
}

func (*booleanEnumPropertyPtr) ElementType() reflect.Type {
	return booleanEnumPropertyPtrType
}

func (in *booleanEnumPropertyPtr) ToBooleanEnumPropertyPtrOutput() BooleanEnumPropertyPtrOutput {
	return pulumi.ToOutput(in).(BooleanEnumPropertyPtrOutput)
}

func (in *booleanEnumPropertyPtr) ToBooleanEnumPropertyPtrOutputWithContext(ctx context.Context) BooleanEnumPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BooleanEnumPropertyPtrOutput)
}

func (in *booleanEnumPropertyPtr) ToOutput(ctx context.Context) pulumix.Output[*BooleanEnumProperty] {
	return pulumix.Output[*BooleanEnumProperty]{
		OutputState: in.ToBooleanEnumPropertyPtrOutputWithContext(ctx).OutputState,
	}
}

// action. Example: Permit | Deny.
type CommunityActionTypes string

const (
	CommunityActionTypesPermit = CommunityActionTypes("Permit")
	CommunityActionTypesDeny   = CommunityActionTypes("Deny")
)

func (CommunityActionTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityActionTypes)(nil)).Elem()
}

func (e CommunityActionTypes) ToCommunityActionTypesOutput() CommunityActionTypesOutput {
	return pulumi.ToOutput(e).(CommunityActionTypesOutput)
}

func (e CommunityActionTypes) ToCommunityActionTypesOutputWithContext(ctx context.Context) CommunityActionTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CommunityActionTypesOutput)
}

func (e CommunityActionTypes) ToCommunityActionTypesPtrOutput() CommunityActionTypesPtrOutput {
	return e.ToCommunityActionTypesPtrOutputWithContext(context.Background())
}

func (e CommunityActionTypes) ToCommunityActionTypesPtrOutputWithContext(ctx context.Context) CommunityActionTypesPtrOutput {
	return CommunityActionTypes(e).ToCommunityActionTypesOutputWithContext(ctx).ToCommunityActionTypesPtrOutputWithContext(ctx)
}

func (e CommunityActionTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CommunityActionTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CommunityActionTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CommunityActionTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CommunityActionTypesOutput struct{ *pulumi.OutputState }

func (CommunityActionTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityActionTypes)(nil)).Elem()
}

func (o CommunityActionTypesOutput) ToCommunityActionTypesOutput() CommunityActionTypesOutput {
	return o
}

func (o CommunityActionTypesOutput) ToCommunityActionTypesOutputWithContext(ctx context.Context) CommunityActionTypesOutput {
	return o
}

func (o CommunityActionTypesOutput) ToCommunityActionTypesPtrOutput() CommunityActionTypesPtrOutput {
	return o.ToCommunityActionTypesPtrOutputWithContext(context.Background())
}

func (o CommunityActionTypesOutput) ToCommunityActionTypesPtrOutputWithContext(ctx context.Context) CommunityActionTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommunityActionTypes) *CommunityActionTypes {
		return &v
	}).(CommunityActionTypesPtrOutput)
}

func (o CommunityActionTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CommunityActionTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CommunityActionTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CommunityActionTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CommunityActionTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CommunityActionTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CommunityActionTypesPtrOutput struct{ *pulumi.OutputState }

func (CommunityActionTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunityActionTypes)(nil)).Elem()
}

func (o CommunityActionTypesPtrOutput) ToCommunityActionTypesPtrOutput() CommunityActionTypesPtrOutput {
	return o
}

func (o CommunityActionTypesPtrOutput) ToCommunityActionTypesPtrOutputWithContext(ctx context.Context) CommunityActionTypesPtrOutput {
	return o
}

func (o CommunityActionTypesPtrOutput) Elem() CommunityActionTypesOutput {
	return o.ApplyT(func(v *CommunityActionTypes) CommunityActionTypes {
		if v != nil {
			return *v
		}
		var ret CommunityActionTypes
		return ret
	}).(CommunityActionTypesOutput)
}

func (o CommunityActionTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CommunityActionTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CommunityActionTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CommunityActionTypesInput is an input type that accepts values of the CommunityActionTypes enum
// A concrete instance of `CommunityActionTypesInput` can be one of the following:
//
//	CommunityActionTypesPermit
//	CommunityActionTypesDeny
type CommunityActionTypesInput interface {
	pulumi.Input

	ToCommunityActionTypesOutput() CommunityActionTypesOutput
	ToCommunityActionTypesOutputWithContext(context.Context) CommunityActionTypesOutput
}

var communityActionTypesPtrType = reflect.TypeOf((**CommunityActionTypes)(nil)).Elem()

type CommunityActionTypesPtrInput interface {
	pulumi.Input

	ToCommunityActionTypesPtrOutput() CommunityActionTypesPtrOutput
	ToCommunityActionTypesPtrOutputWithContext(context.Context) CommunityActionTypesPtrOutput
}

type communityActionTypesPtr string

func CommunityActionTypesPtr(v string) CommunityActionTypesPtrInput {
	return (*communityActionTypesPtr)(&v)
}

func (*communityActionTypesPtr) ElementType() reflect.Type {
	return communityActionTypesPtrType
}

func (in *communityActionTypesPtr) ToCommunityActionTypesPtrOutput() CommunityActionTypesPtrOutput {
	return pulumi.ToOutput(in).(CommunityActionTypesPtrOutput)
}

func (in *communityActionTypesPtr) ToCommunityActionTypesPtrOutputWithContext(ctx context.Context) CommunityActionTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CommunityActionTypesPtrOutput)
}

func (in *communityActionTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*CommunityActionTypes] {
	return pulumix.Output[*CommunityActionTypes]{
		OutputState: in.ToCommunityActionTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// Specify prefix-list bounds.
type Condition string

const (
	ConditionEqualTo              = Condition("EqualTo")
	ConditionGreaterThanOrEqualTo = Condition("GreaterThanOrEqualTo")
	ConditionLesserThanOrEqualTo  = Condition("LesserThanOrEqualTo")
)

func (Condition) ElementType() reflect.Type {
	return reflect.TypeOf((*Condition)(nil)).Elem()
}

func (e Condition) ToConditionOutput() ConditionOutput {
	return pulumi.ToOutput(e).(ConditionOutput)
}

func (e Condition) ToConditionOutputWithContext(ctx context.Context) ConditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionOutput)
}

func (e Condition) ToConditionPtrOutput() ConditionPtrOutput {
	return e.ToConditionPtrOutputWithContext(context.Background())
}

func (e Condition) ToConditionPtrOutputWithContext(ctx context.Context) ConditionPtrOutput {
	return Condition(e).ToConditionOutputWithContext(ctx).ToConditionPtrOutputWithContext(ctx)
}

func (e Condition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Condition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Condition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Condition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionOutput struct{ *pulumi.OutputState }

func (ConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Condition)(nil)).Elem()
}

func (o ConditionOutput) ToConditionOutput() ConditionOutput {
	return o
}

func (o ConditionOutput) ToConditionOutputWithContext(ctx context.Context) ConditionOutput {
	return o
}

func (o ConditionOutput) ToConditionPtrOutput() ConditionPtrOutput {
	return o.ToConditionPtrOutputWithContext(context.Background())
}

func (o ConditionOutput) ToConditionPtrOutputWithContext(ctx context.Context) ConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Condition) *Condition {
		return &v
	}).(ConditionPtrOutput)
}

func (o ConditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Condition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Condition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionPtrOutput struct{ *pulumi.OutputState }

func (ConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Condition)(nil)).Elem()
}

func (o ConditionPtrOutput) ToConditionPtrOutput() ConditionPtrOutput {
	return o
}

func (o ConditionPtrOutput) ToConditionPtrOutputWithContext(ctx context.Context) ConditionPtrOutput {
	return o
}

func (o ConditionPtrOutput) Elem() ConditionOutput {
	return o.ApplyT(func(v *Condition) Condition {
		if v != nil {
			return *v
		}
		var ret Condition
		return ret
	}).(ConditionOutput)
}

func (o ConditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Condition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionInput is an input type that accepts values of the Condition enum
// A concrete instance of `ConditionInput` can be one of the following:
//
//	ConditionEqualTo
//	ConditionGreaterThanOrEqualTo
//	ConditionLesserThanOrEqualTo
type ConditionInput interface {
	pulumi.Input

	ToConditionOutput() ConditionOutput
	ToConditionOutputWithContext(context.Context) ConditionOutput
}

var conditionPtrType = reflect.TypeOf((**Condition)(nil)).Elem()

type ConditionPtrInput interface {
	pulumi.Input

	ToConditionPtrOutput() ConditionPtrOutput
	ToConditionPtrOutputWithContext(context.Context) ConditionPtrOutput
}

type conditionPtr string

func ConditionPtr(v string) ConditionPtrInput {
	return (*conditionPtr)(&v)
}

func (*conditionPtr) ElementType() reflect.Type {
	return conditionPtrType
}

func (in *conditionPtr) ToConditionPtrOutput() ConditionPtrOutput {
	return pulumi.ToOutput(in).(ConditionPtrOutput)
}

func (in *conditionPtr) ToConditionPtrOutputWithContext(ctx context.Context) ConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionPtrOutput)
}

func (in *conditionPtr) ToOutput(ctx context.Context) pulumix.Output[*Condition] {
	return pulumix.Output[*Condition]{
		OutputState: in.ToConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// action. Example: allow | deny.
type ConditionActionType string

const (
	ConditionActionTypeAllow = ConditionActionType("allow")
	ConditionActionTypeDeny  = ConditionActionType("deny")
)

func (ConditionActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionActionType)(nil)).Elem()
}

func (e ConditionActionType) ToConditionActionTypeOutput() ConditionActionTypeOutput {
	return pulumi.ToOutput(e).(ConditionActionTypeOutput)
}

func (e ConditionActionType) ToConditionActionTypeOutputWithContext(ctx context.Context) ConditionActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionActionTypeOutput)
}

func (e ConditionActionType) ToConditionActionTypePtrOutput() ConditionActionTypePtrOutput {
	return e.ToConditionActionTypePtrOutputWithContext(context.Background())
}

func (e ConditionActionType) ToConditionActionTypePtrOutputWithContext(ctx context.Context) ConditionActionTypePtrOutput {
	return ConditionActionType(e).ToConditionActionTypeOutputWithContext(ctx).ToConditionActionTypePtrOutputWithContext(ctx)
}

func (e ConditionActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConditionActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionActionTypeOutput struct{ *pulumi.OutputState }

func (ConditionActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionActionType)(nil)).Elem()
}

func (o ConditionActionTypeOutput) ToConditionActionTypeOutput() ConditionActionTypeOutput {
	return o
}

func (o ConditionActionTypeOutput) ToConditionActionTypeOutputWithContext(ctx context.Context) ConditionActionTypeOutput {
	return o
}

func (o ConditionActionTypeOutput) ToConditionActionTypePtrOutput() ConditionActionTypePtrOutput {
	return o.ToConditionActionTypePtrOutputWithContext(context.Background())
}

func (o ConditionActionTypeOutput) ToConditionActionTypePtrOutputWithContext(ctx context.Context) ConditionActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionActionType) *ConditionActionType {
		return &v
	}).(ConditionActionTypePtrOutput)
}

func (o ConditionActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionActionTypePtrOutput struct{ *pulumi.OutputState }

func (ConditionActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionActionType)(nil)).Elem()
}

func (o ConditionActionTypePtrOutput) ToConditionActionTypePtrOutput() ConditionActionTypePtrOutput {
	return o
}

func (o ConditionActionTypePtrOutput) ToConditionActionTypePtrOutputWithContext(ctx context.Context) ConditionActionTypePtrOutput {
	return o
}

func (o ConditionActionTypePtrOutput) Elem() ConditionActionTypeOutput {
	return o.ApplyT(func(v *ConditionActionType) ConditionActionType {
		if v != nil {
			return *v
		}
		var ret ConditionActionType
		return ret
	}).(ConditionActionTypeOutput)
}

func (o ConditionActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConditionActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionActionTypeInput is an input type that accepts values of the ConditionActionType enum
// A concrete instance of `ConditionActionTypeInput` can be one of the following:
//
//	ConditionActionTypeAllow
//	ConditionActionTypeDeny
type ConditionActionTypeInput interface {
	pulumi.Input

	ToConditionActionTypeOutput() ConditionActionTypeOutput
	ToConditionActionTypeOutputWithContext(context.Context) ConditionActionTypeOutput
}

var conditionActionTypePtrType = reflect.TypeOf((**ConditionActionType)(nil)).Elem()

type ConditionActionTypePtrInput interface {
	pulumi.Input

	ToConditionActionTypePtrOutput() ConditionActionTypePtrOutput
	ToConditionActionTypePtrOutputWithContext(context.Context) ConditionActionTypePtrOutput
}

type conditionActionTypePtr string

func ConditionActionTypePtr(v string) ConditionActionTypePtrInput {
	return (*conditionActionTypePtr)(&v)
}

func (*conditionActionTypePtr) ElementType() reflect.Type {
	return conditionActionTypePtrType
}

func (in *conditionActionTypePtr) ToConditionActionTypePtrOutput() ConditionActionTypePtrOutput {
	return pulumi.ToOutput(in).(ConditionActionTypePtrOutput)
}

func (in *conditionActionTypePtr) ToConditionActionTypePtrOutputWithContext(ctx context.Context) ConditionActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionActionTypePtrOutput)
}

func (in *conditionActionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ConditionActionType] {
	return pulumix.Output[*ConditionActionType]{
		OutputState: in.ToConditionActionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// networkDeviceRole is the device role: Example: CE | ToR.
type NetworkDeviceRoleTypes string

const (
	NetworkDeviceRoleTypesCE         = NetworkDeviceRoleTypes("CE")
	NetworkDeviceRoleTypesToR        = NetworkDeviceRoleTypes("ToR")
	NetworkDeviceRoleTypesNPB        = NetworkDeviceRoleTypes("NPB")
	NetworkDeviceRoleTypesTS         = NetworkDeviceRoleTypes("TS")
	NetworkDeviceRoleTypesManagement = NetworkDeviceRoleTypes("Management")
)

func (NetworkDeviceRoleTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDeviceRoleTypes)(nil)).Elem()
}

func (e NetworkDeviceRoleTypes) ToNetworkDeviceRoleTypesOutput() NetworkDeviceRoleTypesOutput {
	return pulumi.ToOutput(e).(NetworkDeviceRoleTypesOutput)
}

func (e NetworkDeviceRoleTypes) ToNetworkDeviceRoleTypesOutputWithContext(ctx context.Context) NetworkDeviceRoleTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkDeviceRoleTypesOutput)
}

func (e NetworkDeviceRoleTypes) ToNetworkDeviceRoleTypesPtrOutput() NetworkDeviceRoleTypesPtrOutput {
	return e.ToNetworkDeviceRoleTypesPtrOutputWithContext(context.Background())
}

func (e NetworkDeviceRoleTypes) ToNetworkDeviceRoleTypesPtrOutputWithContext(ctx context.Context) NetworkDeviceRoleTypesPtrOutput {
	return NetworkDeviceRoleTypes(e).ToNetworkDeviceRoleTypesOutputWithContext(ctx).ToNetworkDeviceRoleTypesPtrOutputWithContext(ctx)
}

func (e NetworkDeviceRoleTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkDeviceRoleTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkDeviceRoleTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkDeviceRoleTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkDeviceRoleTypesOutput struct{ *pulumi.OutputState }

func (NetworkDeviceRoleTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDeviceRoleTypes)(nil)).Elem()
}

func (o NetworkDeviceRoleTypesOutput) ToNetworkDeviceRoleTypesOutput() NetworkDeviceRoleTypesOutput {
	return o
}

func (o NetworkDeviceRoleTypesOutput) ToNetworkDeviceRoleTypesOutputWithContext(ctx context.Context) NetworkDeviceRoleTypesOutput {
	return o
}

func (o NetworkDeviceRoleTypesOutput) ToNetworkDeviceRoleTypesPtrOutput() NetworkDeviceRoleTypesPtrOutput {
	return o.ToNetworkDeviceRoleTypesPtrOutputWithContext(context.Background())
}

func (o NetworkDeviceRoleTypesOutput) ToNetworkDeviceRoleTypesPtrOutputWithContext(ctx context.Context) NetworkDeviceRoleTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkDeviceRoleTypes) *NetworkDeviceRoleTypes {
		return &v
	}).(NetworkDeviceRoleTypesPtrOutput)
}

func (o NetworkDeviceRoleTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkDeviceRoleTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkDeviceRoleTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkDeviceRoleTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkDeviceRoleTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkDeviceRoleTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkDeviceRoleTypesPtrOutput struct{ *pulumi.OutputState }

func (NetworkDeviceRoleTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDeviceRoleTypes)(nil)).Elem()
}

func (o NetworkDeviceRoleTypesPtrOutput) ToNetworkDeviceRoleTypesPtrOutput() NetworkDeviceRoleTypesPtrOutput {
	return o
}

func (o NetworkDeviceRoleTypesPtrOutput) ToNetworkDeviceRoleTypesPtrOutputWithContext(ctx context.Context) NetworkDeviceRoleTypesPtrOutput {
	return o
}

func (o NetworkDeviceRoleTypesPtrOutput) Elem() NetworkDeviceRoleTypesOutput {
	return o.ApplyT(func(v *NetworkDeviceRoleTypes) NetworkDeviceRoleTypes {
		if v != nil {
			return *v
		}
		var ret NetworkDeviceRoleTypes
		return ret
	}).(NetworkDeviceRoleTypesOutput)
}

func (o NetworkDeviceRoleTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkDeviceRoleTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkDeviceRoleTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkDeviceRoleTypesInput is an input type that accepts values of the NetworkDeviceRoleTypes enum
// A concrete instance of `NetworkDeviceRoleTypesInput` can be one of the following:
//
//	NetworkDeviceRoleTypesCE
//	NetworkDeviceRoleTypesToR
//	NetworkDeviceRoleTypesNPB
//	NetworkDeviceRoleTypesTS
//	NetworkDeviceRoleTypesManagement
type NetworkDeviceRoleTypesInput interface {
	pulumi.Input

	ToNetworkDeviceRoleTypesOutput() NetworkDeviceRoleTypesOutput
	ToNetworkDeviceRoleTypesOutputWithContext(context.Context) NetworkDeviceRoleTypesOutput
}

var networkDeviceRoleTypesPtrType = reflect.TypeOf((**NetworkDeviceRoleTypes)(nil)).Elem()

type NetworkDeviceRoleTypesPtrInput interface {
	pulumi.Input

	ToNetworkDeviceRoleTypesPtrOutput() NetworkDeviceRoleTypesPtrOutput
	ToNetworkDeviceRoleTypesPtrOutputWithContext(context.Context) NetworkDeviceRoleTypesPtrOutput
}

type networkDeviceRoleTypesPtr string

func NetworkDeviceRoleTypesPtr(v string) NetworkDeviceRoleTypesPtrInput {
	return (*networkDeviceRoleTypesPtr)(&v)
}

func (*networkDeviceRoleTypesPtr) ElementType() reflect.Type {
	return networkDeviceRoleTypesPtrType
}

func (in *networkDeviceRoleTypesPtr) ToNetworkDeviceRoleTypesPtrOutput() NetworkDeviceRoleTypesPtrOutput {
	return pulumi.ToOutput(in).(NetworkDeviceRoleTypesPtrOutput)
}

func (in *networkDeviceRoleTypesPtr) ToNetworkDeviceRoleTypesPtrOutputWithContext(ctx context.Context) NetworkDeviceRoleTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkDeviceRoleTypesPtrOutput)
}

func (in *networkDeviceRoleTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*NetworkDeviceRoleTypes] {
	return pulumix.Output[*NetworkDeviceRoleTypes]{
		OutputState: in.ToNetworkDeviceRoleTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of NNI used. Example: CE | NPB
type NniType string

const (
	NniTypeCE  = NniType("CE")
	NniTypeNPB = NniType("NPB")
)

func (NniType) ElementType() reflect.Type {
	return reflect.TypeOf((*NniType)(nil)).Elem()
}

func (e NniType) ToNniTypeOutput() NniTypeOutput {
	return pulumi.ToOutput(e).(NniTypeOutput)
}

func (e NniType) ToNniTypeOutputWithContext(ctx context.Context) NniTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NniTypeOutput)
}

func (e NniType) ToNniTypePtrOutput() NniTypePtrOutput {
	return e.ToNniTypePtrOutputWithContext(context.Background())
}

func (e NniType) ToNniTypePtrOutputWithContext(ctx context.Context) NniTypePtrOutput {
	return NniType(e).ToNniTypeOutputWithContext(ctx).ToNniTypePtrOutputWithContext(ctx)
}

func (e NniType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NniType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NniType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NniType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NniTypeOutput struct{ *pulumi.OutputState }

func (NniTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NniType)(nil)).Elem()
}

func (o NniTypeOutput) ToNniTypeOutput() NniTypeOutput {
	return o
}

func (o NniTypeOutput) ToNniTypeOutputWithContext(ctx context.Context) NniTypeOutput {
	return o
}

func (o NniTypeOutput) ToNniTypePtrOutput() NniTypePtrOutput {
	return o.ToNniTypePtrOutputWithContext(context.Background())
}

func (o NniTypeOutput) ToNniTypePtrOutputWithContext(ctx context.Context) NniTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NniType) *NniType {
		return &v
	}).(NniTypePtrOutput)
}

func (o NniTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NniTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NniType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NniTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NniTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NniType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NniTypePtrOutput struct{ *pulumi.OutputState }

func (NniTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NniType)(nil)).Elem()
}

func (o NniTypePtrOutput) ToNniTypePtrOutput() NniTypePtrOutput {
	return o
}

func (o NniTypePtrOutput) ToNniTypePtrOutputWithContext(ctx context.Context) NniTypePtrOutput {
	return o
}

func (o NniTypePtrOutput) Elem() NniTypeOutput {
	return o.ApplyT(func(v *NniType) NniType {
		if v != nil {
			return *v
		}
		var ret NniType
		return ret
	}).(NniTypeOutput)
}

func (o NniTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NniTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NniType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NniTypeInput is an input type that accepts values of the NniType enum
// A concrete instance of `NniTypeInput` can be one of the following:
//
//	NniTypeCE
//	NniTypeNPB
type NniTypeInput interface {
	pulumi.Input

	ToNniTypeOutput() NniTypeOutput
	ToNniTypeOutputWithContext(context.Context) NniTypeOutput
}

var nniTypePtrType = reflect.TypeOf((**NniType)(nil)).Elem()

type NniTypePtrInput interface {
	pulumi.Input

	ToNniTypePtrOutput() NniTypePtrOutput
	ToNniTypePtrOutputWithContext(context.Context) NniTypePtrOutput
}

type nniTypePtr string

func NniTypePtr(v string) NniTypePtrInput {
	return (*nniTypePtr)(&v)
}

func (*nniTypePtr) ElementType() reflect.Type {
	return nniTypePtrType
}

func (in *nniTypePtr) ToNniTypePtrOutput() NniTypePtrOutput {
	return pulumi.ToOutput(in).(NniTypePtrOutput)
}

func (in *nniTypePtr) ToNniTypePtrOutputWithContext(ctx context.Context) NniTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NniTypePtrOutput)
}

func (in *nniTypePtr) ToOutput(ctx context.Context) pulumix.Output[*NniType] {
	return pulumix.Output[*NniType]{
		OutputState: in.ToNniTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Peering option list.
type PeeringOption string

const (
	PeeringOptionOptionA = PeeringOption("OptionA")
	PeeringOptionOptionB = PeeringOption("OptionB")
)

func (PeeringOption) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringOption)(nil)).Elem()
}

func (e PeeringOption) ToPeeringOptionOutput() PeeringOptionOutput {
	return pulumi.ToOutput(e).(PeeringOptionOutput)
}

func (e PeeringOption) ToPeeringOptionOutputWithContext(ctx context.Context) PeeringOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PeeringOptionOutput)
}

func (e PeeringOption) ToPeeringOptionPtrOutput() PeeringOptionPtrOutput {
	return e.ToPeeringOptionPtrOutputWithContext(context.Background())
}

func (e PeeringOption) ToPeeringOptionPtrOutputWithContext(ctx context.Context) PeeringOptionPtrOutput {
	return PeeringOption(e).ToPeeringOptionOutputWithContext(ctx).ToPeeringOptionPtrOutputWithContext(ctx)
}

func (e PeeringOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PeeringOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PeeringOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PeeringOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PeeringOptionOutput struct{ *pulumi.OutputState }

func (PeeringOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringOption)(nil)).Elem()
}

func (o PeeringOptionOutput) ToPeeringOptionOutput() PeeringOptionOutput {
	return o
}

func (o PeeringOptionOutput) ToPeeringOptionOutputWithContext(ctx context.Context) PeeringOptionOutput {
	return o
}

func (o PeeringOptionOutput) ToPeeringOptionPtrOutput() PeeringOptionPtrOutput {
	return o.ToPeeringOptionPtrOutputWithContext(context.Background())
}

func (o PeeringOptionOutput) ToPeeringOptionPtrOutputWithContext(ctx context.Context) PeeringOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringOption) *PeeringOption {
		return &v
	}).(PeeringOptionPtrOutput)
}

func (o PeeringOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PeeringOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PeeringOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PeeringOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PeeringOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PeeringOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PeeringOptionPtrOutput struct{ *pulumi.OutputState }

func (PeeringOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringOption)(nil)).Elem()
}

func (o PeeringOptionPtrOutput) ToPeeringOptionPtrOutput() PeeringOptionPtrOutput {
	return o
}

func (o PeeringOptionPtrOutput) ToPeeringOptionPtrOutputWithContext(ctx context.Context) PeeringOptionPtrOutput {
	return o
}

func (o PeeringOptionPtrOutput) Elem() PeeringOptionOutput {
	return o.ApplyT(func(v *PeeringOption) PeeringOption {
		if v != nil {
			return *v
		}
		var ret PeeringOption
		return ret
	}).(PeeringOptionOutput)
}

func (o PeeringOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PeeringOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PeeringOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PeeringOptionInput is an input type that accepts values of the PeeringOption enum
// A concrete instance of `PeeringOptionInput` can be one of the following:
//
//	PeeringOptionOptionA
//	PeeringOptionOptionB
type PeeringOptionInput interface {
	pulumi.Input

	ToPeeringOptionOutput() PeeringOptionOutput
	ToPeeringOptionOutputWithContext(context.Context) PeeringOptionOutput
}

var peeringOptionPtrType = reflect.TypeOf((**PeeringOption)(nil)).Elem()

type PeeringOptionPtrInput interface {
	pulumi.Input

	ToPeeringOptionPtrOutput() PeeringOptionPtrOutput
	ToPeeringOptionPtrOutputWithContext(context.Context) PeeringOptionPtrOutput
}

type peeringOptionPtr string

func PeeringOptionPtr(v string) PeeringOptionPtrInput {
	return (*peeringOptionPtr)(&v)
}

func (*peeringOptionPtr) ElementType() reflect.Type {
	return peeringOptionPtrType
}

func (in *peeringOptionPtr) ToPeeringOptionPtrOutput() PeeringOptionPtrOutput {
	return pulumi.ToOutput(in).(PeeringOptionPtrOutput)
}

func (in *peeringOptionPtr) ToPeeringOptionPtrOutputWithContext(ctx context.Context) PeeringOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PeeringOptionPtrOutput)
}

func (in *peeringOptionPtr) ToOutput(ctx context.Context) pulumix.Output[*PeeringOption] {
	return pulumix.Output[*PeeringOption]{
		OutputState: in.ToPeeringOptionPtrOutputWithContext(ctx).OutputState,
	}
}

// Advertise Connected Subnets. Ex: "True" | "False".
type RedistributeConnectedSubnets string

const (
	RedistributeConnectedSubnetsTrue  = RedistributeConnectedSubnets("True")
	RedistributeConnectedSubnetsFalse = RedistributeConnectedSubnets("False")
)

func (RedistributeConnectedSubnets) ElementType() reflect.Type {
	return reflect.TypeOf((*RedistributeConnectedSubnets)(nil)).Elem()
}

func (e RedistributeConnectedSubnets) ToRedistributeConnectedSubnetsOutput() RedistributeConnectedSubnetsOutput {
	return pulumi.ToOutput(e).(RedistributeConnectedSubnetsOutput)
}

func (e RedistributeConnectedSubnets) ToRedistributeConnectedSubnetsOutputWithContext(ctx context.Context) RedistributeConnectedSubnetsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RedistributeConnectedSubnetsOutput)
}

func (e RedistributeConnectedSubnets) ToRedistributeConnectedSubnetsPtrOutput() RedistributeConnectedSubnetsPtrOutput {
	return e.ToRedistributeConnectedSubnetsPtrOutputWithContext(context.Background())
}

func (e RedistributeConnectedSubnets) ToRedistributeConnectedSubnetsPtrOutputWithContext(ctx context.Context) RedistributeConnectedSubnetsPtrOutput {
	return RedistributeConnectedSubnets(e).ToRedistributeConnectedSubnetsOutputWithContext(ctx).ToRedistributeConnectedSubnetsPtrOutputWithContext(ctx)
}

func (e RedistributeConnectedSubnets) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedistributeConnectedSubnets) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedistributeConnectedSubnets) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RedistributeConnectedSubnets) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RedistributeConnectedSubnetsOutput struct{ *pulumi.OutputState }

func (RedistributeConnectedSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedistributeConnectedSubnets)(nil)).Elem()
}

func (o RedistributeConnectedSubnetsOutput) ToRedistributeConnectedSubnetsOutput() RedistributeConnectedSubnetsOutput {
	return o
}

func (o RedistributeConnectedSubnetsOutput) ToRedistributeConnectedSubnetsOutputWithContext(ctx context.Context) RedistributeConnectedSubnetsOutput {
	return o
}

func (o RedistributeConnectedSubnetsOutput) ToRedistributeConnectedSubnetsPtrOutput() RedistributeConnectedSubnetsPtrOutput {
	return o.ToRedistributeConnectedSubnetsPtrOutputWithContext(context.Background())
}

func (o RedistributeConnectedSubnetsOutput) ToRedistributeConnectedSubnetsPtrOutputWithContext(ctx context.Context) RedistributeConnectedSubnetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedistributeConnectedSubnets) *RedistributeConnectedSubnets {
		return &v
	}).(RedistributeConnectedSubnetsPtrOutput)
}

func (o RedistributeConnectedSubnetsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedistributeConnectedSubnetsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedistributeConnectedSubnets) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedistributeConnectedSubnetsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedistributeConnectedSubnetsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedistributeConnectedSubnets) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedistributeConnectedSubnetsPtrOutput struct{ *pulumi.OutputState }

func (RedistributeConnectedSubnetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedistributeConnectedSubnets)(nil)).Elem()
}

func (o RedistributeConnectedSubnetsPtrOutput) ToRedistributeConnectedSubnetsPtrOutput() RedistributeConnectedSubnetsPtrOutput {
	return o
}

func (o RedistributeConnectedSubnetsPtrOutput) ToRedistributeConnectedSubnetsPtrOutputWithContext(ctx context.Context) RedistributeConnectedSubnetsPtrOutput {
	return o
}

func (o RedistributeConnectedSubnetsPtrOutput) Elem() RedistributeConnectedSubnetsOutput {
	return o.ApplyT(func(v *RedistributeConnectedSubnets) RedistributeConnectedSubnets {
		if v != nil {
			return *v
		}
		var ret RedistributeConnectedSubnets
		return ret
	}).(RedistributeConnectedSubnetsOutput)
}

func (o RedistributeConnectedSubnetsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedistributeConnectedSubnetsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedistributeConnectedSubnets) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RedistributeConnectedSubnetsInput is an input type that accepts values of the RedistributeConnectedSubnets enum
// A concrete instance of `RedistributeConnectedSubnetsInput` can be one of the following:
//
//	RedistributeConnectedSubnetsTrue
//	RedistributeConnectedSubnetsFalse
type RedistributeConnectedSubnetsInput interface {
	pulumi.Input

	ToRedistributeConnectedSubnetsOutput() RedistributeConnectedSubnetsOutput
	ToRedistributeConnectedSubnetsOutputWithContext(context.Context) RedistributeConnectedSubnetsOutput
}

var redistributeConnectedSubnetsPtrType = reflect.TypeOf((**RedistributeConnectedSubnets)(nil)).Elem()

type RedistributeConnectedSubnetsPtrInput interface {
	pulumi.Input

	ToRedistributeConnectedSubnetsPtrOutput() RedistributeConnectedSubnetsPtrOutput
	ToRedistributeConnectedSubnetsPtrOutputWithContext(context.Context) RedistributeConnectedSubnetsPtrOutput
}

type redistributeConnectedSubnetsPtr string

func RedistributeConnectedSubnetsPtr(v string) RedistributeConnectedSubnetsPtrInput {
	return (*redistributeConnectedSubnetsPtr)(&v)
}

func (*redistributeConnectedSubnetsPtr) ElementType() reflect.Type {
	return redistributeConnectedSubnetsPtrType
}

func (in *redistributeConnectedSubnetsPtr) ToRedistributeConnectedSubnetsPtrOutput() RedistributeConnectedSubnetsPtrOutput {
	return pulumi.ToOutput(in).(RedistributeConnectedSubnetsPtrOutput)
}

func (in *redistributeConnectedSubnetsPtr) ToRedistributeConnectedSubnetsPtrOutputWithContext(ctx context.Context) RedistributeConnectedSubnetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RedistributeConnectedSubnetsPtrOutput)
}

func (in *redistributeConnectedSubnetsPtr) ToOutput(ctx context.Context) pulumix.Output[*RedistributeConnectedSubnets] {
	return pulumix.Output[*RedistributeConnectedSubnets]{
		OutputState: in.ToRedistributeConnectedSubnetsPtrOutputWithContext(ctx).OutputState,
	}
}

// Advertise Static Routes. Ex: "True" | "False".
type RedistributeStaticRoutes string

const (
	RedistributeStaticRoutesTrue  = RedistributeStaticRoutes("True")
	RedistributeStaticRoutesFalse = RedistributeStaticRoutes("False")
)

func (RedistributeStaticRoutes) ElementType() reflect.Type {
	return reflect.TypeOf((*RedistributeStaticRoutes)(nil)).Elem()
}

func (e RedistributeStaticRoutes) ToRedistributeStaticRoutesOutput() RedistributeStaticRoutesOutput {
	return pulumi.ToOutput(e).(RedistributeStaticRoutesOutput)
}

func (e RedistributeStaticRoutes) ToRedistributeStaticRoutesOutputWithContext(ctx context.Context) RedistributeStaticRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RedistributeStaticRoutesOutput)
}

func (e RedistributeStaticRoutes) ToRedistributeStaticRoutesPtrOutput() RedistributeStaticRoutesPtrOutput {
	return e.ToRedistributeStaticRoutesPtrOutputWithContext(context.Background())
}

func (e RedistributeStaticRoutes) ToRedistributeStaticRoutesPtrOutputWithContext(ctx context.Context) RedistributeStaticRoutesPtrOutput {
	return RedistributeStaticRoutes(e).ToRedistributeStaticRoutesOutputWithContext(ctx).ToRedistributeStaticRoutesPtrOutputWithContext(ctx)
}

func (e RedistributeStaticRoutes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedistributeStaticRoutes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedistributeStaticRoutes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RedistributeStaticRoutes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RedistributeStaticRoutesOutput struct{ *pulumi.OutputState }

func (RedistributeStaticRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedistributeStaticRoutes)(nil)).Elem()
}

func (o RedistributeStaticRoutesOutput) ToRedistributeStaticRoutesOutput() RedistributeStaticRoutesOutput {
	return o
}

func (o RedistributeStaticRoutesOutput) ToRedistributeStaticRoutesOutputWithContext(ctx context.Context) RedistributeStaticRoutesOutput {
	return o
}

func (o RedistributeStaticRoutesOutput) ToRedistributeStaticRoutesPtrOutput() RedistributeStaticRoutesPtrOutput {
	return o.ToRedistributeStaticRoutesPtrOutputWithContext(context.Background())
}

func (o RedistributeStaticRoutesOutput) ToRedistributeStaticRoutesPtrOutputWithContext(ctx context.Context) RedistributeStaticRoutesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedistributeStaticRoutes) *RedistributeStaticRoutes {
		return &v
	}).(RedistributeStaticRoutesPtrOutput)
}

func (o RedistributeStaticRoutesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedistributeStaticRoutesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedistributeStaticRoutes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedistributeStaticRoutesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedistributeStaticRoutesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedistributeStaticRoutes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedistributeStaticRoutesPtrOutput struct{ *pulumi.OutputState }

func (RedistributeStaticRoutesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedistributeStaticRoutes)(nil)).Elem()
}

func (o RedistributeStaticRoutesPtrOutput) ToRedistributeStaticRoutesPtrOutput() RedistributeStaticRoutesPtrOutput {
	return o
}

func (o RedistributeStaticRoutesPtrOutput) ToRedistributeStaticRoutesPtrOutputWithContext(ctx context.Context) RedistributeStaticRoutesPtrOutput {
	return o
}

func (o RedistributeStaticRoutesPtrOutput) Elem() RedistributeStaticRoutesOutput {
	return o.ApplyT(func(v *RedistributeStaticRoutes) RedistributeStaticRoutes {
		if v != nil {
			return *v
		}
		var ret RedistributeStaticRoutes
		return ret
	}).(RedistributeStaticRoutesOutput)
}

func (o RedistributeStaticRoutesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedistributeStaticRoutesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedistributeStaticRoutes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RedistributeStaticRoutesInput is an input type that accepts values of the RedistributeStaticRoutes enum
// A concrete instance of `RedistributeStaticRoutesInput` can be one of the following:
//
//	RedistributeStaticRoutesTrue
//	RedistributeStaticRoutesFalse
type RedistributeStaticRoutesInput interface {
	pulumi.Input

	ToRedistributeStaticRoutesOutput() RedistributeStaticRoutesOutput
	ToRedistributeStaticRoutesOutputWithContext(context.Context) RedistributeStaticRoutesOutput
}

var redistributeStaticRoutesPtrType = reflect.TypeOf((**RedistributeStaticRoutes)(nil)).Elem()

type RedistributeStaticRoutesPtrInput interface {
	pulumi.Input

	ToRedistributeStaticRoutesPtrOutput() RedistributeStaticRoutesPtrOutput
	ToRedistributeStaticRoutesPtrOutputWithContext(context.Context) RedistributeStaticRoutesPtrOutput
}

type redistributeStaticRoutesPtr string

func RedistributeStaticRoutesPtr(v string) RedistributeStaticRoutesPtrInput {
	return (*redistributeStaticRoutesPtr)(&v)
}

func (*redistributeStaticRoutesPtr) ElementType() reflect.Type {
	return redistributeStaticRoutesPtrType
}

func (in *redistributeStaticRoutesPtr) ToRedistributeStaticRoutesPtrOutput() RedistributeStaticRoutesPtrOutput {
	return pulumi.ToOutput(in).(RedistributeStaticRoutesPtrOutput)
}

func (in *redistributeStaticRoutesPtr) ToRedistributeStaticRoutesPtrOutputWithContext(ctx context.Context) RedistributeStaticRoutesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RedistributeStaticRoutesPtrOutput)
}

func (in *redistributeStaticRoutesPtr) ToOutput(ctx context.Context) pulumix.Output[*RedistributeStaticRoutes] {
	return pulumix.Output[*RedistributeStaticRoutes]{
		OutputState: in.ToRedistributeStaticRoutesPtrOutputWithContext(ctx).OutputState,
	}
}

// `Internet` - Advertise routes to internet community.
//
//	`LocalAS` - Advertise routes to only localAS peers.
//	`NoAdvertise` - Don't advertise routes to any peer.
//
// `NoExport` - Don't export to next AS.
// `GShut` - Graceful Shutdown (GSHUT) withdraw routes before terminating BGP connection.
type WellKnownCommunities string

const (
	WellKnownCommunitiesInternet    = WellKnownCommunities("Internet")
	WellKnownCommunitiesLocalAS     = WellKnownCommunities("LocalAS")
	WellKnownCommunitiesNoAdvertise = WellKnownCommunities("NoAdvertise")
	WellKnownCommunitiesNoExport    = WellKnownCommunities("NoExport")
	WellKnownCommunitiesGShut       = WellKnownCommunities("GShut")
)

func (WellKnownCommunities) ElementType() reflect.Type {
	return reflect.TypeOf((*WellKnownCommunities)(nil)).Elem()
}

func (e WellKnownCommunities) ToWellKnownCommunitiesOutput() WellKnownCommunitiesOutput {
	return pulumi.ToOutput(e).(WellKnownCommunitiesOutput)
}

func (e WellKnownCommunities) ToWellKnownCommunitiesOutputWithContext(ctx context.Context) WellKnownCommunitiesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WellKnownCommunitiesOutput)
}

func (e WellKnownCommunities) ToWellKnownCommunitiesPtrOutput() WellKnownCommunitiesPtrOutput {
	return e.ToWellKnownCommunitiesPtrOutputWithContext(context.Background())
}

func (e WellKnownCommunities) ToWellKnownCommunitiesPtrOutputWithContext(ctx context.Context) WellKnownCommunitiesPtrOutput {
	return WellKnownCommunities(e).ToWellKnownCommunitiesOutputWithContext(ctx).ToWellKnownCommunitiesPtrOutputWithContext(ctx)
}

func (e WellKnownCommunities) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WellKnownCommunities) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WellKnownCommunities) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WellKnownCommunities) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WellKnownCommunitiesOutput struct{ *pulumi.OutputState }

func (WellKnownCommunitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WellKnownCommunities)(nil)).Elem()
}

func (o WellKnownCommunitiesOutput) ToWellKnownCommunitiesOutput() WellKnownCommunitiesOutput {
	return o
}

func (o WellKnownCommunitiesOutput) ToWellKnownCommunitiesOutputWithContext(ctx context.Context) WellKnownCommunitiesOutput {
	return o
}

func (o WellKnownCommunitiesOutput) ToWellKnownCommunitiesPtrOutput() WellKnownCommunitiesPtrOutput {
	return o.ToWellKnownCommunitiesPtrOutputWithContext(context.Background())
}

func (o WellKnownCommunitiesOutput) ToWellKnownCommunitiesPtrOutputWithContext(ctx context.Context) WellKnownCommunitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WellKnownCommunities) *WellKnownCommunities {
		return &v
	}).(WellKnownCommunitiesPtrOutput)
}

func (o WellKnownCommunitiesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WellKnownCommunitiesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WellKnownCommunities) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WellKnownCommunitiesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WellKnownCommunitiesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WellKnownCommunities) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WellKnownCommunitiesPtrOutput struct{ *pulumi.OutputState }

func (WellKnownCommunitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WellKnownCommunities)(nil)).Elem()
}

func (o WellKnownCommunitiesPtrOutput) ToWellKnownCommunitiesPtrOutput() WellKnownCommunitiesPtrOutput {
	return o
}

func (o WellKnownCommunitiesPtrOutput) ToWellKnownCommunitiesPtrOutputWithContext(ctx context.Context) WellKnownCommunitiesPtrOutput {
	return o
}

func (o WellKnownCommunitiesPtrOutput) Elem() WellKnownCommunitiesOutput {
	return o.ApplyT(func(v *WellKnownCommunities) WellKnownCommunities {
		if v != nil {
			return *v
		}
		var ret WellKnownCommunities
		return ret
	}).(WellKnownCommunitiesOutput)
}

func (o WellKnownCommunitiesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WellKnownCommunitiesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WellKnownCommunities) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WellKnownCommunitiesInput is an input type that accepts values of the WellKnownCommunities enum
// A concrete instance of `WellKnownCommunitiesInput` can be one of the following:
//
//	WellKnownCommunitiesInternet
//	WellKnownCommunitiesLocalAS
//	WellKnownCommunitiesNoAdvertise
//	WellKnownCommunitiesNoExport
//	WellKnownCommunitiesGShut
type WellKnownCommunitiesInput interface {
	pulumi.Input

	ToWellKnownCommunitiesOutput() WellKnownCommunitiesOutput
	ToWellKnownCommunitiesOutputWithContext(context.Context) WellKnownCommunitiesOutput
}

var wellKnownCommunitiesPtrType = reflect.TypeOf((**WellKnownCommunities)(nil)).Elem()

type WellKnownCommunitiesPtrInput interface {
	pulumi.Input

	ToWellKnownCommunitiesPtrOutput() WellKnownCommunitiesPtrOutput
	ToWellKnownCommunitiesPtrOutputWithContext(context.Context) WellKnownCommunitiesPtrOutput
}

type wellKnownCommunitiesPtr string

func WellKnownCommunitiesPtr(v string) WellKnownCommunitiesPtrInput {
	return (*wellKnownCommunitiesPtr)(&v)
}

func (*wellKnownCommunitiesPtr) ElementType() reflect.Type {
	return wellKnownCommunitiesPtrType
}

func (in *wellKnownCommunitiesPtr) ToWellKnownCommunitiesPtrOutput() WellKnownCommunitiesPtrOutput {
	return pulumi.ToOutput(in).(WellKnownCommunitiesPtrOutput)
}

func (in *wellKnownCommunitiesPtr) ToWellKnownCommunitiesPtrOutputWithContext(ctx context.Context) WellKnownCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WellKnownCommunitiesPtrOutput)
}

func (in *wellKnownCommunitiesPtr) ToOutput(ctx context.Context) pulumix.Output[*WellKnownCommunities] {
	return pulumix.Output[*WellKnownCommunities]{
		OutputState: in.ToWellKnownCommunitiesPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AddressFamilyOutput{})
	pulumi.RegisterOutputType(AddressFamilyPtrOutput{})
	pulumi.RegisterOutputType(AllowASOverrideOutput{})
	pulumi.RegisterOutputType(AllowASOverridePtrOutput{})
	pulumi.RegisterOutputType(BooleanEnumPropertyOutput{})
	pulumi.RegisterOutputType(BooleanEnumPropertyPtrOutput{})
	pulumi.RegisterOutputType(CommunityActionTypesOutput{})
	pulumi.RegisterOutputType(CommunityActionTypesPtrOutput{})
	pulumi.RegisterOutputType(ConditionOutput{})
	pulumi.RegisterOutputType(ConditionPtrOutput{})
	pulumi.RegisterOutputType(ConditionActionTypeOutput{})
	pulumi.RegisterOutputType(ConditionActionTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkDeviceRoleTypesOutput{})
	pulumi.RegisterOutputType(NetworkDeviceRoleTypesPtrOutput{})
	pulumi.RegisterOutputType(NniTypeOutput{})
	pulumi.RegisterOutputType(NniTypePtrOutput{})
	pulumi.RegisterOutputType(PeeringOptionOutput{})
	pulumi.RegisterOutputType(PeeringOptionPtrOutput{})
	pulumi.RegisterOutputType(RedistributeConnectedSubnetsOutput{})
	pulumi.RegisterOutputType(RedistributeConnectedSubnetsPtrOutput{})
	pulumi.RegisterOutputType(RedistributeStaticRoutesOutput{})
	pulumi.RegisterOutputType(RedistributeStaticRoutesPtrOutput{})
	pulumi.RegisterOutputType(WellKnownCommunitiesOutput{})
	pulumi.RegisterOutputType(WellKnownCommunitiesPtrOutput{})
}
