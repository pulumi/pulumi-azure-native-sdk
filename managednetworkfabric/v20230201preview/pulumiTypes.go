// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// Access Control List condition model.
type AccessControlListConditionProperties struct {
	// action. Example: allow | deny.
	Action string `pulumi:"action"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// destinationAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
	DestinationAddress string `pulumi:"destinationAddress"`
	// destinationPort. Example: any | 1253
	DestinationPort string `pulumi:"destinationPort"`
	// TCP/IP protocol as defined in the list of IP protocol numbers. Example: 255 (any) | 0 | 1.
	Protocol int `pulumi:"protocol"`
	// sequenceNumber of the Access Control List.
	SequenceNumber int `pulumi:"sequenceNumber"`
	// sourceAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
	SourceAddress string `pulumi:"sourceAddress"`
	// sourcePort. Example: any | 1253
	SourcePort string `pulumi:"sourcePort"`
}

// AccessControlListConditionPropertiesInput is an input type that accepts AccessControlListConditionPropertiesArgs and AccessControlListConditionPropertiesOutput values.
// You can construct a concrete instance of `AccessControlListConditionPropertiesInput` via:
//
//	AccessControlListConditionPropertiesArgs{...}
type AccessControlListConditionPropertiesInput interface {
	pulumi.Input

	ToAccessControlListConditionPropertiesOutput() AccessControlListConditionPropertiesOutput
	ToAccessControlListConditionPropertiesOutputWithContext(context.Context) AccessControlListConditionPropertiesOutput
}

// Access Control List condition model.
type AccessControlListConditionPropertiesArgs struct {
	// action. Example: allow | deny.
	Action pulumi.StringInput `pulumi:"action"`
	// Switch configuration description.
	Annotation pulumi.StringPtrInput `pulumi:"annotation"`
	// destinationAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
	DestinationAddress pulumi.StringInput `pulumi:"destinationAddress"`
	// destinationPort. Example: any | 1253
	DestinationPort pulumi.StringInput `pulumi:"destinationPort"`
	// TCP/IP protocol as defined in the list of IP protocol numbers. Example: 255 (any) | 0 | 1.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// sequenceNumber of the Access Control List.
	SequenceNumber pulumi.IntInput `pulumi:"sequenceNumber"`
	// sourceAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
	SourceAddress pulumi.StringInput `pulumi:"sourceAddress"`
	// sourcePort. Example: any | 1253
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (AccessControlListConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlListConditionProperties)(nil)).Elem()
}

func (i AccessControlListConditionPropertiesArgs) ToAccessControlListConditionPropertiesOutput() AccessControlListConditionPropertiesOutput {
	return i.ToAccessControlListConditionPropertiesOutputWithContext(context.Background())
}

func (i AccessControlListConditionPropertiesArgs) ToAccessControlListConditionPropertiesOutputWithContext(ctx context.Context) AccessControlListConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlListConditionPropertiesOutput)
}

func (i AccessControlListConditionPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[AccessControlListConditionProperties] {
	return pulumix.Output[AccessControlListConditionProperties]{
		OutputState: i.ToAccessControlListConditionPropertiesOutputWithContext(ctx).OutputState,
	}
}

// AccessControlListConditionPropertiesArrayInput is an input type that accepts AccessControlListConditionPropertiesArray and AccessControlListConditionPropertiesArrayOutput values.
// You can construct a concrete instance of `AccessControlListConditionPropertiesArrayInput` via:
//
//	AccessControlListConditionPropertiesArray{ AccessControlListConditionPropertiesArgs{...} }
type AccessControlListConditionPropertiesArrayInput interface {
	pulumi.Input

	ToAccessControlListConditionPropertiesArrayOutput() AccessControlListConditionPropertiesArrayOutput
	ToAccessControlListConditionPropertiesArrayOutputWithContext(context.Context) AccessControlListConditionPropertiesArrayOutput
}

type AccessControlListConditionPropertiesArray []AccessControlListConditionPropertiesInput

func (AccessControlListConditionPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlListConditionProperties)(nil)).Elem()
}

func (i AccessControlListConditionPropertiesArray) ToAccessControlListConditionPropertiesArrayOutput() AccessControlListConditionPropertiesArrayOutput {
	return i.ToAccessControlListConditionPropertiesArrayOutputWithContext(context.Background())
}

func (i AccessControlListConditionPropertiesArray) ToAccessControlListConditionPropertiesArrayOutputWithContext(ctx context.Context) AccessControlListConditionPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlListConditionPropertiesArrayOutput)
}

func (i AccessControlListConditionPropertiesArray) ToOutput(ctx context.Context) pulumix.Output[[]AccessControlListConditionProperties] {
	return pulumix.Output[[]AccessControlListConditionProperties]{
		OutputState: i.ToAccessControlListConditionPropertiesArrayOutputWithContext(ctx).OutputState,
	}
}

// Access Control List condition model.
type AccessControlListConditionPropertiesOutput struct{ *pulumi.OutputState }

func (AccessControlListConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlListConditionProperties)(nil)).Elem()
}

func (o AccessControlListConditionPropertiesOutput) ToAccessControlListConditionPropertiesOutput() AccessControlListConditionPropertiesOutput {
	return o
}

func (o AccessControlListConditionPropertiesOutput) ToAccessControlListConditionPropertiesOutputWithContext(ctx context.Context) AccessControlListConditionPropertiesOutput {
	return o
}

func (o AccessControlListConditionPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[AccessControlListConditionProperties] {
	return pulumix.Output[AccessControlListConditionProperties]{
		OutputState: o.OutputState,
	}
}

// action. Example: allow | deny.
func (o AccessControlListConditionPropertiesOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) string { return v.Action }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o AccessControlListConditionPropertiesOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// destinationAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
func (o AccessControlListConditionPropertiesOutput) DestinationAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) string { return v.DestinationAddress }).(pulumi.StringOutput)
}

// destinationPort. Example: any | 1253
func (o AccessControlListConditionPropertiesOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) string { return v.DestinationPort }).(pulumi.StringOutput)
}

// TCP/IP protocol as defined in the list of IP protocol numbers. Example: 255 (any) | 0 | 1.
func (o AccessControlListConditionPropertiesOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) int { return v.Protocol }).(pulumi.IntOutput)
}

// sequenceNumber of the Access Control List.
func (o AccessControlListConditionPropertiesOutput) SequenceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) int { return v.SequenceNumber }).(pulumi.IntOutput)
}

// sourceAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
func (o AccessControlListConditionPropertiesOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) string { return v.SourceAddress }).(pulumi.StringOutput)
}

// sourcePort. Example: any | 1253
func (o AccessControlListConditionPropertiesOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionProperties) string { return v.SourcePort }).(pulumi.StringOutput)
}

type AccessControlListConditionPropertiesArrayOutput struct{ *pulumi.OutputState }

func (AccessControlListConditionPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlListConditionProperties)(nil)).Elem()
}

func (o AccessControlListConditionPropertiesArrayOutput) ToAccessControlListConditionPropertiesArrayOutput() AccessControlListConditionPropertiesArrayOutput {
	return o
}

func (o AccessControlListConditionPropertiesArrayOutput) ToAccessControlListConditionPropertiesArrayOutputWithContext(ctx context.Context) AccessControlListConditionPropertiesArrayOutput {
	return o
}

func (o AccessControlListConditionPropertiesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AccessControlListConditionProperties] {
	return pulumix.Output[[]AccessControlListConditionProperties]{
		OutputState: o.OutputState,
	}
}

func (o AccessControlListConditionPropertiesArrayOutput) Index(i pulumi.IntInput) AccessControlListConditionPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlListConditionProperties {
		return vs[0].([]AccessControlListConditionProperties)[vs[1].(int)]
	}).(AccessControlListConditionPropertiesOutput)
}

// Access Control List condition model.
type AccessControlListConditionPropertiesResponse struct {
	// action. Example: allow | deny.
	Action string `pulumi:"action"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// destinationAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
	DestinationAddress string `pulumi:"destinationAddress"`
	// destinationPort. Example: any | 1253
	DestinationPort string `pulumi:"destinationPort"`
	// TCP/IP protocol as defined in the list of IP protocol numbers. Example: 255 (any) | 0 | 1.
	Protocol int `pulumi:"protocol"`
	// sequenceNumber of the Access Control List.
	SequenceNumber int `pulumi:"sequenceNumber"`
	// sourceAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
	SourceAddress string `pulumi:"sourceAddress"`
	// sourcePort. Example: any | 1253
	SourcePort string `pulumi:"sourcePort"`
}

// Access Control List condition model.
type AccessControlListConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccessControlListConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlListConditionPropertiesResponse)(nil)).Elem()
}

func (o AccessControlListConditionPropertiesResponseOutput) ToAccessControlListConditionPropertiesResponseOutput() AccessControlListConditionPropertiesResponseOutput {
	return o
}

func (o AccessControlListConditionPropertiesResponseOutput) ToAccessControlListConditionPropertiesResponseOutputWithContext(ctx context.Context) AccessControlListConditionPropertiesResponseOutput {
	return o
}

func (o AccessControlListConditionPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AccessControlListConditionPropertiesResponse] {
	return pulumix.Output[AccessControlListConditionPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// action. Example: allow | deny.
func (o AccessControlListConditionPropertiesResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o AccessControlListConditionPropertiesResponseOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// destinationAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
func (o AccessControlListConditionPropertiesResponseOutput) DestinationAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) string { return v.DestinationAddress }).(pulumi.StringOutput)
}

// destinationPort. Example: any | 1253
func (o AccessControlListConditionPropertiesResponseOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) string { return v.DestinationPort }).(pulumi.StringOutput)
}

// TCP/IP protocol as defined in the list of IP protocol numbers. Example: 255 (any) | 0 | 1.
func (o AccessControlListConditionPropertiesResponseOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) int { return v.Protocol }).(pulumi.IntOutput)
}

// sequenceNumber of the Access Control List.
func (o AccessControlListConditionPropertiesResponseOutput) SequenceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) int { return v.SequenceNumber }).(pulumi.IntOutput)
}

// sourceAddress. Example: any | 1.1.1.0/24 | 1.1.10.10
func (o AccessControlListConditionPropertiesResponseOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) string { return v.SourceAddress }).(pulumi.StringOutput)
}

// sourcePort. Example: any | 1253
func (o AccessControlListConditionPropertiesResponseOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlListConditionPropertiesResponse) string { return v.SourcePort }).(pulumi.StringOutput)
}

type AccessControlListConditionPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (AccessControlListConditionPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlListConditionPropertiesResponse)(nil)).Elem()
}

func (o AccessControlListConditionPropertiesResponseArrayOutput) ToAccessControlListConditionPropertiesResponseArrayOutput() AccessControlListConditionPropertiesResponseArrayOutput {
	return o
}

func (o AccessControlListConditionPropertiesResponseArrayOutput) ToAccessControlListConditionPropertiesResponseArrayOutputWithContext(ctx context.Context) AccessControlListConditionPropertiesResponseArrayOutput {
	return o
}

func (o AccessControlListConditionPropertiesResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AccessControlListConditionPropertiesResponse] {
	return pulumix.Output[[]AccessControlListConditionPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o AccessControlListConditionPropertiesResponseArrayOutput) Index(i pulumi.IntInput) AccessControlListConditionPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlListConditionPropertiesResponse {
		return vs[0].([]AccessControlListConditionPropertiesResponse)[vs[1].(int)]
	}).(AccessControlListConditionPropertiesResponseOutput)
}

// IP Community Properties.
type ActionIpCommunityProperties struct {
	// IP Community ID list properties.
	Add *IpCommunityIdList `pulumi:"add"`
	// IP Community ID list properties.
	Delete *IpCommunityIdList `pulumi:"delete"`
	// IP Community ID list properties.
	Set *IpCommunityIdList `pulumi:"set"`
}

// ActionIpCommunityPropertiesInput is an input type that accepts ActionIpCommunityPropertiesArgs and ActionIpCommunityPropertiesOutput values.
// You can construct a concrete instance of `ActionIpCommunityPropertiesInput` via:
//
//	ActionIpCommunityPropertiesArgs{...}
type ActionIpCommunityPropertiesInput interface {
	pulumi.Input

	ToActionIpCommunityPropertiesOutput() ActionIpCommunityPropertiesOutput
	ToActionIpCommunityPropertiesOutputWithContext(context.Context) ActionIpCommunityPropertiesOutput
}

// IP Community Properties.
type ActionIpCommunityPropertiesArgs struct {
	// IP Community ID list properties.
	Add IpCommunityIdListPtrInput `pulumi:"add"`
	// IP Community ID list properties.
	Delete IpCommunityIdListPtrInput `pulumi:"delete"`
	// IP Community ID list properties.
	Set IpCommunityIdListPtrInput `pulumi:"set"`
}

func (ActionIpCommunityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionIpCommunityProperties)(nil)).Elem()
}

func (i ActionIpCommunityPropertiesArgs) ToActionIpCommunityPropertiesOutput() ActionIpCommunityPropertiesOutput {
	return i.ToActionIpCommunityPropertiesOutputWithContext(context.Background())
}

func (i ActionIpCommunityPropertiesArgs) ToActionIpCommunityPropertiesOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionIpCommunityPropertiesOutput)
}

func (i ActionIpCommunityPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ActionIpCommunityProperties] {
	return pulumix.Output[ActionIpCommunityProperties]{
		OutputState: i.ToActionIpCommunityPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ActionIpCommunityPropertiesArgs) ToActionIpCommunityPropertiesPtrOutput() ActionIpCommunityPropertiesPtrOutput {
	return i.ToActionIpCommunityPropertiesPtrOutputWithContext(context.Background())
}

func (i ActionIpCommunityPropertiesArgs) ToActionIpCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionIpCommunityPropertiesOutput).ToActionIpCommunityPropertiesPtrOutputWithContext(ctx)
}

// ActionIpCommunityPropertiesPtrInput is an input type that accepts ActionIpCommunityPropertiesArgs, ActionIpCommunityPropertiesPtr and ActionIpCommunityPropertiesPtrOutput values.
// You can construct a concrete instance of `ActionIpCommunityPropertiesPtrInput` via:
//
//	        ActionIpCommunityPropertiesArgs{...}
//
//	or:
//
//	        nil
type ActionIpCommunityPropertiesPtrInput interface {
	pulumi.Input

	ToActionIpCommunityPropertiesPtrOutput() ActionIpCommunityPropertiesPtrOutput
	ToActionIpCommunityPropertiesPtrOutputWithContext(context.Context) ActionIpCommunityPropertiesPtrOutput
}

type actionIpCommunityPropertiesPtrType ActionIpCommunityPropertiesArgs

func ActionIpCommunityPropertiesPtr(v *ActionIpCommunityPropertiesArgs) ActionIpCommunityPropertiesPtrInput {
	return (*actionIpCommunityPropertiesPtrType)(v)
}

func (*actionIpCommunityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionIpCommunityProperties)(nil)).Elem()
}

func (i *actionIpCommunityPropertiesPtrType) ToActionIpCommunityPropertiesPtrOutput() ActionIpCommunityPropertiesPtrOutput {
	return i.ToActionIpCommunityPropertiesPtrOutputWithContext(context.Background())
}

func (i *actionIpCommunityPropertiesPtrType) ToActionIpCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionIpCommunityPropertiesPtrOutput)
}

func (i *actionIpCommunityPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionIpCommunityProperties] {
	return pulumix.Output[*ActionIpCommunityProperties]{
		OutputState: i.ToActionIpCommunityPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// IP Community Properties.
type ActionIpCommunityPropertiesOutput struct{ *pulumi.OutputState }

func (ActionIpCommunityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionIpCommunityProperties)(nil)).Elem()
}

func (o ActionIpCommunityPropertiesOutput) ToActionIpCommunityPropertiesOutput() ActionIpCommunityPropertiesOutput {
	return o
}

func (o ActionIpCommunityPropertiesOutput) ToActionIpCommunityPropertiesOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesOutput {
	return o
}

func (o ActionIpCommunityPropertiesOutput) ToActionIpCommunityPropertiesPtrOutput() ActionIpCommunityPropertiesPtrOutput {
	return o.ToActionIpCommunityPropertiesPtrOutputWithContext(context.Background())
}

func (o ActionIpCommunityPropertiesOutput) ToActionIpCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionIpCommunityProperties) *ActionIpCommunityProperties {
		return &v
	}).(ActionIpCommunityPropertiesPtrOutput)
}

func (o ActionIpCommunityPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ActionIpCommunityProperties] {
	return pulumix.Output[ActionIpCommunityProperties]{
		OutputState: o.OutputState,
	}
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesOutput) Add() IpCommunityIdListPtrOutput {
	return o.ApplyT(func(v ActionIpCommunityProperties) *IpCommunityIdList { return v.Add }).(IpCommunityIdListPtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesOutput) Delete() IpCommunityIdListPtrOutput {
	return o.ApplyT(func(v ActionIpCommunityProperties) *IpCommunityIdList { return v.Delete }).(IpCommunityIdListPtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesOutput) Set() IpCommunityIdListPtrOutput {
	return o.ApplyT(func(v ActionIpCommunityProperties) *IpCommunityIdList { return v.Set }).(IpCommunityIdListPtrOutput)
}

type ActionIpCommunityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ActionIpCommunityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionIpCommunityProperties)(nil)).Elem()
}

func (o ActionIpCommunityPropertiesPtrOutput) ToActionIpCommunityPropertiesPtrOutput() ActionIpCommunityPropertiesPtrOutput {
	return o
}

func (o ActionIpCommunityPropertiesPtrOutput) ToActionIpCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesPtrOutput {
	return o
}

func (o ActionIpCommunityPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionIpCommunityProperties] {
	return pulumix.Output[*ActionIpCommunityProperties]{
		OutputState: o.OutputState,
	}
}

func (o ActionIpCommunityPropertiesPtrOutput) Elem() ActionIpCommunityPropertiesOutput {
	return o.ApplyT(func(v *ActionIpCommunityProperties) ActionIpCommunityProperties {
		if v != nil {
			return *v
		}
		var ret ActionIpCommunityProperties
		return ret
	}).(ActionIpCommunityPropertiesOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesPtrOutput) Add() IpCommunityIdListPtrOutput {
	return o.ApplyT(func(v *ActionIpCommunityProperties) *IpCommunityIdList {
		if v == nil {
			return nil
		}
		return v.Add
	}).(IpCommunityIdListPtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesPtrOutput) Delete() IpCommunityIdListPtrOutput {
	return o.ApplyT(func(v *ActionIpCommunityProperties) *IpCommunityIdList {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(IpCommunityIdListPtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesPtrOutput) Set() IpCommunityIdListPtrOutput {
	return o.ApplyT(func(v *ActionIpCommunityProperties) *IpCommunityIdList {
		if v == nil {
			return nil
		}
		return v.Set
	}).(IpCommunityIdListPtrOutput)
}

// IP Community Properties.
type ActionIpCommunityPropertiesResponse struct {
	// IP Community ID list properties.
	Add *IpCommunityIdListResponse `pulumi:"add"`
	// IP Community ID list properties.
	Delete *IpCommunityIdListResponse `pulumi:"delete"`
	// IP Community ID list properties.
	Set *IpCommunityIdListResponse `pulumi:"set"`
}

// IP Community Properties.
type ActionIpCommunityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ActionIpCommunityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionIpCommunityPropertiesResponse)(nil)).Elem()
}

func (o ActionIpCommunityPropertiesResponseOutput) ToActionIpCommunityPropertiesResponseOutput() ActionIpCommunityPropertiesResponseOutput {
	return o
}

func (o ActionIpCommunityPropertiesResponseOutput) ToActionIpCommunityPropertiesResponseOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesResponseOutput {
	return o
}

func (o ActionIpCommunityPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ActionIpCommunityPropertiesResponse] {
	return pulumix.Output[ActionIpCommunityPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesResponseOutput) Add() IpCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v ActionIpCommunityPropertiesResponse) *IpCommunityIdListResponse { return v.Add }).(IpCommunityIdListResponsePtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesResponseOutput) Delete() IpCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v ActionIpCommunityPropertiesResponse) *IpCommunityIdListResponse { return v.Delete }).(IpCommunityIdListResponsePtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesResponseOutput) Set() IpCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v ActionIpCommunityPropertiesResponse) *IpCommunityIdListResponse { return v.Set }).(IpCommunityIdListResponsePtrOutput)
}

type ActionIpCommunityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ActionIpCommunityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionIpCommunityPropertiesResponse)(nil)).Elem()
}

func (o ActionIpCommunityPropertiesResponsePtrOutput) ToActionIpCommunityPropertiesResponsePtrOutput() ActionIpCommunityPropertiesResponsePtrOutput {
	return o
}

func (o ActionIpCommunityPropertiesResponsePtrOutput) ToActionIpCommunityPropertiesResponsePtrOutputWithContext(ctx context.Context) ActionIpCommunityPropertiesResponsePtrOutput {
	return o
}

func (o ActionIpCommunityPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionIpCommunityPropertiesResponse] {
	return pulumix.Output[*ActionIpCommunityPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o ActionIpCommunityPropertiesResponsePtrOutput) Elem() ActionIpCommunityPropertiesResponseOutput {
	return o.ApplyT(func(v *ActionIpCommunityPropertiesResponse) ActionIpCommunityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ActionIpCommunityPropertiesResponse
		return ret
	}).(ActionIpCommunityPropertiesResponseOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesResponsePtrOutput) Add() IpCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v *ActionIpCommunityPropertiesResponse) *IpCommunityIdListResponse {
		if v == nil {
			return nil
		}
		return v.Add
	}).(IpCommunityIdListResponsePtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesResponsePtrOutput) Delete() IpCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v *ActionIpCommunityPropertiesResponse) *IpCommunityIdListResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(IpCommunityIdListResponsePtrOutput)
}

// IP Community ID list properties.
func (o ActionIpCommunityPropertiesResponsePtrOutput) Set() IpCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v *ActionIpCommunityPropertiesResponse) *IpCommunityIdListResponse {
		if v == nil {
			return nil
		}
		return v.Set
	}).(IpCommunityIdListResponsePtrOutput)
}

// IP Extended Community Properties.
type ActionIpExtendedCommunityProperties struct {
	// IP Extended Community Id list properties.
	Add *IpExtendedCommunityIdList `pulumi:"add"`
	// IP Extended Community Id list properties.
	Delete *IpExtendedCommunityIdList `pulumi:"delete"`
	// IP Extended Community Id list properties.
	Set *IpExtendedCommunityIdList `pulumi:"set"`
}

// ActionIpExtendedCommunityPropertiesInput is an input type that accepts ActionIpExtendedCommunityPropertiesArgs and ActionIpExtendedCommunityPropertiesOutput values.
// You can construct a concrete instance of `ActionIpExtendedCommunityPropertiesInput` via:
//
//	ActionIpExtendedCommunityPropertiesArgs{...}
type ActionIpExtendedCommunityPropertiesInput interface {
	pulumi.Input

	ToActionIpExtendedCommunityPropertiesOutput() ActionIpExtendedCommunityPropertiesOutput
	ToActionIpExtendedCommunityPropertiesOutputWithContext(context.Context) ActionIpExtendedCommunityPropertiesOutput
}

// IP Extended Community Properties.
type ActionIpExtendedCommunityPropertiesArgs struct {
	// IP Extended Community Id list properties.
	Add IpExtendedCommunityIdListPtrInput `pulumi:"add"`
	// IP Extended Community Id list properties.
	Delete IpExtendedCommunityIdListPtrInput `pulumi:"delete"`
	// IP Extended Community Id list properties.
	Set IpExtendedCommunityIdListPtrInput `pulumi:"set"`
}

func (ActionIpExtendedCommunityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionIpExtendedCommunityProperties)(nil)).Elem()
}

func (i ActionIpExtendedCommunityPropertiesArgs) ToActionIpExtendedCommunityPropertiesOutput() ActionIpExtendedCommunityPropertiesOutput {
	return i.ToActionIpExtendedCommunityPropertiesOutputWithContext(context.Background())
}

func (i ActionIpExtendedCommunityPropertiesArgs) ToActionIpExtendedCommunityPropertiesOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionIpExtendedCommunityPropertiesOutput)
}

func (i ActionIpExtendedCommunityPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ActionIpExtendedCommunityProperties] {
	return pulumix.Output[ActionIpExtendedCommunityProperties]{
		OutputState: i.ToActionIpExtendedCommunityPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ActionIpExtendedCommunityPropertiesArgs) ToActionIpExtendedCommunityPropertiesPtrOutput() ActionIpExtendedCommunityPropertiesPtrOutput {
	return i.ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(context.Background())
}

func (i ActionIpExtendedCommunityPropertiesArgs) ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionIpExtendedCommunityPropertiesOutput).ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(ctx)
}

// ActionIpExtendedCommunityPropertiesPtrInput is an input type that accepts ActionIpExtendedCommunityPropertiesArgs, ActionIpExtendedCommunityPropertiesPtr and ActionIpExtendedCommunityPropertiesPtrOutput values.
// You can construct a concrete instance of `ActionIpExtendedCommunityPropertiesPtrInput` via:
//
//	        ActionIpExtendedCommunityPropertiesArgs{...}
//
//	or:
//
//	        nil
type ActionIpExtendedCommunityPropertiesPtrInput interface {
	pulumi.Input

	ToActionIpExtendedCommunityPropertiesPtrOutput() ActionIpExtendedCommunityPropertiesPtrOutput
	ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(context.Context) ActionIpExtendedCommunityPropertiesPtrOutput
}

type actionIpExtendedCommunityPropertiesPtrType ActionIpExtendedCommunityPropertiesArgs

func ActionIpExtendedCommunityPropertiesPtr(v *ActionIpExtendedCommunityPropertiesArgs) ActionIpExtendedCommunityPropertiesPtrInput {
	return (*actionIpExtendedCommunityPropertiesPtrType)(v)
}

func (*actionIpExtendedCommunityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionIpExtendedCommunityProperties)(nil)).Elem()
}

func (i *actionIpExtendedCommunityPropertiesPtrType) ToActionIpExtendedCommunityPropertiesPtrOutput() ActionIpExtendedCommunityPropertiesPtrOutput {
	return i.ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(context.Background())
}

func (i *actionIpExtendedCommunityPropertiesPtrType) ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionIpExtendedCommunityPropertiesPtrOutput)
}

func (i *actionIpExtendedCommunityPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionIpExtendedCommunityProperties] {
	return pulumix.Output[*ActionIpExtendedCommunityProperties]{
		OutputState: i.ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// IP Extended Community Properties.
type ActionIpExtendedCommunityPropertiesOutput struct{ *pulumi.OutputState }

func (ActionIpExtendedCommunityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionIpExtendedCommunityProperties)(nil)).Elem()
}

func (o ActionIpExtendedCommunityPropertiesOutput) ToActionIpExtendedCommunityPropertiesOutput() ActionIpExtendedCommunityPropertiesOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesOutput) ToActionIpExtendedCommunityPropertiesOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesOutput) ToActionIpExtendedCommunityPropertiesPtrOutput() ActionIpExtendedCommunityPropertiesPtrOutput {
	return o.ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(context.Background())
}

func (o ActionIpExtendedCommunityPropertiesOutput) ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionIpExtendedCommunityProperties) *ActionIpExtendedCommunityProperties {
		return &v
	}).(ActionIpExtendedCommunityPropertiesPtrOutput)
}

func (o ActionIpExtendedCommunityPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ActionIpExtendedCommunityProperties] {
	return pulumix.Output[ActionIpExtendedCommunityProperties]{
		OutputState: o.OutputState,
	}
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesOutput) Add() IpExtendedCommunityIdListPtrOutput {
	return o.ApplyT(func(v ActionIpExtendedCommunityProperties) *IpExtendedCommunityIdList { return v.Add }).(IpExtendedCommunityIdListPtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesOutput) Delete() IpExtendedCommunityIdListPtrOutput {
	return o.ApplyT(func(v ActionIpExtendedCommunityProperties) *IpExtendedCommunityIdList { return v.Delete }).(IpExtendedCommunityIdListPtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesOutput) Set() IpExtendedCommunityIdListPtrOutput {
	return o.ApplyT(func(v ActionIpExtendedCommunityProperties) *IpExtendedCommunityIdList { return v.Set }).(IpExtendedCommunityIdListPtrOutput)
}

type ActionIpExtendedCommunityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ActionIpExtendedCommunityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionIpExtendedCommunityProperties)(nil)).Elem()
}

func (o ActionIpExtendedCommunityPropertiesPtrOutput) ToActionIpExtendedCommunityPropertiesPtrOutput() ActionIpExtendedCommunityPropertiesPtrOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesPtrOutput) ToActionIpExtendedCommunityPropertiesPtrOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesPtrOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionIpExtendedCommunityProperties] {
	return pulumix.Output[*ActionIpExtendedCommunityProperties]{
		OutputState: o.OutputState,
	}
}

func (o ActionIpExtendedCommunityPropertiesPtrOutput) Elem() ActionIpExtendedCommunityPropertiesOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityProperties) ActionIpExtendedCommunityProperties {
		if v != nil {
			return *v
		}
		var ret ActionIpExtendedCommunityProperties
		return ret
	}).(ActionIpExtendedCommunityPropertiesOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesPtrOutput) Add() IpExtendedCommunityIdListPtrOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityProperties) *IpExtendedCommunityIdList {
		if v == nil {
			return nil
		}
		return v.Add
	}).(IpExtendedCommunityIdListPtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesPtrOutput) Delete() IpExtendedCommunityIdListPtrOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityProperties) *IpExtendedCommunityIdList {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(IpExtendedCommunityIdListPtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesPtrOutput) Set() IpExtendedCommunityIdListPtrOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityProperties) *IpExtendedCommunityIdList {
		if v == nil {
			return nil
		}
		return v.Set
	}).(IpExtendedCommunityIdListPtrOutput)
}

// IP Extended Community Properties.
type ActionIpExtendedCommunityPropertiesResponse struct {
	// IP Extended Community Id list properties.
	Add *IpExtendedCommunityIdListResponse `pulumi:"add"`
	// IP Extended Community Id list properties.
	Delete *IpExtendedCommunityIdListResponse `pulumi:"delete"`
	// IP Extended Community Id list properties.
	Set *IpExtendedCommunityIdListResponse `pulumi:"set"`
}

// IP Extended Community Properties.
type ActionIpExtendedCommunityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ActionIpExtendedCommunityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionIpExtendedCommunityPropertiesResponse)(nil)).Elem()
}

func (o ActionIpExtendedCommunityPropertiesResponseOutput) ToActionIpExtendedCommunityPropertiesResponseOutput() ActionIpExtendedCommunityPropertiesResponseOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesResponseOutput) ToActionIpExtendedCommunityPropertiesResponseOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesResponseOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ActionIpExtendedCommunityPropertiesResponse] {
	return pulumix.Output[ActionIpExtendedCommunityPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesResponseOutput) Add() IpExtendedCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v ActionIpExtendedCommunityPropertiesResponse) *IpExtendedCommunityIdListResponse { return v.Add }).(IpExtendedCommunityIdListResponsePtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesResponseOutput) Delete() IpExtendedCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v ActionIpExtendedCommunityPropertiesResponse) *IpExtendedCommunityIdListResponse {
		return v.Delete
	}).(IpExtendedCommunityIdListResponsePtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesResponseOutput) Set() IpExtendedCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v ActionIpExtendedCommunityPropertiesResponse) *IpExtendedCommunityIdListResponse { return v.Set }).(IpExtendedCommunityIdListResponsePtrOutput)
}

type ActionIpExtendedCommunityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ActionIpExtendedCommunityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionIpExtendedCommunityPropertiesResponse)(nil)).Elem()
}

func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) ToActionIpExtendedCommunityPropertiesResponsePtrOutput() ActionIpExtendedCommunityPropertiesResponsePtrOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) ToActionIpExtendedCommunityPropertiesResponsePtrOutputWithContext(ctx context.Context) ActionIpExtendedCommunityPropertiesResponsePtrOutput {
	return o
}

func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionIpExtendedCommunityPropertiesResponse] {
	return pulumix.Output[*ActionIpExtendedCommunityPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) Elem() ActionIpExtendedCommunityPropertiesResponseOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityPropertiesResponse) ActionIpExtendedCommunityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ActionIpExtendedCommunityPropertiesResponse
		return ret
	}).(ActionIpExtendedCommunityPropertiesResponseOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) Add() IpExtendedCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityPropertiesResponse) *IpExtendedCommunityIdListResponse {
		if v == nil {
			return nil
		}
		return v.Add
	}).(IpExtendedCommunityIdListResponsePtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) Delete() IpExtendedCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityPropertiesResponse) *IpExtendedCommunityIdListResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(IpExtendedCommunityIdListResponsePtrOutput)
}

// IP Extended Community Id list properties.
func (o ActionIpExtendedCommunityPropertiesResponsePtrOutput) Set() IpExtendedCommunityIdListResponsePtrOutput {
	return o.ApplyT(func(v *ActionIpExtendedCommunityPropertiesResponse) *IpExtendedCommunityIdListResponse {
		if v == nil {
			return nil
		}
		return v.Set
	}).(IpExtendedCommunityIdListResponsePtrOutput)
}

// Aggregate Route properties.
type AggregateRoute struct {
	// Prefix of the aggregate Route.
	Prefix *string `pulumi:"prefix"`
}

// AggregateRouteInput is an input type that accepts AggregateRouteArgs and AggregateRouteOutput values.
// You can construct a concrete instance of `AggregateRouteInput` via:
//
//	AggregateRouteArgs{...}
type AggregateRouteInput interface {
	pulumi.Input

	ToAggregateRouteOutput() AggregateRouteOutput
	ToAggregateRouteOutputWithContext(context.Context) AggregateRouteOutput
}

// Aggregate Route properties.
type AggregateRouteArgs struct {
	// Prefix of the aggregate Route.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (AggregateRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateRoute)(nil)).Elem()
}

func (i AggregateRouteArgs) ToAggregateRouteOutput() AggregateRouteOutput {
	return i.ToAggregateRouteOutputWithContext(context.Background())
}

func (i AggregateRouteArgs) ToAggregateRouteOutputWithContext(ctx context.Context) AggregateRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateRouteOutput)
}

func (i AggregateRouteArgs) ToOutput(ctx context.Context) pulumix.Output[AggregateRoute] {
	return pulumix.Output[AggregateRoute]{
		OutputState: i.ToAggregateRouteOutputWithContext(ctx).OutputState,
	}
}

// AggregateRouteArrayInput is an input type that accepts AggregateRouteArray and AggregateRouteArrayOutput values.
// You can construct a concrete instance of `AggregateRouteArrayInput` via:
//
//	AggregateRouteArray{ AggregateRouteArgs{...} }
type AggregateRouteArrayInput interface {
	pulumi.Input

	ToAggregateRouteArrayOutput() AggregateRouteArrayOutput
	ToAggregateRouteArrayOutputWithContext(context.Context) AggregateRouteArrayOutput
}

type AggregateRouteArray []AggregateRouteInput

func (AggregateRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AggregateRoute)(nil)).Elem()
}

func (i AggregateRouteArray) ToAggregateRouteArrayOutput() AggregateRouteArrayOutput {
	return i.ToAggregateRouteArrayOutputWithContext(context.Background())
}

func (i AggregateRouteArray) ToAggregateRouteArrayOutputWithContext(ctx context.Context) AggregateRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateRouteArrayOutput)
}

func (i AggregateRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]AggregateRoute] {
	return pulumix.Output[[]AggregateRoute]{
		OutputState: i.ToAggregateRouteArrayOutputWithContext(ctx).OutputState,
	}
}

// Aggregate Route properties.
type AggregateRouteOutput struct{ *pulumi.OutputState }

func (AggregateRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateRoute)(nil)).Elem()
}

func (o AggregateRouteOutput) ToAggregateRouteOutput() AggregateRouteOutput {
	return o
}

func (o AggregateRouteOutput) ToAggregateRouteOutputWithContext(ctx context.Context) AggregateRouteOutput {
	return o
}

func (o AggregateRouteOutput) ToOutput(ctx context.Context) pulumix.Output[AggregateRoute] {
	return pulumix.Output[AggregateRoute]{
		OutputState: o.OutputState,
	}
}

// Prefix of the aggregate Route.
func (o AggregateRouteOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AggregateRoute) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type AggregateRouteArrayOutput struct{ *pulumi.OutputState }

func (AggregateRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AggregateRoute)(nil)).Elem()
}

func (o AggregateRouteArrayOutput) ToAggregateRouteArrayOutput() AggregateRouteArrayOutput {
	return o
}

func (o AggregateRouteArrayOutput) ToAggregateRouteArrayOutputWithContext(ctx context.Context) AggregateRouteArrayOutput {
	return o
}

func (o AggregateRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AggregateRoute] {
	return pulumix.Output[[]AggregateRoute]{
		OutputState: o.OutputState,
	}
}

func (o AggregateRouteArrayOutput) Index(i pulumi.IntInput) AggregateRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AggregateRoute {
		return vs[0].([]AggregateRoute)[vs[1].(int)]
	}).(AggregateRouteOutput)
}

// List of IPv4 and IPv6 route configurations.
type AggregateRouteConfiguration struct {
	// List of IPv4 Route prefixes.
	Ipv4Routes []AggregateRoute `pulumi:"ipv4Routes"`
	// List of IPv6 Routes prefixes.
	Ipv6Routes []AggregateRoute `pulumi:"ipv6Routes"`
}

// AggregateRouteConfigurationInput is an input type that accepts AggregateRouteConfigurationArgs and AggregateRouteConfigurationOutput values.
// You can construct a concrete instance of `AggregateRouteConfigurationInput` via:
//
//	AggregateRouteConfigurationArgs{...}
type AggregateRouteConfigurationInput interface {
	pulumi.Input

	ToAggregateRouteConfigurationOutput() AggregateRouteConfigurationOutput
	ToAggregateRouteConfigurationOutputWithContext(context.Context) AggregateRouteConfigurationOutput
}

// List of IPv4 and IPv6 route configurations.
type AggregateRouteConfigurationArgs struct {
	// List of IPv4 Route prefixes.
	Ipv4Routes AggregateRouteArrayInput `pulumi:"ipv4Routes"`
	// List of IPv6 Routes prefixes.
	Ipv6Routes AggregateRouteArrayInput `pulumi:"ipv6Routes"`
}

func (AggregateRouteConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateRouteConfiguration)(nil)).Elem()
}

func (i AggregateRouteConfigurationArgs) ToAggregateRouteConfigurationOutput() AggregateRouteConfigurationOutput {
	return i.ToAggregateRouteConfigurationOutputWithContext(context.Background())
}

func (i AggregateRouteConfigurationArgs) ToAggregateRouteConfigurationOutputWithContext(ctx context.Context) AggregateRouteConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateRouteConfigurationOutput)
}

func (i AggregateRouteConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[AggregateRouteConfiguration] {
	return pulumix.Output[AggregateRouteConfiguration]{
		OutputState: i.ToAggregateRouteConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i AggregateRouteConfigurationArgs) ToAggregateRouteConfigurationPtrOutput() AggregateRouteConfigurationPtrOutput {
	return i.ToAggregateRouteConfigurationPtrOutputWithContext(context.Background())
}

func (i AggregateRouteConfigurationArgs) ToAggregateRouteConfigurationPtrOutputWithContext(ctx context.Context) AggregateRouteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateRouteConfigurationOutput).ToAggregateRouteConfigurationPtrOutputWithContext(ctx)
}

// AggregateRouteConfigurationPtrInput is an input type that accepts AggregateRouteConfigurationArgs, AggregateRouteConfigurationPtr and AggregateRouteConfigurationPtrOutput values.
// You can construct a concrete instance of `AggregateRouteConfigurationPtrInput` via:
//
//	        AggregateRouteConfigurationArgs{...}
//
//	or:
//
//	        nil
type AggregateRouteConfigurationPtrInput interface {
	pulumi.Input

	ToAggregateRouteConfigurationPtrOutput() AggregateRouteConfigurationPtrOutput
	ToAggregateRouteConfigurationPtrOutputWithContext(context.Context) AggregateRouteConfigurationPtrOutput
}

type aggregateRouteConfigurationPtrType AggregateRouteConfigurationArgs

func AggregateRouteConfigurationPtr(v *AggregateRouteConfigurationArgs) AggregateRouteConfigurationPtrInput {
	return (*aggregateRouteConfigurationPtrType)(v)
}

func (*aggregateRouteConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AggregateRouteConfiguration)(nil)).Elem()
}

func (i *aggregateRouteConfigurationPtrType) ToAggregateRouteConfigurationPtrOutput() AggregateRouteConfigurationPtrOutput {
	return i.ToAggregateRouteConfigurationPtrOutputWithContext(context.Background())
}

func (i *aggregateRouteConfigurationPtrType) ToAggregateRouteConfigurationPtrOutputWithContext(ctx context.Context) AggregateRouteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateRouteConfigurationPtrOutput)
}

func (i *aggregateRouteConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*AggregateRouteConfiguration] {
	return pulumix.Output[*AggregateRouteConfiguration]{
		OutputState: i.ToAggregateRouteConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// List of IPv4 and IPv6 route configurations.
type AggregateRouteConfigurationOutput struct{ *pulumi.OutputState }

func (AggregateRouteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateRouteConfiguration)(nil)).Elem()
}

func (o AggregateRouteConfigurationOutput) ToAggregateRouteConfigurationOutput() AggregateRouteConfigurationOutput {
	return o
}

func (o AggregateRouteConfigurationOutput) ToAggregateRouteConfigurationOutputWithContext(ctx context.Context) AggregateRouteConfigurationOutput {
	return o
}

func (o AggregateRouteConfigurationOutput) ToAggregateRouteConfigurationPtrOutput() AggregateRouteConfigurationPtrOutput {
	return o.ToAggregateRouteConfigurationPtrOutputWithContext(context.Background())
}

func (o AggregateRouteConfigurationOutput) ToAggregateRouteConfigurationPtrOutputWithContext(ctx context.Context) AggregateRouteConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AggregateRouteConfiguration) *AggregateRouteConfiguration {
		return &v
	}).(AggregateRouteConfigurationPtrOutput)
}

func (o AggregateRouteConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[AggregateRouteConfiguration] {
	return pulumix.Output[AggregateRouteConfiguration]{
		OutputState: o.OutputState,
	}
}

// List of IPv4 Route prefixes.
func (o AggregateRouteConfigurationOutput) Ipv4Routes() AggregateRouteArrayOutput {
	return o.ApplyT(func(v AggregateRouteConfiguration) []AggregateRoute { return v.Ipv4Routes }).(AggregateRouteArrayOutput)
}

// List of IPv6 Routes prefixes.
func (o AggregateRouteConfigurationOutput) Ipv6Routes() AggregateRouteArrayOutput {
	return o.ApplyT(func(v AggregateRouteConfiguration) []AggregateRoute { return v.Ipv6Routes }).(AggregateRouteArrayOutput)
}

type AggregateRouteConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AggregateRouteConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AggregateRouteConfiguration)(nil)).Elem()
}

func (o AggregateRouteConfigurationPtrOutput) ToAggregateRouteConfigurationPtrOutput() AggregateRouteConfigurationPtrOutput {
	return o
}

func (o AggregateRouteConfigurationPtrOutput) ToAggregateRouteConfigurationPtrOutputWithContext(ctx context.Context) AggregateRouteConfigurationPtrOutput {
	return o
}

func (o AggregateRouteConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AggregateRouteConfiguration] {
	return pulumix.Output[*AggregateRouteConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o AggregateRouteConfigurationPtrOutput) Elem() AggregateRouteConfigurationOutput {
	return o.ApplyT(func(v *AggregateRouteConfiguration) AggregateRouteConfiguration {
		if v != nil {
			return *v
		}
		var ret AggregateRouteConfiguration
		return ret
	}).(AggregateRouteConfigurationOutput)
}

// List of IPv4 Route prefixes.
func (o AggregateRouteConfigurationPtrOutput) Ipv4Routes() AggregateRouteArrayOutput {
	return o.ApplyT(func(v *AggregateRouteConfiguration) []AggregateRoute {
		if v == nil {
			return nil
		}
		return v.Ipv4Routes
	}).(AggregateRouteArrayOutput)
}

// List of IPv6 Routes prefixes.
func (o AggregateRouteConfigurationPtrOutput) Ipv6Routes() AggregateRouteArrayOutput {
	return o.ApplyT(func(v *AggregateRouteConfiguration) []AggregateRoute {
		if v == nil {
			return nil
		}
		return v.Ipv6Routes
	}).(AggregateRouteArrayOutput)
}

// List of IPv4 and IPv6 route configurations.
type AggregateRouteConfigurationResponse struct {
	// List of IPv4 Route prefixes.
	Ipv4Routes []AggregateRouteResponse `pulumi:"ipv4Routes"`
	// List of IPv6 Routes prefixes.
	Ipv6Routes []AggregateRouteResponse `pulumi:"ipv6Routes"`
}

// List of IPv4 and IPv6 route configurations.
type AggregateRouteConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AggregateRouteConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateRouteConfigurationResponse)(nil)).Elem()
}

func (o AggregateRouteConfigurationResponseOutput) ToAggregateRouteConfigurationResponseOutput() AggregateRouteConfigurationResponseOutput {
	return o
}

func (o AggregateRouteConfigurationResponseOutput) ToAggregateRouteConfigurationResponseOutputWithContext(ctx context.Context) AggregateRouteConfigurationResponseOutput {
	return o
}

func (o AggregateRouteConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AggregateRouteConfigurationResponse] {
	return pulumix.Output[AggregateRouteConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// List of IPv4 Route prefixes.
func (o AggregateRouteConfigurationResponseOutput) Ipv4Routes() AggregateRouteResponseArrayOutput {
	return o.ApplyT(func(v AggregateRouteConfigurationResponse) []AggregateRouteResponse { return v.Ipv4Routes }).(AggregateRouteResponseArrayOutput)
}

// List of IPv6 Routes prefixes.
func (o AggregateRouteConfigurationResponseOutput) Ipv6Routes() AggregateRouteResponseArrayOutput {
	return o.ApplyT(func(v AggregateRouteConfigurationResponse) []AggregateRouteResponse { return v.Ipv6Routes }).(AggregateRouteResponseArrayOutput)
}

type AggregateRouteConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AggregateRouteConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AggregateRouteConfigurationResponse)(nil)).Elem()
}

func (o AggregateRouteConfigurationResponsePtrOutput) ToAggregateRouteConfigurationResponsePtrOutput() AggregateRouteConfigurationResponsePtrOutput {
	return o
}

func (o AggregateRouteConfigurationResponsePtrOutput) ToAggregateRouteConfigurationResponsePtrOutputWithContext(ctx context.Context) AggregateRouteConfigurationResponsePtrOutput {
	return o
}

func (o AggregateRouteConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AggregateRouteConfigurationResponse] {
	return pulumix.Output[*AggregateRouteConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o AggregateRouteConfigurationResponsePtrOutput) Elem() AggregateRouteConfigurationResponseOutput {
	return o.ApplyT(func(v *AggregateRouteConfigurationResponse) AggregateRouteConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AggregateRouteConfigurationResponse
		return ret
	}).(AggregateRouteConfigurationResponseOutput)
}

// List of IPv4 Route prefixes.
func (o AggregateRouteConfigurationResponsePtrOutput) Ipv4Routes() AggregateRouteResponseArrayOutput {
	return o.ApplyT(func(v *AggregateRouteConfigurationResponse) []AggregateRouteResponse {
		if v == nil {
			return nil
		}
		return v.Ipv4Routes
	}).(AggregateRouteResponseArrayOutput)
}

// List of IPv6 Routes prefixes.
func (o AggregateRouteConfigurationResponsePtrOutput) Ipv6Routes() AggregateRouteResponseArrayOutput {
	return o.ApplyT(func(v *AggregateRouteConfigurationResponse) []AggregateRouteResponse {
		if v == nil {
			return nil
		}
		return v.Ipv6Routes
	}).(AggregateRouteResponseArrayOutput)
}

// Aggregate Route properties.
type AggregateRouteResponse struct {
	// Prefix of the aggregate Route.
	Prefix *string `pulumi:"prefix"`
}

// Aggregate Route properties.
type AggregateRouteResponseOutput struct{ *pulumi.OutputState }

func (AggregateRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateRouteResponse)(nil)).Elem()
}

func (o AggregateRouteResponseOutput) ToAggregateRouteResponseOutput() AggregateRouteResponseOutput {
	return o
}

func (o AggregateRouteResponseOutput) ToAggregateRouteResponseOutputWithContext(ctx context.Context) AggregateRouteResponseOutput {
	return o
}

func (o AggregateRouteResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AggregateRouteResponse] {
	return pulumix.Output[AggregateRouteResponse]{
		OutputState: o.OutputState,
	}
}

// Prefix of the aggregate Route.
func (o AggregateRouteResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AggregateRouteResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type AggregateRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (AggregateRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AggregateRouteResponse)(nil)).Elem()
}

func (o AggregateRouteResponseArrayOutput) ToAggregateRouteResponseArrayOutput() AggregateRouteResponseArrayOutput {
	return o
}

func (o AggregateRouteResponseArrayOutput) ToAggregateRouteResponseArrayOutputWithContext(ctx context.Context) AggregateRouteResponseArrayOutput {
	return o
}

func (o AggregateRouteResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AggregateRouteResponse] {
	return pulumix.Output[[]AggregateRouteResponse]{
		OutputState: o.OutputState,
	}
}

func (o AggregateRouteResponseArrayOutput) Index(i pulumi.IntInput) AggregateRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AggregateRouteResponse {
		return vs[0].([]AggregateRouteResponse)[vs[1].(int)]
	}).(AggregateRouteResponseOutput)
}

// BFD configuration properties
type BfdConfigurationResponse struct {
	// Administrative state of the BfdConfiguration. Example: Enabled | Disabled.
	AdministrativeState string `pulumi:"administrativeState"`
	// interval in milliseconds. Example: 300.
	Interval int `pulumi:"interval"`
	// Multiplier for the Bfd Configuration. Example: 3.
	Multiplier int `pulumi:"multiplier"`
}

// BFD configuration properties
type BfdConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BfdConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BfdConfigurationResponse)(nil)).Elem()
}

func (o BfdConfigurationResponseOutput) ToBfdConfigurationResponseOutput() BfdConfigurationResponseOutput {
	return o
}

func (o BfdConfigurationResponseOutput) ToBfdConfigurationResponseOutputWithContext(ctx context.Context) BfdConfigurationResponseOutput {
	return o
}

func (o BfdConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[BfdConfigurationResponse] {
	return pulumix.Output[BfdConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// Administrative state of the BfdConfiguration. Example: Enabled | Disabled.
func (o BfdConfigurationResponseOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v BfdConfigurationResponse) string { return v.AdministrativeState }).(pulumi.StringOutput)
}

// interval in milliseconds. Example: 300.
func (o BfdConfigurationResponseOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v BfdConfigurationResponse) int { return v.Interval }).(pulumi.IntOutput)
}

// Multiplier for the Bfd Configuration. Example: 3.
func (o BfdConfigurationResponseOutput) Multiplier() pulumi.IntOutput {
	return o.ApplyT(func(v BfdConfigurationResponse) int { return v.Multiplier }).(pulumi.IntOutput)
}

type BfdConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (BfdConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BfdConfigurationResponse)(nil)).Elem()
}

func (o BfdConfigurationResponsePtrOutput) ToBfdConfigurationResponsePtrOutput() BfdConfigurationResponsePtrOutput {
	return o
}

func (o BfdConfigurationResponsePtrOutput) ToBfdConfigurationResponsePtrOutputWithContext(ctx context.Context) BfdConfigurationResponsePtrOutput {
	return o
}

func (o BfdConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BfdConfigurationResponse] {
	return pulumix.Output[*BfdConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o BfdConfigurationResponsePtrOutput) Elem() BfdConfigurationResponseOutput {
	return o.ApplyT(func(v *BfdConfigurationResponse) BfdConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret BfdConfigurationResponse
		return ret
	}).(BfdConfigurationResponseOutput)
}

// Administrative state of the BfdConfiguration. Example: Enabled | Disabled.
func (o BfdConfigurationResponsePtrOutput) AdministrativeState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BfdConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdministrativeState
	}).(pulumi.StringPtrOutput)
}

// interval in milliseconds. Example: 300.
func (o BfdConfigurationResponsePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// Multiplier for the Bfd Configuration. Example: 3.
func (o BfdConfigurationResponsePtrOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Multiplier
	}).(pulumi.IntPtrOutput)
}

// BGP configuration properties
type BgpConfiguration struct {
	// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
	AllowAS *int `pulumi:"allowAS"`
	// Enable Or Disable state.
	AllowASOverride *string `pulumi:"allowASOverride"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Originate a defaultRoute. Ex: "True" | "False".
	DefaultRouteOriginate *string `pulumi:"defaultRouteOriginate"`
	// BGP Ipv4 ListenRange.
	Ipv4ListenRangePrefixes []string `pulumi:"ipv4ListenRangePrefixes"`
	// List with stringified ipv4NeighborAddresses.
	Ipv4NeighborAddress []NeighborAddress `pulumi:"ipv4NeighborAddress"`
	// BGP Ipv6 ListenRange.
	Ipv6ListenRangePrefixes []string `pulumi:"ipv6ListenRangePrefixes"`
	// List with stringified IPv6 Neighbor Address.
	Ipv6NeighborAddress []NeighborAddress `pulumi:"ipv6NeighborAddress"`
	// Peer ASN. Example: 65047.
	PeerASN int `pulumi:"peerASN"`
}

// Defaults sets the appropriate defaults for BgpConfiguration
func (val *BgpConfiguration) Defaults() *BgpConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AllowAS == nil {
		allowAS_ := 2
		tmp.AllowAS = &allowAS_
	}
	return &tmp
}

// BgpConfigurationInput is an input type that accepts BgpConfigurationArgs and BgpConfigurationOutput values.
// You can construct a concrete instance of `BgpConfigurationInput` via:
//
//	BgpConfigurationArgs{...}
type BgpConfigurationInput interface {
	pulumi.Input

	ToBgpConfigurationOutput() BgpConfigurationOutput
	ToBgpConfigurationOutputWithContext(context.Context) BgpConfigurationOutput
}

// BGP configuration properties
type BgpConfigurationArgs struct {
	// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
	AllowAS pulumi.IntPtrInput `pulumi:"allowAS"`
	// Enable Or Disable state.
	AllowASOverride pulumi.StringPtrInput `pulumi:"allowASOverride"`
	// Switch configuration description.
	Annotation pulumi.StringPtrInput `pulumi:"annotation"`
	// Originate a defaultRoute. Ex: "True" | "False".
	DefaultRouteOriginate pulumi.StringPtrInput `pulumi:"defaultRouteOriginate"`
	// BGP Ipv4 ListenRange.
	Ipv4ListenRangePrefixes pulumi.StringArrayInput `pulumi:"ipv4ListenRangePrefixes"`
	// List with stringified ipv4NeighborAddresses.
	Ipv4NeighborAddress NeighborAddressArrayInput `pulumi:"ipv4NeighborAddress"`
	// BGP Ipv6 ListenRange.
	Ipv6ListenRangePrefixes pulumi.StringArrayInput `pulumi:"ipv6ListenRangePrefixes"`
	// List with stringified IPv6 Neighbor Address.
	Ipv6NeighborAddress NeighborAddressArrayInput `pulumi:"ipv6NeighborAddress"`
	// Peer ASN. Example: 65047.
	PeerASN pulumi.IntInput `pulumi:"peerASN"`
}

// Defaults sets the appropriate defaults for BgpConfigurationArgs
func (val *BgpConfigurationArgs) Defaults() *BgpConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AllowAS == nil {
		tmp.AllowAS = pulumi.IntPtr(2)
	}
	return &tmp
}
func (BgpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpConfiguration)(nil)).Elem()
}

func (i BgpConfigurationArgs) ToBgpConfigurationOutput() BgpConfigurationOutput {
	return i.ToBgpConfigurationOutputWithContext(context.Background())
}

func (i BgpConfigurationArgs) ToBgpConfigurationOutputWithContext(ctx context.Context) BgpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpConfigurationOutput)
}

func (i BgpConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[BgpConfiguration] {
	return pulumix.Output[BgpConfiguration]{
		OutputState: i.ToBgpConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i BgpConfigurationArgs) ToBgpConfigurationPtrOutput() BgpConfigurationPtrOutput {
	return i.ToBgpConfigurationPtrOutputWithContext(context.Background())
}

func (i BgpConfigurationArgs) ToBgpConfigurationPtrOutputWithContext(ctx context.Context) BgpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpConfigurationOutput).ToBgpConfigurationPtrOutputWithContext(ctx)
}

// BgpConfigurationPtrInput is an input type that accepts BgpConfigurationArgs, BgpConfigurationPtr and BgpConfigurationPtrOutput values.
// You can construct a concrete instance of `BgpConfigurationPtrInput` via:
//
//	        BgpConfigurationArgs{...}
//
//	or:
//
//	        nil
type BgpConfigurationPtrInput interface {
	pulumi.Input

	ToBgpConfigurationPtrOutput() BgpConfigurationPtrOutput
	ToBgpConfigurationPtrOutputWithContext(context.Context) BgpConfigurationPtrOutput
}

type bgpConfigurationPtrType BgpConfigurationArgs

func BgpConfigurationPtr(v *BgpConfigurationArgs) BgpConfigurationPtrInput {
	return (*bgpConfigurationPtrType)(v)
}

func (*bgpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpConfiguration)(nil)).Elem()
}

func (i *bgpConfigurationPtrType) ToBgpConfigurationPtrOutput() BgpConfigurationPtrOutput {
	return i.ToBgpConfigurationPtrOutputWithContext(context.Background())
}

func (i *bgpConfigurationPtrType) ToBgpConfigurationPtrOutputWithContext(ctx context.Context) BgpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpConfigurationPtrOutput)
}

func (i *bgpConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BgpConfiguration] {
	return pulumix.Output[*BgpConfiguration]{
		OutputState: i.ToBgpConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// BGP configuration properties
type BgpConfigurationOutput struct{ *pulumi.OutputState }

func (BgpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpConfiguration)(nil)).Elem()
}

func (o BgpConfigurationOutput) ToBgpConfigurationOutput() BgpConfigurationOutput {
	return o
}

func (o BgpConfigurationOutput) ToBgpConfigurationOutputWithContext(ctx context.Context) BgpConfigurationOutput {
	return o
}

func (o BgpConfigurationOutput) ToBgpConfigurationPtrOutput() BgpConfigurationPtrOutput {
	return o.ToBgpConfigurationPtrOutputWithContext(context.Background())
}

func (o BgpConfigurationOutput) ToBgpConfigurationPtrOutputWithContext(ctx context.Context) BgpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BgpConfiguration) *BgpConfiguration {
		return &v
	}).(BgpConfigurationPtrOutput)
}

func (o BgpConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[BgpConfiguration] {
	return pulumix.Output[BgpConfiguration]{
		OutputState: o.OutputState,
	}
}

// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
func (o BgpConfigurationOutput) AllowAS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpConfiguration) *int { return v.AllowAS }).(pulumi.IntPtrOutput)
}

// Enable Or Disable state.
func (o BgpConfigurationOutput) AllowASOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfiguration) *string { return v.AllowASOverride }).(pulumi.StringPtrOutput)
}

// Switch configuration description.
func (o BgpConfigurationOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfiguration) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Originate a defaultRoute. Ex: "True" | "False".
func (o BgpConfigurationOutput) DefaultRouteOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfiguration) *string { return v.DefaultRouteOriginate }).(pulumi.StringPtrOutput)
}

// BGP Ipv4 ListenRange.
func (o BgpConfigurationOutput) Ipv4ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BgpConfiguration) []string { return v.Ipv4ListenRangePrefixes }).(pulumi.StringArrayOutput)
}

// List with stringified ipv4NeighborAddresses.
func (o BgpConfigurationOutput) Ipv4NeighborAddress() NeighborAddressArrayOutput {
	return o.ApplyT(func(v BgpConfiguration) []NeighborAddress { return v.Ipv4NeighborAddress }).(NeighborAddressArrayOutput)
}

// BGP Ipv6 ListenRange.
func (o BgpConfigurationOutput) Ipv6ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BgpConfiguration) []string { return v.Ipv6ListenRangePrefixes }).(pulumi.StringArrayOutput)
}

// List with stringified IPv6 Neighbor Address.
func (o BgpConfigurationOutput) Ipv6NeighborAddress() NeighborAddressArrayOutput {
	return o.ApplyT(func(v BgpConfiguration) []NeighborAddress { return v.Ipv6NeighborAddress }).(NeighborAddressArrayOutput)
}

// Peer ASN. Example: 65047.
func (o BgpConfigurationOutput) PeerASN() pulumi.IntOutput {
	return o.ApplyT(func(v BgpConfiguration) int { return v.PeerASN }).(pulumi.IntOutput)
}

type BgpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BgpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpConfiguration)(nil)).Elem()
}

func (o BgpConfigurationPtrOutput) ToBgpConfigurationPtrOutput() BgpConfigurationPtrOutput {
	return o
}

func (o BgpConfigurationPtrOutput) ToBgpConfigurationPtrOutputWithContext(ctx context.Context) BgpConfigurationPtrOutput {
	return o
}

func (o BgpConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpConfiguration] {
	return pulumix.Output[*BgpConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o BgpConfigurationPtrOutput) Elem() BgpConfigurationOutput {
	return o.ApplyT(func(v *BgpConfiguration) BgpConfiguration {
		if v != nil {
			return *v
		}
		var ret BgpConfiguration
		return ret
	}).(BgpConfigurationOutput)
}

// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
func (o BgpConfigurationPtrOutput) AllowAS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.AllowAS
	}).(pulumi.IntPtrOutput)
}

// Enable Or Disable state.
func (o BgpConfigurationPtrOutput) AllowASOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AllowASOverride
	}).(pulumi.StringPtrOutput)
}

// Switch configuration description.
func (o BgpConfigurationPtrOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Annotation
	}).(pulumi.StringPtrOutput)
}

// Originate a defaultRoute. Ex: "True" | "False".
func (o BgpConfigurationPtrOutput) DefaultRouteOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRouteOriginate
	}).(pulumi.StringPtrOutput)
}

// BGP Ipv4 ListenRange.
func (o BgpConfigurationPtrOutput) Ipv4ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BgpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Ipv4ListenRangePrefixes
	}).(pulumi.StringArrayOutput)
}

// List with stringified ipv4NeighborAddresses.
func (o BgpConfigurationPtrOutput) Ipv4NeighborAddress() NeighborAddressArrayOutput {
	return o.ApplyT(func(v *BgpConfiguration) []NeighborAddress {
		if v == nil {
			return nil
		}
		return v.Ipv4NeighborAddress
	}).(NeighborAddressArrayOutput)
}

// BGP Ipv6 ListenRange.
func (o BgpConfigurationPtrOutput) Ipv6ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BgpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Ipv6ListenRangePrefixes
	}).(pulumi.StringArrayOutput)
}

// List with stringified IPv6 Neighbor Address.
func (o BgpConfigurationPtrOutput) Ipv6NeighborAddress() NeighborAddressArrayOutput {
	return o.ApplyT(func(v *BgpConfiguration) []NeighborAddress {
		if v == nil {
			return nil
		}
		return v.Ipv6NeighborAddress
	}).(NeighborAddressArrayOutput)
}

// Peer ASN. Example: 65047.
func (o BgpConfigurationPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// BGP configuration properties
type BgpConfigurationResponse struct {
	// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
	AllowAS *int `pulumi:"allowAS"`
	// Enable Or Disable state.
	AllowASOverride *string `pulumi:"allowASOverride"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// BFD configuration properties
	BfdConfiguration *BfdConfigurationResponse `pulumi:"bfdConfiguration"`
	// Originate a defaultRoute. Ex: "True" | "False".
	DefaultRouteOriginate *string `pulumi:"defaultRouteOriginate"`
	// ASN of Network Fabric. Example: 65048.
	FabricASN int `pulumi:"fabricASN"`
	// BGP Ipv4 ListenRange.
	Ipv4ListenRangePrefixes []string `pulumi:"ipv4ListenRangePrefixes"`
	// List with stringified ipv4NeighborAddresses.
	Ipv4NeighborAddress []NeighborAddressResponse `pulumi:"ipv4NeighborAddress"`
	// BGP Ipv6 ListenRange.
	Ipv6ListenRangePrefixes []string `pulumi:"ipv6ListenRangePrefixes"`
	// List with stringified IPv6 Neighbor Address.
	Ipv6NeighborAddress []NeighborAddressResponse `pulumi:"ipv6NeighborAddress"`
	// Peer ASN. Example: 65047.
	PeerASN int `pulumi:"peerASN"`
}

// Defaults sets the appropriate defaults for BgpConfigurationResponse
func (val *BgpConfigurationResponse) Defaults() *BgpConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AllowAS == nil {
		allowAS_ := 2
		tmp.AllowAS = &allowAS_
	}
	return &tmp
}

// BGP configuration properties
type BgpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BgpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpConfigurationResponse)(nil)).Elem()
}

func (o BgpConfigurationResponseOutput) ToBgpConfigurationResponseOutput() BgpConfigurationResponseOutput {
	return o
}

func (o BgpConfigurationResponseOutput) ToBgpConfigurationResponseOutputWithContext(ctx context.Context) BgpConfigurationResponseOutput {
	return o
}

func (o BgpConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[BgpConfigurationResponse] {
	return pulumix.Output[BgpConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
func (o BgpConfigurationResponseOutput) AllowAS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) *int { return v.AllowAS }).(pulumi.IntPtrOutput)
}

// Enable Or Disable state.
func (o BgpConfigurationResponseOutput) AllowASOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) *string { return v.AllowASOverride }).(pulumi.StringPtrOutput)
}

// Switch configuration description.
func (o BgpConfigurationResponseOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// BFD configuration properties
func (o BgpConfigurationResponseOutput) BfdConfiguration() BfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) *BfdConfigurationResponse { return v.BfdConfiguration }).(BfdConfigurationResponsePtrOutput)
}

// Originate a defaultRoute. Ex: "True" | "False".
func (o BgpConfigurationResponseOutput) DefaultRouteOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) *string { return v.DefaultRouteOriginate }).(pulumi.StringPtrOutput)
}

// ASN of Network Fabric. Example: 65048.
func (o BgpConfigurationResponseOutput) FabricASN() pulumi.IntOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) int { return v.FabricASN }).(pulumi.IntOutput)
}

// BGP Ipv4 ListenRange.
func (o BgpConfigurationResponseOutput) Ipv4ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) []string { return v.Ipv4ListenRangePrefixes }).(pulumi.StringArrayOutput)
}

// List with stringified ipv4NeighborAddresses.
func (o BgpConfigurationResponseOutput) Ipv4NeighborAddress() NeighborAddressResponseArrayOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) []NeighborAddressResponse { return v.Ipv4NeighborAddress }).(NeighborAddressResponseArrayOutput)
}

// BGP Ipv6 ListenRange.
func (o BgpConfigurationResponseOutput) Ipv6ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) []string { return v.Ipv6ListenRangePrefixes }).(pulumi.StringArrayOutput)
}

// List with stringified IPv6 Neighbor Address.
func (o BgpConfigurationResponseOutput) Ipv6NeighborAddress() NeighborAddressResponseArrayOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) []NeighborAddressResponse { return v.Ipv6NeighborAddress }).(NeighborAddressResponseArrayOutput)
}

// Peer ASN. Example: 65047.
func (o BgpConfigurationResponseOutput) PeerASN() pulumi.IntOutput {
	return o.ApplyT(func(v BgpConfigurationResponse) int { return v.PeerASN }).(pulumi.IntOutput)
}

type BgpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpConfigurationResponse)(nil)).Elem()
}

func (o BgpConfigurationResponsePtrOutput) ToBgpConfigurationResponsePtrOutput() BgpConfigurationResponsePtrOutput {
	return o
}

func (o BgpConfigurationResponsePtrOutput) ToBgpConfigurationResponsePtrOutputWithContext(ctx context.Context) BgpConfigurationResponsePtrOutput {
	return o
}

func (o BgpConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpConfigurationResponse] {
	return pulumix.Output[*BgpConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o BgpConfigurationResponsePtrOutput) Elem() BgpConfigurationResponseOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) BgpConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret BgpConfigurationResponse
		return ret
	}).(BgpConfigurationResponseOutput)
}

// Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.
func (o BgpConfigurationResponsePtrOutput) AllowAS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllowAS
	}).(pulumi.IntPtrOutput)
}

// Enable Or Disable state.
func (o BgpConfigurationResponsePtrOutput) AllowASOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AllowASOverride
	}).(pulumi.StringPtrOutput)
}

// Switch configuration description.
func (o BgpConfigurationResponsePtrOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Annotation
	}).(pulumi.StringPtrOutput)
}

// BFD configuration properties
func (o BgpConfigurationResponsePtrOutput) BfdConfiguration() BfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *BfdConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BfdConfiguration
	}).(BfdConfigurationResponsePtrOutput)
}

// Originate a defaultRoute. Ex: "True" | "False".
func (o BgpConfigurationResponsePtrOutput) DefaultRouteOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRouteOriginate
	}).(pulumi.StringPtrOutput)
}

// ASN of Network Fabric. Example: 65048.
func (o BgpConfigurationResponsePtrOutput) FabricASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FabricASN
	}).(pulumi.IntPtrOutput)
}

// BGP Ipv4 ListenRange.
func (o BgpConfigurationResponsePtrOutput) Ipv4ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Ipv4ListenRangePrefixes
	}).(pulumi.StringArrayOutput)
}

// List with stringified ipv4NeighborAddresses.
func (o BgpConfigurationResponsePtrOutput) Ipv4NeighborAddress() NeighborAddressResponseArrayOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) []NeighborAddressResponse {
		if v == nil {
			return nil
		}
		return v.Ipv4NeighborAddress
	}).(NeighborAddressResponseArrayOutput)
}

// BGP Ipv6 ListenRange.
func (o BgpConfigurationResponsePtrOutput) Ipv6ListenRangePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Ipv6ListenRangePrefixes
	}).(pulumi.StringArrayOutput)
}

// List with stringified IPv6 Neighbor Address.
func (o BgpConfigurationResponsePtrOutput) Ipv6NeighborAddress() NeighborAddressResponseArrayOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) []NeighborAddressResponse {
		if v == nil {
			return nil
		}
		return v.Ipv6NeighborAddress
	}).(NeighborAddressResponseArrayOutput)
}

// Peer ASN. Example: 65047.
func (o BgpConfigurationResponsePtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// Connected Subnet properties.
type ConnectedSubnet struct {
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Prefix of the connected Subnet.
	Prefix *string `pulumi:"prefix"`
}

// ConnectedSubnetInput is an input type that accepts ConnectedSubnetArgs and ConnectedSubnetOutput values.
// You can construct a concrete instance of `ConnectedSubnetInput` via:
//
//	ConnectedSubnetArgs{...}
type ConnectedSubnetInput interface {
	pulumi.Input

	ToConnectedSubnetOutput() ConnectedSubnetOutput
	ToConnectedSubnetOutputWithContext(context.Context) ConnectedSubnetOutput
}

// Connected Subnet properties.
type ConnectedSubnetArgs struct {
	// Switch configuration description.
	Annotation pulumi.StringPtrInput `pulumi:"annotation"`
	// Prefix of the connected Subnet.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ConnectedSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedSubnet)(nil)).Elem()
}

func (i ConnectedSubnetArgs) ToConnectedSubnetOutput() ConnectedSubnetOutput {
	return i.ToConnectedSubnetOutputWithContext(context.Background())
}

func (i ConnectedSubnetArgs) ToConnectedSubnetOutputWithContext(ctx context.Context) ConnectedSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedSubnetOutput)
}

func (i ConnectedSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectedSubnet] {
	return pulumix.Output[ConnectedSubnet]{
		OutputState: i.ToConnectedSubnetOutputWithContext(ctx).OutputState,
	}
}

// ConnectedSubnetArrayInput is an input type that accepts ConnectedSubnetArray and ConnectedSubnetArrayOutput values.
// You can construct a concrete instance of `ConnectedSubnetArrayInput` via:
//
//	ConnectedSubnetArray{ ConnectedSubnetArgs{...} }
type ConnectedSubnetArrayInput interface {
	pulumi.Input

	ToConnectedSubnetArrayOutput() ConnectedSubnetArrayOutput
	ToConnectedSubnetArrayOutputWithContext(context.Context) ConnectedSubnetArrayOutput
}

type ConnectedSubnetArray []ConnectedSubnetInput

func (ConnectedSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectedSubnet)(nil)).Elem()
}

func (i ConnectedSubnetArray) ToConnectedSubnetArrayOutput() ConnectedSubnetArrayOutput {
	return i.ToConnectedSubnetArrayOutputWithContext(context.Background())
}

func (i ConnectedSubnetArray) ToConnectedSubnetArrayOutputWithContext(ctx context.Context) ConnectedSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedSubnetArrayOutput)
}

func (i ConnectedSubnetArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectedSubnet] {
	return pulumix.Output[[]ConnectedSubnet]{
		OutputState: i.ToConnectedSubnetArrayOutputWithContext(ctx).OutputState,
	}
}

// Connected Subnet properties.
type ConnectedSubnetOutput struct{ *pulumi.OutputState }

func (ConnectedSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedSubnet)(nil)).Elem()
}

func (o ConnectedSubnetOutput) ToConnectedSubnetOutput() ConnectedSubnetOutput {
	return o
}

func (o ConnectedSubnetOutput) ToConnectedSubnetOutputWithContext(ctx context.Context) ConnectedSubnetOutput {
	return o
}

func (o ConnectedSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectedSubnet] {
	return pulumix.Output[ConnectedSubnet]{
		OutputState: o.OutputState,
	}
}

// Switch configuration description.
func (o ConnectedSubnetOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectedSubnet) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Prefix of the connected Subnet.
func (o ConnectedSubnetOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectedSubnet) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ConnectedSubnetArrayOutput struct{ *pulumi.OutputState }

func (ConnectedSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectedSubnet)(nil)).Elem()
}

func (o ConnectedSubnetArrayOutput) ToConnectedSubnetArrayOutput() ConnectedSubnetArrayOutput {
	return o
}

func (o ConnectedSubnetArrayOutput) ToConnectedSubnetArrayOutputWithContext(ctx context.Context) ConnectedSubnetArrayOutput {
	return o
}

func (o ConnectedSubnetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectedSubnet] {
	return pulumix.Output[[]ConnectedSubnet]{
		OutputState: o.OutputState,
	}
}

func (o ConnectedSubnetArrayOutput) Index(i pulumi.IntInput) ConnectedSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectedSubnet {
		return vs[0].([]ConnectedSubnet)[vs[1].(int)]
	}).(ConnectedSubnetOutput)
}

// Connected Subnet properties.
type ConnectedSubnetResponse struct {
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Prefix of the connected Subnet.
	Prefix *string `pulumi:"prefix"`
}

// Connected Subnet properties.
type ConnectedSubnetResponseOutput struct{ *pulumi.OutputState }

func (ConnectedSubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedSubnetResponse)(nil)).Elem()
}

func (o ConnectedSubnetResponseOutput) ToConnectedSubnetResponseOutput() ConnectedSubnetResponseOutput {
	return o
}

func (o ConnectedSubnetResponseOutput) ToConnectedSubnetResponseOutputWithContext(ctx context.Context) ConnectedSubnetResponseOutput {
	return o
}

func (o ConnectedSubnetResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectedSubnetResponse] {
	return pulumix.Output[ConnectedSubnetResponse]{
		OutputState: o.OutputState,
	}
}

// Switch configuration description.
func (o ConnectedSubnetResponseOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectedSubnetResponse) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Prefix of the connected Subnet.
func (o ConnectedSubnetResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectedSubnetResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ConnectedSubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectedSubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectedSubnetResponse)(nil)).Elem()
}

func (o ConnectedSubnetResponseArrayOutput) ToConnectedSubnetResponseArrayOutput() ConnectedSubnetResponseArrayOutput {
	return o
}

func (o ConnectedSubnetResponseArrayOutput) ToConnectedSubnetResponseArrayOutputWithContext(ctx context.Context) ConnectedSubnetResponseArrayOutput {
	return o
}

func (o ConnectedSubnetResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectedSubnetResponse] {
	return pulumix.Output[[]ConnectedSubnetResponse]{
		OutputState: o.OutputState,
	}
}

func (o ConnectedSubnetResponseArrayOutput) Index(i pulumi.IntInput) ConnectedSubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectedSubnetResponse {
		return vs[0].([]ConnectedSubnetResponse)[vs[1].(int)]
	}).(ConnectedSubnetResponseOutput)
}

// The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.
type ExpressRouteConnectionInformation struct {
	// Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.
	ExpressRouteAuthorizationKey string `pulumi:"expressRouteAuthorizationKey"`
	// The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.
	ExpressRouteCircuitId string `pulumi:"expressRouteCircuitId"`
}

// ExpressRouteConnectionInformationInput is an input type that accepts ExpressRouteConnectionInformationArgs and ExpressRouteConnectionInformationOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionInformationInput` via:
//
//	ExpressRouteConnectionInformationArgs{...}
type ExpressRouteConnectionInformationInput interface {
	pulumi.Input

	ToExpressRouteConnectionInformationOutput() ExpressRouteConnectionInformationOutput
	ToExpressRouteConnectionInformationOutputWithContext(context.Context) ExpressRouteConnectionInformationOutput
}

// The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.
type ExpressRouteConnectionInformationArgs struct {
	// Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.
	ExpressRouteAuthorizationKey pulumi.StringInput `pulumi:"expressRouteAuthorizationKey"`
	// The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.
	ExpressRouteCircuitId pulumi.StringInput `pulumi:"expressRouteCircuitId"`
}

func (ExpressRouteConnectionInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionInformation)(nil)).Elem()
}

func (i ExpressRouteConnectionInformationArgs) ToExpressRouteConnectionInformationOutput() ExpressRouteConnectionInformationOutput {
	return i.ToExpressRouteConnectionInformationOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionInformationArgs) ToExpressRouteConnectionInformationOutputWithContext(ctx context.Context) ExpressRouteConnectionInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionInformationOutput)
}

func (i ExpressRouteConnectionInformationArgs) ToOutput(ctx context.Context) pulumix.Output[ExpressRouteConnectionInformation] {
	return pulumix.Output[ExpressRouteConnectionInformation]{
		OutputState: i.ToExpressRouteConnectionInformationOutputWithContext(ctx).OutputState,
	}
}

// ExpressRouteConnectionInformationArrayInput is an input type that accepts ExpressRouteConnectionInformationArray and ExpressRouteConnectionInformationArrayOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionInformationArrayInput` via:
//
//	ExpressRouteConnectionInformationArray{ ExpressRouteConnectionInformationArgs{...} }
type ExpressRouteConnectionInformationArrayInput interface {
	pulumi.Input

	ToExpressRouteConnectionInformationArrayOutput() ExpressRouteConnectionInformationArrayOutput
	ToExpressRouteConnectionInformationArrayOutputWithContext(context.Context) ExpressRouteConnectionInformationArrayOutput
}

type ExpressRouteConnectionInformationArray []ExpressRouteConnectionInformationInput

func (ExpressRouteConnectionInformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionInformation)(nil)).Elem()
}

func (i ExpressRouteConnectionInformationArray) ToExpressRouteConnectionInformationArrayOutput() ExpressRouteConnectionInformationArrayOutput {
	return i.ToExpressRouteConnectionInformationArrayOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionInformationArray) ToExpressRouteConnectionInformationArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionInformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionInformationArrayOutput)
}

func (i ExpressRouteConnectionInformationArray) ToOutput(ctx context.Context) pulumix.Output[[]ExpressRouteConnectionInformation] {
	return pulumix.Output[[]ExpressRouteConnectionInformation]{
		OutputState: i.ToExpressRouteConnectionInformationArrayOutputWithContext(ctx).OutputState,
	}
}

// The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.
type ExpressRouteConnectionInformationOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionInformation)(nil)).Elem()
}

func (o ExpressRouteConnectionInformationOutput) ToExpressRouteConnectionInformationOutput() ExpressRouteConnectionInformationOutput {
	return o
}

func (o ExpressRouteConnectionInformationOutput) ToExpressRouteConnectionInformationOutputWithContext(ctx context.Context) ExpressRouteConnectionInformationOutput {
	return o
}

func (o ExpressRouteConnectionInformationOutput) ToOutput(ctx context.Context) pulumix.Output[ExpressRouteConnectionInformation] {
	return pulumix.Output[ExpressRouteConnectionInformation]{
		OutputState: o.OutputState,
	}
}

// Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.
func (o ExpressRouteConnectionInformationOutput) ExpressRouteAuthorizationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionInformation) string { return v.ExpressRouteAuthorizationKey }).(pulumi.StringOutput)
}

// The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.
func (o ExpressRouteConnectionInformationOutput) ExpressRouteCircuitId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionInformation) string { return v.ExpressRouteCircuitId }).(pulumi.StringOutput)
}

type ExpressRouteConnectionInformationArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionInformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionInformation)(nil)).Elem()
}

func (o ExpressRouteConnectionInformationArrayOutput) ToExpressRouteConnectionInformationArrayOutput() ExpressRouteConnectionInformationArrayOutput {
	return o
}

func (o ExpressRouteConnectionInformationArrayOutput) ToExpressRouteConnectionInformationArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionInformationArrayOutput {
	return o
}

func (o ExpressRouteConnectionInformationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ExpressRouteConnectionInformation] {
	return pulumix.Output[[]ExpressRouteConnectionInformation]{
		OutputState: o.OutputState,
	}
}

func (o ExpressRouteConnectionInformationArrayOutput) Index(i pulumi.IntInput) ExpressRouteConnectionInformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteConnectionInformation {
		return vs[0].([]ExpressRouteConnectionInformation)[vs[1].(int)]
	}).(ExpressRouteConnectionInformationOutput)
}

// The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.
type ExpressRouteConnectionInformationResponse struct {
	// Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.
	ExpressRouteAuthorizationKey string `pulumi:"expressRouteAuthorizationKey"`
	// The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.
	ExpressRouteCircuitId string `pulumi:"expressRouteCircuitId"`
}

// The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service.
type ExpressRouteConnectionInformationResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionInformationResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionInformationResponseOutput) ToExpressRouteConnectionInformationResponseOutput() ExpressRouteConnectionInformationResponseOutput {
	return o
}

func (o ExpressRouteConnectionInformationResponseOutput) ToExpressRouteConnectionInformationResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionInformationResponseOutput {
	return o
}

func (o ExpressRouteConnectionInformationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ExpressRouteConnectionInformationResponse] {
	return pulumix.Output[ExpressRouteConnectionInformationResponse]{
		OutputState: o.OutputState,
	}
}

// Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.
func (o ExpressRouteConnectionInformationResponseOutput) ExpressRouteAuthorizationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionInformationResponse) string { return v.ExpressRouteAuthorizationKey }).(pulumi.StringOutput)
}

// The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.
func (o ExpressRouteConnectionInformationResponseOutput) ExpressRouteCircuitId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionInformationResponse) string { return v.ExpressRouteCircuitId }).(pulumi.StringOutput)
}

type ExpressRouteConnectionInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionInformationResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionInformationResponseArrayOutput) ToExpressRouteConnectionInformationResponseArrayOutput() ExpressRouteConnectionInformationResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionInformationResponseArrayOutput) ToExpressRouteConnectionInformationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionInformationResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionInformationResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ExpressRouteConnectionInformationResponse] {
	return pulumix.Output[[]ExpressRouteConnectionInformationResponse]{
		OutputState: o.OutputState,
	}
}

func (o ExpressRouteConnectionInformationResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteConnectionInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteConnectionInformationResponse {
		return vs[0].([]ExpressRouteConnectionInformationResponse)[vs[1].(int)]
	}).(ExpressRouteConnectionInformationResponseOutput)
}

// option A properties object
type ExternalNetworkPropertiesOptionAProperties struct {
	// MTU to use for option A peering.
	Mtu *int `pulumi:"mtu"`
	// Peer ASN number.Example : 28
	PeerASN int `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix *string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix *string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// Vlan identifier. Example : 501
	VlanId int `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for ExternalNetworkPropertiesOptionAProperties
func (val *ExternalNetworkPropertiesOptionAProperties) Defaults() *ExternalNetworkPropertiesOptionAProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		mtu_ := 1500
		tmp.Mtu = &mtu_
	}
	return &tmp
}

// ExternalNetworkPropertiesOptionAPropertiesInput is an input type that accepts ExternalNetworkPropertiesOptionAPropertiesArgs and ExternalNetworkPropertiesOptionAPropertiesOutput values.
// You can construct a concrete instance of `ExternalNetworkPropertiesOptionAPropertiesInput` via:
//
//	ExternalNetworkPropertiesOptionAPropertiesArgs{...}
type ExternalNetworkPropertiesOptionAPropertiesInput interface {
	pulumi.Input

	ToExternalNetworkPropertiesOptionAPropertiesOutput() ExternalNetworkPropertiesOptionAPropertiesOutput
	ToExternalNetworkPropertiesOptionAPropertiesOutputWithContext(context.Context) ExternalNetworkPropertiesOptionAPropertiesOutput
}

// option A properties object
type ExternalNetworkPropertiesOptionAPropertiesArgs struct {
	// MTU to use for option A peering.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Peer ASN number.Example : 28
	PeerASN pulumi.IntInput `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix pulumi.StringPtrInput `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix pulumi.StringPtrInput `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv6Prefix"`
	// Vlan identifier. Example : 501
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for ExternalNetworkPropertiesOptionAPropertiesArgs
func (val *ExternalNetworkPropertiesOptionAPropertiesArgs) Defaults() *ExternalNetworkPropertiesOptionAPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		tmp.Mtu = pulumi.IntPtr(1500)
	}
	return &tmp
}
func (ExternalNetworkPropertiesOptionAPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkPropertiesOptionAProperties)(nil)).Elem()
}

func (i ExternalNetworkPropertiesOptionAPropertiesArgs) ToExternalNetworkPropertiesOptionAPropertiesOutput() ExternalNetworkPropertiesOptionAPropertiesOutput {
	return i.ToExternalNetworkPropertiesOptionAPropertiesOutputWithContext(context.Background())
}

func (i ExternalNetworkPropertiesOptionAPropertiesArgs) ToExternalNetworkPropertiesOptionAPropertiesOutputWithContext(ctx context.Context) ExternalNetworkPropertiesOptionAPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkPropertiesOptionAPropertiesOutput)
}

func (i ExternalNetworkPropertiesOptionAPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ExternalNetworkPropertiesOptionAProperties] {
	return pulumix.Output[ExternalNetworkPropertiesOptionAProperties]{
		OutputState: i.ToExternalNetworkPropertiesOptionAPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ExternalNetworkPropertiesOptionAPropertiesArgs) ToExternalNetworkPropertiesOptionAPropertiesPtrOutput() ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return i.ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(context.Background())
}

func (i ExternalNetworkPropertiesOptionAPropertiesArgs) ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(ctx context.Context) ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkPropertiesOptionAPropertiesOutput).ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(ctx)
}

// ExternalNetworkPropertiesOptionAPropertiesPtrInput is an input type that accepts ExternalNetworkPropertiesOptionAPropertiesArgs, ExternalNetworkPropertiesOptionAPropertiesPtr and ExternalNetworkPropertiesOptionAPropertiesPtrOutput values.
// You can construct a concrete instance of `ExternalNetworkPropertiesOptionAPropertiesPtrInput` via:
//
//	        ExternalNetworkPropertiesOptionAPropertiesArgs{...}
//
//	or:
//
//	        nil
type ExternalNetworkPropertiesOptionAPropertiesPtrInput interface {
	pulumi.Input

	ToExternalNetworkPropertiesOptionAPropertiesPtrOutput() ExternalNetworkPropertiesOptionAPropertiesPtrOutput
	ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(context.Context) ExternalNetworkPropertiesOptionAPropertiesPtrOutput
}

type externalNetworkPropertiesOptionAPropertiesPtrType ExternalNetworkPropertiesOptionAPropertiesArgs

func ExternalNetworkPropertiesOptionAPropertiesPtr(v *ExternalNetworkPropertiesOptionAPropertiesArgs) ExternalNetworkPropertiesOptionAPropertiesPtrInput {
	return (*externalNetworkPropertiesOptionAPropertiesPtrType)(v)
}

func (*externalNetworkPropertiesOptionAPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkPropertiesOptionAProperties)(nil)).Elem()
}

func (i *externalNetworkPropertiesOptionAPropertiesPtrType) ToExternalNetworkPropertiesOptionAPropertiesPtrOutput() ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return i.ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(context.Background())
}

func (i *externalNetworkPropertiesOptionAPropertiesPtrType) ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(ctx context.Context) ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkPropertiesOptionAPropertiesPtrOutput)
}

func (i *externalNetworkPropertiesOptionAPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ExternalNetworkPropertiesOptionAProperties] {
	return pulumix.Output[*ExternalNetworkPropertiesOptionAProperties]{
		OutputState: i.ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// option A properties object
type ExternalNetworkPropertiesOptionAPropertiesOutput struct{ *pulumi.OutputState }

func (ExternalNetworkPropertiesOptionAPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkPropertiesOptionAProperties)(nil)).Elem()
}

func (o ExternalNetworkPropertiesOptionAPropertiesOutput) ToExternalNetworkPropertiesOptionAPropertiesOutput() ExternalNetworkPropertiesOptionAPropertiesOutput {
	return o
}

func (o ExternalNetworkPropertiesOptionAPropertiesOutput) ToExternalNetworkPropertiesOptionAPropertiesOutputWithContext(ctx context.Context) ExternalNetworkPropertiesOptionAPropertiesOutput {
	return o
}

func (o ExternalNetworkPropertiesOptionAPropertiesOutput) ToExternalNetworkPropertiesOptionAPropertiesPtrOutput() ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return o.ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(context.Background())
}

func (o ExternalNetworkPropertiesOptionAPropertiesOutput) ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(ctx context.Context) ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalNetworkPropertiesOptionAProperties) *ExternalNetworkPropertiesOptionAProperties {
		return &v
	}).(ExternalNetworkPropertiesOptionAPropertiesPtrOutput)
}

func (o ExternalNetworkPropertiesOptionAPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ExternalNetworkPropertiesOptionAProperties] {
	return pulumix.Output[ExternalNetworkPropertiesOptionAProperties]{
		OutputState: o.OutputState,
	}
}

// MTU to use for option A peering.
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) PeerASN() pulumi.IntOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) int { return v.PeerASN }).(pulumi.IntOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) *string { return v.PrimaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) *string { return v.SecondaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o ExternalNetworkPropertiesOptionAPropertiesOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesOptionAProperties) int { return v.VlanId }).(pulumi.IntOutput)
}

type ExternalNetworkPropertiesOptionAPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExternalNetworkPropertiesOptionAPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkPropertiesOptionAProperties)(nil)).Elem()
}

func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) ToExternalNetworkPropertiesOptionAPropertiesPtrOutput() ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return o
}

func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) ToExternalNetworkPropertiesOptionAPropertiesPtrOutputWithContext(ctx context.Context) ExternalNetworkPropertiesOptionAPropertiesPtrOutput {
	return o
}

func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ExternalNetworkPropertiesOptionAProperties] {
	return pulumix.Output[*ExternalNetworkPropertiesOptionAProperties]{
		OutputState: o.OutputState,
	}
}

func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) Elem() ExternalNetworkPropertiesOptionAPropertiesOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) ExternalNetworkPropertiesOptionAProperties {
		if v != nil {
			return *v
		}
		var ret ExternalNetworkPropertiesOptionAProperties
		return ret
	}).(ExternalNetworkPropertiesOptionAPropertiesOutput)
}

// MTU to use for option A peering.
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return &v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o ExternalNetworkPropertiesOptionAPropertiesPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return &v.VlanId
	}).(pulumi.IntPtrOutput)
}

// option A properties object
type ExternalNetworkPropertiesResponseOptionAProperties struct {
	// BFD configuration properties
	BfdConfiguration *BfdConfigurationResponse `pulumi:"bfdConfiguration"`
	// Fabric ASN number. Example 65001
	FabricASN int `pulumi:"fabricASN"`
	// MTU to use for option A peering.
	Mtu *int `pulumi:"mtu"`
	// Peer ASN number.Example : 28
	PeerASN int `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix *string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix *string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// Vlan identifier. Example : 501
	VlanId int `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for ExternalNetworkPropertiesResponseOptionAProperties
func (val *ExternalNetworkPropertiesResponseOptionAProperties) Defaults() *ExternalNetworkPropertiesResponseOptionAProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		mtu_ := 1500
		tmp.Mtu = &mtu_
	}
	return &tmp
}

// option A properties object
type ExternalNetworkPropertiesResponseOptionAPropertiesOutput struct{ *pulumi.OutputState }

func (ExternalNetworkPropertiesResponseOptionAPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkPropertiesResponseOptionAProperties)(nil)).Elem()
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) ToExternalNetworkPropertiesResponseOptionAPropertiesOutput() ExternalNetworkPropertiesResponseOptionAPropertiesOutput {
	return o
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) ToExternalNetworkPropertiesResponseOptionAPropertiesOutputWithContext(ctx context.Context) ExternalNetworkPropertiesResponseOptionAPropertiesOutput {
	return o
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ExternalNetworkPropertiesResponseOptionAProperties] {
	return pulumix.Output[ExternalNetworkPropertiesResponseOptionAProperties]{
		OutputState: o.OutputState,
	}
}

// BFD configuration properties
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) BfdConfiguration() BfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) *BfdConfigurationResponse {
		return v.BfdConfiguration
	}).(BfdConfigurationResponsePtrOutput)
}

// Fabric ASN number. Example 65001
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) FabricASN() pulumi.IntOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) int { return v.FabricASN }).(pulumi.IntOutput)
}

// MTU to use for option A peering.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) PeerASN() pulumi.IntOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) int { return v.PeerASN }).(pulumi.IntOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) *string { return v.PrimaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) *string { return v.SecondaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o ExternalNetworkPropertiesResponseOptionAPropertiesOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v ExternalNetworkPropertiesResponseOptionAProperties) int { return v.VlanId }).(pulumi.IntOutput)
}

type ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkPropertiesResponseOptionAProperties)(nil)).Elem()
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) ToExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput() ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput {
	return o
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) ToExternalNetworkPropertiesResponseOptionAPropertiesPtrOutputWithContext(ctx context.Context) ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput {
	return o
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ExternalNetworkPropertiesResponseOptionAProperties] {
	return pulumix.Output[*ExternalNetworkPropertiesResponseOptionAProperties]{
		OutputState: o.OutputState,
	}
}

func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) Elem() ExternalNetworkPropertiesResponseOptionAPropertiesOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) ExternalNetworkPropertiesResponseOptionAProperties {
		if v != nil {
			return *v
		}
		var ret ExternalNetworkPropertiesResponseOptionAProperties
		return ret
	}).(ExternalNetworkPropertiesResponseOptionAPropertiesOutput)
}

// BFD configuration properties
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) BfdConfiguration() BfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *BfdConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BfdConfiguration
	}).(BfdConfigurationResponsePtrOutput)
}

// Fabric ASN number. Example 65001
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) FabricASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return &v.FabricASN
	}).(pulumi.IntPtrOutput)
}

// MTU to use for option A peering.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return &v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalNetworkPropertiesResponseOptionAProperties) *int {
		if v == nil {
			return nil
		}
		return &v.VlanId
	}).(pulumi.IntPtrOutput)
}

// BFD Configuration properties.
type FabricBfdConfigurationResponse struct {
	// interval in seconds. Example: 300.
	Interval int `pulumi:"interval"`
	// multiplier. Example: 3.
	Multiplier int `pulumi:"multiplier"`
}

// BFD Configuration properties.
type FabricBfdConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FabricBfdConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricBfdConfigurationResponse)(nil)).Elem()
}

func (o FabricBfdConfigurationResponseOutput) ToFabricBfdConfigurationResponseOutput() FabricBfdConfigurationResponseOutput {
	return o
}

func (o FabricBfdConfigurationResponseOutput) ToFabricBfdConfigurationResponseOutputWithContext(ctx context.Context) FabricBfdConfigurationResponseOutput {
	return o
}

func (o FabricBfdConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[FabricBfdConfigurationResponse] {
	return pulumix.Output[FabricBfdConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// interval in seconds. Example: 300.
func (o FabricBfdConfigurationResponseOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v FabricBfdConfigurationResponse) int { return v.Interval }).(pulumi.IntOutput)
}

// multiplier. Example: 3.
func (o FabricBfdConfigurationResponseOutput) Multiplier() pulumi.IntOutput {
	return o.ApplyT(func(v FabricBfdConfigurationResponse) int { return v.Multiplier }).(pulumi.IntOutput)
}

type FabricBfdConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FabricBfdConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricBfdConfigurationResponse)(nil)).Elem()
}

func (o FabricBfdConfigurationResponsePtrOutput) ToFabricBfdConfigurationResponsePtrOutput() FabricBfdConfigurationResponsePtrOutput {
	return o
}

func (o FabricBfdConfigurationResponsePtrOutput) ToFabricBfdConfigurationResponsePtrOutputWithContext(ctx context.Context) FabricBfdConfigurationResponsePtrOutput {
	return o
}

func (o FabricBfdConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FabricBfdConfigurationResponse] {
	return pulumix.Output[*FabricBfdConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o FabricBfdConfigurationResponsePtrOutput) Elem() FabricBfdConfigurationResponseOutput {
	return o.ApplyT(func(v *FabricBfdConfigurationResponse) FabricBfdConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret FabricBfdConfigurationResponse
		return ret
	}).(FabricBfdConfigurationResponseOutput)
}

// interval in seconds. Example: 300.
func (o FabricBfdConfigurationResponsePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FabricBfdConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// multiplier. Example: 3.
func (o FabricBfdConfigurationResponsePtrOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FabricBfdConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Multiplier
	}).(pulumi.IntPtrOutput)
}

// Option B configuration.
type FabricOptionBProperties struct {
	// Route Targets to be applied for outgoing routes from CE.
	ExportRouteTargets []string `pulumi:"exportRouteTargets"`
	// Route Targets to be applied for incoming routes into CE.
	ImportRouteTargets []string `pulumi:"importRouteTargets"`
}

// FabricOptionBPropertiesInput is an input type that accepts FabricOptionBPropertiesArgs and FabricOptionBPropertiesOutput values.
// You can construct a concrete instance of `FabricOptionBPropertiesInput` via:
//
//	FabricOptionBPropertiesArgs{...}
type FabricOptionBPropertiesInput interface {
	pulumi.Input

	ToFabricOptionBPropertiesOutput() FabricOptionBPropertiesOutput
	ToFabricOptionBPropertiesOutputWithContext(context.Context) FabricOptionBPropertiesOutput
}

// Option B configuration.
type FabricOptionBPropertiesArgs struct {
	// Route Targets to be applied for outgoing routes from CE.
	ExportRouteTargets pulumi.StringArrayInput `pulumi:"exportRouteTargets"`
	// Route Targets to be applied for incoming routes into CE.
	ImportRouteTargets pulumi.StringArrayInput `pulumi:"importRouteTargets"`
}

func (FabricOptionBPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricOptionBProperties)(nil)).Elem()
}

func (i FabricOptionBPropertiesArgs) ToFabricOptionBPropertiesOutput() FabricOptionBPropertiesOutput {
	return i.ToFabricOptionBPropertiesOutputWithContext(context.Background())
}

func (i FabricOptionBPropertiesArgs) ToFabricOptionBPropertiesOutputWithContext(ctx context.Context) FabricOptionBPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricOptionBPropertiesOutput)
}

func (i FabricOptionBPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[FabricOptionBProperties] {
	return pulumix.Output[FabricOptionBProperties]{
		OutputState: i.ToFabricOptionBPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i FabricOptionBPropertiesArgs) ToFabricOptionBPropertiesPtrOutput() FabricOptionBPropertiesPtrOutput {
	return i.ToFabricOptionBPropertiesPtrOutputWithContext(context.Background())
}

func (i FabricOptionBPropertiesArgs) ToFabricOptionBPropertiesPtrOutputWithContext(ctx context.Context) FabricOptionBPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricOptionBPropertiesOutput).ToFabricOptionBPropertiesPtrOutputWithContext(ctx)
}

// FabricOptionBPropertiesPtrInput is an input type that accepts FabricOptionBPropertiesArgs, FabricOptionBPropertiesPtr and FabricOptionBPropertiesPtrOutput values.
// You can construct a concrete instance of `FabricOptionBPropertiesPtrInput` via:
//
//	        FabricOptionBPropertiesArgs{...}
//
//	or:
//
//	        nil
type FabricOptionBPropertiesPtrInput interface {
	pulumi.Input

	ToFabricOptionBPropertiesPtrOutput() FabricOptionBPropertiesPtrOutput
	ToFabricOptionBPropertiesPtrOutputWithContext(context.Context) FabricOptionBPropertiesPtrOutput
}

type fabricOptionBPropertiesPtrType FabricOptionBPropertiesArgs

func FabricOptionBPropertiesPtr(v *FabricOptionBPropertiesArgs) FabricOptionBPropertiesPtrInput {
	return (*fabricOptionBPropertiesPtrType)(v)
}

func (*fabricOptionBPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricOptionBProperties)(nil)).Elem()
}

func (i *fabricOptionBPropertiesPtrType) ToFabricOptionBPropertiesPtrOutput() FabricOptionBPropertiesPtrOutput {
	return i.ToFabricOptionBPropertiesPtrOutputWithContext(context.Background())
}

func (i *fabricOptionBPropertiesPtrType) ToFabricOptionBPropertiesPtrOutputWithContext(ctx context.Context) FabricOptionBPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricOptionBPropertiesPtrOutput)
}

func (i *fabricOptionBPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*FabricOptionBProperties] {
	return pulumix.Output[*FabricOptionBProperties]{
		OutputState: i.ToFabricOptionBPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Option B configuration.
type FabricOptionBPropertiesOutput struct{ *pulumi.OutputState }

func (FabricOptionBPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricOptionBProperties)(nil)).Elem()
}

func (o FabricOptionBPropertiesOutput) ToFabricOptionBPropertiesOutput() FabricOptionBPropertiesOutput {
	return o
}

func (o FabricOptionBPropertiesOutput) ToFabricOptionBPropertiesOutputWithContext(ctx context.Context) FabricOptionBPropertiesOutput {
	return o
}

func (o FabricOptionBPropertiesOutput) ToFabricOptionBPropertiesPtrOutput() FabricOptionBPropertiesPtrOutput {
	return o.ToFabricOptionBPropertiesPtrOutputWithContext(context.Background())
}

func (o FabricOptionBPropertiesOutput) ToFabricOptionBPropertiesPtrOutputWithContext(ctx context.Context) FabricOptionBPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FabricOptionBProperties) *FabricOptionBProperties {
		return &v
	}).(FabricOptionBPropertiesPtrOutput)
}

func (o FabricOptionBPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[FabricOptionBProperties] {
	return pulumix.Output[FabricOptionBProperties]{
		OutputState: o.OutputState,
	}
}

// Route Targets to be applied for outgoing routes from CE.
func (o FabricOptionBPropertiesOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FabricOptionBProperties) []string { return v.ExportRouteTargets }).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o FabricOptionBPropertiesOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FabricOptionBProperties) []string { return v.ImportRouteTargets }).(pulumi.StringArrayOutput)
}

type FabricOptionBPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FabricOptionBPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricOptionBProperties)(nil)).Elem()
}

func (o FabricOptionBPropertiesPtrOutput) ToFabricOptionBPropertiesPtrOutput() FabricOptionBPropertiesPtrOutput {
	return o
}

func (o FabricOptionBPropertiesPtrOutput) ToFabricOptionBPropertiesPtrOutputWithContext(ctx context.Context) FabricOptionBPropertiesPtrOutput {
	return o
}

func (o FabricOptionBPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FabricOptionBProperties] {
	return pulumix.Output[*FabricOptionBProperties]{
		OutputState: o.OutputState,
	}
}

func (o FabricOptionBPropertiesPtrOutput) Elem() FabricOptionBPropertiesOutput {
	return o.ApplyT(func(v *FabricOptionBProperties) FabricOptionBProperties {
		if v != nil {
			return *v
		}
		var ret FabricOptionBProperties
		return ret
	}).(FabricOptionBPropertiesOutput)
}

// Route Targets to be applied for outgoing routes from CE.
func (o FabricOptionBPropertiesPtrOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FabricOptionBProperties) []string {
		if v == nil {
			return nil
		}
		return v.ExportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o FabricOptionBPropertiesPtrOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FabricOptionBProperties) []string {
		if v == nil {
			return nil
		}
		return v.ImportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Option B configuration.
type FabricOptionBPropertiesResponse struct {
	// Route Targets to be applied for outgoing routes from CE.
	ExportRouteTargets []string `pulumi:"exportRouteTargets"`
	// Route Targets to be applied for incoming routes into CE.
	ImportRouteTargets []string `pulumi:"importRouteTargets"`
}

// Option B configuration.
type FabricOptionBPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FabricOptionBPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricOptionBPropertiesResponse)(nil)).Elem()
}

func (o FabricOptionBPropertiesResponseOutput) ToFabricOptionBPropertiesResponseOutput() FabricOptionBPropertiesResponseOutput {
	return o
}

func (o FabricOptionBPropertiesResponseOutput) ToFabricOptionBPropertiesResponseOutputWithContext(ctx context.Context) FabricOptionBPropertiesResponseOutput {
	return o
}

func (o FabricOptionBPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[FabricOptionBPropertiesResponse] {
	return pulumix.Output[FabricOptionBPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Route Targets to be applied for outgoing routes from CE.
func (o FabricOptionBPropertiesResponseOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FabricOptionBPropertiesResponse) []string { return v.ExportRouteTargets }).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o FabricOptionBPropertiesResponseOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FabricOptionBPropertiesResponse) []string { return v.ImportRouteTargets }).(pulumi.StringArrayOutput)
}

type FabricOptionBPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FabricOptionBPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricOptionBPropertiesResponse)(nil)).Elem()
}

func (o FabricOptionBPropertiesResponsePtrOutput) ToFabricOptionBPropertiesResponsePtrOutput() FabricOptionBPropertiesResponsePtrOutput {
	return o
}

func (o FabricOptionBPropertiesResponsePtrOutput) ToFabricOptionBPropertiesResponsePtrOutputWithContext(ctx context.Context) FabricOptionBPropertiesResponsePtrOutput {
	return o
}

func (o FabricOptionBPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FabricOptionBPropertiesResponse] {
	return pulumix.Output[*FabricOptionBPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o FabricOptionBPropertiesResponsePtrOutput) Elem() FabricOptionBPropertiesResponseOutput {
	return o.ApplyT(func(v *FabricOptionBPropertiesResponse) FabricOptionBPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret FabricOptionBPropertiesResponse
		return ret
	}).(FabricOptionBPropertiesResponseOutput)
}

// Route Targets to be applied for outgoing routes from CE.
func (o FabricOptionBPropertiesResponsePtrOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FabricOptionBPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o FabricOptionBPropertiesResponsePtrOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FabricOptionBPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ImportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// InfrastructureServices IP ranges.
type InfrastructureServicesResponse struct {
	// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.
	Ipv4AddressSpaces []string `pulumi:"ipv4AddressSpaces"`
	// The IPv6 is not supported right now.
	Ipv6AddressSpaces []string `pulumi:"ipv6AddressSpaces"`
}

// InfrastructureServices IP ranges.
type InfrastructureServicesResponseOutput struct{ *pulumi.OutputState }

func (InfrastructureServicesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureServicesResponse)(nil)).Elem()
}

func (o InfrastructureServicesResponseOutput) ToInfrastructureServicesResponseOutput() InfrastructureServicesResponseOutput {
	return o
}

func (o InfrastructureServicesResponseOutput) ToInfrastructureServicesResponseOutputWithContext(ctx context.Context) InfrastructureServicesResponseOutput {
	return o
}

func (o InfrastructureServicesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[InfrastructureServicesResponse] {
	return pulumix.Output[InfrastructureServicesResponse]{
		OutputState: o.OutputState,
	}
}

// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.
func (o InfrastructureServicesResponseOutput) Ipv4AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InfrastructureServicesResponse) []string { return v.Ipv4AddressSpaces }).(pulumi.StringArrayOutput)
}

// The IPv6 is not supported right now.
func (o InfrastructureServicesResponseOutput) Ipv6AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InfrastructureServicesResponse) []string { return v.Ipv6AddressSpaces }).(pulumi.StringArrayOutput)
}

// IP Community ID list properties.
type IpCommunityIdList struct {
	// List of IP Community resource IDs.
	IpCommunityIds []string `pulumi:"ipCommunityIds"`
}

// IpCommunityIdListInput is an input type that accepts IpCommunityIdListArgs and IpCommunityIdListOutput values.
// You can construct a concrete instance of `IpCommunityIdListInput` via:
//
//	IpCommunityIdListArgs{...}
type IpCommunityIdListInput interface {
	pulumi.Input

	ToIpCommunityIdListOutput() IpCommunityIdListOutput
	ToIpCommunityIdListOutputWithContext(context.Context) IpCommunityIdListOutput
}

// IP Community ID list properties.
type IpCommunityIdListArgs struct {
	// List of IP Community resource IDs.
	IpCommunityIds pulumi.StringArrayInput `pulumi:"ipCommunityIds"`
}

func (IpCommunityIdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpCommunityIdList)(nil)).Elem()
}

func (i IpCommunityIdListArgs) ToIpCommunityIdListOutput() IpCommunityIdListOutput {
	return i.ToIpCommunityIdListOutputWithContext(context.Background())
}

func (i IpCommunityIdListArgs) ToIpCommunityIdListOutputWithContext(ctx context.Context) IpCommunityIdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpCommunityIdListOutput)
}

func (i IpCommunityIdListArgs) ToOutput(ctx context.Context) pulumix.Output[IpCommunityIdList] {
	return pulumix.Output[IpCommunityIdList]{
		OutputState: i.ToIpCommunityIdListOutputWithContext(ctx).OutputState,
	}
}

func (i IpCommunityIdListArgs) ToIpCommunityIdListPtrOutput() IpCommunityIdListPtrOutput {
	return i.ToIpCommunityIdListPtrOutputWithContext(context.Background())
}

func (i IpCommunityIdListArgs) ToIpCommunityIdListPtrOutputWithContext(ctx context.Context) IpCommunityIdListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpCommunityIdListOutput).ToIpCommunityIdListPtrOutputWithContext(ctx)
}

// IpCommunityIdListPtrInput is an input type that accepts IpCommunityIdListArgs, IpCommunityIdListPtr and IpCommunityIdListPtrOutput values.
// You can construct a concrete instance of `IpCommunityIdListPtrInput` via:
//
//	        IpCommunityIdListArgs{...}
//
//	or:
//
//	        nil
type IpCommunityIdListPtrInput interface {
	pulumi.Input

	ToIpCommunityIdListPtrOutput() IpCommunityIdListPtrOutput
	ToIpCommunityIdListPtrOutputWithContext(context.Context) IpCommunityIdListPtrOutput
}

type ipCommunityIdListPtrType IpCommunityIdListArgs

func IpCommunityIdListPtr(v *IpCommunityIdListArgs) IpCommunityIdListPtrInput {
	return (*ipCommunityIdListPtrType)(v)
}

func (*ipCommunityIdListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IpCommunityIdList)(nil)).Elem()
}

func (i *ipCommunityIdListPtrType) ToIpCommunityIdListPtrOutput() IpCommunityIdListPtrOutput {
	return i.ToIpCommunityIdListPtrOutputWithContext(context.Background())
}

func (i *ipCommunityIdListPtrType) ToIpCommunityIdListPtrOutputWithContext(ctx context.Context) IpCommunityIdListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpCommunityIdListPtrOutput)
}

func (i *ipCommunityIdListPtrType) ToOutput(ctx context.Context) pulumix.Output[*IpCommunityIdList] {
	return pulumix.Output[*IpCommunityIdList]{
		OutputState: i.ToIpCommunityIdListPtrOutputWithContext(ctx).OutputState,
	}
}

// IP Community ID list properties.
type IpCommunityIdListOutput struct{ *pulumi.OutputState }

func (IpCommunityIdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpCommunityIdList)(nil)).Elem()
}

func (o IpCommunityIdListOutput) ToIpCommunityIdListOutput() IpCommunityIdListOutput {
	return o
}

func (o IpCommunityIdListOutput) ToIpCommunityIdListOutputWithContext(ctx context.Context) IpCommunityIdListOutput {
	return o
}

func (o IpCommunityIdListOutput) ToIpCommunityIdListPtrOutput() IpCommunityIdListPtrOutput {
	return o.ToIpCommunityIdListPtrOutputWithContext(context.Background())
}

func (o IpCommunityIdListOutput) ToIpCommunityIdListPtrOutputWithContext(ctx context.Context) IpCommunityIdListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpCommunityIdList) *IpCommunityIdList {
		return &v
	}).(IpCommunityIdListPtrOutput)
}

func (o IpCommunityIdListOutput) ToOutput(ctx context.Context) pulumix.Output[IpCommunityIdList] {
	return pulumix.Output[IpCommunityIdList]{
		OutputState: o.OutputState,
	}
}

// List of IP Community resource IDs.
func (o IpCommunityIdListOutput) IpCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpCommunityIdList) []string { return v.IpCommunityIds }).(pulumi.StringArrayOutput)
}

type IpCommunityIdListPtrOutput struct{ *pulumi.OutputState }

func (IpCommunityIdListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpCommunityIdList)(nil)).Elem()
}

func (o IpCommunityIdListPtrOutput) ToIpCommunityIdListPtrOutput() IpCommunityIdListPtrOutput {
	return o
}

func (o IpCommunityIdListPtrOutput) ToIpCommunityIdListPtrOutputWithContext(ctx context.Context) IpCommunityIdListPtrOutput {
	return o
}

func (o IpCommunityIdListPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IpCommunityIdList] {
	return pulumix.Output[*IpCommunityIdList]{
		OutputState: o.OutputState,
	}
}

func (o IpCommunityIdListPtrOutput) Elem() IpCommunityIdListOutput {
	return o.ApplyT(func(v *IpCommunityIdList) IpCommunityIdList {
		if v != nil {
			return *v
		}
		var ret IpCommunityIdList
		return ret
	}).(IpCommunityIdListOutput)
}

// List of IP Community resource IDs.
func (o IpCommunityIdListPtrOutput) IpCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpCommunityIdList) []string {
		if v == nil {
			return nil
		}
		return v.IpCommunityIds
	}).(pulumi.StringArrayOutput)
}

// IP Community ID list properties.
type IpCommunityIdListResponse struct {
	// List of IP Community resource IDs.
	IpCommunityIds []string `pulumi:"ipCommunityIds"`
}

// IP Community ID list properties.
type IpCommunityIdListResponseOutput struct{ *pulumi.OutputState }

func (IpCommunityIdListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpCommunityIdListResponse)(nil)).Elem()
}

func (o IpCommunityIdListResponseOutput) ToIpCommunityIdListResponseOutput() IpCommunityIdListResponseOutput {
	return o
}

func (o IpCommunityIdListResponseOutput) ToIpCommunityIdListResponseOutputWithContext(ctx context.Context) IpCommunityIdListResponseOutput {
	return o
}

func (o IpCommunityIdListResponseOutput) ToOutput(ctx context.Context) pulumix.Output[IpCommunityIdListResponse] {
	return pulumix.Output[IpCommunityIdListResponse]{
		OutputState: o.OutputState,
	}
}

// List of IP Community resource IDs.
func (o IpCommunityIdListResponseOutput) IpCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpCommunityIdListResponse) []string { return v.IpCommunityIds }).(pulumi.StringArrayOutput)
}

type IpCommunityIdListResponsePtrOutput struct{ *pulumi.OutputState }

func (IpCommunityIdListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpCommunityIdListResponse)(nil)).Elem()
}

func (o IpCommunityIdListResponsePtrOutput) ToIpCommunityIdListResponsePtrOutput() IpCommunityIdListResponsePtrOutput {
	return o
}

func (o IpCommunityIdListResponsePtrOutput) ToIpCommunityIdListResponsePtrOutputWithContext(ctx context.Context) IpCommunityIdListResponsePtrOutput {
	return o
}

func (o IpCommunityIdListResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IpCommunityIdListResponse] {
	return pulumix.Output[*IpCommunityIdListResponse]{
		OutputState: o.OutputState,
	}
}

func (o IpCommunityIdListResponsePtrOutput) Elem() IpCommunityIdListResponseOutput {
	return o.ApplyT(func(v *IpCommunityIdListResponse) IpCommunityIdListResponse {
		if v != nil {
			return *v
		}
		var ret IpCommunityIdListResponse
		return ret
	}).(IpCommunityIdListResponseOutput)
}

// List of IP Community resource IDs.
func (o IpCommunityIdListResponsePtrOutput) IpCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpCommunityIdListResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpCommunityIds
	}).(pulumi.StringArrayOutput)
}

// IP Extended Community Id list properties.
type IpExtendedCommunityIdList struct {
	// List of IP Extended Community resource IDs.
	IpExtendedCommunityIds []string `pulumi:"ipExtendedCommunityIds"`
}

// IpExtendedCommunityIdListInput is an input type that accepts IpExtendedCommunityIdListArgs and IpExtendedCommunityIdListOutput values.
// You can construct a concrete instance of `IpExtendedCommunityIdListInput` via:
//
//	IpExtendedCommunityIdListArgs{...}
type IpExtendedCommunityIdListInput interface {
	pulumi.Input

	ToIpExtendedCommunityIdListOutput() IpExtendedCommunityIdListOutput
	ToIpExtendedCommunityIdListOutputWithContext(context.Context) IpExtendedCommunityIdListOutput
}

// IP Extended Community Id list properties.
type IpExtendedCommunityIdListArgs struct {
	// List of IP Extended Community resource IDs.
	IpExtendedCommunityIds pulumi.StringArrayInput `pulumi:"ipExtendedCommunityIds"`
}

func (IpExtendedCommunityIdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpExtendedCommunityIdList)(nil)).Elem()
}

func (i IpExtendedCommunityIdListArgs) ToIpExtendedCommunityIdListOutput() IpExtendedCommunityIdListOutput {
	return i.ToIpExtendedCommunityIdListOutputWithContext(context.Background())
}

func (i IpExtendedCommunityIdListArgs) ToIpExtendedCommunityIdListOutputWithContext(ctx context.Context) IpExtendedCommunityIdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpExtendedCommunityIdListOutput)
}

func (i IpExtendedCommunityIdListArgs) ToOutput(ctx context.Context) pulumix.Output[IpExtendedCommunityIdList] {
	return pulumix.Output[IpExtendedCommunityIdList]{
		OutputState: i.ToIpExtendedCommunityIdListOutputWithContext(ctx).OutputState,
	}
}

func (i IpExtendedCommunityIdListArgs) ToIpExtendedCommunityIdListPtrOutput() IpExtendedCommunityIdListPtrOutput {
	return i.ToIpExtendedCommunityIdListPtrOutputWithContext(context.Background())
}

func (i IpExtendedCommunityIdListArgs) ToIpExtendedCommunityIdListPtrOutputWithContext(ctx context.Context) IpExtendedCommunityIdListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpExtendedCommunityIdListOutput).ToIpExtendedCommunityIdListPtrOutputWithContext(ctx)
}

// IpExtendedCommunityIdListPtrInput is an input type that accepts IpExtendedCommunityIdListArgs, IpExtendedCommunityIdListPtr and IpExtendedCommunityIdListPtrOutput values.
// You can construct a concrete instance of `IpExtendedCommunityIdListPtrInput` via:
//
//	        IpExtendedCommunityIdListArgs{...}
//
//	or:
//
//	        nil
type IpExtendedCommunityIdListPtrInput interface {
	pulumi.Input

	ToIpExtendedCommunityIdListPtrOutput() IpExtendedCommunityIdListPtrOutput
	ToIpExtendedCommunityIdListPtrOutputWithContext(context.Context) IpExtendedCommunityIdListPtrOutput
}

type ipExtendedCommunityIdListPtrType IpExtendedCommunityIdListArgs

func IpExtendedCommunityIdListPtr(v *IpExtendedCommunityIdListArgs) IpExtendedCommunityIdListPtrInput {
	return (*ipExtendedCommunityIdListPtrType)(v)
}

func (*ipExtendedCommunityIdListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IpExtendedCommunityIdList)(nil)).Elem()
}

func (i *ipExtendedCommunityIdListPtrType) ToIpExtendedCommunityIdListPtrOutput() IpExtendedCommunityIdListPtrOutput {
	return i.ToIpExtendedCommunityIdListPtrOutputWithContext(context.Background())
}

func (i *ipExtendedCommunityIdListPtrType) ToIpExtendedCommunityIdListPtrOutputWithContext(ctx context.Context) IpExtendedCommunityIdListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpExtendedCommunityIdListPtrOutput)
}

func (i *ipExtendedCommunityIdListPtrType) ToOutput(ctx context.Context) pulumix.Output[*IpExtendedCommunityIdList] {
	return pulumix.Output[*IpExtendedCommunityIdList]{
		OutputState: i.ToIpExtendedCommunityIdListPtrOutputWithContext(ctx).OutputState,
	}
}

// IP Extended Community Id list properties.
type IpExtendedCommunityIdListOutput struct{ *pulumi.OutputState }

func (IpExtendedCommunityIdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpExtendedCommunityIdList)(nil)).Elem()
}

func (o IpExtendedCommunityIdListOutput) ToIpExtendedCommunityIdListOutput() IpExtendedCommunityIdListOutput {
	return o
}

func (o IpExtendedCommunityIdListOutput) ToIpExtendedCommunityIdListOutputWithContext(ctx context.Context) IpExtendedCommunityIdListOutput {
	return o
}

func (o IpExtendedCommunityIdListOutput) ToIpExtendedCommunityIdListPtrOutput() IpExtendedCommunityIdListPtrOutput {
	return o.ToIpExtendedCommunityIdListPtrOutputWithContext(context.Background())
}

func (o IpExtendedCommunityIdListOutput) ToIpExtendedCommunityIdListPtrOutputWithContext(ctx context.Context) IpExtendedCommunityIdListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpExtendedCommunityIdList) *IpExtendedCommunityIdList {
		return &v
	}).(IpExtendedCommunityIdListPtrOutput)
}

func (o IpExtendedCommunityIdListOutput) ToOutput(ctx context.Context) pulumix.Output[IpExtendedCommunityIdList] {
	return pulumix.Output[IpExtendedCommunityIdList]{
		OutputState: o.OutputState,
	}
}

// List of IP Extended Community resource IDs.
func (o IpExtendedCommunityIdListOutput) IpExtendedCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpExtendedCommunityIdList) []string { return v.IpExtendedCommunityIds }).(pulumi.StringArrayOutput)
}

type IpExtendedCommunityIdListPtrOutput struct{ *pulumi.OutputState }

func (IpExtendedCommunityIdListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpExtendedCommunityIdList)(nil)).Elem()
}

func (o IpExtendedCommunityIdListPtrOutput) ToIpExtendedCommunityIdListPtrOutput() IpExtendedCommunityIdListPtrOutput {
	return o
}

func (o IpExtendedCommunityIdListPtrOutput) ToIpExtendedCommunityIdListPtrOutputWithContext(ctx context.Context) IpExtendedCommunityIdListPtrOutput {
	return o
}

func (o IpExtendedCommunityIdListPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IpExtendedCommunityIdList] {
	return pulumix.Output[*IpExtendedCommunityIdList]{
		OutputState: o.OutputState,
	}
}

func (o IpExtendedCommunityIdListPtrOutput) Elem() IpExtendedCommunityIdListOutput {
	return o.ApplyT(func(v *IpExtendedCommunityIdList) IpExtendedCommunityIdList {
		if v != nil {
			return *v
		}
		var ret IpExtendedCommunityIdList
		return ret
	}).(IpExtendedCommunityIdListOutput)
}

// List of IP Extended Community resource IDs.
func (o IpExtendedCommunityIdListPtrOutput) IpExtendedCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpExtendedCommunityIdList) []string {
		if v == nil {
			return nil
		}
		return v.IpExtendedCommunityIds
	}).(pulumi.StringArrayOutput)
}

// IP Extended Community Id list properties.
type IpExtendedCommunityIdListResponse struct {
	// List of IP Extended Community resource IDs.
	IpExtendedCommunityIds []string `pulumi:"ipExtendedCommunityIds"`
}

// IP Extended Community Id list properties.
type IpExtendedCommunityIdListResponseOutput struct{ *pulumi.OutputState }

func (IpExtendedCommunityIdListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpExtendedCommunityIdListResponse)(nil)).Elem()
}

func (o IpExtendedCommunityIdListResponseOutput) ToIpExtendedCommunityIdListResponseOutput() IpExtendedCommunityIdListResponseOutput {
	return o
}

func (o IpExtendedCommunityIdListResponseOutput) ToIpExtendedCommunityIdListResponseOutputWithContext(ctx context.Context) IpExtendedCommunityIdListResponseOutput {
	return o
}

func (o IpExtendedCommunityIdListResponseOutput) ToOutput(ctx context.Context) pulumix.Output[IpExtendedCommunityIdListResponse] {
	return pulumix.Output[IpExtendedCommunityIdListResponse]{
		OutputState: o.OutputState,
	}
}

// List of IP Extended Community resource IDs.
func (o IpExtendedCommunityIdListResponseOutput) IpExtendedCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpExtendedCommunityIdListResponse) []string { return v.IpExtendedCommunityIds }).(pulumi.StringArrayOutput)
}

type IpExtendedCommunityIdListResponsePtrOutput struct{ *pulumi.OutputState }

func (IpExtendedCommunityIdListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpExtendedCommunityIdListResponse)(nil)).Elem()
}

func (o IpExtendedCommunityIdListResponsePtrOutput) ToIpExtendedCommunityIdListResponsePtrOutput() IpExtendedCommunityIdListResponsePtrOutput {
	return o
}

func (o IpExtendedCommunityIdListResponsePtrOutput) ToIpExtendedCommunityIdListResponsePtrOutputWithContext(ctx context.Context) IpExtendedCommunityIdListResponsePtrOutput {
	return o
}

func (o IpExtendedCommunityIdListResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IpExtendedCommunityIdListResponse] {
	return pulumix.Output[*IpExtendedCommunityIdListResponse]{
		OutputState: o.OutputState,
	}
}

func (o IpExtendedCommunityIdListResponsePtrOutput) Elem() IpExtendedCommunityIdListResponseOutput {
	return o.ApplyT(func(v *IpExtendedCommunityIdListResponse) IpExtendedCommunityIdListResponse {
		if v != nil {
			return *v
		}
		var ret IpExtendedCommunityIdListResponse
		return ret
	}).(IpExtendedCommunityIdListResponseOutput)
}

// List of IP Extended Community resource IDs.
func (o IpExtendedCommunityIdListResponsePtrOutput) IpExtendedCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpExtendedCommunityIdListResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpExtendedCommunityIds
	}).(pulumi.StringArrayOutput)
}

type IpPrefixPropertiesIpPrefixRules struct {
	// Action to be taken on the configuration. Example: Permit | Deny.
	Action string `pulumi:"action"`
	// Specify prefix-list bounds.
	Condition *string `pulumi:"condition"`
	// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
	NetworkPrefix string `pulumi:"networkPrefix"`
	// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
	SequenceNumber float64 `pulumi:"sequenceNumber"`
	// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
	SubnetMaskLength *int `pulumi:"subnetMaskLength"`
}

// IpPrefixPropertiesIpPrefixRulesInput is an input type that accepts IpPrefixPropertiesIpPrefixRulesArgs and IpPrefixPropertiesIpPrefixRulesOutput values.
// You can construct a concrete instance of `IpPrefixPropertiesIpPrefixRulesInput` via:
//
//	IpPrefixPropertiesIpPrefixRulesArgs{...}
type IpPrefixPropertiesIpPrefixRulesInput interface {
	pulumi.Input

	ToIpPrefixPropertiesIpPrefixRulesOutput() IpPrefixPropertiesIpPrefixRulesOutput
	ToIpPrefixPropertiesIpPrefixRulesOutputWithContext(context.Context) IpPrefixPropertiesIpPrefixRulesOutput
}

type IpPrefixPropertiesIpPrefixRulesArgs struct {
	// Action to be taken on the configuration. Example: Permit | Deny.
	Action pulumi.StringInput `pulumi:"action"`
	// Specify prefix-list bounds.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
	NetworkPrefix pulumi.StringInput `pulumi:"networkPrefix"`
	// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
	SequenceNumber pulumi.Float64Input `pulumi:"sequenceNumber"`
	// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
	SubnetMaskLength pulumi.IntPtrInput `pulumi:"subnetMaskLength"`
}

func (IpPrefixPropertiesIpPrefixRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpPrefixPropertiesIpPrefixRules)(nil)).Elem()
}

func (i IpPrefixPropertiesIpPrefixRulesArgs) ToIpPrefixPropertiesIpPrefixRulesOutput() IpPrefixPropertiesIpPrefixRulesOutput {
	return i.ToIpPrefixPropertiesIpPrefixRulesOutputWithContext(context.Background())
}

func (i IpPrefixPropertiesIpPrefixRulesArgs) ToIpPrefixPropertiesIpPrefixRulesOutputWithContext(ctx context.Context) IpPrefixPropertiesIpPrefixRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpPrefixPropertiesIpPrefixRulesOutput)
}

func (i IpPrefixPropertiesIpPrefixRulesArgs) ToOutput(ctx context.Context) pulumix.Output[IpPrefixPropertiesIpPrefixRules] {
	return pulumix.Output[IpPrefixPropertiesIpPrefixRules]{
		OutputState: i.ToIpPrefixPropertiesIpPrefixRulesOutputWithContext(ctx).OutputState,
	}
}

// IpPrefixPropertiesIpPrefixRulesArrayInput is an input type that accepts IpPrefixPropertiesIpPrefixRulesArray and IpPrefixPropertiesIpPrefixRulesArrayOutput values.
// You can construct a concrete instance of `IpPrefixPropertiesIpPrefixRulesArrayInput` via:
//
//	IpPrefixPropertiesIpPrefixRulesArray{ IpPrefixPropertiesIpPrefixRulesArgs{...} }
type IpPrefixPropertiesIpPrefixRulesArrayInput interface {
	pulumi.Input

	ToIpPrefixPropertiesIpPrefixRulesArrayOutput() IpPrefixPropertiesIpPrefixRulesArrayOutput
	ToIpPrefixPropertiesIpPrefixRulesArrayOutputWithContext(context.Context) IpPrefixPropertiesIpPrefixRulesArrayOutput
}

type IpPrefixPropertiesIpPrefixRulesArray []IpPrefixPropertiesIpPrefixRulesInput

func (IpPrefixPropertiesIpPrefixRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpPrefixPropertiesIpPrefixRules)(nil)).Elem()
}

func (i IpPrefixPropertiesIpPrefixRulesArray) ToIpPrefixPropertiesIpPrefixRulesArrayOutput() IpPrefixPropertiesIpPrefixRulesArrayOutput {
	return i.ToIpPrefixPropertiesIpPrefixRulesArrayOutputWithContext(context.Background())
}

func (i IpPrefixPropertiesIpPrefixRulesArray) ToIpPrefixPropertiesIpPrefixRulesArrayOutputWithContext(ctx context.Context) IpPrefixPropertiesIpPrefixRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpPrefixPropertiesIpPrefixRulesArrayOutput)
}

func (i IpPrefixPropertiesIpPrefixRulesArray) ToOutput(ctx context.Context) pulumix.Output[[]IpPrefixPropertiesIpPrefixRules] {
	return pulumix.Output[[]IpPrefixPropertiesIpPrefixRules]{
		OutputState: i.ToIpPrefixPropertiesIpPrefixRulesArrayOutputWithContext(ctx).OutputState,
	}
}

type IpPrefixPropertiesIpPrefixRulesOutput struct{ *pulumi.OutputState }

func (IpPrefixPropertiesIpPrefixRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpPrefixPropertiesIpPrefixRules)(nil)).Elem()
}

func (o IpPrefixPropertiesIpPrefixRulesOutput) ToIpPrefixPropertiesIpPrefixRulesOutput() IpPrefixPropertiesIpPrefixRulesOutput {
	return o
}

func (o IpPrefixPropertiesIpPrefixRulesOutput) ToIpPrefixPropertiesIpPrefixRulesOutputWithContext(ctx context.Context) IpPrefixPropertiesIpPrefixRulesOutput {
	return o
}

func (o IpPrefixPropertiesIpPrefixRulesOutput) ToOutput(ctx context.Context) pulumix.Output[IpPrefixPropertiesIpPrefixRules] {
	return pulumix.Output[IpPrefixPropertiesIpPrefixRules]{
		OutputState: o.OutputState,
	}
}

// Action to be taken on the configuration. Example: Permit | Deny.
func (o IpPrefixPropertiesIpPrefixRulesOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IpPrefixPropertiesIpPrefixRules) string { return v.Action }).(pulumi.StringOutput)
}

// Specify prefix-list bounds.
func (o IpPrefixPropertiesIpPrefixRulesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpPrefixPropertiesIpPrefixRules) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
func (o IpPrefixPropertiesIpPrefixRulesOutput) NetworkPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v IpPrefixPropertiesIpPrefixRules) string { return v.NetworkPrefix }).(pulumi.StringOutput)
}

// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
func (o IpPrefixPropertiesIpPrefixRulesOutput) SequenceNumber() pulumi.Float64Output {
	return o.ApplyT(func(v IpPrefixPropertiesIpPrefixRules) float64 { return v.SequenceNumber }).(pulumi.Float64Output)
}

// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
func (o IpPrefixPropertiesIpPrefixRulesOutput) SubnetMaskLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpPrefixPropertiesIpPrefixRules) *int { return v.SubnetMaskLength }).(pulumi.IntPtrOutput)
}

type IpPrefixPropertiesIpPrefixRulesArrayOutput struct{ *pulumi.OutputState }

func (IpPrefixPropertiesIpPrefixRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpPrefixPropertiesIpPrefixRules)(nil)).Elem()
}

func (o IpPrefixPropertiesIpPrefixRulesArrayOutput) ToIpPrefixPropertiesIpPrefixRulesArrayOutput() IpPrefixPropertiesIpPrefixRulesArrayOutput {
	return o
}

func (o IpPrefixPropertiesIpPrefixRulesArrayOutput) ToIpPrefixPropertiesIpPrefixRulesArrayOutputWithContext(ctx context.Context) IpPrefixPropertiesIpPrefixRulesArrayOutput {
	return o
}

func (o IpPrefixPropertiesIpPrefixRulesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpPrefixPropertiesIpPrefixRules] {
	return pulumix.Output[[]IpPrefixPropertiesIpPrefixRules]{
		OutputState: o.OutputState,
	}
}

func (o IpPrefixPropertiesIpPrefixRulesArrayOutput) Index(i pulumi.IntInput) IpPrefixPropertiesIpPrefixRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpPrefixPropertiesIpPrefixRules {
		return vs[0].([]IpPrefixPropertiesIpPrefixRules)[vs[1].(int)]
	}).(IpPrefixPropertiesIpPrefixRulesOutput)
}

type IpPrefixPropertiesResponseIpPrefixRules struct {
	// Action to be taken on the configuration. Example: Permit | Deny.
	Action string `pulumi:"action"`
	// Specify prefix-list bounds.
	Condition *string `pulumi:"condition"`
	// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
	NetworkPrefix string `pulumi:"networkPrefix"`
	// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
	SequenceNumber float64 `pulumi:"sequenceNumber"`
	// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
	SubnetMaskLength *int `pulumi:"subnetMaskLength"`
}

type IpPrefixPropertiesResponseIpPrefixRulesOutput struct{ *pulumi.OutputState }

func (IpPrefixPropertiesResponseIpPrefixRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpPrefixPropertiesResponseIpPrefixRules)(nil)).Elem()
}

func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) ToIpPrefixPropertiesResponseIpPrefixRulesOutput() IpPrefixPropertiesResponseIpPrefixRulesOutput {
	return o
}

func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) ToIpPrefixPropertiesResponseIpPrefixRulesOutputWithContext(ctx context.Context) IpPrefixPropertiesResponseIpPrefixRulesOutput {
	return o
}

func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) ToOutput(ctx context.Context) pulumix.Output[IpPrefixPropertiesResponseIpPrefixRules] {
	return pulumix.Output[IpPrefixPropertiesResponseIpPrefixRules]{
		OutputState: o.OutputState,
	}
}

// Action to be taken on the configuration. Example: Permit | Deny.
func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IpPrefixPropertiesResponseIpPrefixRules) string { return v.Action }).(pulumi.StringOutput)
}

// Specify prefix-list bounds.
func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpPrefixPropertiesResponseIpPrefixRules) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) NetworkPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v IpPrefixPropertiesResponseIpPrefixRules) string { return v.NetworkPrefix }).(pulumi.StringOutput)
}

// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.
func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) SequenceNumber() pulumi.Float64Output {
	return o.ApplyT(func(v IpPrefixPropertiesResponseIpPrefixRules) float64 { return v.SequenceNumber }).(pulumi.Float64Output)
}

// SubnetMaskLength gives the minimum NetworkPrefix length to be matched.Possible values for IPv4 are 1 - 32. Possible values of IPv6 are 1 - 128.
func (o IpPrefixPropertiesResponseIpPrefixRulesOutput) SubnetMaskLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpPrefixPropertiesResponseIpPrefixRules) *int { return v.SubnetMaskLength }).(pulumi.IntPtrOutput)
}

type IpPrefixPropertiesResponseIpPrefixRulesArrayOutput struct{ *pulumi.OutputState }

func (IpPrefixPropertiesResponseIpPrefixRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpPrefixPropertiesResponseIpPrefixRules)(nil)).Elem()
}

func (o IpPrefixPropertiesResponseIpPrefixRulesArrayOutput) ToIpPrefixPropertiesResponseIpPrefixRulesArrayOutput() IpPrefixPropertiesResponseIpPrefixRulesArrayOutput {
	return o
}

func (o IpPrefixPropertiesResponseIpPrefixRulesArrayOutput) ToIpPrefixPropertiesResponseIpPrefixRulesArrayOutputWithContext(ctx context.Context) IpPrefixPropertiesResponseIpPrefixRulesArrayOutput {
	return o
}

func (o IpPrefixPropertiesResponseIpPrefixRulesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpPrefixPropertiesResponseIpPrefixRules] {
	return pulumix.Output[[]IpPrefixPropertiesResponseIpPrefixRules]{
		OutputState: o.OutputState,
	}
}

func (o IpPrefixPropertiesResponseIpPrefixRulesArrayOutput) Index(i pulumi.IntInput) IpPrefixPropertiesResponseIpPrefixRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpPrefixPropertiesResponseIpPrefixRules {
		return vs[0].([]IpPrefixPropertiesResponseIpPrefixRules)[vs[1].(int)]
	}).(IpPrefixPropertiesResponseIpPrefixRulesOutput)
}

// Connected Subnet RoutePolicy
type L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy struct {
	// exportRoutePolicyId value.
	ExportRoutePolicyId *string `pulumi:"exportRoutePolicyId"`
}

// L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyInput is an input type that accepts L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs and L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput values.
// You can construct a concrete instance of `L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyInput` via:
//
//	L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs{...}
type L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyInput interface {
	pulumi.Input

	ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput
	ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutputWithContext(context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput
}

// Connected Subnet RoutePolicy
type L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs struct {
	// exportRoutePolicyId value.
	ExportRoutePolicyId pulumi.StringPtrInput `pulumi:"exportRoutePolicyId"`
}

func (L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy)(nil)).Elem()
}

func (i L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput {
	return i.ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutputWithContext(context.Background())
}

func (i L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput)
}

func (i L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) ToOutput(ctx context.Context) pulumix.Output[L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy] {
	return pulumix.Output[L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy]{
		OutputState: i.ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutputWithContext(ctx).OutputState,
	}
}

func (i L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return i.ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(context.Background())
}

func (i L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput).ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(ctx)
}

// L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrInput is an input type that accepts L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs, L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtr and L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput values.
// You can construct a concrete instance of `L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrInput` via:
//
//	        L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs{...}
//
//	or:
//
//	        nil
type L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrInput interface {
	pulumi.Input

	ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput
	ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput
}

type l3isolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrType L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs

func L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtr(v *L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyArgs) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrInput {
	return (*l3isolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrType)(v)
}

func (*l3isolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy)(nil)).Elem()
}

func (i *l3isolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrType) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return i.ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(context.Background())
}

func (i *l3isolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrType) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput)
}

func (i *l3isolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy] {
	return pulumix.Output[*L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy]{
		OutputState: i.ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(ctx).OutputState,
	}
}

// Connected Subnet RoutePolicy
type L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput struct{ *pulumi.OutputState }

func (L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy)(nil)).Elem()
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return o.ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(context.Background())
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy) *L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy {
		return &v
	}).(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput)
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy] {
	return pulumix.Output[L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy]{
		OutputState: o.OutputState,
	}
}

// exportRoutePolicyId value.
func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy) *string {
		return v.ExportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

type L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput struct{ *pulumi.OutputState }

func (L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy)(nil)).Elem()
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput) ToL3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy] {
	return pulumix.Output[*L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy]{
		OutputState: o.OutputState,
	}
}

func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput) Elem() L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput {
	return o.ApplyT(func(v *L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy) L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy {
		if v != nil {
			return *v
		}
		var ret L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy
		return ret
	}).(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput)
}

// exportRoutePolicyId value.
func (o L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicy) *string {
		if v == nil {
			return nil
		}
		return v.ExportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

// Connected Subnet RoutePolicy
type L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy struct {
	// Enabled/Disabled connected subnet route policy. Ex: Enabled | Disabled.
	AdministrativeState string `pulumi:"administrativeState"`
	// exportRoutePolicyId value.
	ExportRoutePolicyId *string `pulumi:"exportRoutePolicyId"`
}

// Connected Subnet RoutePolicy
type L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput struct{ *pulumi.OutputState }

func (L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy)(nil)).Elem()
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput) ToL3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput() L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput) ToL3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy] {
	return pulumix.Output[L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy]{
		OutputState: o.OutputState,
	}
}

// Enabled/Disabled connected subnet route policy. Ex: Enabled | Disabled.
func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy) string {
		return v.AdministrativeState
	}).(pulumi.StringOutput)
}

// exportRoutePolicyId value.
func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy) *string {
		return v.ExportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

type L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput struct{ *pulumi.OutputState }

func (L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy)(nil)).Elem()
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) ToL3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput() L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) ToL3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutputWithContext(ctx context.Context) L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput {
	return o
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy] {
	return pulumix.Output[*L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy]{
		OutputState: o.OutputState,
	}
}

func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) Elem() L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput {
	return o.ApplyT(func(v *L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy) L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy {
		if v != nil {
			return *v
		}
		var ret L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy
		return ret
	}).(L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput)
}

// Enabled/Disabled connected subnet route policy. Ex: Enabled | Disabled.
func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) AdministrativeState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.AdministrativeState
	}).(pulumi.StringPtrOutput)
}

// exportRoutePolicyId value.
func (o L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicy) *string {
		if v == nil {
			return nil
		}
		return v.ExportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

// layer2Configuration
type Layer2Configuration struct {
	// MTU of the packets between PE & CE.
	Mtu int `pulumi:"mtu"`
	// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
	PortCount *int `pulumi:"portCount"`
}

// Defaults sets the appropriate defaults for Layer2Configuration
func (val *Layer2Configuration) Defaults() *Layer2Configuration {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Mtu) {
		tmp.Mtu = 1500
	}
	return &tmp
}

// Layer2ConfigurationInput is an input type that accepts Layer2ConfigurationArgs and Layer2ConfigurationOutput values.
// You can construct a concrete instance of `Layer2ConfigurationInput` via:
//
//	Layer2ConfigurationArgs{...}
type Layer2ConfigurationInput interface {
	pulumi.Input

	ToLayer2ConfigurationOutput() Layer2ConfigurationOutput
	ToLayer2ConfigurationOutputWithContext(context.Context) Layer2ConfigurationOutput
}

// layer2Configuration
type Layer2ConfigurationArgs struct {
	// MTU of the packets between PE & CE.
	Mtu pulumi.IntInput `pulumi:"mtu"`
	// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
	PortCount pulumi.IntPtrInput `pulumi:"portCount"`
}

// Defaults sets the appropriate defaults for Layer2ConfigurationArgs
func (val *Layer2ConfigurationArgs) Defaults() *Layer2ConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		tmp.Mtu = pulumi.Int(1500)
	}
	return &tmp
}
func (Layer2ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer2Configuration)(nil)).Elem()
}

func (i Layer2ConfigurationArgs) ToLayer2ConfigurationOutput() Layer2ConfigurationOutput {
	return i.ToLayer2ConfigurationOutputWithContext(context.Background())
}

func (i Layer2ConfigurationArgs) ToLayer2ConfigurationOutputWithContext(ctx context.Context) Layer2ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer2ConfigurationOutput)
}

func (i Layer2ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[Layer2Configuration] {
	return pulumix.Output[Layer2Configuration]{
		OutputState: i.ToLayer2ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i Layer2ConfigurationArgs) ToLayer2ConfigurationPtrOutput() Layer2ConfigurationPtrOutput {
	return i.ToLayer2ConfigurationPtrOutputWithContext(context.Background())
}

func (i Layer2ConfigurationArgs) ToLayer2ConfigurationPtrOutputWithContext(ctx context.Context) Layer2ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer2ConfigurationOutput).ToLayer2ConfigurationPtrOutputWithContext(ctx)
}

// Layer2ConfigurationPtrInput is an input type that accepts Layer2ConfigurationArgs, Layer2ConfigurationPtr and Layer2ConfigurationPtrOutput values.
// You can construct a concrete instance of `Layer2ConfigurationPtrInput` via:
//
//	        Layer2ConfigurationArgs{...}
//
//	or:
//
//	        nil
type Layer2ConfigurationPtrInput interface {
	pulumi.Input

	ToLayer2ConfigurationPtrOutput() Layer2ConfigurationPtrOutput
	ToLayer2ConfigurationPtrOutputWithContext(context.Context) Layer2ConfigurationPtrOutput
}

type layer2ConfigurationPtrType Layer2ConfigurationArgs

func Layer2ConfigurationPtr(v *Layer2ConfigurationArgs) Layer2ConfigurationPtrInput {
	return (*layer2ConfigurationPtrType)(v)
}

func (*layer2ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer2Configuration)(nil)).Elem()
}

func (i *layer2ConfigurationPtrType) ToLayer2ConfigurationPtrOutput() Layer2ConfigurationPtrOutput {
	return i.ToLayer2ConfigurationPtrOutputWithContext(context.Background())
}

func (i *layer2ConfigurationPtrType) ToLayer2ConfigurationPtrOutputWithContext(ctx context.Context) Layer2ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer2ConfigurationPtrOutput)
}

func (i *layer2ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*Layer2Configuration] {
	return pulumix.Output[*Layer2Configuration]{
		OutputState: i.ToLayer2ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// layer2Configuration
type Layer2ConfigurationOutput struct{ *pulumi.OutputState }

func (Layer2ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer2Configuration)(nil)).Elem()
}

func (o Layer2ConfigurationOutput) ToLayer2ConfigurationOutput() Layer2ConfigurationOutput {
	return o
}

func (o Layer2ConfigurationOutput) ToLayer2ConfigurationOutputWithContext(ctx context.Context) Layer2ConfigurationOutput {
	return o
}

func (o Layer2ConfigurationOutput) ToLayer2ConfigurationPtrOutput() Layer2ConfigurationPtrOutput {
	return o.ToLayer2ConfigurationPtrOutputWithContext(context.Background())
}

func (o Layer2ConfigurationOutput) ToLayer2ConfigurationPtrOutputWithContext(ctx context.Context) Layer2ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Layer2Configuration) *Layer2Configuration {
		return &v
	}).(Layer2ConfigurationPtrOutput)
}

func (o Layer2ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[Layer2Configuration] {
	return pulumix.Output[Layer2Configuration]{
		OutputState: o.OutputState,
	}
}

// MTU of the packets between PE & CE.
func (o Layer2ConfigurationOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v Layer2Configuration) int { return v.Mtu }).(pulumi.IntOutput)
}

// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
func (o Layer2ConfigurationOutput) PortCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer2Configuration) *int { return v.PortCount }).(pulumi.IntPtrOutput)
}

type Layer2ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (Layer2ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer2Configuration)(nil)).Elem()
}

func (o Layer2ConfigurationPtrOutput) ToLayer2ConfigurationPtrOutput() Layer2ConfigurationPtrOutput {
	return o
}

func (o Layer2ConfigurationPtrOutput) ToLayer2ConfigurationPtrOutputWithContext(ctx context.Context) Layer2ConfigurationPtrOutput {
	return o
}

func (o Layer2ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Layer2Configuration] {
	return pulumix.Output[*Layer2Configuration]{
		OutputState: o.OutputState,
	}
}

func (o Layer2ConfigurationPtrOutput) Elem() Layer2ConfigurationOutput {
	return o.ApplyT(func(v *Layer2Configuration) Layer2Configuration {
		if v != nil {
			return *v
		}
		var ret Layer2Configuration
		return ret
	}).(Layer2ConfigurationOutput)
}

// MTU of the packets between PE & CE.
func (o Layer2ConfigurationPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer2Configuration) *int {
		if v == nil {
			return nil
		}
		return &v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
func (o Layer2ConfigurationPtrOutput) PortCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer2Configuration) *int {
		if v == nil {
			return nil
		}
		return v.PortCount
	}).(pulumi.IntPtrOutput)
}

// layer2Configuration
type Layer2ConfigurationResponse struct {
	// List of network device interfaces resource IDs.
	Interfaces []string `pulumi:"interfaces"`
	// MTU of the packets between PE & CE.
	Mtu int `pulumi:"mtu"`
	// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
	PortCount *int `pulumi:"portCount"`
}

// Defaults sets the appropriate defaults for Layer2ConfigurationResponse
func (val *Layer2ConfigurationResponse) Defaults() *Layer2ConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Mtu) {
		tmp.Mtu = 1500
	}
	return &tmp
}

// layer2Configuration
type Layer2ConfigurationResponseOutput struct{ *pulumi.OutputState }

func (Layer2ConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer2ConfigurationResponse)(nil)).Elem()
}

func (o Layer2ConfigurationResponseOutput) ToLayer2ConfigurationResponseOutput() Layer2ConfigurationResponseOutput {
	return o
}

func (o Layer2ConfigurationResponseOutput) ToLayer2ConfigurationResponseOutputWithContext(ctx context.Context) Layer2ConfigurationResponseOutput {
	return o
}

func (o Layer2ConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[Layer2ConfigurationResponse] {
	return pulumix.Output[Layer2ConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// List of network device interfaces resource IDs.
func (o Layer2ConfigurationResponseOutput) Interfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Layer2ConfigurationResponse) []string { return v.Interfaces }).(pulumi.StringArrayOutput)
}

// MTU of the packets between PE & CE.
func (o Layer2ConfigurationResponseOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v Layer2ConfigurationResponse) int { return v.Mtu }).(pulumi.IntOutput)
}

// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
func (o Layer2ConfigurationResponseOutput) PortCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer2ConfigurationResponse) *int { return v.PortCount }).(pulumi.IntPtrOutput)
}

type Layer2ConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (Layer2ConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer2ConfigurationResponse)(nil)).Elem()
}

func (o Layer2ConfigurationResponsePtrOutput) ToLayer2ConfigurationResponsePtrOutput() Layer2ConfigurationResponsePtrOutput {
	return o
}

func (o Layer2ConfigurationResponsePtrOutput) ToLayer2ConfigurationResponsePtrOutputWithContext(ctx context.Context) Layer2ConfigurationResponsePtrOutput {
	return o
}

func (o Layer2ConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Layer2ConfigurationResponse] {
	return pulumix.Output[*Layer2ConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o Layer2ConfigurationResponsePtrOutput) Elem() Layer2ConfigurationResponseOutput {
	return o.ApplyT(func(v *Layer2ConfigurationResponse) Layer2ConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret Layer2ConfigurationResponse
		return ret
	}).(Layer2ConfigurationResponseOutput)
}

// List of network device interfaces resource IDs.
func (o Layer2ConfigurationResponsePtrOutput) Interfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Layer2ConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Interfaces
	}).(pulumi.StringArrayOutput)
}

// MTU of the packets between PE & CE.
func (o Layer2ConfigurationResponsePtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer2ConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Number of ports connected between PE/CE. Maximum value depends on FabricSKU.
func (o Layer2ConfigurationResponsePtrOutput) PortCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer2ConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.PortCount
	}).(pulumi.IntPtrOutput)
}

// layer3Configuration
type Layer3Configuration struct {
	// exportRoutePolicyId
	ExportRoutePolicyId *string `pulumi:"exportRoutePolicyId"`
	// importRoutePolicyId
	ImportRoutePolicyId *string `pulumi:"importRoutePolicyId"`
	// ASN of PE devices for CE/PE connectivity.Example : 28
	PeerASN *int `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix *string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix *string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// VLAN for CE/PE Layer 3 connectivity.Example : 501
	VlanId *int `pulumi:"vlanId"`
}

// Layer3ConfigurationInput is an input type that accepts Layer3ConfigurationArgs and Layer3ConfigurationOutput values.
// You can construct a concrete instance of `Layer3ConfigurationInput` via:
//
//	Layer3ConfigurationArgs{...}
type Layer3ConfigurationInput interface {
	pulumi.Input

	ToLayer3ConfigurationOutput() Layer3ConfigurationOutput
	ToLayer3ConfigurationOutputWithContext(context.Context) Layer3ConfigurationOutput
}

// layer3Configuration
type Layer3ConfigurationArgs struct {
	// exportRoutePolicyId
	ExportRoutePolicyId pulumi.StringPtrInput `pulumi:"exportRoutePolicyId"`
	// importRoutePolicyId
	ImportRoutePolicyId pulumi.StringPtrInput `pulumi:"importRoutePolicyId"`
	// ASN of PE devices for CE/PE connectivity.Example : 28
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix pulumi.StringPtrInput `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix pulumi.StringPtrInput `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv6Prefix"`
	// VLAN for CE/PE Layer 3 connectivity.Example : 501
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (Layer3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer3Configuration)(nil)).Elem()
}

func (i Layer3ConfigurationArgs) ToLayer3ConfigurationOutput() Layer3ConfigurationOutput {
	return i.ToLayer3ConfigurationOutputWithContext(context.Background())
}

func (i Layer3ConfigurationArgs) ToLayer3ConfigurationOutputWithContext(ctx context.Context) Layer3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer3ConfigurationOutput)
}

func (i Layer3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[Layer3Configuration] {
	return pulumix.Output[Layer3Configuration]{
		OutputState: i.ToLayer3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i Layer3ConfigurationArgs) ToLayer3ConfigurationPtrOutput() Layer3ConfigurationPtrOutput {
	return i.ToLayer3ConfigurationPtrOutputWithContext(context.Background())
}

func (i Layer3ConfigurationArgs) ToLayer3ConfigurationPtrOutputWithContext(ctx context.Context) Layer3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer3ConfigurationOutput).ToLayer3ConfigurationPtrOutputWithContext(ctx)
}

// Layer3ConfigurationPtrInput is an input type that accepts Layer3ConfigurationArgs, Layer3ConfigurationPtr and Layer3ConfigurationPtrOutput values.
// You can construct a concrete instance of `Layer3ConfigurationPtrInput` via:
//
//	        Layer3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type Layer3ConfigurationPtrInput interface {
	pulumi.Input

	ToLayer3ConfigurationPtrOutput() Layer3ConfigurationPtrOutput
	ToLayer3ConfigurationPtrOutputWithContext(context.Context) Layer3ConfigurationPtrOutput
}

type layer3ConfigurationPtrType Layer3ConfigurationArgs

func Layer3ConfigurationPtr(v *Layer3ConfigurationArgs) Layer3ConfigurationPtrInput {
	return (*layer3ConfigurationPtrType)(v)
}

func (*layer3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer3Configuration)(nil)).Elem()
}

func (i *layer3ConfigurationPtrType) ToLayer3ConfigurationPtrOutput() Layer3ConfigurationPtrOutput {
	return i.ToLayer3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *layer3ConfigurationPtrType) ToLayer3ConfigurationPtrOutputWithContext(ctx context.Context) Layer3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Layer3ConfigurationPtrOutput)
}

func (i *layer3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*Layer3Configuration] {
	return pulumix.Output[*Layer3Configuration]{
		OutputState: i.ToLayer3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// layer3Configuration
type Layer3ConfigurationOutput struct{ *pulumi.OutputState }

func (Layer3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer3Configuration)(nil)).Elem()
}

func (o Layer3ConfigurationOutput) ToLayer3ConfigurationOutput() Layer3ConfigurationOutput {
	return o
}

func (o Layer3ConfigurationOutput) ToLayer3ConfigurationOutputWithContext(ctx context.Context) Layer3ConfigurationOutput {
	return o
}

func (o Layer3ConfigurationOutput) ToLayer3ConfigurationPtrOutput() Layer3ConfigurationPtrOutput {
	return o.ToLayer3ConfigurationPtrOutputWithContext(context.Background())
}

func (o Layer3ConfigurationOutput) ToLayer3ConfigurationPtrOutputWithContext(ctx context.Context) Layer3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Layer3Configuration) *Layer3Configuration {
		return &v
	}).(Layer3ConfigurationPtrOutput)
}

func (o Layer3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[Layer3Configuration] {
	return pulumix.Output[Layer3Configuration]{
		OutputState: o.OutputState,
	}
}

// exportRoutePolicyId
func (o Layer3ConfigurationOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *string { return v.ExportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// importRoutePolicyId
func (o Layer3ConfigurationOutput) ImportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *string { return v.ImportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// ASN of PE devices for CE/PE connectivity.Example : 28
func (o Layer3ConfigurationOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *string { return v.PrimaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *string { return v.SecondaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// VLAN for CE/PE Layer 3 connectivity.Example : 501
func (o Layer3ConfigurationOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer3Configuration) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type Layer3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (Layer3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer3Configuration)(nil)).Elem()
}

func (o Layer3ConfigurationPtrOutput) ToLayer3ConfigurationPtrOutput() Layer3ConfigurationPtrOutput {
	return o
}

func (o Layer3ConfigurationPtrOutput) ToLayer3ConfigurationPtrOutputWithContext(ctx context.Context) Layer3ConfigurationPtrOutput {
	return o
}

func (o Layer3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Layer3Configuration] {
	return pulumix.Output[*Layer3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o Layer3ConfigurationPtrOutput) Elem() Layer3ConfigurationOutput {
	return o.ApplyT(func(v *Layer3Configuration) Layer3Configuration {
		if v != nil {
			return *v
		}
		var ret Layer3Configuration
		return ret
	}).(Layer3ConfigurationOutput)
}

// exportRoutePolicyId
func (o Layer3ConfigurationPtrOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ExportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

// importRoutePolicyId
func (o Layer3ConfigurationPtrOutput) ImportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ImportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

// ASN of PE devices for CE/PE connectivity.Example : 28
func (o Layer3ConfigurationPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationPtrOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationPtrOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationPtrOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationPtrOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// VLAN for CE/PE Layer 3 connectivity.Example : 501
func (o Layer3ConfigurationPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

// layer3Configuration
type Layer3ConfigurationResponse struct {
	// exportRoutePolicyId
	ExportRoutePolicyId *string `pulumi:"exportRoutePolicyId"`
	// ASN of CE devices for CE/PE connectivity.
	FabricASN int `pulumi:"fabricASN"`
	// importRoutePolicyId
	ImportRoutePolicyId *string `pulumi:"importRoutePolicyId"`
	// ASN of PE devices for CE/PE connectivity.Example : 28
	PeerASN *int `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix *string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix *string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// VLAN for CE/PE Layer 3 connectivity.Example : 501
	VlanId *int `pulumi:"vlanId"`
}

// layer3Configuration
type Layer3ConfigurationResponseOutput struct{ *pulumi.OutputState }

func (Layer3ConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Layer3ConfigurationResponse)(nil)).Elem()
}

func (o Layer3ConfigurationResponseOutput) ToLayer3ConfigurationResponseOutput() Layer3ConfigurationResponseOutput {
	return o
}

func (o Layer3ConfigurationResponseOutput) ToLayer3ConfigurationResponseOutputWithContext(ctx context.Context) Layer3ConfigurationResponseOutput {
	return o
}

func (o Layer3ConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[Layer3ConfigurationResponse] {
	return pulumix.Output[Layer3ConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// exportRoutePolicyId
func (o Layer3ConfigurationResponseOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *string { return v.ExportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// ASN of CE devices for CE/PE connectivity.
func (o Layer3ConfigurationResponseOutput) FabricASN() pulumi.IntOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) int { return v.FabricASN }).(pulumi.IntOutput)
}

// importRoutePolicyId
func (o Layer3ConfigurationResponseOutput) ImportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *string { return v.ImportRoutePolicyId }).(pulumi.StringPtrOutput)
}

// ASN of PE devices for CE/PE connectivity.Example : 28
func (o Layer3ConfigurationResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponseOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *string { return v.PrimaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponseOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponseOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *string { return v.SecondaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponseOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// VLAN for CE/PE Layer 3 connectivity.Example : 501
func (o Layer3ConfigurationResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Layer3ConfigurationResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type Layer3ConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (Layer3ConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Layer3ConfigurationResponse)(nil)).Elem()
}

func (o Layer3ConfigurationResponsePtrOutput) ToLayer3ConfigurationResponsePtrOutput() Layer3ConfigurationResponsePtrOutput {
	return o
}

func (o Layer3ConfigurationResponsePtrOutput) ToLayer3ConfigurationResponsePtrOutputWithContext(ctx context.Context) Layer3ConfigurationResponsePtrOutput {
	return o
}

func (o Layer3ConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Layer3ConfigurationResponse] {
	return pulumix.Output[*Layer3ConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o Layer3ConfigurationResponsePtrOutput) Elem() Layer3ConfigurationResponseOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) Layer3ConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret Layer3ConfigurationResponse
		return ret
	}).(Layer3ConfigurationResponseOutput)
}

// exportRoutePolicyId
func (o Layer3ConfigurationResponsePtrOutput) ExportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

// ASN of CE devices for CE/PE connectivity.
func (o Layer3ConfigurationResponsePtrOutput) FabricASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FabricASN
	}).(pulumi.IntPtrOutput)
}

// importRoutePolicyId
func (o Layer3ConfigurationResponsePtrOutput) ImportRoutePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImportRoutePolicyId
	}).(pulumi.StringPtrOutput)
}

// ASN of PE devices for CE/PE connectivity.Example : 28
func (o Layer3ConfigurationResponsePtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponsePtrOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponsePtrOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponsePtrOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o Layer3ConfigurationResponsePtrOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// VLAN for CE/PE Layer 3 connectivity.Example : 501
func (o Layer3ConfigurationResponsePtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Layer3ConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

// Managed Resource Group configuration properties.
type ManagedResourceGroupConfiguration struct {
	// Managed resource group location.
	Location *string `pulumi:"location"`
	// The NFC service will be hosted in a Managed resource group.
	Name *string `pulumi:"name"`
}

// ManagedResourceGroupConfigurationInput is an input type that accepts ManagedResourceGroupConfigurationArgs and ManagedResourceGroupConfigurationOutput values.
// You can construct a concrete instance of `ManagedResourceGroupConfigurationInput` via:
//
//	ManagedResourceGroupConfigurationArgs{...}
type ManagedResourceGroupConfigurationInput interface {
	pulumi.Input

	ToManagedResourceGroupConfigurationOutput() ManagedResourceGroupConfigurationOutput
	ToManagedResourceGroupConfigurationOutputWithContext(context.Context) ManagedResourceGroupConfigurationOutput
}

// Managed Resource Group configuration properties.
type ManagedResourceGroupConfigurationArgs struct {
	// Managed resource group location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The NFC service will be hosted in a Managed resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagedResourceGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationOutput() ManagedResourceGroupConfigurationOutput {
	return i.ToManagedResourceGroupConfigurationOutputWithContext(context.Background())
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedResourceGroupConfigurationOutput)
}

func (i ManagedResourceGroupConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedResourceGroupConfiguration] {
	return pulumix.Output[ManagedResourceGroupConfiguration]{
		OutputState: i.ToManagedResourceGroupConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return i.ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedResourceGroupConfigurationOutput).ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx)
}

// ManagedResourceGroupConfigurationPtrInput is an input type that accepts ManagedResourceGroupConfigurationArgs, ManagedResourceGroupConfigurationPtr and ManagedResourceGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `ManagedResourceGroupConfigurationPtrInput` via:
//
//	        ManagedResourceGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type ManagedResourceGroupConfigurationPtrInput interface {
	pulumi.Input

	ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput
	ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Context) ManagedResourceGroupConfigurationPtrOutput
}

type managedResourceGroupConfigurationPtrType ManagedResourceGroupConfigurationArgs

func ManagedResourceGroupConfigurationPtr(v *ManagedResourceGroupConfigurationArgs) ManagedResourceGroupConfigurationPtrInput {
	return (*managedResourceGroupConfigurationPtrType)(v)
}

func (*managedResourceGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (i *managedResourceGroupConfigurationPtrType) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return i.ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *managedResourceGroupConfigurationPtrType) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedResourceGroupConfigurationPtrOutput)
}

func (i *managedResourceGroupConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedResourceGroupConfiguration] {
	return pulumix.Output[*ManagedResourceGroupConfiguration]{
		OutputState: i.ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// Managed Resource Group configuration properties.
type ManagedResourceGroupConfigurationOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationOutput() ManagedResourceGroupConfigurationOutput {
	return o
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationOutput {
	return o
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return o.ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedResourceGroupConfiguration) *ManagedResourceGroupConfiguration {
		return &v
	}).(ManagedResourceGroupConfigurationPtrOutput)
}

func (o ManagedResourceGroupConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedResourceGroupConfiguration] {
	return pulumix.Output[ManagedResourceGroupConfiguration]{
		OutputState: o.OutputState,
	}
}

// Managed resource group location.
func (o ManagedResourceGroupConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The NFC service will be hosted in a Managed resource group.
func (o ManagedResourceGroupConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedResourceGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationPtrOutput) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationPtrOutput) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedResourceGroupConfiguration] {
	return pulumix.Output[*ManagedResourceGroupConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ManagedResourceGroupConfigurationPtrOutput) Elem() ManagedResourceGroupConfigurationOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfiguration) ManagedResourceGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret ManagedResourceGroupConfiguration
		return ret
	}).(ManagedResourceGroupConfigurationOutput)
}

// Managed resource group location.
func (o ManagedResourceGroupConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The NFC service will be hosted in a Managed resource group.
func (o ManagedResourceGroupConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Managed Resource Group configuration properties.
type ManagedResourceGroupConfigurationResponse struct {
	// Managed resource group location.
	Location *string `pulumi:"location"`
	// The NFC service will be hosted in a Managed resource group.
	Name *string `pulumi:"name"`
}

// Managed Resource Group configuration properties.
type ManagedResourceGroupConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourceGroupConfigurationResponse)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationResponseOutput) ToManagedResourceGroupConfigurationResponseOutput() ManagedResourceGroupConfigurationResponseOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponseOutput) ToManagedResourceGroupConfigurationResponseOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationResponseOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedResourceGroupConfigurationResponse] {
	return pulumix.Output[ManagedResourceGroupConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// Managed resource group location.
func (o ManagedResourceGroupConfigurationResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfigurationResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The NFC service will be hosted in a Managed resource group.
func (o ManagedResourceGroupConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedResourceGroupConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourceGroupConfigurationResponse)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) ToManagedResourceGroupConfigurationResponsePtrOutput() ManagedResourceGroupConfigurationResponsePtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) ToManagedResourceGroupConfigurationResponsePtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationResponsePtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedResourceGroupConfigurationResponse] {
	return pulumix.Output[*ManagedResourceGroupConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) Elem() ManagedResourceGroupConfigurationResponseOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfigurationResponse) ManagedResourceGroupConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ManagedResourceGroupConfigurationResponse
		return ret
	}).(ManagedResourceGroupConfigurationResponseOutput)
}

// Managed resource group location.
func (o ManagedResourceGroupConfigurationResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The NFC service will be hosted in a Managed resource group.
func (o ManagedResourceGroupConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Configuration to be used to setup the management network.
type ManagementNetworkConfiguration struct {
	// Configuration for infrastructure vpn.
	InfrastructureVpnConfiguration VpnConfigurationProperties `pulumi:"infrastructureVpnConfiguration"`
	// Configuration for workload vpn.
	WorkloadVpnConfiguration VpnConfigurationProperties `pulumi:"workloadVpnConfiguration"`
}

// Defaults sets the appropriate defaults for ManagementNetworkConfiguration
func (val *ManagementNetworkConfiguration) Defaults() *ManagementNetworkConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.InfrastructureVpnConfiguration = *tmp.InfrastructureVpnConfiguration.Defaults()

	tmp.WorkloadVpnConfiguration = *tmp.WorkloadVpnConfiguration.Defaults()

	return &tmp
}

// ManagementNetworkConfigurationInput is an input type that accepts ManagementNetworkConfigurationArgs and ManagementNetworkConfigurationOutput values.
// You can construct a concrete instance of `ManagementNetworkConfigurationInput` via:
//
//	ManagementNetworkConfigurationArgs{...}
type ManagementNetworkConfigurationInput interface {
	pulumi.Input

	ToManagementNetworkConfigurationOutput() ManagementNetworkConfigurationOutput
	ToManagementNetworkConfigurationOutputWithContext(context.Context) ManagementNetworkConfigurationOutput
}

// Configuration to be used to setup the management network.
type ManagementNetworkConfigurationArgs struct {
	// Configuration for infrastructure vpn.
	InfrastructureVpnConfiguration VpnConfigurationPropertiesInput `pulumi:"infrastructureVpnConfiguration"`
	// Configuration for workload vpn.
	WorkloadVpnConfiguration VpnConfigurationPropertiesInput `pulumi:"workloadVpnConfiguration"`
}

// Defaults sets the appropriate defaults for ManagementNetworkConfigurationArgs
func (val *ManagementNetworkConfigurationArgs) Defaults() *ManagementNetworkConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ManagementNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementNetworkConfiguration)(nil)).Elem()
}

func (i ManagementNetworkConfigurationArgs) ToManagementNetworkConfigurationOutput() ManagementNetworkConfigurationOutput {
	return i.ToManagementNetworkConfigurationOutputWithContext(context.Background())
}

func (i ManagementNetworkConfigurationArgs) ToManagementNetworkConfigurationOutputWithContext(ctx context.Context) ManagementNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementNetworkConfigurationOutput)
}

func (i ManagementNetworkConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ManagementNetworkConfiguration] {
	return pulumix.Output[ManagementNetworkConfiguration]{
		OutputState: i.ToManagementNetworkConfigurationOutputWithContext(ctx).OutputState,
	}
}

// Configuration to be used to setup the management network.
type ManagementNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ManagementNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementNetworkConfiguration)(nil)).Elem()
}

func (o ManagementNetworkConfigurationOutput) ToManagementNetworkConfigurationOutput() ManagementNetworkConfigurationOutput {
	return o
}

func (o ManagementNetworkConfigurationOutput) ToManagementNetworkConfigurationOutputWithContext(ctx context.Context) ManagementNetworkConfigurationOutput {
	return o
}

func (o ManagementNetworkConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ManagementNetworkConfiguration] {
	return pulumix.Output[ManagementNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

// Configuration for infrastructure vpn.
func (o ManagementNetworkConfigurationOutput) InfrastructureVpnConfiguration() VpnConfigurationPropertiesOutput {
	return o.ApplyT(func(v ManagementNetworkConfiguration) VpnConfigurationProperties {
		return v.InfrastructureVpnConfiguration
	}).(VpnConfigurationPropertiesOutput)
}

// Configuration for workload vpn.
func (o ManagementNetworkConfigurationOutput) WorkloadVpnConfiguration() VpnConfigurationPropertiesOutput {
	return o.ApplyT(func(v ManagementNetworkConfiguration) VpnConfigurationProperties { return v.WorkloadVpnConfiguration }).(VpnConfigurationPropertiesOutput)
}

// Configuration to be used to setup the management network.
type ManagementNetworkConfigurationResponse struct {
	// Configuration for infrastructure vpn.
	InfrastructureVpnConfiguration VpnConfigurationPropertiesResponse `pulumi:"infrastructureVpnConfiguration"`
	// Configuration for workload vpn.
	WorkloadVpnConfiguration VpnConfigurationPropertiesResponse `pulumi:"workloadVpnConfiguration"`
}

// Defaults sets the appropriate defaults for ManagementNetworkConfigurationResponse
func (val *ManagementNetworkConfigurationResponse) Defaults() *ManagementNetworkConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.InfrastructureVpnConfiguration = *tmp.InfrastructureVpnConfiguration.Defaults()

	tmp.WorkloadVpnConfiguration = *tmp.WorkloadVpnConfiguration.Defaults()

	return &tmp
}

// Configuration to be used to setup the management network.
type ManagementNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ManagementNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementNetworkConfigurationResponse)(nil)).Elem()
}

func (o ManagementNetworkConfigurationResponseOutput) ToManagementNetworkConfigurationResponseOutput() ManagementNetworkConfigurationResponseOutput {
	return o
}

func (o ManagementNetworkConfigurationResponseOutput) ToManagementNetworkConfigurationResponseOutputWithContext(ctx context.Context) ManagementNetworkConfigurationResponseOutput {
	return o
}

func (o ManagementNetworkConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ManagementNetworkConfigurationResponse] {
	return pulumix.Output[ManagementNetworkConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// Configuration for infrastructure vpn.
func (o ManagementNetworkConfigurationResponseOutput) InfrastructureVpnConfiguration() VpnConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v ManagementNetworkConfigurationResponse) VpnConfigurationPropertiesResponse {
		return v.InfrastructureVpnConfiguration
	}).(VpnConfigurationPropertiesResponseOutput)
}

// Configuration for workload vpn.
func (o ManagementNetworkConfigurationResponseOutput) WorkloadVpnConfiguration() VpnConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v ManagementNetworkConfigurationResponse) VpnConfigurationPropertiesResponse {
		return v.WorkloadVpnConfiguration
	}).(VpnConfigurationPropertiesResponseOutput)
}

// Neighbor Address properties.
type NeighborAddress struct {
	// IP Address.
	Address *string `pulumi:"address"`
}

// NeighborAddressInput is an input type that accepts NeighborAddressArgs and NeighborAddressOutput values.
// You can construct a concrete instance of `NeighborAddressInput` via:
//
//	NeighborAddressArgs{...}
type NeighborAddressInput interface {
	pulumi.Input

	ToNeighborAddressOutput() NeighborAddressOutput
	ToNeighborAddressOutputWithContext(context.Context) NeighborAddressOutput
}

// Neighbor Address properties.
type NeighborAddressArgs struct {
	// IP Address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (NeighborAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborAddress)(nil)).Elem()
}

func (i NeighborAddressArgs) ToNeighborAddressOutput() NeighborAddressOutput {
	return i.ToNeighborAddressOutputWithContext(context.Background())
}

func (i NeighborAddressArgs) ToNeighborAddressOutputWithContext(ctx context.Context) NeighborAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NeighborAddressOutput)
}

func (i NeighborAddressArgs) ToOutput(ctx context.Context) pulumix.Output[NeighborAddress] {
	return pulumix.Output[NeighborAddress]{
		OutputState: i.ToNeighborAddressOutputWithContext(ctx).OutputState,
	}
}

// NeighborAddressArrayInput is an input type that accepts NeighborAddressArray and NeighborAddressArrayOutput values.
// You can construct a concrete instance of `NeighborAddressArrayInput` via:
//
//	NeighborAddressArray{ NeighborAddressArgs{...} }
type NeighborAddressArrayInput interface {
	pulumi.Input

	ToNeighborAddressArrayOutput() NeighborAddressArrayOutput
	ToNeighborAddressArrayOutputWithContext(context.Context) NeighborAddressArrayOutput
}

type NeighborAddressArray []NeighborAddressInput

func (NeighborAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborAddress)(nil)).Elem()
}

func (i NeighborAddressArray) ToNeighborAddressArrayOutput() NeighborAddressArrayOutput {
	return i.ToNeighborAddressArrayOutputWithContext(context.Background())
}

func (i NeighborAddressArray) ToNeighborAddressArrayOutputWithContext(ctx context.Context) NeighborAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NeighborAddressArrayOutput)
}

func (i NeighborAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]NeighborAddress] {
	return pulumix.Output[[]NeighborAddress]{
		OutputState: i.ToNeighborAddressArrayOutputWithContext(ctx).OutputState,
	}
}

// Neighbor Address properties.
type NeighborAddressOutput struct{ *pulumi.OutputState }

func (NeighborAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborAddress)(nil)).Elem()
}

func (o NeighborAddressOutput) ToNeighborAddressOutput() NeighborAddressOutput {
	return o
}

func (o NeighborAddressOutput) ToNeighborAddressOutputWithContext(ctx context.Context) NeighborAddressOutput {
	return o
}

func (o NeighborAddressOutput) ToOutput(ctx context.Context) pulumix.Output[NeighborAddress] {
	return pulumix.Output[NeighborAddress]{
		OutputState: o.OutputState,
	}
}

// IP Address.
func (o NeighborAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type NeighborAddressArrayOutput struct{ *pulumi.OutputState }

func (NeighborAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborAddress)(nil)).Elem()
}

func (o NeighborAddressArrayOutput) ToNeighborAddressArrayOutput() NeighborAddressArrayOutput {
	return o
}

func (o NeighborAddressArrayOutput) ToNeighborAddressArrayOutputWithContext(ctx context.Context) NeighborAddressArrayOutput {
	return o
}

func (o NeighborAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NeighborAddress] {
	return pulumix.Output[[]NeighborAddress]{
		OutputState: o.OutputState,
	}
}

func (o NeighborAddressArrayOutput) Index(i pulumi.IntInput) NeighborAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NeighborAddress {
		return vs[0].([]NeighborAddress)[vs[1].(int)]
	}).(NeighborAddressOutput)
}

// Neighbor Address properties.
type NeighborAddressResponse struct {
	// IP Address.
	Address *string `pulumi:"address"`
	// OperationalState of the NeighborAddress.
	OperationalState string `pulumi:"operationalState"`
}

// Neighbor Address properties.
type NeighborAddressResponseOutput struct{ *pulumi.OutputState }

func (NeighborAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborAddressResponse)(nil)).Elem()
}

func (o NeighborAddressResponseOutput) ToNeighborAddressResponseOutput() NeighborAddressResponseOutput {
	return o
}

func (o NeighborAddressResponseOutput) ToNeighborAddressResponseOutputWithContext(ctx context.Context) NeighborAddressResponseOutput {
	return o
}

func (o NeighborAddressResponseOutput) ToOutput(ctx context.Context) pulumix.Output[NeighborAddressResponse] {
	return pulumix.Output[NeighborAddressResponse]{
		OutputState: o.OutputState,
	}
}

// IP Address.
func (o NeighborAddressResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NeighborAddressResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// OperationalState of the NeighborAddress.
func (o NeighborAddressResponseOutput) OperationalState() pulumi.StringOutput {
	return o.ApplyT(func(v NeighborAddressResponse) string { return v.OperationalState }).(pulumi.StringOutput)
}

type NeighborAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (NeighborAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NeighborAddressResponse)(nil)).Elem()
}

func (o NeighborAddressResponseArrayOutput) ToNeighborAddressResponseArrayOutput() NeighborAddressResponseArrayOutput {
	return o
}

func (o NeighborAddressResponseArrayOutput) ToNeighborAddressResponseArrayOutputWithContext(ctx context.Context) NeighborAddressResponseArrayOutput {
	return o
}

func (o NeighborAddressResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NeighborAddressResponse] {
	return pulumix.Output[[]NeighborAddressResponse]{
		OutputState: o.OutputState,
	}
}

func (o NeighborAddressResponseArrayOutput) Index(i pulumi.IntInput) NeighborAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NeighborAddressResponse {
		return vs[0].([]NeighborAddressResponse)[vs[1].(int)]
	}).(NeighborAddressResponseOutput)
}

// Peering optionA properties
type OptionAProperties struct {
	// MTU to use for option A peering.
	Mtu *int `pulumi:"mtu"`
	// Peer ASN number.Example : 28
	PeerASN *int `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix *string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix *string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// Vlan identifier. Example : 501
	VlanId *int `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for OptionAProperties
func (val *OptionAProperties) Defaults() *OptionAProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		mtu_ := 1500
		tmp.Mtu = &mtu_
	}
	return &tmp
}

// OptionAPropertiesInput is an input type that accepts OptionAPropertiesArgs and OptionAPropertiesOutput values.
// You can construct a concrete instance of `OptionAPropertiesInput` via:
//
//	OptionAPropertiesArgs{...}
type OptionAPropertiesInput interface {
	pulumi.Input

	ToOptionAPropertiesOutput() OptionAPropertiesOutput
	ToOptionAPropertiesOutputWithContext(context.Context) OptionAPropertiesOutput
}

// Peering optionA properties
type OptionAPropertiesArgs struct {
	// MTU to use for option A peering.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Peer ASN number.Example : 28
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix pulumi.StringPtrInput `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix pulumi.StringPtrInput `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv6Prefix"`
	// Vlan identifier. Example : 501
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for OptionAPropertiesArgs
func (val *OptionAPropertiesArgs) Defaults() *OptionAPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		tmp.Mtu = pulumi.IntPtr(1500)
	}
	return &tmp
}
func (OptionAPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionAProperties)(nil)).Elem()
}

func (i OptionAPropertiesArgs) ToOptionAPropertiesOutput() OptionAPropertiesOutput {
	return i.ToOptionAPropertiesOutputWithContext(context.Background())
}

func (i OptionAPropertiesArgs) ToOptionAPropertiesOutputWithContext(ctx context.Context) OptionAPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionAPropertiesOutput)
}

func (i OptionAPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[OptionAProperties] {
	return pulumix.Output[OptionAProperties]{
		OutputState: i.ToOptionAPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i OptionAPropertiesArgs) ToOptionAPropertiesPtrOutput() OptionAPropertiesPtrOutput {
	return i.ToOptionAPropertiesPtrOutputWithContext(context.Background())
}

func (i OptionAPropertiesArgs) ToOptionAPropertiesPtrOutputWithContext(ctx context.Context) OptionAPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionAPropertiesOutput).ToOptionAPropertiesPtrOutputWithContext(ctx)
}

// OptionAPropertiesPtrInput is an input type that accepts OptionAPropertiesArgs, OptionAPropertiesPtr and OptionAPropertiesPtrOutput values.
// You can construct a concrete instance of `OptionAPropertiesPtrInput` via:
//
//	        OptionAPropertiesArgs{...}
//
//	or:
//
//	        nil
type OptionAPropertiesPtrInput interface {
	pulumi.Input

	ToOptionAPropertiesPtrOutput() OptionAPropertiesPtrOutput
	ToOptionAPropertiesPtrOutputWithContext(context.Context) OptionAPropertiesPtrOutput
}

type optionAPropertiesPtrType OptionAPropertiesArgs

func OptionAPropertiesPtr(v *OptionAPropertiesArgs) OptionAPropertiesPtrInput {
	return (*optionAPropertiesPtrType)(v)
}

func (*optionAPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionAProperties)(nil)).Elem()
}

func (i *optionAPropertiesPtrType) ToOptionAPropertiesPtrOutput() OptionAPropertiesPtrOutput {
	return i.ToOptionAPropertiesPtrOutputWithContext(context.Background())
}

func (i *optionAPropertiesPtrType) ToOptionAPropertiesPtrOutputWithContext(ctx context.Context) OptionAPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionAPropertiesPtrOutput)
}

func (i *optionAPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*OptionAProperties] {
	return pulumix.Output[*OptionAProperties]{
		OutputState: i.ToOptionAPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Peering optionA properties
type OptionAPropertiesOutput struct{ *pulumi.OutputState }

func (OptionAPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionAProperties)(nil)).Elem()
}

func (o OptionAPropertiesOutput) ToOptionAPropertiesOutput() OptionAPropertiesOutput {
	return o
}

func (o OptionAPropertiesOutput) ToOptionAPropertiesOutputWithContext(ctx context.Context) OptionAPropertiesOutput {
	return o
}

func (o OptionAPropertiesOutput) ToOptionAPropertiesPtrOutput() OptionAPropertiesPtrOutput {
	return o.ToOptionAPropertiesPtrOutputWithContext(context.Background())
}

func (o OptionAPropertiesOutput) ToOptionAPropertiesPtrOutputWithContext(ctx context.Context) OptionAPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OptionAProperties) *OptionAProperties {
		return &v
	}).(OptionAPropertiesPtrOutput)
}

func (o OptionAPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[OptionAProperties] {
	return pulumix.Output[OptionAProperties]{
		OutputState: o.OutputState,
	}
}

// MTU to use for option A peering.
func (o OptionAPropertiesOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o OptionAPropertiesOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *string { return v.PrimaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *string { return v.SecondaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o OptionAPropertiesOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionAProperties) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type OptionAPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OptionAPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionAProperties)(nil)).Elem()
}

func (o OptionAPropertiesPtrOutput) ToOptionAPropertiesPtrOutput() OptionAPropertiesPtrOutput {
	return o
}

func (o OptionAPropertiesPtrOutput) ToOptionAPropertiesPtrOutputWithContext(ctx context.Context) OptionAPropertiesPtrOutput {
	return o
}

func (o OptionAPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OptionAProperties] {
	return pulumix.Output[*OptionAProperties]{
		OutputState: o.OutputState,
	}
}

func (o OptionAPropertiesPtrOutput) Elem() OptionAPropertiesOutput {
	return o.ApplyT(func(v *OptionAProperties) OptionAProperties {
		if v != nil {
			return *v
		}
		var ret OptionAProperties
		return ret
	}).(OptionAPropertiesOutput)
}

// MTU to use for option A peering.
func (o OptionAPropertiesPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o OptionAPropertiesPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesPtrOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesPtrOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesPtrOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesPtrOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o OptionAPropertiesPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptionAProperties) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

// Peering optionA properties
type OptionAPropertiesResponse struct {
	// BFD Configuration properties.
	BfdConfiguration *FabricBfdConfigurationResponse `pulumi:"bfdConfiguration"`
	// MTU to use for option A peering.
	Mtu *int `pulumi:"mtu"`
	// Peer ASN number.Example : 28
	PeerASN *int `pulumi:"peerASN"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix *string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix *string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// Vlan identifier. Example : 501
	VlanId *int `pulumi:"vlanId"`
}

// Defaults sets the appropriate defaults for OptionAPropertiesResponse
func (val *OptionAPropertiesResponse) Defaults() *OptionAPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mtu == nil {
		mtu_ := 1500
		tmp.Mtu = &mtu_
	}
	return &tmp
}

// Peering optionA properties
type OptionAPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OptionAPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionAPropertiesResponse)(nil)).Elem()
}

func (o OptionAPropertiesResponseOutput) ToOptionAPropertiesResponseOutput() OptionAPropertiesResponseOutput {
	return o
}

func (o OptionAPropertiesResponseOutput) ToOptionAPropertiesResponseOutputWithContext(ctx context.Context) OptionAPropertiesResponseOutput {
	return o
}

func (o OptionAPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[OptionAPropertiesResponse] {
	return pulumix.Output[OptionAPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// BFD Configuration properties.
func (o OptionAPropertiesResponseOutput) BfdConfiguration() FabricBfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *FabricBfdConfigurationResponse { return v.BfdConfiguration }).(FabricBfdConfigurationResponsePtrOutput)
}

// MTU to use for option A peering.
func (o OptionAPropertiesResponseOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o OptionAPropertiesResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponseOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *string { return v.PrimaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponseOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponseOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *string { return v.SecondaryIpv4Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponseOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o OptionAPropertiesResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionAPropertiesResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type OptionAPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OptionAPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionAPropertiesResponse)(nil)).Elem()
}

func (o OptionAPropertiesResponsePtrOutput) ToOptionAPropertiesResponsePtrOutput() OptionAPropertiesResponsePtrOutput {
	return o
}

func (o OptionAPropertiesResponsePtrOutput) ToOptionAPropertiesResponsePtrOutputWithContext(ctx context.Context) OptionAPropertiesResponsePtrOutput {
	return o
}

func (o OptionAPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OptionAPropertiesResponse] {
	return pulumix.Output[*OptionAPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o OptionAPropertiesResponsePtrOutput) Elem() OptionAPropertiesResponseOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) OptionAPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret OptionAPropertiesResponse
		return ret
	}).(OptionAPropertiesResponseOutput)
}

// BFD Configuration properties.
func (o OptionAPropertiesResponsePtrOutput) BfdConfiguration() FabricBfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *FabricBfdConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BfdConfiguration
	}).(FabricBfdConfigurationResponsePtrOutput)
}

// MTU to use for option A peering.
func (o OptionAPropertiesResponsePtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Peer ASN number.Example : 28
func (o OptionAPropertiesResponsePtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponsePtrOutput) PrimaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponsePtrOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponsePtrOutput) SecondaryIpv4Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv4Prefix
	}).(pulumi.StringPtrOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o OptionAPropertiesResponsePtrOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryIpv6Prefix
	}).(pulumi.StringPtrOutput)
}

// Vlan identifier. Example : 501
func (o OptionAPropertiesResponsePtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptionAPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

// Option B configuration.
type OptionBProperties struct {
	// Route Targets to be applied for outgoing routes from CE.
	ExportRouteTargets []string `pulumi:"exportRouteTargets"`
	// Route Targets to be applied for incoming routes into CE.
	ImportRouteTargets []string `pulumi:"importRouteTargets"`
}

// OptionBPropertiesInput is an input type that accepts OptionBPropertiesArgs and OptionBPropertiesOutput values.
// You can construct a concrete instance of `OptionBPropertiesInput` via:
//
//	OptionBPropertiesArgs{...}
type OptionBPropertiesInput interface {
	pulumi.Input

	ToOptionBPropertiesOutput() OptionBPropertiesOutput
	ToOptionBPropertiesOutputWithContext(context.Context) OptionBPropertiesOutput
}

// Option B configuration.
type OptionBPropertiesArgs struct {
	// Route Targets to be applied for outgoing routes from CE.
	ExportRouteTargets pulumi.StringArrayInput `pulumi:"exportRouteTargets"`
	// Route Targets to be applied for incoming routes into CE.
	ImportRouteTargets pulumi.StringArrayInput `pulumi:"importRouteTargets"`
}

func (OptionBPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionBProperties)(nil)).Elem()
}

func (i OptionBPropertiesArgs) ToOptionBPropertiesOutput() OptionBPropertiesOutput {
	return i.ToOptionBPropertiesOutputWithContext(context.Background())
}

func (i OptionBPropertiesArgs) ToOptionBPropertiesOutputWithContext(ctx context.Context) OptionBPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionBPropertiesOutput)
}

func (i OptionBPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[OptionBProperties] {
	return pulumix.Output[OptionBProperties]{
		OutputState: i.ToOptionBPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i OptionBPropertiesArgs) ToOptionBPropertiesPtrOutput() OptionBPropertiesPtrOutput {
	return i.ToOptionBPropertiesPtrOutputWithContext(context.Background())
}

func (i OptionBPropertiesArgs) ToOptionBPropertiesPtrOutputWithContext(ctx context.Context) OptionBPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionBPropertiesOutput).ToOptionBPropertiesPtrOutputWithContext(ctx)
}

// OptionBPropertiesPtrInput is an input type that accepts OptionBPropertiesArgs, OptionBPropertiesPtr and OptionBPropertiesPtrOutput values.
// You can construct a concrete instance of `OptionBPropertiesPtrInput` via:
//
//	        OptionBPropertiesArgs{...}
//
//	or:
//
//	        nil
type OptionBPropertiesPtrInput interface {
	pulumi.Input

	ToOptionBPropertiesPtrOutput() OptionBPropertiesPtrOutput
	ToOptionBPropertiesPtrOutputWithContext(context.Context) OptionBPropertiesPtrOutput
}

type optionBPropertiesPtrType OptionBPropertiesArgs

func OptionBPropertiesPtr(v *OptionBPropertiesArgs) OptionBPropertiesPtrInput {
	return (*optionBPropertiesPtrType)(v)
}

func (*optionBPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionBProperties)(nil)).Elem()
}

func (i *optionBPropertiesPtrType) ToOptionBPropertiesPtrOutput() OptionBPropertiesPtrOutput {
	return i.ToOptionBPropertiesPtrOutputWithContext(context.Background())
}

func (i *optionBPropertiesPtrType) ToOptionBPropertiesPtrOutputWithContext(ctx context.Context) OptionBPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionBPropertiesPtrOutput)
}

func (i *optionBPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*OptionBProperties] {
	return pulumix.Output[*OptionBProperties]{
		OutputState: i.ToOptionBPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Option B configuration.
type OptionBPropertiesOutput struct{ *pulumi.OutputState }

func (OptionBPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionBProperties)(nil)).Elem()
}

func (o OptionBPropertiesOutput) ToOptionBPropertiesOutput() OptionBPropertiesOutput {
	return o
}

func (o OptionBPropertiesOutput) ToOptionBPropertiesOutputWithContext(ctx context.Context) OptionBPropertiesOutput {
	return o
}

func (o OptionBPropertiesOutput) ToOptionBPropertiesPtrOutput() OptionBPropertiesPtrOutput {
	return o.ToOptionBPropertiesPtrOutputWithContext(context.Background())
}

func (o OptionBPropertiesOutput) ToOptionBPropertiesPtrOutputWithContext(ctx context.Context) OptionBPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OptionBProperties) *OptionBProperties {
		return &v
	}).(OptionBPropertiesPtrOutput)
}

func (o OptionBPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[OptionBProperties] {
	return pulumix.Output[OptionBProperties]{
		OutputState: o.OutputState,
	}
}

// Route Targets to be applied for outgoing routes from CE.
func (o OptionBPropertiesOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionBProperties) []string { return v.ExportRouteTargets }).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o OptionBPropertiesOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionBProperties) []string { return v.ImportRouteTargets }).(pulumi.StringArrayOutput)
}

type OptionBPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OptionBPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionBProperties)(nil)).Elem()
}

func (o OptionBPropertiesPtrOutput) ToOptionBPropertiesPtrOutput() OptionBPropertiesPtrOutput {
	return o
}

func (o OptionBPropertiesPtrOutput) ToOptionBPropertiesPtrOutputWithContext(ctx context.Context) OptionBPropertiesPtrOutput {
	return o
}

func (o OptionBPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OptionBProperties] {
	return pulumix.Output[*OptionBProperties]{
		OutputState: o.OutputState,
	}
}

func (o OptionBPropertiesPtrOutput) Elem() OptionBPropertiesOutput {
	return o.ApplyT(func(v *OptionBProperties) OptionBProperties {
		if v != nil {
			return *v
		}
		var ret OptionBProperties
		return ret
	}).(OptionBPropertiesOutput)
}

// Route Targets to be applied for outgoing routes from CE.
func (o OptionBPropertiesPtrOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OptionBProperties) []string {
		if v == nil {
			return nil
		}
		return v.ExportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o OptionBPropertiesPtrOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OptionBProperties) []string {
		if v == nil {
			return nil
		}
		return v.ImportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Option B configuration.
type OptionBPropertiesResponse struct {
	// Route Targets to be applied for outgoing routes from CE.
	ExportRouteTargets []string `pulumi:"exportRouteTargets"`
	// Route Targets to be applied for incoming routes into CE.
	ImportRouteTargets []string `pulumi:"importRouteTargets"`
}

// Option B configuration.
type OptionBPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OptionBPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionBPropertiesResponse)(nil)).Elem()
}

func (o OptionBPropertiesResponseOutput) ToOptionBPropertiesResponseOutput() OptionBPropertiesResponseOutput {
	return o
}

func (o OptionBPropertiesResponseOutput) ToOptionBPropertiesResponseOutputWithContext(ctx context.Context) OptionBPropertiesResponseOutput {
	return o
}

func (o OptionBPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[OptionBPropertiesResponse] {
	return pulumix.Output[OptionBPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Route Targets to be applied for outgoing routes from CE.
func (o OptionBPropertiesResponseOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionBPropertiesResponse) []string { return v.ExportRouteTargets }).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o OptionBPropertiesResponseOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionBPropertiesResponse) []string { return v.ImportRouteTargets }).(pulumi.StringArrayOutput)
}

type OptionBPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OptionBPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionBPropertiesResponse)(nil)).Elem()
}

func (o OptionBPropertiesResponsePtrOutput) ToOptionBPropertiesResponsePtrOutput() OptionBPropertiesResponsePtrOutput {
	return o
}

func (o OptionBPropertiesResponsePtrOutput) ToOptionBPropertiesResponsePtrOutputWithContext(ctx context.Context) OptionBPropertiesResponsePtrOutput {
	return o
}

func (o OptionBPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OptionBPropertiesResponse] {
	return pulumix.Output[*OptionBPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o OptionBPropertiesResponsePtrOutput) Elem() OptionBPropertiesResponseOutput {
	return o.ApplyT(func(v *OptionBPropertiesResponse) OptionBPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret OptionBPropertiesResponse
		return ret
	}).(OptionBPropertiesResponseOutput)
}

// Route Targets to be applied for outgoing routes from CE.
func (o OptionBPropertiesResponsePtrOutput) ExportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OptionBPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Route Targets to be applied for incoming routes into CE.
func (o OptionBPropertiesResponsePtrOutput) ImportRouteTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OptionBPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ImportRouteTargets
	}).(pulumi.StringArrayOutput)
}

// Route Policy Statement properties..
type RoutePolicyStatementProperties struct {
	// Route policy action properties.
	Action StatementActionProperties `pulumi:"action"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Route policy condition properties.
	Condition StatementConditionProperties `pulumi:"condition"`
	// Sequence to insert to/delete from existing route.
	SequenceNumber float64 `pulumi:"sequenceNumber"`
}

// RoutePolicyStatementPropertiesInput is an input type that accepts RoutePolicyStatementPropertiesArgs and RoutePolicyStatementPropertiesOutput values.
// You can construct a concrete instance of `RoutePolicyStatementPropertiesInput` via:
//
//	RoutePolicyStatementPropertiesArgs{...}
type RoutePolicyStatementPropertiesInput interface {
	pulumi.Input

	ToRoutePolicyStatementPropertiesOutput() RoutePolicyStatementPropertiesOutput
	ToRoutePolicyStatementPropertiesOutputWithContext(context.Context) RoutePolicyStatementPropertiesOutput
}

// Route Policy Statement properties..
type RoutePolicyStatementPropertiesArgs struct {
	// Route policy action properties.
	Action StatementActionPropertiesInput `pulumi:"action"`
	// Switch configuration description.
	Annotation pulumi.StringPtrInput `pulumi:"annotation"`
	// Route policy condition properties.
	Condition StatementConditionPropertiesInput `pulumi:"condition"`
	// Sequence to insert to/delete from existing route.
	SequenceNumber pulumi.Float64Input `pulumi:"sequenceNumber"`
}

func (RoutePolicyStatementPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePolicyStatementProperties)(nil)).Elem()
}

func (i RoutePolicyStatementPropertiesArgs) ToRoutePolicyStatementPropertiesOutput() RoutePolicyStatementPropertiesOutput {
	return i.ToRoutePolicyStatementPropertiesOutputWithContext(context.Background())
}

func (i RoutePolicyStatementPropertiesArgs) ToRoutePolicyStatementPropertiesOutputWithContext(ctx context.Context) RoutePolicyStatementPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePolicyStatementPropertiesOutput)
}

func (i RoutePolicyStatementPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[RoutePolicyStatementProperties] {
	return pulumix.Output[RoutePolicyStatementProperties]{
		OutputState: i.ToRoutePolicyStatementPropertiesOutputWithContext(ctx).OutputState,
	}
}

// RoutePolicyStatementPropertiesArrayInput is an input type that accepts RoutePolicyStatementPropertiesArray and RoutePolicyStatementPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutePolicyStatementPropertiesArrayInput` via:
//
//	RoutePolicyStatementPropertiesArray{ RoutePolicyStatementPropertiesArgs{...} }
type RoutePolicyStatementPropertiesArrayInput interface {
	pulumi.Input

	ToRoutePolicyStatementPropertiesArrayOutput() RoutePolicyStatementPropertiesArrayOutput
	ToRoutePolicyStatementPropertiesArrayOutputWithContext(context.Context) RoutePolicyStatementPropertiesArrayOutput
}

type RoutePolicyStatementPropertiesArray []RoutePolicyStatementPropertiesInput

func (RoutePolicyStatementPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePolicyStatementProperties)(nil)).Elem()
}

func (i RoutePolicyStatementPropertiesArray) ToRoutePolicyStatementPropertiesArrayOutput() RoutePolicyStatementPropertiesArrayOutput {
	return i.ToRoutePolicyStatementPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutePolicyStatementPropertiesArray) ToRoutePolicyStatementPropertiesArrayOutputWithContext(ctx context.Context) RoutePolicyStatementPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePolicyStatementPropertiesArrayOutput)
}

func (i RoutePolicyStatementPropertiesArray) ToOutput(ctx context.Context) pulumix.Output[[]RoutePolicyStatementProperties] {
	return pulumix.Output[[]RoutePolicyStatementProperties]{
		OutputState: i.ToRoutePolicyStatementPropertiesArrayOutputWithContext(ctx).OutputState,
	}
}

// Route Policy Statement properties..
type RoutePolicyStatementPropertiesOutput struct{ *pulumi.OutputState }

func (RoutePolicyStatementPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePolicyStatementProperties)(nil)).Elem()
}

func (o RoutePolicyStatementPropertiesOutput) ToRoutePolicyStatementPropertiesOutput() RoutePolicyStatementPropertiesOutput {
	return o
}

func (o RoutePolicyStatementPropertiesOutput) ToRoutePolicyStatementPropertiesOutputWithContext(ctx context.Context) RoutePolicyStatementPropertiesOutput {
	return o
}

func (o RoutePolicyStatementPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[RoutePolicyStatementProperties] {
	return pulumix.Output[RoutePolicyStatementProperties]{
		OutputState: o.OutputState,
	}
}

// Route policy action properties.
func (o RoutePolicyStatementPropertiesOutput) Action() StatementActionPropertiesOutput {
	return o.ApplyT(func(v RoutePolicyStatementProperties) StatementActionProperties { return v.Action }).(StatementActionPropertiesOutput)
}

// Switch configuration description.
func (o RoutePolicyStatementPropertiesOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePolicyStatementProperties) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Route policy condition properties.
func (o RoutePolicyStatementPropertiesOutput) Condition() StatementConditionPropertiesOutput {
	return o.ApplyT(func(v RoutePolicyStatementProperties) StatementConditionProperties { return v.Condition }).(StatementConditionPropertiesOutput)
}

// Sequence to insert to/delete from existing route.
func (o RoutePolicyStatementPropertiesOutput) SequenceNumber() pulumi.Float64Output {
	return o.ApplyT(func(v RoutePolicyStatementProperties) float64 { return v.SequenceNumber }).(pulumi.Float64Output)
}

type RoutePolicyStatementPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutePolicyStatementPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePolicyStatementProperties)(nil)).Elem()
}

func (o RoutePolicyStatementPropertiesArrayOutput) ToRoutePolicyStatementPropertiesArrayOutput() RoutePolicyStatementPropertiesArrayOutput {
	return o
}

func (o RoutePolicyStatementPropertiesArrayOutput) ToRoutePolicyStatementPropertiesArrayOutputWithContext(ctx context.Context) RoutePolicyStatementPropertiesArrayOutput {
	return o
}

func (o RoutePolicyStatementPropertiesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RoutePolicyStatementProperties] {
	return pulumix.Output[[]RoutePolicyStatementProperties]{
		OutputState: o.OutputState,
	}
}

func (o RoutePolicyStatementPropertiesArrayOutput) Index(i pulumi.IntInput) RoutePolicyStatementPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutePolicyStatementProperties {
		return vs[0].([]RoutePolicyStatementProperties)[vs[1].(int)]
	}).(RoutePolicyStatementPropertiesOutput)
}

// Route Policy Statement properties..
type RoutePolicyStatementPropertiesResponse struct {
	// Route policy action properties.
	Action StatementActionPropertiesResponse `pulumi:"action"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Route policy condition properties.
	Condition StatementConditionPropertiesResponse `pulumi:"condition"`
	// Sequence to insert to/delete from existing route.
	SequenceNumber float64 `pulumi:"sequenceNumber"`
}

// Route Policy Statement properties..
type RoutePolicyStatementPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutePolicyStatementPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePolicyStatementPropertiesResponse)(nil)).Elem()
}

func (o RoutePolicyStatementPropertiesResponseOutput) ToRoutePolicyStatementPropertiesResponseOutput() RoutePolicyStatementPropertiesResponseOutput {
	return o
}

func (o RoutePolicyStatementPropertiesResponseOutput) ToRoutePolicyStatementPropertiesResponseOutputWithContext(ctx context.Context) RoutePolicyStatementPropertiesResponseOutput {
	return o
}

func (o RoutePolicyStatementPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[RoutePolicyStatementPropertiesResponse] {
	return pulumix.Output[RoutePolicyStatementPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Route policy action properties.
func (o RoutePolicyStatementPropertiesResponseOutput) Action() StatementActionPropertiesResponseOutput {
	return o.ApplyT(func(v RoutePolicyStatementPropertiesResponse) StatementActionPropertiesResponse { return v.Action }).(StatementActionPropertiesResponseOutput)
}

// Switch configuration description.
func (o RoutePolicyStatementPropertiesResponseOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePolicyStatementPropertiesResponse) *string { return v.Annotation }).(pulumi.StringPtrOutput)
}

// Route policy condition properties.
func (o RoutePolicyStatementPropertiesResponseOutput) Condition() StatementConditionPropertiesResponseOutput {
	return o.ApplyT(func(v RoutePolicyStatementPropertiesResponse) StatementConditionPropertiesResponse {
		return v.Condition
	}).(StatementConditionPropertiesResponseOutput)
}

// Sequence to insert to/delete from existing route.
func (o RoutePolicyStatementPropertiesResponseOutput) SequenceNumber() pulumi.Float64Output {
	return o.ApplyT(func(v RoutePolicyStatementPropertiesResponse) float64 { return v.SequenceNumber }).(pulumi.Float64Output)
}

type RoutePolicyStatementPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutePolicyStatementPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePolicyStatementPropertiesResponse)(nil)).Elem()
}

func (o RoutePolicyStatementPropertiesResponseArrayOutput) ToRoutePolicyStatementPropertiesResponseArrayOutput() RoutePolicyStatementPropertiesResponseArrayOutput {
	return o
}

func (o RoutePolicyStatementPropertiesResponseArrayOutput) ToRoutePolicyStatementPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutePolicyStatementPropertiesResponseArrayOutput {
	return o
}

func (o RoutePolicyStatementPropertiesResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RoutePolicyStatementPropertiesResponse] {
	return pulumix.Output[[]RoutePolicyStatementPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o RoutePolicyStatementPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutePolicyStatementPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutePolicyStatementPropertiesResponse {
		return vs[0].([]RoutePolicyStatementPropertiesResponse)[vs[1].(int)]
	}).(RoutePolicyStatementPropertiesResponseOutput)
}

// Route policy action properties.
type StatementActionProperties struct {
	// action. Example: Permit | Deny.
	ActionType string `pulumi:"actionType"`
	// IP Community Properties.
	IpCommunityProperties *ActionIpCommunityProperties `pulumi:"ipCommunityProperties"`
	// IP Extended Community Properties.
	IpExtendedCommunityProperties *ActionIpExtendedCommunityProperties `pulumi:"ipExtendedCommunityProperties"`
	// localPreference of the route policy.
	LocalPreference *float64 `pulumi:"localPreference"`
}

// StatementActionPropertiesInput is an input type that accepts StatementActionPropertiesArgs and StatementActionPropertiesOutput values.
// You can construct a concrete instance of `StatementActionPropertiesInput` via:
//
//	StatementActionPropertiesArgs{...}
type StatementActionPropertiesInput interface {
	pulumi.Input

	ToStatementActionPropertiesOutput() StatementActionPropertiesOutput
	ToStatementActionPropertiesOutputWithContext(context.Context) StatementActionPropertiesOutput
}

// Route policy action properties.
type StatementActionPropertiesArgs struct {
	// action. Example: Permit | Deny.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// IP Community Properties.
	IpCommunityProperties ActionIpCommunityPropertiesPtrInput `pulumi:"ipCommunityProperties"`
	// IP Extended Community Properties.
	IpExtendedCommunityProperties ActionIpExtendedCommunityPropertiesPtrInput `pulumi:"ipExtendedCommunityProperties"`
	// localPreference of the route policy.
	LocalPreference pulumi.Float64PtrInput `pulumi:"localPreference"`
}

func (StatementActionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementActionProperties)(nil)).Elem()
}

func (i StatementActionPropertiesArgs) ToStatementActionPropertiesOutput() StatementActionPropertiesOutput {
	return i.ToStatementActionPropertiesOutputWithContext(context.Background())
}

func (i StatementActionPropertiesArgs) ToStatementActionPropertiesOutputWithContext(ctx context.Context) StatementActionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatementActionPropertiesOutput)
}

func (i StatementActionPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[StatementActionProperties] {
	return pulumix.Output[StatementActionProperties]{
		OutputState: i.ToStatementActionPropertiesOutputWithContext(ctx).OutputState,
	}
}

// Route policy action properties.
type StatementActionPropertiesOutput struct{ *pulumi.OutputState }

func (StatementActionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementActionProperties)(nil)).Elem()
}

func (o StatementActionPropertiesOutput) ToStatementActionPropertiesOutput() StatementActionPropertiesOutput {
	return o
}

func (o StatementActionPropertiesOutput) ToStatementActionPropertiesOutputWithContext(ctx context.Context) StatementActionPropertiesOutput {
	return o
}

func (o StatementActionPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[StatementActionProperties] {
	return pulumix.Output[StatementActionProperties]{
		OutputState: o.OutputState,
	}
}

// action. Example: Permit | Deny.
func (o StatementActionPropertiesOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v StatementActionProperties) string { return v.ActionType }).(pulumi.StringOutput)
}

// IP Community Properties.
func (o StatementActionPropertiesOutput) IpCommunityProperties() ActionIpCommunityPropertiesPtrOutput {
	return o.ApplyT(func(v StatementActionProperties) *ActionIpCommunityProperties { return v.IpCommunityProperties }).(ActionIpCommunityPropertiesPtrOutput)
}

// IP Extended Community Properties.
func (o StatementActionPropertiesOutput) IpExtendedCommunityProperties() ActionIpExtendedCommunityPropertiesPtrOutput {
	return o.ApplyT(func(v StatementActionProperties) *ActionIpExtendedCommunityProperties {
		return v.IpExtendedCommunityProperties
	}).(ActionIpExtendedCommunityPropertiesPtrOutput)
}

// localPreference of the route policy.
func (o StatementActionPropertiesOutput) LocalPreference() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StatementActionProperties) *float64 { return v.LocalPreference }).(pulumi.Float64PtrOutput)
}

// Route policy action properties.
type StatementActionPropertiesResponse struct {
	// action. Example: Permit | Deny.
	ActionType string `pulumi:"actionType"`
	// IP Community Properties.
	IpCommunityProperties *ActionIpCommunityPropertiesResponse `pulumi:"ipCommunityProperties"`
	// IP Extended Community Properties.
	IpExtendedCommunityProperties *ActionIpExtendedCommunityPropertiesResponse `pulumi:"ipExtendedCommunityProperties"`
	// localPreference of the route policy.
	LocalPreference *float64 `pulumi:"localPreference"`
}

// Route policy action properties.
type StatementActionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StatementActionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementActionPropertiesResponse)(nil)).Elem()
}

func (o StatementActionPropertiesResponseOutput) ToStatementActionPropertiesResponseOutput() StatementActionPropertiesResponseOutput {
	return o
}

func (o StatementActionPropertiesResponseOutput) ToStatementActionPropertiesResponseOutputWithContext(ctx context.Context) StatementActionPropertiesResponseOutput {
	return o
}

func (o StatementActionPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StatementActionPropertiesResponse] {
	return pulumix.Output[StatementActionPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// action. Example: Permit | Deny.
func (o StatementActionPropertiesResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v StatementActionPropertiesResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// IP Community Properties.
func (o StatementActionPropertiesResponseOutput) IpCommunityProperties() ActionIpCommunityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StatementActionPropertiesResponse) *ActionIpCommunityPropertiesResponse {
		return v.IpCommunityProperties
	}).(ActionIpCommunityPropertiesResponsePtrOutput)
}

// IP Extended Community Properties.
func (o StatementActionPropertiesResponseOutput) IpExtendedCommunityProperties() ActionIpExtendedCommunityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StatementActionPropertiesResponse) *ActionIpExtendedCommunityPropertiesResponse {
		return v.IpExtendedCommunityProperties
	}).(ActionIpExtendedCommunityPropertiesResponsePtrOutput)
}

// localPreference of the route policy.
func (o StatementActionPropertiesResponseOutput) LocalPreference() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StatementActionPropertiesResponse) *float64 { return v.LocalPreference }).(pulumi.Float64PtrOutput)
}

// Route policy statement condition properties.
type StatementConditionProperties struct {
	// List of IP Community resource IDs.
	IpCommunityIds []string `pulumi:"ipCommunityIds"`
	// List of IP Extended Community resource IDs.
	IpExtendedCommunityIds []string `pulumi:"ipExtendedCommunityIds"`
	// Arm Resource Id of IpPrefix.
	IpPrefixId *string `pulumi:"ipPrefixId"`
}

// StatementConditionPropertiesInput is an input type that accepts StatementConditionPropertiesArgs and StatementConditionPropertiesOutput values.
// You can construct a concrete instance of `StatementConditionPropertiesInput` via:
//
//	StatementConditionPropertiesArgs{...}
type StatementConditionPropertiesInput interface {
	pulumi.Input

	ToStatementConditionPropertiesOutput() StatementConditionPropertiesOutput
	ToStatementConditionPropertiesOutputWithContext(context.Context) StatementConditionPropertiesOutput
}

// Route policy statement condition properties.
type StatementConditionPropertiesArgs struct {
	// List of IP Community resource IDs.
	IpCommunityIds pulumi.StringArrayInput `pulumi:"ipCommunityIds"`
	// List of IP Extended Community resource IDs.
	IpExtendedCommunityIds pulumi.StringArrayInput `pulumi:"ipExtendedCommunityIds"`
	// Arm Resource Id of IpPrefix.
	IpPrefixId pulumi.StringPtrInput `pulumi:"ipPrefixId"`
}

func (StatementConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementConditionProperties)(nil)).Elem()
}

func (i StatementConditionPropertiesArgs) ToStatementConditionPropertiesOutput() StatementConditionPropertiesOutput {
	return i.ToStatementConditionPropertiesOutputWithContext(context.Background())
}

func (i StatementConditionPropertiesArgs) ToStatementConditionPropertiesOutputWithContext(ctx context.Context) StatementConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatementConditionPropertiesOutput)
}

func (i StatementConditionPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[StatementConditionProperties] {
	return pulumix.Output[StatementConditionProperties]{
		OutputState: i.ToStatementConditionPropertiesOutputWithContext(ctx).OutputState,
	}
}

// Route policy statement condition properties.
type StatementConditionPropertiesOutput struct{ *pulumi.OutputState }

func (StatementConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementConditionProperties)(nil)).Elem()
}

func (o StatementConditionPropertiesOutput) ToStatementConditionPropertiesOutput() StatementConditionPropertiesOutput {
	return o
}

func (o StatementConditionPropertiesOutput) ToStatementConditionPropertiesOutputWithContext(ctx context.Context) StatementConditionPropertiesOutput {
	return o
}

func (o StatementConditionPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[StatementConditionProperties] {
	return pulumix.Output[StatementConditionProperties]{
		OutputState: o.OutputState,
	}
}

// List of IP Community resource IDs.
func (o StatementConditionPropertiesOutput) IpCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StatementConditionProperties) []string { return v.IpCommunityIds }).(pulumi.StringArrayOutput)
}

// List of IP Extended Community resource IDs.
func (o StatementConditionPropertiesOutput) IpExtendedCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StatementConditionProperties) []string { return v.IpExtendedCommunityIds }).(pulumi.StringArrayOutput)
}

// Arm Resource Id of IpPrefix.
func (o StatementConditionPropertiesOutput) IpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatementConditionProperties) *string { return v.IpPrefixId }).(pulumi.StringPtrOutput)
}

// Route policy statement condition properties.
type StatementConditionPropertiesResponse struct {
	// List of IP Community resource IDs.
	IpCommunityIds []string `pulumi:"ipCommunityIds"`
	// List of IP Extended Community resource IDs.
	IpExtendedCommunityIds []string `pulumi:"ipExtendedCommunityIds"`
	// Arm Resource Id of IpPrefix.
	IpPrefixId *string `pulumi:"ipPrefixId"`
}

// Route policy statement condition properties.
type StatementConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StatementConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementConditionPropertiesResponse)(nil)).Elem()
}

func (o StatementConditionPropertiesResponseOutput) ToStatementConditionPropertiesResponseOutput() StatementConditionPropertiesResponseOutput {
	return o
}

func (o StatementConditionPropertiesResponseOutput) ToStatementConditionPropertiesResponseOutputWithContext(ctx context.Context) StatementConditionPropertiesResponseOutput {
	return o
}

func (o StatementConditionPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StatementConditionPropertiesResponse] {
	return pulumix.Output[StatementConditionPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// List of IP Community resource IDs.
func (o StatementConditionPropertiesResponseOutput) IpCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StatementConditionPropertiesResponse) []string { return v.IpCommunityIds }).(pulumi.StringArrayOutput)
}

// List of IP Extended Community resource IDs.
func (o StatementConditionPropertiesResponseOutput) IpExtendedCommunityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StatementConditionPropertiesResponse) []string { return v.IpExtendedCommunityIds }).(pulumi.StringArrayOutput)
}

// Arm Resource Id of IpPrefix.
func (o StatementConditionPropertiesResponseOutput) IpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatementConditionPropertiesResponse) *string { return v.IpPrefixId }).(pulumi.StringPtrOutput)
}

// staticRouteConfiguration model.
type StaticRouteConfiguration struct {
	// List with object IPv4Routes.
	Ipv4Routes []StaticRouteProperties `pulumi:"ipv4Routes"`
	// List with object IPv6Routes.
	Ipv6Routes []StaticRouteProperties `pulumi:"ipv6Routes"`
}

// StaticRouteConfigurationInput is an input type that accepts StaticRouteConfigurationArgs and StaticRouteConfigurationOutput values.
// You can construct a concrete instance of `StaticRouteConfigurationInput` via:
//
//	StaticRouteConfigurationArgs{...}
type StaticRouteConfigurationInput interface {
	pulumi.Input

	ToStaticRouteConfigurationOutput() StaticRouteConfigurationOutput
	ToStaticRouteConfigurationOutputWithContext(context.Context) StaticRouteConfigurationOutput
}

// staticRouteConfiguration model.
type StaticRouteConfigurationArgs struct {
	// List with object IPv4Routes.
	Ipv4Routes StaticRoutePropertiesArrayInput `pulumi:"ipv4Routes"`
	// List with object IPv6Routes.
	Ipv6Routes StaticRoutePropertiesArrayInput `pulumi:"ipv6Routes"`
}

func (StaticRouteConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteConfiguration)(nil)).Elem()
}

func (i StaticRouteConfigurationArgs) ToStaticRouteConfigurationOutput() StaticRouteConfigurationOutput {
	return i.ToStaticRouteConfigurationOutputWithContext(context.Background())
}

func (i StaticRouteConfigurationArgs) ToStaticRouteConfigurationOutputWithContext(ctx context.Context) StaticRouteConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteConfigurationOutput)
}

func (i StaticRouteConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[StaticRouteConfiguration] {
	return pulumix.Output[StaticRouteConfiguration]{
		OutputState: i.ToStaticRouteConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i StaticRouteConfigurationArgs) ToStaticRouteConfigurationPtrOutput() StaticRouteConfigurationPtrOutput {
	return i.ToStaticRouteConfigurationPtrOutputWithContext(context.Background())
}

func (i StaticRouteConfigurationArgs) ToStaticRouteConfigurationPtrOutputWithContext(ctx context.Context) StaticRouteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteConfigurationOutput).ToStaticRouteConfigurationPtrOutputWithContext(ctx)
}

// StaticRouteConfigurationPtrInput is an input type that accepts StaticRouteConfigurationArgs, StaticRouteConfigurationPtr and StaticRouteConfigurationPtrOutput values.
// You can construct a concrete instance of `StaticRouteConfigurationPtrInput` via:
//
//	        StaticRouteConfigurationArgs{...}
//
//	or:
//
//	        nil
type StaticRouteConfigurationPtrInput interface {
	pulumi.Input

	ToStaticRouteConfigurationPtrOutput() StaticRouteConfigurationPtrOutput
	ToStaticRouteConfigurationPtrOutputWithContext(context.Context) StaticRouteConfigurationPtrOutput
}

type staticRouteConfigurationPtrType StaticRouteConfigurationArgs

func StaticRouteConfigurationPtr(v *StaticRouteConfigurationArgs) StaticRouteConfigurationPtrInput {
	return (*staticRouteConfigurationPtrType)(v)
}

func (*staticRouteConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRouteConfiguration)(nil)).Elem()
}

func (i *staticRouteConfigurationPtrType) ToStaticRouteConfigurationPtrOutput() StaticRouteConfigurationPtrOutput {
	return i.ToStaticRouteConfigurationPtrOutputWithContext(context.Background())
}

func (i *staticRouteConfigurationPtrType) ToStaticRouteConfigurationPtrOutputWithContext(ctx context.Context) StaticRouteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteConfigurationPtrOutput)
}

func (i *staticRouteConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*StaticRouteConfiguration] {
	return pulumix.Output[*StaticRouteConfiguration]{
		OutputState: i.ToStaticRouteConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// staticRouteConfiguration model.
type StaticRouteConfigurationOutput struct{ *pulumi.OutputState }

func (StaticRouteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteConfiguration)(nil)).Elem()
}

func (o StaticRouteConfigurationOutput) ToStaticRouteConfigurationOutput() StaticRouteConfigurationOutput {
	return o
}

func (o StaticRouteConfigurationOutput) ToStaticRouteConfigurationOutputWithContext(ctx context.Context) StaticRouteConfigurationOutput {
	return o
}

func (o StaticRouteConfigurationOutput) ToStaticRouteConfigurationPtrOutput() StaticRouteConfigurationPtrOutput {
	return o.ToStaticRouteConfigurationPtrOutputWithContext(context.Background())
}

func (o StaticRouteConfigurationOutput) ToStaticRouteConfigurationPtrOutputWithContext(ctx context.Context) StaticRouteConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticRouteConfiguration) *StaticRouteConfiguration {
		return &v
	}).(StaticRouteConfigurationPtrOutput)
}

func (o StaticRouteConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[StaticRouteConfiguration] {
	return pulumix.Output[StaticRouteConfiguration]{
		OutputState: o.OutputState,
	}
}

// List with object IPv4Routes.
func (o StaticRouteConfigurationOutput) Ipv4Routes() StaticRoutePropertiesArrayOutput {
	return o.ApplyT(func(v StaticRouteConfiguration) []StaticRouteProperties { return v.Ipv4Routes }).(StaticRoutePropertiesArrayOutput)
}

// List with object IPv6Routes.
func (o StaticRouteConfigurationOutput) Ipv6Routes() StaticRoutePropertiesArrayOutput {
	return o.ApplyT(func(v StaticRouteConfiguration) []StaticRouteProperties { return v.Ipv6Routes }).(StaticRoutePropertiesArrayOutput)
}

type StaticRouteConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StaticRouteConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRouteConfiguration)(nil)).Elem()
}

func (o StaticRouteConfigurationPtrOutput) ToStaticRouteConfigurationPtrOutput() StaticRouteConfigurationPtrOutput {
	return o
}

func (o StaticRouteConfigurationPtrOutput) ToStaticRouteConfigurationPtrOutputWithContext(ctx context.Context) StaticRouteConfigurationPtrOutput {
	return o
}

func (o StaticRouteConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*StaticRouteConfiguration] {
	return pulumix.Output[*StaticRouteConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o StaticRouteConfigurationPtrOutput) Elem() StaticRouteConfigurationOutput {
	return o.ApplyT(func(v *StaticRouteConfiguration) StaticRouteConfiguration {
		if v != nil {
			return *v
		}
		var ret StaticRouteConfiguration
		return ret
	}).(StaticRouteConfigurationOutput)
}

// List with object IPv4Routes.
func (o StaticRouteConfigurationPtrOutput) Ipv4Routes() StaticRoutePropertiesArrayOutput {
	return o.ApplyT(func(v *StaticRouteConfiguration) []StaticRouteProperties {
		if v == nil {
			return nil
		}
		return v.Ipv4Routes
	}).(StaticRoutePropertiesArrayOutput)
}

// List with object IPv6Routes.
func (o StaticRouteConfigurationPtrOutput) Ipv6Routes() StaticRoutePropertiesArrayOutput {
	return o.ApplyT(func(v *StaticRouteConfiguration) []StaticRouteProperties {
		if v == nil {
			return nil
		}
		return v.Ipv6Routes
	}).(StaticRoutePropertiesArrayOutput)
}

// staticRouteConfiguration model.
type StaticRouteConfigurationResponse struct {
	// BFD configuration properties
	BfdConfiguration *BfdConfigurationResponse `pulumi:"bfdConfiguration"`
	// List with object IPv4Routes.
	Ipv4Routes []StaticRoutePropertiesResponse `pulumi:"ipv4Routes"`
	// List with object IPv6Routes.
	Ipv6Routes []StaticRoutePropertiesResponse `pulumi:"ipv6Routes"`
}

// staticRouteConfiguration model.
type StaticRouteConfigurationResponseOutput struct{ *pulumi.OutputState }

func (StaticRouteConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteConfigurationResponse)(nil)).Elem()
}

func (o StaticRouteConfigurationResponseOutput) ToStaticRouteConfigurationResponseOutput() StaticRouteConfigurationResponseOutput {
	return o
}

func (o StaticRouteConfigurationResponseOutput) ToStaticRouteConfigurationResponseOutputWithContext(ctx context.Context) StaticRouteConfigurationResponseOutput {
	return o
}

func (o StaticRouteConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StaticRouteConfigurationResponse] {
	return pulumix.Output[StaticRouteConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// BFD configuration properties
func (o StaticRouteConfigurationResponseOutput) BfdConfiguration() BfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v StaticRouteConfigurationResponse) *BfdConfigurationResponse { return v.BfdConfiguration }).(BfdConfigurationResponsePtrOutput)
}

// List with object IPv4Routes.
func (o StaticRouteConfigurationResponseOutput) Ipv4Routes() StaticRoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v StaticRouteConfigurationResponse) []StaticRoutePropertiesResponse { return v.Ipv4Routes }).(StaticRoutePropertiesResponseArrayOutput)
}

// List with object IPv6Routes.
func (o StaticRouteConfigurationResponseOutput) Ipv6Routes() StaticRoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v StaticRouteConfigurationResponse) []StaticRoutePropertiesResponse { return v.Ipv6Routes }).(StaticRoutePropertiesResponseArrayOutput)
}

type StaticRouteConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticRouteConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRouteConfigurationResponse)(nil)).Elem()
}

func (o StaticRouteConfigurationResponsePtrOutput) ToStaticRouteConfigurationResponsePtrOutput() StaticRouteConfigurationResponsePtrOutput {
	return o
}

func (o StaticRouteConfigurationResponsePtrOutput) ToStaticRouteConfigurationResponsePtrOutputWithContext(ctx context.Context) StaticRouteConfigurationResponsePtrOutput {
	return o
}

func (o StaticRouteConfigurationResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*StaticRouteConfigurationResponse] {
	return pulumix.Output[*StaticRouteConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

func (o StaticRouteConfigurationResponsePtrOutput) Elem() StaticRouteConfigurationResponseOutput {
	return o.ApplyT(func(v *StaticRouteConfigurationResponse) StaticRouteConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret StaticRouteConfigurationResponse
		return ret
	}).(StaticRouteConfigurationResponseOutput)
}

// BFD configuration properties
func (o StaticRouteConfigurationResponsePtrOutput) BfdConfiguration() BfdConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *StaticRouteConfigurationResponse) *BfdConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BfdConfiguration
	}).(BfdConfigurationResponsePtrOutput)
}

// List with object IPv4Routes.
func (o StaticRouteConfigurationResponsePtrOutput) Ipv4Routes() StaticRoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *StaticRouteConfigurationResponse) []StaticRoutePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Ipv4Routes
	}).(StaticRoutePropertiesResponseArrayOutput)
}

// List with object IPv6Routes.
func (o StaticRouteConfigurationResponsePtrOutput) Ipv6Routes() StaticRoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *StaticRouteConfigurationResponse) []StaticRoutePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Ipv6Routes
	}).(StaticRoutePropertiesResponseArrayOutput)
}

// Static Route properties.
type StaticRouteProperties struct {
	// List of next hop IPv4 | IPv6 addresses.
	NextHop []string `pulumi:"nextHop"`
	// IPv4 | IPv6 Prefix.
	Prefix string `pulumi:"prefix"`
}

// StaticRoutePropertiesInput is an input type that accepts StaticRoutePropertiesArgs and StaticRoutePropertiesOutput values.
// You can construct a concrete instance of `StaticRoutePropertiesInput` via:
//
//	StaticRoutePropertiesArgs{...}
type StaticRoutePropertiesInput interface {
	pulumi.Input

	ToStaticRoutePropertiesOutput() StaticRoutePropertiesOutput
	ToStaticRoutePropertiesOutputWithContext(context.Context) StaticRoutePropertiesOutput
}

// Static Route properties.
type StaticRoutePropertiesArgs struct {
	// List of next hop IPv4 | IPv6 addresses.
	NextHop pulumi.StringArrayInput `pulumi:"nextHop"`
	// IPv4 | IPv6 Prefix.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (StaticRoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteProperties)(nil)).Elem()
}

func (i StaticRoutePropertiesArgs) ToStaticRoutePropertiesOutput() StaticRoutePropertiesOutput {
	return i.ToStaticRoutePropertiesOutputWithContext(context.Background())
}

func (i StaticRoutePropertiesArgs) ToStaticRoutePropertiesOutputWithContext(ctx context.Context) StaticRoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutePropertiesOutput)
}

func (i StaticRoutePropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[StaticRouteProperties] {
	return pulumix.Output[StaticRouteProperties]{
		OutputState: i.ToStaticRoutePropertiesOutputWithContext(ctx).OutputState,
	}
}

// StaticRoutePropertiesArrayInput is an input type that accepts StaticRoutePropertiesArray and StaticRoutePropertiesArrayOutput values.
// You can construct a concrete instance of `StaticRoutePropertiesArrayInput` via:
//
//	StaticRoutePropertiesArray{ StaticRoutePropertiesArgs{...} }
type StaticRoutePropertiesArrayInput interface {
	pulumi.Input

	ToStaticRoutePropertiesArrayOutput() StaticRoutePropertiesArrayOutput
	ToStaticRoutePropertiesArrayOutputWithContext(context.Context) StaticRoutePropertiesArrayOutput
}

type StaticRoutePropertiesArray []StaticRoutePropertiesInput

func (StaticRoutePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteProperties)(nil)).Elem()
}

func (i StaticRoutePropertiesArray) ToStaticRoutePropertiesArrayOutput() StaticRoutePropertiesArrayOutput {
	return i.ToStaticRoutePropertiesArrayOutputWithContext(context.Background())
}

func (i StaticRoutePropertiesArray) ToStaticRoutePropertiesArrayOutputWithContext(ctx context.Context) StaticRoutePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutePropertiesArrayOutput)
}

func (i StaticRoutePropertiesArray) ToOutput(ctx context.Context) pulumix.Output[[]StaticRouteProperties] {
	return pulumix.Output[[]StaticRouteProperties]{
		OutputState: i.ToStaticRoutePropertiesArrayOutputWithContext(ctx).OutputState,
	}
}

// Static Route properties.
type StaticRoutePropertiesOutput struct{ *pulumi.OutputState }

func (StaticRoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteProperties)(nil)).Elem()
}

func (o StaticRoutePropertiesOutput) ToStaticRoutePropertiesOutput() StaticRoutePropertiesOutput {
	return o
}

func (o StaticRoutePropertiesOutput) ToStaticRoutePropertiesOutputWithContext(ctx context.Context) StaticRoutePropertiesOutput {
	return o
}

func (o StaticRoutePropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[StaticRouteProperties] {
	return pulumix.Output[StaticRouteProperties]{
		OutputState: o.OutputState,
	}
}

// List of next hop IPv4 | IPv6 addresses.
func (o StaticRoutePropertiesOutput) NextHop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRouteProperties) []string { return v.NextHop }).(pulumi.StringArrayOutput)
}

// IPv4 | IPv6 Prefix.
func (o StaticRoutePropertiesOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v StaticRouteProperties) string { return v.Prefix }).(pulumi.StringOutput)
}

type StaticRoutePropertiesArrayOutput struct{ *pulumi.OutputState }

func (StaticRoutePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteProperties)(nil)).Elem()
}

func (o StaticRoutePropertiesArrayOutput) ToStaticRoutePropertiesArrayOutput() StaticRoutePropertiesArrayOutput {
	return o
}

func (o StaticRoutePropertiesArrayOutput) ToStaticRoutePropertiesArrayOutputWithContext(ctx context.Context) StaticRoutePropertiesArrayOutput {
	return o
}

func (o StaticRoutePropertiesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StaticRouteProperties] {
	return pulumix.Output[[]StaticRouteProperties]{
		OutputState: o.OutputState,
	}
}

func (o StaticRoutePropertiesArrayOutput) Index(i pulumi.IntInput) StaticRoutePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRouteProperties {
		return vs[0].([]StaticRouteProperties)[vs[1].(int)]
	}).(StaticRoutePropertiesOutput)
}

// Static Route properties.
type StaticRoutePropertiesResponse struct {
	// List of next hop IPv4 | IPv6 addresses.
	NextHop []string `pulumi:"nextHop"`
	// IPv4 | IPv6 Prefix.
	Prefix string `pulumi:"prefix"`
}

// Static Route properties.
type StaticRoutePropertiesResponseOutput struct{ *pulumi.OutputState }

func (StaticRoutePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutePropertiesResponse)(nil)).Elem()
}

func (o StaticRoutePropertiesResponseOutput) ToStaticRoutePropertiesResponseOutput() StaticRoutePropertiesResponseOutput {
	return o
}

func (o StaticRoutePropertiesResponseOutput) ToStaticRoutePropertiesResponseOutputWithContext(ctx context.Context) StaticRoutePropertiesResponseOutput {
	return o
}

func (o StaticRoutePropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StaticRoutePropertiesResponse] {
	return pulumix.Output[StaticRoutePropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// List of next hop IPv4 | IPv6 addresses.
func (o StaticRoutePropertiesResponseOutput) NextHop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRoutePropertiesResponse) []string { return v.NextHop }).(pulumi.StringArrayOutput)
}

// IPv4 | IPv6 Prefix.
func (o StaticRoutePropertiesResponseOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v StaticRoutePropertiesResponse) string { return v.Prefix }).(pulumi.StringOutput)
}

type StaticRoutePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticRoutePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoutePropertiesResponse)(nil)).Elem()
}

func (o StaticRoutePropertiesResponseArrayOutput) ToStaticRoutePropertiesResponseArrayOutput() StaticRoutePropertiesResponseArrayOutput {
	return o
}

func (o StaticRoutePropertiesResponseArrayOutput) ToStaticRoutePropertiesResponseArrayOutputWithContext(ctx context.Context) StaticRoutePropertiesResponseArrayOutput {
	return o
}

func (o StaticRoutePropertiesResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StaticRoutePropertiesResponse] {
	return pulumix.Output[[]StaticRoutePropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o StaticRoutePropertiesResponseArrayOutput) Index(i pulumi.IntInput) StaticRoutePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRoutePropertiesResponse {
		return vs[0].([]StaticRoutePropertiesResponse)[vs[1].(int)]
	}).(StaticRoutePropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDataResponse] {
	return pulumix.Output[SystemDataResponse]{
		OutputState: o.OutputState,
	}
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Network and credentials configuration currently applied to terminal server.
type TerminalServerConfiguration struct {
	// Password for the terminal server connection.
	Password string `pulumi:"password"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// Serial Number of Terminal server.
	SerialNumber *string `pulumi:"serialNumber"`
	// Username for the terminal server connection.
	Username string `pulumi:"username"`
}

// TerminalServerConfigurationInput is an input type that accepts TerminalServerConfigurationArgs and TerminalServerConfigurationOutput values.
// You can construct a concrete instance of `TerminalServerConfigurationInput` via:
//
//	TerminalServerConfigurationArgs{...}
type TerminalServerConfigurationInput interface {
	pulumi.Input

	ToTerminalServerConfigurationOutput() TerminalServerConfigurationOutput
	ToTerminalServerConfigurationOutputWithContext(context.Context) TerminalServerConfigurationOutput
}

// Network and credentials configuration currently applied to terminal server.
type TerminalServerConfigurationArgs struct {
	// Password for the terminal server connection.
	Password pulumi.StringInput `pulumi:"password"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix pulumi.StringInput `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix pulumi.StringPtrInput `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix pulumi.StringInput `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix pulumi.StringPtrInput `pulumi:"secondaryIpv6Prefix"`
	// Serial Number of Terminal server.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Username for the terminal server connection.
	Username pulumi.StringInput `pulumi:"username"`
}

func (TerminalServerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalServerConfiguration)(nil)).Elem()
}

func (i TerminalServerConfigurationArgs) ToTerminalServerConfigurationOutput() TerminalServerConfigurationOutput {
	return i.ToTerminalServerConfigurationOutputWithContext(context.Background())
}

func (i TerminalServerConfigurationArgs) ToTerminalServerConfigurationOutputWithContext(ctx context.Context) TerminalServerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalServerConfigurationOutput)
}

func (i TerminalServerConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[TerminalServerConfiguration] {
	return pulumix.Output[TerminalServerConfiguration]{
		OutputState: i.ToTerminalServerConfigurationOutputWithContext(ctx).OutputState,
	}
}

// Network and credentials configuration currently applied to terminal server.
type TerminalServerConfigurationOutput struct{ *pulumi.OutputState }

func (TerminalServerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalServerConfiguration)(nil)).Elem()
}

func (o TerminalServerConfigurationOutput) ToTerminalServerConfigurationOutput() TerminalServerConfigurationOutput {
	return o
}

func (o TerminalServerConfigurationOutput) ToTerminalServerConfigurationOutputWithContext(ctx context.Context) TerminalServerConfigurationOutput {
	return o
}

func (o TerminalServerConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[TerminalServerConfiguration] {
	return pulumix.Output[TerminalServerConfiguration]{
		OutputState: o.OutputState,
	}
}

// Password for the terminal server connection.
func (o TerminalServerConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationOutput) PrimaryIpv4Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) string { return v.PrimaryIpv4Prefix }).(pulumi.StringOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationOutput) SecondaryIpv4Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) string { return v.SecondaryIpv4Prefix }).(pulumi.StringOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Serial Number of Terminal server.
func (o TerminalServerConfigurationOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Username for the terminal server connection.
func (o TerminalServerConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

// Network and credentials configuration currently applied to terminal server.
type TerminalServerConfigurationResponse struct {
	// ARM Resource ID used for the NetworkDevice.
	NetworkDeviceId string `pulumi:"networkDeviceId"`
	// Password for the terminal server connection.
	Password string `pulumi:"password"`
	// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv4Prefix string `pulumi:"primaryIpv4Prefix"`
	// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	PrimaryIpv6Prefix *string `pulumi:"primaryIpv6Prefix"`
	// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv4Prefix string `pulumi:"secondaryIpv4Prefix"`
	// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
	SecondaryIpv6Prefix *string `pulumi:"secondaryIpv6Prefix"`
	// Serial Number of Terminal server.
	SerialNumber *string `pulumi:"serialNumber"`
	// Username for the terminal server connection.
	Username string `pulumi:"username"`
}

// Network and credentials configuration currently applied to terminal server.
type TerminalServerConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TerminalServerConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalServerConfigurationResponse)(nil)).Elem()
}

func (o TerminalServerConfigurationResponseOutput) ToTerminalServerConfigurationResponseOutput() TerminalServerConfigurationResponseOutput {
	return o
}

func (o TerminalServerConfigurationResponseOutput) ToTerminalServerConfigurationResponseOutputWithContext(ctx context.Context) TerminalServerConfigurationResponseOutput {
	return o
}

func (o TerminalServerConfigurationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[TerminalServerConfigurationResponse] {
	return pulumix.Output[TerminalServerConfigurationResponse]{
		OutputState: o.OutputState,
	}
}

// ARM Resource ID used for the NetworkDevice.
func (o TerminalServerConfigurationResponseOutput) NetworkDeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) string { return v.NetworkDeviceId }).(pulumi.StringOutput)
}

// Password for the terminal server connection.
func (o TerminalServerConfigurationResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) string { return v.Password }).(pulumi.StringOutput)
}

// IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.0/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationResponseOutput) PrimaryIpv4Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) string { return v.PrimaryIpv4Prefix }).(pulumi.StringOutput)
}

// IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a0/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationResponseOutput) PrimaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) *string { return v.PrimaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Secondary IPv4 Address Prefix of CE-PE interconnect links. Example: 172.31.0.20/31. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationResponseOutput) SecondaryIpv4Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) string { return v.SecondaryIpv4Prefix }).(pulumi.StringOutput)
}

// Secondary IPv6 Address Prefix of CE-PE interconnect links. Example: 3FFE:FFFF:0:CD30::a4/126. The values can be specified at the time of creation or can be updated afterwards. Any update to the values post-provisioning may disrupt traffic. The 1st and 3rd IPs are to be configured on CE1 and CE2 for Option B interfaces. The 2nd and 4th IPs are to be configured on PE1 and PE2 for Option B interfaces.
func (o TerminalServerConfigurationResponseOutput) SecondaryIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) *string { return v.SecondaryIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Serial Number of Terminal server.
func (o TerminalServerConfigurationResponseOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Username for the terminal server connection.
func (o TerminalServerConfigurationResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v TerminalServerConfigurationResponse) string { return v.Username }).(pulumi.StringOutput)
}

// Configuration for infrastructure vpn.
type VpnConfigurationProperties struct {
	// option A properties
	OptionAProperties *OptionAProperties `pulumi:"optionAProperties"`
	// option B properties
	OptionBProperties *FabricOptionBProperties `pulumi:"optionBProperties"`
	// Peering option list.
	PeeringOption string `pulumi:"peeringOption"`
}

// Defaults sets the appropriate defaults for VpnConfigurationProperties
func (val *VpnConfigurationProperties) Defaults() *VpnConfigurationProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.OptionAProperties = tmp.OptionAProperties.Defaults()

	return &tmp
}

// VpnConfigurationPropertiesInput is an input type that accepts VpnConfigurationPropertiesArgs and VpnConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VpnConfigurationPropertiesInput` via:
//
//	VpnConfigurationPropertiesArgs{...}
type VpnConfigurationPropertiesInput interface {
	pulumi.Input

	ToVpnConfigurationPropertiesOutput() VpnConfigurationPropertiesOutput
	ToVpnConfigurationPropertiesOutputWithContext(context.Context) VpnConfigurationPropertiesOutput
}

// Configuration for infrastructure vpn.
type VpnConfigurationPropertiesArgs struct {
	// option A properties
	OptionAProperties OptionAPropertiesPtrInput `pulumi:"optionAProperties"`
	// option B properties
	OptionBProperties FabricOptionBPropertiesPtrInput `pulumi:"optionBProperties"`
	// Peering option list.
	PeeringOption pulumi.StringInput `pulumi:"peeringOption"`
}

// Defaults sets the appropriate defaults for VpnConfigurationPropertiesArgs
func (val *VpnConfigurationPropertiesArgs) Defaults() *VpnConfigurationPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (VpnConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConfigurationProperties)(nil)).Elem()
}

func (i VpnConfigurationPropertiesArgs) ToVpnConfigurationPropertiesOutput() VpnConfigurationPropertiesOutput {
	return i.ToVpnConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VpnConfigurationPropertiesArgs) ToVpnConfigurationPropertiesOutputWithContext(ctx context.Context) VpnConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConfigurationPropertiesOutput)
}

func (i VpnConfigurationPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[VpnConfigurationProperties] {
	return pulumix.Output[VpnConfigurationProperties]{
		OutputState: i.ToVpnConfigurationPropertiesOutputWithContext(ctx).OutputState,
	}
}

// Configuration for infrastructure vpn.
type VpnConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VpnConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConfigurationProperties)(nil)).Elem()
}

func (o VpnConfigurationPropertiesOutput) ToVpnConfigurationPropertiesOutput() VpnConfigurationPropertiesOutput {
	return o
}

func (o VpnConfigurationPropertiesOutput) ToVpnConfigurationPropertiesOutputWithContext(ctx context.Context) VpnConfigurationPropertiesOutput {
	return o
}

func (o VpnConfigurationPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConfigurationProperties] {
	return pulumix.Output[VpnConfigurationProperties]{
		OutputState: o.OutputState,
	}
}

// option A properties
func (o VpnConfigurationPropertiesOutput) OptionAProperties() OptionAPropertiesPtrOutput {
	return o.ApplyT(func(v VpnConfigurationProperties) *OptionAProperties { return v.OptionAProperties }).(OptionAPropertiesPtrOutput)
}

// option B properties
func (o VpnConfigurationPropertiesOutput) OptionBProperties() FabricOptionBPropertiesPtrOutput {
	return o.ApplyT(func(v VpnConfigurationProperties) *FabricOptionBProperties { return v.OptionBProperties }).(FabricOptionBPropertiesPtrOutput)
}

// Peering option list.
func (o VpnConfigurationPropertiesOutput) PeeringOption() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConfigurationProperties) string { return v.PeeringOption }).(pulumi.StringOutput)
}

// Configuration for infrastructure vpn.
type VpnConfigurationPropertiesResponse struct {
	// Indicates configuration state. Example: Enabled | Disabled.
	AdministrativeState string `pulumi:"administrativeState"`
	// Gets the networkToNetworkInterconnectId of the resource.
	NetworkToNetworkInterconnectId string `pulumi:"networkToNetworkInterconnectId"`
	// option A properties
	OptionAProperties *OptionAPropertiesResponse `pulumi:"optionAProperties"`
	// option B properties
	OptionBProperties *FabricOptionBPropertiesResponse `pulumi:"optionBProperties"`
	// Peering option list.
	PeeringOption string `pulumi:"peeringOption"`
}

// Defaults sets the appropriate defaults for VpnConfigurationPropertiesResponse
func (val *VpnConfigurationPropertiesResponse) Defaults() *VpnConfigurationPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.OptionAProperties = tmp.OptionAProperties.Defaults()

	return &tmp
}

// Configuration for infrastructure vpn.
type VpnConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VpnConfigurationPropertiesResponseOutput) ToVpnConfigurationPropertiesResponseOutput() VpnConfigurationPropertiesResponseOutput {
	return o
}

func (o VpnConfigurationPropertiesResponseOutput) ToVpnConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VpnConfigurationPropertiesResponseOutput {
	return o
}

func (o VpnConfigurationPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConfigurationPropertiesResponse] {
	return pulumix.Output[VpnConfigurationPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Indicates configuration state. Example: Enabled | Disabled.
func (o VpnConfigurationPropertiesResponseOutput) AdministrativeState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConfigurationPropertiesResponse) string { return v.AdministrativeState }).(pulumi.StringOutput)
}

// Gets the networkToNetworkInterconnectId of the resource.
func (o VpnConfigurationPropertiesResponseOutput) NetworkToNetworkInterconnectId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConfigurationPropertiesResponse) string { return v.NetworkToNetworkInterconnectId }).(pulumi.StringOutput)
}

// option A properties
func (o VpnConfigurationPropertiesResponseOutput) OptionAProperties() OptionAPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnConfigurationPropertiesResponse) *OptionAPropertiesResponse { return v.OptionAProperties }).(OptionAPropertiesResponsePtrOutput)
}

// option B properties
func (o VpnConfigurationPropertiesResponseOutput) OptionBProperties() FabricOptionBPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnConfigurationPropertiesResponse) *FabricOptionBPropertiesResponse {
		return v.OptionBProperties
	}).(FabricOptionBPropertiesResponsePtrOutput)
}

// Peering option list.
func (o VpnConfigurationPropertiesResponseOutput) PeeringOption() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConfigurationPropertiesResponse) string { return v.PeeringOption }).(pulumi.StringOutput)
}

// WorkloadServices IP ranges.
type WorkloadServicesResponse struct {
	// The IPv4 Address space is optional, if the value is defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.
	Ipv4AddressSpaces []string `pulumi:"ipv4AddressSpaces"`
	// The IPv6 is not supported right now.
	Ipv6AddressSpaces []string `pulumi:"ipv6AddressSpaces"`
}

// WorkloadServices IP ranges.
type WorkloadServicesResponseOutput struct{ *pulumi.OutputState }

func (WorkloadServicesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadServicesResponse)(nil)).Elem()
}

func (o WorkloadServicesResponseOutput) ToWorkloadServicesResponseOutput() WorkloadServicesResponseOutput {
	return o
}

func (o WorkloadServicesResponseOutput) ToWorkloadServicesResponseOutputWithContext(ctx context.Context) WorkloadServicesResponseOutput {
	return o
}

func (o WorkloadServicesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[WorkloadServicesResponse] {
	return pulumix.Output[WorkloadServicesResponse]{
		OutputState: o.OutputState,
	}
}

// The IPv4 Address space is optional, if the value is defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.
func (o WorkloadServicesResponseOutput) Ipv4AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadServicesResponse) []string { return v.Ipv4AddressSpaces }).(pulumi.StringArrayOutput)
}

// The IPv6 is not supported right now.
func (o WorkloadServicesResponseOutput) Ipv6AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadServicesResponse) []string { return v.Ipv6AddressSpaces }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessControlListConditionPropertiesOutput{})
	pulumi.RegisterOutputType(AccessControlListConditionPropertiesArrayOutput{})
	pulumi.RegisterOutputType(AccessControlListConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccessControlListConditionPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ActionIpCommunityPropertiesOutput{})
	pulumi.RegisterOutputType(ActionIpCommunityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ActionIpCommunityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ActionIpCommunityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ActionIpExtendedCommunityPropertiesOutput{})
	pulumi.RegisterOutputType(ActionIpExtendedCommunityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ActionIpExtendedCommunityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ActionIpExtendedCommunityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AggregateRouteOutput{})
	pulumi.RegisterOutputType(AggregateRouteArrayOutput{})
	pulumi.RegisterOutputType(AggregateRouteConfigurationOutput{})
	pulumi.RegisterOutputType(AggregateRouteConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AggregateRouteConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AggregateRouteConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AggregateRouteResponseOutput{})
	pulumi.RegisterOutputType(AggregateRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(BfdConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BfdConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(BgpConfigurationOutput{})
	pulumi.RegisterOutputType(BgpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BgpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BgpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectedSubnetOutput{})
	pulumi.RegisterOutputType(ConnectedSubnetArrayOutput{})
	pulumi.RegisterOutputType(ConnectedSubnetResponseOutput{})
	pulumi.RegisterOutputType(ConnectedSubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionInformationOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionInformationArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionInformationResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkPropertiesOptionAPropertiesOutput{})
	pulumi.RegisterOutputType(ExternalNetworkPropertiesOptionAPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExternalNetworkPropertiesResponseOptionAPropertiesOutput{})
	pulumi.RegisterOutputType(ExternalNetworkPropertiesResponseOptionAPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FabricBfdConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FabricBfdConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FabricOptionBPropertiesOutput{})
	pulumi.RegisterOutputType(FabricOptionBPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FabricOptionBPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FabricOptionBPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureServicesResponseOutput{})
	pulumi.RegisterOutputType(IpCommunityIdListOutput{})
	pulumi.RegisterOutputType(IpCommunityIdListPtrOutput{})
	pulumi.RegisterOutputType(IpCommunityIdListResponseOutput{})
	pulumi.RegisterOutputType(IpCommunityIdListResponsePtrOutput{})
	pulumi.RegisterOutputType(IpExtendedCommunityIdListOutput{})
	pulumi.RegisterOutputType(IpExtendedCommunityIdListPtrOutput{})
	pulumi.RegisterOutputType(IpExtendedCommunityIdListResponseOutput{})
	pulumi.RegisterOutputType(IpExtendedCommunityIdListResponsePtrOutput{})
	pulumi.RegisterOutputType(IpPrefixPropertiesIpPrefixRulesOutput{})
	pulumi.RegisterOutputType(IpPrefixPropertiesIpPrefixRulesArrayOutput{})
	pulumi.RegisterOutputType(IpPrefixPropertiesResponseIpPrefixRulesOutput{})
	pulumi.RegisterOutputType(IpPrefixPropertiesResponseIpPrefixRulesArrayOutput{})
	pulumi.RegisterOutputType(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyOutput{})
	pulumi.RegisterOutputType(L3IsolationDomainPatchPropertiesConnectedSubnetRoutePolicyPtrOutput{})
	pulumi.RegisterOutputType(L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyOutput{})
	pulumi.RegisterOutputType(L3IsolationDomainPatchPropertiesResponseConnectedSubnetRoutePolicyPtrOutput{})
	pulumi.RegisterOutputType(Layer2ConfigurationOutput{})
	pulumi.RegisterOutputType(Layer2ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(Layer2ConfigurationResponseOutput{})
	pulumi.RegisterOutputType(Layer2ConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(Layer3ConfigurationOutput{})
	pulumi.RegisterOutputType(Layer3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(Layer3ConfigurationResponseOutput{})
	pulumi.RegisterOutputType(Layer3ConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ManagementNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NeighborAddressOutput{})
	pulumi.RegisterOutputType(NeighborAddressArrayOutput{})
	pulumi.RegisterOutputType(NeighborAddressResponseOutput{})
	pulumi.RegisterOutputType(NeighborAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(OptionAPropertiesOutput{})
	pulumi.RegisterOutputType(OptionAPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OptionAPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OptionAPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OptionBPropertiesOutput{})
	pulumi.RegisterOutputType(OptionBPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OptionBPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OptionBPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutePolicyStatementPropertiesOutput{})
	pulumi.RegisterOutputType(RoutePolicyStatementPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutePolicyStatementPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutePolicyStatementPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(StatementActionPropertiesOutput{})
	pulumi.RegisterOutputType(StatementActionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StatementConditionPropertiesOutput{})
	pulumi.RegisterOutputType(StatementConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StaticRouteConfigurationOutput{})
	pulumi.RegisterOutputType(StaticRouteConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StaticRouteConfigurationResponseOutput{})
	pulumi.RegisterOutputType(StaticRouteConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(StaticRoutePropertiesOutput{})
	pulumi.RegisterOutputType(StaticRoutePropertiesArrayOutput{})
	pulumi.RegisterOutputType(StaticRoutePropertiesResponseOutput{})
	pulumi.RegisterOutputType(StaticRoutePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TerminalServerConfigurationOutput{})
	pulumi.RegisterOutputType(TerminalServerConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VpnConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkloadServicesResponseOutput{})
}
