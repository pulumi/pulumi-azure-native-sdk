// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managednetworkfabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The NetworkDevice resource definition.
// Azure REST API version: 2023-02-01-preview. Prior API version in Azure Native 1.x: 2023-02-01-preview
type NetworkDevice struct {
	pulumi.CustomResourceState

	// Switch configuration description.
	Annotation pulumi.StringPtrOutput `pulumi:"annotation"`
	// The host Name of the device.
	HostName pulumi.StringPtrOutput `pulumi:"hostName"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// networkDeviceRole is the device role: Example: CE | ToR.
	NetworkDeviceRole pulumi.StringOutput `pulumi:"networkDeviceRole"`
	// Network Device SKU name.
	NetworkDeviceSku pulumi.StringOutput `pulumi:"networkDeviceSku"`
	// Reference to network rack resource id.
	NetworkRackId pulumi.StringOutput `pulumi:"networkRackId"`
	// Gets the provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// serialNumber of the format Make;Model;HardwareRevisionId;SerialNumber. Example: Arista;DCS-7280DR3-24;12.05;JPE21116969
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Current version of the device as defined in SKU.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewNetworkDevice registers a new resource with the given unique name, arguments, and options.
func NewNetworkDevice(ctx *pulumi.Context,
	name string, args *NetworkDeviceArgs, opts ...pulumi.ResourceOption) (*NetworkDevice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkDeviceRole == nil {
		return nil, errors.New("invalid value for required argument 'NetworkDeviceRole'")
	}
	if args.NetworkDeviceSku == nil {
		return nil, errors.New("invalid value for required argument 'NetworkDeviceSku'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SerialNumber == nil {
		return nil, errors.New("invalid value for required argument 'SerialNumber'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:managednetworkfabric/v20230201preview:NetworkDevice"),
		},
		{
			Type: pulumi.String("azure-native:managednetworkfabric/v20230615:NetworkDevice"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NetworkDevice
	err := ctx.RegisterResource("azure-native:managednetworkfabric:NetworkDevice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkDevice gets an existing NetworkDevice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkDeviceState, opts ...pulumi.ResourceOption) (*NetworkDevice, error) {
	var resource NetworkDevice
	err := ctx.ReadResource("azure-native:managednetworkfabric:NetworkDevice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkDevice resources.
type networkDeviceState struct {
}

type NetworkDeviceState struct {
}

func (NetworkDeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkDeviceState)(nil)).Elem()
}

type networkDeviceArgs struct {
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// The host Name of the device.
	HostName *string `pulumi:"hostName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of the Network Device
	NetworkDeviceName *string `pulumi:"networkDeviceName"`
	// networkDeviceRole is the device role: Example: CE | ToR.
	NetworkDeviceRole string `pulumi:"networkDeviceRole"`
	// Network Device SKU name.
	NetworkDeviceSku string `pulumi:"networkDeviceSku"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// serialNumber of the format Make;Model;HardwareRevisionId;SerialNumber. Example: Arista;DCS-7280DR3-24;12.05;JPE21116969
	SerialNumber string `pulumi:"serialNumber"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkDevice resource.
type NetworkDeviceArgs struct {
	// Switch configuration description.
	Annotation pulumi.StringPtrInput
	// The host Name of the device.
	HostName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of the Network Device
	NetworkDeviceName pulumi.StringPtrInput
	// networkDeviceRole is the device role: Example: CE | ToR.
	NetworkDeviceRole pulumi.StringInput
	// Network Device SKU name.
	NetworkDeviceSku pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// serialNumber of the format Make;Model;HardwareRevisionId;SerialNumber. Example: Arista;DCS-7280DR3-24;12.05;JPE21116969
	SerialNumber pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (NetworkDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkDeviceArgs)(nil)).Elem()
}

type NetworkDeviceInput interface {
	pulumi.Input

	ToNetworkDeviceOutput() NetworkDeviceOutput
	ToNetworkDeviceOutputWithContext(ctx context.Context) NetworkDeviceOutput
}

func (*NetworkDevice) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDevice)(nil)).Elem()
}

func (i *NetworkDevice) ToNetworkDeviceOutput() NetworkDeviceOutput {
	return i.ToNetworkDeviceOutputWithContext(context.Background())
}

func (i *NetworkDevice) ToNetworkDeviceOutputWithContext(ctx context.Context) NetworkDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDeviceOutput)
}

func (i *NetworkDevice) ToOutput(ctx context.Context) pulumix.Output[*NetworkDevice] {
	return pulumix.Output[*NetworkDevice]{
		OutputState: i.ToNetworkDeviceOutputWithContext(ctx).OutputState,
	}
}

type NetworkDeviceOutput struct{ *pulumi.OutputState }

func (NetworkDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDevice)(nil)).Elem()
}

func (o NetworkDeviceOutput) ToNetworkDeviceOutput() NetworkDeviceOutput {
	return o
}

func (o NetworkDeviceOutput) ToNetworkDeviceOutputWithContext(ctx context.Context) NetworkDeviceOutput {
	return o
}

func (o NetworkDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[*NetworkDevice] {
	return pulumix.Output[*NetworkDevice]{
		OutputState: o.OutputState,
	}
}

// Switch configuration description.
func (o NetworkDeviceOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringPtrOutput { return v.Annotation }).(pulumi.StringPtrOutput)
}

// The host Name of the device.
func (o NetworkDeviceOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringPtrOutput { return v.HostName }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o NetworkDeviceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o NetworkDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// networkDeviceRole is the device role: Example: CE | ToR.
func (o NetworkDeviceOutput) NetworkDeviceRole() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.NetworkDeviceRole }).(pulumi.StringOutput)
}

// Network Device SKU name.
func (o NetworkDeviceOutput) NetworkDeviceSku() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.NetworkDeviceSku }).(pulumi.StringOutput)
}

// Reference to network rack resource id.
func (o NetworkDeviceOutput) NetworkRackId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.NetworkRackId }).(pulumi.StringOutput)
}

// Gets the provisioning state of the resource.
func (o NetworkDeviceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// serialNumber of the format Make;Model;HardwareRevisionId;SerialNumber. Example: Arista;DCS-7280DR3-24;12.05;JPE21116969
func (o NetworkDeviceOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.SerialNumber }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o NetworkDeviceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *NetworkDevice) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o NetworkDeviceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o NetworkDeviceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Current version of the device as defined in SKU.
func (o NetworkDeviceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDevice) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkDeviceOutput{})
}
