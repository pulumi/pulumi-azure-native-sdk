// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managednetworkfabric

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v2"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:managednetworkfabric:AccessControlList":
		r = &AccessControlList{}
	case "azure-native:managednetworkfabric:ExternalNetwork":
		r = &ExternalNetwork{}
	case "azure-native:managednetworkfabric:InternalNetwork":
		r = &InternalNetwork{}
	case "azure-native:managednetworkfabric:InternetGateway":
		r = &InternetGateway{}
	case "azure-native:managednetworkfabric:InternetGatewayRule":
		r = &InternetGatewayRule{}
	case "azure-native:managednetworkfabric:IpCommunity":
		r = &IpCommunity{}
	case "azure-native:managednetworkfabric:IpExtendedCommunity":
		r = &IpExtendedCommunity{}
	case "azure-native:managednetworkfabric:IpPrefix":
		r = &IpPrefix{}
	case "azure-native:managednetworkfabric:L2IsolationDomain":
		r = &L2IsolationDomain{}
	case "azure-native:managednetworkfabric:L3IsolationDomain":
		r = &L3IsolationDomain{}
	case "azure-native:managednetworkfabric:NeighborGroup":
		r = &NeighborGroup{}
	case "azure-native:managednetworkfabric:NetworkDevice":
		r = &NetworkDevice{}
	case "azure-native:managednetworkfabric:NetworkFabric":
		r = &NetworkFabric{}
	case "azure-native:managednetworkfabric:NetworkFabricController":
		r = &NetworkFabricController{}
	case "azure-native:managednetworkfabric:NetworkInterface":
		r = &NetworkInterface{}
	case "azure-native:managednetworkfabric:NetworkPacketBroker":
		r = &NetworkPacketBroker{}
	case "azure-native:managednetworkfabric:NetworkRack":
		r = &NetworkRack{}
	case "azure-native:managednetworkfabric:NetworkTap":
		r = &NetworkTap{}
	case "azure-native:managednetworkfabric:NetworkTapRule":
		r = &NetworkTapRule{}
	case "azure-native:managednetworkfabric:NetworkToNetworkInterconnect":
		r = &NetworkToNetworkInterconnect{}
	case "azure-native:managednetworkfabric:RoutePolicy":
		r = &RoutePolicy{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := pulumiazurenativesdk.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"managednetworkfabric",
		&module{version},
	)
}
