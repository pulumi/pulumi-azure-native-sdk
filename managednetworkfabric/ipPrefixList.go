// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managednetworkfabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The IpPrefixList resource definition.
// API Version: 2023-02-01-preview.
// Previous API Version: 2023-02-01-preview. See https://github.com/pulumi/pulumi-azure-native/discussions/1834 for information on migrating from v1 to v2 of the provider.
type IpPrefixList struct {
	pulumi.CustomResourceState

	// action. Example: allow | deny.
	Action pulumi.StringOutput `pulumi:"action"`
	// Switch configuration description.
	Annotation pulumi.StringPtrOutput `pulumi:"annotation"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
	NetworkAddress pulumi.StringOutput `pulumi:"networkAddress"`
	// Gets the provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// sequenceNumber of the Ip Prefix List.
	SequenceNumber pulumi.IntOutput `pulumi:"sequenceNumber"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIpPrefixList registers a new resource with the given unique name, arguments, and options.
func NewIpPrefixList(ctx *pulumi.Context,
	name string, args *IpPrefixListArgs, opts ...pulumi.ResourceOption) (*IpPrefixList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.NetworkAddress == nil {
		return nil, errors.New("invalid value for required argument 'NetworkAddress'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SequenceNumber == nil {
		return nil, errors.New("invalid value for required argument 'SequenceNumber'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:managednetworkfabric/v20230201preview:IpPrefixList"),
		},
	})
	opts = append(opts, aliases)
	var resource IpPrefixList
	err := ctx.RegisterResource("azure-native:managednetworkfabric:IpPrefixList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpPrefixList gets an existing IpPrefixList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpPrefixList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpPrefixListState, opts ...pulumi.ResourceOption) (*IpPrefixList, error) {
	var resource IpPrefixList
	err := ctx.ReadResource("azure-native:managednetworkfabric:IpPrefixList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpPrefixList resources.
type ipPrefixListState struct {
}

type IpPrefixListState struct {
}

func (IpPrefixListState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipPrefixListState)(nil)).Elem()
}

type ipPrefixListArgs struct {
	// action. Example: allow | deny.
	Action string `pulumi:"action"`
	// Switch configuration description.
	Annotation *string `pulumi:"annotation"`
	// Name of the Ip Prefix List
	IpPrefixListName *string `pulumi:"ipPrefixListName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
	NetworkAddress string `pulumi:"networkAddress"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// sequenceNumber of the Ip Prefix List.
	SequenceNumber int `pulumi:"sequenceNumber"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IpPrefixList resource.
type IpPrefixListArgs struct {
	// action. Example: allow | deny.
	Action pulumi.StringInput
	// Switch configuration description.
	Annotation pulumi.StringPtrInput
	// Name of the Ip Prefix List
	IpPrefixListName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
	NetworkAddress pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// sequenceNumber of the Ip Prefix List.
	SequenceNumber pulumi.IntInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (IpPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipPrefixListArgs)(nil)).Elem()
}

type IpPrefixListInput interface {
	pulumi.Input

	ToIpPrefixListOutput() IpPrefixListOutput
	ToIpPrefixListOutputWithContext(ctx context.Context) IpPrefixListOutput
}

func (*IpPrefixList) ElementType() reflect.Type {
	return reflect.TypeOf((**IpPrefixList)(nil)).Elem()
}

func (i *IpPrefixList) ToIpPrefixListOutput() IpPrefixListOutput {
	return i.ToIpPrefixListOutputWithContext(context.Background())
}

func (i *IpPrefixList) ToIpPrefixListOutputWithContext(ctx context.Context) IpPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpPrefixListOutput)
}

type IpPrefixListOutput struct{ *pulumi.OutputState }

func (IpPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpPrefixList)(nil)).Elem()
}

func (o IpPrefixListOutput) ToIpPrefixListOutput() IpPrefixListOutput {
	return o
}

func (o IpPrefixListOutput) ToIpPrefixListOutputWithContext(ctx context.Context) IpPrefixListOutput {
	return o
}

// action. Example: allow | deny.
func (o IpPrefixListOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Switch configuration description.
func (o IpPrefixListOutput) Annotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringPtrOutput { return v.Annotation }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o IpPrefixListOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o IpPrefixListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// networkAddress. Example:1.1.1.0/24 | 1.1.10.10.
func (o IpPrefixListOutput) NetworkAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringOutput { return v.NetworkAddress }).(pulumi.StringOutput)
}

// Gets the provisioning state of the resource.
func (o IpPrefixListOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// sequenceNumber of the Ip Prefix List.
func (o IpPrefixListOutput) SequenceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.IntOutput { return v.SequenceNumber }).(pulumi.IntOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o IpPrefixListOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *IpPrefixList) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o IpPrefixListOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o IpPrefixListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IpPrefixList) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IpPrefixListOutput{})
}
