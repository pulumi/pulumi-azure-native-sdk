// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Auth setting for basic auth.
type AcceleratorBasicAuthSetting struct {
	// The type of the auth setting.
	// Expected value is 'BasicAuth'.
	AuthType string `pulumi:"authType"`
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId *string `pulumi:"caCertResourceId"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Username of git repository basic auth.
	Username string `pulumi:"username"`
}

// AcceleratorBasicAuthSettingInput is an input type that accepts AcceleratorBasicAuthSettingArgs and AcceleratorBasicAuthSettingOutput values.
// You can construct a concrete instance of `AcceleratorBasicAuthSettingInput` via:
//
//	AcceleratorBasicAuthSettingArgs{...}
type AcceleratorBasicAuthSettingInput interface {
	pulumi.Input

	ToAcceleratorBasicAuthSettingOutput() AcceleratorBasicAuthSettingOutput
	ToAcceleratorBasicAuthSettingOutputWithContext(context.Context) AcceleratorBasicAuthSettingOutput
}

// Auth setting for basic auth.
type AcceleratorBasicAuthSettingArgs struct {
	// The type of the auth setting.
	// Expected value is 'BasicAuth'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId pulumi.StringPtrInput `pulumi:"caCertResourceId"`
	// Password of git repository basic auth.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username of git repository basic auth.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AcceleratorBasicAuthSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorBasicAuthSetting)(nil)).Elem()
}

func (i AcceleratorBasicAuthSettingArgs) ToAcceleratorBasicAuthSettingOutput() AcceleratorBasicAuthSettingOutput {
	return i.ToAcceleratorBasicAuthSettingOutputWithContext(context.Background())
}

func (i AcceleratorBasicAuthSettingArgs) ToAcceleratorBasicAuthSettingOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorBasicAuthSettingOutput)
}

func (i AcceleratorBasicAuthSettingArgs) ToAcceleratorBasicAuthSettingPtrOutput() AcceleratorBasicAuthSettingPtrOutput {
	return i.ToAcceleratorBasicAuthSettingPtrOutputWithContext(context.Background())
}

func (i AcceleratorBasicAuthSettingArgs) ToAcceleratorBasicAuthSettingPtrOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorBasicAuthSettingOutput).ToAcceleratorBasicAuthSettingPtrOutputWithContext(ctx)
}

// AcceleratorBasicAuthSettingPtrInput is an input type that accepts AcceleratorBasicAuthSettingArgs, AcceleratorBasicAuthSettingPtr and AcceleratorBasicAuthSettingPtrOutput values.
// You can construct a concrete instance of `AcceleratorBasicAuthSettingPtrInput` via:
//
//	        AcceleratorBasicAuthSettingArgs{...}
//
//	or:
//
//	        nil
type AcceleratorBasicAuthSettingPtrInput interface {
	pulumi.Input

	ToAcceleratorBasicAuthSettingPtrOutput() AcceleratorBasicAuthSettingPtrOutput
	ToAcceleratorBasicAuthSettingPtrOutputWithContext(context.Context) AcceleratorBasicAuthSettingPtrOutput
}

type acceleratorBasicAuthSettingPtrType AcceleratorBasicAuthSettingArgs

func AcceleratorBasicAuthSettingPtr(v *AcceleratorBasicAuthSettingArgs) AcceleratorBasicAuthSettingPtrInput {
	return (*acceleratorBasicAuthSettingPtrType)(v)
}

func (*acceleratorBasicAuthSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorBasicAuthSetting)(nil)).Elem()
}

func (i *acceleratorBasicAuthSettingPtrType) ToAcceleratorBasicAuthSettingPtrOutput() AcceleratorBasicAuthSettingPtrOutput {
	return i.ToAcceleratorBasicAuthSettingPtrOutputWithContext(context.Background())
}

func (i *acceleratorBasicAuthSettingPtrType) ToAcceleratorBasicAuthSettingPtrOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorBasicAuthSettingPtrOutput)
}

// Auth setting for basic auth.
type AcceleratorBasicAuthSettingOutput struct{ *pulumi.OutputState }

func (AcceleratorBasicAuthSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorBasicAuthSetting)(nil)).Elem()
}

func (o AcceleratorBasicAuthSettingOutput) ToAcceleratorBasicAuthSettingOutput() AcceleratorBasicAuthSettingOutput {
	return o
}

func (o AcceleratorBasicAuthSettingOutput) ToAcceleratorBasicAuthSettingOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingOutput {
	return o
}

func (o AcceleratorBasicAuthSettingOutput) ToAcceleratorBasicAuthSettingPtrOutput() AcceleratorBasicAuthSettingPtrOutput {
	return o.ToAcceleratorBasicAuthSettingPtrOutputWithContext(context.Background())
}

func (o AcceleratorBasicAuthSettingOutput) ToAcceleratorBasicAuthSettingPtrOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AcceleratorBasicAuthSetting) *AcceleratorBasicAuthSetting {
		return &v
	}).(AcceleratorBasicAuthSettingPtrOutput)
}

// The type of the auth setting.
// Expected value is 'BasicAuth'.
func (o AcceleratorBasicAuthSettingOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSetting) string { return v.AuthType }).(pulumi.StringOutput)
}

// Resource Id of CA certificate for https URL of Git repository.
func (o AcceleratorBasicAuthSettingOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSetting) *string { return v.CaCertResourceId }).(pulumi.StringPtrOutput)
}

// Password of git repository basic auth.
func (o AcceleratorBasicAuthSettingOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSetting) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username of git repository basic auth.
func (o AcceleratorBasicAuthSettingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSetting) string { return v.Username }).(pulumi.StringOutput)
}

type AcceleratorBasicAuthSettingPtrOutput struct{ *pulumi.OutputState }

func (AcceleratorBasicAuthSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorBasicAuthSetting)(nil)).Elem()
}

func (o AcceleratorBasicAuthSettingPtrOutput) ToAcceleratorBasicAuthSettingPtrOutput() AcceleratorBasicAuthSettingPtrOutput {
	return o
}

func (o AcceleratorBasicAuthSettingPtrOutput) ToAcceleratorBasicAuthSettingPtrOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingPtrOutput {
	return o
}

func (o AcceleratorBasicAuthSettingPtrOutput) Elem() AcceleratorBasicAuthSettingOutput {
	return o.ApplyT(func(v *AcceleratorBasicAuthSetting) AcceleratorBasicAuthSetting {
		if v != nil {
			return *v
		}
		var ret AcceleratorBasicAuthSetting
		return ret
	}).(AcceleratorBasicAuthSettingOutput)
}

// The type of the auth setting.
// Expected value is 'BasicAuth'.
func (o AcceleratorBasicAuthSettingPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorBasicAuthSetting) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Resource Id of CA certificate for https URL of Git repository.
func (o AcceleratorBasicAuthSettingPtrOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorBasicAuthSetting) *string {
		if v == nil {
			return nil
		}
		return v.CaCertResourceId
	}).(pulumi.StringPtrOutput)
}

// Password of git repository basic auth.
func (o AcceleratorBasicAuthSettingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorBasicAuthSetting) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Username of git repository basic auth.
func (o AcceleratorBasicAuthSettingPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorBasicAuthSetting) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Auth setting for basic auth.
type AcceleratorBasicAuthSettingResponse struct {
	// The type of the auth setting.
	// Expected value is 'BasicAuth'.
	AuthType string `pulumi:"authType"`
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId *string `pulumi:"caCertResourceId"`
	// Username of git repository basic auth.
	Username string `pulumi:"username"`
}

// Auth setting for basic auth.
type AcceleratorBasicAuthSettingResponseOutput struct{ *pulumi.OutputState }

func (AcceleratorBasicAuthSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorBasicAuthSettingResponse)(nil)).Elem()
}

func (o AcceleratorBasicAuthSettingResponseOutput) ToAcceleratorBasicAuthSettingResponseOutput() AcceleratorBasicAuthSettingResponseOutput {
	return o
}

func (o AcceleratorBasicAuthSettingResponseOutput) ToAcceleratorBasicAuthSettingResponseOutputWithContext(ctx context.Context) AcceleratorBasicAuthSettingResponseOutput {
	return o
}

// The type of the auth setting.
// Expected value is 'BasicAuth'.
func (o AcceleratorBasicAuthSettingResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSettingResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Resource Id of CA certificate for https URL of Git repository.
func (o AcceleratorBasicAuthSettingResponseOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSettingResponse) *string { return v.CaCertResourceId }).(pulumi.StringPtrOutput)
}

// Username of git repository basic auth.
func (o AcceleratorBasicAuthSettingResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorBasicAuthSettingResponse) string { return v.Username }).(pulumi.StringOutput)
}

type AcceleratorGitRepository struct {
	// Properties of the auth setting payload.
	AuthSetting interface{} `pulumi:"authSetting"`
	// Git repository branch to be used.
	Branch *string `pulumi:"branch"`
	// Git repository commit to be used.
	Commit *string `pulumi:"commit"`
	// Git repository tag to be used.
	GitTag *string `pulumi:"gitTag"`
	// Interval for checking for updates to Git or image repository.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Folder path inside the git repository to consider as the root of the accelerator or fragment.
	SubPath *string `pulumi:"subPath"`
	// Git repository URL for the accelerator.
	Url string `pulumi:"url"`
}

// AcceleratorGitRepositoryInput is an input type that accepts AcceleratorGitRepositoryArgs and AcceleratorGitRepositoryOutput values.
// You can construct a concrete instance of `AcceleratorGitRepositoryInput` via:
//
//	AcceleratorGitRepositoryArgs{...}
type AcceleratorGitRepositoryInput interface {
	pulumi.Input

	ToAcceleratorGitRepositoryOutput() AcceleratorGitRepositoryOutput
	ToAcceleratorGitRepositoryOutputWithContext(context.Context) AcceleratorGitRepositoryOutput
}

type AcceleratorGitRepositoryArgs struct {
	// Properties of the auth setting payload.
	AuthSetting pulumi.Input `pulumi:"authSetting"`
	// Git repository branch to be used.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Git repository commit to be used.
	Commit pulumi.StringPtrInput `pulumi:"commit"`
	// Git repository tag to be used.
	GitTag pulumi.StringPtrInput `pulumi:"gitTag"`
	// Interval for checking for updates to Git or image repository.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Folder path inside the git repository to consider as the root of the accelerator or fragment.
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Git repository URL for the accelerator.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AcceleratorGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorGitRepository)(nil)).Elem()
}

func (i AcceleratorGitRepositoryArgs) ToAcceleratorGitRepositoryOutput() AcceleratorGitRepositoryOutput {
	return i.ToAcceleratorGitRepositoryOutputWithContext(context.Background())
}

func (i AcceleratorGitRepositoryArgs) ToAcceleratorGitRepositoryOutputWithContext(ctx context.Context) AcceleratorGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorGitRepositoryOutput)
}

func (i AcceleratorGitRepositoryArgs) ToAcceleratorGitRepositoryPtrOutput() AcceleratorGitRepositoryPtrOutput {
	return i.ToAcceleratorGitRepositoryPtrOutputWithContext(context.Background())
}

func (i AcceleratorGitRepositoryArgs) ToAcceleratorGitRepositoryPtrOutputWithContext(ctx context.Context) AcceleratorGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorGitRepositoryOutput).ToAcceleratorGitRepositoryPtrOutputWithContext(ctx)
}

// AcceleratorGitRepositoryPtrInput is an input type that accepts AcceleratorGitRepositoryArgs, AcceleratorGitRepositoryPtr and AcceleratorGitRepositoryPtrOutput values.
// You can construct a concrete instance of `AcceleratorGitRepositoryPtrInput` via:
//
//	        AcceleratorGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type AcceleratorGitRepositoryPtrInput interface {
	pulumi.Input

	ToAcceleratorGitRepositoryPtrOutput() AcceleratorGitRepositoryPtrOutput
	ToAcceleratorGitRepositoryPtrOutputWithContext(context.Context) AcceleratorGitRepositoryPtrOutput
}

type acceleratorGitRepositoryPtrType AcceleratorGitRepositoryArgs

func AcceleratorGitRepositoryPtr(v *AcceleratorGitRepositoryArgs) AcceleratorGitRepositoryPtrInput {
	return (*acceleratorGitRepositoryPtrType)(v)
}

func (*acceleratorGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorGitRepository)(nil)).Elem()
}

func (i *acceleratorGitRepositoryPtrType) ToAcceleratorGitRepositoryPtrOutput() AcceleratorGitRepositoryPtrOutput {
	return i.ToAcceleratorGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *acceleratorGitRepositoryPtrType) ToAcceleratorGitRepositoryPtrOutputWithContext(ctx context.Context) AcceleratorGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorGitRepositoryPtrOutput)
}

type AcceleratorGitRepositoryOutput struct{ *pulumi.OutputState }

func (AcceleratorGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorGitRepository)(nil)).Elem()
}

func (o AcceleratorGitRepositoryOutput) ToAcceleratorGitRepositoryOutput() AcceleratorGitRepositoryOutput {
	return o
}

func (o AcceleratorGitRepositoryOutput) ToAcceleratorGitRepositoryOutputWithContext(ctx context.Context) AcceleratorGitRepositoryOutput {
	return o
}

func (o AcceleratorGitRepositoryOutput) ToAcceleratorGitRepositoryPtrOutput() AcceleratorGitRepositoryPtrOutput {
	return o.ToAcceleratorGitRepositoryPtrOutputWithContext(context.Background())
}

func (o AcceleratorGitRepositoryOutput) ToAcceleratorGitRepositoryPtrOutputWithContext(ctx context.Context) AcceleratorGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AcceleratorGitRepository) *AcceleratorGitRepository {
		return &v
	}).(AcceleratorGitRepositoryPtrOutput)
}

// Properties of the auth setting payload.
func (o AcceleratorGitRepositoryOutput) AuthSetting() pulumi.AnyOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) interface{} { return v.AuthSetting }).(pulumi.AnyOutput)
}

// Git repository branch to be used.
func (o AcceleratorGitRepositoryOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Git repository commit to be used.
func (o AcceleratorGitRepositoryOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) *string { return v.Commit }).(pulumi.StringPtrOutput)
}

// Git repository tag to be used.
func (o AcceleratorGitRepositoryOutput) GitTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) *string { return v.GitTag }).(pulumi.StringPtrOutput)
}

// Interval for checking for updates to Git or image repository.
func (o AcceleratorGitRepositoryOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Folder path inside the git repository to consider as the root of the accelerator or fragment.
func (o AcceleratorGitRepositoryOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Git repository URL for the accelerator.
func (o AcceleratorGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type AcceleratorGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (AcceleratorGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorGitRepository)(nil)).Elem()
}

func (o AcceleratorGitRepositoryPtrOutput) ToAcceleratorGitRepositoryPtrOutput() AcceleratorGitRepositoryPtrOutput {
	return o
}

func (o AcceleratorGitRepositoryPtrOutput) ToAcceleratorGitRepositoryPtrOutputWithContext(ctx context.Context) AcceleratorGitRepositoryPtrOutput {
	return o
}

func (o AcceleratorGitRepositoryPtrOutput) Elem() AcceleratorGitRepositoryOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) AcceleratorGitRepository {
		if v != nil {
			return *v
		}
		var ret AcceleratorGitRepository
		return ret
	}).(AcceleratorGitRepositoryOutput)
}

// Properties of the auth setting payload.
func (o AcceleratorGitRepositoryPtrOutput) AuthSetting() pulumi.AnyOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthSetting
	}).(pulumi.AnyOutput)
}

// Git repository branch to be used.
func (o AcceleratorGitRepositoryPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Git repository commit to be used.
func (o AcceleratorGitRepositoryPtrOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(pulumi.StringPtrOutput)
}

// Git repository tag to be used.
func (o AcceleratorGitRepositoryPtrOutput) GitTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.GitTag
	}).(pulumi.StringPtrOutput)
}

// Interval for checking for updates to Git or image repository.
func (o AcceleratorGitRepositoryPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Folder path inside the git repository to consider as the root of the accelerator or fragment.
func (o AcceleratorGitRepositoryPtrOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.SubPath
	}).(pulumi.StringPtrOutput)
}

// Git repository URL for the accelerator.
func (o AcceleratorGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AcceleratorGitRepositoryResponse struct {
	// Properties of the auth setting payload.
	AuthSetting interface{} `pulumi:"authSetting"`
	// Git repository branch to be used.
	Branch *string `pulumi:"branch"`
	// Git repository commit to be used.
	Commit *string `pulumi:"commit"`
	// Git repository tag to be used.
	GitTag *string `pulumi:"gitTag"`
	// Interval for checking for updates to Git or image repository.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Folder path inside the git repository to consider as the root of the accelerator or fragment.
	SubPath *string `pulumi:"subPath"`
	// Git repository URL for the accelerator.
	Url string `pulumi:"url"`
}

type AcceleratorGitRepositoryResponseOutput struct{ *pulumi.OutputState }

func (AcceleratorGitRepositoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorGitRepositoryResponse)(nil)).Elem()
}

func (o AcceleratorGitRepositoryResponseOutput) ToAcceleratorGitRepositoryResponseOutput() AcceleratorGitRepositoryResponseOutput {
	return o
}

func (o AcceleratorGitRepositoryResponseOutput) ToAcceleratorGitRepositoryResponseOutputWithContext(ctx context.Context) AcceleratorGitRepositoryResponseOutput {
	return o
}

// Properties of the auth setting payload.
func (o AcceleratorGitRepositoryResponseOutput) AuthSetting() pulumi.AnyOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) interface{} { return v.AuthSetting }).(pulumi.AnyOutput)
}

// Git repository branch to be used.
func (o AcceleratorGitRepositoryResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Git repository commit to be used.
func (o AcceleratorGitRepositoryResponseOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) *string { return v.Commit }).(pulumi.StringPtrOutput)
}

// Git repository tag to be used.
func (o AcceleratorGitRepositoryResponseOutput) GitTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) *string { return v.GitTag }).(pulumi.StringPtrOutput)
}

// Interval for checking for updates to Git or image repository.
func (o AcceleratorGitRepositoryResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Folder path inside the git repository to consider as the root of the accelerator or fragment.
func (o AcceleratorGitRepositoryResponseOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Git repository URL for the accelerator.
func (o AcceleratorGitRepositoryResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorGitRepositoryResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Auth setting for public url.
type AcceleratorPublicSetting struct {
	// The type of the auth setting.
	// Expected value is 'Public'.
	AuthType string `pulumi:"authType"`
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId *string `pulumi:"caCertResourceId"`
}

// AcceleratorPublicSettingInput is an input type that accepts AcceleratorPublicSettingArgs and AcceleratorPublicSettingOutput values.
// You can construct a concrete instance of `AcceleratorPublicSettingInput` via:
//
//	AcceleratorPublicSettingArgs{...}
type AcceleratorPublicSettingInput interface {
	pulumi.Input

	ToAcceleratorPublicSettingOutput() AcceleratorPublicSettingOutput
	ToAcceleratorPublicSettingOutputWithContext(context.Context) AcceleratorPublicSettingOutput
}

// Auth setting for public url.
type AcceleratorPublicSettingArgs struct {
	// The type of the auth setting.
	// Expected value is 'Public'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId pulumi.StringPtrInput `pulumi:"caCertResourceId"`
}

func (AcceleratorPublicSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorPublicSetting)(nil)).Elem()
}

func (i AcceleratorPublicSettingArgs) ToAcceleratorPublicSettingOutput() AcceleratorPublicSettingOutput {
	return i.ToAcceleratorPublicSettingOutputWithContext(context.Background())
}

func (i AcceleratorPublicSettingArgs) ToAcceleratorPublicSettingOutputWithContext(ctx context.Context) AcceleratorPublicSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorPublicSettingOutput)
}

func (i AcceleratorPublicSettingArgs) ToAcceleratorPublicSettingPtrOutput() AcceleratorPublicSettingPtrOutput {
	return i.ToAcceleratorPublicSettingPtrOutputWithContext(context.Background())
}

func (i AcceleratorPublicSettingArgs) ToAcceleratorPublicSettingPtrOutputWithContext(ctx context.Context) AcceleratorPublicSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorPublicSettingOutput).ToAcceleratorPublicSettingPtrOutputWithContext(ctx)
}

// AcceleratorPublicSettingPtrInput is an input type that accepts AcceleratorPublicSettingArgs, AcceleratorPublicSettingPtr and AcceleratorPublicSettingPtrOutput values.
// You can construct a concrete instance of `AcceleratorPublicSettingPtrInput` via:
//
//	        AcceleratorPublicSettingArgs{...}
//
//	or:
//
//	        nil
type AcceleratorPublicSettingPtrInput interface {
	pulumi.Input

	ToAcceleratorPublicSettingPtrOutput() AcceleratorPublicSettingPtrOutput
	ToAcceleratorPublicSettingPtrOutputWithContext(context.Context) AcceleratorPublicSettingPtrOutput
}

type acceleratorPublicSettingPtrType AcceleratorPublicSettingArgs

func AcceleratorPublicSettingPtr(v *AcceleratorPublicSettingArgs) AcceleratorPublicSettingPtrInput {
	return (*acceleratorPublicSettingPtrType)(v)
}

func (*acceleratorPublicSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorPublicSetting)(nil)).Elem()
}

func (i *acceleratorPublicSettingPtrType) ToAcceleratorPublicSettingPtrOutput() AcceleratorPublicSettingPtrOutput {
	return i.ToAcceleratorPublicSettingPtrOutputWithContext(context.Background())
}

func (i *acceleratorPublicSettingPtrType) ToAcceleratorPublicSettingPtrOutputWithContext(ctx context.Context) AcceleratorPublicSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorPublicSettingPtrOutput)
}

// Auth setting for public url.
type AcceleratorPublicSettingOutput struct{ *pulumi.OutputState }

func (AcceleratorPublicSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorPublicSetting)(nil)).Elem()
}

func (o AcceleratorPublicSettingOutput) ToAcceleratorPublicSettingOutput() AcceleratorPublicSettingOutput {
	return o
}

func (o AcceleratorPublicSettingOutput) ToAcceleratorPublicSettingOutputWithContext(ctx context.Context) AcceleratorPublicSettingOutput {
	return o
}

func (o AcceleratorPublicSettingOutput) ToAcceleratorPublicSettingPtrOutput() AcceleratorPublicSettingPtrOutput {
	return o.ToAcceleratorPublicSettingPtrOutputWithContext(context.Background())
}

func (o AcceleratorPublicSettingOutput) ToAcceleratorPublicSettingPtrOutputWithContext(ctx context.Context) AcceleratorPublicSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AcceleratorPublicSetting) *AcceleratorPublicSetting {
		return &v
	}).(AcceleratorPublicSettingPtrOutput)
}

// The type of the auth setting.
// Expected value is 'Public'.
func (o AcceleratorPublicSettingOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorPublicSetting) string { return v.AuthType }).(pulumi.StringOutput)
}

// Resource Id of CA certificate for https URL of Git repository.
func (o AcceleratorPublicSettingOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorPublicSetting) *string { return v.CaCertResourceId }).(pulumi.StringPtrOutput)
}

type AcceleratorPublicSettingPtrOutput struct{ *pulumi.OutputState }

func (AcceleratorPublicSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorPublicSetting)(nil)).Elem()
}

func (o AcceleratorPublicSettingPtrOutput) ToAcceleratorPublicSettingPtrOutput() AcceleratorPublicSettingPtrOutput {
	return o
}

func (o AcceleratorPublicSettingPtrOutput) ToAcceleratorPublicSettingPtrOutputWithContext(ctx context.Context) AcceleratorPublicSettingPtrOutput {
	return o
}

func (o AcceleratorPublicSettingPtrOutput) Elem() AcceleratorPublicSettingOutput {
	return o.ApplyT(func(v *AcceleratorPublicSetting) AcceleratorPublicSetting {
		if v != nil {
			return *v
		}
		var ret AcceleratorPublicSetting
		return ret
	}).(AcceleratorPublicSettingOutput)
}

// The type of the auth setting.
// Expected value is 'Public'.
func (o AcceleratorPublicSettingPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorPublicSetting) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Resource Id of CA certificate for https URL of Git repository.
func (o AcceleratorPublicSettingPtrOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorPublicSetting) *string {
		if v == nil {
			return nil
		}
		return v.CaCertResourceId
	}).(pulumi.StringPtrOutput)
}

// Auth setting for public url.
type AcceleratorPublicSettingResponse struct {
	// The type of the auth setting.
	// Expected value is 'Public'.
	AuthType string `pulumi:"authType"`
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId *string `pulumi:"caCertResourceId"`
}

// Auth setting for public url.
type AcceleratorPublicSettingResponseOutput struct{ *pulumi.OutputState }

func (AcceleratorPublicSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorPublicSettingResponse)(nil)).Elem()
}

func (o AcceleratorPublicSettingResponseOutput) ToAcceleratorPublicSettingResponseOutput() AcceleratorPublicSettingResponseOutput {
	return o
}

func (o AcceleratorPublicSettingResponseOutput) ToAcceleratorPublicSettingResponseOutputWithContext(ctx context.Context) AcceleratorPublicSettingResponseOutput {
	return o
}

// The type of the auth setting.
// Expected value is 'Public'.
func (o AcceleratorPublicSettingResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorPublicSettingResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Resource Id of CA certificate for https URL of Git repository.
func (o AcceleratorPublicSettingResponseOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorPublicSettingResponse) *string { return v.CaCertResourceId }).(pulumi.StringPtrOutput)
}

// Auth setting for SSH auth.
type AcceleratorSshSetting struct {
	// The type of the auth setting.
	// Expected value is 'SSH'.
	AuthType string `pulumi:"authType"`
	// Public SSH Key of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SSH Key algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Private SSH Key algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
}

// AcceleratorSshSettingInput is an input type that accepts AcceleratorSshSettingArgs and AcceleratorSshSettingOutput values.
// You can construct a concrete instance of `AcceleratorSshSettingInput` via:
//
//	AcceleratorSshSettingArgs{...}
type AcceleratorSshSettingInput interface {
	pulumi.Input

	ToAcceleratorSshSettingOutput() AcceleratorSshSettingOutput
	ToAcceleratorSshSettingOutputWithContext(context.Context) AcceleratorSshSettingOutput
}

// Auth setting for SSH auth.
type AcceleratorSshSettingArgs struct {
	// The type of the auth setting.
	// Expected value is 'SSH'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Public SSH Key of git repository.
	HostKey pulumi.StringPtrInput `pulumi:"hostKey"`
	// SSH Key algorithm of git repository.
	HostKeyAlgorithm pulumi.StringPtrInput `pulumi:"hostKeyAlgorithm"`
	// Private SSH Key algorithm of git repository.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
}

func (AcceleratorSshSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorSshSetting)(nil)).Elem()
}

func (i AcceleratorSshSettingArgs) ToAcceleratorSshSettingOutput() AcceleratorSshSettingOutput {
	return i.ToAcceleratorSshSettingOutputWithContext(context.Background())
}

func (i AcceleratorSshSettingArgs) ToAcceleratorSshSettingOutputWithContext(ctx context.Context) AcceleratorSshSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorSshSettingOutput)
}

func (i AcceleratorSshSettingArgs) ToAcceleratorSshSettingPtrOutput() AcceleratorSshSettingPtrOutput {
	return i.ToAcceleratorSshSettingPtrOutputWithContext(context.Background())
}

func (i AcceleratorSshSettingArgs) ToAcceleratorSshSettingPtrOutputWithContext(ctx context.Context) AcceleratorSshSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorSshSettingOutput).ToAcceleratorSshSettingPtrOutputWithContext(ctx)
}

// AcceleratorSshSettingPtrInput is an input type that accepts AcceleratorSshSettingArgs, AcceleratorSshSettingPtr and AcceleratorSshSettingPtrOutput values.
// You can construct a concrete instance of `AcceleratorSshSettingPtrInput` via:
//
//	        AcceleratorSshSettingArgs{...}
//
//	or:
//
//	        nil
type AcceleratorSshSettingPtrInput interface {
	pulumi.Input

	ToAcceleratorSshSettingPtrOutput() AcceleratorSshSettingPtrOutput
	ToAcceleratorSshSettingPtrOutputWithContext(context.Context) AcceleratorSshSettingPtrOutput
}

type acceleratorSshSettingPtrType AcceleratorSshSettingArgs

func AcceleratorSshSettingPtr(v *AcceleratorSshSettingArgs) AcceleratorSshSettingPtrInput {
	return (*acceleratorSshSettingPtrType)(v)
}

func (*acceleratorSshSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorSshSetting)(nil)).Elem()
}

func (i *acceleratorSshSettingPtrType) ToAcceleratorSshSettingPtrOutput() AcceleratorSshSettingPtrOutput {
	return i.ToAcceleratorSshSettingPtrOutputWithContext(context.Background())
}

func (i *acceleratorSshSettingPtrType) ToAcceleratorSshSettingPtrOutputWithContext(ctx context.Context) AcceleratorSshSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorSshSettingPtrOutput)
}

// Auth setting for SSH auth.
type AcceleratorSshSettingOutput struct{ *pulumi.OutputState }

func (AcceleratorSshSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorSshSetting)(nil)).Elem()
}

func (o AcceleratorSshSettingOutput) ToAcceleratorSshSettingOutput() AcceleratorSshSettingOutput {
	return o
}

func (o AcceleratorSshSettingOutput) ToAcceleratorSshSettingOutputWithContext(ctx context.Context) AcceleratorSshSettingOutput {
	return o
}

func (o AcceleratorSshSettingOutput) ToAcceleratorSshSettingPtrOutput() AcceleratorSshSettingPtrOutput {
	return o.ToAcceleratorSshSettingPtrOutputWithContext(context.Background())
}

func (o AcceleratorSshSettingOutput) ToAcceleratorSshSettingPtrOutputWithContext(ctx context.Context) AcceleratorSshSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AcceleratorSshSetting) *AcceleratorSshSetting {
		return &v
	}).(AcceleratorSshSettingPtrOutput)
}

// The type of the auth setting.
// Expected value is 'SSH'.
func (o AcceleratorSshSettingOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorSshSetting) string { return v.AuthType }).(pulumi.StringOutput)
}

// Public SSH Key of git repository.
func (o AcceleratorSshSettingOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorSshSetting) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SSH Key algorithm of git repository.
func (o AcceleratorSshSettingOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorSshSetting) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Private SSH Key algorithm of git repository.
func (o AcceleratorSshSettingOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorSshSetting) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

type AcceleratorSshSettingPtrOutput struct{ *pulumi.OutputState }

func (AcceleratorSshSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorSshSetting)(nil)).Elem()
}

func (o AcceleratorSshSettingPtrOutput) ToAcceleratorSshSettingPtrOutput() AcceleratorSshSettingPtrOutput {
	return o
}

func (o AcceleratorSshSettingPtrOutput) ToAcceleratorSshSettingPtrOutputWithContext(ctx context.Context) AcceleratorSshSettingPtrOutput {
	return o
}

func (o AcceleratorSshSettingPtrOutput) Elem() AcceleratorSshSettingOutput {
	return o.ApplyT(func(v *AcceleratorSshSetting) AcceleratorSshSetting {
		if v != nil {
			return *v
		}
		var ret AcceleratorSshSetting
		return ret
	}).(AcceleratorSshSettingOutput)
}

// The type of the auth setting.
// Expected value is 'SSH'.
func (o AcceleratorSshSettingPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorSshSetting) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Public SSH Key of git repository.
func (o AcceleratorSshSettingPtrOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorSshSetting) *string {
		if v == nil {
			return nil
		}
		return v.HostKey
	}).(pulumi.StringPtrOutput)
}

// SSH Key algorithm of git repository.
func (o AcceleratorSshSettingPtrOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorSshSetting) *string {
		if v == nil {
			return nil
		}
		return v.HostKeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Private SSH Key algorithm of git repository.
func (o AcceleratorSshSettingPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcceleratorSshSetting) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Auth setting for SSH auth.
type AcceleratorSshSettingResponse struct {
	// The type of the auth setting.
	// Expected value is 'SSH'.
	AuthType string `pulumi:"authType"`
}

// Auth setting for SSH auth.
type AcceleratorSshSettingResponseOutput struct{ *pulumi.OutputState }

func (AcceleratorSshSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorSshSettingResponse)(nil)).Elem()
}

func (o AcceleratorSshSettingResponseOutput) ToAcceleratorSshSettingResponseOutput() AcceleratorSshSettingResponseOutput {
	return o
}

func (o AcceleratorSshSettingResponseOutput) ToAcceleratorSshSettingResponseOutputWithContext(ctx context.Context) AcceleratorSshSettingResponseOutput {
	return o
}

// The type of the auth setting.
// Expected value is 'SSH'.
func (o AcceleratorSshSettingResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorSshSettingResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// The properties of custom domain for API portal
type ApiPortalCustomDomainProperties struct {
	// The thumbprint of bound certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ApiPortalCustomDomainPropertiesInput is an input type that accepts ApiPortalCustomDomainPropertiesArgs and ApiPortalCustomDomainPropertiesOutput values.
// You can construct a concrete instance of `ApiPortalCustomDomainPropertiesInput` via:
//
//	ApiPortalCustomDomainPropertiesArgs{...}
type ApiPortalCustomDomainPropertiesInput interface {
	pulumi.Input

	ToApiPortalCustomDomainPropertiesOutput() ApiPortalCustomDomainPropertiesOutput
	ToApiPortalCustomDomainPropertiesOutputWithContext(context.Context) ApiPortalCustomDomainPropertiesOutput
}

// The properties of custom domain for API portal
type ApiPortalCustomDomainPropertiesArgs struct {
	// The thumbprint of bound certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ApiPortalCustomDomainPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalCustomDomainProperties)(nil)).Elem()
}

func (i ApiPortalCustomDomainPropertiesArgs) ToApiPortalCustomDomainPropertiesOutput() ApiPortalCustomDomainPropertiesOutput {
	return i.ToApiPortalCustomDomainPropertiesOutputWithContext(context.Background())
}

func (i ApiPortalCustomDomainPropertiesArgs) ToApiPortalCustomDomainPropertiesOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPortalCustomDomainPropertiesOutput)
}

func (i ApiPortalCustomDomainPropertiesArgs) ToApiPortalCustomDomainPropertiesPtrOutput() ApiPortalCustomDomainPropertiesPtrOutput {
	return i.ToApiPortalCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiPortalCustomDomainPropertiesArgs) ToApiPortalCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPortalCustomDomainPropertiesOutput).ToApiPortalCustomDomainPropertiesPtrOutputWithContext(ctx)
}

// ApiPortalCustomDomainPropertiesPtrInput is an input type that accepts ApiPortalCustomDomainPropertiesArgs, ApiPortalCustomDomainPropertiesPtr and ApiPortalCustomDomainPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiPortalCustomDomainPropertiesPtrInput` via:
//
//	        ApiPortalCustomDomainPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApiPortalCustomDomainPropertiesPtrInput interface {
	pulumi.Input

	ToApiPortalCustomDomainPropertiesPtrOutput() ApiPortalCustomDomainPropertiesPtrOutput
	ToApiPortalCustomDomainPropertiesPtrOutputWithContext(context.Context) ApiPortalCustomDomainPropertiesPtrOutput
}

type apiPortalCustomDomainPropertiesPtrType ApiPortalCustomDomainPropertiesArgs

func ApiPortalCustomDomainPropertiesPtr(v *ApiPortalCustomDomainPropertiesArgs) ApiPortalCustomDomainPropertiesPtrInput {
	return (*apiPortalCustomDomainPropertiesPtrType)(v)
}

func (*apiPortalCustomDomainPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPortalCustomDomainProperties)(nil)).Elem()
}

func (i *apiPortalCustomDomainPropertiesPtrType) ToApiPortalCustomDomainPropertiesPtrOutput() ApiPortalCustomDomainPropertiesPtrOutput {
	return i.ToApiPortalCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiPortalCustomDomainPropertiesPtrType) ToApiPortalCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPortalCustomDomainPropertiesPtrOutput)
}

// The properties of custom domain for API portal
type ApiPortalCustomDomainPropertiesOutput struct{ *pulumi.OutputState }

func (ApiPortalCustomDomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalCustomDomainProperties)(nil)).Elem()
}

func (o ApiPortalCustomDomainPropertiesOutput) ToApiPortalCustomDomainPropertiesOutput() ApiPortalCustomDomainPropertiesOutput {
	return o
}

func (o ApiPortalCustomDomainPropertiesOutput) ToApiPortalCustomDomainPropertiesOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesOutput {
	return o
}

func (o ApiPortalCustomDomainPropertiesOutput) ToApiPortalCustomDomainPropertiesPtrOutput() ApiPortalCustomDomainPropertiesPtrOutput {
	return o.ToApiPortalCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiPortalCustomDomainPropertiesOutput) ToApiPortalCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiPortalCustomDomainProperties) *ApiPortalCustomDomainProperties {
		return &v
	}).(ApiPortalCustomDomainPropertiesPtrOutput)
}

// The thumbprint of bound certificate.
func (o ApiPortalCustomDomainPropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPortalCustomDomainProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ApiPortalCustomDomainPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiPortalCustomDomainPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPortalCustomDomainProperties)(nil)).Elem()
}

func (o ApiPortalCustomDomainPropertiesPtrOutput) ToApiPortalCustomDomainPropertiesPtrOutput() ApiPortalCustomDomainPropertiesPtrOutput {
	return o
}

func (o ApiPortalCustomDomainPropertiesPtrOutput) ToApiPortalCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesPtrOutput {
	return o
}

func (o ApiPortalCustomDomainPropertiesPtrOutput) Elem() ApiPortalCustomDomainPropertiesOutput {
	return o.ApplyT(func(v *ApiPortalCustomDomainProperties) ApiPortalCustomDomainProperties {
		if v != nil {
			return *v
		}
		var ret ApiPortalCustomDomainProperties
		return ret
	}).(ApiPortalCustomDomainPropertiesOutput)
}

// The thumbprint of bound certificate.
func (o ApiPortalCustomDomainPropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPortalCustomDomainProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The properties of custom domain for API portal
type ApiPortalCustomDomainPropertiesResponse struct {
	// The thumbprint of bound certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// The properties of custom domain for API portal
type ApiPortalCustomDomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiPortalCustomDomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalCustomDomainPropertiesResponse)(nil)).Elem()
}

func (o ApiPortalCustomDomainPropertiesResponseOutput) ToApiPortalCustomDomainPropertiesResponseOutput() ApiPortalCustomDomainPropertiesResponseOutput {
	return o
}

func (o ApiPortalCustomDomainPropertiesResponseOutput) ToApiPortalCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) ApiPortalCustomDomainPropertiesResponseOutput {
	return o
}

// The thumbprint of bound certificate.
func (o ApiPortalCustomDomainPropertiesResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPortalCustomDomainPropertiesResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Collection of instances belong to the API portal
type ApiPortalInstanceResponse struct {
	// Name of the API portal instance
	Name string `pulumi:"name"`
	// Status of the API portal instance
	Status string `pulumi:"status"`
}

// Collection of instances belong to the API portal
type ApiPortalInstanceResponseOutput struct{ *pulumi.OutputState }

func (ApiPortalInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalInstanceResponse)(nil)).Elem()
}

func (o ApiPortalInstanceResponseOutput) ToApiPortalInstanceResponseOutput() ApiPortalInstanceResponseOutput {
	return o
}

func (o ApiPortalInstanceResponseOutput) ToApiPortalInstanceResponseOutputWithContext(ctx context.Context) ApiPortalInstanceResponseOutput {
	return o
}

// Name of the API portal instance
func (o ApiPortalInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPortalInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the API portal instance
func (o ApiPortalInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPortalInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ApiPortalInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiPortalInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiPortalInstanceResponse)(nil)).Elem()
}

func (o ApiPortalInstanceResponseArrayOutput) ToApiPortalInstanceResponseArrayOutput() ApiPortalInstanceResponseArrayOutput {
	return o
}

func (o ApiPortalInstanceResponseArrayOutput) ToApiPortalInstanceResponseArrayOutputWithContext(ctx context.Context) ApiPortalInstanceResponseArrayOutput {
	return o
}

func (o ApiPortalInstanceResponseArrayOutput) Index(i pulumi.IntInput) ApiPortalInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiPortalInstanceResponse {
		return vs[0].([]ApiPortalInstanceResponse)[vs[1].(int)]
	}).(ApiPortalInstanceResponseOutput)
}

// API portal properties payload
type ApiPortalProperties struct {
	// Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.
	ApiTryOutEnabledState *string `pulumi:"apiTryOutEnabledState"`
	// The array of resource Ids of gateway to integrate with API portal.
	GatewayIds []string `pulumi:"gatewayIds"`
	// Indicate if only https is allowed.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Indicates whether the API portal exposes endpoint.
	Public *bool `pulumi:"public"`
	// Collection of OpenAPI source URL locations.
	SourceUrls []string `pulumi:"sourceUrls"`
	// Single sign-on related configuration
	SsoProperties *SsoProperties `pulumi:"ssoProperties"`
}

// Defaults sets the appropriate defaults for ApiPortalProperties
func (val *ApiPortalProperties) Defaults() *ApiPortalProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ApiTryOutEnabledState == nil {
		apiTryOutEnabledState_ := "Enabled"
		tmp.ApiTryOutEnabledState = &apiTryOutEnabledState_
	}
	if tmp.HttpsOnly == nil {
		httpsOnly_ := false
		tmp.HttpsOnly = &httpsOnly_
	}
	if tmp.Public == nil {
		public_ := false
		tmp.Public = &public_
	}
	return &tmp
}

// ApiPortalPropertiesInput is an input type that accepts ApiPortalPropertiesArgs and ApiPortalPropertiesOutput values.
// You can construct a concrete instance of `ApiPortalPropertiesInput` via:
//
//	ApiPortalPropertiesArgs{...}
type ApiPortalPropertiesInput interface {
	pulumi.Input

	ToApiPortalPropertiesOutput() ApiPortalPropertiesOutput
	ToApiPortalPropertiesOutputWithContext(context.Context) ApiPortalPropertiesOutput
}

// API portal properties payload
type ApiPortalPropertiesArgs struct {
	// Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.
	ApiTryOutEnabledState pulumi.StringPtrInput `pulumi:"apiTryOutEnabledState"`
	// The array of resource Ids of gateway to integrate with API portal.
	GatewayIds pulumi.StringArrayInput `pulumi:"gatewayIds"`
	// Indicate if only https is allowed.
	HttpsOnly pulumi.BoolPtrInput `pulumi:"httpsOnly"`
	// Indicates whether the API portal exposes endpoint.
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// Collection of OpenAPI source URL locations.
	SourceUrls pulumi.StringArrayInput `pulumi:"sourceUrls"`
	// Single sign-on related configuration
	SsoProperties SsoPropertiesPtrInput `pulumi:"ssoProperties"`
}

// Defaults sets the appropriate defaults for ApiPortalPropertiesArgs
func (val *ApiPortalPropertiesArgs) Defaults() *ApiPortalPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ApiTryOutEnabledState == nil {
		tmp.ApiTryOutEnabledState = pulumi.StringPtr("Enabled")
	}
	if tmp.HttpsOnly == nil {
		tmp.HttpsOnly = pulumi.BoolPtr(false)
	}
	if tmp.Public == nil {
		tmp.Public = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ApiPortalPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalProperties)(nil)).Elem()
}

func (i ApiPortalPropertiesArgs) ToApiPortalPropertiesOutput() ApiPortalPropertiesOutput {
	return i.ToApiPortalPropertiesOutputWithContext(context.Background())
}

func (i ApiPortalPropertiesArgs) ToApiPortalPropertiesOutputWithContext(ctx context.Context) ApiPortalPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPortalPropertiesOutput)
}

func (i ApiPortalPropertiesArgs) ToApiPortalPropertiesPtrOutput() ApiPortalPropertiesPtrOutput {
	return i.ToApiPortalPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiPortalPropertiesArgs) ToApiPortalPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPortalPropertiesOutput).ToApiPortalPropertiesPtrOutputWithContext(ctx)
}

// ApiPortalPropertiesPtrInput is an input type that accepts ApiPortalPropertiesArgs, ApiPortalPropertiesPtr and ApiPortalPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiPortalPropertiesPtrInput` via:
//
//	        ApiPortalPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApiPortalPropertiesPtrInput interface {
	pulumi.Input

	ToApiPortalPropertiesPtrOutput() ApiPortalPropertiesPtrOutput
	ToApiPortalPropertiesPtrOutputWithContext(context.Context) ApiPortalPropertiesPtrOutput
}

type apiPortalPropertiesPtrType ApiPortalPropertiesArgs

func ApiPortalPropertiesPtr(v *ApiPortalPropertiesArgs) ApiPortalPropertiesPtrInput {
	return (*apiPortalPropertiesPtrType)(v)
}

func (*apiPortalPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPortalProperties)(nil)).Elem()
}

func (i *apiPortalPropertiesPtrType) ToApiPortalPropertiesPtrOutput() ApiPortalPropertiesPtrOutput {
	return i.ToApiPortalPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiPortalPropertiesPtrType) ToApiPortalPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPortalPropertiesPtrOutput)
}

// API portal properties payload
type ApiPortalPropertiesOutput struct{ *pulumi.OutputState }

func (ApiPortalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalProperties)(nil)).Elem()
}

func (o ApiPortalPropertiesOutput) ToApiPortalPropertiesOutput() ApiPortalPropertiesOutput {
	return o
}

func (o ApiPortalPropertiesOutput) ToApiPortalPropertiesOutputWithContext(ctx context.Context) ApiPortalPropertiesOutput {
	return o
}

func (o ApiPortalPropertiesOutput) ToApiPortalPropertiesPtrOutput() ApiPortalPropertiesPtrOutput {
	return o.ToApiPortalPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiPortalPropertiesOutput) ToApiPortalPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiPortalProperties) *ApiPortalProperties {
		return &v
	}).(ApiPortalPropertiesPtrOutput)
}

// Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.
func (o ApiPortalPropertiesOutput) ApiTryOutEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPortalProperties) *string { return v.ApiTryOutEnabledState }).(pulumi.StringPtrOutput)
}

// The array of resource Ids of gateway to integrate with API portal.
func (o ApiPortalPropertiesOutput) GatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiPortalProperties) []string { return v.GatewayIds }).(pulumi.StringArrayOutput)
}

// Indicate if only https is allowed.
func (o ApiPortalPropertiesOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiPortalProperties) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// Indicates whether the API portal exposes endpoint.
func (o ApiPortalPropertiesOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiPortalProperties) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Collection of OpenAPI source URL locations.
func (o ApiPortalPropertiesOutput) SourceUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiPortalProperties) []string { return v.SourceUrls }).(pulumi.StringArrayOutput)
}

// Single sign-on related configuration
func (o ApiPortalPropertiesOutput) SsoProperties() SsoPropertiesPtrOutput {
	return o.ApplyT(func(v ApiPortalProperties) *SsoProperties { return v.SsoProperties }).(SsoPropertiesPtrOutput)
}

type ApiPortalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiPortalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPortalProperties)(nil)).Elem()
}

func (o ApiPortalPropertiesPtrOutput) ToApiPortalPropertiesPtrOutput() ApiPortalPropertiesPtrOutput {
	return o
}

func (o ApiPortalPropertiesPtrOutput) ToApiPortalPropertiesPtrOutputWithContext(ctx context.Context) ApiPortalPropertiesPtrOutput {
	return o
}

func (o ApiPortalPropertiesPtrOutput) Elem() ApiPortalPropertiesOutput {
	return o.ApplyT(func(v *ApiPortalProperties) ApiPortalProperties {
		if v != nil {
			return *v
		}
		var ret ApiPortalProperties
		return ret
	}).(ApiPortalPropertiesOutput)
}

// Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.
func (o ApiPortalPropertiesPtrOutput) ApiTryOutEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPortalProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiTryOutEnabledState
	}).(pulumi.StringPtrOutput)
}

// The array of resource Ids of gateway to integrate with API portal.
func (o ApiPortalPropertiesPtrOutput) GatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiPortalProperties) []string {
		if v == nil {
			return nil
		}
		return v.GatewayIds
	}).(pulumi.StringArrayOutput)
}

// Indicate if only https is allowed.
func (o ApiPortalPropertiesPtrOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiPortalProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsOnly
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the API portal exposes endpoint.
func (o ApiPortalPropertiesPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiPortalProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// Collection of OpenAPI source URL locations.
func (o ApiPortalPropertiesPtrOutput) SourceUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiPortalProperties) []string {
		if v == nil {
			return nil
		}
		return v.SourceUrls
	}).(pulumi.StringArrayOutput)
}

// Single sign-on related configuration
func (o ApiPortalPropertiesPtrOutput) SsoProperties() SsoPropertiesPtrOutput {
	return o.ApplyT(func(v *ApiPortalProperties) *SsoProperties {
		if v == nil {
			return nil
		}
		return v.SsoProperties
	}).(SsoPropertiesPtrOutput)
}

// API portal properties payload
type ApiPortalPropertiesResponse struct {
	// Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.
	ApiTryOutEnabledState *string `pulumi:"apiTryOutEnabledState"`
	// The array of resource Ids of gateway to integrate with API portal.
	GatewayIds []string `pulumi:"gatewayIds"`
	// Indicate if only https is allowed.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Collection of instances belong to API portal.
	Instances []ApiPortalInstanceResponse `pulumi:"instances"`
	// State of the API portal.
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicates whether the API portal exposes endpoint.
	Public *bool `pulumi:"public"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests ApiPortalResourceRequestsResponse `pulumi:"resourceRequests"`
	// Collection of OpenAPI source URL locations.
	SourceUrls []string `pulumi:"sourceUrls"`
	// Single sign-on related configuration
	SsoProperties *SsoPropertiesResponse `pulumi:"ssoProperties"`
	// URL of the API portal, exposed when 'public' is true.
	Url string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for ApiPortalPropertiesResponse
func (val *ApiPortalPropertiesResponse) Defaults() *ApiPortalPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ApiTryOutEnabledState == nil {
		apiTryOutEnabledState_ := "Enabled"
		tmp.ApiTryOutEnabledState = &apiTryOutEnabledState_
	}
	if tmp.HttpsOnly == nil {
		httpsOnly_ := false
		tmp.HttpsOnly = &httpsOnly_
	}
	if tmp.Public == nil {
		public_ := false
		tmp.Public = &public_
	}
	return &tmp
}

// API portal properties payload
type ApiPortalPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiPortalPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalPropertiesResponse)(nil)).Elem()
}

func (o ApiPortalPropertiesResponseOutput) ToApiPortalPropertiesResponseOutput() ApiPortalPropertiesResponseOutput {
	return o
}

func (o ApiPortalPropertiesResponseOutput) ToApiPortalPropertiesResponseOutputWithContext(ctx context.Context) ApiPortalPropertiesResponseOutput {
	return o
}

// Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.
func (o ApiPortalPropertiesResponseOutput) ApiTryOutEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) *string { return v.ApiTryOutEnabledState }).(pulumi.StringPtrOutput)
}

// The array of resource Ids of gateway to integrate with API portal.
func (o ApiPortalPropertiesResponseOutput) GatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) []string { return v.GatewayIds }).(pulumi.StringArrayOutput)
}

// Indicate if only https is allowed.
func (o ApiPortalPropertiesResponseOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// Collection of instances belong to API portal.
func (o ApiPortalPropertiesResponseOutput) Instances() ApiPortalInstanceResponseArrayOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) []ApiPortalInstanceResponse { return v.Instances }).(ApiPortalInstanceResponseArrayOutput)
}

// State of the API portal.
func (o ApiPortalPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates whether the API portal exposes endpoint.
func (o ApiPortalPropertiesResponseOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o ApiPortalPropertiesResponseOutput) ResourceRequests() ApiPortalResourceRequestsResponseOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) ApiPortalResourceRequestsResponse { return v.ResourceRequests }).(ApiPortalResourceRequestsResponseOutput)
}

// Collection of OpenAPI source URL locations.
func (o ApiPortalPropertiesResponseOutput) SourceUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) []string { return v.SourceUrls }).(pulumi.StringArrayOutput)
}

// Single sign-on related configuration
func (o ApiPortalPropertiesResponseOutput) SsoProperties() SsoPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) *SsoPropertiesResponse { return v.SsoProperties }).(SsoPropertiesResponsePtrOutput)
}

// URL of the API portal, exposed when 'public' is true.
func (o ApiPortalPropertiesResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPortalPropertiesResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Resource requests of the API portal
type ApiPortalResourceRequestsResponse struct {
	// Cpu allocated to each API portal instance
	Cpu string `pulumi:"cpu"`
	// Memory allocated to each API portal instance
	Memory string `pulumi:"memory"`
}

// Resource requests of the API portal
type ApiPortalResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (ApiPortalResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPortalResourceRequestsResponse)(nil)).Elem()
}

func (o ApiPortalResourceRequestsResponseOutput) ToApiPortalResourceRequestsResponseOutput() ApiPortalResourceRequestsResponseOutput {
	return o
}

func (o ApiPortalResourceRequestsResponseOutput) ToApiPortalResourceRequestsResponseOutputWithContext(ctx context.Context) ApiPortalResourceRequestsResponseOutput {
	return o
}

// Cpu allocated to each API portal instance
func (o ApiPortalResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPortalResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Memory allocated to each API portal instance
func (o ApiPortalResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPortalResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// Properties of an APM
type ApmProperties struct {
	// Non-sensitive properties for the APM
	Properties map[string]string `pulumi:"properties"`
	// Sensitive properties for the APM
	Secrets map[string]string `pulumi:"secrets"`
	// APM Type
	Type string `pulumi:"type"`
}

// ApmPropertiesInput is an input type that accepts ApmPropertiesArgs and ApmPropertiesOutput values.
// You can construct a concrete instance of `ApmPropertiesInput` via:
//
//	ApmPropertiesArgs{...}
type ApmPropertiesInput interface {
	pulumi.Input

	ToApmPropertiesOutput() ApmPropertiesOutput
	ToApmPropertiesOutputWithContext(context.Context) ApmPropertiesOutput
}

// Properties of an APM
type ApmPropertiesArgs struct {
	// Non-sensitive properties for the APM
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Sensitive properties for the APM
	Secrets pulumi.StringMapInput `pulumi:"secrets"`
	// APM Type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApmPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmProperties)(nil)).Elem()
}

func (i ApmPropertiesArgs) ToApmPropertiesOutput() ApmPropertiesOutput {
	return i.ToApmPropertiesOutputWithContext(context.Background())
}

func (i ApmPropertiesArgs) ToApmPropertiesOutputWithContext(ctx context.Context) ApmPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmPropertiesOutput)
}

func (i ApmPropertiesArgs) ToApmPropertiesPtrOutput() ApmPropertiesPtrOutput {
	return i.ToApmPropertiesPtrOutputWithContext(context.Background())
}

func (i ApmPropertiesArgs) ToApmPropertiesPtrOutputWithContext(ctx context.Context) ApmPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmPropertiesOutput).ToApmPropertiesPtrOutputWithContext(ctx)
}

// ApmPropertiesPtrInput is an input type that accepts ApmPropertiesArgs, ApmPropertiesPtr and ApmPropertiesPtrOutput values.
// You can construct a concrete instance of `ApmPropertiesPtrInput` via:
//
//	        ApmPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApmPropertiesPtrInput interface {
	pulumi.Input

	ToApmPropertiesPtrOutput() ApmPropertiesPtrOutput
	ToApmPropertiesPtrOutputWithContext(context.Context) ApmPropertiesPtrOutput
}

type apmPropertiesPtrType ApmPropertiesArgs

func ApmPropertiesPtr(v *ApmPropertiesArgs) ApmPropertiesPtrInput {
	return (*apmPropertiesPtrType)(v)
}

func (*apmPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApmProperties)(nil)).Elem()
}

func (i *apmPropertiesPtrType) ToApmPropertiesPtrOutput() ApmPropertiesPtrOutput {
	return i.ToApmPropertiesPtrOutputWithContext(context.Background())
}

func (i *apmPropertiesPtrType) ToApmPropertiesPtrOutputWithContext(ctx context.Context) ApmPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmPropertiesPtrOutput)
}

// Properties of an APM
type ApmPropertiesOutput struct{ *pulumi.OutputState }

func (ApmPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmProperties)(nil)).Elem()
}

func (o ApmPropertiesOutput) ToApmPropertiesOutput() ApmPropertiesOutput {
	return o
}

func (o ApmPropertiesOutput) ToApmPropertiesOutputWithContext(ctx context.Context) ApmPropertiesOutput {
	return o
}

func (o ApmPropertiesOutput) ToApmPropertiesPtrOutput() ApmPropertiesPtrOutput {
	return o.ToApmPropertiesPtrOutputWithContext(context.Background())
}

func (o ApmPropertiesOutput) ToApmPropertiesPtrOutputWithContext(ctx context.Context) ApmPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApmProperties) *ApmProperties {
		return &v
	}).(ApmPropertiesPtrOutput)
}

// Non-sensitive properties for the APM
func (o ApmPropertiesOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApmProperties) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Sensitive properties for the APM
func (o ApmPropertiesOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApmProperties) map[string]string { return v.Secrets }).(pulumi.StringMapOutput)
}

// APM Type
func (o ApmPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApmProperties) string { return v.Type }).(pulumi.StringOutput)
}

type ApmPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApmPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApmProperties)(nil)).Elem()
}

func (o ApmPropertiesPtrOutput) ToApmPropertiesPtrOutput() ApmPropertiesPtrOutput {
	return o
}

func (o ApmPropertiesPtrOutput) ToApmPropertiesPtrOutputWithContext(ctx context.Context) ApmPropertiesPtrOutput {
	return o
}

func (o ApmPropertiesPtrOutput) Elem() ApmPropertiesOutput {
	return o.ApplyT(func(v *ApmProperties) ApmProperties {
		if v != nil {
			return *v
		}
		var ret ApmProperties
		return ret
	}).(ApmPropertiesOutput)
}

// Non-sensitive properties for the APM
func (o ApmPropertiesPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApmProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Sensitive properties for the APM
func (o ApmPropertiesPtrOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApmProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(pulumi.StringMapOutput)
}

// APM Type
func (o ApmPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApmProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of an APM
type ApmPropertiesResponse struct {
	// Non-sensitive properties for the APM
	Properties map[string]string `pulumi:"properties"`
	// State of the APM.
	ProvisioningState string `pulumi:"provisioningState"`
	// APM Type
	Type string `pulumi:"type"`
}

// Properties of an APM
type ApmPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApmPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmPropertiesResponse)(nil)).Elem()
}

func (o ApmPropertiesResponseOutput) ToApmPropertiesResponseOutput() ApmPropertiesResponseOutput {
	return o
}

func (o ApmPropertiesResponseOutput) ToApmPropertiesResponseOutputWithContext(ctx context.Context) ApmPropertiesResponseOutput {
	return o
}

// Non-sensitive properties for the APM
func (o ApmPropertiesResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApmPropertiesResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// State of the APM.
func (o ApmPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApmPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// APM Type
func (o ApmPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApmPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A reference to the APM
type ApmReference struct {
	// Resource Id of the APM
	ResourceId string `pulumi:"resourceId"`
}

// ApmReferenceInput is an input type that accepts ApmReferenceArgs and ApmReferenceOutput values.
// You can construct a concrete instance of `ApmReferenceInput` via:
//
//	ApmReferenceArgs{...}
type ApmReferenceInput interface {
	pulumi.Input

	ToApmReferenceOutput() ApmReferenceOutput
	ToApmReferenceOutputWithContext(context.Context) ApmReferenceOutput
}

// A reference to the APM
type ApmReferenceArgs struct {
	// Resource Id of the APM
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ApmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmReference)(nil)).Elem()
}

func (i ApmReferenceArgs) ToApmReferenceOutput() ApmReferenceOutput {
	return i.ToApmReferenceOutputWithContext(context.Background())
}

func (i ApmReferenceArgs) ToApmReferenceOutputWithContext(ctx context.Context) ApmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmReferenceOutput)
}

// ApmReferenceArrayInput is an input type that accepts ApmReferenceArray and ApmReferenceArrayOutput values.
// You can construct a concrete instance of `ApmReferenceArrayInput` via:
//
//	ApmReferenceArray{ ApmReferenceArgs{...} }
type ApmReferenceArrayInput interface {
	pulumi.Input

	ToApmReferenceArrayOutput() ApmReferenceArrayOutput
	ToApmReferenceArrayOutputWithContext(context.Context) ApmReferenceArrayOutput
}

type ApmReferenceArray []ApmReferenceInput

func (ApmReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApmReference)(nil)).Elem()
}

func (i ApmReferenceArray) ToApmReferenceArrayOutput() ApmReferenceArrayOutput {
	return i.ToApmReferenceArrayOutputWithContext(context.Background())
}

func (i ApmReferenceArray) ToApmReferenceArrayOutputWithContext(ctx context.Context) ApmReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmReferenceArrayOutput)
}

// A reference to the APM
type ApmReferenceOutput struct{ *pulumi.OutputState }

func (ApmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmReference)(nil)).Elem()
}

func (o ApmReferenceOutput) ToApmReferenceOutput() ApmReferenceOutput {
	return o
}

func (o ApmReferenceOutput) ToApmReferenceOutputWithContext(ctx context.Context) ApmReferenceOutput {
	return o
}

// Resource Id of the APM
func (o ApmReferenceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ApmReference) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ApmReferenceArrayOutput struct{ *pulumi.OutputState }

func (ApmReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApmReference)(nil)).Elem()
}

func (o ApmReferenceArrayOutput) ToApmReferenceArrayOutput() ApmReferenceArrayOutput {
	return o
}

func (o ApmReferenceArrayOutput) ToApmReferenceArrayOutputWithContext(ctx context.Context) ApmReferenceArrayOutput {
	return o
}

func (o ApmReferenceArrayOutput) Index(i pulumi.IntInput) ApmReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApmReference {
		return vs[0].([]ApmReference)[vs[1].(int)]
	}).(ApmReferenceOutput)
}

// A reference to the APM
type ApmReferenceResponse struct {
	// Resource Id of the APM
	ResourceId string `pulumi:"resourceId"`
}

// A reference to the APM
type ApmReferenceResponseOutput struct{ *pulumi.OutputState }

func (ApmReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmReferenceResponse)(nil)).Elem()
}

func (o ApmReferenceResponseOutput) ToApmReferenceResponseOutput() ApmReferenceResponseOutput {
	return o
}

func (o ApmReferenceResponseOutput) ToApmReferenceResponseOutputWithContext(ctx context.Context) ApmReferenceResponseOutput {
	return o
}

// Resource Id of the APM
func (o ApmReferenceResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ApmReferenceResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ApmReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ApmReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApmReferenceResponse)(nil)).Elem()
}

func (o ApmReferenceResponseArrayOutput) ToApmReferenceResponseArrayOutput() ApmReferenceResponseArrayOutput {
	return o
}

func (o ApmReferenceResponseArrayOutput) ToApmReferenceResponseArrayOutputWithContext(ctx context.Context) ApmReferenceResponseArrayOutput {
	return o
}

func (o ApmReferenceResponseArrayOutput) Index(i pulumi.IntInput) ApmReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApmReferenceResponse {
		return vs[0].([]ApmReferenceResponse)[vs[1].(int)]
	}).(ApmReferenceResponseOutput)
}

// App resource properties payload
type AppResourceProperties struct {
	// Collection of addons
	AddonConfigs map[string]interface{} `pulumi:"addonConfigs"`
	// List of custom persistent disks
	CustomPersistentDisks []CustomPersistentDiskResource `pulumi:"customPersistentDisks"`
	// Indicate if end to end TLS is enabled.
	EnableEndToEndTLS *bool `pulumi:"enableEndToEndTLS"`
	// Indicate if only https is allowed.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// App ingress settings payload.
	IngressSettings *IngressSettings `pulumi:"ingressSettings"`
	// Collection of loaded certificates
	LoadedCertificates []LoadedCertificate `pulumi:"loadedCertificates"`
	// Persistent disk settings
	PersistentDisk *PersistentDisk `pulumi:"persistentDisk"`
	// Indicates whether the App exposes public endpoint
	Public *bool `pulumi:"public"`
	// Collection of auth secrets
	Secrets []Secret `pulumi:"secrets"`
	// Temporary disk settings
	TemporaryDisk *TemporaryDisk `pulumi:"temporaryDisk"`
	// State of test endpoint auth.
	TestEndpointAuthState *string `pulumi:"testEndpointAuthState"`
	// Additional App settings in vnet injection instance
	VnetAddons *AppVNetAddons `pulumi:"vnetAddons"`
	// The workload profile used for this app. Supported for Consumption + Dedicated plan.
	WorkloadProfileName *string `pulumi:"workloadProfileName"`
}

// Defaults sets the appropriate defaults for AppResourceProperties
func (val *AppResourceProperties) Defaults() *AppResourceProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEndToEndTLS == nil {
		enableEndToEndTLS_ := false
		tmp.EnableEndToEndTLS = &enableEndToEndTLS_
	}
	if tmp.HttpsOnly == nil {
		httpsOnly_ := false
		tmp.HttpsOnly = &httpsOnly_
	}
	tmp.TemporaryDisk = tmp.TemporaryDisk.Defaults()

	if tmp.TestEndpointAuthState == nil {
		testEndpointAuthState_ := "Enabled"
		tmp.TestEndpointAuthState = &testEndpointAuthState_
	}
	tmp.VnetAddons = tmp.VnetAddons.Defaults()

	return &tmp
}

// AppResourcePropertiesInput is an input type that accepts AppResourcePropertiesArgs and AppResourcePropertiesOutput values.
// You can construct a concrete instance of `AppResourcePropertiesInput` via:
//
//	AppResourcePropertiesArgs{...}
type AppResourcePropertiesInput interface {
	pulumi.Input

	ToAppResourcePropertiesOutput() AppResourcePropertiesOutput
	ToAppResourcePropertiesOutputWithContext(context.Context) AppResourcePropertiesOutput
}

// App resource properties payload
type AppResourcePropertiesArgs struct {
	// Collection of addons
	AddonConfigs pulumi.MapInput `pulumi:"addonConfigs"`
	// List of custom persistent disks
	CustomPersistentDisks CustomPersistentDiskResourceArrayInput `pulumi:"customPersistentDisks"`
	// Indicate if end to end TLS is enabled.
	EnableEndToEndTLS pulumi.BoolPtrInput `pulumi:"enableEndToEndTLS"`
	// Indicate if only https is allowed.
	HttpsOnly pulumi.BoolPtrInput `pulumi:"httpsOnly"`
	// App ingress settings payload.
	IngressSettings IngressSettingsPtrInput `pulumi:"ingressSettings"`
	// Collection of loaded certificates
	LoadedCertificates LoadedCertificateArrayInput `pulumi:"loadedCertificates"`
	// Persistent disk settings
	PersistentDisk PersistentDiskPtrInput `pulumi:"persistentDisk"`
	// Indicates whether the App exposes public endpoint
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// Collection of auth secrets
	Secrets SecretArrayInput `pulumi:"secrets"`
	// Temporary disk settings
	TemporaryDisk TemporaryDiskPtrInput `pulumi:"temporaryDisk"`
	// State of test endpoint auth.
	TestEndpointAuthState pulumi.StringPtrInput `pulumi:"testEndpointAuthState"`
	// Additional App settings in vnet injection instance
	VnetAddons AppVNetAddonsPtrInput `pulumi:"vnetAddons"`
	// The workload profile used for this app. Supported for Consumption + Dedicated plan.
	WorkloadProfileName pulumi.StringPtrInput `pulumi:"workloadProfileName"`
}

// Defaults sets the appropriate defaults for AppResourcePropertiesArgs
func (val *AppResourcePropertiesArgs) Defaults() *AppResourcePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEndToEndTLS == nil {
		tmp.EnableEndToEndTLS = pulumi.BoolPtr(false)
	}
	if tmp.HttpsOnly == nil {
		tmp.HttpsOnly = pulumi.BoolPtr(false)
	}

	if tmp.TestEndpointAuthState == nil {
		tmp.TestEndpointAuthState = pulumi.StringPtr("Enabled")
	}

	return &tmp
}
func (AppResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourceProperties)(nil)).Elem()
}

func (i AppResourcePropertiesArgs) ToAppResourcePropertiesOutput() AppResourcePropertiesOutput {
	return i.ToAppResourcePropertiesOutputWithContext(context.Background())
}

func (i AppResourcePropertiesArgs) ToAppResourcePropertiesOutputWithContext(ctx context.Context) AppResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourcePropertiesOutput)
}

func (i AppResourcePropertiesArgs) ToAppResourcePropertiesPtrOutput() AppResourcePropertiesPtrOutput {
	return i.ToAppResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i AppResourcePropertiesArgs) ToAppResourcePropertiesPtrOutputWithContext(ctx context.Context) AppResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourcePropertiesOutput).ToAppResourcePropertiesPtrOutputWithContext(ctx)
}

// AppResourcePropertiesPtrInput is an input type that accepts AppResourcePropertiesArgs, AppResourcePropertiesPtr and AppResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `AppResourcePropertiesPtrInput` via:
//
//	        AppResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type AppResourcePropertiesPtrInput interface {
	pulumi.Input

	ToAppResourcePropertiesPtrOutput() AppResourcePropertiesPtrOutput
	ToAppResourcePropertiesPtrOutputWithContext(context.Context) AppResourcePropertiesPtrOutput
}

type appResourcePropertiesPtrType AppResourcePropertiesArgs

func AppResourcePropertiesPtr(v *AppResourcePropertiesArgs) AppResourcePropertiesPtrInput {
	return (*appResourcePropertiesPtrType)(v)
}

func (*appResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppResourceProperties)(nil)).Elem()
}

func (i *appResourcePropertiesPtrType) ToAppResourcePropertiesPtrOutput() AppResourcePropertiesPtrOutput {
	return i.ToAppResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *appResourcePropertiesPtrType) ToAppResourcePropertiesPtrOutputWithContext(ctx context.Context) AppResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourcePropertiesPtrOutput)
}

// App resource properties payload
type AppResourcePropertiesOutput struct{ *pulumi.OutputState }

func (AppResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourceProperties)(nil)).Elem()
}

func (o AppResourcePropertiesOutput) ToAppResourcePropertiesOutput() AppResourcePropertiesOutput {
	return o
}

func (o AppResourcePropertiesOutput) ToAppResourcePropertiesOutputWithContext(ctx context.Context) AppResourcePropertiesOutput {
	return o
}

func (o AppResourcePropertiesOutput) ToAppResourcePropertiesPtrOutput() AppResourcePropertiesPtrOutput {
	return o.ToAppResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o AppResourcePropertiesOutput) ToAppResourcePropertiesPtrOutputWithContext(ctx context.Context) AppResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppResourceProperties) *AppResourceProperties {
		return &v
	}).(AppResourcePropertiesPtrOutput)
}

// Collection of addons
func (o AppResourcePropertiesOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v AppResourceProperties) map[string]interface{} { return v.AddonConfigs }).(pulumi.MapOutput)
}

// List of custom persistent disks
func (o AppResourcePropertiesOutput) CustomPersistentDisks() CustomPersistentDiskResourceArrayOutput {
	return o.ApplyT(func(v AppResourceProperties) []CustomPersistentDiskResource { return v.CustomPersistentDisks }).(CustomPersistentDiskResourceArrayOutput)
}

// Indicate if end to end TLS is enabled.
func (o AppResourcePropertiesOutput) EnableEndToEndTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *bool { return v.EnableEndToEndTLS }).(pulumi.BoolPtrOutput)
}

// Indicate if only https is allowed.
func (o AppResourcePropertiesOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// App ingress settings payload.
func (o AppResourcePropertiesOutput) IngressSettings() IngressSettingsPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *IngressSettings { return v.IngressSettings }).(IngressSettingsPtrOutput)
}

// Collection of loaded certificates
func (o AppResourcePropertiesOutput) LoadedCertificates() LoadedCertificateArrayOutput {
	return o.ApplyT(func(v AppResourceProperties) []LoadedCertificate { return v.LoadedCertificates }).(LoadedCertificateArrayOutput)
}

// Persistent disk settings
func (o AppResourcePropertiesOutput) PersistentDisk() PersistentDiskPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *PersistentDisk { return v.PersistentDisk }).(PersistentDiskPtrOutput)
}

// Indicates whether the App exposes public endpoint
func (o AppResourcePropertiesOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Collection of auth secrets
func (o AppResourcePropertiesOutput) Secrets() SecretArrayOutput {
	return o.ApplyT(func(v AppResourceProperties) []Secret { return v.Secrets }).(SecretArrayOutput)
}

// Temporary disk settings
func (o AppResourcePropertiesOutput) TemporaryDisk() TemporaryDiskPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *TemporaryDisk { return v.TemporaryDisk }).(TemporaryDiskPtrOutput)
}

// State of test endpoint auth.
func (o AppResourcePropertiesOutput) TestEndpointAuthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *string { return v.TestEndpointAuthState }).(pulumi.StringPtrOutput)
}

// Additional App settings in vnet injection instance
func (o AppResourcePropertiesOutput) VnetAddons() AppVNetAddonsPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *AppVNetAddons { return v.VnetAddons }).(AppVNetAddonsPtrOutput)
}

// The workload profile used for this app. Supported for Consumption + Dedicated plan.
func (o AppResourcePropertiesOutput) WorkloadProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppResourceProperties) *string { return v.WorkloadProfileName }).(pulumi.StringPtrOutput)
}

type AppResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppResourceProperties)(nil)).Elem()
}

func (o AppResourcePropertiesPtrOutput) ToAppResourcePropertiesPtrOutput() AppResourcePropertiesPtrOutput {
	return o
}

func (o AppResourcePropertiesPtrOutput) ToAppResourcePropertiesPtrOutputWithContext(ctx context.Context) AppResourcePropertiesPtrOutput {
	return o
}

func (o AppResourcePropertiesPtrOutput) Elem() AppResourcePropertiesOutput {
	return o.ApplyT(func(v *AppResourceProperties) AppResourceProperties {
		if v != nil {
			return *v
		}
		var ret AppResourceProperties
		return ret
	}).(AppResourcePropertiesOutput)
}

// Collection of addons
func (o AppResourcePropertiesPtrOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v *AppResourceProperties) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AddonConfigs
	}).(pulumi.MapOutput)
}

// List of custom persistent disks
func (o AppResourcePropertiesPtrOutput) CustomPersistentDisks() CustomPersistentDiskResourceArrayOutput {
	return o.ApplyT(func(v *AppResourceProperties) []CustomPersistentDiskResource {
		if v == nil {
			return nil
		}
		return v.CustomPersistentDisks
	}).(CustomPersistentDiskResourceArrayOutput)
}

// Indicate if end to end TLS is enabled.
func (o AppResourcePropertiesPtrOutput) EnableEndToEndTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEndToEndTLS
	}).(pulumi.BoolPtrOutput)
}

// Indicate if only https is allowed.
func (o AppResourcePropertiesPtrOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsOnly
	}).(pulumi.BoolPtrOutput)
}

// App ingress settings payload.
func (o AppResourcePropertiesPtrOutput) IngressSettings() IngressSettingsPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *IngressSettings {
		if v == nil {
			return nil
		}
		return v.IngressSettings
	}).(IngressSettingsPtrOutput)
}

// Collection of loaded certificates
func (o AppResourcePropertiesPtrOutput) LoadedCertificates() LoadedCertificateArrayOutput {
	return o.ApplyT(func(v *AppResourceProperties) []LoadedCertificate {
		if v == nil {
			return nil
		}
		return v.LoadedCertificates
	}).(LoadedCertificateArrayOutput)
}

// Persistent disk settings
func (o AppResourcePropertiesPtrOutput) PersistentDisk() PersistentDiskPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *PersistentDisk {
		if v == nil {
			return nil
		}
		return v.PersistentDisk
	}).(PersistentDiskPtrOutput)
}

// Indicates whether the App exposes public endpoint
func (o AppResourcePropertiesPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// Collection of auth secrets
func (o AppResourcePropertiesPtrOutput) Secrets() SecretArrayOutput {
	return o.ApplyT(func(v *AppResourceProperties) []Secret {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretArrayOutput)
}

// Temporary disk settings
func (o AppResourcePropertiesPtrOutput) TemporaryDisk() TemporaryDiskPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *TemporaryDisk {
		if v == nil {
			return nil
		}
		return v.TemporaryDisk
	}).(TemporaryDiskPtrOutput)
}

// State of test endpoint auth.
func (o AppResourcePropertiesPtrOutput) TestEndpointAuthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.TestEndpointAuthState
	}).(pulumi.StringPtrOutput)
}

// Additional App settings in vnet injection instance
func (o AppResourcePropertiesPtrOutput) VnetAddons() AppVNetAddonsPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *AppVNetAddons {
		if v == nil {
			return nil
		}
		return v.VnetAddons
	}).(AppVNetAddonsPtrOutput)
}

// The workload profile used for this app. Supported for Consumption + Dedicated plan.
func (o AppResourcePropertiesPtrOutput) WorkloadProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadProfileName
	}).(pulumi.StringPtrOutput)
}

// App resource properties payload
type AppResourcePropertiesResponse struct {
	// Collection of addons
	AddonConfigs map[string]interface{} `pulumi:"addonConfigs"`
	// List of custom persistent disks
	CustomPersistentDisks []CustomPersistentDiskResourceResponse `pulumi:"customPersistentDisks"`
	// Indicate if end to end TLS is enabled.
	EnableEndToEndTLS *bool `pulumi:"enableEndToEndTLS"`
	// Fully qualified dns Name.
	Fqdn string `pulumi:"fqdn"`
	// Indicate if only https is allowed.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// App ingress settings payload.
	IngressSettings *IngressSettingsResponse `pulumi:"ingressSettings"`
	// Collection of loaded certificates
	LoadedCertificates []LoadedCertificateResponse `pulumi:"loadedCertificates"`
	// Persistent disk settings
	PersistentDisk *PersistentDiskResponse `pulumi:"persistentDisk"`
	// Provisioning state of the App
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicates whether the App exposes public endpoint
	Public *bool `pulumi:"public"`
	// Collection of auth secrets
	Secrets []SecretResponse `pulumi:"secrets"`
	// Temporary disk settings
	TemporaryDisk *TemporaryDiskResponse `pulumi:"temporaryDisk"`
	// State of test endpoint auth.
	TestEndpointAuthState *string `pulumi:"testEndpointAuthState"`
	// URL of the App
	Url string `pulumi:"url"`
	// Additional App settings in vnet injection instance
	VnetAddons *AppVNetAddonsResponse `pulumi:"vnetAddons"`
	// The workload profile used for this app. Supported for Consumption + Dedicated plan.
	WorkloadProfileName *string `pulumi:"workloadProfileName"`
}

// Defaults sets the appropriate defaults for AppResourcePropertiesResponse
func (val *AppResourcePropertiesResponse) Defaults() *AppResourcePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEndToEndTLS == nil {
		enableEndToEndTLS_ := false
		tmp.EnableEndToEndTLS = &enableEndToEndTLS_
	}
	if tmp.HttpsOnly == nil {
		httpsOnly_ := false
		tmp.HttpsOnly = &httpsOnly_
	}
	tmp.TemporaryDisk = tmp.TemporaryDisk.Defaults()

	if tmp.TestEndpointAuthState == nil {
		testEndpointAuthState_ := "Enabled"
		tmp.TestEndpointAuthState = &testEndpointAuthState_
	}
	tmp.VnetAddons = tmp.VnetAddons.Defaults()

	return &tmp
}

// App resource properties payload
type AppResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AppResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourcePropertiesResponse)(nil)).Elem()
}

func (o AppResourcePropertiesResponseOutput) ToAppResourcePropertiesResponseOutput() AppResourcePropertiesResponseOutput {
	return o
}

func (o AppResourcePropertiesResponseOutput) ToAppResourcePropertiesResponseOutputWithContext(ctx context.Context) AppResourcePropertiesResponseOutput {
	return o
}

// Collection of addons
func (o AppResourcePropertiesResponseOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) map[string]interface{} { return v.AddonConfigs }).(pulumi.MapOutput)
}

// List of custom persistent disks
func (o AppResourcePropertiesResponseOutput) CustomPersistentDisks() CustomPersistentDiskResourceResponseArrayOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) []CustomPersistentDiskResourceResponse {
		return v.CustomPersistentDisks
	}).(CustomPersistentDiskResourceResponseArrayOutput)
}

// Indicate if end to end TLS is enabled.
func (o AppResourcePropertiesResponseOutput) EnableEndToEndTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *bool { return v.EnableEndToEndTLS }).(pulumi.BoolPtrOutput)
}

// Fully qualified dns Name.
func (o AppResourcePropertiesResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Indicate if only https is allowed.
func (o AppResourcePropertiesResponseOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// App ingress settings payload.
func (o AppResourcePropertiesResponseOutput) IngressSettings() IngressSettingsResponsePtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *IngressSettingsResponse { return v.IngressSettings }).(IngressSettingsResponsePtrOutput)
}

// Collection of loaded certificates
func (o AppResourcePropertiesResponseOutput) LoadedCertificates() LoadedCertificateResponseArrayOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) []LoadedCertificateResponse { return v.LoadedCertificates }).(LoadedCertificateResponseArrayOutput)
}

// Persistent disk settings
func (o AppResourcePropertiesResponseOutput) PersistentDisk() PersistentDiskResponsePtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *PersistentDiskResponse { return v.PersistentDisk }).(PersistentDiskResponsePtrOutput)
}

// Provisioning state of the App
func (o AppResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates whether the App exposes public endpoint
func (o AppResourcePropertiesResponseOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Collection of auth secrets
func (o AppResourcePropertiesResponseOutput) Secrets() SecretResponseArrayOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) []SecretResponse { return v.Secrets }).(SecretResponseArrayOutput)
}

// Temporary disk settings
func (o AppResourcePropertiesResponseOutput) TemporaryDisk() TemporaryDiskResponsePtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *TemporaryDiskResponse { return v.TemporaryDisk }).(TemporaryDiskResponsePtrOutput)
}

// State of test endpoint auth.
func (o AppResourcePropertiesResponseOutput) TestEndpointAuthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *string { return v.TestEndpointAuthState }).(pulumi.StringPtrOutput)
}

// URL of the App
func (o AppResourcePropertiesResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Additional App settings in vnet injection instance
func (o AppResourcePropertiesResponseOutput) VnetAddons() AppVNetAddonsResponsePtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *AppVNetAddonsResponse { return v.VnetAddons }).(AppVNetAddonsResponsePtrOutput)
}

// The workload profile used for this app. Supported for Consumption + Dedicated plan.
func (o AppResourcePropertiesResponseOutput) WorkloadProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppResourcePropertiesResponse) *string { return v.WorkloadProfileName }).(pulumi.StringPtrOutput)
}

// Additional App settings in vnet injection instance
type AppVNetAddons struct {
	// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
	PublicEndpoint *bool `pulumi:"publicEndpoint"`
}

// Defaults sets the appropriate defaults for AppVNetAddons
func (val *AppVNetAddons) Defaults() *AppVNetAddons {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PublicEndpoint == nil {
		publicEndpoint_ := false
		tmp.PublicEndpoint = &publicEndpoint_
	}
	return &tmp
}

// AppVNetAddonsInput is an input type that accepts AppVNetAddonsArgs and AppVNetAddonsOutput values.
// You can construct a concrete instance of `AppVNetAddonsInput` via:
//
//	AppVNetAddonsArgs{...}
type AppVNetAddonsInput interface {
	pulumi.Input

	ToAppVNetAddonsOutput() AppVNetAddonsOutput
	ToAppVNetAddonsOutputWithContext(context.Context) AppVNetAddonsOutput
}

// Additional App settings in vnet injection instance
type AppVNetAddonsArgs struct {
	// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
	PublicEndpoint pulumi.BoolPtrInput `pulumi:"publicEndpoint"`
}

// Defaults sets the appropriate defaults for AppVNetAddonsArgs
func (val *AppVNetAddonsArgs) Defaults() *AppVNetAddonsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PublicEndpoint == nil {
		tmp.PublicEndpoint = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (AppVNetAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppVNetAddons)(nil)).Elem()
}

func (i AppVNetAddonsArgs) ToAppVNetAddonsOutput() AppVNetAddonsOutput {
	return i.ToAppVNetAddonsOutputWithContext(context.Background())
}

func (i AppVNetAddonsArgs) ToAppVNetAddonsOutputWithContext(ctx context.Context) AppVNetAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppVNetAddonsOutput)
}

func (i AppVNetAddonsArgs) ToAppVNetAddonsPtrOutput() AppVNetAddonsPtrOutput {
	return i.ToAppVNetAddonsPtrOutputWithContext(context.Background())
}

func (i AppVNetAddonsArgs) ToAppVNetAddonsPtrOutputWithContext(ctx context.Context) AppVNetAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppVNetAddonsOutput).ToAppVNetAddonsPtrOutputWithContext(ctx)
}

// AppVNetAddonsPtrInput is an input type that accepts AppVNetAddonsArgs, AppVNetAddonsPtr and AppVNetAddonsPtrOutput values.
// You can construct a concrete instance of `AppVNetAddonsPtrInput` via:
//
//	        AppVNetAddonsArgs{...}
//
//	or:
//
//	        nil
type AppVNetAddonsPtrInput interface {
	pulumi.Input

	ToAppVNetAddonsPtrOutput() AppVNetAddonsPtrOutput
	ToAppVNetAddonsPtrOutputWithContext(context.Context) AppVNetAddonsPtrOutput
}

type appVNetAddonsPtrType AppVNetAddonsArgs

func AppVNetAddonsPtr(v *AppVNetAddonsArgs) AppVNetAddonsPtrInput {
	return (*appVNetAddonsPtrType)(v)
}

func (*appVNetAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppVNetAddons)(nil)).Elem()
}

func (i *appVNetAddonsPtrType) ToAppVNetAddonsPtrOutput() AppVNetAddonsPtrOutput {
	return i.ToAppVNetAddonsPtrOutputWithContext(context.Background())
}

func (i *appVNetAddonsPtrType) ToAppVNetAddonsPtrOutputWithContext(ctx context.Context) AppVNetAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppVNetAddonsPtrOutput)
}

// Additional App settings in vnet injection instance
type AppVNetAddonsOutput struct{ *pulumi.OutputState }

func (AppVNetAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppVNetAddons)(nil)).Elem()
}

func (o AppVNetAddonsOutput) ToAppVNetAddonsOutput() AppVNetAddonsOutput {
	return o
}

func (o AppVNetAddonsOutput) ToAppVNetAddonsOutputWithContext(ctx context.Context) AppVNetAddonsOutput {
	return o
}

func (o AppVNetAddonsOutput) ToAppVNetAddonsPtrOutput() AppVNetAddonsPtrOutput {
	return o.ToAppVNetAddonsPtrOutputWithContext(context.Background())
}

func (o AppVNetAddonsOutput) ToAppVNetAddonsPtrOutputWithContext(ctx context.Context) AppVNetAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppVNetAddons) *AppVNetAddons {
		return &v
	}).(AppVNetAddonsPtrOutput)
}

// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
func (o AppVNetAddonsOutput) PublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppVNetAddons) *bool { return v.PublicEndpoint }).(pulumi.BoolPtrOutput)
}

type AppVNetAddonsPtrOutput struct{ *pulumi.OutputState }

func (AppVNetAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppVNetAddons)(nil)).Elem()
}

func (o AppVNetAddonsPtrOutput) ToAppVNetAddonsPtrOutput() AppVNetAddonsPtrOutput {
	return o
}

func (o AppVNetAddonsPtrOutput) ToAppVNetAddonsPtrOutputWithContext(ctx context.Context) AppVNetAddonsPtrOutput {
	return o
}

func (o AppVNetAddonsPtrOutput) Elem() AppVNetAddonsOutput {
	return o.ApplyT(func(v *AppVNetAddons) AppVNetAddons {
		if v != nil {
			return *v
		}
		var ret AppVNetAddons
		return ret
	}).(AppVNetAddonsOutput)
}

// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
func (o AppVNetAddonsPtrOutput) PublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppVNetAddons) *bool {
		if v == nil {
			return nil
		}
		return v.PublicEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Additional App settings in vnet injection instance
type AppVNetAddonsResponse struct {
	// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
	PublicEndpoint *bool `pulumi:"publicEndpoint"`
	// URL of the App in vnet injection instance which could be accessed from internet
	PublicEndpointUrl string `pulumi:"publicEndpointUrl"`
}

// Defaults sets the appropriate defaults for AppVNetAddonsResponse
func (val *AppVNetAddonsResponse) Defaults() *AppVNetAddonsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PublicEndpoint == nil {
		publicEndpoint_ := false
		tmp.PublicEndpoint = &publicEndpoint_
	}
	return &tmp
}

// Additional App settings in vnet injection instance
type AppVNetAddonsResponseOutput struct{ *pulumi.OutputState }

func (AppVNetAddonsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppVNetAddonsResponse)(nil)).Elem()
}

func (o AppVNetAddonsResponseOutput) ToAppVNetAddonsResponseOutput() AppVNetAddonsResponseOutput {
	return o
}

func (o AppVNetAddonsResponseOutput) ToAppVNetAddonsResponseOutputWithContext(ctx context.Context) AppVNetAddonsResponseOutput {
	return o
}

// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
func (o AppVNetAddonsResponseOutput) PublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppVNetAddonsResponse) *bool { return v.PublicEndpoint }).(pulumi.BoolPtrOutput)
}

// URL of the App in vnet injection instance which could be accessed from internet
func (o AppVNetAddonsResponseOutput) PublicEndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AppVNetAddonsResponse) string { return v.PublicEndpointUrl }).(pulumi.StringOutput)
}

type AppVNetAddonsResponsePtrOutput struct{ *pulumi.OutputState }

func (AppVNetAddonsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppVNetAddonsResponse)(nil)).Elem()
}

func (o AppVNetAddonsResponsePtrOutput) ToAppVNetAddonsResponsePtrOutput() AppVNetAddonsResponsePtrOutput {
	return o
}

func (o AppVNetAddonsResponsePtrOutput) ToAppVNetAddonsResponsePtrOutputWithContext(ctx context.Context) AppVNetAddonsResponsePtrOutput {
	return o
}

func (o AppVNetAddonsResponsePtrOutput) Elem() AppVNetAddonsResponseOutput {
	return o.ApplyT(func(v *AppVNetAddonsResponse) AppVNetAddonsResponse {
		if v != nil {
			return *v
		}
		var ret AppVNetAddonsResponse
		return ret
	}).(AppVNetAddonsResponseOutput)
}

// Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.
func (o AppVNetAddonsResponsePtrOutput) PublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppVNetAddonsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PublicEndpoint
	}).(pulumi.BoolPtrOutput)
}

// URL of the App in vnet injection instance which could be accessed from internet
func (o AppVNetAddonsResponsePtrOutput) PublicEndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppVNetAddonsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicEndpointUrl
	}).(pulumi.StringPtrOutput)
}

type ApplicationAcceleratorComponentResponse struct {
	Instances        []ApplicationAcceleratorInstanceResponse        `pulumi:"instances"`
	Name             string                                          `pulumi:"name"`
	ResourceRequests *ApplicationAcceleratorResourceRequestsResponse `pulumi:"resourceRequests"`
}

type ApplicationAcceleratorComponentResponseOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAcceleratorComponentResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorComponentResponseOutput) ToApplicationAcceleratorComponentResponseOutput() ApplicationAcceleratorComponentResponseOutput {
	return o
}

func (o ApplicationAcceleratorComponentResponseOutput) ToApplicationAcceleratorComponentResponseOutputWithContext(ctx context.Context) ApplicationAcceleratorComponentResponseOutput {
	return o
}

func (o ApplicationAcceleratorComponentResponseOutput) Instances() ApplicationAcceleratorInstanceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationAcceleratorComponentResponse) []ApplicationAcceleratorInstanceResponse {
		return v.Instances
	}).(ApplicationAcceleratorInstanceResponseArrayOutput)
}

func (o ApplicationAcceleratorComponentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAcceleratorComponentResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationAcceleratorComponentResponseOutput) ResourceRequests() ApplicationAcceleratorResourceRequestsResponsePtrOutput {
	return o.ApplyT(func(v ApplicationAcceleratorComponentResponse) *ApplicationAcceleratorResourceRequestsResponse {
		return v.ResourceRequests
	}).(ApplicationAcceleratorResourceRequestsResponsePtrOutput)
}

type ApplicationAcceleratorComponentResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorComponentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAcceleratorComponentResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorComponentResponseArrayOutput) ToApplicationAcceleratorComponentResponseArrayOutput() ApplicationAcceleratorComponentResponseArrayOutput {
	return o
}

func (o ApplicationAcceleratorComponentResponseArrayOutput) ToApplicationAcceleratorComponentResponseArrayOutputWithContext(ctx context.Context) ApplicationAcceleratorComponentResponseArrayOutput {
	return o
}

func (o ApplicationAcceleratorComponentResponseArrayOutput) Index(i pulumi.IntInput) ApplicationAcceleratorComponentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAcceleratorComponentResponse {
		return vs[0].([]ApplicationAcceleratorComponentResponse)[vs[1].(int)]
	}).(ApplicationAcceleratorComponentResponseOutput)
}

type ApplicationAcceleratorInstanceResponse struct {
	// Name of the Application Accelerator instance.
	Name string `pulumi:"name"`
	// Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.
	Status string `pulumi:"status"`
}

type ApplicationAcceleratorInstanceResponseOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAcceleratorInstanceResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorInstanceResponseOutput) ToApplicationAcceleratorInstanceResponseOutput() ApplicationAcceleratorInstanceResponseOutput {
	return o
}

func (o ApplicationAcceleratorInstanceResponseOutput) ToApplicationAcceleratorInstanceResponseOutputWithContext(ctx context.Context) ApplicationAcceleratorInstanceResponseOutput {
	return o
}

// Name of the Application Accelerator instance.
func (o ApplicationAcceleratorInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAcceleratorInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.
func (o ApplicationAcceleratorInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAcceleratorInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ApplicationAcceleratorInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAcceleratorInstanceResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorInstanceResponseArrayOutput) ToApplicationAcceleratorInstanceResponseArrayOutput() ApplicationAcceleratorInstanceResponseArrayOutput {
	return o
}

func (o ApplicationAcceleratorInstanceResponseArrayOutput) ToApplicationAcceleratorInstanceResponseArrayOutputWithContext(ctx context.Context) ApplicationAcceleratorInstanceResponseArrayOutput {
	return o
}

func (o ApplicationAcceleratorInstanceResponseArrayOutput) Index(i pulumi.IntInput) ApplicationAcceleratorInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAcceleratorInstanceResponse {
		return vs[0].([]ApplicationAcceleratorInstanceResponse)[vs[1].(int)]
	}).(ApplicationAcceleratorInstanceResponseOutput)
}

// Application accelerator properties payload
type ApplicationAcceleratorPropertiesResponse struct {
	// Collection of components belong to application accelerator.
	Components []ApplicationAcceleratorComponentResponse `pulumi:"components"`
	// State of the application accelerator.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Application accelerator properties payload
type ApplicationAcceleratorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAcceleratorPropertiesResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorPropertiesResponseOutput) ToApplicationAcceleratorPropertiesResponseOutput() ApplicationAcceleratorPropertiesResponseOutput {
	return o
}

func (o ApplicationAcceleratorPropertiesResponseOutput) ToApplicationAcceleratorPropertiesResponseOutputWithContext(ctx context.Context) ApplicationAcceleratorPropertiesResponseOutput {
	return o
}

// Collection of components belong to application accelerator.
func (o ApplicationAcceleratorPropertiesResponseOutput) Components() ApplicationAcceleratorComponentResponseArrayOutput {
	return o.ApplyT(func(v ApplicationAcceleratorPropertiesResponse) []ApplicationAcceleratorComponentResponse {
		return v.Components
	}).(ApplicationAcceleratorComponentResponseArrayOutput)
}

// State of the application accelerator.
func (o ApplicationAcceleratorPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAcceleratorPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ApplicationAcceleratorResourceRequestsResponse struct {
	// Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m
	Cpu string `pulumi:"cpu"`
	// Instance count of the application accelerator component.
	InstanceCount int `pulumi:"instanceCount"`
	// Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.
	Memory string `pulumi:"memory"`
}

type ApplicationAcceleratorResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAcceleratorResourceRequestsResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorResourceRequestsResponseOutput) ToApplicationAcceleratorResourceRequestsResponseOutput() ApplicationAcceleratorResourceRequestsResponseOutput {
	return o
}

func (o ApplicationAcceleratorResourceRequestsResponseOutput) ToApplicationAcceleratorResourceRequestsResponseOutputWithContext(ctx context.Context) ApplicationAcceleratorResourceRequestsResponseOutput {
	return o
}

// Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m
func (o ApplicationAcceleratorResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAcceleratorResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Instance count of the application accelerator component.
func (o ApplicationAcceleratorResourceRequestsResponseOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationAcceleratorResourceRequestsResponse) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.
func (o ApplicationAcceleratorResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAcceleratorResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

type ApplicationAcceleratorResourceRequestsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationAcceleratorResourceRequestsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAcceleratorResourceRequestsResponse)(nil)).Elem()
}

func (o ApplicationAcceleratorResourceRequestsResponsePtrOutput) ToApplicationAcceleratorResourceRequestsResponsePtrOutput() ApplicationAcceleratorResourceRequestsResponsePtrOutput {
	return o
}

func (o ApplicationAcceleratorResourceRequestsResponsePtrOutput) ToApplicationAcceleratorResourceRequestsResponsePtrOutputWithContext(ctx context.Context) ApplicationAcceleratorResourceRequestsResponsePtrOutput {
	return o
}

func (o ApplicationAcceleratorResourceRequestsResponsePtrOutput) Elem() ApplicationAcceleratorResourceRequestsResponseOutput {
	return o.ApplyT(func(v *ApplicationAcceleratorResourceRequestsResponse) ApplicationAcceleratorResourceRequestsResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationAcceleratorResourceRequestsResponse
		return ret
	}).(ApplicationAcceleratorResourceRequestsResponseOutput)
}

// Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m
func (o ApplicationAcceleratorResourceRequestsResponsePtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationAcceleratorResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Instance count of the application accelerator component.
func (o ApplicationAcceleratorResourceRequestsResponsePtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationAcceleratorResourceRequestsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.
func (o ApplicationAcceleratorResourceRequestsResponsePtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationAcceleratorResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(pulumi.StringPtrOutput)
}

// Application Insights agent versions properties payload
type ApplicationInsightsAgentVersionsResponse struct {
	// Indicates the version of application insight java agent
	Java string `pulumi:"java"`
}

// Application Insights agent versions properties payload
type ApplicationInsightsAgentVersionsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsAgentVersionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsAgentVersionsResponse)(nil)).Elem()
}

func (o ApplicationInsightsAgentVersionsResponseOutput) ToApplicationInsightsAgentVersionsResponseOutput() ApplicationInsightsAgentVersionsResponseOutput {
	return o
}

func (o ApplicationInsightsAgentVersionsResponseOutput) ToApplicationInsightsAgentVersionsResponseOutputWithContext(ctx context.Context) ApplicationInsightsAgentVersionsResponseOutput {
	return o
}

// Indicates the version of application insight java agent
func (o ApplicationInsightsAgentVersionsResponseOutput) Java() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsAgentVersionsResponse) string { return v.Java }).(pulumi.StringOutput)
}

type ApplicationInsightsAgentVersionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsAgentVersionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsAgentVersionsResponse)(nil)).Elem()
}

func (o ApplicationInsightsAgentVersionsResponsePtrOutput) ToApplicationInsightsAgentVersionsResponsePtrOutput() ApplicationInsightsAgentVersionsResponsePtrOutput {
	return o
}

func (o ApplicationInsightsAgentVersionsResponsePtrOutput) ToApplicationInsightsAgentVersionsResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsAgentVersionsResponsePtrOutput {
	return o
}

func (o ApplicationInsightsAgentVersionsResponsePtrOutput) Elem() ApplicationInsightsAgentVersionsResponseOutput {
	return o.ApplyT(func(v *ApplicationInsightsAgentVersionsResponse) ApplicationInsightsAgentVersionsResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationInsightsAgentVersionsResponse
		return ret
	}).(ApplicationInsightsAgentVersionsResponseOutput)
}

// Indicates the version of application insight java agent
func (o ApplicationInsightsAgentVersionsResponsePtrOutput) Java() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsAgentVersionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Java
	}).(pulumi.StringPtrOutput)
}

// Application Live View properties payload
type ApplicationLiveViewComponentResponse struct {
	// Collection of instances belong to Application Live View.
	Instances []ApplicationLiveViewInstanceResponse `pulumi:"instances"`
	// Name of the component.
	Name interface{} `pulumi:"name"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests ApplicationLiveViewResourceRequestsResponse `pulumi:"resourceRequests"`
}

// Application Live View properties payload
type ApplicationLiveViewComponentResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLiveViewComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLiveViewComponentResponse)(nil)).Elem()
}

func (o ApplicationLiveViewComponentResponseOutput) ToApplicationLiveViewComponentResponseOutput() ApplicationLiveViewComponentResponseOutput {
	return o
}

func (o ApplicationLiveViewComponentResponseOutput) ToApplicationLiveViewComponentResponseOutputWithContext(ctx context.Context) ApplicationLiveViewComponentResponseOutput {
	return o
}

// Collection of instances belong to Application Live View.
func (o ApplicationLiveViewComponentResponseOutput) Instances() ApplicationLiveViewInstanceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationLiveViewComponentResponse) []ApplicationLiveViewInstanceResponse { return v.Instances }).(ApplicationLiveViewInstanceResponseArrayOutput)
}

// Name of the component.
func (o ApplicationLiveViewComponentResponseOutput) Name() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationLiveViewComponentResponse) interface{} { return v.Name }).(pulumi.AnyOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o ApplicationLiveViewComponentResponseOutput) ResourceRequests() ApplicationLiveViewResourceRequestsResponseOutput {
	return o.ApplyT(func(v ApplicationLiveViewComponentResponse) ApplicationLiveViewResourceRequestsResponse {
		return v.ResourceRequests
	}).(ApplicationLiveViewResourceRequestsResponseOutput)
}

type ApplicationLiveViewComponentResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLiveViewComponentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLiveViewComponentResponse)(nil)).Elem()
}

func (o ApplicationLiveViewComponentResponseArrayOutput) ToApplicationLiveViewComponentResponseArrayOutput() ApplicationLiveViewComponentResponseArrayOutput {
	return o
}

func (o ApplicationLiveViewComponentResponseArrayOutput) ToApplicationLiveViewComponentResponseArrayOutputWithContext(ctx context.Context) ApplicationLiveViewComponentResponseArrayOutput {
	return o
}

func (o ApplicationLiveViewComponentResponseArrayOutput) Index(i pulumi.IntInput) ApplicationLiveViewComponentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLiveViewComponentResponse {
		return vs[0].([]ApplicationLiveViewComponentResponse)[vs[1].(int)]
	}).(ApplicationLiveViewComponentResponseOutput)
}

// Collection of instances belong to the Application Live View
type ApplicationLiveViewInstanceResponse struct {
	// Name of the Application Live View instance.
	Name string `pulumi:"name"`
	// Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.
	Status string `pulumi:"status"`
}

// Collection of instances belong to the Application Live View
type ApplicationLiveViewInstanceResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLiveViewInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLiveViewInstanceResponse)(nil)).Elem()
}

func (o ApplicationLiveViewInstanceResponseOutput) ToApplicationLiveViewInstanceResponseOutput() ApplicationLiveViewInstanceResponseOutput {
	return o
}

func (o ApplicationLiveViewInstanceResponseOutput) ToApplicationLiveViewInstanceResponseOutputWithContext(ctx context.Context) ApplicationLiveViewInstanceResponseOutput {
	return o
}

// Name of the Application Live View instance.
func (o ApplicationLiveViewInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLiveViewInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.
func (o ApplicationLiveViewInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLiveViewInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ApplicationLiveViewInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLiveViewInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLiveViewInstanceResponse)(nil)).Elem()
}

func (o ApplicationLiveViewInstanceResponseArrayOutput) ToApplicationLiveViewInstanceResponseArrayOutput() ApplicationLiveViewInstanceResponseArrayOutput {
	return o
}

func (o ApplicationLiveViewInstanceResponseArrayOutput) ToApplicationLiveViewInstanceResponseArrayOutputWithContext(ctx context.Context) ApplicationLiveViewInstanceResponseArrayOutput {
	return o
}

func (o ApplicationLiveViewInstanceResponseArrayOutput) Index(i pulumi.IntInput) ApplicationLiveViewInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLiveViewInstanceResponse {
		return vs[0].([]ApplicationLiveViewInstanceResponse)[vs[1].(int)]
	}).(ApplicationLiveViewInstanceResponseOutput)
}

// Application Live View properties payload
type ApplicationLiveViewPropertiesResponse struct {
	// Component details of Application Live View
	Components []ApplicationLiveViewComponentResponse `pulumi:"components"`
	// State of the Application Live View.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Application Live View properties payload
type ApplicationLiveViewPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLiveViewPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLiveViewPropertiesResponse)(nil)).Elem()
}

func (o ApplicationLiveViewPropertiesResponseOutput) ToApplicationLiveViewPropertiesResponseOutput() ApplicationLiveViewPropertiesResponseOutput {
	return o
}

func (o ApplicationLiveViewPropertiesResponseOutput) ToApplicationLiveViewPropertiesResponseOutputWithContext(ctx context.Context) ApplicationLiveViewPropertiesResponseOutput {
	return o
}

// Component details of Application Live View
func (o ApplicationLiveViewPropertiesResponseOutput) Components() ApplicationLiveViewComponentResponseArrayOutput {
	return o.ApplyT(func(v ApplicationLiveViewPropertiesResponse) []ApplicationLiveViewComponentResponse {
		return v.Components
	}).(ApplicationLiveViewComponentResponseArrayOutput)
}

// State of the Application Live View.
func (o ApplicationLiveViewPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLiveViewPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource quantity for required CPU and Memory of Application Live View component
type ApplicationLiveViewResourceRequestsResponse struct {
	// Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.
	Cpu string `pulumi:"cpu"`
	// Desired instance count of Application Live View component instance.
	InstanceCount int `pulumi:"instanceCount"`
	// Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.
	Memory string `pulumi:"memory"`
}

// The resource quantity for required CPU and Memory of Application Live View component
type ApplicationLiveViewResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLiveViewResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLiveViewResourceRequestsResponse)(nil)).Elem()
}

func (o ApplicationLiveViewResourceRequestsResponseOutput) ToApplicationLiveViewResourceRequestsResponseOutput() ApplicationLiveViewResourceRequestsResponseOutput {
	return o
}

func (o ApplicationLiveViewResourceRequestsResponseOutput) ToApplicationLiveViewResourceRequestsResponseOutputWithContext(ctx context.Context) ApplicationLiveViewResourceRequestsResponseOutput {
	return o
}

// Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.
func (o ApplicationLiveViewResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLiveViewResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Desired instance count of Application Live View component instance.
func (o ApplicationLiveViewResourceRequestsResponseOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationLiveViewResourceRequestsResponse) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.
func (o ApplicationLiveViewResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLiveViewResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// The properties of the Azure File volume. Azure File shares are mounted as volumes.
type AzureFileVolume struct {
	// If set to true, it will create and mount a dedicated directory for every individual app instance.
	EnableSubPath *bool `pulumi:"enableSubPath"`
	// These are the mount options for a persistent disk.
	MountOptions []string `pulumi:"mountOptions"`
	// The mount path of the persistent disk.
	MountPath string `pulumi:"mountPath"`
	// Indicates whether the persistent disk is a readOnly one.
	ReadOnly *bool `pulumi:"readOnly"`
	// The share name of the Azure File share.
	ShareName *string `pulumi:"shareName"`
	// The type of the underlying resource to mount as a persistent disk.
	// Expected value is 'AzureFileVolume'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for AzureFileVolume
func (val *AzureFileVolume) Defaults() *AzureFileVolume {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableSubPath == nil {
		enableSubPath_ := false
		tmp.EnableSubPath = &enableSubPath_
	}
	return &tmp
}

// AzureFileVolumeInput is an input type that accepts AzureFileVolumeArgs and AzureFileVolumeOutput values.
// You can construct a concrete instance of `AzureFileVolumeInput` via:
//
//	AzureFileVolumeArgs{...}
type AzureFileVolumeInput interface {
	pulumi.Input

	ToAzureFileVolumeOutput() AzureFileVolumeOutput
	ToAzureFileVolumeOutputWithContext(context.Context) AzureFileVolumeOutput
}

// The properties of the Azure File volume. Azure File shares are mounted as volumes.
type AzureFileVolumeArgs struct {
	// If set to true, it will create and mount a dedicated directory for every individual app instance.
	EnableSubPath pulumi.BoolPtrInput `pulumi:"enableSubPath"`
	// These are the mount options for a persistent disk.
	MountOptions pulumi.StringArrayInput `pulumi:"mountOptions"`
	// The mount path of the persistent disk.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Indicates whether the persistent disk is a readOnly one.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The share name of the Azure File share.
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// The type of the underlying resource to mount as a persistent disk.
	// Expected value is 'AzureFileVolume'.
	Type pulumi.StringInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for AzureFileVolumeArgs
func (val *AzureFileVolumeArgs) Defaults() *AzureFileVolumeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableSubPath == nil {
		tmp.EnableSubPath = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (AzureFileVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileVolume)(nil)).Elem()
}

func (i AzureFileVolumeArgs) ToAzureFileVolumeOutput() AzureFileVolumeOutput {
	return i.ToAzureFileVolumeOutputWithContext(context.Background())
}

func (i AzureFileVolumeArgs) ToAzureFileVolumeOutputWithContext(ctx context.Context) AzureFileVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileVolumeOutput)
}

func (i AzureFileVolumeArgs) ToAzureFileVolumePtrOutput() AzureFileVolumePtrOutput {
	return i.ToAzureFileVolumePtrOutputWithContext(context.Background())
}

func (i AzureFileVolumeArgs) ToAzureFileVolumePtrOutputWithContext(ctx context.Context) AzureFileVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileVolumeOutput).ToAzureFileVolumePtrOutputWithContext(ctx)
}

// AzureFileVolumePtrInput is an input type that accepts AzureFileVolumeArgs, AzureFileVolumePtr and AzureFileVolumePtrOutput values.
// You can construct a concrete instance of `AzureFileVolumePtrInput` via:
//
//	        AzureFileVolumeArgs{...}
//
//	or:
//
//	        nil
type AzureFileVolumePtrInput interface {
	pulumi.Input

	ToAzureFileVolumePtrOutput() AzureFileVolumePtrOutput
	ToAzureFileVolumePtrOutputWithContext(context.Context) AzureFileVolumePtrOutput
}

type azureFileVolumePtrType AzureFileVolumeArgs

func AzureFileVolumePtr(v *AzureFileVolumeArgs) AzureFileVolumePtrInput {
	return (*azureFileVolumePtrType)(v)
}

func (*azureFileVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileVolume)(nil)).Elem()
}

func (i *azureFileVolumePtrType) ToAzureFileVolumePtrOutput() AzureFileVolumePtrOutput {
	return i.ToAzureFileVolumePtrOutputWithContext(context.Background())
}

func (i *azureFileVolumePtrType) ToAzureFileVolumePtrOutputWithContext(ctx context.Context) AzureFileVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileVolumePtrOutput)
}

// The properties of the Azure File volume. Azure File shares are mounted as volumes.
type AzureFileVolumeOutput struct{ *pulumi.OutputState }

func (AzureFileVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileVolume)(nil)).Elem()
}

func (o AzureFileVolumeOutput) ToAzureFileVolumeOutput() AzureFileVolumeOutput {
	return o
}

func (o AzureFileVolumeOutput) ToAzureFileVolumeOutputWithContext(ctx context.Context) AzureFileVolumeOutput {
	return o
}

func (o AzureFileVolumeOutput) ToAzureFileVolumePtrOutput() AzureFileVolumePtrOutput {
	return o.ToAzureFileVolumePtrOutputWithContext(context.Background())
}

func (o AzureFileVolumeOutput) ToAzureFileVolumePtrOutputWithContext(ctx context.Context) AzureFileVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileVolume) *AzureFileVolume {
		return &v
	}).(AzureFileVolumePtrOutput)
}

// If set to true, it will create and mount a dedicated directory for every individual app instance.
func (o AzureFileVolumeOutput) EnableSubPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileVolume) *bool { return v.EnableSubPath }).(pulumi.BoolPtrOutput)
}

// These are the mount options for a persistent disk.
func (o AzureFileVolumeOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileVolume) []string { return v.MountOptions }).(pulumi.StringArrayOutput)
}

// The mount path of the persistent disk.
func (o AzureFileVolumeOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileVolume) string { return v.MountPath }).(pulumi.StringOutput)
}

// Indicates whether the persistent disk is a readOnly one.
func (o AzureFileVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The share name of the Azure File share.
func (o AzureFileVolumeOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileVolume) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// The type of the underlying resource to mount as a persistent disk.
// Expected value is 'AzureFileVolume'.
func (o AzureFileVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileVolume) string { return v.Type }).(pulumi.StringOutput)
}

type AzureFileVolumePtrOutput struct{ *pulumi.OutputState }

func (AzureFileVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileVolume)(nil)).Elem()
}

func (o AzureFileVolumePtrOutput) ToAzureFileVolumePtrOutput() AzureFileVolumePtrOutput {
	return o
}

func (o AzureFileVolumePtrOutput) ToAzureFileVolumePtrOutputWithContext(ctx context.Context) AzureFileVolumePtrOutput {
	return o
}

func (o AzureFileVolumePtrOutput) Elem() AzureFileVolumeOutput {
	return o.ApplyT(func(v *AzureFileVolume) AzureFileVolume {
		if v != nil {
			return *v
		}
		var ret AzureFileVolume
		return ret
	}).(AzureFileVolumeOutput)
}

// If set to true, it will create and mount a dedicated directory for every individual app instance.
func (o AzureFileVolumePtrOutput) EnableSubPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileVolume) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSubPath
	}).(pulumi.BoolPtrOutput)
}

// These are the mount options for a persistent disk.
func (o AzureFileVolumePtrOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileVolume) []string {
		if v == nil {
			return nil
		}
		return v.MountOptions
	}).(pulumi.StringArrayOutput)
}

// The mount path of the persistent disk.
func (o AzureFileVolumePtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileVolume) *string {
		if v == nil {
			return nil
		}
		return &v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the persistent disk is a readOnly one.
func (o AzureFileVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// The share name of the Azure File share.
func (o AzureFileVolumePtrOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileVolume) *string {
		if v == nil {
			return nil
		}
		return v.ShareName
	}).(pulumi.StringPtrOutput)
}

// The type of the underlying resource to mount as a persistent disk.
// Expected value is 'AzureFileVolume'.
func (o AzureFileVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of the Azure File volume. Azure File shares are mounted as volumes.
type AzureFileVolumeResponse struct {
	// If set to true, it will create and mount a dedicated directory for every individual app instance.
	EnableSubPath *bool `pulumi:"enableSubPath"`
	// These are the mount options for a persistent disk.
	MountOptions []string `pulumi:"mountOptions"`
	// The mount path of the persistent disk.
	MountPath string `pulumi:"mountPath"`
	// Indicates whether the persistent disk is a readOnly one.
	ReadOnly *bool `pulumi:"readOnly"`
	// The share name of the Azure File share.
	ShareName *string `pulumi:"shareName"`
	// The type of the underlying resource to mount as a persistent disk.
	// Expected value is 'AzureFileVolume'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for AzureFileVolumeResponse
func (val *AzureFileVolumeResponse) Defaults() *AzureFileVolumeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableSubPath == nil {
		enableSubPath_ := false
		tmp.EnableSubPath = &enableSubPath_
	}
	return &tmp
}

// The properties of the Azure File volume. Azure File shares are mounted as volumes.
type AzureFileVolumeResponseOutput struct{ *pulumi.OutputState }

func (AzureFileVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileVolumeResponse)(nil)).Elem()
}

func (o AzureFileVolumeResponseOutput) ToAzureFileVolumeResponseOutput() AzureFileVolumeResponseOutput {
	return o
}

func (o AzureFileVolumeResponseOutput) ToAzureFileVolumeResponseOutputWithContext(ctx context.Context) AzureFileVolumeResponseOutput {
	return o
}

// If set to true, it will create and mount a dedicated directory for every individual app instance.
func (o AzureFileVolumeResponseOutput) EnableSubPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileVolumeResponse) *bool { return v.EnableSubPath }).(pulumi.BoolPtrOutput)
}

// These are the mount options for a persistent disk.
func (o AzureFileVolumeResponseOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileVolumeResponse) []string { return v.MountOptions }).(pulumi.StringArrayOutput)
}

// The mount path of the persistent disk.
func (o AzureFileVolumeResponseOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileVolumeResponse) string { return v.MountPath }).(pulumi.StringOutput)
}

// Indicates whether the persistent disk is a readOnly one.
func (o AzureFileVolumeResponseOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileVolumeResponse) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The share name of the Azure File share.
func (o AzureFileVolumeResponseOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileVolumeResponse) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// The type of the underlying resource to mount as a persistent disk.
// Expected value is 'AzureFileVolume'.
func (o AzureFileVolumeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileVolumeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AzureFileVolumeResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileVolumeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileVolumeResponse)(nil)).Elem()
}

func (o AzureFileVolumeResponsePtrOutput) ToAzureFileVolumeResponsePtrOutput() AzureFileVolumeResponsePtrOutput {
	return o
}

func (o AzureFileVolumeResponsePtrOutput) ToAzureFileVolumeResponsePtrOutputWithContext(ctx context.Context) AzureFileVolumeResponsePtrOutput {
	return o
}

func (o AzureFileVolumeResponsePtrOutput) Elem() AzureFileVolumeResponseOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) AzureFileVolumeResponse {
		if v != nil {
			return *v
		}
		var ret AzureFileVolumeResponse
		return ret
	}).(AzureFileVolumeResponseOutput)
}

// If set to true, it will create and mount a dedicated directory for every individual app instance.
func (o AzureFileVolumeResponsePtrOutput) EnableSubPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSubPath
	}).(pulumi.BoolPtrOutput)
}

// These are the mount options for a persistent disk.
func (o AzureFileVolumeResponsePtrOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) []string {
		if v == nil {
			return nil
		}
		return v.MountOptions
	}).(pulumi.StringArrayOutput)
}

// The mount path of the persistent disk.
func (o AzureFileVolumeResponsePtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the persistent disk is a readOnly one.
func (o AzureFileVolumeResponsePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// The share name of the Azure File share.
func (o AzureFileVolumeResponsePtrOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ShareName
	}).(pulumi.StringPtrOutput)
}

// The type of the underlying resource to mount as a persistent disk.
// Expected value is 'AzureFileVolume'.
func (o AzureFileVolumeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileVolumeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Binding resource properties payload
type BindingResourceProperties struct {
	// Binding parameters of the Binding resource
	BindingParameters map[string]string `pulumi:"bindingParameters"`
	// The key of the bound resource
	Key *string `pulumi:"key"`
	// The Azure resource id of the bound resource
	ResourceId *string `pulumi:"resourceId"`
}

// BindingResourcePropertiesInput is an input type that accepts BindingResourcePropertiesArgs and BindingResourcePropertiesOutput values.
// You can construct a concrete instance of `BindingResourcePropertiesInput` via:
//
//	BindingResourcePropertiesArgs{...}
type BindingResourcePropertiesInput interface {
	pulumi.Input

	ToBindingResourcePropertiesOutput() BindingResourcePropertiesOutput
	ToBindingResourcePropertiesOutputWithContext(context.Context) BindingResourcePropertiesOutput
}

// Binding resource properties payload
type BindingResourcePropertiesArgs struct {
	// Binding parameters of the Binding resource
	BindingParameters pulumi.StringMapInput `pulumi:"bindingParameters"`
	// The key of the bound resource
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The Azure resource id of the bound resource
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (BindingResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResourceProperties)(nil)).Elem()
}

func (i BindingResourcePropertiesArgs) ToBindingResourcePropertiesOutput() BindingResourcePropertiesOutput {
	return i.ToBindingResourcePropertiesOutputWithContext(context.Background())
}

func (i BindingResourcePropertiesArgs) ToBindingResourcePropertiesOutputWithContext(ctx context.Context) BindingResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResourcePropertiesOutput)
}

func (i BindingResourcePropertiesArgs) ToBindingResourcePropertiesPtrOutput() BindingResourcePropertiesPtrOutput {
	return i.ToBindingResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i BindingResourcePropertiesArgs) ToBindingResourcePropertiesPtrOutputWithContext(ctx context.Context) BindingResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResourcePropertiesOutput).ToBindingResourcePropertiesPtrOutputWithContext(ctx)
}

// BindingResourcePropertiesPtrInput is an input type that accepts BindingResourcePropertiesArgs, BindingResourcePropertiesPtr and BindingResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `BindingResourcePropertiesPtrInput` via:
//
//	        BindingResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type BindingResourcePropertiesPtrInput interface {
	pulumi.Input

	ToBindingResourcePropertiesPtrOutput() BindingResourcePropertiesPtrOutput
	ToBindingResourcePropertiesPtrOutputWithContext(context.Context) BindingResourcePropertiesPtrOutput
}

type bindingResourcePropertiesPtrType BindingResourcePropertiesArgs

func BindingResourcePropertiesPtr(v *BindingResourcePropertiesArgs) BindingResourcePropertiesPtrInput {
	return (*bindingResourcePropertiesPtrType)(v)
}

func (*bindingResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingResourceProperties)(nil)).Elem()
}

func (i *bindingResourcePropertiesPtrType) ToBindingResourcePropertiesPtrOutput() BindingResourcePropertiesPtrOutput {
	return i.ToBindingResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *bindingResourcePropertiesPtrType) ToBindingResourcePropertiesPtrOutputWithContext(ctx context.Context) BindingResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResourcePropertiesPtrOutput)
}

// Binding resource properties payload
type BindingResourcePropertiesOutput struct{ *pulumi.OutputState }

func (BindingResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResourceProperties)(nil)).Elem()
}

func (o BindingResourcePropertiesOutput) ToBindingResourcePropertiesOutput() BindingResourcePropertiesOutput {
	return o
}

func (o BindingResourcePropertiesOutput) ToBindingResourcePropertiesOutputWithContext(ctx context.Context) BindingResourcePropertiesOutput {
	return o
}

func (o BindingResourcePropertiesOutput) ToBindingResourcePropertiesPtrOutput() BindingResourcePropertiesPtrOutput {
	return o.ToBindingResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o BindingResourcePropertiesOutput) ToBindingResourcePropertiesPtrOutputWithContext(ctx context.Context) BindingResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BindingResourceProperties) *BindingResourceProperties {
		return &v
	}).(BindingResourcePropertiesPtrOutput)
}

// Binding parameters of the Binding resource
func (o BindingResourcePropertiesOutput) BindingParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v BindingResourceProperties) map[string]string { return v.BindingParameters }).(pulumi.StringMapOutput)
}

// The key of the bound resource
func (o BindingResourcePropertiesOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingResourceProperties) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The Azure resource id of the bound resource
func (o BindingResourcePropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingResourceProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type BindingResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (BindingResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingResourceProperties)(nil)).Elem()
}

func (o BindingResourcePropertiesPtrOutput) ToBindingResourcePropertiesPtrOutput() BindingResourcePropertiesPtrOutput {
	return o
}

func (o BindingResourcePropertiesPtrOutput) ToBindingResourcePropertiesPtrOutputWithContext(ctx context.Context) BindingResourcePropertiesPtrOutput {
	return o
}

func (o BindingResourcePropertiesPtrOutput) Elem() BindingResourcePropertiesOutput {
	return o.ApplyT(func(v *BindingResourceProperties) BindingResourceProperties {
		if v != nil {
			return *v
		}
		var ret BindingResourceProperties
		return ret
	}).(BindingResourcePropertiesOutput)
}

// Binding parameters of the Binding resource
func (o BindingResourcePropertiesPtrOutput) BindingParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BindingResourceProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.BindingParameters
	}).(pulumi.StringMapOutput)
}

// The key of the bound resource
func (o BindingResourcePropertiesPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The Azure resource id of the bound resource
func (o BindingResourcePropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Binding resource properties payload
type BindingResourcePropertiesResponse struct {
	// Binding parameters of the Binding resource
	BindingParameters map[string]string `pulumi:"bindingParameters"`
	// Creation time of the Binding resource
	CreatedAt string `pulumi:"createdAt"`
	// The generated Spring Boot property file for this binding. The secret will be deducted.
	GeneratedProperties string `pulumi:"generatedProperties"`
	// The key of the bound resource
	Key *string `pulumi:"key"`
	// The Azure resource id of the bound resource
	ResourceId *string `pulumi:"resourceId"`
	// The name of the bound resource
	ResourceName string `pulumi:"resourceName"`
	// The standard Azure resource type of the bound resource
	ResourceType string `pulumi:"resourceType"`
	// Update time of the Binding resource
	UpdatedAt string `pulumi:"updatedAt"`
}

// Binding resource properties payload
type BindingResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (BindingResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResourcePropertiesResponse)(nil)).Elem()
}

func (o BindingResourcePropertiesResponseOutput) ToBindingResourcePropertiesResponseOutput() BindingResourcePropertiesResponseOutput {
	return o
}

func (o BindingResourcePropertiesResponseOutput) ToBindingResourcePropertiesResponseOutputWithContext(ctx context.Context) BindingResourcePropertiesResponseOutput {
	return o
}

// Binding parameters of the Binding resource
func (o BindingResourcePropertiesResponseOutput) BindingParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) map[string]string { return v.BindingParameters }).(pulumi.StringMapOutput)
}

// Creation time of the Binding resource
func (o BindingResourcePropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The generated Spring Boot property file for this binding. The secret will be deducted.
func (o BindingResourcePropertiesResponseOutput) GeneratedProperties() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) string { return v.GeneratedProperties }).(pulumi.StringOutput)
}

// The key of the bound resource
func (o BindingResourcePropertiesResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The Azure resource id of the bound resource
func (o BindingResourcePropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The name of the bound resource
func (o BindingResourcePropertiesResponseOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) string { return v.ResourceName }).(pulumi.StringOutput)
}

// The standard Azure resource type of the bound resource
func (o BindingResourcePropertiesResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Update time of the Binding resource
func (o BindingResourcePropertiesResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResourcePropertiesResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Build resource properties payload
type BuildProperties struct {
	// The resource id of agent pool
	AgentPool *string `pulumi:"agentPool"`
	// The APMs for this build
	Apms []ApmReference `pulumi:"apms"`
	// The resource id of builder to build the source code
	Builder *string `pulumi:"builder"`
	// The CA Certificates for this build
	Certificates []CertificateReference `pulumi:"certificates"`
	// The environment variables for this build
	Env map[string]string `pulumi:"env"`
	// The relative path of source code
	RelativePath *string `pulumi:"relativePath"`
	// The customized build resource for this build
	ResourceRequests *BuildResourceRequests `pulumi:"resourceRequests"`
}

// Defaults sets the appropriate defaults for BuildProperties
func (val *BuildProperties) Defaults() *BuildProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ResourceRequests = tmp.ResourceRequests.Defaults()

	return &tmp
}

// BuildPropertiesInput is an input type that accepts BuildPropertiesArgs and BuildPropertiesOutput values.
// You can construct a concrete instance of `BuildPropertiesInput` via:
//
//	BuildPropertiesArgs{...}
type BuildPropertiesInput interface {
	pulumi.Input

	ToBuildPropertiesOutput() BuildPropertiesOutput
	ToBuildPropertiesOutputWithContext(context.Context) BuildPropertiesOutput
}

// Build resource properties payload
type BuildPropertiesArgs struct {
	// The resource id of agent pool
	AgentPool pulumi.StringPtrInput `pulumi:"agentPool"`
	// The APMs for this build
	Apms ApmReferenceArrayInput `pulumi:"apms"`
	// The resource id of builder to build the source code
	Builder pulumi.StringPtrInput `pulumi:"builder"`
	// The CA Certificates for this build
	Certificates CertificateReferenceArrayInput `pulumi:"certificates"`
	// The environment variables for this build
	Env pulumi.StringMapInput `pulumi:"env"`
	// The relative path of source code
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// The customized build resource for this build
	ResourceRequests BuildResourceRequestsPtrInput `pulumi:"resourceRequests"`
}

// Defaults sets the appropriate defaults for BuildPropertiesArgs
func (val *BuildPropertiesArgs) Defaults() *BuildPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (BuildPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildProperties)(nil)).Elem()
}

func (i BuildPropertiesArgs) ToBuildPropertiesOutput() BuildPropertiesOutput {
	return i.ToBuildPropertiesOutputWithContext(context.Background())
}

func (i BuildPropertiesArgs) ToBuildPropertiesOutputWithContext(ctx context.Context) BuildPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildPropertiesOutput)
}

func (i BuildPropertiesArgs) ToBuildPropertiesPtrOutput() BuildPropertiesPtrOutput {
	return i.ToBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i BuildPropertiesArgs) ToBuildPropertiesPtrOutputWithContext(ctx context.Context) BuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildPropertiesOutput).ToBuildPropertiesPtrOutputWithContext(ctx)
}

// BuildPropertiesPtrInput is an input type that accepts BuildPropertiesArgs, BuildPropertiesPtr and BuildPropertiesPtrOutput values.
// You can construct a concrete instance of `BuildPropertiesPtrInput` via:
//
//	        BuildPropertiesArgs{...}
//
//	or:
//
//	        nil
type BuildPropertiesPtrInput interface {
	pulumi.Input

	ToBuildPropertiesPtrOutput() BuildPropertiesPtrOutput
	ToBuildPropertiesPtrOutputWithContext(context.Context) BuildPropertiesPtrOutput
}

type buildPropertiesPtrType BuildPropertiesArgs

func BuildPropertiesPtr(v *BuildPropertiesArgs) BuildPropertiesPtrInput {
	return (*buildPropertiesPtrType)(v)
}

func (*buildPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildProperties)(nil)).Elem()
}

func (i *buildPropertiesPtrType) ToBuildPropertiesPtrOutput() BuildPropertiesPtrOutput {
	return i.ToBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i *buildPropertiesPtrType) ToBuildPropertiesPtrOutputWithContext(ctx context.Context) BuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildPropertiesPtrOutput)
}

// Build resource properties payload
type BuildPropertiesOutput struct{ *pulumi.OutputState }

func (BuildPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildProperties)(nil)).Elem()
}

func (o BuildPropertiesOutput) ToBuildPropertiesOutput() BuildPropertiesOutput {
	return o
}

func (o BuildPropertiesOutput) ToBuildPropertiesOutputWithContext(ctx context.Context) BuildPropertiesOutput {
	return o
}

func (o BuildPropertiesOutput) ToBuildPropertiesPtrOutput() BuildPropertiesPtrOutput {
	return o.ToBuildPropertiesPtrOutputWithContext(context.Background())
}

func (o BuildPropertiesOutput) ToBuildPropertiesPtrOutputWithContext(ctx context.Context) BuildPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildProperties) *BuildProperties {
		return &v
	}).(BuildPropertiesPtrOutput)
}

// The resource id of agent pool
func (o BuildPropertiesOutput) AgentPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildProperties) *string { return v.AgentPool }).(pulumi.StringPtrOutput)
}

// The APMs for this build
func (o BuildPropertiesOutput) Apms() ApmReferenceArrayOutput {
	return o.ApplyT(func(v BuildProperties) []ApmReference { return v.Apms }).(ApmReferenceArrayOutput)
}

// The resource id of builder to build the source code
func (o BuildPropertiesOutput) Builder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildProperties) *string { return v.Builder }).(pulumi.StringPtrOutput)
}

// The CA Certificates for this build
func (o BuildPropertiesOutput) Certificates() CertificateReferenceArrayOutput {
	return o.ApplyT(func(v BuildProperties) []CertificateReference { return v.Certificates }).(CertificateReferenceArrayOutput)
}

// The environment variables for this build
func (o BuildPropertiesOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildProperties) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

// The relative path of source code
func (o BuildPropertiesOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildProperties) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// The customized build resource for this build
func (o BuildPropertiesOutput) ResourceRequests() BuildResourceRequestsPtrOutput {
	return o.ApplyT(func(v BuildProperties) *BuildResourceRequests { return v.ResourceRequests }).(BuildResourceRequestsPtrOutput)
}

type BuildPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BuildPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildProperties)(nil)).Elem()
}

func (o BuildPropertiesPtrOutput) ToBuildPropertiesPtrOutput() BuildPropertiesPtrOutput {
	return o
}

func (o BuildPropertiesPtrOutput) ToBuildPropertiesPtrOutputWithContext(ctx context.Context) BuildPropertiesPtrOutput {
	return o
}

func (o BuildPropertiesPtrOutput) Elem() BuildPropertiesOutput {
	return o.ApplyT(func(v *BuildProperties) BuildProperties {
		if v != nil {
			return *v
		}
		var ret BuildProperties
		return ret
	}).(BuildPropertiesOutput)
}

// The resource id of agent pool
func (o BuildPropertiesPtrOutput) AgentPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentPool
	}).(pulumi.StringPtrOutput)
}

// The APMs for this build
func (o BuildPropertiesPtrOutput) Apms() ApmReferenceArrayOutput {
	return o.ApplyT(func(v *BuildProperties) []ApmReference {
		if v == nil {
			return nil
		}
		return v.Apms
	}).(ApmReferenceArrayOutput)
}

// The resource id of builder to build the source code
func (o BuildPropertiesPtrOutput) Builder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.Builder
	}).(pulumi.StringPtrOutput)
}

// The CA Certificates for this build
func (o BuildPropertiesPtrOutput) Certificates() CertificateReferenceArrayOutput {
	return o.ApplyT(func(v *BuildProperties) []CertificateReference {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(CertificateReferenceArrayOutput)
}

// The environment variables for this build
func (o BuildPropertiesPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

// The relative path of source code
func (o BuildPropertiesPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// The customized build resource for this build
func (o BuildPropertiesPtrOutput) ResourceRequests() BuildResourceRequestsPtrOutput {
	return o.ApplyT(func(v *BuildProperties) *BuildResourceRequests {
		if v == nil {
			return nil
		}
		return v.ResourceRequests
	}).(BuildResourceRequestsPtrOutput)
}

// Build resource properties payload
type BuildPropertiesResponse struct {
	// The resource id of agent pool
	AgentPool *string `pulumi:"agentPool"`
	// The APMs for this build
	Apms []ApmReferenceResponse `pulumi:"apms"`
	// The resource id of builder to build the source code
	Builder *string `pulumi:"builder"`
	// The CA Certificates for this build
	Certificates []CertificateReferenceResponse `pulumi:"certificates"`
	// The environment variables for this build
	Env map[string]string `pulumi:"env"`
	// Provisioning state of the KPack build result
	ProvisioningState string `pulumi:"provisioningState"`
	// The relative path of source code
	RelativePath *string `pulumi:"relativePath"`
	// The customized build resource for this build
	ResourceRequests *BuildResourceRequestsResponse `pulumi:"resourceRequests"`
	//  The build result triggered by this build
	TriggeredBuildResult TriggeredBuildResultResponse `pulumi:"triggeredBuildResult"`
}

// Defaults sets the appropriate defaults for BuildPropertiesResponse
func (val *BuildPropertiesResponse) Defaults() *BuildPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ResourceRequests = tmp.ResourceRequests.Defaults()

	return &tmp
}

// Build resource properties payload
type BuildPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildPropertiesResponse)(nil)).Elem()
}

func (o BuildPropertiesResponseOutput) ToBuildPropertiesResponseOutput() BuildPropertiesResponseOutput {
	return o
}

func (o BuildPropertiesResponseOutput) ToBuildPropertiesResponseOutputWithContext(ctx context.Context) BuildPropertiesResponseOutput {
	return o
}

// The resource id of agent pool
func (o BuildPropertiesResponseOutput) AgentPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) *string { return v.AgentPool }).(pulumi.StringPtrOutput)
}

// The APMs for this build
func (o BuildPropertiesResponseOutput) Apms() ApmReferenceResponseArrayOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) []ApmReferenceResponse { return v.Apms }).(ApmReferenceResponseArrayOutput)
}

// The resource id of builder to build the source code
func (o BuildPropertiesResponseOutput) Builder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) *string { return v.Builder }).(pulumi.StringPtrOutput)
}

// The CA Certificates for this build
func (o BuildPropertiesResponseOutput) Certificates() CertificateReferenceResponseArrayOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) []CertificateReferenceResponse { return v.Certificates }).(CertificateReferenceResponseArrayOutput)
}

// The environment variables for this build
func (o BuildPropertiesResponseOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

// Provisioning state of the KPack build result
func (o BuildPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The relative path of source code
func (o BuildPropertiesResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// The customized build resource for this build
func (o BuildPropertiesResponseOutput) ResourceRequests() BuildResourceRequestsResponsePtrOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) *BuildResourceRequestsResponse { return v.ResourceRequests }).(BuildResourceRequestsResponsePtrOutput)
}

// The build result triggered by this build
func (o BuildPropertiesResponseOutput) TriggeredBuildResult() TriggeredBuildResultResponseOutput {
	return o.ApplyT(func(v BuildPropertiesResponse) TriggeredBuildResultResponse { return v.TriggeredBuildResult }).(TriggeredBuildResultResponseOutput)
}

// Resource request payload of Build Resource.
type BuildResourceRequests struct {
	// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
	// The default value is 1, this should not exceed build service agent pool cpu size.
	Cpu *string `pulumi:"cpu"`
	// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
	// The default value is 2Gi, this should not exceed build service agent pool memory size.
	Memory *string `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for BuildResourceRequests
func (val *BuildResourceRequests) Defaults() *BuildResourceRequests {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		cpu_ := "1"
		tmp.Cpu = &cpu_
	}
	if tmp.Memory == nil {
		memory_ := "2Gi"
		tmp.Memory = &memory_
	}
	return &tmp
}

// BuildResourceRequestsInput is an input type that accepts BuildResourceRequestsArgs and BuildResourceRequestsOutput values.
// You can construct a concrete instance of `BuildResourceRequestsInput` via:
//
//	BuildResourceRequestsArgs{...}
type BuildResourceRequestsInput interface {
	pulumi.Input

	ToBuildResourceRequestsOutput() BuildResourceRequestsOutput
	ToBuildResourceRequestsOutputWithContext(context.Context) BuildResourceRequestsOutput
}

// Resource request payload of Build Resource.
type BuildResourceRequestsArgs struct {
	// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
	// The default value is 1, this should not exceed build service agent pool cpu size.
	Cpu pulumi.StringPtrInput `pulumi:"cpu"`
	// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
	// The default value is 2Gi, this should not exceed build service agent pool memory size.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for BuildResourceRequestsArgs
func (val *BuildResourceRequestsArgs) Defaults() *BuildResourceRequestsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		tmp.Cpu = pulumi.StringPtr("1")
	}
	if tmp.Memory == nil {
		tmp.Memory = pulumi.StringPtr("2Gi")
	}
	return &tmp
}
func (BuildResourceRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildResourceRequests)(nil)).Elem()
}

func (i BuildResourceRequestsArgs) ToBuildResourceRequestsOutput() BuildResourceRequestsOutput {
	return i.ToBuildResourceRequestsOutputWithContext(context.Background())
}

func (i BuildResourceRequestsArgs) ToBuildResourceRequestsOutputWithContext(ctx context.Context) BuildResourceRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildResourceRequestsOutput)
}

func (i BuildResourceRequestsArgs) ToBuildResourceRequestsPtrOutput() BuildResourceRequestsPtrOutput {
	return i.ToBuildResourceRequestsPtrOutputWithContext(context.Background())
}

func (i BuildResourceRequestsArgs) ToBuildResourceRequestsPtrOutputWithContext(ctx context.Context) BuildResourceRequestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildResourceRequestsOutput).ToBuildResourceRequestsPtrOutputWithContext(ctx)
}

// BuildResourceRequestsPtrInput is an input type that accepts BuildResourceRequestsArgs, BuildResourceRequestsPtr and BuildResourceRequestsPtrOutput values.
// You can construct a concrete instance of `BuildResourceRequestsPtrInput` via:
//
//	        BuildResourceRequestsArgs{...}
//
//	or:
//
//	        nil
type BuildResourceRequestsPtrInput interface {
	pulumi.Input

	ToBuildResourceRequestsPtrOutput() BuildResourceRequestsPtrOutput
	ToBuildResourceRequestsPtrOutputWithContext(context.Context) BuildResourceRequestsPtrOutput
}

type buildResourceRequestsPtrType BuildResourceRequestsArgs

func BuildResourceRequestsPtr(v *BuildResourceRequestsArgs) BuildResourceRequestsPtrInput {
	return (*buildResourceRequestsPtrType)(v)
}

func (*buildResourceRequestsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildResourceRequests)(nil)).Elem()
}

func (i *buildResourceRequestsPtrType) ToBuildResourceRequestsPtrOutput() BuildResourceRequestsPtrOutput {
	return i.ToBuildResourceRequestsPtrOutputWithContext(context.Background())
}

func (i *buildResourceRequestsPtrType) ToBuildResourceRequestsPtrOutputWithContext(ctx context.Context) BuildResourceRequestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildResourceRequestsPtrOutput)
}

// Resource request payload of Build Resource.
type BuildResourceRequestsOutput struct{ *pulumi.OutputState }

func (BuildResourceRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildResourceRequests)(nil)).Elem()
}

func (o BuildResourceRequestsOutput) ToBuildResourceRequestsOutput() BuildResourceRequestsOutput {
	return o
}

func (o BuildResourceRequestsOutput) ToBuildResourceRequestsOutputWithContext(ctx context.Context) BuildResourceRequestsOutput {
	return o
}

func (o BuildResourceRequestsOutput) ToBuildResourceRequestsPtrOutput() BuildResourceRequestsPtrOutput {
	return o.ToBuildResourceRequestsPtrOutputWithContext(context.Background())
}

func (o BuildResourceRequestsOutput) ToBuildResourceRequestsPtrOutputWithContext(ctx context.Context) BuildResourceRequestsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildResourceRequests) *BuildResourceRequests {
		return &v
	}).(BuildResourceRequestsPtrOutput)
}

// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
// The default value is 1, this should not exceed build service agent pool cpu size.
func (o BuildResourceRequestsOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResourceRequests) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
// The default value is 2Gi, this should not exceed build service agent pool memory size.
func (o BuildResourceRequestsOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResourceRequests) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type BuildResourceRequestsPtrOutput struct{ *pulumi.OutputState }

func (BuildResourceRequestsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildResourceRequests)(nil)).Elem()
}

func (o BuildResourceRequestsPtrOutput) ToBuildResourceRequestsPtrOutput() BuildResourceRequestsPtrOutput {
	return o
}

func (o BuildResourceRequestsPtrOutput) ToBuildResourceRequestsPtrOutputWithContext(ctx context.Context) BuildResourceRequestsPtrOutput {
	return o
}

func (o BuildResourceRequestsPtrOutput) Elem() BuildResourceRequestsOutput {
	return o.ApplyT(func(v *BuildResourceRequests) BuildResourceRequests {
		if v != nil {
			return *v
		}
		var ret BuildResourceRequests
		return ret
	}).(BuildResourceRequestsOutput)
}

// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
// The default value is 1, this should not exceed build service agent pool cpu size.
func (o BuildResourceRequestsPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResourceRequests) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
// The default value is 2Gi, this should not exceed build service agent pool memory size.
func (o BuildResourceRequestsPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResourceRequests) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Resource request payload of Build Resource.
type BuildResourceRequestsResponse struct {
	// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
	// The default value is 1, this should not exceed build service agent pool cpu size.
	Cpu *string `pulumi:"cpu"`
	// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
	// The default value is 2Gi, this should not exceed build service agent pool memory size.
	Memory *string `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for BuildResourceRequestsResponse
func (val *BuildResourceRequestsResponse) Defaults() *BuildResourceRequestsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		cpu_ := "1"
		tmp.Cpu = &cpu_
	}
	if tmp.Memory == nil {
		memory_ := "2Gi"
		tmp.Memory = &memory_
	}
	return &tmp
}

// Resource request payload of Build Resource.
type BuildResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (BuildResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildResourceRequestsResponse)(nil)).Elem()
}

func (o BuildResourceRequestsResponseOutput) ToBuildResourceRequestsResponseOutput() BuildResourceRequestsResponseOutput {
	return o
}

func (o BuildResourceRequestsResponseOutput) ToBuildResourceRequestsResponseOutputWithContext(ctx context.Context) BuildResourceRequestsResponseOutput {
	return o
}

// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
// The default value is 1, this should not exceed build service agent pool cpu size.
func (o BuildResourceRequestsResponseOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResourceRequestsResponse) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
// The default value is 2Gi, this should not exceed build service agent pool memory size.
func (o BuildResourceRequestsResponseOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResourceRequestsResponse) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type BuildResourceRequestsResponsePtrOutput struct{ *pulumi.OutputState }

func (BuildResourceRequestsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildResourceRequestsResponse)(nil)).Elem()
}

func (o BuildResourceRequestsResponsePtrOutput) ToBuildResourceRequestsResponsePtrOutput() BuildResourceRequestsResponsePtrOutput {
	return o
}

func (o BuildResourceRequestsResponsePtrOutput) ToBuildResourceRequestsResponsePtrOutputWithContext(ctx context.Context) BuildResourceRequestsResponsePtrOutput {
	return o
}

func (o BuildResourceRequestsResponsePtrOutput) Elem() BuildResourceRequestsResponseOutput {
	return o.ApplyT(func(v *BuildResourceRequestsResponse) BuildResourceRequestsResponse {
		if v != nil {
			return *v
		}
		var ret BuildResourceRequestsResponse
		return ret
	}).(BuildResourceRequestsResponseOutput)
}

// Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.
// The default value is 1, this should not exceed build service agent pool cpu size.
func (o BuildResourceRequestsResponsePtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.
// The default value is 2Gi, this should not exceed build service agent pool memory size.
func (o BuildResourceRequestsResponsePtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Reference to a build result
type BuildResultUserSourceInfo struct {
	// Resource id of an existing succeeded build result under the same Spring instance.
	BuildResultId *string `pulumi:"buildResultId"`
	// Type of the source uploaded
	// Expected value is 'BuildResult'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// BuildResultUserSourceInfoInput is an input type that accepts BuildResultUserSourceInfoArgs and BuildResultUserSourceInfoOutput values.
// You can construct a concrete instance of `BuildResultUserSourceInfoInput` via:
//
//	BuildResultUserSourceInfoArgs{...}
type BuildResultUserSourceInfoInput interface {
	pulumi.Input

	ToBuildResultUserSourceInfoOutput() BuildResultUserSourceInfoOutput
	ToBuildResultUserSourceInfoOutputWithContext(context.Context) BuildResultUserSourceInfoOutput
}

// Reference to a build result
type BuildResultUserSourceInfoArgs struct {
	// Resource id of an existing succeeded build result under the same Spring instance.
	BuildResultId pulumi.StringPtrInput `pulumi:"buildResultId"`
	// Type of the source uploaded
	// Expected value is 'BuildResult'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BuildResultUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildResultUserSourceInfo)(nil)).Elem()
}

func (i BuildResultUserSourceInfoArgs) ToBuildResultUserSourceInfoOutput() BuildResultUserSourceInfoOutput {
	return i.ToBuildResultUserSourceInfoOutputWithContext(context.Background())
}

func (i BuildResultUserSourceInfoArgs) ToBuildResultUserSourceInfoOutputWithContext(ctx context.Context) BuildResultUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildResultUserSourceInfoOutput)
}

func (i BuildResultUserSourceInfoArgs) ToBuildResultUserSourceInfoPtrOutput() BuildResultUserSourceInfoPtrOutput {
	return i.ToBuildResultUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i BuildResultUserSourceInfoArgs) ToBuildResultUserSourceInfoPtrOutputWithContext(ctx context.Context) BuildResultUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildResultUserSourceInfoOutput).ToBuildResultUserSourceInfoPtrOutputWithContext(ctx)
}

// BuildResultUserSourceInfoPtrInput is an input type that accepts BuildResultUserSourceInfoArgs, BuildResultUserSourceInfoPtr and BuildResultUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `BuildResultUserSourceInfoPtrInput` via:
//
//	        BuildResultUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type BuildResultUserSourceInfoPtrInput interface {
	pulumi.Input

	ToBuildResultUserSourceInfoPtrOutput() BuildResultUserSourceInfoPtrOutput
	ToBuildResultUserSourceInfoPtrOutputWithContext(context.Context) BuildResultUserSourceInfoPtrOutput
}

type buildResultUserSourceInfoPtrType BuildResultUserSourceInfoArgs

func BuildResultUserSourceInfoPtr(v *BuildResultUserSourceInfoArgs) BuildResultUserSourceInfoPtrInput {
	return (*buildResultUserSourceInfoPtrType)(v)
}

func (*buildResultUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildResultUserSourceInfo)(nil)).Elem()
}

func (i *buildResultUserSourceInfoPtrType) ToBuildResultUserSourceInfoPtrOutput() BuildResultUserSourceInfoPtrOutput {
	return i.ToBuildResultUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *buildResultUserSourceInfoPtrType) ToBuildResultUserSourceInfoPtrOutputWithContext(ctx context.Context) BuildResultUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildResultUserSourceInfoPtrOutput)
}

// Reference to a build result
type BuildResultUserSourceInfoOutput struct{ *pulumi.OutputState }

func (BuildResultUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildResultUserSourceInfo)(nil)).Elem()
}

func (o BuildResultUserSourceInfoOutput) ToBuildResultUserSourceInfoOutput() BuildResultUserSourceInfoOutput {
	return o
}

func (o BuildResultUserSourceInfoOutput) ToBuildResultUserSourceInfoOutputWithContext(ctx context.Context) BuildResultUserSourceInfoOutput {
	return o
}

func (o BuildResultUserSourceInfoOutput) ToBuildResultUserSourceInfoPtrOutput() BuildResultUserSourceInfoPtrOutput {
	return o.ToBuildResultUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o BuildResultUserSourceInfoOutput) ToBuildResultUserSourceInfoPtrOutputWithContext(ctx context.Context) BuildResultUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildResultUserSourceInfo) *BuildResultUserSourceInfo {
		return &v
	}).(BuildResultUserSourceInfoPtrOutput)
}

// Resource id of an existing succeeded build result under the same Spring instance.
func (o BuildResultUserSourceInfoOutput) BuildResultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResultUserSourceInfo) *string { return v.BuildResultId }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'BuildResult'.
func (o BuildResultUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BuildResultUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o BuildResultUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResultUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BuildResultUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (BuildResultUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildResultUserSourceInfo)(nil)).Elem()
}

func (o BuildResultUserSourceInfoPtrOutput) ToBuildResultUserSourceInfoPtrOutput() BuildResultUserSourceInfoPtrOutput {
	return o
}

func (o BuildResultUserSourceInfoPtrOutput) ToBuildResultUserSourceInfoPtrOutputWithContext(ctx context.Context) BuildResultUserSourceInfoPtrOutput {
	return o
}

func (o BuildResultUserSourceInfoPtrOutput) Elem() BuildResultUserSourceInfoOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfo) BuildResultUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret BuildResultUserSourceInfo
		return ret
	}).(BuildResultUserSourceInfoOutput)
}

// Resource id of an existing succeeded build result under the same Spring instance.
func (o BuildResultUserSourceInfoPtrOutput) BuildResultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.BuildResultId
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'BuildResult'.
func (o BuildResultUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o BuildResultUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Reference to a build result
type BuildResultUserSourceInfoResponse struct {
	// Resource id of an existing succeeded build result under the same Spring instance.
	BuildResultId *string `pulumi:"buildResultId"`
	// Type of the source uploaded
	// Expected value is 'BuildResult'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Reference to a build result
type BuildResultUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (BuildResultUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildResultUserSourceInfoResponse)(nil)).Elem()
}

func (o BuildResultUserSourceInfoResponseOutput) ToBuildResultUserSourceInfoResponseOutput() BuildResultUserSourceInfoResponseOutput {
	return o
}

func (o BuildResultUserSourceInfoResponseOutput) ToBuildResultUserSourceInfoResponseOutputWithContext(ctx context.Context) BuildResultUserSourceInfoResponseOutput {
	return o
}

// Resource id of an existing succeeded build result under the same Spring instance.
func (o BuildResultUserSourceInfoResponseOutput) BuildResultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResultUserSourceInfoResponse) *string { return v.BuildResultId }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'BuildResult'.
func (o BuildResultUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BuildResultUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o BuildResultUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildResultUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BuildResultUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (BuildResultUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildResultUserSourceInfoResponse)(nil)).Elem()
}

func (o BuildResultUserSourceInfoResponsePtrOutput) ToBuildResultUserSourceInfoResponsePtrOutput() BuildResultUserSourceInfoResponsePtrOutput {
	return o
}

func (o BuildResultUserSourceInfoResponsePtrOutput) ToBuildResultUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) BuildResultUserSourceInfoResponsePtrOutput {
	return o
}

func (o BuildResultUserSourceInfoResponsePtrOutput) Elem() BuildResultUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfoResponse) BuildResultUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret BuildResultUserSourceInfoResponse
		return ret
	}).(BuildResultUserSourceInfoResponseOutput)
}

// Resource id of an existing succeeded build result under the same Spring instance.
func (o BuildResultUserSourceInfoResponsePtrOutput) BuildResultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.BuildResultId
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'BuildResult'.
func (o BuildResultUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o BuildResultUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildResultUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Build service agent pool properties
type BuildServiceAgentPoolProperties struct {
	// build service agent pool size properties
	PoolSize *BuildServiceAgentPoolSizeProperties `pulumi:"poolSize"`
}

// BuildServiceAgentPoolPropertiesInput is an input type that accepts BuildServiceAgentPoolPropertiesArgs and BuildServiceAgentPoolPropertiesOutput values.
// You can construct a concrete instance of `BuildServiceAgentPoolPropertiesInput` via:
//
//	BuildServiceAgentPoolPropertiesArgs{...}
type BuildServiceAgentPoolPropertiesInput interface {
	pulumi.Input

	ToBuildServiceAgentPoolPropertiesOutput() BuildServiceAgentPoolPropertiesOutput
	ToBuildServiceAgentPoolPropertiesOutputWithContext(context.Context) BuildServiceAgentPoolPropertiesOutput
}

// Build service agent pool properties
type BuildServiceAgentPoolPropertiesArgs struct {
	// build service agent pool size properties
	PoolSize BuildServiceAgentPoolSizePropertiesPtrInput `pulumi:"poolSize"`
}

func (BuildServiceAgentPoolPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildServiceAgentPoolProperties)(nil)).Elem()
}

func (i BuildServiceAgentPoolPropertiesArgs) ToBuildServiceAgentPoolPropertiesOutput() BuildServiceAgentPoolPropertiesOutput {
	return i.ToBuildServiceAgentPoolPropertiesOutputWithContext(context.Background())
}

func (i BuildServiceAgentPoolPropertiesArgs) ToBuildServiceAgentPoolPropertiesOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildServiceAgentPoolPropertiesOutput)
}

func (i BuildServiceAgentPoolPropertiesArgs) ToBuildServiceAgentPoolPropertiesPtrOutput() BuildServiceAgentPoolPropertiesPtrOutput {
	return i.ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(context.Background())
}

func (i BuildServiceAgentPoolPropertiesArgs) ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildServiceAgentPoolPropertiesOutput).ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(ctx)
}

// BuildServiceAgentPoolPropertiesPtrInput is an input type that accepts BuildServiceAgentPoolPropertiesArgs, BuildServiceAgentPoolPropertiesPtr and BuildServiceAgentPoolPropertiesPtrOutput values.
// You can construct a concrete instance of `BuildServiceAgentPoolPropertiesPtrInput` via:
//
//	        BuildServiceAgentPoolPropertiesArgs{...}
//
//	or:
//
//	        nil
type BuildServiceAgentPoolPropertiesPtrInput interface {
	pulumi.Input

	ToBuildServiceAgentPoolPropertiesPtrOutput() BuildServiceAgentPoolPropertiesPtrOutput
	ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(context.Context) BuildServiceAgentPoolPropertiesPtrOutput
}

type buildServiceAgentPoolPropertiesPtrType BuildServiceAgentPoolPropertiesArgs

func BuildServiceAgentPoolPropertiesPtr(v *BuildServiceAgentPoolPropertiesArgs) BuildServiceAgentPoolPropertiesPtrInput {
	return (*buildServiceAgentPoolPropertiesPtrType)(v)
}

func (*buildServiceAgentPoolPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildServiceAgentPoolProperties)(nil)).Elem()
}

func (i *buildServiceAgentPoolPropertiesPtrType) ToBuildServiceAgentPoolPropertiesPtrOutput() BuildServiceAgentPoolPropertiesPtrOutput {
	return i.ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(context.Background())
}

func (i *buildServiceAgentPoolPropertiesPtrType) ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildServiceAgentPoolPropertiesPtrOutput)
}

// Build service agent pool properties
type BuildServiceAgentPoolPropertiesOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildServiceAgentPoolProperties)(nil)).Elem()
}

func (o BuildServiceAgentPoolPropertiesOutput) ToBuildServiceAgentPoolPropertiesOutput() BuildServiceAgentPoolPropertiesOutput {
	return o
}

func (o BuildServiceAgentPoolPropertiesOutput) ToBuildServiceAgentPoolPropertiesOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesOutput {
	return o
}

func (o BuildServiceAgentPoolPropertiesOutput) ToBuildServiceAgentPoolPropertiesPtrOutput() BuildServiceAgentPoolPropertiesPtrOutput {
	return o.ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(context.Background())
}

func (o BuildServiceAgentPoolPropertiesOutput) ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildServiceAgentPoolProperties) *BuildServiceAgentPoolProperties {
		return &v
	}).(BuildServiceAgentPoolPropertiesPtrOutput)
}

// build service agent pool size properties
func (o BuildServiceAgentPoolPropertiesOutput) PoolSize() BuildServiceAgentPoolSizePropertiesPtrOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolProperties) *BuildServiceAgentPoolSizeProperties { return v.PoolSize }).(BuildServiceAgentPoolSizePropertiesPtrOutput)
}

type BuildServiceAgentPoolPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildServiceAgentPoolProperties)(nil)).Elem()
}

func (o BuildServiceAgentPoolPropertiesPtrOutput) ToBuildServiceAgentPoolPropertiesPtrOutput() BuildServiceAgentPoolPropertiesPtrOutput {
	return o
}

func (o BuildServiceAgentPoolPropertiesPtrOutput) ToBuildServiceAgentPoolPropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesPtrOutput {
	return o
}

func (o BuildServiceAgentPoolPropertiesPtrOutput) Elem() BuildServiceAgentPoolPropertiesOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolProperties) BuildServiceAgentPoolProperties {
		if v != nil {
			return *v
		}
		var ret BuildServiceAgentPoolProperties
		return ret
	}).(BuildServiceAgentPoolPropertiesOutput)
}

// build service agent pool size properties
func (o BuildServiceAgentPoolPropertiesPtrOutput) PoolSize() BuildServiceAgentPoolSizePropertiesPtrOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolProperties) *BuildServiceAgentPoolSizeProperties {
		if v == nil {
			return nil
		}
		return v.PoolSize
	}).(BuildServiceAgentPoolSizePropertiesPtrOutput)
}

// Build service agent pool properties
type BuildServiceAgentPoolPropertiesResponse struct {
	// build service agent pool size properties
	PoolSize *BuildServiceAgentPoolSizePropertiesResponse `pulumi:"poolSize"`
	// Provisioning state of the build service agent pool
	ProvisioningState string `pulumi:"provisioningState"`
}

// Build service agent pool properties
type BuildServiceAgentPoolPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildServiceAgentPoolPropertiesResponse)(nil)).Elem()
}

func (o BuildServiceAgentPoolPropertiesResponseOutput) ToBuildServiceAgentPoolPropertiesResponseOutput() BuildServiceAgentPoolPropertiesResponseOutput {
	return o
}

func (o BuildServiceAgentPoolPropertiesResponseOutput) ToBuildServiceAgentPoolPropertiesResponseOutputWithContext(ctx context.Context) BuildServiceAgentPoolPropertiesResponseOutput {
	return o
}

// build service agent pool size properties
func (o BuildServiceAgentPoolPropertiesResponseOutput) PoolSize() BuildServiceAgentPoolSizePropertiesResponsePtrOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolPropertiesResponse) *BuildServiceAgentPoolSizePropertiesResponse {
		return v.PoolSize
	}).(BuildServiceAgentPoolSizePropertiesResponsePtrOutput)
}

// Provisioning state of the build service agent pool
func (o BuildServiceAgentPoolPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Build service agent pool size properties
type BuildServiceAgentPoolSizeProperties struct {
	// The name of build service agent pool size
	Name *string `pulumi:"name"`
}

// BuildServiceAgentPoolSizePropertiesInput is an input type that accepts BuildServiceAgentPoolSizePropertiesArgs and BuildServiceAgentPoolSizePropertiesOutput values.
// You can construct a concrete instance of `BuildServiceAgentPoolSizePropertiesInput` via:
//
//	BuildServiceAgentPoolSizePropertiesArgs{...}
type BuildServiceAgentPoolSizePropertiesInput interface {
	pulumi.Input

	ToBuildServiceAgentPoolSizePropertiesOutput() BuildServiceAgentPoolSizePropertiesOutput
	ToBuildServiceAgentPoolSizePropertiesOutputWithContext(context.Context) BuildServiceAgentPoolSizePropertiesOutput
}

// Build service agent pool size properties
type BuildServiceAgentPoolSizePropertiesArgs struct {
	// The name of build service agent pool size
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildServiceAgentPoolSizePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildServiceAgentPoolSizeProperties)(nil)).Elem()
}

func (i BuildServiceAgentPoolSizePropertiesArgs) ToBuildServiceAgentPoolSizePropertiesOutput() BuildServiceAgentPoolSizePropertiesOutput {
	return i.ToBuildServiceAgentPoolSizePropertiesOutputWithContext(context.Background())
}

func (i BuildServiceAgentPoolSizePropertiesArgs) ToBuildServiceAgentPoolSizePropertiesOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildServiceAgentPoolSizePropertiesOutput)
}

func (i BuildServiceAgentPoolSizePropertiesArgs) ToBuildServiceAgentPoolSizePropertiesPtrOutput() BuildServiceAgentPoolSizePropertiesPtrOutput {
	return i.ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(context.Background())
}

func (i BuildServiceAgentPoolSizePropertiesArgs) ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildServiceAgentPoolSizePropertiesOutput).ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(ctx)
}

// BuildServiceAgentPoolSizePropertiesPtrInput is an input type that accepts BuildServiceAgentPoolSizePropertiesArgs, BuildServiceAgentPoolSizePropertiesPtr and BuildServiceAgentPoolSizePropertiesPtrOutput values.
// You can construct a concrete instance of `BuildServiceAgentPoolSizePropertiesPtrInput` via:
//
//	        BuildServiceAgentPoolSizePropertiesArgs{...}
//
//	or:
//
//	        nil
type BuildServiceAgentPoolSizePropertiesPtrInput interface {
	pulumi.Input

	ToBuildServiceAgentPoolSizePropertiesPtrOutput() BuildServiceAgentPoolSizePropertiesPtrOutput
	ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(context.Context) BuildServiceAgentPoolSizePropertiesPtrOutput
}

type buildServiceAgentPoolSizePropertiesPtrType BuildServiceAgentPoolSizePropertiesArgs

func BuildServiceAgentPoolSizePropertiesPtr(v *BuildServiceAgentPoolSizePropertiesArgs) BuildServiceAgentPoolSizePropertiesPtrInput {
	return (*buildServiceAgentPoolSizePropertiesPtrType)(v)
}

func (*buildServiceAgentPoolSizePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildServiceAgentPoolSizeProperties)(nil)).Elem()
}

func (i *buildServiceAgentPoolSizePropertiesPtrType) ToBuildServiceAgentPoolSizePropertiesPtrOutput() BuildServiceAgentPoolSizePropertiesPtrOutput {
	return i.ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(context.Background())
}

func (i *buildServiceAgentPoolSizePropertiesPtrType) ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildServiceAgentPoolSizePropertiesPtrOutput)
}

// Build service agent pool size properties
type BuildServiceAgentPoolSizePropertiesOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolSizePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildServiceAgentPoolSizeProperties)(nil)).Elem()
}

func (o BuildServiceAgentPoolSizePropertiesOutput) ToBuildServiceAgentPoolSizePropertiesOutput() BuildServiceAgentPoolSizePropertiesOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesOutput) ToBuildServiceAgentPoolSizePropertiesOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesOutput) ToBuildServiceAgentPoolSizePropertiesPtrOutput() BuildServiceAgentPoolSizePropertiesPtrOutput {
	return o.ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(context.Background())
}

func (o BuildServiceAgentPoolSizePropertiesOutput) ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildServiceAgentPoolSizeProperties) *BuildServiceAgentPoolSizeProperties {
		return &v
	}).(BuildServiceAgentPoolSizePropertiesPtrOutput)
}

// The name of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolSizeProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildServiceAgentPoolSizePropertiesPtrOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolSizePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildServiceAgentPoolSizeProperties)(nil)).Elem()
}

func (o BuildServiceAgentPoolSizePropertiesPtrOutput) ToBuildServiceAgentPoolSizePropertiesPtrOutput() BuildServiceAgentPoolSizePropertiesPtrOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesPtrOutput) ToBuildServiceAgentPoolSizePropertiesPtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesPtrOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesPtrOutput) Elem() BuildServiceAgentPoolSizePropertiesOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolSizeProperties) BuildServiceAgentPoolSizeProperties {
		if v != nil {
			return *v
		}
		var ret BuildServiceAgentPoolSizeProperties
		return ret
	}).(BuildServiceAgentPoolSizePropertiesOutput)
}

// The name of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolSizeProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Build service agent pool size properties
type BuildServiceAgentPoolSizePropertiesResponse struct {
	// The cpu property of build service agent pool size
	Cpu string `pulumi:"cpu"`
	// The memory property of build service agent pool size
	Memory string `pulumi:"memory"`
	// The name of build service agent pool size
	Name *string `pulumi:"name"`
}

// Build service agent pool size properties
type BuildServiceAgentPoolSizePropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolSizePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildServiceAgentPoolSizePropertiesResponse)(nil)).Elem()
}

func (o BuildServiceAgentPoolSizePropertiesResponseOutput) ToBuildServiceAgentPoolSizePropertiesResponseOutput() BuildServiceAgentPoolSizePropertiesResponseOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesResponseOutput) ToBuildServiceAgentPoolSizePropertiesResponseOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesResponseOutput {
	return o
}

// The cpu property of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolSizePropertiesResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// The memory property of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolSizePropertiesResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// The name of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildServiceAgentPoolSizePropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildServiceAgentPoolSizePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BuildServiceAgentPoolSizePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildServiceAgentPoolSizePropertiesResponse)(nil)).Elem()
}

func (o BuildServiceAgentPoolSizePropertiesResponsePtrOutput) ToBuildServiceAgentPoolSizePropertiesResponsePtrOutput() BuildServiceAgentPoolSizePropertiesResponsePtrOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesResponsePtrOutput) ToBuildServiceAgentPoolSizePropertiesResponsePtrOutputWithContext(ctx context.Context) BuildServiceAgentPoolSizePropertiesResponsePtrOutput {
	return o
}

func (o BuildServiceAgentPoolSizePropertiesResponsePtrOutput) Elem() BuildServiceAgentPoolSizePropertiesResponseOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolSizePropertiesResponse) BuildServiceAgentPoolSizePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret BuildServiceAgentPoolSizePropertiesResponse
		return ret
	}).(BuildServiceAgentPoolSizePropertiesResponseOutput)
}

// The cpu property of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesResponsePtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolSizePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(pulumi.StringPtrOutput)
}

// The memory property of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesResponsePtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolSizePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(pulumi.StringPtrOutput)
}

// The name of build service agent pool size
func (o BuildServiceAgentPoolSizePropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildServiceAgentPoolSizePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// KPack Builder properties payload
type BuilderProperties struct {
	// Builder buildpack groups.
	BuildpackGroups []BuildpacksGroupProperties `pulumi:"buildpackGroups"`
	// Builder cluster stack property.
	Stack *StackProperties `pulumi:"stack"`
}

// BuilderPropertiesInput is an input type that accepts BuilderPropertiesArgs and BuilderPropertiesOutput values.
// You can construct a concrete instance of `BuilderPropertiesInput` via:
//
//	BuilderPropertiesArgs{...}
type BuilderPropertiesInput interface {
	pulumi.Input

	ToBuilderPropertiesOutput() BuilderPropertiesOutput
	ToBuilderPropertiesOutputWithContext(context.Context) BuilderPropertiesOutput
}

// KPack Builder properties payload
type BuilderPropertiesArgs struct {
	// Builder buildpack groups.
	BuildpackGroups BuildpacksGroupPropertiesArrayInput `pulumi:"buildpackGroups"`
	// Builder cluster stack property.
	Stack StackPropertiesPtrInput `pulumi:"stack"`
}

func (BuilderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuilderProperties)(nil)).Elem()
}

func (i BuilderPropertiesArgs) ToBuilderPropertiesOutput() BuilderPropertiesOutput {
	return i.ToBuilderPropertiesOutputWithContext(context.Background())
}

func (i BuilderPropertiesArgs) ToBuilderPropertiesOutputWithContext(ctx context.Context) BuilderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuilderPropertiesOutput)
}

func (i BuilderPropertiesArgs) ToBuilderPropertiesPtrOutput() BuilderPropertiesPtrOutput {
	return i.ToBuilderPropertiesPtrOutputWithContext(context.Background())
}

func (i BuilderPropertiesArgs) ToBuilderPropertiesPtrOutputWithContext(ctx context.Context) BuilderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuilderPropertiesOutput).ToBuilderPropertiesPtrOutputWithContext(ctx)
}

// BuilderPropertiesPtrInput is an input type that accepts BuilderPropertiesArgs, BuilderPropertiesPtr and BuilderPropertiesPtrOutput values.
// You can construct a concrete instance of `BuilderPropertiesPtrInput` via:
//
//	        BuilderPropertiesArgs{...}
//
//	or:
//
//	        nil
type BuilderPropertiesPtrInput interface {
	pulumi.Input

	ToBuilderPropertiesPtrOutput() BuilderPropertiesPtrOutput
	ToBuilderPropertiesPtrOutputWithContext(context.Context) BuilderPropertiesPtrOutput
}

type builderPropertiesPtrType BuilderPropertiesArgs

func BuilderPropertiesPtr(v *BuilderPropertiesArgs) BuilderPropertiesPtrInput {
	return (*builderPropertiesPtrType)(v)
}

func (*builderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuilderProperties)(nil)).Elem()
}

func (i *builderPropertiesPtrType) ToBuilderPropertiesPtrOutput() BuilderPropertiesPtrOutput {
	return i.ToBuilderPropertiesPtrOutputWithContext(context.Background())
}

func (i *builderPropertiesPtrType) ToBuilderPropertiesPtrOutputWithContext(ctx context.Context) BuilderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuilderPropertiesPtrOutput)
}

// KPack Builder properties payload
type BuilderPropertiesOutput struct{ *pulumi.OutputState }

func (BuilderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuilderProperties)(nil)).Elem()
}

func (o BuilderPropertiesOutput) ToBuilderPropertiesOutput() BuilderPropertiesOutput {
	return o
}

func (o BuilderPropertiesOutput) ToBuilderPropertiesOutputWithContext(ctx context.Context) BuilderPropertiesOutput {
	return o
}

func (o BuilderPropertiesOutput) ToBuilderPropertiesPtrOutput() BuilderPropertiesPtrOutput {
	return o.ToBuilderPropertiesPtrOutputWithContext(context.Background())
}

func (o BuilderPropertiesOutput) ToBuilderPropertiesPtrOutputWithContext(ctx context.Context) BuilderPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuilderProperties) *BuilderProperties {
		return &v
	}).(BuilderPropertiesPtrOutput)
}

// Builder buildpack groups.
func (o BuilderPropertiesOutput) BuildpackGroups() BuildpacksGroupPropertiesArrayOutput {
	return o.ApplyT(func(v BuilderProperties) []BuildpacksGroupProperties { return v.BuildpackGroups }).(BuildpacksGroupPropertiesArrayOutput)
}

// Builder cluster stack property.
func (o BuilderPropertiesOutput) Stack() StackPropertiesPtrOutput {
	return o.ApplyT(func(v BuilderProperties) *StackProperties { return v.Stack }).(StackPropertiesPtrOutput)
}

type BuilderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BuilderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuilderProperties)(nil)).Elem()
}

func (o BuilderPropertiesPtrOutput) ToBuilderPropertiesPtrOutput() BuilderPropertiesPtrOutput {
	return o
}

func (o BuilderPropertiesPtrOutput) ToBuilderPropertiesPtrOutputWithContext(ctx context.Context) BuilderPropertiesPtrOutput {
	return o
}

func (o BuilderPropertiesPtrOutput) Elem() BuilderPropertiesOutput {
	return o.ApplyT(func(v *BuilderProperties) BuilderProperties {
		if v != nil {
			return *v
		}
		var ret BuilderProperties
		return ret
	}).(BuilderPropertiesOutput)
}

// Builder buildpack groups.
func (o BuilderPropertiesPtrOutput) BuildpackGroups() BuildpacksGroupPropertiesArrayOutput {
	return o.ApplyT(func(v *BuilderProperties) []BuildpacksGroupProperties {
		if v == nil {
			return nil
		}
		return v.BuildpackGroups
	}).(BuildpacksGroupPropertiesArrayOutput)
}

// Builder cluster stack property.
func (o BuilderPropertiesPtrOutput) Stack() StackPropertiesPtrOutput {
	return o.ApplyT(func(v *BuilderProperties) *StackProperties {
		if v == nil {
			return nil
		}
		return v.Stack
	}).(StackPropertiesPtrOutput)
}

// KPack Builder properties payload
type BuilderPropertiesResponse struct {
	// Builder buildpack groups.
	BuildpackGroups []BuildpacksGroupPropertiesResponse `pulumi:"buildpackGroups"`
	// Builder provision status.
	ProvisioningState string `pulumi:"provisioningState"`
	// Builder cluster stack property.
	Stack *StackPropertiesResponse `pulumi:"stack"`
}

// KPack Builder properties payload
type BuilderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuilderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuilderPropertiesResponse)(nil)).Elem()
}

func (o BuilderPropertiesResponseOutput) ToBuilderPropertiesResponseOutput() BuilderPropertiesResponseOutput {
	return o
}

func (o BuilderPropertiesResponseOutput) ToBuilderPropertiesResponseOutputWithContext(ctx context.Context) BuilderPropertiesResponseOutput {
	return o
}

// Builder buildpack groups.
func (o BuilderPropertiesResponseOutput) BuildpackGroups() BuildpacksGroupPropertiesResponseArrayOutput {
	return o.ApplyT(func(v BuilderPropertiesResponse) []BuildpacksGroupPropertiesResponse { return v.BuildpackGroups }).(BuildpacksGroupPropertiesResponseArrayOutput)
}

// Builder provision status.
func (o BuilderPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BuilderPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Builder cluster stack property.
func (o BuilderPropertiesResponseOutput) Stack() StackPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BuilderPropertiesResponse) *StackPropertiesResponse { return v.Stack }).(StackPropertiesResponsePtrOutput)
}

// Buildpack Binding Launch Properties
type BuildpackBindingLaunchProperties struct {
	// Non-sensitive properties for launchProperties
	Properties map[string]string `pulumi:"properties"`
	// Sensitive properties for launchProperties
	Secrets map[string]string `pulumi:"secrets"`
}

// BuildpackBindingLaunchPropertiesInput is an input type that accepts BuildpackBindingLaunchPropertiesArgs and BuildpackBindingLaunchPropertiesOutput values.
// You can construct a concrete instance of `BuildpackBindingLaunchPropertiesInput` via:
//
//	BuildpackBindingLaunchPropertiesArgs{...}
type BuildpackBindingLaunchPropertiesInput interface {
	pulumi.Input

	ToBuildpackBindingLaunchPropertiesOutput() BuildpackBindingLaunchPropertiesOutput
	ToBuildpackBindingLaunchPropertiesOutputWithContext(context.Context) BuildpackBindingLaunchPropertiesOutput
}

// Buildpack Binding Launch Properties
type BuildpackBindingLaunchPropertiesArgs struct {
	// Non-sensitive properties for launchProperties
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Sensitive properties for launchProperties
	Secrets pulumi.StringMapInput `pulumi:"secrets"`
}

func (BuildpackBindingLaunchPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackBindingLaunchProperties)(nil)).Elem()
}

func (i BuildpackBindingLaunchPropertiesArgs) ToBuildpackBindingLaunchPropertiesOutput() BuildpackBindingLaunchPropertiesOutput {
	return i.ToBuildpackBindingLaunchPropertiesOutputWithContext(context.Background())
}

func (i BuildpackBindingLaunchPropertiesArgs) ToBuildpackBindingLaunchPropertiesOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackBindingLaunchPropertiesOutput)
}

func (i BuildpackBindingLaunchPropertiesArgs) ToBuildpackBindingLaunchPropertiesPtrOutput() BuildpackBindingLaunchPropertiesPtrOutput {
	return i.ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(context.Background())
}

func (i BuildpackBindingLaunchPropertiesArgs) ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackBindingLaunchPropertiesOutput).ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(ctx)
}

// BuildpackBindingLaunchPropertiesPtrInput is an input type that accepts BuildpackBindingLaunchPropertiesArgs, BuildpackBindingLaunchPropertiesPtr and BuildpackBindingLaunchPropertiesPtrOutput values.
// You can construct a concrete instance of `BuildpackBindingLaunchPropertiesPtrInput` via:
//
//	        BuildpackBindingLaunchPropertiesArgs{...}
//
//	or:
//
//	        nil
type BuildpackBindingLaunchPropertiesPtrInput interface {
	pulumi.Input

	ToBuildpackBindingLaunchPropertiesPtrOutput() BuildpackBindingLaunchPropertiesPtrOutput
	ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(context.Context) BuildpackBindingLaunchPropertiesPtrOutput
}

type buildpackBindingLaunchPropertiesPtrType BuildpackBindingLaunchPropertiesArgs

func BuildpackBindingLaunchPropertiesPtr(v *BuildpackBindingLaunchPropertiesArgs) BuildpackBindingLaunchPropertiesPtrInput {
	return (*buildpackBindingLaunchPropertiesPtrType)(v)
}

func (*buildpackBindingLaunchPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildpackBindingLaunchProperties)(nil)).Elem()
}

func (i *buildpackBindingLaunchPropertiesPtrType) ToBuildpackBindingLaunchPropertiesPtrOutput() BuildpackBindingLaunchPropertiesPtrOutput {
	return i.ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(context.Background())
}

func (i *buildpackBindingLaunchPropertiesPtrType) ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackBindingLaunchPropertiesPtrOutput)
}

// Buildpack Binding Launch Properties
type BuildpackBindingLaunchPropertiesOutput struct{ *pulumi.OutputState }

func (BuildpackBindingLaunchPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackBindingLaunchProperties)(nil)).Elem()
}

func (o BuildpackBindingLaunchPropertiesOutput) ToBuildpackBindingLaunchPropertiesOutput() BuildpackBindingLaunchPropertiesOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesOutput) ToBuildpackBindingLaunchPropertiesOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesOutput) ToBuildpackBindingLaunchPropertiesPtrOutput() BuildpackBindingLaunchPropertiesPtrOutput {
	return o.ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(context.Background())
}

func (o BuildpackBindingLaunchPropertiesOutput) ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildpackBindingLaunchProperties) *BuildpackBindingLaunchProperties {
		return &v
	}).(BuildpackBindingLaunchPropertiesPtrOutput)
}

// Non-sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildpackBindingLaunchProperties) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildpackBindingLaunchProperties) map[string]string { return v.Secrets }).(pulumi.StringMapOutput)
}

type BuildpackBindingLaunchPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BuildpackBindingLaunchPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildpackBindingLaunchProperties)(nil)).Elem()
}

func (o BuildpackBindingLaunchPropertiesPtrOutput) ToBuildpackBindingLaunchPropertiesPtrOutput() BuildpackBindingLaunchPropertiesPtrOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesPtrOutput) ToBuildpackBindingLaunchPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesPtrOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesPtrOutput) Elem() BuildpackBindingLaunchPropertiesOutput {
	return o.ApplyT(func(v *BuildpackBindingLaunchProperties) BuildpackBindingLaunchProperties {
		if v != nil {
			return *v
		}
		var ret BuildpackBindingLaunchProperties
		return ret
	}).(BuildpackBindingLaunchPropertiesOutput)
}

// Non-sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildpackBindingLaunchProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesPtrOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildpackBindingLaunchProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(pulumi.StringMapOutput)
}

// Buildpack Binding Launch Properties
type BuildpackBindingLaunchPropertiesResponse struct {
	// Non-sensitive properties for launchProperties
	Properties map[string]string `pulumi:"properties"`
	// Sensitive properties for launchProperties
	Secrets map[string]string `pulumi:"secrets"`
}

// Buildpack Binding Launch Properties
type BuildpackBindingLaunchPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildpackBindingLaunchPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackBindingLaunchPropertiesResponse)(nil)).Elem()
}

func (o BuildpackBindingLaunchPropertiesResponseOutput) ToBuildpackBindingLaunchPropertiesResponseOutput() BuildpackBindingLaunchPropertiesResponseOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesResponseOutput) ToBuildpackBindingLaunchPropertiesResponseOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesResponseOutput {
	return o
}

// Non-sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildpackBindingLaunchPropertiesResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesResponseOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildpackBindingLaunchPropertiesResponse) map[string]string { return v.Secrets }).(pulumi.StringMapOutput)
}

type BuildpackBindingLaunchPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BuildpackBindingLaunchPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildpackBindingLaunchPropertiesResponse)(nil)).Elem()
}

func (o BuildpackBindingLaunchPropertiesResponsePtrOutput) ToBuildpackBindingLaunchPropertiesResponsePtrOutput() BuildpackBindingLaunchPropertiesResponsePtrOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesResponsePtrOutput) ToBuildpackBindingLaunchPropertiesResponsePtrOutputWithContext(ctx context.Context) BuildpackBindingLaunchPropertiesResponsePtrOutput {
	return o
}

func (o BuildpackBindingLaunchPropertiesResponsePtrOutput) Elem() BuildpackBindingLaunchPropertiesResponseOutput {
	return o.ApplyT(func(v *BuildpackBindingLaunchPropertiesResponse) BuildpackBindingLaunchPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret BuildpackBindingLaunchPropertiesResponse
		return ret
	}).(BuildpackBindingLaunchPropertiesResponseOutput)
}

// Non-sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildpackBindingLaunchPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Sensitive properties for launchProperties
func (o BuildpackBindingLaunchPropertiesResponsePtrOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildpackBindingLaunchPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(pulumi.StringMapOutput)
}

// Properties of a buildpack binding
type BuildpackBindingProperties struct {
	// Buildpack Binding Type
	BindingType *string `pulumi:"bindingType"`
	// The object describes the buildpack binding launch properties
	LaunchProperties *BuildpackBindingLaunchProperties `pulumi:"launchProperties"`
}

// BuildpackBindingPropertiesInput is an input type that accepts BuildpackBindingPropertiesArgs and BuildpackBindingPropertiesOutput values.
// You can construct a concrete instance of `BuildpackBindingPropertiesInput` via:
//
//	BuildpackBindingPropertiesArgs{...}
type BuildpackBindingPropertiesInput interface {
	pulumi.Input

	ToBuildpackBindingPropertiesOutput() BuildpackBindingPropertiesOutput
	ToBuildpackBindingPropertiesOutputWithContext(context.Context) BuildpackBindingPropertiesOutput
}

// Properties of a buildpack binding
type BuildpackBindingPropertiesArgs struct {
	// Buildpack Binding Type
	BindingType pulumi.StringPtrInput `pulumi:"bindingType"`
	// The object describes the buildpack binding launch properties
	LaunchProperties BuildpackBindingLaunchPropertiesPtrInput `pulumi:"launchProperties"`
}

func (BuildpackBindingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackBindingProperties)(nil)).Elem()
}

func (i BuildpackBindingPropertiesArgs) ToBuildpackBindingPropertiesOutput() BuildpackBindingPropertiesOutput {
	return i.ToBuildpackBindingPropertiesOutputWithContext(context.Background())
}

func (i BuildpackBindingPropertiesArgs) ToBuildpackBindingPropertiesOutputWithContext(ctx context.Context) BuildpackBindingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackBindingPropertiesOutput)
}

func (i BuildpackBindingPropertiesArgs) ToBuildpackBindingPropertiesPtrOutput() BuildpackBindingPropertiesPtrOutput {
	return i.ToBuildpackBindingPropertiesPtrOutputWithContext(context.Background())
}

func (i BuildpackBindingPropertiesArgs) ToBuildpackBindingPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackBindingPropertiesOutput).ToBuildpackBindingPropertiesPtrOutputWithContext(ctx)
}

// BuildpackBindingPropertiesPtrInput is an input type that accepts BuildpackBindingPropertiesArgs, BuildpackBindingPropertiesPtr and BuildpackBindingPropertiesPtrOutput values.
// You can construct a concrete instance of `BuildpackBindingPropertiesPtrInput` via:
//
//	        BuildpackBindingPropertiesArgs{...}
//
//	or:
//
//	        nil
type BuildpackBindingPropertiesPtrInput interface {
	pulumi.Input

	ToBuildpackBindingPropertiesPtrOutput() BuildpackBindingPropertiesPtrOutput
	ToBuildpackBindingPropertiesPtrOutputWithContext(context.Context) BuildpackBindingPropertiesPtrOutput
}

type buildpackBindingPropertiesPtrType BuildpackBindingPropertiesArgs

func BuildpackBindingPropertiesPtr(v *BuildpackBindingPropertiesArgs) BuildpackBindingPropertiesPtrInput {
	return (*buildpackBindingPropertiesPtrType)(v)
}

func (*buildpackBindingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildpackBindingProperties)(nil)).Elem()
}

func (i *buildpackBindingPropertiesPtrType) ToBuildpackBindingPropertiesPtrOutput() BuildpackBindingPropertiesPtrOutput {
	return i.ToBuildpackBindingPropertiesPtrOutputWithContext(context.Background())
}

func (i *buildpackBindingPropertiesPtrType) ToBuildpackBindingPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackBindingPropertiesPtrOutput)
}

// Properties of a buildpack binding
type BuildpackBindingPropertiesOutput struct{ *pulumi.OutputState }

func (BuildpackBindingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackBindingProperties)(nil)).Elem()
}

func (o BuildpackBindingPropertiesOutput) ToBuildpackBindingPropertiesOutput() BuildpackBindingPropertiesOutput {
	return o
}

func (o BuildpackBindingPropertiesOutput) ToBuildpackBindingPropertiesOutputWithContext(ctx context.Context) BuildpackBindingPropertiesOutput {
	return o
}

func (o BuildpackBindingPropertiesOutput) ToBuildpackBindingPropertiesPtrOutput() BuildpackBindingPropertiesPtrOutput {
	return o.ToBuildpackBindingPropertiesPtrOutputWithContext(context.Background())
}

func (o BuildpackBindingPropertiesOutput) ToBuildpackBindingPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildpackBindingProperties) *BuildpackBindingProperties {
		return &v
	}).(BuildpackBindingPropertiesPtrOutput)
}

// Buildpack Binding Type
func (o BuildpackBindingPropertiesOutput) BindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildpackBindingProperties) *string { return v.BindingType }).(pulumi.StringPtrOutput)
}

// The object describes the buildpack binding launch properties
func (o BuildpackBindingPropertiesOutput) LaunchProperties() BuildpackBindingLaunchPropertiesPtrOutput {
	return o.ApplyT(func(v BuildpackBindingProperties) *BuildpackBindingLaunchProperties { return v.LaunchProperties }).(BuildpackBindingLaunchPropertiesPtrOutput)
}

type BuildpackBindingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BuildpackBindingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildpackBindingProperties)(nil)).Elem()
}

func (o BuildpackBindingPropertiesPtrOutput) ToBuildpackBindingPropertiesPtrOutput() BuildpackBindingPropertiesPtrOutput {
	return o
}

func (o BuildpackBindingPropertiesPtrOutput) ToBuildpackBindingPropertiesPtrOutputWithContext(ctx context.Context) BuildpackBindingPropertiesPtrOutput {
	return o
}

func (o BuildpackBindingPropertiesPtrOutput) Elem() BuildpackBindingPropertiesOutput {
	return o.ApplyT(func(v *BuildpackBindingProperties) BuildpackBindingProperties {
		if v != nil {
			return *v
		}
		var ret BuildpackBindingProperties
		return ret
	}).(BuildpackBindingPropertiesOutput)
}

// Buildpack Binding Type
func (o BuildpackBindingPropertiesPtrOutput) BindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildpackBindingProperties) *string {
		if v == nil {
			return nil
		}
		return v.BindingType
	}).(pulumi.StringPtrOutput)
}

// The object describes the buildpack binding launch properties
func (o BuildpackBindingPropertiesPtrOutput) LaunchProperties() BuildpackBindingLaunchPropertiesPtrOutput {
	return o.ApplyT(func(v *BuildpackBindingProperties) *BuildpackBindingLaunchProperties {
		if v == nil {
			return nil
		}
		return v.LaunchProperties
	}).(BuildpackBindingLaunchPropertiesPtrOutput)
}

// Properties of a buildpack binding
type BuildpackBindingPropertiesResponse struct {
	// Buildpack Binding Type
	BindingType *string `pulumi:"bindingType"`
	// The object describes the buildpack binding launch properties
	LaunchProperties *BuildpackBindingLaunchPropertiesResponse `pulumi:"launchProperties"`
	// State of the Buildpack Binding.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of a buildpack binding
type BuildpackBindingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildpackBindingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackBindingPropertiesResponse)(nil)).Elem()
}

func (o BuildpackBindingPropertiesResponseOutput) ToBuildpackBindingPropertiesResponseOutput() BuildpackBindingPropertiesResponseOutput {
	return o
}

func (o BuildpackBindingPropertiesResponseOutput) ToBuildpackBindingPropertiesResponseOutputWithContext(ctx context.Context) BuildpackBindingPropertiesResponseOutput {
	return o
}

// Buildpack Binding Type
func (o BuildpackBindingPropertiesResponseOutput) BindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildpackBindingPropertiesResponse) *string { return v.BindingType }).(pulumi.StringPtrOutput)
}

// The object describes the buildpack binding launch properties
func (o BuildpackBindingPropertiesResponseOutput) LaunchProperties() BuildpackBindingLaunchPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BuildpackBindingPropertiesResponse) *BuildpackBindingLaunchPropertiesResponse {
		return v.LaunchProperties
	}).(BuildpackBindingLaunchPropertiesResponsePtrOutput)
}

// State of the Buildpack Binding.
func (o BuildpackBindingPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BuildpackBindingPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Buildpack properties payload
type BuildpackProperties struct {
	// Id of the buildpack
	Id *string `pulumi:"id"`
}

// BuildpackPropertiesInput is an input type that accepts BuildpackPropertiesArgs and BuildpackPropertiesOutput values.
// You can construct a concrete instance of `BuildpackPropertiesInput` via:
//
//	BuildpackPropertiesArgs{...}
type BuildpackPropertiesInput interface {
	pulumi.Input

	ToBuildpackPropertiesOutput() BuildpackPropertiesOutput
	ToBuildpackPropertiesOutputWithContext(context.Context) BuildpackPropertiesOutput
}

// Buildpack properties payload
type BuildpackPropertiesArgs struct {
	// Id of the buildpack
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (BuildpackPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackProperties)(nil)).Elem()
}

func (i BuildpackPropertiesArgs) ToBuildpackPropertiesOutput() BuildpackPropertiesOutput {
	return i.ToBuildpackPropertiesOutputWithContext(context.Background())
}

func (i BuildpackPropertiesArgs) ToBuildpackPropertiesOutputWithContext(ctx context.Context) BuildpackPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackPropertiesOutput)
}

// BuildpackPropertiesArrayInput is an input type that accepts BuildpackPropertiesArray and BuildpackPropertiesArrayOutput values.
// You can construct a concrete instance of `BuildpackPropertiesArrayInput` via:
//
//	BuildpackPropertiesArray{ BuildpackPropertiesArgs{...} }
type BuildpackPropertiesArrayInput interface {
	pulumi.Input

	ToBuildpackPropertiesArrayOutput() BuildpackPropertiesArrayOutput
	ToBuildpackPropertiesArrayOutputWithContext(context.Context) BuildpackPropertiesArrayOutput
}

type BuildpackPropertiesArray []BuildpackPropertiesInput

func (BuildpackPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildpackProperties)(nil)).Elem()
}

func (i BuildpackPropertiesArray) ToBuildpackPropertiesArrayOutput() BuildpackPropertiesArrayOutput {
	return i.ToBuildpackPropertiesArrayOutputWithContext(context.Background())
}

func (i BuildpackPropertiesArray) ToBuildpackPropertiesArrayOutputWithContext(ctx context.Context) BuildpackPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpackPropertiesArrayOutput)
}

// Buildpack properties payload
type BuildpackPropertiesOutput struct{ *pulumi.OutputState }

func (BuildpackPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackProperties)(nil)).Elem()
}

func (o BuildpackPropertiesOutput) ToBuildpackPropertiesOutput() BuildpackPropertiesOutput {
	return o
}

func (o BuildpackPropertiesOutput) ToBuildpackPropertiesOutputWithContext(ctx context.Context) BuildpackPropertiesOutput {
	return o
}

// Id of the buildpack
func (o BuildpackPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildpackProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type BuildpackPropertiesArrayOutput struct{ *pulumi.OutputState }

func (BuildpackPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildpackProperties)(nil)).Elem()
}

func (o BuildpackPropertiesArrayOutput) ToBuildpackPropertiesArrayOutput() BuildpackPropertiesArrayOutput {
	return o
}

func (o BuildpackPropertiesArrayOutput) ToBuildpackPropertiesArrayOutputWithContext(ctx context.Context) BuildpackPropertiesArrayOutput {
	return o
}

func (o BuildpackPropertiesArrayOutput) Index(i pulumi.IntInput) BuildpackPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildpackProperties {
		return vs[0].([]BuildpackProperties)[vs[1].(int)]
	}).(BuildpackPropertiesOutput)
}

// Buildpack properties payload
type BuildpackPropertiesResponse struct {
	// Id of the buildpack
	Id *string `pulumi:"id"`
	// Version of the buildpack
	Version string `pulumi:"version"`
}

// Buildpack properties payload
type BuildpackPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildpackPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpackPropertiesResponse)(nil)).Elem()
}

func (o BuildpackPropertiesResponseOutput) ToBuildpackPropertiesResponseOutput() BuildpackPropertiesResponseOutput {
	return o
}

func (o BuildpackPropertiesResponseOutput) ToBuildpackPropertiesResponseOutputWithContext(ctx context.Context) BuildpackPropertiesResponseOutput {
	return o
}

// Id of the buildpack
func (o BuildpackPropertiesResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildpackPropertiesResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Version of the buildpack
func (o BuildpackPropertiesResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v BuildpackPropertiesResponse) string { return v.Version }).(pulumi.StringOutput)
}

type BuildpackPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (BuildpackPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildpackPropertiesResponse)(nil)).Elem()
}

func (o BuildpackPropertiesResponseArrayOutput) ToBuildpackPropertiesResponseArrayOutput() BuildpackPropertiesResponseArrayOutput {
	return o
}

func (o BuildpackPropertiesResponseArrayOutput) ToBuildpackPropertiesResponseArrayOutputWithContext(ctx context.Context) BuildpackPropertiesResponseArrayOutput {
	return o
}

func (o BuildpackPropertiesResponseArrayOutput) Index(i pulumi.IntInput) BuildpackPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildpackPropertiesResponse {
		return vs[0].([]BuildpackPropertiesResponse)[vs[1].(int)]
	}).(BuildpackPropertiesResponseOutput)
}

// Buildpack group properties of the Builder
type BuildpacksGroupProperties struct {
	// Buildpacks in the buildpack group
	Buildpacks []BuildpackProperties `pulumi:"buildpacks"`
	// Buildpack group name
	Name *string `pulumi:"name"`
}

// BuildpacksGroupPropertiesInput is an input type that accepts BuildpacksGroupPropertiesArgs and BuildpacksGroupPropertiesOutput values.
// You can construct a concrete instance of `BuildpacksGroupPropertiesInput` via:
//
//	BuildpacksGroupPropertiesArgs{...}
type BuildpacksGroupPropertiesInput interface {
	pulumi.Input

	ToBuildpacksGroupPropertiesOutput() BuildpacksGroupPropertiesOutput
	ToBuildpacksGroupPropertiesOutputWithContext(context.Context) BuildpacksGroupPropertiesOutput
}

// Buildpack group properties of the Builder
type BuildpacksGroupPropertiesArgs struct {
	// Buildpacks in the buildpack group
	Buildpacks BuildpackPropertiesArrayInput `pulumi:"buildpacks"`
	// Buildpack group name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildpacksGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpacksGroupProperties)(nil)).Elem()
}

func (i BuildpacksGroupPropertiesArgs) ToBuildpacksGroupPropertiesOutput() BuildpacksGroupPropertiesOutput {
	return i.ToBuildpacksGroupPropertiesOutputWithContext(context.Background())
}

func (i BuildpacksGroupPropertiesArgs) ToBuildpacksGroupPropertiesOutputWithContext(ctx context.Context) BuildpacksGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpacksGroupPropertiesOutput)
}

// BuildpacksGroupPropertiesArrayInput is an input type that accepts BuildpacksGroupPropertiesArray and BuildpacksGroupPropertiesArrayOutput values.
// You can construct a concrete instance of `BuildpacksGroupPropertiesArrayInput` via:
//
//	BuildpacksGroupPropertiesArray{ BuildpacksGroupPropertiesArgs{...} }
type BuildpacksGroupPropertiesArrayInput interface {
	pulumi.Input

	ToBuildpacksGroupPropertiesArrayOutput() BuildpacksGroupPropertiesArrayOutput
	ToBuildpacksGroupPropertiesArrayOutputWithContext(context.Context) BuildpacksGroupPropertiesArrayOutput
}

type BuildpacksGroupPropertiesArray []BuildpacksGroupPropertiesInput

func (BuildpacksGroupPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildpacksGroupProperties)(nil)).Elem()
}

func (i BuildpacksGroupPropertiesArray) ToBuildpacksGroupPropertiesArrayOutput() BuildpacksGroupPropertiesArrayOutput {
	return i.ToBuildpacksGroupPropertiesArrayOutputWithContext(context.Background())
}

func (i BuildpacksGroupPropertiesArray) ToBuildpacksGroupPropertiesArrayOutputWithContext(ctx context.Context) BuildpacksGroupPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildpacksGroupPropertiesArrayOutput)
}

// Buildpack group properties of the Builder
type BuildpacksGroupPropertiesOutput struct{ *pulumi.OutputState }

func (BuildpacksGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpacksGroupProperties)(nil)).Elem()
}

func (o BuildpacksGroupPropertiesOutput) ToBuildpacksGroupPropertiesOutput() BuildpacksGroupPropertiesOutput {
	return o
}

func (o BuildpacksGroupPropertiesOutput) ToBuildpacksGroupPropertiesOutputWithContext(ctx context.Context) BuildpacksGroupPropertiesOutput {
	return o
}

// Buildpacks in the buildpack group
func (o BuildpacksGroupPropertiesOutput) Buildpacks() BuildpackPropertiesArrayOutput {
	return o.ApplyT(func(v BuildpacksGroupProperties) []BuildpackProperties { return v.Buildpacks }).(BuildpackPropertiesArrayOutput)
}

// Buildpack group name
func (o BuildpacksGroupPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildpacksGroupProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildpacksGroupPropertiesArrayOutput struct{ *pulumi.OutputState }

func (BuildpacksGroupPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildpacksGroupProperties)(nil)).Elem()
}

func (o BuildpacksGroupPropertiesArrayOutput) ToBuildpacksGroupPropertiesArrayOutput() BuildpacksGroupPropertiesArrayOutput {
	return o
}

func (o BuildpacksGroupPropertiesArrayOutput) ToBuildpacksGroupPropertiesArrayOutputWithContext(ctx context.Context) BuildpacksGroupPropertiesArrayOutput {
	return o
}

func (o BuildpacksGroupPropertiesArrayOutput) Index(i pulumi.IntInput) BuildpacksGroupPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildpacksGroupProperties {
		return vs[0].([]BuildpacksGroupProperties)[vs[1].(int)]
	}).(BuildpacksGroupPropertiesOutput)
}

// Buildpack group properties of the Builder
type BuildpacksGroupPropertiesResponse struct {
	// Buildpacks in the buildpack group
	Buildpacks []BuildpackPropertiesResponse `pulumi:"buildpacks"`
	// Buildpack group name
	Name *string `pulumi:"name"`
}

// Buildpack group properties of the Builder
type BuildpacksGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BuildpacksGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildpacksGroupPropertiesResponse)(nil)).Elem()
}

func (o BuildpacksGroupPropertiesResponseOutput) ToBuildpacksGroupPropertiesResponseOutput() BuildpacksGroupPropertiesResponseOutput {
	return o
}

func (o BuildpacksGroupPropertiesResponseOutput) ToBuildpacksGroupPropertiesResponseOutputWithContext(ctx context.Context) BuildpacksGroupPropertiesResponseOutput {
	return o
}

// Buildpacks in the buildpack group
func (o BuildpacksGroupPropertiesResponseOutput) Buildpacks() BuildpackPropertiesResponseArrayOutput {
	return o.ApplyT(func(v BuildpacksGroupPropertiesResponse) []BuildpackPropertiesResponse { return v.Buildpacks }).(BuildpackPropertiesResponseArrayOutput)
}

// Buildpack group name
func (o BuildpacksGroupPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildpacksGroupPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildpacksGroupPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (BuildpacksGroupPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildpacksGroupPropertiesResponse)(nil)).Elem()
}

func (o BuildpacksGroupPropertiesResponseArrayOutput) ToBuildpacksGroupPropertiesResponseArrayOutput() BuildpacksGroupPropertiesResponseArrayOutput {
	return o
}

func (o BuildpacksGroupPropertiesResponseArrayOutput) ToBuildpacksGroupPropertiesResponseArrayOutputWithContext(ctx context.Context) BuildpacksGroupPropertiesResponseArrayOutput {
	return o
}

func (o BuildpacksGroupPropertiesResponseArrayOutput) Index(i pulumi.IntInput) BuildpacksGroupPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildpacksGroupPropertiesResponse {
		return vs[0].([]BuildpacksGroupPropertiesResponse)[vs[1].(int)]
	}).(BuildpacksGroupPropertiesResponseOutput)
}

// A reference to the certificate
type CertificateReference struct {
	// Resource Id of the certificate
	ResourceId string `pulumi:"resourceId"`
}

// CertificateReferenceInput is an input type that accepts CertificateReferenceArgs and CertificateReferenceOutput values.
// You can construct a concrete instance of `CertificateReferenceInput` via:
//
//	CertificateReferenceArgs{...}
type CertificateReferenceInput interface {
	pulumi.Input

	ToCertificateReferenceOutput() CertificateReferenceOutput
	ToCertificateReferenceOutputWithContext(context.Context) CertificateReferenceOutput
}

// A reference to the certificate
type CertificateReferenceArgs struct {
	// Resource Id of the certificate
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (CertificateReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateReference)(nil)).Elem()
}

func (i CertificateReferenceArgs) ToCertificateReferenceOutput() CertificateReferenceOutput {
	return i.ToCertificateReferenceOutputWithContext(context.Background())
}

func (i CertificateReferenceArgs) ToCertificateReferenceOutputWithContext(ctx context.Context) CertificateReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateReferenceOutput)
}

// CertificateReferenceArrayInput is an input type that accepts CertificateReferenceArray and CertificateReferenceArrayOutput values.
// You can construct a concrete instance of `CertificateReferenceArrayInput` via:
//
//	CertificateReferenceArray{ CertificateReferenceArgs{...} }
type CertificateReferenceArrayInput interface {
	pulumi.Input

	ToCertificateReferenceArrayOutput() CertificateReferenceArrayOutput
	ToCertificateReferenceArrayOutputWithContext(context.Context) CertificateReferenceArrayOutput
}

type CertificateReferenceArray []CertificateReferenceInput

func (CertificateReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateReference)(nil)).Elem()
}

func (i CertificateReferenceArray) ToCertificateReferenceArrayOutput() CertificateReferenceArrayOutput {
	return i.ToCertificateReferenceArrayOutputWithContext(context.Background())
}

func (i CertificateReferenceArray) ToCertificateReferenceArrayOutputWithContext(ctx context.Context) CertificateReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateReferenceArrayOutput)
}

// A reference to the certificate
type CertificateReferenceOutput struct{ *pulumi.OutputState }

func (CertificateReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateReference)(nil)).Elem()
}

func (o CertificateReferenceOutput) ToCertificateReferenceOutput() CertificateReferenceOutput {
	return o
}

func (o CertificateReferenceOutput) ToCertificateReferenceOutputWithContext(ctx context.Context) CertificateReferenceOutput {
	return o
}

// Resource Id of the certificate
func (o CertificateReferenceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateReference) string { return v.ResourceId }).(pulumi.StringOutput)
}

type CertificateReferenceArrayOutput struct{ *pulumi.OutputState }

func (CertificateReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateReference)(nil)).Elem()
}

func (o CertificateReferenceArrayOutput) ToCertificateReferenceArrayOutput() CertificateReferenceArrayOutput {
	return o
}

func (o CertificateReferenceArrayOutput) ToCertificateReferenceArrayOutputWithContext(ctx context.Context) CertificateReferenceArrayOutput {
	return o
}

func (o CertificateReferenceArrayOutput) Index(i pulumi.IntInput) CertificateReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateReference {
		return vs[0].([]CertificateReference)[vs[1].(int)]
	}).(CertificateReferenceOutput)
}

// A reference to the certificate
type CertificateReferenceResponse struct {
	// Resource Id of the certificate
	ResourceId string `pulumi:"resourceId"`
}

// A reference to the certificate
type CertificateReferenceResponseOutput struct{ *pulumi.OutputState }

func (CertificateReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateReferenceResponse)(nil)).Elem()
}

func (o CertificateReferenceResponseOutput) ToCertificateReferenceResponseOutput() CertificateReferenceResponseOutput {
	return o
}

func (o CertificateReferenceResponseOutput) ToCertificateReferenceResponseOutputWithContext(ctx context.Context) CertificateReferenceResponseOutput {
	return o
}

// Resource Id of the certificate
func (o CertificateReferenceResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateReferenceResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type CertificateReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (CertificateReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateReferenceResponse)(nil)).Elem()
}

func (o CertificateReferenceResponseArrayOutput) ToCertificateReferenceResponseArrayOutput() CertificateReferenceResponseArrayOutput {
	return o
}

func (o CertificateReferenceResponseArrayOutput) ToCertificateReferenceResponseArrayOutputWithContext(ctx context.Context) CertificateReferenceResponseArrayOutput {
	return o
}

func (o CertificateReferenceResponseArrayOutput) Index(i pulumi.IntInput) CertificateReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateReferenceResponse {
		return vs[0].([]CertificateReferenceResponse)[vs[1].(int)]
	}).(CertificateReferenceResponseOutput)
}

// Service properties payload
type ClusterResourceProperties struct {
	// The name of the resource group that contains the infrastructure resources
	InfraResourceGroup *string `pulumi:"infraResourceGroup"`
	// Additional Service settings for planned maintenance
	MaintenanceScheduleConfiguration *WeeklyMaintenanceScheduleConfiguration `pulumi:"maintenanceScheduleConfiguration"`
	// The resource Id of the Managed Environment that the Spring Apps instance builds on
	ManagedEnvironmentId *string `pulumi:"managedEnvironmentId"`
	// Purchasing 3rd party product of the Service resource.
	MarketplaceResource *MarketplaceResource `pulumi:"marketplaceResource"`
	// Network profile of the Service
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
	// Additional Service settings in vnet injection instance
	VnetAddons    *ServiceVNetAddons `pulumi:"vnetAddons"`
	ZoneRedundant *bool              `pulumi:"zoneRedundant"`
}

// Defaults sets the appropriate defaults for ClusterResourceProperties
func (val *ClusterResourceProperties) Defaults() *ClusterResourceProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.VnetAddons = tmp.VnetAddons.Defaults()

	if tmp.ZoneRedundant == nil {
		zoneRedundant_ := false
		tmp.ZoneRedundant = &zoneRedundant_
	}
	return &tmp
}

// ClusterResourcePropertiesInput is an input type that accepts ClusterResourcePropertiesArgs and ClusterResourcePropertiesOutput values.
// You can construct a concrete instance of `ClusterResourcePropertiesInput` via:
//
//	ClusterResourcePropertiesArgs{...}
type ClusterResourcePropertiesInput interface {
	pulumi.Input

	ToClusterResourcePropertiesOutput() ClusterResourcePropertiesOutput
	ToClusterResourcePropertiesOutputWithContext(context.Context) ClusterResourcePropertiesOutput
}

// Service properties payload
type ClusterResourcePropertiesArgs struct {
	// The name of the resource group that contains the infrastructure resources
	InfraResourceGroup pulumi.StringPtrInput `pulumi:"infraResourceGroup"`
	// Additional Service settings for planned maintenance
	MaintenanceScheduleConfiguration WeeklyMaintenanceScheduleConfigurationPtrInput `pulumi:"maintenanceScheduleConfiguration"`
	// The resource Id of the Managed Environment that the Spring Apps instance builds on
	ManagedEnvironmentId pulumi.StringPtrInput `pulumi:"managedEnvironmentId"`
	// Purchasing 3rd party product of the Service resource.
	MarketplaceResource MarketplaceResourcePtrInput `pulumi:"marketplaceResource"`
	// Network profile of the Service
	NetworkProfile NetworkProfilePtrInput `pulumi:"networkProfile"`
	// Additional Service settings in vnet injection instance
	VnetAddons    ServiceVNetAddonsPtrInput `pulumi:"vnetAddons"`
	ZoneRedundant pulumi.BoolPtrInput       `pulumi:"zoneRedundant"`
}

// Defaults sets the appropriate defaults for ClusterResourcePropertiesArgs
func (val *ClusterResourcePropertiesArgs) Defaults() *ClusterResourcePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.ZoneRedundant == nil {
		tmp.ZoneRedundant = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ClusterResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceProperties)(nil)).Elem()
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesOutput() ClusterResourcePropertiesOutput {
	return i.ToClusterResourcePropertiesOutputWithContext(context.Background())
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesOutputWithContext(ctx context.Context) ClusterResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcePropertiesOutput)
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return i.ToClusterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcePropertiesOutput).ToClusterResourcePropertiesPtrOutputWithContext(ctx)
}

// ClusterResourcePropertiesPtrInput is an input type that accepts ClusterResourcePropertiesArgs, ClusterResourcePropertiesPtr and ClusterResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterResourcePropertiesPtrInput` via:
//
//	        ClusterResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type ClusterResourcePropertiesPtrInput interface {
	pulumi.Input

	ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput
	ToClusterResourcePropertiesPtrOutputWithContext(context.Context) ClusterResourcePropertiesPtrOutput
}

type clusterResourcePropertiesPtrType ClusterResourcePropertiesArgs

func ClusterResourcePropertiesPtr(v *ClusterResourcePropertiesArgs) ClusterResourcePropertiesPtrInput {
	return (*clusterResourcePropertiesPtrType)(v)
}

func (*clusterResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceProperties)(nil)).Elem()
}

func (i *clusterResourcePropertiesPtrType) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return i.ToClusterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterResourcePropertiesPtrType) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcePropertiesPtrOutput)
}

// Service properties payload
type ClusterResourcePropertiesOutput struct{ *pulumi.OutputState }

func (ClusterResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceProperties)(nil)).Elem()
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesOutput() ClusterResourcePropertiesOutput {
	return o
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesOutputWithContext(ctx context.Context) ClusterResourcePropertiesOutput {
	return o
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return o.ToClusterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceProperties) *ClusterResourceProperties {
		return &v
	}).(ClusterResourcePropertiesPtrOutput)
}

// The name of the resource group that contains the infrastructure resources
func (o ClusterResourcePropertiesOutput) InfraResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.InfraResourceGroup }).(pulumi.StringPtrOutput)
}

// Additional Service settings for planned maintenance
func (o ClusterResourcePropertiesOutput) MaintenanceScheduleConfiguration() WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *WeeklyMaintenanceScheduleConfiguration {
		return v.MaintenanceScheduleConfiguration
	}).(WeeklyMaintenanceScheduleConfigurationPtrOutput)
}

// The resource Id of the Managed Environment that the Spring Apps instance builds on
func (o ClusterResourcePropertiesOutput) ManagedEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.ManagedEnvironmentId }).(pulumi.StringPtrOutput)
}

// Purchasing 3rd party product of the Service resource.
func (o ClusterResourcePropertiesOutput) MarketplaceResource() MarketplaceResourcePtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *MarketplaceResource { return v.MarketplaceResource }).(MarketplaceResourcePtrOutput)
}

// Network profile of the Service
func (o ClusterResourcePropertiesOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *NetworkProfile { return v.NetworkProfile }).(NetworkProfilePtrOutput)
}

// Additional Service settings in vnet injection instance
func (o ClusterResourcePropertiesOutput) VnetAddons() ServiceVNetAddonsPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *ServiceVNetAddons { return v.VnetAddons }).(ServiceVNetAddonsPtrOutput)
}

func (o ClusterResourcePropertiesOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *bool { return v.ZoneRedundant }).(pulumi.BoolPtrOutput)
}

type ClusterResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceProperties)(nil)).Elem()
}

func (o ClusterResourcePropertiesPtrOutput) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return o
}

func (o ClusterResourcePropertiesPtrOutput) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return o
}

func (o ClusterResourcePropertiesPtrOutput) Elem() ClusterResourcePropertiesOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) ClusterResourceProperties {
		if v != nil {
			return *v
		}
		var ret ClusterResourceProperties
		return ret
	}).(ClusterResourcePropertiesOutput)
}

// The name of the resource group that contains the infrastructure resources
func (o ClusterResourcePropertiesPtrOutput) InfraResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.InfraResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Additional Service settings for planned maintenance
func (o ClusterResourcePropertiesPtrOutput) MaintenanceScheduleConfiguration() WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *WeeklyMaintenanceScheduleConfiguration {
		if v == nil {
			return nil
		}
		return v.MaintenanceScheduleConfiguration
	}).(WeeklyMaintenanceScheduleConfigurationPtrOutput)
}

// The resource Id of the Managed Environment that the Spring Apps instance builds on
func (o ClusterResourcePropertiesPtrOutput) ManagedEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManagedEnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Purchasing 3rd party product of the Service resource.
func (o ClusterResourcePropertiesPtrOutput) MarketplaceResource() MarketplaceResourcePtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *MarketplaceResource {
		if v == nil {
			return nil
		}
		return v.MarketplaceResource
	}).(MarketplaceResourcePtrOutput)
}

// Network profile of the Service
func (o ClusterResourcePropertiesPtrOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *NetworkProfile {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(NetworkProfilePtrOutput)
}

// Additional Service settings in vnet injection instance
func (o ClusterResourcePropertiesPtrOutput) VnetAddons() ServiceVNetAddonsPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *ServiceVNetAddons {
		if v == nil {
			return nil
		}
		return v.VnetAddons
	}).(ServiceVNetAddonsPtrOutput)
}

func (o ClusterResourcePropertiesPtrOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ZoneRedundant
	}).(pulumi.BoolPtrOutput)
}

// Service properties payload
type ClusterResourcePropertiesResponse struct {
	// Fully qualified dns name of the service instance
	Fqdn string `pulumi:"fqdn"`
	// The name of the resource group that contains the infrastructure resources
	InfraResourceGroup *string `pulumi:"infraResourceGroup"`
	// Additional Service settings for planned maintenance
	MaintenanceScheduleConfiguration *WeeklyMaintenanceScheduleConfigurationResponse `pulumi:"maintenanceScheduleConfiguration"`
	// The resource Id of the Managed Environment that the Spring Apps instance builds on
	ManagedEnvironmentId *string `pulumi:"managedEnvironmentId"`
	// Purchasing 3rd party product of the Service resource.
	MarketplaceResource *MarketplaceResourceResponse `pulumi:"marketplaceResource"`
	// Network profile of the Service
	NetworkProfile *NetworkProfileResponse `pulumi:"networkProfile"`
	// Power state of the Service
	PowerState string `pulumi:"powerState"`
	// Provisioning state of the Service
	ProvisioningState string `pulumi:"provisioningState"`
	// ServiceInstanceEntity Id which uniquely identifies a created resource
	ServiceId string `pulumi:"serviceId"`
	// Version of the Service
	Version int `pulumi:"version"`
	// Additional Service settings in vnet injection instance
	VnetAddons    *ServiceVNetAddonsResponse `pulumi:"vnetAddons"`
	ZoneRedundant *bool                      `pulumi:"zoneRedundant"`
}

// Defaults sets the appropriate defaults for ClusterResourcePropertiesResponse
func (val *ClusterResourcePropertiesResponse) Defaults() *ClusterResourcePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.VnetAddons = tmp.VnetAddons.Defaults()

	if tmp.ZoneRedundant == nil {
		zoneRedundant_ := false
		tmp.ZoneRedundant = &zoneRedundant_
	}
	return &tmp
}

// Service properties payload
type ClusterResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourcePropertiesResponse)(nil)).Elem()
}

func (o ClusterResourcePropertiesResponseOutput) ToClusterResourcePropertiesResponseOutput() ClusterResourcePropertiesResponseOutput {
	return o
}

func (o ClusterResourcePropertiesResponseOutput) ToClusterResourcePropertiesResponseOutputWithContext(ctx context.Context) ClusterResourcePropertiesResponseOutput {
	return o
}

// Fully qualified dns name of the service instance
func (o ClusterResourcePropertiesResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The name of the resource group that contains the infrastructure resources
func (o ClusterResourcePropertiesResponseOutput) InfraResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *string { return v.InfraResourceGroup }).(pulumi.StringPtrOutput)
}

// Additional Service settings for planned maintenance
func (o ClusterResourcePropertiesResponseOutput) MaintenanceScheduleConfiguration() WeeklyMaintenanceScheduleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *WeeklyMaintenanceScheduleConfigurationResponse {
		return v.MaintenanceScheduleConfiguration
	}).(WeeklyMaintenanceScheduleConfigurationResponsePtrOutput)
}

// The resource Id of the Managed Environment that the Spring Apps instance builds on
func (o ClusterResourcePropertiesResponseOutput) ManagedEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *string { return v.ManagedEnvironmentId }).(pulumi.StringPtrOutput)
}

// Purchasing 3rd party product of the Service resource.
func (o ClusterResourcePropertiesResponseOutput) MarketplaceResource() MarketplaceResourceResponsePtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *MarketplaceResourceResponse { return v.MarketplaceResource }).(MarketplaceResourceResponsePtrOutput)
}

// Network profile of the Service
func (o ClusterResourcePropertiesResponseOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *NetworkProfileResponse { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// Power state of the Service
func (o ClusterResourcePropertiesResponseOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) string { return v.PowerState }).(pulumi.StringOutput)
}

// Provisioning state of the Service
func (o ClusterResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ServiceInstanceEntity Id which uniquely identifies a created resource
func (o ClusterResourcePropertiesResponseOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) string { return v.ServiceId }).(pulumi.StringOutput)
}

// Version of the Service
func (o ClusterResourcePropertiesResponseOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) int { return v.Version }).(pulumi.IntOutput)
}

// Additional Service settings in vnet injection instance
func (o ClusterResourcePropertiesResponseOutput) VnetAddons() ServiceVNetAddonsResponsePtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *ServiceVNetAddonsResponse { return v.VnetAddons }).(ServiceVNetAddonsResponsePtrOutput)
}

func (o ClusterResourcePropertiesResponseOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourcePropertiesResponse) *bool { return v.ZoneRedundant }).(pulumi.BoolPtrOutput)
}

// Property of git.
type ConfigServerGitProperty struct {
	// Public sshKey of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label *string `pulumi:"label"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Private sshKey algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
	// Repositories of git.
	Repositories []GitPatternRepository `pulumi:"repositories"`
	// Searching path of the repository
	SearchPaths []string `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking *bool `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri string `pulumi:"uri"`
	// Username of git repository basic auth.
	Username *string `pulumi:"username"`
}

// ConfigServerGitPropertyInput is an input type that accepts ConfigServerGitPropertyArgs and ConfigServerGitPropertyOutput values.
// You can construct a concrete instance of `ConfigServerGitPropertyInput` via:
//
//	ConfigServerGitPropertyArgs{...}
type ConfigServerGitPropertyInput interface {
	pulumi.Input

	ToConfigServerGitPropertyOutput() ConfigServerGitPropertyOutput
	ToConfigServerGitPropertyOutputWithContext(context.Context) ConfigServerGitPropertyOutput
}

// Property of git.
type ConfigServerGitPropertyArgs struct {
	// Public sshKey of git repository.
	HostKey pulumi.StringPtrInput `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm pulumi.StringPtrInput `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Password of git repository basic auth.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private sshKey algorithm of git repository.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// Repositories of git.
	Repositories GitPatternRepositoryArrayInput `pulumi:"repositories"`
	// Searching path of the repository
	SearchPaths pulumi.StringArrayInput `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking pulumi.BoolPtrInput `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri pulumi.StringInput `pulumi:"uri"`
	// Username of git repository basic auth.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ConfigServerGitPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerGitProperty)(nil)).Elem()
}

func (i ConfigServerGitPropertyArgs) ToConfigServerGitPropertyOutput() ConfigServerGitPropertyOutput {
	return i.ToConfigServerGitPropertyOutputWithContext(context.Background())
}

func (i ConfigServerGitPropertyArgs) ToConfigServerGitPropertyOutputWithContext(ctx context.Context) ConfigServerGitPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerGitPropertyOutput)
}

func (i ConfigServerGitPropertyArgs) ToConfigServerGitPropertyPtrOutput() ConfigServerGitPropertyPtrOutput {
	return i.ToConfigServerGitPropertyPtrOutputWithContext(context.Background())
}

func (i ConfigServerGitPropertyArgs) ToConfigServerGitPropertyPtrOutputWithContext(ctx context.Context) ConfigServerGitPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerGitPropertyOutput).ToConfigServerGitPropertyPtrOutputWithContext(ctx)
}

// ConfigServerGitPropertyPtrInput is an input type that accepts ConfigServerGitPropertyArgs, ConfigServerGitPropertyPtr and ConfigServerGitPropertyPtrOutput values.
// You can construct a concrete instance of `ConfigServerGitPropertyPtrInput` via:
//
//	        ConfigServerGitPropertyArgs{...}
//
//	or:
//
//	        nil
type ConfigServerGitPropertyPtrInput interface {
	pulumi.Input

	ToConfigServerGitPropertyPtrOutput() ConfigServerGitPropertyPtrOutput
	ToConfigServerGitPropertyPtrOutputWithContext(context.Context) ConfigServerGitPropertyPtrOutput
}

type configServerGitPropertyPtrType ConfigServerGitPropertyArgs

func ConfigServerGitPropertyPtr(v *ConfigServerGitPropertyArgs) ConfigServerGitPropertyPtrInput {
	return (*configServerGitPropertyPtrType)(v)
}

func (*configServerGitPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerGitProperty)(nil)).Elem()
}

func (i *configServerGitPropertyPtrType) ToConfigServerGitPropertyPtrOutput() ConfigServerGitPropertyPtrOutput {
	return i.ToConfigServerGitPropertyPtrOutputWithContext(context.Background())
}

func (i *configServerGitPropertyPtrType) ToConfigServerGitPropertyPtrOutputWithContext(ctx context.Context) ConfigServerGitPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerGitPropertyPtrOutput)
}

// Property of git.
type ConfigServerGitPropertyOutput struct{ *pulumi.OutputState }

func (ConfigServerGitPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerGitProperty)(nil)).Elem()
}

func (o ConfigServerGitPropertyOutput) ToConfigServerGitPropertyOutput() ConfigServerGitPropertyOutput {
	return o
}

func (o ConfigServerGitPropertyOutput) ToConfigServerGitPropertyOutputWithContext(ctx context.Context) ConfigServerGitPropertyOutput {
	return o
}

func (o ConfigServerGitPropertyOutput) ToConfigServerGitPropertyPtrOutput() ConfigServerGitPropertyPtrOutput {
	return o.ToConfigServerGitPropertyPtrOutputWithContext(context.Background())
}

func (o ConfigServerGitPropertyOutput) ToConfigServerGitPropertyPtrOutputWithContext(ctx context.Context) ConfigServerGitPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigServerGitProperty) *ConfigServerGitProperty {
		return &v
	}).(ConfigServerGitPropertyPtrOutput)
}

// Public sshKey of git repository.
func (o ConfigServerGitPropertyOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o ConfigServerGitPropertyOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o ConfigServerGitPropertyOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Password of git repository basic auth.
func (o ConfigServerGitPropertyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private sshKey algorithm of git repository.
func (o ConfigServerGitPropertyOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Repositories of git.
func (o ConfigServerGitPropertyOutput) Repositories() GitPatternRepositoryArrayOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) []GitPatternRepository { return v.Repositories }).(GitPatternRepositoryArrayOutput)
}

// Searching path of the repository
func (o ConfigServerGitPropertyOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) []string { return v.SearchPaths }).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o ConfigServerGitPropertyOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *bool { return v.StrictHostKeyChecking }).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o ConfigServerGitPropertyOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) string { return v.Uri }).(pulumi.StringOutput)
}

// Username of git repository basic auth.
func (o ConfigServerGitPropertyOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitProperty) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConfigServerGitPropertyPtrOutput struct{ *pulumi.OutputState }

func (ConfigServerGitPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerGitProperty)(nil)).Elem()
}

func (o ConfigServerGitPropertyPtrOutput) ToConfigServerGitPropertyPtrOutput() ConfigServerGitPropertyPtrOutput {
	return o
}

func (o ConfigServerGitPropertyPtrOutput) ToConfigServerGitPropertyPtrOutputWithContext(ctx context.Context) ConfigServerGitPropertyPtrOutput {
	return o
}

func (o ConfigServerGitPropertyPtrOutput) Elem() ConfigServerGitPropertyOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) ConfigServerGitProperty {
		if v != nil {
			return *v
		}
		var ret ConfigServerGitProperty
		return ret
	}).(ConfigServerGitPropertyOutput)
}

// Public sshKey of git repository.
func (o ConfigServerGitPropertyPtrOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return v.HostKey
	}).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o ConfigServerGitPropertyPtrOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return v.HostKeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o ConfigServerGitPropertyPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

// Password of git repository basic auth.
func (o ConfigServerGitPropertyPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private sshKey algorithm of git repository.
func (o ConfigServerGitPropertyPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Repositories of git.
func (o ConfigServerGitPropertyPtrOutput) Repositories() GitPatternRepositoryArrayOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) []GitPatternRepository {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(GitPatternRepositoryArrayOutput)
}

// Searching path of the repository
func (o ConfigServerGitPropertyPtrOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) []string {
		if v == nil {
			return nil
		}
		return v.SearchPaths
	}).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o ConfigServerGitPropertyPtrOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *bool {
		if v == nil {
			return nil
		}
		return v.StrictHostKeyChecking
	}).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o ConfigServerGitPropertyPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// Username of git repository basic auth.
func (o ConfigServerGitPropertyPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitProperty) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Property of git.
type ConfigServerGitPropertyResponse struct {
	// Public sshKey of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label *string `pulumi:"label"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Private sshKey algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
	// Repositories of git.
	Repositories []GitPatternRepositoryResponse `pulumi:"repositories"`
	// Searching path of the repository
	SearchPaths []string `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking *bool `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri string `pulumi:"uri"`
	// Username of git repository basic auth.
	Username *string `pulumi:"username"`
}

// Property of git.
type ConfigServerGitPropertyResponseOutput struct{ *pulumi.OutputState }

func (ConfigServerGitPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerGitPropertyResponse)(nil)).Elem()
}

func (o ConfigServerGitPropertyResponseOutput) ToConfigServerGitPropertyResponseOutput() ConfigServerGitPropertyResponseOutput {
	return o
}

func (o ConfigServerGitPropertyResponseOutput) ToConfigServerGitPropertyResponseOutputWithContext(ctx context.Context) ConfigServerGitPropertyResponseOutput {
	return o
}

// Public sshKey of git repository.
func (o ConfigServerGitPropertyResponseOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o ConfigServerGitPropertyResponseOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o ConfigServerGitPropertyResponseOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Password of git repository basic auth.
func (o ConfigServerGitPropertyResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private sshKey algorithm of git repository.
func (o ConfigServerGitPropertyResponseOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Repositories of git.
func (o ConfigServerGitPropertyResponseOutput) Repositories() GitPatternRepositoryResponseArrayOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) []GitPatternRepositoryResponse { return v.Repositories }).(GitPatternRepositoryResponseArrayOutput)
}

// Searching path of the repository
func (o ConfigServerGitPropertyResponseOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) []string { return v.SearchPaths }).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o ConfigServerGitPropertyResponseOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *bool { return v.StrictHostKeyChecking }).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o ConfigServerGitPropertyResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Username of git repository basic auth.
func (o ConfigServerGitPropertyResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerGitPropertyResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConfigServerGitPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfigServerGitPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerGitPropertyResponse)(nil)).Elem()
}

func (o ConfigServerGitPropertyResponsePtrOutput) ToConfigServerGitPropertyResponsePtrOutput() ConfigServerGitPropertyResponsePtrOutput {
	return o
}

func (o ConfigServerGitPropertyResponsePtrOutput) ToConfigServerGitPropertyResponsePtrOutputWithContext(ctx context.Context) ConfigServerGitPropertyResponsePtrOutput {
	return o
}

func (o ConfigServerGitPropertyResponsePtrOutput) Elem() ConfigServerGitPropertyResponseOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) ConfigServerGitPropertyResponse {
		if v != nil {
			return *v
		}
		var ret ConfigServerGitPropertyResponse
		return ret
	}).(ConfigServerGitPropertyResponseOutput)
}

// Public sshKey of git repository.
func (o ConfigServerGitPropertyResponsePtrOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostKey
	}).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o ConfigServerGitPropertyResponsePtrOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostKeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o ConfigServerGitPropertyResponsePtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

// Password of git repository basic auth.
func (o ConfigServerGitPropertyResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private sshKey algorithm of git repository.
func (o ConfigServerGitPropertyResponsePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Repositories of git.
func (o ConfigServerGitPropertyResponsePtrOutput) Repositories() GitPatternRepositoryResponseArrayOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) []GitPatternRepositoryResponse {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(GitPatternRepositoryResponseArrayOutput)
}

// Searching path of the repository
func (o ConfigServerGitPropertyResponsePtrOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) []string {
		if v == nil {
			return nil
		}
		return v.SearchPaths
	}).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o ConfigServerGitPropertyResponsePtrOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StrictHostKeyChecking
	}).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o ConfigServerGitPropertyResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// Username of git repository basic auth.
func (o ConfigServerGitPropertyResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerGitPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Config server git properties payload
type ConfigServerProperties struct {
	// Settings of config server.
	ConfigServer *ConfigServerSettings `pulumi:"configServer"`
	// Enabled state of the config server. This is only used in Consumption tier.
	EnabledState *string `pulumi:"enabledState"`
	// Error when apply config server settings.
	Error *Error `pulumi:"error"`
}

// ConfigServerPropertiesInput is an input type that accepts ConfigServerPropertiesArgs and ConfigServerPropertiesOutput values.
// You can construct a concrete instance of `ConfigServerPropertiesInput` via:
//
//	ConfigServerPropertiesArgs{...}
type ConfigServerPropertiesInput interface {
	pulumi.Input

	ToConfigServerPropertiesOutput() ConfigServerPropertiesOutput
	ToConfigServerPropertiesOutputWithContext(context.Context) ConfigServerPropertiesOutput
}

// Config server git properties payload
type ConfigServerPropertiesArgs struct {
	// Settings of config server.
	ConfigServer ConfigServerSettingsPtrInput `pulumi:"configServer"`
	// Enabled state of the config server. This is only used in Consumption tier.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Error when apply config server settings.
	Error ErrorPtrInput `pulumi:"error"`
}

func (ConfigServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerProperties)(nil)).Elem()
}

func (i ConfigServerPropertiesArgs) ToConfigServerPropertiesOutput() ConfigServerPropertiesOutput {
	return i.ToConfigServerPropertiesOutputWithContext(context.Background())
}

func (i ConfigServerPropertiesArgs) ToConfigServerPropertiesOutputWithContext(ctx context.Context) ConfigServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerPropertiesOutput)
}

func (i ConfigServerPropertiesArgs) ToConfigServerPropertiesPtrOutput() ConfigServerPropertiesPtrOutput {
	return i.ToConfigServerPropertiesPtrOutputWithContext(context.Background())
}

func (i ConfigServerPropertiesArgs) ToConfigServerPropertiesPtrOutputWithContext(ctx context.Context) ConfigServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerPropertiesOutput).ToConfigServerPropertiesPtrOutputWithContext(ctx)
}

// ConfigServerPropertiesPtrInput is an input type that accepts ConfigServerPropertiesArgs, ConfigServerPropertiesPtr and ConfigServerPropertiesPtrOutput values.
// You can construct a concrete instance of `ConfigServerPropertiesPtrInput` via:
//
//	        ConfigServerPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConfigServerPropertiesPtrInput interface {
	pulumi.Input

	ToConfigServerPropertiesPtrOutput() ConfigServerPropertiesPtrOutput
	ToConfigServerPropertiesPtrOutputWithContext(context.Context) ConfigServerPropertiesPtrOutput
}

type configServerPropertiesPtrType ConfigServerPropertiesArgs

func ConfigServerPropertiesPtr(v *ConfigServerPropertiesArgs) ConfigServerPropertiesPtrInput {
	return (*configServerPropertiesPtrType)(v)
}

func (*configServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerProperties)(nil)).Elem()
}

func (i *configServerPropertiesPtrType) ToConfigServerPropertiesPtrOutput() ConfigServerPropertiesPtrOutput {
	return i.ToConfigServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *configServerPropertiesPtrType) ToConfigServerPropertiesPtrOutputWithContext(ctx context.Context) ConfigServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerPropertiesPtrOutput)
}

// Config server git properties payload
type ConfigServerPropertiesOutput struct{ *pulumi.OutputState }

func (ConfigServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerProperties)(nil)).Elem()
}

func (o ConfigServerPropertiesOutput) ToConfigServerPropertiesOutput() ConfigServerPropertiesOutput {
	return o
}

func (o ConfigServerPropertiesOutput) ToConfigServerPropertiesOutputWithContext(ctx context.Context) ConfigServerPropertiesOutput {
	return o
}

func (o ConfigServerPropertiesOutput) ToConfigServerPropertiesPtrOutput() ConfigServerPropertiesPtrOutput {
	return o.ToConfigServerPropertiesPtrOutputWithContext(context.Background())
}

func (o ConfigServerPropertiesOutput) ToConfigServerPropertiesPtrOutputWithContext(ctx context.Context) ConfigServerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigServerProperties) *ConfigServerProperties {
		return &v
	}).(ConfigServerPropertiesPtrOutput)
}

// Settings of config server.
func (o ConfigServerPropertiesOutput) ConfigServer() ConfigServerSettingsPtrOutput {
	return o.ApplyT(func(v ConfigServerProperties) *ConfigServerSettings { return v.ConfigServer }).(ConfigServerSettingsPtrOutput)
}

// Enabled state of the config server. This is only used in Consumption tier.
func (o ConfigServerPropertiesOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerProperties) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Error when apply config server settings.
func (o ConfigServerPropertiesOutput) Error() ErrorPtrOutput {
	return o.ApplyT(func(v ConfigServerProperties) *Error { return v.Error }).(ErrorPtrOutput)
}

type ConfigServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConfigServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerProperties)(nil)).Elem()
}

func (o ConfigServerPropertiesPtrOutput) ToConfigServerPropertiesPtrOutput() ConfigServerPropertiesPtrOutput {
	return o
}

func (o ConfigServerPropertiesPtrOutput) ToConfigServerPropertiesPtrOutputWithContext(ctx context.Context) ConfigServerPropertiesPtrOutput {
	return o
}

func (o ConfigServerPropertiesPtrOutput) Elem() ConfigServerPropertiesOutput {
	return o.ApplyT(func(v *ConfigServerProperties) ConfigServerProperties {
		if v != nil {
			return *v
		}
		var ret ConfigServerProperties
		return ret
	}).(ConfigServerPropertiesOutput)
}

// Settings of config server.
func (o ConfigServerPropertiesPtrOutput) ConfigServer() ConfigServerSettingsPtrOutput {
	return o.ApplyT(func(v *ConfigServerProperties) *ConfigServerSettings {
		if v == nil {
			return nil
		}
		return v.ConfigServer
	}).(ConfigServerSettingsPtrOutput)
}

// Enabled state of the config server. This is only used in Consumption tier.
func (o ConfigServerPropertiesPtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Error when apply config server settings.
func (o ConfigServerPropertiesPtrOutput) Error() ErrorPtrOutput {
	return o.ApplyT(func(v *ConfigServerProperties) *Error {
		if v == nil {
			return nil
		}
		return v.Error
	}).(ErrorPtrOutput)
}

// Config server git properties payload
type ConfigServerPropertiesResponse struct {
	// Settings of config server.
	ConfigServer *ConfigServerSettingsResponse `pulumi:"configServer"`
	// Enabled state of the config server. This is only used in Consumption tier.
	EnabledState *string `pulumi:"enabledState"`
	// Error when apply config server settings.
	Error *ErrorResponse `pulumi:"error"`
	// State of the config server.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Config server git properties payload
type ConfigServerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConfigServerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerPropertiesResponse)(nil)).Elem()
}

func (o ConfigServerPropertiesResponseOutput) ToConfigServerPropertiesResponseOutput() ConfigServerPropertiesResponseOutput {
	return o
}

func (o ConfigServerPropertiesResponseOutput) ToConfigServerPropertiesResponseOutputWithContext(ctx context.Context) ConfigServerPropertiesResponseOutput {
	return o
}

// Settings of config server.
func (o ConfigServerPropertiesResponseOutput) ConfigServer() ConfigServerSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConfigServerPropertiesResponse) *ConfigServerSettingsResponse { return v.ConfigServer }).(ConfigServerSettingsResponsePtrOutput)
}

// Enabled state of the config server. This is only used in Consumption tier.
func (o ConfigServerPropertiesResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigServerPropertiesResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Error when apply config server settings.
func (o ConfigServerPropertiesResponseOutput) Error() ErrorResponsePtrOutput {
	return o.ApplyT(func(v ConfigServerPropertiesResponse) *ErrorResponse { return v.Error }).(ErrorResponsePtrOutput)
}

// State of the config server.
func (o ConfigServerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigServerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The settings of config server.
type ConfigServerSettings struct {
	// Property of git environment.
	GitProperty *ConfigServerGitProperty `pulumi:"gitProperty"`
}

// ConfigServerSettingsInput is an input type that accepts ConfigServerSettingsArgs and ConfigServerSettingsOutput values.
// You can construct a concrete instance of `ConfigServerSettingsInput` via:
//
//	ConfigServerSettingsArgs{...}
type ConfigServerSettingsInput interface {
	pulumi.Input

	ToConfigServerSettingsOutput() ConfigServerSettingsOutput
	ToConfigServerSettingsOutputWithContext(context.Context) ConfigServerSettingsOutput
}

// The settings of config server.
type ConfigServerSettingsArgs struct {
	// Property of git environment.
	GitProperty ConfigServerGitPropertyPtrInput `pulumi:"gitProperty"`
}

func (ConfigServerSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerSettings)(nil)).Elem()
}

func (i ConfigServerSettingsArgs) ToConfigServerSettingsOutput() ConfigServerSettingsOutput {
	return i.ToConfigServerSettingsOutputWithContext(context.Background())
}

func (i ConfigServerSettingsArgs) ToConfigServerSettingsOutputWithContext(ctx context.Context) ConfigServerSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerSettingsOutput)
}

func (i ConfigServerSettingsArgs) ToConfigServerSettingsPtrOutput() ConfigServerSettingsPtrOutput {
	return i.ToConfigServerSettingsPtrOutputWithContext(context.Background())
}

func (i ConfigServerSettingsArgs) ToConfigServerSettingsPtrOutputWithContext(ctx context.Context) ConfigServerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerSettingsOutput).ToConfigServerSettingsPtrOutputWithContext(ctx)
}

// ConfigServerSettingsPtrInput is an input type that accepts ConfigServerSettingsArgs, ConfigServerSettingsPtr and ConfigServerSettingsPtrOutput values.
// You can construct a concrete instance of `ConfigServerSettingsPtrInput` via:
//
//	        ConfigServerSettingsArgs{...}
//
//	or:
//
//	        nil
type ConfigServerSettingsPtrInput interface {
	pulumi.Input

	ToConfigServerSettingsPtrOutput() ConfigServerSettingsPtrOutput
	ToConfigServerSettingsPtrOutputWithContext(context.Context) ConfigServerSettingsPtrOutput
}

type configServerSettingsPtrType ConfigServerSettingsArgs

func ConfigServerSettingsPtr(v *ConfigServerSettingsArgs) ConfigServerSettingsPtrInput {
	return (*configServerSettingsPtrType)(v)
}

func (*configServerSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerSettings)(nil)).Elem()
}

func (i *configServerSettingsPtrType) ToConfigServerSettingsPtrOutput() ConfigServerSettingsPtrOutput {
	return i.ToConfigServerSettingsPtrOutputWithContext(context.Background())
}

func (i *configServerSettingsPtrType) ToConfigServerSettingsPtrOutputWithContext(ctx context.Context) ConfigServerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServerSettingsPtrOutput)
}

// The settings of config server.
type ConfigServerSettingsOutput struct{ *pulumi.OutputState }

func (ConfigServerSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerSettings)(nil)).Elem()
}

func (o ConfigServerSettingsOutput) ToConfigServerSettingsOutput() ConfigServerSettingsOutput {
	return o
}

func (o ConfigServerSettingsOutput) ToConfigServerSettingsOutputWithContext(ctx context.Context) ConfigServerSettingsOutput {
	return o
}

func (o ConfigServerSettingsOutput) ToConfigServerSettingsPtrOutput() ConfigServerSettingsPtrOutput {
	return o.ToConfigServerSettingsPtrOutputWithContext(context.Background())
}

func (o ConfigServerSettingsOutput) ToConfigServerSettingsPtrOutputWithContext(ctx context.Context) ConfigServerSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigServerSettings) *ConfigServerSettings {
		return &v
	}).(ConfigServerSettingsPtrOutput)
}

// Property of git environment.
func (o ConfigServerSettingsOutput) GitProperty() ConfigServerGitPropertyPtrOutput {
	return o.ApplyT(func(v ConfigServerSettings) *ConfigServerGitProperty { return v.GitProperty }).(ConfigServerGitPropertyPtrOutput)
}

type ConfigServerSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConfigServerSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerSettings)(nil)).Elem()
}

func (o ConfigServerSettingsPtrOutput) ToConfigServerSettingsPtrOutput() ConfigServerSettingsPtrOutput {
	return o
}

func (o ConfigServerSettingsPtrOutput) ToConfigServerSettingsPtrOutputWithContext(ctx context.Context) ConfigServerSettingsPtrOutput {
	return o
}

func (o ConfigServerSettingsPtrOutput) Elem() ConfigServerSettingsOutput {
	return o.ApplyT(func(v *ConfigServerSettings) ConfigServerSettings {
		if v != nil {
			return *v
		}
		var ret ConfigServerSettings
		return ret
	}).(ConfigServerSettingsOutput)
}

// Property of git environment.
func (o ConfigServerSettingsPtrOutput) GitProperty() ConfigServerGitPropertyPtrOutput {
	return o.ApplyT(func(v *ConfigServerSettings) *ConfigServerGitProperty {
		if v == nil {
			return nil
		}
		return v.GitProperty
	}).(ConfigServerGitPropertyPtrOutput)
}

// The settings of config server.
type ConfigServerSettingsResponse struct {
	// Property of git environment.
	GitProperty *ConfigServerGitPropertyResponse `pulumi:"gitProperty"`
}

// The settings of config server.
type ConfigServerSettingsResponseOutput struct{ *pulumi.OutputState }

func (ConfigServerSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerSettingsResponse)(nil)).Elem()
}

func (o ConfigServerSettingsResponseOutput) ToConfigServerSettingsResponseOutput() ConfigServerSettingsResponseOutput {
	return o
}

func (o ConfigServerSettingsResponseOutput) ToConfigServerSettingsResponseOutputWithContext(ctx context.Context) ConfigServerSettingsResponseOutput {
	return o
}

// Property of git environment.
func (o ConfigServerSettingsResponseOutput) GitProperty() ConfigServerGitPropertyResponsePtrOutput {
	return o.ApplyT(func(v ConfigServerSettingsResponse) *ConfigServerGitPropertyResponse { return v.GitProperty }).(ConfigServerGitPropertyResponsePtrOutput)
}

type ConfigServerSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfigServerSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerSettingsResponse)(nil)).Elem()
}

func (o ConfigServerSettingsResponsePtrOutput) ToConfigServerSettingsResponsePtrOutput() ConfigServerSettingsResponsePtrOutput {
	return o
}

func (o ConfigServerSettingsResponsePtrOutput) ToConfigServerSettingsResponsePtrOutputWithContext(ctx context.Context) ConfigServerSettingsResponsePtrOutput {
	return o
}

func (o ConfigServerSettingsResponsePtrOutput) Elem() ConfigServerSettingsResponseOutput {
	return o.ApplyT(func(v *ConfigServerSettingsResponse) ConfigServerSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ConfigServerSettingsResponse
		return ret
	}).(ConfigServerSettingsResponseOutput)
}

// Property of git environment.
func (o ConfigServerSettingsResponsePtrOutput) GitProperty() ConfigServerGitPropertyResponsePtrOutput {
	return o.ApplyT(func(v *ConfigServerSettingsResponse) *ConfigServerGitPropertyResponse {
		if v == nil {
			return nil
		}
		return v.GitProperty
	}).(ConfigServerGitPropertyResponsePtrOutput)
}

// Property of git environment.
type ConfigurationServiceGitProperty struct {
	// Repositories of Application Configuration Service git property.
	Repositories []ConfigurationServiceGitRepository `pulumi:"repositories"`
}

// ConfigurationServiceGitPropertyInput is an input type that accepts ConfigurationServiceGitPropertyArgs and ConfigurationServiceGitPropertyOutput values.
// You can construct a concrete instance of `ConfigurationServiceGitPropertyInput` via:
//
//	ConfigurationServiceGitPropertyArgs{...}
type ConfigurationServiceGitPropertyInput interface {
	pulumi.Input

	ToConfigurationServiceGitPropertyOutput() ConfigurationServiceGitPropertyOutput
	ToConfigurationServiceGitPropertyOutputWithContext(context.Context) ConfigurationServiceGitPropertyOutput
}

// Property of git environment.
type ConfigurationServiceGitPropertyArgs struct {
	// Repositories of Application Configuration Service git property.
	Repositories ConfigurationServiceGitRepositoryArrayInput `pulumi:"repositories"`
}

func (ConfigurationServiceGitPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGitProperty)(nil)).Elem()
}

func (i ConfigurationServiceGitPropertyArgs) ToConfigurationServiceGitPropertyOutput() ConfigurationServiceGitPropertyOutput {
	return i.ToConfigurationServiceGitPropertyOutputWithContext(context.Background())
}

func (i ConfigurationServiceGitPropertyArgs) ToConfigurationServiceGitPropertyOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceGitPropertyOutput)
}

func (i ConfigurationServiceGitPropertyArgs) ToConfigurationServiceGitPropertyPtrOutput() ConfigurationServiceGitPropertyPtrOutput {
	return i.ToConfigurationServiceGitPropertyPtrOutputWithContext(context.Background())
}

func (i ConfigurationServiceGitPropertyArgs) ToConfigurationServiceGitPropertyPtrOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceGitPropertyOutput).ToConfigurationServiceGitPropertyPtrOutputWithContext(ctx)
}

// ConfigurationServiceGitPropertyPtrInput is an input type that accepts ConfigurationServiceGitPropertyArgs, ConfigurationServiceGitPropertyPtr and ConfigurationServiceGitPropertyPtrOutput values.
// You can construct a concrete instance of `ConfigurationServiceGitPropertyPtrInput` via:
//
//	        ConfigurationServiceGitPropertyArgs{...}
//
//	or:
//
//	        nil
type ConfigurationServiceGitPropertyPtrInput interface {
	pulumi.Input

	ToConfigurationServiceGitPropertyPtrOutput() ConfigurationServiceGitPropertyPtrOutput
	ToConfigurationServiceGitPropertyPtrOutputWithContext(context.Context) ConfigurationServiceGitPropertyPtrOutput
}

type configurationServiceGitPropertyPtrType ConfigurationServiceGitPropertyArgs

func ConfigurationServiceGitPropertyPtr(v *ConfigurationServiceGitPropertyArgs) ConfigurationServiceGitPropertyPtrInput {
	return (*configurationServiceGitPropertyPtrType)(v)
}

func (*configurationServiceGitPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceGitProperty)(nil)).Elem()
}

func (i *configurationServiceGitPropertyPtrType) ToConfigurationServiceGitPropertyPtrOutput() ConfigurationServiceGitPropertyPtrOutput {
	return i.ToConfigurationServiceGitPropertyPtrOutputWithContext(context.Background())
}

func (i *configurationServiceGitPropertyPtrType) ToConfigurationServiceGitPropertyPtrOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceGitPropertyPtrOutput)
}

// Property of git environment.
type ConfigurationServiceGitPropertyOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGitProperty)(nil)).Elem()
}

func (o ConfigurationServiceGitPropertyOutput) ToConfigurationServiceGitPropertyOutput() ConfigurationServiceGitPropertyOutput {
	return o
}

func (o ConfigurationServiceGitPropertyOutput) ToConfigurationServiceGitPropertyOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyOutput {
	return o
}

func (o ConfigurationServiceGitPropertyOutput) ToConfigurationServiceGitPropertyPtrOutput() ConfigurationServiceGitPropertyPtrOutput {
	return o.ToConfigurationServiceGitPropertyPtrOutputWithContext(context.Background())
}

func (o ConfigurationServiceGitPropertyOutput) ToConfigurationServiceGitPropertyPtrOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationServiceGitProperty) *ConfigurationServiceGitProperty {
		return &v
	}).(ConfigurationServiceGitPropertyPtrOutput)
}

// Repositories of Application Configuration Service git property.
func (o ConfigurationServiceGitPropertyOutput) Repositories() ConfigurationServiceGitRepositoryArrayOutput {
	return o.ApplyT(func(v ConfigurationServiceGitProperty) []ConfigurationServiceGitRepository { return v.Repositories }).(ConfigurationServiceGitRepositoryArrayOutput)
}

type ConfigurationServiceGitPropertyPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceGitProperty)(nil)).Elem()
}

func (o ConfigurationServiceGitPropertyPtrOutput) ToConfigurationServiceGitPropertyPtrOutput() ConfigurationServiceGitPropertyPtrOutput {
	return o
}

func (o ConfigurationServiceGitPropertyPtrOutput) ToConfigurationServiceGitPropertyPtrOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyPtrOutput {
	return o
}

func (o ConfigurationServiceGitPropertyPtrOutput) Elem() ConfigurationServiceGitPropertyOutput {
	return o.ApplyT(func(v *ConfigurationServiceGitProperty) ConfigurationServiceGitProperty {
		if v != nil {
			return *v
		}
		var ret ConfigurationServiceGitProperty
		return ret
	}).(ConfigurationServiceGitPropertyOutput)
}

// Repositories of Application Configuration Service git property.
func (o ConfigurationServiceGitPropertyPtrOutput) Repositories() ConfigurationServiceGitRepositoryArrayOutput {
	return o.ApplyT(func(v *ConfigurationServiceGitProperty) []ConfigurationServiceGitRepository {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(ConfigurationServiceGitRepositoryArrayOutput)
}

// Property of git environment.
type ConfigurationServiceGitPropertyResponse struct {
	// Repositories of Application Configuration Service git property.
	Repositories []ConfigurationServiceGitRepositoryResponse `pulumi:"repositories"`
}

// Property of git environment.
type ConfigurationServiceGitPropertyResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGitPropertyResponse)(nil)).Elem()
}

func (o ConfigurationServiceGitPropertyResponseOutput) ToConfigurationServiceGitPropertyResponseOutput() ConfigurationServiceGitPropertyResponseOutput {
	return o
}

func (o ConfigurationServiceGitPropertyResponseOutput) ToConfigurationServiceGitPropertyResponseOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyResponseOutput {
	return o
}

// Repositories of Application Configuration Service git property.
func (o ConfigurationServiceGitPropertyResponseOutput) Repositories() ConfigurationServiceGitRepositoryResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationServiceGitPropertyResponse) []ConfigurationServiceGitRepositoryResponse {
		return v.Repositories
	}).(ConfigurationServiceGitRepositoryResponseArrayOutput)
}

type ConfigurationServiceGitPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceGitPropertyResponse)(nil)).Elem()
}

func (o ConfigurationServiceGitPropertyResponsePtrOutput) ToConfigurationServiceGitPropertyResponsePtrOutput() ConfigurationServiceGitPropertyResponsePtrOutput {
	return o
}

func (o ConfigurationServiceGitPropertyResponsePtrOutput) ToConfigurationServiceGitPropertyResponsePtrOutputWithContext(ctx context.Context) ConfigurationServiceGitPropertyResponsePtrOutput {
	return o
}

func (o ConfigurationServiceGitPropertyResponsePtrOutput) Elem() ConfigurationServiceGitPropertyResponseOutput {
	return o.ApplyT(func(v *ConfigurationServiceGitPropertyResponse) ConfigurationServiceGitPropertyResponse {
		if v != nil {
			return *v
		}
		var ret ConfigurationServiceGitPropertyResponse
		return ret
	}).(ConfigurationServiceGitPropertyResponseOutput)
}

// Repositories of Application Configuration Service git property.
func (o ConfigurationServiceGitPropertyResponsePtrOutput) Repositories() ConfigurationServiceGitRepositoryResponseArrayOutput {
	return o.ApplyT(func(v *ConfigurationServiceGitPropertyResponse) []ConfigurationServiceGitRepositoryResponse {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(ConfigurationServiceGitRepositoryResponseArrayOutput)
}

// Git repository property payload for Application Configuration Service
type ConfigurationServiceGitRepository struct {
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId *string `pulumi:"caCertResourceId"`
	// Git libraries used to support various repository providers
	GitImplementation *string `pulumi:"gitImplementation"`
	// Public sshKey of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label string `pulumi:"label"`
	// Name of the repository
	Name string `pulumi:"name"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Collection of patterns of the repository
	Patterns []string `pulumi:"patterns"`
	// Private sshKey algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
	// Searching path of the repository
	SearchPaths []string `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking *bool `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri string `pulumi:"uri"`
	// Username of git repository basic auth.
	Username *string `pulumi:"username"`
}

// ConfigurationServiceGitRepositoryInput is an input type that accepts ConfigurationServiceGitRepositoryArgs and ConfigurationServiceGitRepositoryOutput values.
// You can construct a concrete instance of `ConfigurationServiceGitRepositoryInput` via:
//
//	ConfigurationServiceGitRepositoryArgs{...}
type ConfigurationServiceGitRepositoryInput interface {
	pulumi.Input

	ToConfigurationServiceGitRepositoryOutput() ConfigurationServiceGitRepositoryOutput
	ToConfigurationServiceGitRepositoryOutputWithContext(context.Context) ConfigurationServiceGitRepositoryOutput
}

// Git repository property payload for Application Configuration Service
type ConfigurationServiceGitRepositoryArgs struct {
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId pulumi.StringPtrInput `pulumi:"caCertResourceId"`
	// Git libraries used to support various repository providers
	GitImplementation pulumi.StringPtrInput `pulumi:"gitImplementation"`
	// Public sshKey of git repository.
	HostKey pulumi.StringPtrInput `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm pulumi.StringPtrInput `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label pulumi.StringInput `pulumi:"label"`
	// Name of the repository
	Name pulumi.StringInput `pulumi:"name"`
	// Password of git repository basic auth.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Collection of patterns of the repository
	Patterns pulumi.StringArrayInput `pulumi:"patterns"`
	// Private sshKey algorithm of git repository.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// Searching path of the repository
	SearchPaths pulumi.StringArrayInput `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking pulumi.BoolPtrInput `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri pulumi.StringInput `pulumi:"uri"`
	// Username of git repository basic auth.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ConfigurationServiceGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGitRepository)(nil)).Elem()
}

func (i ConfigurationServiceGitRepositoryArgs) ToConfigurationServiceGitRepositoryOutput() ConfigurationServiceGitRepositoryOutput {
	return i.ToConfigurationServiceGitRepositoryOutputWithContext(context.Background())
}

func (i ConfigurationServiceGitRepositoryArgs) ToConfigurationServiceGitRepositoryOutputWithContext(ctx context.Context) ConfigurationServiceGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceGitRepositoryOutput)
}

// ConfigurationServiceGitRepositoryArrayInput is an input type that accepts ConfigurationServiceGitRepositoryArray and ConfigurationServiceGitRepositoryArrayOutput values.
// You can construct a concrete instance of `ConfigurationServiceGitRepositoryArrayInput` via:
//
//	ConfigurationServiceGitRepositoryArray{ ConfigurationServiceGitRepositoryArgs{...} }
type ConfigurationServiceGitRepositoryArrayInput interface {
	pulumi.Input

	ToConfigurationServiceGitRepositoryArrayOutput() ConfigurationServiceGitRepositoryArrayOutput
	ToConfigurationServiceGitRepositoryArrayOutputWithContext(context.Context) ConfigurationServiceGitRepositoryArrayOutput
}

type ConfigurationServiceGitRepositoryArray []ConfigurationServiceGitRepositoryInput

func (ConfigurationServiceGitRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationServiceGitRepository)(nil)).Elem()
}

func (i ConfigurationServiceGitRepositoryArray) ToConfigurationServiceGitRepositoryArrayOutput() ConfigurationServiceGitRepositoryArrayOutput {
	return i.ToConfigurationServiceGitRepositoryArrayOutputWithContext(context.Background())
}

func (i ConfigurationServiceGitRepositoryArray) ToConfigurationServiceGitRepositoryArrayOutputWithContext(ctx context.Context) ConfigurationServiceGitRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceGitRepositoryArrayOutput)
}

// Git repository property payload for Application Configuration Service
type ConfigurationServiceGitRepositoryOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGitRepository)(nil)).Elem()
}

func (o ConfigurationServiceGitRepositoryOutput) ToConfigurationServiceGitRepositoryOutput() ConfigurationServiceGitRepositoryOutput {
	return o
}

func (o ConfigurationServiceGitRepositoryOutput) ToConfigurationServiceGitRepositoryOutputWithContext(ctx context.Context) ConfigurationServiceGitRepositoryOutput {
	return o
}

// Resource Id of CA certificate for https URL of Git repository.
func (o ConfigurationServiceGitRepositoryOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.CaCertResourceId }).(pulumi.StringPtrOutput)
}

// Git libraries used to support various repository providers
func (o ConfigurationServiceGitRepositoryOutput) GitImplementation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.GitImplementation }).(pulumi.StringPtrOutput)
}

// Public sshKey of git repository.
func (o ConfigurationServiceGitRepositoryOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o ConfigurationServiceGitRepositoryOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o ConfigurationServiceGitRepositoryOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) string { return v.Label }).(pulumi.StringOutput)
}

// Name of the repository
func (o ConfigurationServiceGitRepositoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) string { return v.Name }).(pulumi.StringOutput)
}

// Password of git repository basic auth.
func (o ConfigurationServiceGitRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Collection of patterns of the repository
func (o ConfigurationServiceGitRepositoryOutput) Patterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) []string { return v.Patterns }).(pulumi.StringArrayOutput)
}

// Private sshKey algorithm of git repository.
func (o ConfigurationServiceGitRepositoryOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Searching path of the repository
func (o ConfigurationServiceGitRepositoryOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) []string { return v.SearchPaths }).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o ConfigurationServiceGitRepositoryOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *bool { return v.StrictHostKeyChecking }).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o ConfigurationServiceGitRepositoryOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) string { return v.Uri }).(pulumi.StringOutput)
}

// Username of git repository basic auth.
func (o ConfigurationServiceGitRepositoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepository) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConfigurationServiceGitRepositoryArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationServiceGitRepository)(nil)).Elem()
}

func (o ConfigurationServiceGitRepositoryArrayOutput) ToConfigurationServiceGitRepositoryArrayOutput() ConfigurationServiceGitRepositoryArrayOutput {
	return o
}

func (o ConfigurationServiceGitRepositoryArrayOutput) ToConfigurationServiceGitRepositoryArrayOutputWithContext(ctx context.Context) ConfigurationServiceGitRepositoryArrayOutput {
	return o
}

func (o ConfigurationServiceGitRepositoryArrayOutput) Index(i pulumi.IntInput) ConfigurationServiceGitRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationServiceGitRepository {
		return vs[0].([]ConfigurationServiceGitRepository)[vs[1].(int)]
	}).(ConfigurationServiceGitRepositoryOutput)
}

// Git repository property payload for Application Configuration Service
type ConfigurationServiceGitRepositoryResponse struct {
	// Resource Id of CA certificate for https URL of Git repository.
	CaCertResourceId *string `pulumi:"caCertResourceId"`
	// Git libraries used to support various repository providers
	GitImplementation *string `pulumi:"gitImplementation"`
	// Public sshKey of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label string `pulumi:"label"`
	// Name of the repository
	Name string `pulumi:"name"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Collection of patterns of the repository
	Patterns []string `pulumi:"patterns"`
	// Private sshKey algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
	// Searching path of the repository
	SearchPaths []string `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking *bool `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri string `pulumi:"uri"`
	// Username of git repository basic auth.
	Username *string `pulumi:"username"`
}

// Git repository property payload for Application Configuration Service
type ConfigurationServiceGitRepositoryResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitRepositoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGitRepositoryResponse)(nil)).Elem()
}

func (o ConfigurationServiceGitRepositoryResponseOutput) ToConfigurationServiceGitRepositoryResponseOutput() ConfigurationServiceGitRepositoryResponseOutput {
	return o
}

func (o ConfigurationServiceGitRepositoryResponseOutput) ToConfigurationServiceGitRepositoryResponseOutputWithContext(ctx context.Context) ConfigurationServiceGitRepositoryResponseOutput {
	return o
}

// Resource Id of CA certificate for https URL of Git repository.
func (o ConfigurationServiceGitRepositoryResponseOutput) CaCertResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.CaCertResourceId }).(pulumi.StringPtrOutput)
}

// Git libraries used to support various repository providers
func (o ConfigurationServiceGitRepositoryResponseOutput) GitImplementation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.GitImplementation }).(pulumi.StringPtrOutput)
}

// Public sshKey of git repository.
func (o ConfigurationServiceGitRepositoryResponseOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o ConfigurationServiceGitRepositoryResponseOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o ConfigurationServiceGitRepositoryResponseOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) string { return v.Label }).(pulumi.StringOutput)
}

// Name of the repository
func (o ConfigurationServiceGitRepositoryResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Password of git repository basic auth.
func (o ConfigurationServiceGitRepositoryResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Collection of patterns of the repository
func (o ConfigurationServiceGitRepositoryResponseOutput) Patterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) []string { return v.Patterns }).(pulumi.StringArrayOutput)
}

// Private sshKey algorithm of git repository.
func (o ConfigurationServiceGitRepositoryResponseOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Searching path of the repository
func (o ConfigurationServiceGitRepositoryResponseOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) []string { return v.SearchPaths }).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o ConfigurationServiceGitRepositoryResponseOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *bool { return v.StrictHostKeyChecking }).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o ConfigurationServiceGitRepositoryResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Username of git repository basic auth.
func (o ConfigurationServiceGitRepositoryResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceGitRepositoryResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConfigurationServiceGitRepositoryResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGitRepositoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationServiceGitRepositoryResponse)(nil)).Elem()
}

func (o ConfigurationServiceGitRepositoryResponseArrayOutput) ToConfigurationServiceGitRepositoryResponseArrayOutput() ConfigurationServiceGitRepositoryResponseArrayOutput {
	return o
}

func (o ConfigurationServiceGitRepositoryResponseArrayOutput) ToConfigurationServiceGitRepositoryResponseArrayOutputWithContext(ctx context.Context) ConfigurationServiceGitRepositoryResponseArrayOutput {
	return o
}

func (o ConfigurationServiceGitRepositoryResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationServiceGitRepositoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationServiceGitRepositoryResponse {
		return vs[0].([]ConfigurationServiceGitRepositoryResponse)[vs[1].(int)]
	}).(ConfigurationServiceGitRepositoryResponseOutput)
}

// Collection of instances belong to the Application Configuration Service
type ConfigurationServiceInstanceResponse struct {
	// Name of the Application Configuration Service instance
	Name string `pulumi:"name"`
	// Status of the Application Configuration Service instance
	Status string `pulumi:"status"`
}

// Collection of instances belong to the Application Configuration Service
type ConfigurationServiceInstanceResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceInstanceResponse)(nil)).Elem()
}

func (o ConfigurationServiceInstanceResponseOutput) ToConfigurationServiceInstanceResponseOutput() ConfigurationServiceInstanceResponseOutput {
	return o
}

func (o ConfigurationServiceInstanceResponseOutput) ToConfigurationServiceInstanceResponseOutputWithContext(ctx context.Context) ConfigurationServiceInstanceResponseOutput {
	return o
}

// Name of the Application Configuration Service instance
func (o ConfigurationServiceInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the Application Configuration Service instance
func (o ConfigurationServiceInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ConfigurationServiceInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationServiceInstanceResponse)(nil)).Elem()
}

func (o ConfigurationServiceInstanceResponseArrayOutput) ToConfigurationServiceInstanceResponseArrayOutput() ConfigurationServiceInstanceResponseArrayOutput {
	return o
}

func (o ConfigurationServiceInstanceResponseArrayOutput) ToConfigurationServiceInstanceResponseArrayOutputWithContext(ctx context.Context) ConfigurationServiceInstanceResponseArrayOutput {
	return o
}

func (o ConfigurationServiceInstanceResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationServiceInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationServiceInstanceResponse {
		return vs[0].([]ConfigurationServiceInstanceResponse)[vs[1].(int)]
	}).(ConfigurationServiceInstanceResponseOutput)
}

// Application Configuration Service properties payload
type ConfigurationServiceProperties struct {
	// The generation of the Application Configuration Service.
	Generation *string `pulumi:"generation"`
	// The settings of Application Configuration Service.
	Settings *ConfigurationServiceSettings `pulumi:"settings"`
}

// Defaults sets the appropriate defaults for ConfigurationServiceProperties
func (val *ConfigurationServiceProperties) Defaults() *ConfigurationServiceProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Generation == nil {
		generation_ := "Gen1"
		tmp.Generation = &generation_
	}
	return &tmp
}

// ConfigurationServicePropertiesInput is an input type that accepts ConfigurationServicePropertiesArgs and ConfigurationServicePropertiesOutput values.
// You can construct a concrete instance of `ConfigurationServicePropertiesInput` via:
//
//	ConfigurationServicePropertiesArgs{...}
type ConfigurationServicePropertiesInput interface {
	pulumi.Input

	ToConfigurationServicePropertiesOutput() ConfigurationServicePropertiesOutput
	ToConfigurationServicePropertiesOutputWithContext(context.Context) ConfigurationServicePropertiesOutput
}

// Application Configuration Service properties payload
type ConfigurationServicePropertiesArgs struct {
	// The generation of the Application Configuration Service.
	Generation pulumi.StringPtrInput `pulumi:"generation"`
	// The settings of Application Configuration Service.
	Settings ConfigurationServiceSettingsPtrInput `pulumi:"settings"`
}

// Defaults sets the appropriate defaults for ConfigurationServicePropertiesArgs
func (val *ConfigurationServicePropertiesArgs) Defaults() *ConfigurationServicePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Generation == nil {
		tmp.Generation = pulumi.StringPtr("Gen1")
	}
	return &tmp
}
func (ConfigurationServicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceProperties)(nil)).Elem()
}

func (i ConfigurationServicePropertiesArgs) ToConfigurationServicePropertiesOutput() ConfigurationServicePropertiesOutput {
	return i.ToConfigurationServicePropertiesOutputWithContext(context.Background())
}

func (i ConfigurationServicePropertiesArgs) ToConfigurationServicePropertiesOutputWithContext(ctx context.Context) ConfigurationServicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServicePropertiesOutput)
}

func (i ConfigurationServicePropertiesArgs) ToConfigurationServicePropertiesPtrOutput() ConfigurationServicePropertiesPtrOutput {
	return i.ToConfigurationServicePropertiesPtrOutputWithContext(context.Background())
}

func (i ConfigurationServicePropertiesArgs) ToConfigurationServicePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServicePropertiesOutput).ToConfigurationServicePropertiesPtrOutputWithContext(ctx)
}

// ConfigurationServicePropertiesPtrInput is an input type that accepts ConfigurationServicePropertiesArgs, ConfigurationServicePropertiesPtr and ConfigurationServicePropertiesPtrOutput values.
// You can construct a concrete instance of `ConfigurationServicePropertiesPtrInput` via:
//
//	        ConfigurationServicePropertiesArgs{...}
//
//	or:
//
//	        nil
type ConfigurationServicePropertiesPtrInput interface {
	pulumi.Input

	ToConfigurationServicePropertiesPtrOutput() ConfigurationServicePropertiesPtrOutput
	ToConfigurationServicePropertiesPtrOutputWithContext(context.Context) ConfigurationServicePropertiesPtrOutput
}

type configurationServicePropertiesPtrType ConfigurationServicePropertiesArgs

func ConfigurationServicePropertiesPtr(v *ConfigurationServicePropertiesArgs) ConfigurationServicePropertiesPtrInput {
	return (*configurationServicePropertiesPtrType)(v)
}

func (*configurationServicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceProperties)(nil)).Elem()
}

func (i *configurationServicePropertiesPtrType) ToConfigurationServicePropertiesPtrOutput() ConfigurationServicePropertiesPtrOutput {
	return i.ToConfigurationServicePropertiesPtrOutputWithContext(context.Background())
}

func (i *configurationServicePropertiesPtrType) ToConfigurationServicePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServicePropertiesPtrOutput)
}

// Application Configuration Service properties payload
type ConfigurationServicePropertiesOutput struct{ *pulumi.OutputState }

func (ConfigurationServicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceProperties)(nil)).Elem()
}

func (o ConfigurationServicePropertiesOutput) ToConfigurationServicePropertiesOutput() ConfigurationServicePropertiesOutput {
	return o
}

func (o ConfigurationServicePropertiesOutput) ToConfigurationServicePropertiesOutputWithContext(ctx context.Context) ConfigurationServicePropertiesOutput {
	return o
}

func (o ConfigurationServicePropertiesOutput) ToConfigurationServicePropertiesPtrOutput() ConfigurationServicePropertiesPtrOutput {
	return o.ToConfigurationServicePropertiesPtrOutputWithContext(context.Background())
}

func (o ConfigurationServicePropertiesOutput) ToConfigurationServicePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationServicePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationServiceProperties) *ConfigurationServiceProperties {
		return &v
	}).(ConfigurationServicePropertiesPtrOutput)
}

// The generation of the Application Configuration Service.
func (o ConfigurationServicePropertiesOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceProperties) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

// The settings of Application Configuration Service.
func (o ConfigurationServicePropertiesOutput) Settings() ConfigurationServiceSettingsPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceProperties) *ConfigurationServiceSettings { return v.Settings }).(ConfigurationServiceSettingsPtrOutput)
}

type ConfigurationServicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationServicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceProperties)(nil)).Elem()
}

func (o ConfigurationServicePropertiesPtrOutput) ToConfigurationServicePropertiesPtrOutput() ConfigurationServicePropertiesPtrOutput {
	return o
}

func (o ConfigurationServicePropertiesPtrOutput) ToConfigurationServicePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationServicePropertiesPtrOutput {
	return o
}

func (o ConfigurationServicePropertiesPtrOutput) Elem() ConfigurationServicePropertiesOutput {
	return o.ApplyT(func(v *ConfigurationServiceProperties) ConfigurationServiceProperties {
		if v != nil {
			return *v
		}
		var ret ConfigurationServiceProperties
		return ret
	}).(ConfigurationServicePropertiesOutput)
}

// The generation of the Application Configuration Service.
func (o ConfigurationServicePropertiesPtrOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationServiceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.StringPtrOutput)
}

// The settings of Application Configuration Service.
func (o ConfigurationServicePropertiesPtrOutput) Settings() ConfigurationServiceSettingsPtrOutput {
	return o.ApplyT(func(v *ConfigurationServiceProperties) *ConfigurationServiceSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(ConfigurationServiceSettingsPtrOutput)
}

// Application Configuration Service properties payload
type ConfigurationServicePropertiesResponse struct {
	// The generation of the Application Configuration Service.
	Generation *string `pulumi:"generation"`
	// Collection of instances belong to Application Configuration Service.
	Instances []ConfigurationServiceInstanceResponse `pulumi:"instances"`
	// State of the Application Configuration Service.
	ProvisioningState string `pulumi:"provisioningState"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests ConfigurationServiceResourceRequestsResponse `pulumi:"resourceRequests"`
	// The settings of Application Configuration Service.
	Settings *ConfigurationServiceSettingsResponse `pulumi:"settings"`
}

// Defaults sets the appropriate defaults for ConfigurationServicePropertiesResponse
func (val *ConfigurationServicePropertiesResponse) Defaults() *ConfigurationServicePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Generation == nil {
		generation_ := "Gen1"
		tmp.Generation = &generation_
	}
	return &tmp
}

// Application Configuration Service properties payload
type ConfigurationServicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationServicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServicePropertiesResponse)(nil)).Elem()
}

func (o ConfigurationServicePropertiesResponseOutput) ToConfigurationServicePropertiesResponseOutput() ConfigurationServicePropertiesResponseOutput {
	return o
}

func (o ConfigurationServicePropertiesResponseOutput) ToConfigurationServicePropertiesResponseOutputWithContext(ctx context.Context) ConfigurationServicePropertiesResponseOutput {
	return o
}

// The generation of the Application Configuration Service.
func (o ConfigurationServicePropertiesResponseOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationServicePropertiesResponse) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

// Collection of instances belong to Application Configuration Service.
func (o ConfigurationServicePropertiesResponseOutput) Instances() ConfigurationServiceInstanceResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationServicePropertiesResponse) []ConfigurationServiceInstanceResponse {
		return v.Instances
	}).(ConfigurationServiceInstanceResponseArrayOutput)
}

// State of the Application Configuration Service.
func (o ConfigurationServicePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServicePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o ConfigurationServicePropertiesResponseOutput) ResourceRequests() ConfigurationServiceResourceRequestsResponseOutput {
	return o.ApplyT(func(v ConfigurationServicePropertiesResponse) ConfigurationServiceResourceRequestsResponse {
		return v.ResourceRequests
	}).(ConfigurationServiceResourceRequestsResponseOutput)
}

// The settings of Application Configuration Service.
func (o ConfigurationServicePropertiesResponseOutput) Settings() ConfigurationServiceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConfigurationServicePropertiesResponse) *ConfigurationServiceSettingsResponse {
		return v.Settings
	}).(ConfigurationServiceSettingsResponsePtrOutput)
}

// Resource request payload of Application Configuration Service
type ConfigurationServiceResourceRequestsResponse struct {
	// Cpu allocated to each Application Configuration Service instance
	Cpu string `pulumi:"cpu"`
	// Instance count of the Application Configuration Service
	InstanceCount int `pulumi:"instanceCount"`
	// Memory allocated to each Application Configuration Service instance
	Memory string `pulumi:"memory"`
}

// Resource request payload of Application Configuration Service
type ConfigurationServiceResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceResourceRequestsResponse)(nil)).Elem()
}

func (o ConfigurationServiceResourceRequestsResponseOutput) ToConfigurationServiceResourceRequestsResponseOutput() ConfigurationServiceResourceRequestsResponseOutput {
	return o
}

func (o ConfigurationServiceResourceRequestsResponseOutput) ToConfigurationServiceResourceRequestsResponseOutputWithContext(ctx context.Context) ConfigurationServiceResourceRequestsResponseOutput {
	return o
}

// Cpu allocated to each Application Configuration Service instance
func (o ConfigurationServiceResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Instance count of the Application Configuration Service
func (o ConfigurationServiceResourceRequestsResponseOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigurationServiceResourceRequestsResponse) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Memory allocated to each Application Configuration Service instance
func (o ConfigurationServiceResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationServiceResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// The settings of Application Configuration Service.
type ConfigurationServiceSettings struct {
	// Property of git environment.
	GitProperty *ConfigurationServiceGitProperty `pulumi:"gitProperty"`
	// How often (in seconds) to check repository updates. Minimum value is 0.
	RefreshIntervalInSeconds *int `pulumi:"refreshIntervalInSeconds"`
}

// ConfigurationServiceSettingsInput is an input type that accepts ConfigurationServiceSettingsArgs and ConfigurationServiceSettingsOutput values.
// You can construct a concrete instance of `ConfigurationServiceSettingsInput` via:
//
//	ConfigurationServiceSettingsArgs{...}
type ConfigurationServiceSettingsInput interface {
	pulumi.Input

	ToConfigurationServiceSettingsOutput() ConfigurationServiceSettingsOutput
	ToConfigurationServiceSettingsOutputWithContext(context.Context) ConfigurationServiceSettingsOutput
}

// The settings of Application Configuration Service.
type ConfigurationServiceSettingsArgs struct {
	// Property of git environment.
	GitProperty ConfigurationServiceGitPropertyPtrInput `pulumi:"gitProperty"`
	// How often (in seconds) to check repository updates. Minimum value is 0.
	RefreshIntervalInSeconds pulumi.IntPtrInput `pulumi:"refreshIntervalInSeconds"`
}

func (ConfigurationServiceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceSettings)(nil)).Elem()
}

func (i ConfigurationServiceSettingsArgs) ToConfigurationServiceSettingsOutput() ConfigurationServiceSettingsOutput {
	return i.ToConfigurationServiceSettingsOutputWithContext(context.Background())
}

func (i ConfigurationServiceSettingsArgs) ToConfigurationServiceSettingsOutputWithContext(ctx context.Context) ConfigurationServiceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceSettingsOutput)
}

func (i ConfigurationServiceSettingsArgs) ToConfigurationServiceSettingsPtrOutput() ConfigurationServiceSettingsPtrOutput {
	return i.ToConfigurationServiceSettingsPtrOutputWithContext(context.Background())
}

func (i ConfigurationServiceSettingsArgs) ToConfigurationServiceSettingsPtrOutputWithContext(ctx context.Context) ConfigurationServiceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceSettingsOutput).ToConfigurationServiceSettingsPtrOutputWithContext(ctx)
}

// ConfigurationServiceSettingsPtrInput is an input type that accepts ConfigurationServiceSettingsArgs, ConfigurationServiceSettingsPtr and ConfigurationServiceSettingsPtrOutput values.
// You can construct a concrete instance of `ConfigurationServiceSettingsPtrInput` via:
//
//	        ConfigurationServiceSettingsArgs{...}
//
//	or:
//
//	        nil
type ConfigurationServiceSettingsPtrInput interface {
	pulumi.Input

	ToConfigurationServiceSettingsPtrOutput() ConfigurationServiceSettingsPtrOutput
	ToConfigurationServiceSettingsPtrOutputWithContext(context.Context) ConfigurationServiceSettingsPtrOutput
}

type configurationServiceSettingsPtrType ConfigurationServiceSettingsArgs

func ConfigurationServiceSettingsPtr(v *ConfigurationServiceSettingsArgs) ConfigurationServiceSettingsPtrInput {
	return (*configurationServiceSettingsPtrType)(v)
}

func (*configurationServiceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceSettings)(nil)).Elem()
}

func (i *configurationServiceSettingsPtrType) ToConfigurationServiceSettingsPtrOutput() ConfigurationServiceSettingsPtrOutput {
	return i.ToConfigurationServiceSettingsPtrOutputWithContext(context.Background())
}

func (i *configurationServiceSettingsPtrType) ToConfigurationServiceSettingsPtrOutputWithContext(ctx context.Context) ConfigurationServiceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationServiceSettingsPtrOutput)
}

// The settings of Application Configuration Service.
type ConfigurationServiceSettingsOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceSettings)(nil)).Elem()
}

func (o ConfigurationServiceSettingsOutput) ToConfigurationServiceSettingsOutput() ConfigurationServiceSettingsOutput {
	return o
}

func (o ConfigurationServiceSettingsOutput) ToConfigurationServiceSettingsOutputWithContext(ctx context.Context) ConfigurationServiceSettingsOutput {
	return o
}

func (o ConfigurationServiceSettingsOutput) ToConfigurationServiceSettingsPtrOutput() ConfigurationServiceSettingsPtrOutput {
	return o.ToConfigurationServiceSettingsPtrOutputWithContext(context.Background())
}

func (o ConfigurationServiceSettingsOutput) ToConfigurationServiceSettingsPtrOutputWithContext(ctx context.Context) ConfigurationServiceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationServiceSettings) *ConfigurationServiceSettings {
		return &v
	}).(ConfigurationServiceSettingsPtrOutput)
}

// Property of git environment.
func (o ConfigurationServiceSettingsOutput) GitProperty() ConfigurationServiceGitPropertyPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceSettings) *ConfigurationServiceGitProperty { return v.GitProperty }).(ConfigurationServiceGitPropertyPtrOutput)
}

// How often (in seconds) to check repository updates. Minimum value is 0.
func (o ConfigurationServiceSettingsOutput) RefreshIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceSettings) *int { return v.RefreshIntervalInSeconds }).(pulumi.IntPtrOutput)
}

type ConfigurationServiceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceSettings)(nil)).Elem()
}

func (o ConfigurationServiceSettingsPtrOutput) ToConfigurationServiceSettingsPtrOutput() ConfigurationServiceSettingsPtrOutput {
	return o
}

func (o ConfigurationServiceSettingsPtrOutput) ToConfigurationServiceSettingsPtrOutputWithContext(ctx context.Context) ConfigurationServiceSettingsPtrOutput {
	return o
}

func (o ConfigurationServiceSettingsPtrOutput) Elem() ConfigurationServiceSettingsOutput {
	return o.ApplyT(func(v *ConfigurationServiceSettings) ConfigurationServiceSettings {
		if v != nil {
			return *v
		}
		var ret ConfigurationServiceSettings
		return ret
	}).(ConfigurationServiceSettingsOutput)
}

// Property of git environment.
func (o ConfigurationServiceSettingsPtrOutput) GitProperty() ConfigurationServiceGitPropertyPtrOutput {
	return o.ApplyT(func(v *ConfigurationServiceSettings) *ConfigurationServiceGitProperty {
		if v == nil {
			return nil
		}
		return v.GitProperty
	}).(ConfigurationServiceGitPropertyPtrOutput)
}

// How often (in seconds) to check repository updates. Minimum value is 0.
func (o ConfigurationServiceSettingsPtrOutput) RefreshIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigurationServiceSettings) *int {
		if v == nil {
			return nil
		}
		return v.RefreshIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The settings of Application Configuration Service.
type ConfigurationServiceSettingsResponse struct {
	// Property of git environment.
	GitProperty *ConfigurationServiceGitPropertyResponse `pulumi:"gitProperty"`
	// How often (in seconds) to check repository updates. Minimum value is 0.
	RefreshIntervalInSeconds *int `pulumi:"refreshIntervalInSeconds"`
}

// The settings of Application Configuration Service.
type ConfigurationServiceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceSettingsResponse)(nil)).Elem()
}

func (o ConfigurationServiceSettingsResponseOutput) ToConfigurationServiceSettingsResponseOutput() ConfigurationServiceSettingsResponseOutput {
	return o
}

func (o ConfigurationServiceSettingsResponseOutput) ToConfigurationServiceSettingsResponseOutputWithContext(ctx context.Context) ConfigurationServiceSettingsResponseOutput {
	return o
}

// Property of git environment.
func (o ConfigurationServiceSettingsResponseOutput) GitProperty() ConfigurationServiceGitPropertyResponsePtrOutput {
	return o.ApplyT(func(v ConfigurationServiceSettingsResponse) *ConfigurationServiceGitPropertyResponse {
		return v.GitProperty
	}).(ConfigurationServiceGitPropertyResponsePtrOutput)
}

// How often (in seconds) to check repository updates. Minimum value is 0.
func (o ConfigurationServiceSettingsResponseOutput) RefreshIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigurationServiceSettingsResponse) *int { return v.RefreshIntervalInSeconds }).(pulumi.IntPtrOutput)
}

type ConfigurationServiceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceSettingsResponse)(nil)).Elem()
}

func (o ConfigurationServiceSettingsResponsePtrOutput) ToConfigurationServiceSettingsResponsePtrOutput() ConfigurationServiceSettingsResponsePtrOutput {
	return o
}

func (o ConfigurationServiceSettingsResponsePtrOutput) ToConfigurationServiceSettingsResponsePtrOutputWithContext(ctx context.Context) ConfigurationServiceSettingsResponsePtrOutput {
	return o
}

func (o ConfigurationServiceSettingsResponsePtrOutput) Elem() ConfigurationServiceSettingsResponseOutput {
	return o.ApplyT(func(v *ConfigurationServiceSettingsResponse) ConfigurationServiceSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ConfigurationServiceSettingsResponse
		return ret
	}).(ConfigurationServiceSettingsResponseOutput)
}

// Property of git environment.
func (o ConfigurationServiceSettingsResponsePtrOutput) GitProperty() ConfigurationServiceGitPropertyResponsePtrOutput {
	return o.ApplyT(func(v *ConfigurationServiceSettingsResponse) *ConfigurationServiceGitPropertyResponse {
		if v == nil {
			return nil
		}
		return v.GitProperty
	}).(ConfigurationServiceGitPropertyResponsePtrOutput)
}

// How often (in seconds) to check repository updates. Minimum value is 0.
func (o ConfigurationServiceSettingsResponsePtrOutput) RefreshIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigurationServiceSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RefreshIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Container liveness and readiness probe settings
type ContainerProbeSettings struct {
	// Indicates whether disable the liveness and readiness probe
	DisableProbe *bool `pulumi:"disableProbe"`
}

// ContainerProbeSettingsInput is an input type that accepts ContainerProbeSettingsArgs and ContainerProbeSettingsOutput values.
// You can construct a concrete instance of `ContainerProbeSettingsInput` via:
//
//	ContainerProbeSettingsArgs{...}
type ContainerProbeSettingsInput interface {
	pulumi.Input

	ToContainerProbeSettingsOutput() ContainerProbeSettingsOutput
	ToContainerProbeSettingsOutputWithContext(context.Context) ContainerProbeSettingsOutput
}

// Container liveness and readiness probe settings
type ContainerProbeSettingsArgs struct {
	// Indicates whether disable the liveness and readiness probe
	DisableProbe pulumi.BoolPtrInput `pulumi:"disableProbe"`
}

func (ContainerProbeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerProbeSettings)(nil)).Elem()
}

func (i ContainerProbeSettingsArgs) ToContainerProbeSettingsOutput() ContainerProbeSettingsOutput {
	return i.ToContainerProbeSettingsOutputWithContext(context.Background())
}

func (i ContainerProbeSettingsArgs) ToContainerProbeSettingsOutputWithContext(ctx context.Context) ContainerProbeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerProbeSettingsOutput)
}

func (i ContainerProbeSettingsArgs) ToContainerProbeSettingsPtrOutput() ContainerProbeSettingsPtrOutput {
	return i.ToContainerProbeSettingsPtrOutputWithContext(context.Background())
}

func (i ContainerProbeSettingsArgs) ToContainerProbeSettingsPtrOutputWithContext(ctx context.Context) ContainerProbeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerProbeSettingsOutput).ToContainerProbeSettingsPtrOutputWithContext(ctx)
}

// ContainerProbeSettingsPtrInput is an input type that accepts ContainerProbeSettingsArgs, ContainerProbeSettingsPtr and ContainerProbeSettingsPtrOutput values.
// You can construct a concrete instance of `ContainerProbeSettingsPtrInput` via:
//
//	        ContainerProbeSettingsArgs{...}
//
//	or:
//
//	        nil
type ContainerProbeSettingsPtrInput interface {
	pulumi.Input

	ToContainerProbeSettingsPtrOutput() ContainerProbeSettingsPtrOutput
	ToContainerProbeSettingsPtrOutputWithContext(context.Context) ContainerProbeSettingsPtrOutput
}

type containerProbeSettingsPtrType ContainerProbeSettingsArgs

func ContainerProbeSettingsPtr(v *ContainerProbeSettingsArgs) ContainerProbeSettingsPtrInput {
	return (*containerProbeSettingsPtrType)(v)
}

func (*containerProbeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerProbeSettings)(nil)).Elem()
}

func (i *containerProbeSettingsPtrType) ToContainerProbeSettingsPtrOutput() ContainerProbeSettingsPtrOutput {
	return i.ToContainerProbeSettingsPtrOutputWithContext(context.Background())
}

func (i *containerProbeSettingsPtrType) ToContainerProbeSettingsPtrOutputWithContext(ctx context.Context) ContainerProbeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerProbeSettingsPtrOutput)
}

// Container liveness and readiness probe settings
type ContainerProbeSettingsOutput struct{ *pulumi.OutputState }

func (ContainerProbeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerProbeSettings)(nil)).Elem()
}

func (o ContainerProbeSettingsOutput) ToContainerProbeSettingsOutput() ContainerProbeSettingsOutput {
	return o
}

func (o ContainerProbeSettingsOutput) ToContainerProbeSettingsOutputWithContext(ctx context.Context) ContainerProbeSettingsOutput {
	return o
}

func (o ContainerProbeSettingsOutput) ToContainerProbeSettingsPtrOutput() ContainerProbeSettingsPtrOutput {
	return o.ToContainerProbeSettingsPtrOutputWithContext(context.Background())
}

func (o ContainerProbeSettingsOutput) ToContainerProbeSettingsPtrOutputWithContext(ctx context.Context) ContainerProbeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerProbeSettings) *ContainerProbeSettings {
		return &v
	}).(ContainerProbeSettingsPtrOutput)
}

// Indicates whether disable the liveness and readiness probe
func (o ContainerProbeSettingsOutput) DisableProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerProbeSettings) *bool { return v.DisableProbe }).(pulumi.BoolPtrOutput)
}

type ContainerProbeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ContainerProbeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerProbeSettings)(nil)).Elem()
}

func (o ContainerProbeSettingsPtrOutput) ToContainerProbeSettingsPtrOutput() ContainerProbeSettingsPtrOutput {
	return o
}

func (o ContainerProbeSettingsPtrOutput) ToContainerProbeSettingsPtrOutputWithContext(ctx context.Context) ContainerProbeSettingsPtrOutput {
	return o
}

func (o ContainerProbeSettingsPtrOutput) Elem() ContainerProbeSettingsOutput {
	return o.ApplyT(func(v *ContainerProbeSettings) ContainerProbeSettings {
		if v != nil {
			return *v
		}
		var ret ContainerProbeSettings
		return ret
	}).(ContainerProbeSettingsOutput)
}

// Indicates whether disable the liveness and readiness probe
func (o ContainerProbeSettingsPtrOutput) DisableProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerProbeSettings) *bool {
		if v == nil {
			return nil
		}
		return v.DisableProbe
	}).(pulumi.BoolPtrOutput)
}

// Container liveness and readiness probe settings
type ContainerProbeSettingsResponse struct {
	// Indicates whether disable the liveness and readiness probe
	DisableProbe *bool `pulumi:"disableProbe"`
}

// Container liveness and readiness probe settings
type ContainerProbeSettingsResponseOutput struct{ *pulumi.OutputState }

func (ContainerProbeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerProbeSettingsResponse)(nil)).Elem()
}

func (o ContainerProbeSettingsResponseOutput) ToContainerProbeSettingsResponseOutput() ContainerProbeSettingsResponseOutput {
	return o
}

func (o ContainerProbeSettingsResponseOutput) ToContainerProbeSettingsResponseOutputWithContext(ctx context.Context) ContainerProbeSettingsResponseOutput {
	return o
}

// Indicates whether disable the liveness and readiness probe
func (o ContainerProbeSettingsResponseOutput) DisableProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerProbeSettingsResponse) *bool { return v.DisableProbe }).(pulumi.BoolPtrOutput)
}

type ContainerProbeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerProbeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerProbeSettingsResponse)(nil)).Elem()
}

func (o ContainerProbeSettingsResponsePtrOutput) ToContainerProbeSettingsResponsePtrOutput() ContainerProbeSettingsResponsePtrOutput {
	return o
}

func (o ContainerProbeSettingsResponsePtrOutput) ToContainerProbeSettingsResponsePtrOutputWithContext(ctx context.Context) ContainerProbeSettingsResponsePtrOutput {
	return o
}

func (o ContainerProbeSettingsResponsePtrOutput) Elem() ContainerProbeSettingsResponseOutput {
	return o.ApplyT(func(v *ContainerProbeSettingsResponse) ContainerProbeSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ContainerProbeSettingsResponse
		return ret
	}).(ContainerProbeSettingsResponseOutput)
}

// Indicates whether disable the liveness and readiness probe
func (o ContainerProbeSettingsResponsePtrOutput) DisableProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerProbeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableProbe
	}).(pulumi.BoolPtrOutput)
}

// The basic authentication properties for the container registry resource.
type ContainerRegistryBasicCredentials struct {
	// The password of the Container Registry.
	Password string `pulumi:"password"`
	// The login server of the Container Registry.
	Server string `pulumi:"server"`
	// The credential type of the container registry credentials.
	// Expected value is 'BasicAuth'.
	Type string `pulumi:"type"`
	// The username of the Container Registry.
	Username string `pulumi:"username"`
}

// ContainerRegistryBasicCredentialsInput is an input type that accepts ContainerRegistryBasicCredentialsArgs and ContainerRegistryBasicCredentialsOutput values.
// You can construct a concrete instance of `ContainerRegistryBasicCredentialsInput` via:
//
//	ContainerRegistryBasicCredentialsArgs{...}
type ContainerRegistryBasicCredentialsInput interface {
	pulumi.Input

	ToContainerRegistryBasicCredentialsOutput() ContainerRegistryBasicCredentialsOutput
	ToContainerRegistryBasicCredentialsOutputWithContext(context.Context) ContainerRegistryBasicCredentialsOutput
}

// The basic authentication properties for the container registry resource.
type ContainerRegistryBasicCredentialsArgs struct {
	// The password of the Container Registry.
	Password pulumi.StringInput `pulumi:"password"`
	// The login server of the Container Registry.
	Server pulumi.StringInput `pulumi:"server"`
	// The credential type of the container registry credentials.
	// Expected value is 'BasicAuth'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username of the Container Registry.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ContainerRegistryBasicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryBasicCredentials)(nil)).Elem()
}

func (i ContainerRegistryBasicCredentialsArgs) ToContainerRegistryBasicCredentialsOutput() ContainerRegistryBasicCredentialsOutput {
	return i.ToContainerRegistryBasicCredentialsOutputWithContext(context.Background())
}

func (i ContainerRegistryBasicCredentialsArgs) ToContainerRegistryBasicCredentialsOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryBasicCredentialsOutput)
}

func (i ContainerRegistryBasicCredentialsArgs) ToContainerRegistryBasicCredentialsPtrOutput() ContainerRegistryBasicCredentialsPtrOutput {
	return i.ToContainerRegistryBasicCredentialsPtrOutputWithContext(context.Background())
}

func (i ContainerRegistryBasicCredentialsArgs) ToContainerRegistryBasicCredentialsPtrOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryBasicCredentialsOutput).ToContainerRegistryBasicCredentialsPtrOutputWithContext(ctx)
}

// ContainerRegistryBasicCredentialsPtrInput is an input type that accepts ContainerRegistryBasicCredentialsArgs, ContainerRegistryBasicCredentialsPtr and ContainerRegistryBasicCredentialsPtrOutput values.
// You can construct a concrete instance of `ContainerRegistryBasicCredentialsPtrInput` via:
//
//	        ContainerRegistryBasicCredentialsArgs{...}
//
//	or:
//
//	        nil
type ContainerRegistryBasicCredentialsPtrInput interface {
	pulumi.Input

	ToContainerRegistryBasicCredentialsPtrOutput() ContainerRegistryBasicCredentialsPtrOutput
	ToContainerRegistryBasicCredentialsPtrOutputWithContext(context.Context) ContainerRegistryBasicCredentialsPtrOutput
}

type containerRegistryBasicCredentialsPtrType ContainerRegistryBasicCredentialsArgs

func ContainerRegistryBasicCredentialsPtr(v *ContainerRegistryBasicCredentialsArgs) ContainerRegistryBasicCredentialsPtrInput {
	return (*containerRegistryBasicCredentialsPtrType)(v)
}

func (*containerRegistryBasicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryBasicCredentials)(nil)).Elem()
}

func (i *containerRegistryBasicCredentialsPtrType) ToContainerRegistryBasicCredentialsPtrOutput() ContainerRegistryBasicCredentialsPtrOutput {
	return i.ToContainerRegistryBasicCredentialsPtrOutputWithContext(context.Background())
}

func (i *containerRegistryBasicCredentialsPtrType) ToContainerRegistryBasicCredentialsPtrOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryBasicCredentialsPtrOutput)
}

// The basic authentication properties for the container registry resource.
type ContainerRegistryBasicCredentialsOutput struct{ *pulumi.OutputState }

func (ContainerRegistryBasicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryBasicCredentials)(nil)).Elem()
}

func (o ContainerRegistryBasicCredentialsOutput) ToContainerRegistryBasicCredentialsOutput() ContainerRegistryBasicCredentialsOutput {
	return o
}

func (o ContainerRegistryBasicCredentialsOutput) ToContainerRegistryBasicCredentialsOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsOutput {
	return o
}

func (o ContainerRegistryBasicCredentialsOutput) ToContainerRegistryBasicCredentialsPtrOutput() ContainerRegistryBasicCredentialsPtrOutput {
	return o.ToContainerRegistryBasicCredentialsPtrOutputWithContext(context.Background())
}

func (o ContainerRegistryBasicCredentialsOutput) ToContainerRegistryBasicCredentialsPtrOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRegistryBasicCredentials) *ContainerRegistryBasicCredentials {
		return &v
	}).(ContainerRegistryBasicCredentialsPtrOutput)
}

// The password of the Container Registry.
func (o ContainerRegistryBasicCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The login server of the Container Registry.
func (o ContainerRegistryBasicCredentialsOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentials) string { return v.Server }).(pulumi.StringOutput)
}

// The credential type of the container registry credentials.
// Expected value is 'BasicAuth'.
func (o ContainerRegistryBasicCredentialsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentials) string { return v.Type }).(pulumi.StringOutput)
}

// The username of the Container Registry.
func (o ContainerRegistryBasicCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type ContainerRegistryBasicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ContainerRegistryBasicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryBasicCredentials)(nil)).Elem()
}

func (o ContainerRegistryBasicCredentialsPtrOutput) ToContainerRegistryBasicCredentialsPtrOutput() ContainerRegistryBasicCredentialsPtrOutput {
	return o
}

func (o ContainerRegistryBasicCredentialsPtrOutput) ToContainerRegistryBasicCredentialsPtrOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsPtrOutput {
	return o
}

func (o ContainerRegistryBasicCredentialsPtrOutput) Elem() ContainerRegistryBasicCredentialsOutput {
	return o.ApplyT(func(v *ContainerRegistryBasicCredentials) ContainerRegistryBasicCredentials {
		if v != nil {
			return *v
		}
		var ret ContainerRegistryBasicCredentials
		return ret
	}).(ContainerRegistryBasicCredentialsOutput)
}

// The password of the Container Registry.
func (o ContainerRegistryBasicCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryBasicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The login server of the Container Registry.
func (o ContainerRegistryBasicCredentialsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryBasicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// The credential type of the container registry credentials.
// Expected value is 'BasicAuth'.
func (o ContainerRegistryBasicCredentialsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryBasicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The username of the Container Registry.
func (o ContainerRegistryBasicCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryBasicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// The basic authentication properties for the container registry resource.
type ContainerRegistryBasicCredentialsResponse struct {
	// The login server of the Container Registry.
	Server string `pulumi:"server"`
	// The credential type of the container registry credentials.
	// Expected value is 'BasicAuth'.
	Type string `pulumi:"type"`
	// The username of the Container Registry.
	Username string `pulumi:"username"`
}

// The basic authentication properties for the container registry resource.
type ContainerRegistryBasicCredentialsResponseOutput struct{ *pulumi.OutputState }

func (ContainerRegistryBasicCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryBasicCredentialsResponse)(nil)).Elem()
}

func (o ContainerRegistryBasicCredentialsResponseOutput) ToContainerRegistryBasicCredentialsResponseOutput() ContainerRegistryBasicCredentialsResponseOutput {
	return o
}

func (o ContainerRegistryBasicCredentialsResponseOutput) ToContainerRegistryBasicCredentialsResponseOutputWithContext(ctx context.Context) ContainerRegistryBasicCredentialsResponseOutput {
	return o
}

// The login server of the Container Registry.
func (o ContainerRegistryBasicCredentialsResponseOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentialsResponse) string { return v.Server }).(pulumi.StringOutput)
}

// The credential type of the container registry credentials.
// Expected value is 'BasicAuth'.
func (o ContainerRegistryBasicCredentialsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentialsResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The username of the Container Registry.
func (o ContainerRegistryBasicCredentialsResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryBasicCredentialsResponse) string { return v.Username }).(pulumi.StringOutput)
}

// Container registry resource payload.
type ContainerRegistryProperties struct {
	// The credentials of the container registry resource.
	Credentials ContainerRegistryBasicCredentials `pulumi:"credentials"`
}

// ContainerRegistryPropertiesInput is an input type that accepts ContainerRegistryPropertiesArgs and ContainerRegistryPropertiesOutput values.
// You can construct a concrete instance of `ContainerRegistryPropertiesInput` via:
//
//	ContainerRegistryPropertiesArgs{...}
type ContainerRegistryPropertiesInput interface {
	pulumi.Input

	ToContainerRegistryPropertiesOutput() ContainerRegistryPropertiesOutput
	ToContainerRegistryPropertiesOutputWithContext(context.Context) ContainerRegistryPropertiesOutput
}

// Container registry resource payload.
type ContainerRegistryPropertiesArgs struct {
	// The credentials of the container registry resource.
	Credentials ContainerRegistryBasicCredentialsInput `pulumi:"credentials"`
}

func (ContainerRegistryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryProperties)(nil)).Elem()
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesOutput() ContainerRegistryPropertiesOutput {
	return i.ToContainerRegistryPropertiesOutputWithContext(context.Background())
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesOutputWithContext(ctx context.Context) ContainerRegistryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryPropertiesOutput)
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return i.ToContainerRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryPropertiesOutput).ToContainerRegistryPropertiesPtrOutputWithContext(ctx)
}

// ContainerRegistryPropertiesPtrInput is an input type that accepts ContainerRegistryPropertiesArgs, ContainerRegistryPropertiesPtr and ContainerRegistryPropertiesPtrOutput values.
// You can construct a concrete instance of `ContainerRegistryPropertiesPtrInput` via:
//
//	        ContainerRegistryPropertiesArgs{...}
//
//	or:
//
//	        nil
type ContainerRegistryPropertiesPtrInput interface {
	pulumi.Input

	ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput
	ToContainerRegistryPropertiesPtrOutputWithContext(context.Context) ContainerRegistryPropertiesPtrOutput
}

type containerRegistryPropertiesPtrType ContainerRegistryPropertiesArgs

func ContainerRegistryPropertiesPtr(v *ContainerRegistryPropertiesArgs) ContainerRegistryPropertiesPtrInput {
	return (*containerRegistryPropertiesPtrType)(v)
}

func (*containerRegistryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryProperties)(nil)).Elem()
}

func (i *containerRegistryPropertiesPtrType) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return i.ToContainerRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (i *containerRegistryPropertiesPtrType) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryPropertiesPtrOutput)
}

// Container registry resource payload.
type ContainerRegistryPropertiesOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryProperties)(nil)).Elem()
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesOutput() ContainerRegistryPropertiesOutput {
	return o
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesOutputWithContext(ctx context.Context) ContainerRegistryPropertiesOutput {
	return o
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return o.ToContainerRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRegistryProperties) *ContainerRegistryProperties {
		return &v
	}).(ContainerRegistryPropertiesPtrOutput)
}

// The credentials of the container registry resource.
func (o ContainerRegistryPropertiesOutput) Credentials() ContainerRegistryBasicCredentialsOutput {
	return o.ApplyT(func(v ContainerRegistryProperties) ContainerRegistryBasicCredentials { return v.Credentials }).(ContainerRegistryBasicCredentialsOutput)
}

type ContainerRegistryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryProperties)(nil)).Elem()
}

func (o ContainerRegistryPropertiesPtrOutput) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return o
}

func (o ContainerRegistryPropertiesPtrOutput) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return o
}

func (o ContainerRegistryPropertiesPtrOutput) Elem() ContainerRegistryPropertiesOutput {
	return o.ApplyT(func(v *ContainerRegistryProperties) ContainerRegistryProperties {
		if v != nil {
			return *v
		}
		var ret ContainerRegistryProperties
		return ret
	}).(ContainerRegistryPropertiesOutput)
}

// The credentials of the container registry resource.
func (o ContainerRegistryPropertiesPtrOutput) Credentials() ContainerRegistryBasicCredentialsPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryProperties) *ContainerRegistryBasicCredentials {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(ContainerRegistryBasicCredentialsPtrOutput)
}

// Container registry resource payload.
type ContainerRegistryPropertiesResponse struct {
	// The credentials of the container registry resource.
	Credentials ContainerRegistryBasicCredentialsResponse `pulumi:"credentials"`
	// State of the Container Registry.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Container registry resource payload.
type ContainerRegistryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryPropertiesResponse)(nil)).Elem()
}

func (o ContainerRegistryPropertiesResponseOutput) ToContainerRegistryPropertiesResponseOutput() ContainerRegistryPropertiesResponseOutput {
	return o
}

func (o ContainerRegistryPropertiesResponseOutput) ToContainerRegistryPropertiesResponseOutputWithContext(ctx context.Context) ContainerRegistryPropertiesResponseOutput {
	return o
}

// The credentials of the container registry resource.
func (o ContainerRegistryPropertiesResponseOutput) Credentials() ContainerRegistryBasicCredentialsResponseOutput {
	return o.ApplyT(func(v ContainerRegistryPropertiesResponse) ContainerRegistryBasicCredentialsResponse {
		return v.Credentials
	}).(ContainerRegistryBasicCredentialsResponseOutput)
}

// State of the Container Registry.
func (o ContainerRegistryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Properties of certificate imported from key vault.
type ContentCertificateProperties struct {
	// The content of uploaded certificate.
	Content *string `pulumi:"content"`
	// The type of the certificate source.
	// Expected value is 'ContentCertificate'.
	Type string `pulumi:"type"`
}

// ContentCertificatePropertiesInput is an input type that accepts ContentCertificatePropertiesArgs and ContentCertificatePropertiesOutput values.
// You can construct a concrete instance of `ContentCertificatePropertiesInput` via:
//
//	ContentCertificatePropertiesArgs{...}
type ContentCertificatePropertiesInput interface {
	pulumi.Input

	ToContentCertificatePropertiesOutput() ContentCertificatePropertiesOutput
	ToContentCertificatePropertiesOutputWithContext(context.Context) ContentCertificatePropertiesOutput
}

// Properties of certificate imported from key vault.
type ContentCertificatePropertiesArgs struct {
	// The content of uploaded certificate.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The type of the certificate source.
	// Expected value is 'ContentCertificate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContentCertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentCertificateProperties)(nil)).Elem()
}

func (i ContentCertificatePropertiesArgs) ToContentCertificatePropertiesOutput() ContentCertificatePropertiesOutput {
	return i.ToContentCertificatePropertiesOutputWithContext(context.Background())
}

func (i ContentCertificatePropertiesArgs) ToContentCertificatePropertiesOutputWithContext(ctx context.Context) ContentCertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentCertificatePropertiesOutput)
}

func (i ContentCertificatePropertiesArgs) ToContentCertificatePropertiesPtrOutput() ContentCertificatePropertiesPtrOutput {
	return i.ToContentCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i ContentCertificatePropertiesArgs) ToContentCertificatePropertiesPtrOutputWithContext(ctx context.Context) ContentCertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentCertificatePropertiesOutput).ToContentCertificatePropertiesPtrOutputWithContext(ctx)
}

// ContentCertificatePropertiesPtrInput is an input type that accepts ContentCertificatePropertiesArgs, ContentCertificatePropertiesPtr and ContentCertificatePropertiesPtrOutput values.
// You can construct a concrete instance of `ContentCertificatePropertiesPtrInput` via:
//
//	        ContentCertificatePropertiesArgs{...}
//
//	or:
//
//	        nil
type ContentCertificatePropertiesPtrInput interface {
	pulumi.Input

	ToContentCertificatePropertiesPtrOutput() ContentCertificatePropertiesPtrOutput
	ToContentCertificatePropertiesPtrOutputWithContext(context.Context) ContentCertificatePropertiesPtrOutput
}

type contentCertificatePropertiesPtrType ContentCertificatePropertiesArgs

func ContentCertificatePropertiesPtr(v *ContentCertificatePropertiesArgs) ContentCertificatePropertiesPtrInput {
	return (*contentCertificatePropertiesPtrType)(v)
}

func (*contentCertificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentCertificateProperties)(nil)).Elem()
}

func (i *contentCertificatePropertiesPtrType) ToContentCertificatePropertiesPtrOutput() ContentCertificatePropertiesPtrOutput {
	return i.ToContentCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *contentCertificatePropertiesPtrType) ToContentCertificatePropertiesPtrOutputWithContext(ctx context.Context) ContentCertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentCertificatePropertiesPtrOutput)
}

// Properties of certificate imported from key vault.
type ContentCertificatePropertiesOutput struct{ *pulumi.OutputState }

func (ContentCertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentCertificateProperties)(nil)).Elem()
}

func (o ContentCertificatePropertiesOutput) ToContentCertificatePropertiesOutput() ContentCertificatePropertiesOutput {
	return o
}

func (o ContentCertificatePropertiesOutput) ToContentCertificatePropertiesOutputWithContext(ctx context.Context) ContentCertificatePropertiesOutput {
	return o
}

func (o ContentCertificatePropertiesOutput) ToContentCertificatePropertiesPtrOutput() ContentCertificatePropertiesPtrOutput {
	return o.ToContentCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o ContentCertificatePropertiesOutput) ToContentCertificatePropertiesPtrOutputWithContext(ctx context.Context) ContentCertificatePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentCertificateProperties) *ContentCertificateProperties {
		return &v
	}).(ContentCertificatePropertiesPtrOutput)
}

// The content of uploaded certificate.
func (o ContentCertificatePropertiesOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentCertificateProperties) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The type of the certificate source.
// Expected value is 'ContentCertificate'.
func (o ContentCertificatePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificateProperties) string { return v.Type }).(pulumi.StringOutput)
}

type ContentCertificatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContentCertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentCertificateProperties)(nil)).Elem()
}

func (o ContentCertificatePropertiesPtrOutput) ToContentCertificatePropertiesPtrOutput() ContentCertificatePropertiesPtrOutput {
	return o
}

func (o ContentCertificatePropertiesPtrOutput) ToContentCertificatePropertiesPtrOutputWithContext(ctx context.Context) ContentCertificatePropertiesPtrOutput {
	return o
}

func (o ContentCertificatePropertiesPtrOutput) Elem() ContentCertificatePropertiesOutput {
	return o.ApplyT(func(v *ContentCertificateProperties) ContentCertificateProperties {
		if v != nil {
			return *v
		}
		var ret ContentCertificateProperties
		return ret
	}).(ContentCertificatePropertiesOutput)
}

// The content of uploaded certificate.
func (o ContentCertificatePropertiesPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The type of the certificate source.
// Expected value is 'ContentCertificate'.
func (o ContentCertificatePropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of certificate imported from key vault.
type ContentCertificatePropertiesResponse struct {
	// The activate date of certificate.
	ActivateDate string `pulumi:"activateDate"`
	// The domain list of certificate.
	DnsNames []string `pulumi:"dnsNames"`
	// The expiration date of certificate.
	ExpirationDate string `pulumi:"expirationDate"`
	// The issue date of certificate.
	IssuedDate string `pulumi:"issuedDate"`
	// The issuer of certificate.
	Issuer string `pulumi:"issuer"`
	// Provisioning state of the Certificate
	ProvisioningState string `pulumi:"provisioningState"`
	// The subject name of certificate.
	SubjectName string `pulumi:"subjectName"`
	// The thumbprint of certificate.
	Thumbprint string `pulumi:"thumbprint"`
	// The type of the certificate source.
	// Expected value is 'ContentCertificate'.
	Type string `pulumi:"type"`
}

// Properties of certificate imported from key vault.
type ContentCertificatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContentCertificatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentCertificatePropertiesResponse)(nil)).Elem()
}

func (o ContentCertificatePropertiesResponseOutput) ToContentCertificatePropertiesResponseOutput() ContentCertificatePropertiesResponseOutput {
	return o
}

func (o ContentCertificatePropertiesResponseOutput) ToContentCertificatePropertiesResponseOutputWithContext(ctx context.Context) ContentCertificatePropertiesResponseOutput {
	return o
}

// The activate date of certificate.
func (o ContentCertificatePropertiesResponseOutput) ActivateDate() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.ActivateDate }).(pulumi.StringOutput)
}

// The domain list of certificate.
func (o ContentCertificatePropertiesResponseOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// The expiration date of certificate.
func (o ContentCertificatePropertiesResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The issue date of certificate.
func (o ContentCertificatePropertiesResponseOutput) IssuedDate() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.IssuedDate }).(pulumi.StringOutput)
}

// The issuer of certificate.
func (o ContentCertificatePropertiesResponseOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.Issuer }).(pulumi.StringOutput)
}

// Provisioning state of the Certificate
func (o ContentCertificatePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The subject name of certificate.
func (o ContentCertificatePropertiesResponseOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.SubjectName }).(pulumi.StringOutput)
}

// The thumbprint of certificate.
func (o ContentCertificatePropertiesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The type of the certificate source.
// Expected value is 'ContentCertificate'.
func (o ContentCertificatePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContentCertificatePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Custom container payload
type CustomContainer struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
	Args []string `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
	Command []string `pulumi:"command"`
	// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
	ContainerImage *string `pulumi:"containerImage"`
	// Credential of the image registry
	ImageRegistryCredential *ImageRegistryCredential `pulumi:"imageRegistryCredential"`
	// Language framework of the container image uploaded. Supported values: "springboot", "", null.
	LanguageFramework *string `pulumi:"languageFramework"`
	// The name of the registry that contains the container image
	Server *string `pulumi:"server"`
}

// CustomContainerInput is an input type that accepts CustomContainerArgs and CustomContainerOutput values.
// You can construct a concrete instance of `CustomContainerInput` via:
//
//	CustomContainerArgs{...}
type CustomContainerInput interface {
	pulumi.Input

	ToCustomContainerOutput() CustomContainerOutput
	ToCustomContainerOutputWithContext(context.Context) CustomContainerOutput
}

// Custom container payload
type CustomContainerArgs struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
	Command pulumi.StringArrayInput `pulumi:"command"`
	// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
	ContainerImage pulumi.StringPtrInput `pulumi:"containerImage"`
	// Credential of the image registry
	ImageRegistryCredential ImageRegistryCredentialPtrInput `pulumi:"imageRegistryCredential"`
	// Language framework of the container image uploaded. Supported values: "springboot", "", null.
	LanguageFramework pulumi.StringPtrInput `pulumi:"languageFramework"`
	// The name of the registry that contains the container image
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (CustomContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomContainer)(nil)).Elem()
}

func (i CustomContainerArgs) ToCustomContainerOutput() CustomContainerOutput {
	return i.ToCustomContainerOutputWithContext(context.Background())
}

func (i CustomContainerArgs) ToCustomContainerOutputWithContext(ctx context.Context) CustomContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomContainerOutput)
}

func (i CustomContainerArgs) ToCustomContainerPtrOutput() CustomContainerPtrOutput {
	return i.ToCustomContainerPtrOutputWithContext(context.Background())
}

func (i CustomContainerArgs) ToCustomContainerPtrOutputWithContext(ctx context.Context) CustomContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomContainerOutput).ToCustomContainerPtrOutputWithContext(ctx)
}

// CustomContainerPtrInput is an input type that accepts CustomContainerArgs, CustomContainerPtr and CustomContainerPtrOutput values.
// You can construct a concrete instance of `CustomContainerPtrInput` via:
//
//	        CustomContainerArgs{...}
//
//	or:
//
//	        nil
type CustomContainerPtrInput interface {
	pulumi.Input

	ToCustomContainerPtrOutput() CustomContainerPtrOutput
	ToCustomContainerPtrOutputWithContext(context.Context) CustomContainerPtrOutput
}

type customContainerPtrType CustomContainerArgs

func CustomContainerPtr(v *CustomContainerArgs) CustomContainerPtrInput {
	return (*customContainerPtrType)(v)
}

func (*customContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomContainer)(nil)).Elem()
}

func (i *customContainerPtrType) ToCustomContainerPtrOutput() CustomContainerPtrOutput {
	return i.ToCustomContainerPtrOutputWithContext(context.Background())
}

func (i *customContainerPtrType) ToCustomContainerPtrOutputWithContext(ctx context.Context) CustomContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomContainerPtrOutput)
}

// Custom container payload
type CustomContainerOutput struct{ *pulumi.OutputState }

func (CustomContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomContainer)(nil)).Elem()
}

func (o CustomContainerOutput) ToCustomContainerOutput() CustomContainerOutput {
	return o
}

func (o CustomContainerOutput) ToCustomContainerOutputWithContext(ctx context.Context) CustomContainerOutput {
	return o
}

func (o CustomContainerOutput) ToCustomContainerPtrOutput() CustomContainerPtrOutput {
	return o.ToCustomContainerPtrOutputWithContext(context.Background())
}

func (o CustomContainerOutput) ToCustomContainerPtrOutputWithContext(ctx context.Context) CustomContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomContainer) *CustomContainer {
		return &v
	}).(CustomContainerPtrOutput)
}

// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
func (o CustomContainerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomContainer) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
func (o CustomContainerOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomContainer) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
func (o CustomContainerOutput) ContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainer) *string { return v.ContainerImage }).(pulumi.StringPtrOutput)
}

// Credential of the image registry
func (o CustomContainerOutput) ImageRegistryCredential() ImageRegistryCredentialPtrOutput {
	return o.ApplyT(func(v CustomContainer) *ImageRegistryCredential { return v.ImageRegistryCredential }).(ImageRegistryCredentialPtrOutput)
}

// Language framework of the container image uploaded. Supported values: "springboot", "", null.
func (o CustomContainerOutput) LanguageFramework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainer) *string { return v.LanguageFramework }).(pulumi.StringPtrOutput)
}

// The name of the registry that contains the container image
func (o CustomContainerOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainer) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type CustomContainerPtrOutput struct{ *pulumi.OutputState }

func (CustomContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomContainer)(nil)).Elem()
}

func (o CustomContainerPtrOutput) ToCustomContainerPtrOutput() CustomContainerPtrOutput {
	return o
}

func (o CustomContainerPtrOutput) ToCustomContainerPtrOutputWithContext(ctx context.Context) CustomContainerPtrOutput {
	return o
}

func (o CustomContainerPtrOutput) Elem() CustomContainerOutput {
	return o.ApplyT(func(v *CustomContainer) CustomContainer {
		if v != nil {
			return *v
		}
		var ret CustomContainer
		return ret
	}).(CustomContainerOutput)
}

// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
func (o CustomContainerPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomContainer) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
func (o CustomContainerPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomContainer) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
func (o CustomContainerPtrOutput) ContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerImage
	}).(pulumi.StringPtrOutput)
}

// Credential of the image registry
func (o CustomContainerPtrOutput) ImageRegistryCredential() ImageRegistryCredentialPtrOutput {
	return o.ApplyT(func(v *CustomContainer) *ImageRegistryCredential {
		if v == nil {
			return nil
		}
		return v.ImageRegistryCredential
	}).(ImageRegistryCredentialPtrOutput)
}

// Language framework of the container image uploaded. Supported values: "springboot", "", null.
func (o CustomContainerPtrOutput) LanguageFramework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainer) *string {
		if v == nil {
			return nil
		}
		return v.LanguageFramework
	}).(pulumi.StringPtrOutput)
}

// The name of the registry that contains the container image
func (o CustomContainerPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainer) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// Custom container payload
type CustomContainerResponse struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
	Args []string `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
	Command []string `pulumi:"command"`
	// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
	ContainerImage *string `pulumi:"containerImage"`
	// Credential of the image registry
	ImageRegistryCredential *ImageRegistryCredentialResponse `pulumi:"imageRegistryCredential"`
	// Language framework of the container image uploaded. Supported values: "springboot", "", null.
	LanguageFramework *string `pulumi:"languageFramework"`
	// The name of the registry that contains the container image
	Server *string `pulumi:"server"`
}

// Custom container payload
type CustomContainerResponseOutput struct{ *pulumi.OutputState }

func (CustomContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomContainerResponse)(nil)).Elem()
}

func (o CustomContainerResponseOutput) ToCustomContainerResponseOutput() CustomContainerResponseOutput {
	return o
}

func (o CustomContainerResponseOutput) ToCustomContainerResponseOutputWithContext(ctx context.Context) CustomContainerResponseOutput {
	return o
}

// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
func (o CustomContainerResponseOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomContainerResponse) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
func (o CustomContainerResponseOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomContainerResponse) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
func (o CustomContainerResponseOutput) ContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainerResponse) *string { return v.ContainerImage }).(pulumi.StringPtrOutput)
}

// Credential of the image registry
func (o CustomContainerResponseOutput) ImageRegistryCredential() ImageRegistryCredentialResponsePtrOutput {
	return o.ApplyT(func(v CustomContainerResponse) *ImageRegistryCredentialResponse { return v.ImageRegistryCredential }).(ImageRegistryCredentialResponsePtrOutput)
}

// Language framework of the container image uploaded. Supported values: "springboot", "", null.
func (o CustomContainerResponseOutput) LanguageFramework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainerResponse) *string { return v.LanguageFramework }).(pulumi.StringPtrOutput)
}

// The name of the registry that contains the container image
func (o CustomContainerResponseOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainerResponse) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type CustomContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomContainerResponse)(nil)).Elem()
}

func (o CustomContainerResponsePtrOutput) ToCustomContainerResponsePtrOutput() CustomContainerResponsePtrOutput {
	return o
}

func (o CustomContainerResponsePtrOutput) ToCustomContainerResponsePtrOutputWithContext(ctx context.Context) CustomContainerResponsePtrOutput {
	return o
}

func (o CustomContainerResponsePtrOutput) Elem() CustomContainerResponseOutput {
	return o.ApplyT(func(v *CustomContainerResponse) CustomContainerResponse {
		if v != nil {
			return *v
		}
		var ret CustomContainerResponse
		return ret
	}).(CustomContainerResponseOutput)
}

// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
func (o CustomContainerResponsePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomContainerResponse) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
func (o CustomContainerResponsePtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomContainerResponse) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry
func (o CustomContainerResponsePtrOutput) ContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContainerImage
	}).(pulumi.StringPtrOutput)
}

// Credential of the image registry
func (o CustomContainerResponsePtrOutput) ImageRegistryCredential() ImageRegistryCredentialResponsePtrOutput {
	return o.ApplyT(func(v *CustomContainerResponse) *ImageRegistryCredentialResponse {
		if v == nil {
			return nil
		}
		return v.ImageRegistryCredential
	}).(ImageRegistryCredentialResponsePtrOutput)
}

// Language framework of the container image uploaded. Supported values: "springboot", "", null.
func (o CustomContainerResponsePtrOutput) LanguageFramework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.LanguageFramework
	}).(pulumi.StringPtrOutput)
}

// The name of the registry that contains the container image
func (o CustomContainerResponsePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// Custom container user source info
type CustomContainerUserSourceInfo struct {
	// Custom container payload
	CustomContainer *CustomContainer `pulumi:"customContainer"`
	// Type of the source uploaded
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// CustomContainerUserSourceInfoInput is an input type that accepts CustomContainerUserSourceInfoArgs and CustomContainerUserSourceInfoOutput values.
// You can construct a concrete instance of `CustomContainerUserSourceInfoInput` via:
//
//	CustomContainerUserSourceInfoArgs{...}
type CustomContainerUserSourceInfoInput interface {
	pulumi.Input

	ToCustomContainerUserSourceInfoOutput() CustomContainerUserSourceInfoOutput
	ToCustomContainerUserSourceInfoOutputWithContext(context.Context) CustomContainerUserSourceInfoOutput
}

// Custom container user source info
type CustomContainerUserSourceInfoArgs struct {
	// Custom container payload
	CustomContainer CustomContainerPtrInput `pulumi:"customContainer"`
	// Type of the source uploaded
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (CustomContainerUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomContainerUserSourceInfo)(nil)).Elem()
}

func (i CustomContainerUserSourceInfoArgs) ToCustomContainerUserSourceInfoOutput() CustomContainerUserSourceInfoOutput {
	return i.ToCustomContainerUserSourceInfoOutputWithContext(context.Background())
}

func (i CustomContainerUserSourceInfoArgs) ToCustomContainerUserSourceInfoOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomContainerUserSourceInfoOutput)
}

func (i CustomContainerUserSourceInfoArgs) ToCustomContainerUserSourceInfoPtrOutput() CustomContainerUserSourceInfoPtrOutput {
	return i.ToCustomContainerUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i CustomContainerUserSourceInfoArgs) ToCustomContainerUserSourceInfoPtrOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomContainerUserSourceInfoOutput).ToCustomContainerUserSourceInfoPtrOutputWithContext(ctx)
}

// CustomContainerUserSourceInfoPtrInput is an input type that accepts CustomContainerUserSourceInfoArgs, CustomContainerUserSourceInfoPtr and CustomContainerUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `CustomContainerUserSourceInfoPtrInput` via:
//
//	        CustomContainerUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type CustomContainerUserSourceInfoPtrInput interface {
	pulumi.Input

	ToCustomContainerUserSourceInfoPtrOutput() CustomContainerUserSourceInfoPtrOutput
	ToCustomContainerUserSourceInfoPtrOutputWithContext(context.Context) CustomContainerUserSourceInfoPtrOutput
}

type customContainerUserSourceInfoPtrType CustomContainerUserSourceInfoArgs

func CustomContainerUserSourceInfoPtr(v *CustomContainerUserSourceInfoArgs) CustomContainerUserSourceInfoPtrInput {
	return (*customContainerUserSourceInfoPtrType)(v)
}

func (*customContainerUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomContainerUserSourceInfo)(nil)).Elem()
}

func (i *customContainerUserSourceInfoPtrType) ToCustomContainerUserSourceInfoPtrOutput() CustomContainerUserSourceInfoPtrOutput {
	return i.ToCustomContainerUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *customContainerUserSourceInfoPtrType) ToCustomContainerUserSourceInfoPtrOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomContainerUserSourceInfoPtrOutput)
}

// Custom container user source info
type CustomContainerUserSourceInfoOutput struct{ *pulumi.OutputState }

func (CustomContainerUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomContainerUserSourceInfo)(nil)).Elem()
}

func (o CustomContainerUserSourceInfoOutput) ToCustomContainerUserSourceInfoOutput() CustomContainerUserSourceInfoOutput {
	return o
}

func (o CustomContainerUserSourceInfoOutput) ToCustomContainerUserSourceInfoOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoOutput {
	return o
}

func (o CustomContainerUserSourceInfoOutput) ToCustomContainerUserSourceInfoPtrOutput() CustomContainerUserSourceInfoPtrOutput {
	return o.ToCustomContainerUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o CustomContainerUserSourceInfoOutput) ToCustomContainerUserSourceInfoPtrOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomContainerUserSourceInfo) *CustomContainerUserSourceInfo {
		return &v
	}).(CustomContainerUserSourceInfoPtrOutput)
}

// Custom container payload
func (o CustomContainerUserSourceInfoOutput) CustomContainer() CustomContainerPtrOutput {
	return o.ApplyT(func(v CustomContainerUserSourceInfo) *CustomContainer { return v.CustomContainer }).(CustomContainerPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Container'.
func (o CustomContainerUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomContainerUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o CustomContainerUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainerUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type CustomContainerUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (CustomContainerUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomContainerUserSourceInfo)(nil)).Elem()
}

func (o CustomContainerUserSourceInfoPtrOutput) ToCustomContainerUserSourceInfoPtrOutput() CustomContainerUserSourceInfoPtrOutput {
	return o
}

func (o CustomContainerUserSourceInfoPtrOutput) ToCustomContainerUserSourceInfoPtrOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoPtrOutput {
	return o
}

func (o CustomContainerUserSourceInfoPtrOutput) Elem() CustomContainerUserSourceInfoOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfo) CustomContainerUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret CustomContainerUserSourceInfo
		return ret
	}).(CustomContainerUserSourceInfoOutput)
}

// Custom container payload
func (o CustomContainerUserSourceInfoPtrOutput) CustomContainer() CustomContainerPtrOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfo) *CustomContainer {
		if v == nil {
			return nil
		}
		return v.CustomContainer
	}).(CustomContainerPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Container'.
func (o CustomContainerUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o CustomContainerUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Custom container user source info
type CustomContainerUserSourceInfoResponse struct {
	// Custom container payload
	CustomContainer *CustomContainerResponse `pulumi:"customContainer"`
	// Type of the source uploaded
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Custom container user source info
type CustomContainerUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (CustomContainerUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomContainerUserSourceInfoResponse)(nil)).Elem()
}

func (o CustomContainerUserSourceInfoResponseOutput) ToCustomContainerUserSourceInfoResponseOutput() CustomContainerUserSourceInfoResponseOutput {
	return o
}

func (o CustomContainerUserSourceInfoResponseOutput) ToCustomContainerUserSourceInfoResponseOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoResponseOutput {
	return o
}

// Custom container payload
func (o CustomContainerUserSourceInfoResponseOutput) CustomContainer() CustomContainerResponsePtrOutput {
	return o.ApplyT(func(v CustomContainerUserSourceInfoResponse) *CustomContainerResponse { return v.CustomContainer }).(CustomContainerResponsePtrOutput)
}

// Type of the source uploaded
// Expected value is 'Container'.
func (o CustomContainerUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomContainerUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o CustomContainerUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomContainerUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type CustomContainerUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomContainerUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomContainerUserSourceInfoResponse)(nil)).Elem()
}

func (o CustomContainerUserSourceInfoResponsePtrOutput) ToCustomContainerUserSourceInfoResponsePtrOutput() CustomContainerUserSourceInfoResponsePtrOutput {
	return o
}

func (o CustomContainerUserSourceInfoResponsePtrOutput) ToCustomContainerUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) CustomContainerUserSourceInfoResponsePtrOutput {
	return o
}

func (o CustomContainerUserSourceInfoResponsePtrOutput) Elem() CustomContainerUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfoResponse) CustomContainerUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret CustomContainerUserSourceInfoResponse
		return ret
	}).(CustomContainerUserSourceInfoResponseOutput)
}

// Custom container payload
func (o CustomContainerUserSourceInfoResponsePtrOutput) CustomContainer() CustomContainerResponsePtrOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfoResponse) *CustomContainerResponse {
		if v == nil {
			return nil
		}
		return v.CustomContainer
	}).(CustomContainerResponsePtrOutput)
}

// Type of the source uploaded
// Expected value is 'Container'.
func (o CustomContainerUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o CustomContainerUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomContainerUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Custom domain of app resource payload.
type CustomDomainProperties struct {
	// The bound certificate name of domain.
	CertName *string `pulumi:"certName"`
	// The thumbprint of bound certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// CustomDomainPropertiesInput is an input type that accepts CustomDomainPropertiesArgs and CustomDomainPropertiesOutput values.
// You can construct a concrete instance of `CustomDomainPropertiesInput` via:
//
//	CustomDomainPropertiesArgs{...}
type CustomDomainPropertiesInput interface {
	pulumi.Input

	ToCustomDomainPropertiesOutput() CustomDomainPropertiesOutput
	ToCustomDomainPropertiesOutputWithContext(context.Context) CustomDomainPropertiesOutput
}

// Custom domain of app resource payload.
type CustomDomainPropertiesArgs struct {
	// The bound certificate name of domain.
	CertName pulumi.StringPtrInput `pulumi:"certName"`
	// The thumbprint of bound certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (CustomDomainPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainProperties)(nil)).Elem()
}

func (i CustomDomainPropertiesArgs) ToCustomDomainPropertiesOutput() CustomDomainPropertiesOutput {
	return i.ToCustomDomainPropertiesOutputWithContext(context.Background())
}

func (i CustomDomainPropertiesArgs) ToCustomDomainPropertiesOutputWithContext(ctx context.Context) CustomDomainPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesOutput)
}

func (i CustomDomainPropertiesArgs) ToCustomDomainPropertiesPtrOutput() CustomDomainPropertiesPtrOutput {
	return i.ToCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i CustomDomainPropertiesArgs) ToCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) CustomDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesOutput).ToCustomDomainPropertiesPtrOutputWithContext(ctx)
}

// CustomDomainPropertiesPtrInput is an input type that accepts CustomDomainPropertiesArgs, CustomDomainPropertiesPtr and CustomDomainPropertiesPtrOutput values.
// You can construct a concrete instance of `CustomDomainPropertiesPtrInput` via:
//
//	        CustomDomainPropertiesArgs{...}
//
//	or:
//
//	        nil
type CustomDomainPropertiesPtrInput interface {
	pulumi.Input

	ToCustomDomainPropertiesPtrOutput() CustomDomainPropertiesPtrOutput
	ToCustomDomainPropertiesPtrOutputWithContext(context.Context) CustomDomainPropertiesPtrOutput
}

type customDomainPropertiesPtrType CustomDomainPropertiesArgs

func CustomDomainPropertiesPtr(v *CustomDomainPropertiesArgs) CustomDomainPropertiesPtrInput {
	return (*customDomainPropertiesPtrType)(v)
}

func (*customDomainPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainProperties)(nil)).Elem()
}

func (i *customDomainPropertiesPtrType) ToCustomDomainPropertiesPtrOutput() CustomDomainPropertiesPtrOutput {
	return i.ToCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i *customDomainPropertiesPtrType) ToCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) CustomDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesPtrOutput)
}

// Custom domain of app resource payload.
type CustomDomainPropertiesOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainProperties)(nil)).Elem()
}

func (o CustomDomainPropertiesOutput) ToCustomDomainPropertiesOutput() CustomDomainPropertiesOutput {
	return o
}

func (o CustomDomainPropertiesOutput) ToCustomDomainPropertiesOutputWithContext(ctx context.Context) CustomDomainPropertiesOutput {
	return o
}

func (o CustomDomainPropertiesOutput) ToCustomDomainPropertiesPtrOutput() CustomDomainPropertiesPtrOutput {
	return o.ToCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (o CustomDomainPropertiesOutput) ToCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) CustomDomainPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomDomainProperties) *CustomDomainProperties {
		return &v
	}).(CustomDomainPropertiesPtrOutput)
}

// The bound certificate name of domain.
func (o CustomDomainPropertiesOutput) CertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainProperties) *string { return v.CertName }).(pulumi.StringPtrOutput)
}

// The thumbprint of bound certificate.
func (o CustomDomainPropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type CustomDomainPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainProperties)(nil)).Elem()
}

func (o CustomDomainPropertiesPtrOutput) ToCustomDomainPropertiesPtrOutput() CustomDomainPropertiesPtrOutput {
	return o
}

func (o CustomDomainPropertiesPtrOutput) ToCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) CustomDomainPropertiesPtrOutput {
	return o
}

func (o CustomDomainPropertiesPtrOutput) Elem() CustomDomainPropertiesOutput {
	return o.ApplyT(func(v *CustomDomainProperties) CustomDomainProperties {
		if v != nil {
			return *v
		}
		var ret CustomDomainProperties
		return ret
	}).(CustomDomainPropertiesOutput)
}

// The bound certificate name of domain.
func (o CustomDomainPropertiesPtrOutput) CertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertName
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of bound certificate.
func (o CustomDomainPropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Custom domain of app resource payload.
type CustomDomainPropertiesResponse struct {
	// The app name of domain.
	AppName string `pulumi:"appName"`
	// The bound certificate name of domain.
	CertName *string `pulumi:"certName"`
	// Provisioning state of the Domain
	ProvisioningState string `pulumi:"provisioningState"`
	// The thumbprint of bound certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// Custom domain of app resource payload.
type CustomDomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPropertiesResponse)(nil)).Elem()
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput {
	return o
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) CustomDomainPropertiesResponseOutput {
	return o
}

// The app name of domain.
func (o CustomDomainPropertiesResponseOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.AppName }).(pulumi.StringOutput)
}

// The bound certificate name of domain.
func (o CustomDomainPropertiesResponseOutput) CertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) *string { return v.CertName }).(pulumi.StringPtrOutput)
}

// Provisioning state of the Domain
func (o CustomDomainPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The thumbprint of bound certificate.
func (o CustomDomainPropertiesResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Custom persistent disk resource payload.
type CustomPersistentDiskResource struct {
	// Properties of the custom persistent disk resource payload.
	CustomPersistentDiskProperties *AzureFileVolume `pulumi:"customPersistentDiskProperties"`
	// The resource id of Azure Spring Apps Storage resource.
	StorageId string `pulumi:"storageId"`
}

// Defaults sets the appropriate defaults for CustomPersistentDiskResource
func (val *CustomPersistentDiskResource) Defaults() *CustomPersistentDiskResource {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CustomPersistentDiskProperties = tmp.CustomPersistentDiskProperties.Defaults()

	return &tmp
}

// CustomPersistentDiskResourceInput is an input type that accepts CustomPersistentDiskResourceArgs and CustomPersistentDiskResourceOutput values.
// You can construct a concrete instance of `CustomPersistentDiskResourceInput` via:
//
//	CustomPersistentDiskResourceArgs{...}
type CustomPersistentDiskResourceInput interface {
	pulumi.Input

	ToCustomPersistentDiskResourceOutput() CustomPersistentDiskResourceOutput
	ToCustomPersistentDiskResourceOutputWithContext(context.Context) CustomPersistentDiskResourceOutput
}

// Custom persistent disk resource payload.
type CustomPersistentDiskResourceArgs struct {
	// Properties of the custom persistent disk resource payload.
	CustomPersistentDiskProperties AzureFileVolumePtrInput `pulumi:"customPersistentDiskProperties"`
	// The resource id of Azure Spring Apps Storage resource.
	StorageId pulumi.StringInput `pulumi:"storageId"`
}

// Defaults sets the appropriate defaults for CustomPersistentDiskResourceArgs
func (val *CustomPersistentDiskResourceArgs) Defaults() *CustomPersistentDiskResourceArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (CustomPersistentDiskResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPersistentDiskResource)(nil)).Elem()
}

func (i CustomPersistentDiskResourceArgs) ToCustomPersistentDiskResourceOutput() CustomPersistentDiskResourceOutput {
	return i.ToCustomPersistentDiskResourceOutputWithContext(context.Background())
}

func (i CustomPersistentDiskResourceArgs) ToCustomPersistentDiskResourceOutputWithContext(ctx context.Context) CustomPersistentDiskResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPersistentDiskResourceOutput)
}

// CustomPersistentDiskResourceArrayInput is an input type that accepts CustomPersistentDiskResourceArray and CustomPersistentDiskResourceArrayOutput values.
// You can construct a concrete instance of `CustomPersistentDiskResourceArrayInput` via:
//
//	CustomPersistentDiskResourceArray{ CustomPersistentDiskResourceArgs{...} }
type CustomPersistentDiskResourceArrayInput interface {
	pulumi.Input

	ToCustomPersistentDiskResourceArrayOutput() CustomPersistentDiskResourceArrayOutput
	ToCustomPersistentDiskResourceArrayOutputWithContext(context.Context) CustomPersistentDiskResourceArrayOutput
}

type CustomPersistentDiskResourceArray []CustomPersistentDiskResourceInput

func (CustomPersistentDiskResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomPersistentDiskResource)(nil)).Elem()
}

func (i CustomPersistentDiskResourceArray) ToCustomPersistentDiskResourceArrayOutput() CustomPersistentDiskResourceArrayOutput {
	return i.ToCustomPersistentDiskResourceArrayOutputWithContext(context.Background())
}

func (i CustomPersistentDiskResourceArray) ToCustomPersistentDiskResourceArrayOutputWithContext(ctx context.Context) CustomPersistentDiskResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPersistentDiskResourceArrayOutput)
}

// Custom persistent disk resource payload.
type CustomPersistentDiskResourceOutput struct{ *pulumi.OutputState }

func (CustomPersistentDiskResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPersistentDiskResource)(nil)).Elem()
}

func (o CustomPersistentDiskResourceOutput) ToCustomPersistentDiskResourceOutput() CustomPersistentDiskResourceOutput {
	return o
}

func (o CustomPersistentDiskResourceOutput) ToCustomPersistentDiskResourceOutputWithContext(ctx context.Context) CustomPersistentDiskResourceOutput {
	return o
}

// Properties of the custom persistent disk resource payload.
func (o CustomPersistentDiskResourceOutput) CustomPersistentDiskProperties() AzureFileVolumePtrOutput {
	return o.ApplyT(func(v CustomPersistentDiskResource) *AzureFileVolume { return v.CustomPersistentDiskProperties }).(AzureFileVolumePtrOutput)
}

// The resource id of Azure Spring Apps Storage resource.
func (o CustomPersistentDiskResourceOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPersistentDiskResource) string { return v.StorageId }).(pulumi.StringOutput)
}

type CustomPersistentDiskResourceArrayOutput struct{ *pulumi.OutputState }

func (CustomPersistentDiskResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomPersistentDiskResource)(nil)).Elem()
}

func (o CustomPersistentDiskResourceArrayOutput) ToCustomPersistentDiskResourceArrayOutput() CustomPersistentDiskResourceArrayOutput {
	return o
}

func (o CustomPersistentDiskResourceArrayOutput) ToCustomPersistentDiskResourceArrayOutputWithContext(ctx context.Context) CustomPersistentDiskResourceArrayOutput {
	return o
}

func (o CustomPersistentDiskResourceArrayOutput) Index(i pulumi.IntInput) CustomPersistentDiskResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomPersistentDiskResource {
		return vs[0].([]CustomPersistentDiskResource)[vs[1].(int)]
	}).(CustomPersistentDiskResourceOutput)
}

// Custom persistent disk resource payload.
type CustomPersistentDiskResourceResponse struct {
	// Properties of the custom persistent disk resource payload.
	CustomPersistentDiskProperties *AzureFileVolumeResponse `pulumi:"customPersistentDiskProperties"`
	// The resource id of Azure Spring Apps Storage resource.
	StorageId string `pulumi:"storageId"`
}

// Defaults sets the appropriate defaults for CustomPersistentDiskResourceResponse
func (val *CustomPersistentDiskResourceResponse) Defaults() *CustomPersistentDiskResourceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CustomPersistentDiskProperties = tmp.CustomPersistentDiskProperties.Defaults()

	return &tmp
}

// Custom persistent disk resource payload.
type CustomPersistentDiskResourceResponseOutput struct{ *pulumi.OutputState }

func (CustomPersistentDiskResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPersistentDiskResourceResponse)(nil)).Elem()
}

func (o CustomPersistentDiskResourceResponseOutput) ToCustomPersistentDiskResourceResponseOutput() CustomPersistentDiskResourceResponseOutput {
	return o
}

func (o CustomPersistentDiskResourceResponseOutput) ToCustomPersistentDiskResourceResponseOutputWithContext(ctx context.Context) CustomPersistentDiskResourceResponseOutput {
	return o
}

// Properties of the custom persistent disk resource payload.
func (o CustomPersistentDiskResourceResponseOutput) CustomPersistentDiskProperties() AzureFileVolumeResponsePtrOutput {
	return o.ApplyT(func(v CustomPersistentDiskResourceResponse) *AzureFileVolumeResponse {
		return v.CustomPersistentDiskProperties
	}).(AzureFileVolumeResponsePtrOutput)
}

// The resource id of Azure Spring Apps Storage resource.
func (o CustomPersistentDiskResourceResponseOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPersistentDiskResourceResponse) string { return v.StorageId }).(pulumi.StringOutput)
}

type CustomPersistentDiskResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomPersistentDiskResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomPersistentDiskResourceResponse)(nil)).Elem()
}

func (o CustomPersistentDiskResourceResponseArrayOutput) ToCustomPersistentDiskResourceResponseArrayOutput() CustomPersistentDiskResourceResponseArrayOutput {
	return o
}

func (o CustomPersistentDiskResourceResponseArrayOutput) ToCustomPersistentDiskResourceResponseArrayOutputWithContext(ctx context.Context) CustomPersistentDiskResourceResponseArrayOutput {
	return o
}

func (o CustomPersistentDiskResourceResponseArrayOutput) Index(i pulumi.IntInput) CustomPersistentDiskResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomPersistentDiskResourceResponse {
		return vs[0].([]CustomPersistentDiskResourceResponse)[vs[1].(int)]
	}).(CustomPersistentDiskResourceResponseOutput)
}

// Azure Spring Apps App Instance Custom scaling rule.
type CustomScaleRule struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Metadata properties to describe custom scale rule.
	Metadata map[string]string `pulumi:"metadata"`
	// Type of the custom scale rule
	// eg: azure-servicebus, redis etc.
	Type *string `pulumi:"type"`
}

// CustomScaleRuleInput is an input type that accepts CustomScaleRuleArgs and CustomScaleRuleOutput values.
// You can construct a concrete instance of `CustomScaleRuleInput` via:
//
//	CustomScaleRuleArgs{...}
type CustomScaleRuleInput interface {
	pulumi.Input

	ToCustomScaleRuleOutput() CustomScaleRuleOutput
	ToCustomScaleRuleOutputWithContext(context.Context) CustomScaleRuleOutput
}

// Azure Spring Apps App Instance Custom scaling rule.
type CustomScaleRuleArgs struct {
	// Authentication secrets for the custom scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Metadata properties to describe custom scale rule.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Type of the custom scale rule
	// eg: azure-servicebus, redis etc.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomScaleRule)(nil)).Elem()
}

func (i CustomScaleRuleArgs) ToCustomScaleRuleOutput() CustomScaleRuleOutput {
	return i.ToCustomScaleRuleOutputWithContext(context.Background())
}

func (i CustomScaleRuleArgs) ToCustomScaleRuleOutputWithContext(ctx context.Context) CustomScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomScaleRuleOutput)
}

func (i CustomScaleRuleArgs) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return i.ToCustomScaleRulePtrOutputWithContext(context.Background())
}

func (i CustomScaleRuleArgs) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomScaleRuleOutput).ToCustomScaleRulePtrOutputWithContext(ctx)
}

// CustomScaleRulePtrInput is an input type that accepts CustomScaleRuleArgs, CustomScaleRulePtr and CustomScaleRulePtrOutput values.
// You can construct a concrete instance of `CustomScaleRulePtrInput` via:
//
//	        CustomScaleRuleArgs{...}
//
//	or:
//
//	        nil
type CustomScaleRulePtrInput interface {
	pulumi.Input

	ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput
	ToCustomScaleRulePtrOutputWithContext(context.Context) CustomScaleRulePtrOutput
}

type customScaleRulePtrType CustomScaleRuleArgs

func CustomScaleRulePtr(v *CustomScaleRuleArgs) CustomScaleRulePtrInput {
	return (*customScaleRulePtrType)(v)
}

func (*customScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomScaleRule)(nil)).Elem()
}

func (i *customScaleRulePtrType) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return i.ToCustomScaleRulePtrOutputWithContext(context.Background())
}

func (i *customScaleRulePtrType) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomScaleRulePtrOutput)
}

// Azure Spring Apps App Instance Custom scaling rule.
type CustomScaleRuleOutput struct{ *pulumi.OutputState }

func (CustomScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomScaleRule)(nil)).Elem()
}

func (o CustomScaleRuleOutput) ToCustomScaleRuleOutput() CustomScaleRuleOutput {
	return o
}

func (o CustomScaleRuleOutput) ToCustomScaleRuleOutputWithContext(ctx context.Context) CustomScaleRuleOutput {
	return o
}

func (o CustomScaleRuleOutput) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return o.ToCustomScaleRulePtrOutputWithContext(context.Background())
}

func (o CustomScaleRuleOutput) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomScaleRule) *CustomScaleRule {
		return &v
	}).(CustomScaleRulePtrOutput)
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v CustomScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRuleOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomScaleRule) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomScaleRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomScaleRulePtrOutput struct{ *pulumi.OutputState }

func (CustomScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomScaleRule)(nil)).Elem()
}

func (o CustomScaleRulePtrOutput) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return o
}

func (o CustomScaleRulePtrOutput) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return o
}

func (o CustomScaleRulePtrOutput) Elem() CustomScaleRuleOutput {
	return o.ApplyT(func(v *CustomScaleRule) CustomScaleRule {
		if v != nil {
			return *v
		}
		var ret CustomScaleRule
		return ret
	}).(CustomScaleRuleOutput)
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *CustomScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRulePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomScaleRule) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomScaleRule) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Azure Spring Apps App Instance Custom scaling rule.
type CustomScaleRuleResponse struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Metadata properties to describe custom scale rule.
	Metadata map[string]string `pulumi:"metadata"`
	// Type of the custom scale rule
	// eg: azure-servicebus, redis etc.
	Type *string `pulumi:"type"`
}

// Azure Spring Apps App Instance Custom scaling rule.
type CustomScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomScaleRuleResponse)(nil)).Elem()
}

func (o CustomScaleRuleResponseOutput) ToCustomScaleRuleResponseOutput() CustomScaleRuleResponseOutput {
	return o
}

func (o CustomScaleRuleResponseOutput) ToCustomScaleRuleResponseOutputWithContext(ctx context.Context) CustomScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v CustomScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRuleResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomScaleRuleResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomScaleRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomScaleRuleResponse)(nil)).Elem()
}

func (o CustomScaleRuleResponsePtrOutput) ToCustomScaleRuleResponsePtrOutput() CustomScaleRuleResponsePtrOutput {
	return o
}

func (o CustomScaleRuleResponsePtrOutput) ToCustomScaleRuleResponsePtrOutputWithContext(ctx context.Context) CustomScaleRuleResponsePtrOutput {
	return o
}

func (o CustomScaleRuleResponsePtrOutput) Elem() CustomScaleRuleResponseOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) CustomScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret CustomScaleRuleResponse
		return ret
	}).(CustomScaleRuleResponseOutput)
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRuleResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRuleResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Customized accelerator properties payload
type CustomizedAcceleratorProperties struct {
	AcceleratorTags []string `pulumi:"acceleratorTags"`
	// Type of the customized accelerator.
	AcceleratorType *string                  `pulumi:"acceleratorType"`
	Description     *string                  `pulumi:"description"`
	DisplayName     *string                  `pulumi:"displayName"`
	GitRepository   AcceleratorGitRepository `pulumi:"gitRepository"`
	IconUrl         *string                  `pulumi:"iconUrl"`
}

// CustomizedAcceleratorPropertiesInput is an input type that accepts CustomizedAcceleratorPropertiesArgs and CustomizedAcceleratorPropertiesOutput values.
// You can construct a concrete instance of `CustomizedAcceleratorPropertiesInput` via:
//
//	CustomizedAcceleratorPropertiesArgs{...}
type CustomizedAcceleratorPropertiesInput interface {
	pulumi.Input

	ToCustomizedAcceleratorPropertiesOutput() CustomizedAcceleratorPropertiesOutput
	ToCustomizedAcceleratorPropertiesOutputWithContext(context.Context) CustomizedAcceleratorPropertiesOutput
}

// Customized accelerator properties payload
type CustomizedAcceleratorPropertiesArgs struct {
	AcceleratorTags pulumi.StringArrayInput `pulumi:"acceleratorTags"`
	// Type of the customized accelerator.
	AcceleratorType pulumi.StringPtrInput         `pulumi:"acceleratorType"`
	Description     pulumi.StringPtrInput         `pulumi:"description"`
	DisplayName     pulumi.StringPtrInput         `pulumi:"displayName"`
	GitRepository   AcceleratorGitRepositoryInput `pulumi:"gitRepository"`
	IconUrl         pulumi.StringPtrInput         `pulumi:"iconUrl"`
}

func (CustomizedAcceleratorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedAcceleratorProperties)(nil)).Elem()
}

func (i CustomizedAcceleratorPropertiesArgs) ToCustomizedAcceleratorPropertiesOutput() CustomizedAcceleratorPropertiesOutput {
	return i.ToCustomizedAcceleratorPropertiesOutputWithContext(context.Background())
}

func (i CustomizedAcceleratorPropertiesArgs) ToCustomizedAcceleratorPropertiesOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedAcceleratorPropertiesOutput)
}

func (i CustomizedAcceleratorPropertiesArgs) ToCustomizedAcceleratorPropertiesPtrOutput() CustomizedAcceleratorPropertiesPtrOutput {
	return i.ToCustomizedAcceleratorPropertiesPtrOutputWithContext(context.Background())
}

func (i CustomizedAcceleratorPropertiesArgs) ToCustomizedAcceleratorPropertiesPtrOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedAcceleratorPropertiesOutput).ToCustomizedAcceleratorPropertiesPtrOutputWithContext(ctx)
}

// CustomizedAcceleratorPropertiesPtrInput is an input type that accepts CustomizedAcceleratorPropertiesArgs, CustomizedAcceleratorPropertiesPtr and CustomizedAcceleratorPropertiesPtrOutput values.
// You can construct a concrete instance of `CustomizedAcceleratorPropertiesPtrInput` via:
//
//	        CustomizedAcceleratorPropertiesArgs{...}
//
//	or:
//
//	        nil
type CustomizedAcceleratorPropertiesPtrInput interface {
	pulumi.Input

	ToCustomizedAcceleratorPropertiesPtrOutput() CustomizedAcceleratorPropertiesPtrOutput
	ToCustomizedAcceleratorPropertiesPtrOutputWithContext(context.Context) CustomizedAcceleratorPropertiesPtrOutput
}

type customizedAcceleratorPropertiesPtrType CustomizedAcceleratorPropertiesArgs

func CustomizedAcceleratorPropertiesPtr(v *CustomizedAcceleratorPropertiesArgs) CustomizedAcceleratorPropertiesPtrInput {
	return (*customizedAcceleratorPropertiesPtrType)(v)
}

func (*customizedAcceleratorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomizedAcceleratorProperties)(nil)).Elem()
}

func (i *customizedAcceleratorPropertiesPtrType) ToCustomizedAcceleratorPropertiesPtrOutput() CustomizedAcceleratorPropertiesPtrOutput {
	return i.ToCustomizedAcceleratorPropertiesPtrOutputWithContext(context.Background())
}

func (i *customizedAcceleratorPropertiesPtrType) ToCustomizedAcceleratorPropertiesPtrOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedAcceleratorPropertiesPtrOutput)
}

// Customized accelerator properties payload
type CustomizedAcceleratorPropertiesOutput struct{ *pulumi.OutputState }

func (CustomizedAcceleratorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedAcceleratorProperties)(nil)).Elem()
}

func (o CustomizedAcceleratorPropertiesOutput) ToCustomizedAcceleratorPropertiesOutput() CustomizedAcceleratorPropertiesOutput {
	return o
}

func (o CustomizedAcceleratorPropertiesOutput) ToCustomizedAcceleratorPropertiesOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesOutput {
	return o
}

func (o CustomizedAcceleratorPropertiesOutput) ToCustomizedAcceleratorPropertiesPtrOutput() CustomizedAcceleratorPropertiesPtrOutput {
	return o.ToCustomizedAcceleratorPropertiesPtrOutputWithContext(context.Background())
}

func (o CustomizedAcceleratorPropertiesOutput) ToCustomizedAcceleratorPropertiesPtrOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomizedAcceleratorProperties) *CustomizedAcceleratorProperties {
		return &v
	}).(CustomizedAcceleratorPropertiesPtrOutput)
}

func (o CustomizedAcceleratorPropertiesOutput) AcceleratorTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomizedAcceleratorProperties) []string { return v.AcceleratorTags }).(pulumi.StringArrayOutput)
}

// Type of the customized accelerator.
func (o CustomizedAcceleratorPropertiesOutput) AcceleratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorProperties) *string { return v.AcceleratorType }).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesOutput) GitRepository() AcceleratorGitRepositoryOutput {
	return o.ApplyT(func(v CustomizedAcceleratorProperties) AcceleratorGitRepository { return v.GitRepository }).(AcceleratorGitRepositoryOutput)
}

func (o CustomizedAcceleratorPropertiesOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorProperties) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

type CustomizedAcceleratorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CustomizedAcceleratorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomizedAcceleratorProperties)(nil)).Elem()
}

func (o CustomizedAcceleratorPropertiesPtrOutput) ToCustomizedAcceleratorPropertiesPtrOutput() CustomizedAcceleratorPropertiesPtrOutput {
	return o
}

func (o CustomizedAcceleratorPropertiesPtrOutput) ToCustomizedAcceleratorPropertiesPtrOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesPtrOutput {
	return o
}

func (o CustomizedAcceleratorPropertiesPtrOutput) Elem() CustomizedAcceleratorPropertiesOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) CustomizedAcceleratorProperties {
		if v != nil {
			return *v
		}
		var ret CustomizedAcceleratorProperties
		return ret
	}).(CustomizedAcceleratorPropertiesOutput)
}

func (o CustomizedAcceleratorPropertiesPtrOutput) AcceleratorTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) []string {
		if v == nil {
			return nil
		}
		return v.AcceleratorTags
	}).(pulumi.StringArrayOutput)
}

// Type of the customized accelerator.
func (o CustomizedAcceleratorPropertiesPtrOutput) AcceleratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) *string {
		if v == nil {
			return nil
		}
		return v.AcceleratorType
	}).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesPtrOutput) GitRepository() AcceleratorGitRepositoryPtrOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) *AcceleratorGitRepository {
		if v == nil {
			return nil
		}
		return &v.GitRepository
	}).(AcceleratorGitRepositoryPtrOutput)
}

func (o CustomizedAcceleratorPropertiesPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizedAcceleratorProperties) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Customized accelerator properties payload
type CustomizedAcceleratorPropertiesResponse struct {
	AcceleratorTags []string `pulumi:"acceleratorTags"`
	// Type of the customized accelerator.
	AcceleratorType *string                          `pulumi:"acceleratorType"`
	Description     *string                          `pulumi:"description"`
	DisplayName     *string                          `pulumi:"displayName"`
	GitRepository   AcceleratorGitRepositoryResponse `pulumi:"gitRepository"`
	IconUrl         *string                          `pulumi:"iconUrl"`
	// Imports references all imports that this accelerator/fragment depends upon.
	Imports []string `pulumi:"imports"`
	// State of the customized accelerator.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Customized accelerator properties payload
type CustomizedAcceleratorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CustomizedAcceleratorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedAcceleratorPropertiesResponse)(nil)).Elem()
}

func (o CustomizedAcceleratorPropertiesResponseOutput) ToCustomizedAcceleratorPropertiesResponseOutput() CustomizedAcceleratorPropertiesResponseOutput {
	return o
}

func (o CustomizedAcceleratorPropertiesResponseOutput) ToCustomizedAcceleratorPropertiesResponseOutputWithContext(ctx context.Context) CustomizedAcceleratorPropertiesResponseOutput {
	return o
}

func (o CustomizedAcceleratorPropertiesResponseOutput) AcceleratorTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) []string { return v.AcceleratorTags }).(pulumi.StringArrayOutput)
}

// Type of the customized accelerator.
func (o CustomizedAcceleratorPropertiesResponseOutput) AcceleratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) *string { return v.AcceleratorType }).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o CustomizedAcceleratorPropertiesResponseOutput) GitRepository() AcceleratorGitRepositoryResponseOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) AcceleratorGitRepositoryResponse {
		return v.GitRepository
	}).(AcceleratorGitRepositoryResponseOutput)
}

func (o CustomizedAcceleratorPropertiesResponseOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Imports references all imports that this accelerator/fragment depends upon.
func (o CustomizedAcceleratorPropertiesResponseOutput) Imports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) []string { return v.Imports }).(pulumi.StringArrayOutput)
}

// State of the customized accelerator.
func (o CustomizedAcceleratorPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedAcceleratorPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment instance payload
type DeploymentInstanceResponse struct {
	// Discovery status of the deployment instance
	DiscoveryStatus string `pulumi:"discoveryStatus"`
	// Name of the deployment instance
	Name string `pulumi:"name"`
	// Failed reason of the deployment instance
	Reason string `pulumi:"reason"`
	// Start time of the deployment instance
	StartTime string `pulumi:"startTime"`
	// Status of the deployment instance
	Status string `pulumi:"status"`
	// Availability zone information of the deployment instance
	Zone string `pulumi:"zone"`
}

// Deployment instance payload
type DeploymentInstanceResponseOutput struct{ *pulumi.OutputState }

func (DeploymentInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentInstanceResponse)(nil)).Elem()
}

func (o DeploymentInstanceResponseOutput) ToDeploymentInstanceResponseOutput() DeploymentInstanceResponseOutput {
	return o
}

func (o DeploymentInstanceResponseOutput) ToDeploymentInstanceResponseOutputWithContext(ctx context.Context) DeploymentInstanceResponseOutput {
	return o
}

// Discovery status of the deployment instance
func (o DeploymentInstanceResponseOutput) DiscoveryStatus() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentInstanceResponse) string { return v.DiscoveryStatus }).(pulumi.StringOutput)
}

// Name of the deployment instance
func (o DeploymentInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Failed reason of the deployment instance
func (o DeploymentInstanceResponseOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentInstanceResponse) string { return v.Reason }).(pulumi.StringOutput)
}

// Start time of the deployment instance
func (o DeploymentInstanceResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentInstanceResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status of the deployment instance
func (o DeploymentInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Availability zone information of the deployment instance
func (o DeploymentInstanceResponseOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentInstanceResponse) string { return v.Zone }).(pulumi.StringOutput)
}

type DeploymentInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (DeploymentInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentInstanceResponse)(nil)).Elem()
}

func (o DeploymentInstanceResponseArrayOutput) ToDeploymentInstanceResponseArrayOutput() DeploymentInstanceResponseArrayOutput {
	return o
}

func (o DeploymentInstanceResponseArrayOutput) ToDeploymentInstanceResponseArrayOutputWithContext(ctx context.Context) DeploymentInstanceResponseArrayOutput {
	return o
}

func (o DeploymentInstanceResponseArrayOutput) Index(i pulumi.IntInput) DeploymentInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentInstanceResponse {
		return vs[0].([]DeploymentInstanceResponse)[vs[1].(int)]
	}).(DeploymentInstanceResponseOutput)
}

// Deployment resource properties payload
type DeploymentResourceProperties struct {
	// Indicates whether the Deployment is active
	Active *bool `pulumi:"active"`
	// Deployment settings of the Deployment
	DeploymentSettings *DeploymentSettings `pulumi:"deploymentSettings"`
	// Uploaded source information of the deployment.
	Source interface{} `pulumi:"source"`
}

// Defaults sets the appropriate defaults for DeploymentResourceProperties
func (val *DeploymentResourceProperties) Defaults() *DeploymentResourceProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DeploymentSettings = tmp.DeploymentSettings.Defaults()

	return &tmp
}

// DeploymentResourcePropertiesInput is an input type that accepts DeploymentResourcePropertiesArgs and DeploymentResourcePropertiesOutput values.
// You can construct a concrete instance of `DeploymentResourcePropertiesInput` via:
//
//	DeploymentResourcePropertiesArgs{...}
type DeploymentResourcePropertiesInput interface {
	pulumi.Input

	ToDeploymentResourcePropertiesOutput() DeploymentResourcePropertiesOutput
	ToDeploymentResourcePropertiesOutputWithContext(context.Context) DeploymentResourcePropertiesOutput
}

// Deployment resource properties payload
type DeploymentResourcePropertiesArgs struct {
	// Indicates whether the Deployment is active
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Deployment settings of the Deployment
	DeploymentSettings DeploymentSettingsPtrInput `pulumi:"deploymentSettings"`
	// Uploaded source information of the deployment.
	Source pulumi.Input `pulumi:"source"`
}

// Defaults sets the appropriate defaults for DeploymentResourcePropertiesArgs
func (val *DeploymentResourcePropertiesArgs) Defaults() *DeploymentResourcePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeploymentResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResourceProperties)(nil)).Elem()
}

func (i DeploymentResourcePropertiesArgs) ToDeploymentResourcePropertiesOutput() DeploymentResourcePropertiesOutput {
	return i.ToDeploymentResourcePropertiesOutputWithContext(context.Background())
}

func (i DeploymentResourcePropertiesArgs) ToDeploymentResourcePropertiesOutputWithContext(ctx context.Context) DeploymentResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourcePropertiesOutput)
}

func (i DeploymentResourcePropertiesArgs) ToDeploymentResourcePropertiesPtrOutput() DeploymentResourcePropertiesPtrOutput {
	return i.ToDeploymentResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentResourcePropertiesArgs) ToDeploymentResourcePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourcePropertiesOutput).ToDeploymentResourcePropertiesPtrOutputWithContext(ctx)
}

// DeploymentResourcePropertiesPtrInput is an input type that accepts DeploymentResourcePropertiesArgs, DeploymentResourcePropertiesPtr and DeploymentResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentResourcePropertiesPtrInput` via:
//
//	        DeploymentResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type DeploymentResourcePropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentResourcePropertiesPtrOutput() DeploymentResourcePropertiesPtrOutput
	ToDeploymentResourcePropertiesPtrOutputWithContext(context.Context) DeploymentResourcePropertiesPtrOutput
}

type deploymentResourcePropertiesPtrType DeploymentResourcePropertiesArgs

func DeploymentResourcePropertiesPtr(v *DeploymentResourcePropertiesArgs) DeploymentResourcePropertiesPtrInput {
	return (*deploymentResourcePropertiesPtrType)(v)
}

func (*deploymentResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResourceProperties)(nil)).Elem()
}

func (i *deploymentResourcePropertiesPtrType) ToDeploymentResourcePropertiesPtrOutput() DeploymentResourcePropertiesPtrOutput {
	return i.ToDeploymentResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentResourcePropertiesPtrType) ToDeploymentResourcePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourcePropertiesPtrOutput)
}

// Deployment resource properties payload
type DeploymentResourcePropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResourceProperties)(nil)).Elem()
}

func (o DeploymentResourcePropertiesOutput) ToDeploymentResourcePropertiesOutput() DeploymentResourcePropertiesOutput {
	return o
}

func (o DeploymentResourcePropertiesOutput) ToDeploymentResourcePropertiesOutputWithContext(ctx context.Context) DeploymentResourcePropertiesOutput {
	return o
}

func (o DeploymentResourcePropertiesOutput) ToDeploymentResourcePropertiesPtrOutput() DeploymentResourcePropertiesPtrOutput {
	return o.ToDeploymentResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentResourcePropertiesOutput) ToDeploymentResourcePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentResourceProperties) *DeploymentResourceProperties {
		return &v
	}).(DeploymentResourcePropertiesPtrOutput)
}

// Indicates whether the Deployment is active
func (o DeploymentResourcePropertiesOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentResourceProperties) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Deployment settings of the Deployment
func (o DeploymentResourcePropertiesOutput) DeploymentSettings() DeploymentSettingsPtrOutput {
	return o.ApplyT(func(v DeploymentResourceProperties) *DeploymentSettings { return v.DeploymentSettings }).(DeploymentSettingsPtrOutput)
}

// Uploaded source information of the deployment.
func (o DeploymentResourcePropertiesOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentResourceProperties) interface{} { return v.Source }).(pulumi.AnyOutput)
}

type DeploymentResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResourceProperties)(nil)).Elem()
}

func (o DeploymentResourcePropertiesPtrOutput) ToDeploymentResourcePropertiesPtrOutput() DeploymentResourcePropertiesPtrOutput {
	return o
}

func (o DeploymentResourcePropertiesPtrOutput) ToDeploymentResourcePropertiesPtrOutputWithContext(ctx context.Context) DeploymentResourcePropertiesPtrOutput {
	return o
}

func (o DeploymentResourcePropertiesPtrOutput) Elem() DeploymentResourcePropertiesOutput {
	return o.ApplyT(func(v *DeploymentResourceProperties) DeploymentResourceProperties {
		if v != nil {
			return *v
		}
		var ret DeploymentResourceProperties
		return ret
	}).(DeploymentResourcePropertiesOutput)
}

// Indicates whether the Deployment is active
func (o DeploymentResourcePropertiesPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

// Deployment settings of the Deployment
func (o DeploymentResourcePropertiesPtrOutput) DeploymentSettings() DeploymentSettingsPtrOutput {
	return o.ApplyT(func(v *DeploymentResourceProperties) *DeploymentSettings {
		if v == nil {
			return nil
		}
		return v.DeploymentSettings
	}).(DeploymentSettingsPtrOutput)
}

// Uploaded source information of the deployment.
func (o DeploymentResourcePropertiesPtrOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentResourceProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.AnyOutput)
}

// Deployment resource properties payload
type DeploymentResourcePropertiesResponse struct {
	// Indicates whether the Deployment is active
	Active *bool `pulumi:"active"`
	// Deployment settings of the Deployment
	DeploymentSettings *DeploymentSettingsResponse `pulumi:"deploymentSettings"`
	// Collection of instances belong to the Deployment
	Instances []DeploymentInstanceResponse `pulumi:"instances"`
	// Provisioning state of the Deployment
	ProvisioningState string `pulumi:"provisioningState"`
	// Uploaded source information of the deployment.
	Source interface{} `pulumi:"source"`
	// Status of the Deployment
	Status string `pulumi:"status"`
}

// Defaults sets the appropriate defaults for DeploymentResourcePropertiesResponse
func (val *DeploymentResourcePropertiesResponse) Defaults() *DeploymentResourcePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DeploymentSettings = tmp.DeploymentSettings.Defaults()

	return &tmp
}

// Deployment resource properties payload
type DeploymentResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DeploymentResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResourcePropertiesResponse)(nil)).Elem()
}

func (o DeploymentResourcePropertiesResponseOutput) ToDeploymentResourcePropertiesResponseOutput() DeploymentResourcePropertiesResponseOutput {
	return o
}

func (o DeploymentResourcePropertiesResponseOutput) ToDeploymentResourcePropertiesResponseOutputWithContext(ctx context.Context) DeploymentResourcePropertiesResponseOutput {
	return o
}

// Indicates whether the Deployment is active
func (o DeploymentResourcePropertiesResponseOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentResourcePropertiesResponse) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Deployment settings of the Deployment
func (o DeploymentResourcePropertiesResponseOutput) DeploymentSettings() DeploymentSettingsResponsePtrOutput {
	return o.ApplyT(func(v DeploymentResourcePropertiesResponse) *DeploymentSettingsResponse { return v.DeploymentSettings }).(DeploymentSettingsResponsePtrOutput)
}

// Collection of instances belong to the Deployment
func (o DeploymentResourcePropertiesResponseOutput) Instances() DeploymentInstanceResponseArrayOutput {
	return o.ApplyT(func(v DeploymentResourcePropertiesResponse) []DeploymentInstanceResponse { return v.Instances }).(DeploymentInstanceResponseArrayOutput)
}

// Provisioning state of the Deployment
func (o DeploymentResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Uploaded source information of the deployment.
func (o DeploymentResourcePropertiesResponseOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentResourcePropertiesResponse) interface{} { return v.Source }).(pulumi.AnyOutput)
}

// Status of the Deployment
func (o DeploymentResourcePropertiesResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentResourcePropertiesResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Deployment settings payload
type DeploymentSettings struct {
	// Collection of addons
	AddonConfigs map[string]interface{} `pulumi:"addonConfigs"`
	// Collection of ApmReferences
	Apms []ApmReference `pulumi:"apms"`
	// Container liveness and readiness probe settings
	ContainerProbeSettings *ContainerProbeSettings `pulumi:"containerProbeSettings"`
	// Collection of environment variables
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe *Probe `pulumi:"livenessProbe"`
	// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe *Probe `pulumi:"readinessProbe"`
	// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
	ResourceRequests *ResourceRequests `pulumi:"resourceRequests"`
	// Scaling properties for the Azure Spring Apps App Instance.
	Scale *Scale `pulumi:"scale"`
	// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe *Probe `pulumi:"startupProbe"`
	// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
}

// Defaults sets the appropriate defaults for DeploymentSettings
func (val *DeploymentSettings) Defaults() *DeploymentSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LivenessProbe = tmp.LivenessProbe.Defaults()

	tmp.ReadinessProbe = tmp.ReadinessProbe.Defaults()

	tmp.Scale = tmp.Scale.Defaults()

	tmp.StartupProbe = tmp.StartupProbe.Defaults()

	if tmp.TerminationGracePeriodSeconds == nil {
		terminationGracePeriodSeconds_ := 90
		tmp.TerminationGracePeriodSeconds = &terminationGracePeriodSeconds_
	}
	return &tmp
}

// DeploymentSettingsInput is an input type that accepts DeploymentSettingsArgs and DeploymentSettingsOutput values.
// You can construct a concrete instance of `DeploymentSettingsInput` via:
//
//	DeploymentSettingsArgs{...}
type DeploymentSettingsInput interface {
	pulumi.Input

	ToDeploymentSettingsOutput() DeploymentSettingsOutput
	ToDeploymentSettingsOutputWithContext(context.Context) DeploymentSettingsOutput
}

// Deployment settings payload
type DeploymentSettingsArgs struct {
	// Collection of addons
	AddonConfigs pulumi.MapInput `pulumi:"addonConfigs"`
	// Collection of ApmReferences
	Apms ApmReferenceArrayInput `pulumi:"apms"`
	// Container liveness and readiness probe settings
	ContainerProbeSettings ContainerProbeSettingsPtrInput `pulumi:"containerProbeSettings"`
	// Collection of environment variables
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe ProbePtrInput `pulumi:"livenessProbe"`
	// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe ProbePtrInput `pulumi:"readinessProbe"`
	// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
	ResourceRequests ResourceRequestsPtrInput `pulumi:"resourceRequests"`
	// Scaling properties for the Azure Spring Apps App Instance.
	Scale ScalePtrInput `pulumi:"scale"`
	// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe ProbePtrInput `pulumi:"startupProbe"`
	// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
}

// Defaults sets the appropriate defaults for DeploymentSettingsArgs
func (val *DeploymentSettingsArgs) Defaults() *DeploymentSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.TerminationGracePeriodSeconds == nil {
		tmp.TerminationGracePeriodSeconds = pulumi.IntPtr(90)
	}
	return &tmp
}
func (DeploymentSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettings)(nil)).Elem()
}

func (i DeploymentSettingsArgs) ToDeploymentSettingsOutput() DeploymentSettingsOutput {
	return i.ToDeploymentSettingsOutputWithContext(context.Background())
}

func (i DeploymentSettingsArgs) ToDeploymentSettingsOutputWithContext(ctx context.Context) DeploymentSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOutput)
}

func (i DeploymentSettingsArgs) ToDeploymentSettingsPtrOutput() DeploymentSettingsPtrOutput {
	return i.ToDeploymentSettingsPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsArgs) ToDeploymentSettingsPtrOutputWithContext(ctx context.Context) DeploymentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOutput).ToDeploymentSettingsPtrOutputWithContext(ctx)
}

// DeploymentSettingsPtrInput is an input type that accepts DeploymentSettingsArgs, DeploymentSettingsPtr and DeploymentSettingsPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsPtrInput` via:
//
//	        DeploymentSettingsArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsPtrOutput() DeploymentSettingsPtrOutput
	ToDeploymentSettingsPtrOutputWithContext(context.Context) DeploymentSettingsPtrOutput
}

type deploymentSettingsPtrType DeploymentSettingsArgs

func DeploymentSettingsPtr(v *DeploymentSettingsArgs) DeploymentSettingsPtrInput {
	return (*deploymentSettingsPtrType)(v)
}

func (*deploymentSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettings)(nil)).Elem()
}

func (i *deploymentSettingsPtrType) ToDeploymentSettingsPtrOutput() DeploymentSettingsPtrOutput {
	return i.ToDeploymentSettingsPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsPtrType) ToDeploymentSettingsPtrOutputWithContext(ctx context.Context) DeploymentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsPtrOutput)
}

// Deployment settings payload
type DeploymentSettingsOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettings)(nil)).Elem()
}

func (o DeploymentSettingsOutput) ToDeploymentSettingsOutput() DeploymentSettingsOutput {
	return o
}

func (o DeploymentSettingsOutput) ToDeploymentSettingsOutputWithContext(ctx context.Context) DeploymentSettingsOutput {
	return o
}

func (o DeploymentSettingsOutput) ToDeploymentSettingsPtrOutput() DeploymentSettingsPtrOutput {
	return o.ToDeploymentSettingsPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsOutput) ToDeploymentSettingsPtrOutputWithContext(ctx context.Context) DeploymentSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettings) *DeploymentSettings {
		return &v
	}).(DeploymentSettingsPtrOutput)
}

// Collection of addons
func (o DeploymentSettingsOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v DeploymentSettings) map[string]interface{} { return v.AddonConfigs }).(pulumi.MapOutput)
}

// Collection of ApmReferences
func (o DeploymentSettingsOutput) Apms() ApmReferenceArrayOutput {
	return o.ApplyT(func(v DeploymentSettings) []ApmReference { return v.Apms }).(ApmReferenceArrayOutput)
}

// Container liveness and readiness probe settings
func (o DeploymentSettingsOutput) ContainerProbeSettings() ContainerProbeSettingsPtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *ContainerProbeSettings { return v.ContainerProbeSettings }).(ContainerProbeSettingsPtrOutput)
}

// Collection of environment variables
func (o DeploymentSettingsOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentSettings) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsOutput) LivenessProbe() ProbePtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *Probe { return v.LivenessProbe }).(ProbePtrOutput)
}

// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsOutput) ReadinessProbe() ProbePtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *Probe { return v.ReadinessProbe }).(ProbePtrOutput)
}

// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
func (o DeploymentSettingsOutput) ResourceRequests() ResourceRequestsPtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *ResourceRequests { return v.ResourceRequests }).(ResourceRequestsPtrOutput)
}

// Scaling properties for the Azure Spring Apps App Instance.
func (o DeploymentSettingsOutput) Scale() ScalePtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *Scale { return v.Scale }).(ScalePtrOutput)
}

// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsOutput) StartupProbe() ProbePtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *Probe { return v.StartupProbe }).(ProbePtrOutput)
}

// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
func (o DeploymentSettingsOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentSettings) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

type DeploymentSettingsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettings)(nil)).Elem()
}

func (o DeploymentSettingsPtrOutput) ToDeploymentSettingsPtrOutput() DeploymentSettingsPtrOutput {
	return o
}

func (o DeploymentSettingsPtrOutput) ToDeploymentSettingsPtrOutputWithContext(ctx context.Context) DeploymentSettingsPtrOutput {
	return o
}

func (o DeploymentSettingsPtrOutput) Elem() DeploymentSettingsOutput {
	return o.ApplyT(func(v *DeploymentSettings) DeploymentSettings {
		if v != nil {
			return *v
		}
		var ret DeploymentSettings
		return ret
	}).(DeploymentSettingsOutput)
}

// Collection of addons
func (o DeploymentSettingsPtrOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v *DeploymentSettings) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AddonConfigs
	}).(pulumi.MapOutput)
}

// Collection of ApmReferences
func (o DeploymentSettingsPtrOutput) Apms() ApmReferenceArrayOutput {
	return o.ApplyT(func(v *DeploymentSettings) []ApmReference {
		if v == nil {
			return nil
		}
		return v.Apms
	}).(ApmReferenceArrayOutput)
}

// Container liveness and readiness probe settings
func (o DeploymentSettingsPtrOutput) ContainerProbeSettings() ContainerProbeSettingsPtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *ContainerProbeSettings {
		if v == nil {
			return nil
		}
		return v.ContainerProbeSettings
	}).(ContainerProbeSettingsPtrOutput)
}

// Collection of environment variables
func (o DeploymentSettingsPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsPtrOutput) LivenessProbe() ProbePtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *Probe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(ProbePtrOutput)
}

// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsPtrOutput) ReadinessProbe() ProbePtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *Probe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(ProbePtrOutput)
}

// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
func (o DeploymentSettingsPtrOutput) ResourceRequests() ResourceRequestsPtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *ResourceRequests {
		if v == nil {
			return nil
		}
		return v.ResourceRequests
	}).(ResourceRequestsPtrOutput)
}

// Scaling properties for the Azure Spring Apps App Instance.
func (o DeploymentSettingsPtrOutput) Scale() ScalePtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *Scale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(ScalePtrOutput)
}

// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsPtrOutput) StartupProbe() ProbePtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *Probe {
		if v == nil {
			return nil
		}
		return v.StartupProbe
	}).(ProbePtrOutput)
}

// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
func (o DeploymentSettingsPtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentSettings) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Deployment settings payload
type DeploymentSettingsResponse struct {
	// Collection of addons
	AddonConfigs map[string]interface{} `pulumi:"addonConfigs"`
	// Collection of ApmReferences
	Apms []ApmReferenceResponse `pulumi:"apms"`
	// Container liveness and readiness probe settings
	ContainerProbeSettings *ContainerProbeSettingsResponse `pulumi:"containerProbeSettings"`
	// Collection of environment variables
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe *ProbeResponse `pulumi:"livenessProbe"`
	// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe *ProbeResponse `pulumi:"readinessProbe"`
	// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
	ResourceRequests *ResourceRequestsResponse `pulumi:"resourceRequests"`
	// Scaling properties for the Azure Spring Apps App Instance.
	Scale *ScaleResponse `pulumi:"scale"`
	// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe *ProbeResponse `pulumi:"startupProbe"`
	// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
}

// Defaults sets the appropriate defaults for DeploymentSettingsResponse
func (val *DeploymentSettingsResponse) Defaults() *DeploymentSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LivenessProbe = tmp.LivenessProbe.Defaults()

	tmp.ReadinessProbe = tmp.ReadinessProbe.Defaults()

	tmp.Scale = tmp.Scale.Defaults()

	tmp.StartupProbe = tmp.StartupProbe.Defaults()

	if tmp.TerminationGracePeriodSeconds == nil {
		terminationGracePeriodSeconds_ := 90
		tmp.TerminationGracePeriodSeconds = &terminationGracePeriodSeconds_
	}
	return &tmp
}

// Deployment settings payload
type DeploymentSettingsResponseOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsResponse)(nil)).Elem()
}

func (o DeploymentSettingsResponseOutput) ToDeploymentSettingsResponseOutput() DeploymentSettingsResponseOutput {
	return o
}

func (o DeploymentSettingsResponseOutput) ToDeploymentSettingsResponseOutputWithContext(ctx context.Context) DeploymentSettingsResponseOutput {
	return o
}

// Collection of addons
func (o DeploymentSettingsResponseOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) map[string]interface{} { return v.AddonConfigs }).(pulumi.MapOutput)
}

// Collection of ApmReferences
func (o DeploymentSettingsResponseOutput) Apms() ApmReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) []ApmReferenceResponse { return v.Apms }).(ApmReferenceResponseArrayOutput)
}

// Container liveness and readiness probe settings
func (o DeploymentSettingsResponseOutput) ContainerProbeSettings() ContainerProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *ContainerProbeSettingsResponse { return v.ContainerProbeSettings }).(ContainerProbeSettingsResponsePtrOutput)
}

// Collection of environment variables
func (o DeploymentSettingsResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsResponseOutput) LivenessProbe() ProbeResponsePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *ProbeResponse { return v.LivenessProbe }).(ProbeResponsePtrOutput)
}

// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsResponseOutput) ReadinessProbe() ProbeResponsePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *ProbeResponse { return v.ReadinessProbe }).(ProbeResponsePtrOutput)
}

// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
func (o DeploymentSettingsResponseOutput) ResourceRequests() ResourceRequestsResponsePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *ResourceRequestsResponse { return v.ResourceRequests }).(ResourceRequestsResponsePtrOutput)
}

// Scaling properties for the Azure Spring Apps App Instance.
func (o DeploymentSettingsResponseOutput) Scale() ScaleResponsePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *ScaleResponse { return v.Scale }).(ScaleResponsePtrOutput)
}

// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsResponseOutput) StartupProbe() ProbeResponsePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *ProbeResponse { return v.StartupProbe }).(ProbeResponsePtrOutput)
}

// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
func (o DeploymentSettingsResponseOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsResponse) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

type DeploymentSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsResponse)(nil)).Elem()
}

func (o DeploymentSettingsResponsePtrOutput) ToDeploymentSettingsResponsePtrOutput() DeploymentSettingsResponsePtrOutput {
	return o
}

func (o DeploymentSettingsResponsePtrOutput) ToDeploymentSettingsResponsePtrOutputWithContext(ctx context.Context) DeploymentSettingsResponsePtrOutput {
	return o
}

func (o DeploymentSettingsResponsePtrOutput) Elem() DeploymentSettingsResponseOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) DeploymentSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsResponse
		return ret
	}).(DeploymentSettingsResponseOutput)
}

// Collection of addons
func (o DeploymentSettingsResponsePtrOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AddonConfigs
	}).(pulumi.MapOutput)
}

// Collection of ApmReferences
func (o DeploymentSettingsResponsePtrOutput) Apms() ApmReferenceResponseArrayOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) []ApmReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Apms
	}).(ApmReferenceResponseArrayOutput)
}

// Container liveness and readiness probe settings
func (o DeploymentSettingsResponsePtrOutput) ContainerProbeSettings() ContainerProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *ContainerProbeSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ContainerProbeSettings
	}).(ContainerProbeSettingsResponsePtrOutput)
}

// Collection of environment variables
func (o DeploymentSettingsResponsePtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsResponsePtrOutput) LivenessProbe() ProbeResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *ProbeResponse {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(ProbeResponsePtrOutput)
}

// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsResponsePtrOutput) ReadinessProbe() ProbeResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *ProbeResponse {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(ProbeResponsePtrOutput)
}

// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
func (o DeploymentSettingsResponsePtrOutput) ResourceRequests() ResourceRequestsResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *ResourceRequestsResponse {
		if v == nil {
			return nil
		}
		return v.ResourceRequests
	}).(ResourceRequestsResponsePtrOutput)
}

// Scaling properties for the Azure Spring Apps App Instance.
func (o DeploymentSettingsResponsePtrOutput) Scale() ScaleResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *ScaleResponse {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(ScaleResponsePtrOutput)
}

// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o DeploymentSettingsResponsePtrOutput) StartupProbe() ProbeResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *ProbeResponse {
		if v == nil {
			return nil
		}
		return v.StartupProbe
	}).(ProbeResponsePtrOutput)
}

// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
func (o DeploymentSettingsResponsePtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

type DevToolPortalComponentResponse struct {
	// Collection of instances belong to Dev Tool Portal.
	Instances []DevToolPortalInstanceResponse `pulumi:"instances"`
	Name      string                          `pulumi:"name"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests DevToolPortalResourceRequestsResponse `pulumi:"resourceRequests"`
}

type DevToolPortalComponentResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalComponentResponse)(nil)).Elem()
}

func (o DevToolPortalComponentResponseOutput) ToDevToolPortalComponentResponseOutput() DevToolPortalComponentResponseOutput {
	return o
}

func (o DevToolPortalComponentResponseOutput) ToDevToolPortalComponentResponseOutputWithContext(ctx context.Context) DevToolPortalComponentResponseOutput {
	return o
}

// Collection of instances belong to Dev Tool Portal.
func (o DevToolPortalComponentResponseOutput) Instances() DevToolPortalInstanceResponseArrayOutput {
	return o.ApplyT(func(v DevToolPortalComponentResponse) []DevToolPortalInstanceResponse { return v.Instances }).(DevToolPortalInstanceResponseArrayOutput)
}

func (o DevToolPortalComponentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalComponentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o DevToolPortalComponentResponseOutput) ResourceRequests() DevToolPortalResourceRequestsResponseOutput {
	return o.ApplyT(func(v DevToolPortalComponentResponse) DevToolPortalResourceRequestsResponse {
		return v.ResourceRequests
	}).(DevToolPortalResourceRequestsResponseOutput)
}

type DevToolPortalComponentResponseArrayOutput struct{ *pulumi.OutputState }

func (DevToolPortalComponentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevToolPortalComponentResponse)(nil)).Elem()
}

func (o DevToolPortalComponentResponseArrayOutput) ToDevToolPortalComponentResponseArrayOutput() DevToolPortalComponentResponseArrayOutput {
	return o
}

func (o DevToolPortalComponentResponseArrayOutput) ToDevToolPortalComponentResponseArrayOutputWithContext(ctx context.Context) DevToolPortalComponentResponseArrayOutput {
	return o
}

func (o DevToolPortalComponentResponseArrayOutput) Index(i pulumi.IntInput) DevToolPortalComponentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevToolPortalComponentResponse {
		return vs[0].([]DevToolPortalComponentResponse)[vs[1].(int)]
	}).(DevToolPortalComponentResponseOutput)
}

// Detail settings for Dev Tool Portal feature
type DevToolPortalFeatureDetail struct {
	// State of the plugin
	State *string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for DevToolPortalFeatureDetail
func (val *DevToolPortalFeatureDetail) Defaults() *DevToolPortalFeatureDetail {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := "Enabled"
		tmp.State = &state_
	}
	return &tmp
}

// DevToolPortalFeatureDetailInput is an input type that accepts DevToolPortalFeatureDetailArgs and DevToolPortalFeatureDetailOutput values.
// You can construct a concrete instance of `DevToolPortalFeatureDetailInput` via:
//
//	DevToolPortalFeatureDetailArgs{...}
type DevToolPortalFeatureDetailInput interface {
	pulumi.Input

	ToDevToolPortalFeatureDetailOutput() DevToolPortalFeatureDetailOutput
	ToDevToolPortalFeatureDetailOutputWithContext(context.Context) DevToolPortalFeatureDetailOutput
}

// Detail settings for Dev Tool Portal feature
type DevToolPortalFeatureDetailArgs struct {
	// State of the plugin
	State pulumi.StringPtrInput `pulumi:"state"`
}

// Defaults sets the appropriate defaults for DevToolPortalFeatureDetailArgs
func (val *DevToolPortalFeatureDetailArgs) Defaults() *DevToolPortalFeatureDetailArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		tmp.State = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (DevToolPortalFeatureDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureDetail)(nil)).Elem()
}

func (i DevToolPortalFeatureDetailArgs) ToDevToolPortalFeatureDetailOutput() DevToolPortalFeatureDetailOutput {
	return i.ToDevToolPortalFeatureDetailOutputWithContext(context.Background())
}

func (i DevToolPortalFeatureDetailArgs) ToDevToolPortalFeatureDetailOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalFeatureDetailOutput)
}

func (i DevToolPortalFeatureDetailArgs) ToDevToolPortalFeatureDetailPtrOutput() DevToolPortalFeatureDetailPtrOutput {
	return i.ToDevToolPortalFeatureDetailPtrOutputWithContext(context.Background())
}

func (i DevToolPortalFeatureDetailArgs) ToDevToolPortalFeatureDetailPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalFeatureDetailOutput).ToDevToolPortalFeatureDetailPtrOutputWithContext(ctx)
}

// DevToolPortalFeatureDetailPtrInput is an input type that accepts DevToolPortalFeatureDetailArgs, DevToolPortalFeatureDetailPtr and DevToolPortalFeatureDetailPtrOutput values.
// You can construct a concrete instance of `DevToolPortalFeatureDetailPtrInput` via:
//
//	        DevToolPortalFeatureDetailArgs{...}
//
//	or:
//
//	        nil
type DevToolPortalFeatureDetailPtrInput interface {
	pulumi.Input

	ToDevToolPortalFeatureDetailPtrOutput() DevToolPortalFeatureDetailPtrOutput
	ToDevToolPortalFeatureDetailPtrOutputWithContext(context.Context) DevToolPortalFeatureDetailPtrOutput
}

type devToolPortalFeatureDetailPtrType DevToolPortalFeatureDetailArgs

func DevToolPortalFeatureDetailPtr(v *DevToolPortalFeatureDetailArgs) DevToolPortalFeatureDetailPtrInput {
	return (*devToolPortalFeatureDetailPtrType)(v)
}

func (*devToolPortalFeatureDetailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureDetail)(nil)).Elem()
}

func (i *devToolPortalFeatureDetailPtrType) ToDevToolPortalFeatureDetailPtrOutput() DevToolPortalFeatureDetailPtrOutput {
	return i.ToDevToolPortalFeatureDetailPtrOutputWithContext(context.Background())
}

func (i *devToolPortalFeatureDetailPtrType) ToDevToolPortalFeatureDetailPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalFeatureDetailPtrOutput)
}

// Detail settings for Dev Tool Portal feature
type DevToolPortalFeatureDetailOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureDetail)(nil)).Elem()
}

func (o DevToolPortalFeatureDetailOutput) ToDevToolPortalFeatureDetailOutput() DevToolPortalFeatureDetailOutput {
	return o
}

func (o DevToolPortalFeatureDetailOutput) ToDevToolPortalFeatureDetailOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailOutput {
	return o
}

func (o DevToolPortalFeatureDetailOutput) ToDevToolPortalFeatureDetailPtrOutput() DevToolPortalFeatureDetailPtrOutput {
	return o.ToDevToolPortalFeatureDetailPtrOutputWithContext(context.Background())
}

func (o DevToolPortalFeatureDetailOutput) ToDevToolPortalFeatureDetailPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevToolPortalFeatureDetail) *DevToolPortalFeatureDetail {
		return &v
	}).(DevToolPortalFeatureDetailPtrOutput)
}

// State of the plugin
func (o DevToolPortalFeatureDetailOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalFeatureDetail) *string { return v.State }).(pulumi.StringPtrOutput)
}

type DevToolPortalFeatureDetailPtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureDetailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureDetail)(nil)).Elem()
}

func (o DevToolPortalFeatureDetailPtrOutput) ToDevToolPortalFeatureDetailPtrOutput() DevToolPortalFeatureDetailPtrOutput {
	return o
}

func (o DevToolPortalFeatureDetailPtrOutput) ToDevToolPortalFeatureDetailPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailPtrOutput {
	return o
}

func (o DevToolPortalFeatureDetailPtrOutput) Elem() DevToolPortalFeatureDetailOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureDetail) DevToolPortalFeatureDetail {
		if v != nil {
			return *v
		}
		var ret DevToolPortalFeatureDetail
		return ret
	}).(DevToolPortalFeatureDetailOutput)
}

// State of the plugin
func (o DevToolPortalFeatureDetailPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureDetail) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Detail settings for Dev Tool Portal feature
type DevToolPortalFeatureDetailResponse struct {
	// Route path to visit the plugin
	Route string `pulumi:"route"`
	// State of the plugin
	State *string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for DevToolPortalFeatureDetailResponse
func (val *DevToolPortalFeatureDetailResponse) Defaults() *DevToolPortalFeatureDetailResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.State == nil {
		state_ := "Enabled"
		tmp.State = &state_
	}
	return &tmp
}

// Detail settings for Dev Tool Portal feature
type DevToolPortalFeatureDetailResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureDetailResponse)(nil)).Elem()
}

func (o DevToolPortalFeatureDetailResponseOutput) ToDevToolPortalFeatureDetailResponseOutput() DevToolPortalFeatureDetailResponseOutput {
	return o
}

func (o DevToolPortalFeatureDetailResponseOutput) ToDevToolPortalFeatureDetailResponseOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailResponseOutput {
	return o
}

// Route path to visit the plugin
func (o DevToolPortalFeatureDetailResponseOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalFeatureDetailResponse) string { return v.Route }).(pulumi.StringOutput)
}

// State of the plugin
func (o DevToolPortalFeatureDetailResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalFeatureDetailResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type DevToolPortalFeatureDetailResponsePtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureDetailResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureDetailResponse)(nil)).Elem()
}

func (o DevToolPortalFeatureDetailResponsePtrOutput) ToDevToolPortalFeatureDetailResponsePtrOutput() DevToolPortalFeatureDetailResponsePtrOutput {
	return o
}

func (o DevToolPortalFeatureDetailResponsePtrOutput) ToDevToolPortalFeatureDetailResponsePtrOutputWithContext(ctx context.Context) DevToolPortalFeatureDetailResponsePtrOutput {
	return o
}

func (o DevToolPortalFeatureDetailResponsePtrOutput) Elem() DevToolPortalFeatureDetailResponseOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureDetailResponse) DevToolPortalFeatureDetailResponse {
		if v != nil {
			return *v
		}
		var ret DevToolPortalFeatureDetailResponse
		return ret
	}).(DevToolPortalFeatureDetailResponseOutput)
}

// Route path to visit the plugin
func (o DevToolPortalFeatureDetailResponsePtrOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Route
	}).(pulumi.StringPtrOutput)
}

// State of the plugin
func (o DevToolPortalFeatureDetailResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureDetailResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Settings for Dev Tool Portal
type DevToolPortalFeatureSettings struct {
	// Detail of Accelerator plugin
	ApplicationAccelerator *DevToolPortalFeatureDetail `pulumi:"applicationAccelerator"`
	// Detail of App Live View plugin
	ApplicationLiveView *DevToolPortalFeatureDetail `pulumi:"applicationLiveView"`
}

// Defaults sets the appropriate defaults for DevToolPortalFeatureSettings
func (val *DevToolPortalFeatureSettings) Defaults() *DevToolPortalFeatureSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ApplicationAccelerator = tmp.ApplicationAccelerator.Defaults()

	tmp.ApplicationLiveView = tmp.ApplicationLiveView.Defaults()

	return &tmp
}

// DevToolPortalFeatureSettingsInput is an input type that accepts DevToolPortalFeatureSettingsArgs and DevToolPortalFeatureSettingsOutput values.
// You can construct a concrete instance of `DevToolPortalFeatureSettingsInput` via:
//
//	DevToolPortalFeatureSettingsArgs{...}
type DevToolPortalFeatureSettingsInput interface {
	pulumi.Input

	ToDevToolPortalFeatureSettingsOutput() DevToolPortalFeatureSettingsOutput
	ToDevToolPortalFeatureSettingsOutputWithContext(context.Context) DevToolPortalFeatureSettingsOutput
}

// Settings for Dev Tool Portal
type DevToolPortalFeatureSettingsArgs struct {
	// Detail of Accelerator plugin
	ApplicationAccelerator DevToolPortalFeatureDetailPtrInput `pulumi:"applicationAccelerator"`
	// Detail of App Live View plugin
	ApplicationLiveView DevToolPortalFeatureDetailPtrInput `pulumi:"applicationLiveView"`
}

// Defaults sets the appropriate defaults for DevToolPortalFeatureSettingsArgs
func (val *DevToolPortalFeatureSettingsArgs) Defaults() *DevToolPortalFeatureSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DevToolPortalFeatureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureSettings)(nil)).Elem()
}

func (i DevToolPortalFeatureSettingsArgs) ToDevToolPortalFeatureSettingsOutput() DevToolPortalFeatureSettingsOutput {
	return i.ToDevToolPortalFeatureSettingsOutputWithContext(context.Background())
}

func (i DevToolPortalFeatureSettingsArgs) ToDevToolPortalFeatureSettingsOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalFeatureSettingsOutput)
}

func (i DevToolPortalFeatureSettingsArgs) ToDevToolPortalFeatureSettingsPtrOutput() DevToolPortalFeatureSettingsPtrOutput {
	return i.ToDevToolPortalFeatureSettingsPtrOutputWithContext(context.Background())
}

func (i DevToolPortalFeatureSettingsArgs) ToDevToolPortalFeatureSettingsPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalFeatureSettingsOutput).ToDevToolPortalFeatureSettingsPtrOutputWithContext(ctx)
}

// DevToolPortalFeatureSettingsPtrInput is an input type that accepts DevToolPortalFeatureSettingsArgs, DevToolPortalFeatureSettingsPtr and DevToolPortalFeatureSettingsPtrOutput values.
// You can construct a concrete instance of `DevToolPortalFeatureSettingsPtrInput` via:
//
//	        DevToolPortalFeatureSettingsArgs{...}
//
//	or:
//
//	        nil
type DevToolPortalFeatureSettingsPtrInput interface {
	pulumi.Input

	ToDevToolPortalFeatureSettingsPtrOutput() DevToolPortalFeatureSettingsPtrOutput
	ToDevToolPortalFeatureSettingsPtrOutputWithContext(context.Context) DevToolPortalFeatureSettingsPtrOutput
}

type devToolPortalFeatureSettingsPtrType DevToolPortalFeatureSettingsArgs

func DevToolPortalFeatureSettingsPtr(v *DevToolPortalFeatureSettingsArgs) DevToolPortalFeatureSettingsPtrInput {
	return (*devToolPortalFeatureSettingsPtrType)(v)
}

func (*devToolPortalFeatureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureSettings)(nil)).Elem()
}

func (i *devToolPortalFeatureSettingsPtrType) ToDevToolPortalFeatureSettingsPtrOutput() DevToolPortalFeatureSettingsPtrOutput {
	return i.ToDevToolPortalFeatureSettingsPtrOutputWithContext(context.Background())
}

func (i *devToolPortalFeatureSettingsPtrType) ToDevToolPortalFeatureSettingsPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalFeatureSettingsPtrOutput)
}

// Settings for Dev Tool Portal
type DevToolPortalFeatureSettingsOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureSettings)(nil)).Elem()
}

func (o DevToolPortalFeatureSettingsOutput) ToDevToolPortalFeatureSettingsOutput() DevToolPortalFeatureSettingsOutput {
	return o
}

func (o DevToolPortalFeatureSettingsOutput) ToDevToolPortalFeatureSettingsOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsOutput {
	return o
}

func (o DevToolPortalFeatureSettingsOutput) ToDevToolPortalFeatureSettingsPtrOutput() DevToolPortalFeatureSettingsPtrOutput {
	return o.ToDevToolPortalFeatureSettingsPtrOutputWithContext(context.Background())
}

func (o DevToolPortalFeatureSettingsOutput) ToDevToolPortalFeatureSettingsPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevToolPortalFeatureSettings) *DevToolPortalFeatureSettings {
		return &v
	}).(DevToolPortalFeatureSettingsPtrOutput)
}

// Detail of Accelerator plugin
func (o DevToolPortalFeatureSettingsOutput) ApplicationAccelerator() DevToolPortalFeatureDetailPtrOutput {
	return o.ApplyT(func(v DevToolPortalFeatureSettings) *DevToolPortalFeatureDetail { return v.ApplicationAccelerator }).(DevToolPortalFeatureDetailPtrOutput)
}

// Detail of App Live View plugin
func (o DevToolPortalFeatureSettingsOutput) ApplicationLiveView() DevToolPortalFeatureDetailPtrOutput {
	return o.ApplyT(func(v DevToolPortalFeatureSettings) *DevToolPortalFeatureDetail { return v.ApplicationLiveView }).(DevToolPortalFeatureDetailPtrOutput)
}

type DevToolPortalFeatureSettingsPtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureSettings)(nil)).Elem()
}

func (o DevToolPortalFeatureSettingsPtrOutput) ToDevToolPortalFeatureSettingsPtrOutput() DevToolPortalFeatureSettingsPtrOutput {
	return o
}

func (o DevToolPortalFeatureSettingsPtrOutput) ToDevToolPortalFeatureSettingsPtrOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsPtrOutput {
	return o
}

func (o DevToolPortalFeatureSettingsPtrOutput) Elem() DevToolPortalFeatureSettingsOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureSettings) DevToolPortalFeatureSettings {
		if v != nil {
			return *v
		}
		var ret DevToolPortalFeatureSettings
		return ret
	}).(DevToolPortalFeatureSettingsOutput)
}

// Detail of Accelerator plugin
func (o DevToolPortalFeatureSettingsPtrOutput) ApplicationAccelerator() DevToolPortalFeatureDetailPtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureSettings) *DevToolPortalFeatureDetail {
		if v == nil {
			return nil
		}
		return v.ApplicationAccelerator
	}).(DevToolPortalFeatureDetailPtrOutput)
}

// Detail of App Live View plugin
func (o DevToolPortalFeatureSettingsPtrOutput) ApplicationLiveView() DevToolPortalFeatureDetailPtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureSettings) *DevToolPortalFeatureDetail {
		if v == nil {
			return nil
		}
		return v.ApplicationLiveView
	}).(DevToolPortalFeatureDetailPtrOutput)
}

// Settings for Dev Tool Portal
type DevToolPortalFeatureSettingsResponse struct {
	// Detail of Accelerator plugin
	ApplicationAccelerator *DevToolPortalFeatureDetailResponse `pulumi:"applicationAccelerator"`
	// Detail of App Live View plugin
	ApplicationLiveView *DevToolPortalFeatureDetailResponse `pulumi:"applicationLiveView"`
}

// Defaults sets the appropriate defaults for DevToolPortalFeatureSettingsResponse
func (val *DevToolPortalFeatureSettingsResponse) Defaults() *DevToolPortalFeatureSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ApplicationAccelerator = tmp.ApplicationAccelerator.Defaults()

	tmp.ApplicationLiveView = tmp.ApplicationLiveView.Defaults()

	return &tmp
}

// Settings for Dev Tool Portal
type DevToolPortalFeatureSettingsResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureSettingsResponse)(nil)).Elem()
}

func (o DevToolPortalFeatureSettingsResponseOutput) ToDevToolPortalFeatureSettingsResponseOutput() DevToolPortalFeatureSettingsResponseOutput {
	return o
}

func (o DevToolPortalFeatureSettingsResponseOutput) ToDevToolPortalFeatureSettingsResponseOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsResponseOutput {
	return o
}

// Detail of Accelerator plugin
func (o DevToolPortalFeatureSettingsResponseOutput) ApplicationAccelerator() DevToolPortalFeatureDetailResponsePtrOutput {
	return o.ApplyT(func(v DevToolPortalFeatureSettingsResponse) *DevToolPortalFeatureDetailResponse {
		return v.ApplicationAccelerator
	}).(DevToolPortalFeatureDetailResponsePtrOutput)
}

// Detail of App Live View plugin
func (o DevToolPortalFeatureSettingsResponseOutput) ApplicationLiveView() DevToolPortalFeatureDetailResponsePtrOutput {
	return o.ApplyT(func(v DevToolPortalFeatureSettingsResponse) *DevToolPortalFeatureDetailResponse {
		return v.ApplicationLiveView
	}).(DevToolPortalFeatureDetailResponsePtrOutput)
}

type DevToolPortalFeatureSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureSettingsResponse)(nil)).Elem()
}

func (o DevToolPortalFeatureSettingsResponsePtrOutput) ToDevToolPortalFeatureSettingsResponsePtrOutput() DevToolPortalFeatureSettingsResponsePtrOutput {
	return o
}

func (o DevToolPortalFeatureSettingsResponsePtrOutput) ToDevToolPortalFeatureSettingsResponsePtrOutputWithContext(ctx context.Context) DevToolPortalFeatureSettingsResponsePtrOutput {
	return o
}

func (o DevToolPortalFeatureSettingsResponsePtrOutput) Elem() DevToolPortalFeatureSettingsResponseOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureSettingsResponse) DevToolPortalFeatureSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DevToolPortalFeatureSettingsResponse
		return ret
	}).(DevToolPortalFeatureSettingsResponseOutput)
}

// Detail of Accelerator plugin
func (o DevToolPortalFeatureSettingsResponsePtrOutput) ApplicationAccelerator() DevToolPortalFeatureDetailResponsePtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureSettingsResponse) *DevToolPortalFeatureDetailResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationAccelerator
	}).(DevToolPortalFeatureDetailResponsePtrOutput)
}

// Detail of App Live View plugin
func (o DevToolPortalFeatureSettingsResponsePtrOutput) ApplicationLiveView() DevToolPortalFeatureDetailResponsePtrOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureSettingsResponse) *DevToolPortalFeatureDetailResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationLiveView
	}).(DevToolPortalFeatureDetailResponsePtrOutput)
}

// Collection of instances belong to the Dev Tool Portal.
type DevToolPortalInstanceResponse struct {
	// Name of the Dev Tool Portal instance.
	Name string `pulumi:"name"`
	// Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.
	Status string `pulumi:"status"`
}

// Collection of instances belong to the Dev Tool Portal.
type DevToolPortalInstanceResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalInstanceResponse)(nil)).Elem()
}

func (o DevToolPortalInstanceResponseOutput) ToDevToolPortalInstanceResponseOutput() DevToolPortalInstanceResponseOutput {
	return o
}

func (o DevToolPortalInstanceResponseOutput) ToDevToolPortalInstanceResponseOutputWithContext(ctx context.Context) DevToolPortalInstanceResponseOutput {
	return o
}

// Name of the Dev Tool Portal instance.
func (o DevToolPortalInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.
func (o DevToolPortalInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type DevToolPortalInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (DevToolPortalInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevToolPortalInstanceResponse)(nil)).Elem()
}

func (o DevToolPortalInstanceResponseArrayOutput) ToDevToolPortalInstanceResponseArrayOutput() DevToolPortalInstanceResponseArrayOutput {
	return o
}

func (o DevToolPortalInstanceResponseArrayOutput) ToDevToolPortalInstanceResponseArrayOutputWithContext(ctx context.Context) DevToolPortalInstanceResponseArrayOutput {
	return o
}

func (o DevToolPortalInstanceResponseArrayOutput) Index(i pulumi.IntInput) DevToolPortalInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevToolPortalInstanceResponse {
		return vs[0].([]DevToolPortalInstanceResponse)[vs[1].(int)]
	}).(DevToolPortalInstanceResponseOutput)
}

// Dev Tool Portal properties payload
type DevToolPortalProperties struct {
	// Settings for Dev Tool Portal
	Features *DevToolPortalFeatureSettings `pulumi:"features"`
	// Indicates whether the resource exposes public endpoint
	Public *bool `pulumi:"public"`
	// Single sign-on related configuration
	SsoProperties *DevToolPortalSsoProperties `pulumi:"ssoProperties"`
}

// Defaults sets the appropriate defaults for DevToolPortalProperties
func (val *DevToolPortalProperties) Defaults() *DevToolPortalProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Features = tmp.Features.Defaults()

	if tmp.Public == nil {
		public_ := false
		tmp.Public = &public_
	}
	return &tmp
}

// DevToolPortalPropertiesInput is an input type that accepts DevToolPortalPropertiesArgs and DevToolPortalPropertiesOutput values.
// You can construct a concrete instance of `DevToolPortalPropertiesInput` via:
//
//	DevToolPortalPropertiesArgs{...}
type DevToolPortalPropertiesInput interface {
	pulumi.Input

	ToDevToolPortalPropertiesOutput() DevToolPortalPropertiesOutput
	ToDevToolPortalPropertiesOutputWithContext(context.Context) DevToolPortalPropertiesOutput
}

// Dev Tool Portal properties payload
type DevToolPortalPropertiesArgs struct {
	// Settings for Dev Tool Portal
	Features DevToolPortalFeatureSettingsPtrInput `pulumi:"features"`
	// Indicates whether the resource exposes public endpoint
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// Single sign-on related configuration
	SsoProperties DevToolPortalSsoPropertiesPtrInput `pulumi:"ssoProperties"`
}

// Defaults sets the appropriate defaults for DevToolPortalPropertiesArgs
func (val *DevToolPortalPropertiesArgs) Defaults() *DevToolPortalPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.Public == nil {
		tmp.Public = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (DevToolPortalPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalProperties)(nil)).Elem()
}

func (i DevToolPortalPropertiesArgs) ToDevToolPortalPropertiesOutput() DevToolPortalPropertiesOutput {
	return i.ToDevToolPortalPropertiesOutputWithContext(context.Background())
}

func (i DevToolPortalPropertiesArgs) ToDevToolPortalPropertiesOutputWithContext(ctx context.Context) DevToolPortalPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalPropertiesOutput)
}

func (i DevToolPortalPropertiesArgs) ToDevToolPortalPropertiesPtrOutput() DevToolPortalPropertiesPtrOutput {
	return i.ToDevToolPortalPropertiesPtrOutputWithContext(context.Background())
}

func (i DevToolPortalPropertiesArgs) ToDevToolPortalPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalPropertiesOutput).ToDevToolPortalPropertiesPtrOutputWithContext(ctx)
}

// DevToolPortalPropertiesPtrInput is an input type that accepts DevToolPortalPropertiesArgs, DevToolPortalPropertiesPtr and DevToolPortalPropertiesPtrOutput values.
// You can construct a concrete instance of `DevToolPortalPropertiesPtrInput` via:
//
//	        DevToolPortalPropertiesArgs{...}
//
//	or:
//
//	        nil
type DevToolPortalPropertiesPtrInput interface {
	pulumi.Input

	ToDevToolPortalPropertiesPtrOutput() DevToolPortalPropertiesPtrOutput
	ToDevToolPortalPropertiesPtrOutputWithContext(context.Context) DevToolPortalPropertiesPtrOutput
}

type devToolPortalPropertiesPtrType DevToolPortalPropertiesArgs

func DevToolPortalPropertiesPtr(v *DevToolPortalPropertiesArgs) DevToolPortalPropertiesPtrInput {
	return (*devToolPortalPropertiesPtrType)(v)
}

func (*devToolPortalPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalProperties)(nil)).Elem()
}

func (i *devToolPortalPropertiesPtrType) ToDevToolPortalPropertiesPtrOutput() DevToolPortalPropertiesPtrOutput {
	return i.ToDevToolPortalPropertiesPtrOutputWithContext(context.Background())
}

func (i *devToolPortalPropertiesPtrType) ToDevToolPortalPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalPropertiesPtrOutput)
}

// Dev Tool Portal properties payload
type DevToolPortalPropertiesOutput struct{ *pulumi.OutputState }

func (DevToolPortalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalProperties)(nil)).Elem()
}

func (o DevToolPortalPropertiesOutput) ToDevToolPortalPropertiesOutput() DevToolPortalPropertiesOutput {
	return o
}

func (o DevToolPortalPropertiesOutput) ToDevToolPortalPropertiesOutputWithContext(ctx context.Context) DevToolPortalPropertiesOutput {
	return o
}

func (o DevToolPortalPropertiesOutput) ToDevToolPortalPropertiesPtrOutput() DevToolPortalPropertiesPtrOutput {
	return o.ToDevToolPortalPropertiesPtrOutputWithContext(context.Background())
}

func (o DevToolPortalPropertiesOutput) ToDevToolPortalPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevToolPortalProperties) *DevToolPortalProperties {
		return &v
	}).(DevToolPortalPropertiesPtrOutput)
}

// Settings for Dev Tool Portal
func (o DevToolPortalPropertiesOutput) Features() DevToolPortalFeatureSettingsPtrOutput {
	return o.ApplyT(func(v DevToolPortalProperties) *DevToolPortalFeatureSettings { return v.Features }).(DevToolPortalFeatureSettingsPtrOutput)
}

// Indicates whether the resource exposes public endpoint
func (o DevToolPortalPropertiesOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevToolPortalProperties) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Single sign-on related configuration
func (o DevToolPortalPropertiesOutput) SsoProperties() DevToolPortalSsoPropertiesPtrOutput {
	return o.ApplyT(func(v DevToolPortalProperties) *DevToolPortalSsoProperties { return v.SsoProperties }).(DevToolPortalSsoPropertiesPtrOutput)
}

type DevToolPortalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalProperties)(nil)).Elem()
}

func (o DevToolPortalPropertiesPtrOutput) ToDevToolPortalPropertiesPtrOutput() DevToolPortalPropertiesPtrOutput {
	return o
}

func (o DevToolPortalPropertiesPtrOutput) ToDevToolPortalPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalPropertiesPtrOutput {
	return o
}

func (o DevToolPortalPropertiesPtrOutput) Elem() DevToolPortalPropertiesOutput {
	return o.ApplyT(func(v *DevToolPortalProperties) DevToolPortalProperties {
		if v != nil {
			return *v
		}
		var ret DevToolPortalProperties
		return ret
	}).(DevToolPortalPropertiesOutput)
}

// Settings for Dev Tool Portal
func (o DevToolPortalPropertiesPtrOutput) Features() DevToolPortalFeatureSettingsPtrOutput {
	return o.ApplyT(func(v *DevToolPortalProperties) *DevToolPortalFeatureSettings {
		if v == nil {
			return nil
		}
		return v.Features
	}).(DevToolPortalFeatureSettingsPtrOutput)
}

// Indicates whether the resource exposes public endpoint
func (o DevToolPortalPropertiesPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DevToolPortalProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// Single sign-on related configuration
func (o DevToolPortalPropertiesPtrOutput) SsoProperties() DevToolPortalSsoPropertiesPtrOutput {
	return o.ApplyT(func(v *DevToolPortalProperties) *DevToolPortalSsoProperties {
		if v == nil {
			return nil
		}
		return v.SsoProperties
	}).(DevToolPortalSsoPropertiesPtrOutput)
}

// Dev Tool Portal properties payload
type DevToolPortalPropertiesResponse struct {
	// Collection of components belong to Dev Tool Portal.
	Components []DevToolPortalComponentResponse `pulumi:"components"`
	// Settings for Dev Tool Portal
	Features *DevToolPortalFeatureSettingsResponse `pulumi:"features"`
	// State of the Dev Tool Portal.
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicates whether the resource exposes public endpoint
	Public *bool `pulumi:"public"`
	// Single sign-on related configuration
	SsoProperties *DevToolPortalSsoPropertiesResponse `pulumi:"ssoProperties"`
	// URL of the resource, exposed when 'public' is true.
	Url string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for DevToolPortalPropertiesResponse
func (val *DevToolPortalPropertiesResponse) Defaults() *DevToolPortalPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Features = tmp.Features.Defaults()

	if tmp.Public == nil {
		public_ := false
		tmp.Public = &public_
	}
	return &tmp
}

// Dev Tool Portal properties payload
type DevToolPortalPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalPropertiesResponse)(nil)).Elem()
}

func (o DevToolPortalPropertiesResponseOutput) ToDevToolPortalPropertiesResponseOutput() DevToolPortalPropertiesResponseOutput {
	return o
}

func (o DevToolPortalPropertiesResponseOutput) ToDevToolPortalPropertiesResponseOutputWithContext(ctx context.Context) DevToolPortalPropertiesResponseOutput {
	return o
}

// Collection of components belong to Dev Tool Portal.
func (o DevToolPortalPropertiesResponseOutput) Components() DevToolPortalComponentResponseArrayOutput {
	return o.ApplyT(func(v DevToolPortalPropertiesResponse) []DevToolPortalComponentResponse { return v.Components }).(DevToolPortalComponentResponseArrayOutput)
}

// Settings for Dev Tool Portal
func (o DevToolPortalPropertiesResponseOutput) Features() DevToolPortalFeatureSettingsResponsePtrOutput {
	return o.ApplyT(func(v DevToolPortalPropertiesResponse) *DevToolPortalFeatureSettingsResponse { return v.Features }).(DevToolPortalFeatureSettingsResponsePtrOutput)
}

// State of the Dev Tool Portal.
func (o DevToolPortalPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates whether the resource exposes public endpoint
func (o DevToolPortalPropertiesResponseOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevToolPortalPropertiesResponse) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Single sign-on related configuration
func (o DevToolPortalPropertiesResponseOutput) SsoProperties() DevToolPortalSsoPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DevToolPortalPropertiesResponse) *DevToolPortalSsoPropertiesResponse { return v.SsoProperties }).(DevToolPortalSsoPropertiesResponsePtrOutput)
}

// URL of the resource, exposed when 'public' is true.
func (o DevToolPortalPropertiesResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalPropertiesResponse) string { return v.Url }).(pulumi.StringOutput)
}

// The resource quantity for required CPU and Memory of Dev Tool Portal
type DevToolPortalResourceRequestsResponse struct {
	// Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m
	Cpu string `pulumi:"cpu"`
	// Desired instance count of Dev Tool Portal.
	InstanceCount int `pulumi:"instanceCount"`
	// Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.
	Memory string `pulumi:"memory"`
}

// The resource quantity for required CPU and Memory of Dev Tool Portal
type DevToolPortalResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalResourceRequestsResponse)(nil)).Elem()
}

func (o DevToolPortalResourceRequestsResponseOutput) ToDevToolPortalResourceRequestsResponseOutput() DevToolPortalResourceRequestsResponseOutput {
	return o
}

func (o DevToolPortalResourceRequestsResponseOutput) ToDevToolPortalResourceRequestsResponseOutputWithContext(ctx context.Context) DevToolPortalResourceRequestsResponseOutput {
	return o
}

// Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m
func (o DevToolPortalResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Desired instance count of Dev Tool Portal.
func (o DevToolPortalResourceRequestsResponseOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v DevToolPortalResourceRequestsResponse) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.
func (o DevToolPortalResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v DevToolPortalResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// Single sign-on related configuration
type DevToolPortalSsoProperties struct {
	// The public identifier for the application
	ClientId *string `pulumi:"clientId"`
	// The secret known only to the application and the authorization server
	ClientSecret *string `pulumi:"clientSecret"`
	// The URI of a JSON file with generic OIDC provider configuration.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// It defines the specific actions applications can be allowed to do on a user's behalf
	Scopes []string `pulumi:"scopes"`
}

// DevToolPortalSsoPropertiesInput is an input type that accepts DevToolPortalSsoPropertiesArgs and DevToolPortalSsoPropertiesOutput values.
// You can construct a concrete instance of `DevToolPortalSsoPropertiesInput` via:
//
//	DevToolPortalSsoPropertiesArgs{...}
type DevToolPortalSsoPropertiesInput interface {
	pulumi.Input

	ToDevToolPortalSsoPropertiesOutput() DevToolPortalSsoPropertiesOutput
	ToDevToolPortalSsoPropertiesOutputWithContext(context.Context) DevToolPortalSsoPropertiesOutput
}

// Single sign-on related configuration
type DevToolPortalSsoPropertiesArgs struct {
	// The public identifier for the application
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The secret known only to the application and the authorization server
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// The URI of a JSON file with generic OIDC provider configuration.
	MetadataUrl pulumi.StringPtrInput `pulumi:"metadataUrl"`
	// It defines the specific actions applications can be allowed to do on a user's behalf
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (DevToolPortalSsoPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalSsoProperties)(nil)).Elem()
}

func (i DevToolPortalSsoPropertiesArgs) ToDevToolPortalSsoPropertiesOutput() DevToolPortalSsoPropertiesOutput {
	return i.ToDevToolPortalSsoPropertiesOutputWithContext(context.Background())
}

func (i DevToolPortalSsoPropertiesArgs) ToDevToolPortalSsoPropertiesOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalSsoPropertiesOutput)
}

func (i DevToolPortalSsoPropertiesArgs) ToDevToolPortalSsoPropertiesPtrOutput() DevToolPortalSsoPropertiesPtrOutput {
	return i.ToDevToolPortalSsoPropertiesPtrOutputWithContext(context.Background())
}

func (i DevToolPortalSsoPropertiesArgs) ToDevToolPortalSsoPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalSsoPropertiesOutput).ToDevToolPortalSsoPropertiesPtrOutputWithContext(ctx)
}

// DevToolPortalSsoPropertiesPtrInput is an input type that accepts DevToolPortalSsoPropertiesArgs, DevToolPortalSsoPropertiesPtr and DevToolPortalSsoPropertiesPtrOutput values.
// You can construct a concrete instance of `DevToolPortalSsoPropertiesPtrInput` via:
//
//	        DevToolPortalSsoPropertiesArgs{...}
//
//	or:
//
//	        nil
type DevToolPortalSsoPropertiesPtrInput interface {
	pulumi.Input

	ToDevToolPortalSsoPropertiesPtrOutput() DevToolPortalSsoPropertiesPtrOutput
	ToDevToolPortalSsoPropertiesPtrOutputWithContext(context.Context) DevToolPortalSsoPropertiesPtrOutput
}

type devToolPortalSsoPropertiesPtrType DevToolPortalSsoPropertiesArgs

func DevToolPortalSsoPropertiesPtr(v *DevToolPortalSsoPropertiesArgs) DevToolPortalSsoPropertiesPtrInput {
	return (*devToolPortalSsoPropertiesPtrType)(v)
}

func (*devToolPortalSsoPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalSsoProperties)(nil)).Elem()
}

func (i *devToolPortalSsoPropertiesPtrType) ToDevToolPortalSsoPropertiesPtrOutput() DevToolPortalSsoPropertiesPtrOutput {
	return i.ToDevToolPortalSsoPropertiesPtrOutputWithContext(context.Background())
}

func (i *devToolPortalSsoPropertiesPtrType) ToDevToolPortalSsoPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevToolPortalSsoPropertiesPtrOutput)
}

// Single sign-on related configuration
type DevToolPortalSsoPropertiesOutput struct{ *pulumi.OutputState }

func (DevToolPortalSsoPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalSsoProperties)(nil)).Elem()
}

func (o DevToolPortalSsoPropertiesOutput) ToDevToolPortalSsoPropertiesOutput() DevToolPortalSsoPropertiesOutput {
	return o
}

func (o DevToolPortalSsoPropertiesOutput) ToDevToolPortalSsoPropertiesOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesOutput {
	return o
}

func (o DevToolPortalSsoPropertiesOutput) ToDevToolPortalSsoPropertiesPtrOutput() DevToolPortalSsoPropertiesPtrOutput {
	return o.ToDevToolPortalSsoPropertiesPtrOutputWithContext(context.Background())
}

func (o DevToolPortalSsoPropertiesOutput) ToDevToolPortalSsoPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevToolPortalSsoProperties) *DevToolPortalSsoProperties {
		return &v
	}).(DevToolPortalSsoPropertiesPtrOutput)
}

// The public identifier for the application
func (o DevToolPortalSsoPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalSsoProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o DevToolPortalSsoPropertiesOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalSsoProperties) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The URI of a JSON file with generic OIDC provider configuration.
func (o DevToolPortalSsoPropertiesOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalSsoProperties) *string { return v.MetadataUrl }).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o DevToolPortalSsoPropertiesOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DevToolPortalSsoProperties) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type DevToolPortalSsoPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalSsoPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalSsoProperties)(nil)).Elem()
}

func (o DevToolPortalSsoPropertiesPtrOutput) ToDevToolPortalSsoPropertiesPtrOutput() DevToolPortalSsoPropertiesPtrOutput {
	return o
}

func (o DevToolPortalSsoPropertiesPtrOutput) ToDevToolPortalSsoPropertiesPtrOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesPtrOutput {
	return o
}

func (o DevToolPortalSsoPropertiesPtrOutput) Elem() DevToolPortalSsoPropertiesOutput {
	return o.ApplyT(func(v *DevToolPortalSsoProperties) DevToolPortalSsoProperties {
		if v != nil {
			return *v
		}
		var ret DevToolPortalSsoProperties
		return ret
	}).(DevToolPortalSsoPropertiesOutput)
}

// The public identifier for the application
func (o DevToolPortalSsoPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalSsoProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o DevToolPortalSsoPropertiesPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalSsoProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The URI of a JSON file with generic OIDC provider configuration.
func (o DevToolPortalSsoPropertiesPtrOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalSsoProperties) *string {
		if v == nil {
			return nil
		}
		return v.MetadataUrl
	}).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o DevToolPortalSsoPropertiesPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DevToolPortalSsoProperties) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Single sign-on related configuration
type DevToolPortalSsoPropertiesResponse struct {
	// The public identifier for the application
	ClientId *string `pulumi:"clientId"`
	// The secret known only to the application and the authorization server
	ClientSecret *string `pulumi:"clientSecret"`
	// The URI of a JSON file with generic OIDC provider configuration.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// It defines the specific actions applications can be allowed to do on a user's behalf
	Scopes []string `pulumi:"scopes"`
}

// Single sign-on related configuration
type DevToolPortalSsoPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevToolPortalSsoPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalSsoPropertiesResponse)(nil)).Elem()
}

func (o DevToolPortalSsoPropertiesResponseOutput) ToDevToolPortalSsoPropertiesResponseOutput() DevToolPortalSsoPropertiesResponseOutput {
	return o
}

func (o DevToolPortalSsoPropertiesResponseOutput) ToDevToolPortalSsoPropertiesResponseOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesResponseOutput {
	return o
}

// The public identifier for the application
func (o DevToolPortalSsoPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalSsoPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o DevToolPortalSsoPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalSsoPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The URI of a JSON file with generic OIDC provider configuration.
func (o DevToolPortalSsoPropertiesResponseOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevToolPortalSsoPropertiesResponse) *string { return v.MetadataUrl }).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o DevToolPortalSsoPropertiesResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DevToolPortalSsoPropertiesResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type DevToolPortalSsoPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalSsoPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalSsoPropertiesResponse)(nil)).Elem()
}

func (o DevToolPortalSsoPropertiesResponsePtrOutput) ToDevToolPortalSsoPropertiesResponsePtrOutput() DevToolPortalSsoPropertiesResponsePtrOutput {
	return o
}

func (o DevToolPortalSsoPropertiesResponsePtrOutput) ToDevToolPortalSsoPropertiesResponsePtrOutputWithContext(ctx context.Context) DevToolPortalSsoPropertiesResponsePtrOutput {
	return o
}

func (o DevToolPortalSsoPropertiesResponsePtrOutput) Elem() DevToolPortalSsoPropertiesResponseOutput {
	return o.ApplyT(func(v *DevToolPortalSsoPropertiesResponse) DevToolPortalSsoPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DevToolPortalSsoPropertiesResponse
		return ret
	}).(DevToolPortalSsoPropertiesResponseOutput)
}

// The public identifier for the application
func (o DevToolPortalSsoPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalSsoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o DevToolPortalSsoPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalSsoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The URI of a JSON file with generic OIDC provider configuration.
func (o DevToolPortalSsoPropertiesResponsePtrOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevToolPortalSsoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MetadataUrl
	}).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o DevToolPortalSsoPropertiesResponsePtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DevToolPortalSsoPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The error code compose of code and message.
type Error struct {
	// The code of error.
	Code *string `pulumi:"code"`
	// The message of error.
	Message *string `pulumi:"message"`
}

// ErrorInput is an input type that accepts ErrorArgs and ErrorOutput values.
// You can construct a concrete instance of `ErrorInput` via:
//
//	ErrorArgs{...}
type ErrorInput interface {
	pulumi.Input

	ToErrorOutput() ErrorOutput
	ToErrorOutputWithContext(context.Context) ErrorOutput
}

// The error code compose of code and message.
type ErrorArgs struct {
	// The code of error.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// The message of error.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (i ErrorArgs) ToErrorOutput() ErrorOutput {
	return i.ToErrorOutputWithContext(context.Background())
}

func (i ErrorArgs) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorOutput)
}

func (i ErrorArgs) ToErrorPtrOutput() ErrorPtrOutput {
	return i.ToErrorPtrOutputWithContext(context.Background())
}

func (i ErrorArgs) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorOutput).ToErrorPtrOutputWithContext(ctx)
}

// ErrorPtrInput is an input type that accepts ErrorArgs, ErrorPtr and ErrorPtrOutput values.
// You can construct a concrete instance of `ErrorPtrInput` via:
//
//	        ErrorArgs{...}
//
//	or:
//
//	        nil
type ErrorPtrInput interface {
	pulumi.Input

	ToErrorPtrOutput() ErrorPtrOutput
	ToErrorPtrOutputWithContext(context.Context) ErrorPtrOutput
}

type errorPtrType ErrorArgs

func ErrorPtr(v *ErrorArgs) ErrorPtrInput {
	return (*errorPtrType)(v)
}

func (*errorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Error)(nil)).Elem()
}

func (i *errorPtrType) ToErrorPtrOutput() ErrorPtrOutput {
	return i.ToErrorPtrOutputWithContext(context.Background())
}

func (i *errorPtrType) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorPtrOutput)
}

// The error code compose of code and message.
type ErrorOutput struct{ *pulumi.OutputState }

func (ErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (o ErrorOutput) ToErrorOutput() ErrorOutput {
	return o
}

func (o ErrorOutput) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return o
}

func (o ErrorOutput) ToErrorPtrOutput() ErrorPtrOutput {
	return o.ToErrorPtrOutputWithContext(context.Background())
}

func (o ErrorOutput) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Error) *Error {
		return &v
	}).(ErrorPtrOutput)
}

// The code of error.
func (o ErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The message of error.
func (o ErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ErrorPtrOutput struct{ *pulumi.OutputState }

func (ErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Error)(nil)).Elem()
}

func (o ErrorPtrOutput) ToErrorPtrOutput() ErrorPtrOutput {
	return o
}

func (o ErrorPtrOutput) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return o
}

func (o ErrorPtrOutput) Elem() ErrorOutput {
	return o.ApplyT(func(v *Error) Error {
		if v != nil {
			return *v
		}
		var ret Error
		return ret
	}).(ErrorOutput)
}

// The code of error.
func (o ErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Error) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// The message of error.
func (o ErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Error) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The error code compose of code and message.
type ErrorResponse struct {
	// The code of error.
	Code *string `pulumi:"code"`
	// The message of error.
	Message *string `pulumi:"message"`
}

// The error code compose of code and message.
type ErrorResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponse)(nil)).Elem()
}

func (o ErrorResponseOutput) ToErrorResponseOutput() ErrorResponseOutput {
	return o
}

func (o ErrorResponseOutput) ToErrorResponseOutputWithContext(ctx context.Context) ErrorResponseOutput {
	return o
}

// The code of error.
func (o ErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The message of error.
func (o ErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponse)(nil)).Elem()
}

func (o ErrorResponsePtrOutput) ToErrorResponsePtrOutput() ErrorResponsePtrOutput {
	return o
}

func (o ErrorResponsePtrOutput) ToErrorResponsePtrOutputWithContext(ctx context.Context) ErrorResponsePtrOutput {
	return o
}

func (o ErrorResponsePtrOutput) Elem() ErrorResponseOutput {
	return o.ApplyT(func(v *ErrorResponse) ErrorResponse {
		if v != nil {
			return *v
		}
		var ret ErrorResponse
		return ret
	}).(ErrorResponseOutput)
}

// The code of error.
func (o ErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// The message of error.
func (o ErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// ExecAction describes a "run in container" action.
type ExecAction struct {
	// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
	// The type of the action to take to perform the health check.
	// Expected value is 'ExecAction'.
	Type string `pulumi:"type"`
}

// ExecActionInput is an input type that accepts ExecActionArgs and ExecActionOutput values.
// You can construct a concrete instance of `ExecActionInput` via:
//
//	ExecActionArgs{...}
type ExecActionInput interface {
	pulumi.Input

	ToExecActionOutput() ExecActionOutput
	ToExecActionOutputWithContext(context.Context) ExecActionOutput
}

// ExecAction describes a "run in container" action.
type ExecActionArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
	// The type of the action to take to perform the health check.
	// Expected value is 'ExecAction'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExecActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecAction)(nil)).Elem()
}

func (i ExecActionArgs) ToExecActionOutput() ExecActionOutput {
	return i.ToExecActionOutputWithContext(context.Background())
}

func (i ExecActionArgs) ToExecActionOutputWithContext(ctx context.Context) ExecActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecActionOutput)
}

func (i ExecActionArgs) ToExecActionPtrOutput() ExecActionPtrOutput {
	return i.ToExecActionPtrOutputWithContext(context.Background())
}

func (i ExecActionArgs) ToExecActionPtrOutputWithContext(ctx context.Context) ExecActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecActionOutput).ToExecActionPtrOutputWithContext(ctx)
}

// ExecActionPtrInput is an input type that accepts ExecActionArgs, ExecActionPtr and ExecActionPtrOutput values.
// You can construct a concrete instance of `ExecActionPtrInput` via:
//
//	        ExecActionArgs{...}
//
//	or:
//
//	        nil
type ExecActionPtrInput interface {
	pulumi.Input

	ToExecActionPtrOutput() ExecActionPtrOutput
	ToExecActionPtrOutputWithContext(context.Context) ExecActionPtrOutput
}

type execActionPtrType ExecActionArgs

func ExecActionPtr(v *ExecActionArgs) ExecActionPtrInput {
	return (*execActionPtrType)(v)
}

func (*execActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecAction)(nil)).Elem()
}

func (i *execActionPtrType) ToExecActionPtrOutput() ExecActionPtrOutput {
	return i.ToExecActionPtrOutputWithContext(context.Background())
}

func (i *execActionPtrType) ToExecActionPtrOutputWithContext(ctx context.Context) ExecActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecActionPtrOutput)
}

// ExecAction describes a "run in container" action.
type ExecActionOutput struct{ *pulumi.OutputState }

func (ExecActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecAction)(nil)).Elem()
}

func (o ExecActionOutput) ToExecActionOutput() ExecActionOutput {
	return o
}

func (o ExecActionOutput) ToExecActionOutputWithContext(ctx context.Context) ExecActionOutput {
	return o
}

func (o ExecActionOutput) ToExecActionPtrOutput() ExecActionPtrOutput {
	return o.ToExecActionPtrOutputWithContext(context.Background())
}

func (o ExecActionOutput) ToExecActionPtrOutputWithContext(ctx context.Context) ExecActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExecAction) *ExecAction {
		return &v
	}).(ExecActionPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ExecActionOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExecAction) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'ExecAction'.
func (o ExecActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecAction) string { return v.Type }).(pulumi.StringOutput)
}

type ExecActionPtrOutput struct{ *pulumi.OutputState }

func (ExecActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecAction)(nil)).Elem()
}

func (o ExecActionPtrOutput) ToExecActionPtrOutput() ExecActionPtrOutput {
	return o
}

func (o ExecActionPtrOutput) ToExecActionPtrOutputWithContext(ctx context.Context) ExecActionPtrOutput {
	return o
}

func (o ExecActionPtrOutput) Elem() ExecActionOutput {
	return o.ApplyT(func(v *ExecAction) ExecAction {
		if v != nil {
			return *v
		}
		var ret ExecAction
		return ret
	}).(ExecActionOutput)
}

// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ExecActionPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExecAction) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'ExecAction'.
func (o ExecActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExecAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// ExecAction describes a "run in container" action.
type ExecActionResponse struct {
	// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
	// The type of the action to take to perform the health check.
	// Expected value is 'ExecAction'.
	Type string `pulumi:"type"`
}

// ExecAction describes a "run in container" action.
type ExecActionResponseOutput struct{ *pulumi.OutputState }

func (ExecActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecActionResponse)(nil)).Elem()
}

func (o ExecActionResponseOutput) ToExecActionResponseOutput() ExecActionResponseOutput {
	return o
}

func (o ExecActionResponseOutput) ToExecActionResponseOutputWithContext(ctx context.Context) ExecActionResponseOutput {
	return o
}

// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ExecActionResponseOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExecActionResponse) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'ExecAction'.
func (o ExecActionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecActionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExecActionResponsePtrOutput struct{ *pulumi.OutputState }

func (ExecActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecActionResponse)(nil)).Elem()
}

func (o ExecActionResponsePtrOutput) ToExecActionResponsePtrOutput() ExecActionResponsePtrOutput {
	return o
}

func (o ExecActionResponsePtrOutput) ToExecActionResponsePtrOutputWithContext(ctx context.Context) ExecActionResponsePtrOutput {
	return o
}

func (o ExecActionResponsePtrOutput) Elem() ExecActionResponseOutput {
	return o.ApplyT(func(v *ExecActionResponse) ExecActionResponse {
		if v != nil {
			return *v
		}
		var ret ExecActionResponse
		return ret
	}).(ExecActionResponseOutput)
}

// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ExecActionResponsePtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExecActionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'ExecAction'.
func (o ExecActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExecActionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// API metadata property for Spring Cloud Gateway
type GatewayApiMetadataProperties struct {
	// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
	Description *string `pulumi:"description"`
	// Location of additional documentation for the APIs available on the Gateway instance
	Documentation *string `pulumi:"documentation"`
	// Base URL that API consumers will use to access APIs on the Gateway instance.
	ServerUrl *string `pulumi:"serverUrl"`
	// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
	Title *string `pulumi:"title"`
	// Version of APIs available on this Gateway instance (default: `unspecified`).
	Version *string `pulumi:"version"`
}

// GatewayApiMetadataPropertiesInput is an input type that accepts GatewayApiMetadataPropertiesArgs and GatewayApiMetadataPropertiesOutput values.
// You can construct a concrete instance of `GatewayApiMetadataPropertiesInput` via:
//
//	GatewayApiMetadataPropertiesArgs{...}
type GatewayApiMetadataPropertiesInput interface {
	pulumi.Input

	ToGatewayApiMetadataPropertiesOutput() GatewayApiMetadataPropertiesOutput
	ToGatewayApiMetadataPropertiesOutputWithContext(context.Context) GatewayApiMetadataPropertiesOutput
}

// API metadata property for Spring Cloud Gateway
type GatewayApiMetadataPropertiesArgs struct {
	// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Location of additional documentation for the APIs available on the Gateway instance
	Documentation pulumi.StringPtrInput `pulumi:"documentation"`
	// Base URL that API consumers will use to access APIs on the Gateway instance.
	ServerUrl pulumi.StringPtrInput `pulumi:"serverUrl"`
	// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Version of APIs available on this Gateway instance (default: `unspecified`).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GatewayApiMetadataPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayApiMetadataProperties)(nil)).Elem()
}

func (i GatewayApiMetadataPropertiesArgs) ToGatewayApiMetadataPropertiesOutput() GatewayApiMetadataPropertiesOutput {
	return i.ToGatewayApiMetadataPropertiesOutputWithContext(context.Background())
}

func (i GatewayApiMetadataPropertiesArgs) ToGatewayApiMetadataPropertiesOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiMetadataPropertiesOutput)
}

func (i GatewayApiMetadataPropertiesArgs) ToGatewayApiMetadataPropertiesPtrOutput() GatewayApiMetadataPropertiesPtrOutput {
	return i.ToGatewayApiMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayApiMetadataPropertiesArgs) ToGatewayApiMetadataPropertiesPtrOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiMetadataPropertiesOutput).ToGatewayApiMetadataPropertiesPtrOutputWithContext(ctx)
}

// GatewayApiMetadataPropertiesPtrInput is an input type that accepts GatewayApiMetadataPropertiesArgs, GatewayApiMetadataPropertiesPtr and GatewayApiMetadataPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayApiMetadataPropertiesPtrInput` via:
//
//	        GatewayApiMetadataPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayApiMetadataPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayApiMetadataPropertiesPtrOutput() GatewayApiMetadataPropertiesPtrOutput
	ToGatewayApiMetadataPropertiesPtrOutputWithContext(context.Context) GatewayApiMetadataPropertiesPtrOutput
}

type gatewayApiMetadataPropertiesPtrType GatewayApiMetadataPropertiesArgs

func GatewayApiMetadataPropertiesPtr(v *GatewayApiMetadataPropertiesArgs) GatewayApiMetadataPropertiesPtrInput {
	return (*gatewayApiMetadataPropertiesPtrType)(v)
}

func (*gatewayApiMetadataPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayApiMetadataProperties)(nil)).Elem()
}

func (i *gatewayApiMetadataPropertiesPtrType) ToGatewayApiMetadataPropertiesPtrOutput() GatewayApiMetadataPropertiesPtrOutput {
	return i.ToGatewayApiMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayApiMetadataPropertiesPtrType) ToGatewayApiMetadataPropertiesPtrOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiMetadataPropertiesPtrOutput)
}

// API metadata property for Spring Cloud Gateway
type GatewayApiMetadataPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayApiMetadataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayApiMetadataProperties)(nil)).Elem()
}

func (o GatewayApiMetadataPropertiesOutput) ToGatewayApiMetadataPropertiesOutput() GatewayApiMetadataPropertiesOutput {
	return o
}

func (o GatewayApiMetadataPropertiesOutput) ToGatewayApiMetadataPropertiesOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesOutput {
	return o
}

func (o GatewayApiMetadataPropertiesOutput) ToGatewayApiMetadataPropertiesPtrOutput() GatewayApiMetadataPropertiesPtrOutput {
	return o.ToGatewayApiMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayApiMetadataPropertiesOutput) ToGatewayApiMetadataPropertiesPtrOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayApiMetadataProperties) *GatewayApiMetadataProperties {
		return &v
	}).(GatewayApiMetadataPropertiesPtrOutput)
}

// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
func (o GatewayApiMetadataPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Location of additional documentation for the APIs available on the Gateway instance
func (o GatewayApiMetadataPropertiesOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataProperties) *string { return v.Documentation }).(pulumi.StringPtrOutput)
}

// Base URL that API consumers will use to access APIs on the Gateway instance.
func (o GatewayApiMetadataPropertiesOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataProperties) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
func (o GatewayApiMetadataPropertiesOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataProperties) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Version of APIs available on this Gateway instance (default: `unspecified`).
func (o GatewayApiMetadataPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GatewayApiMetadataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayApiMetadataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayApiMetadataProperties)(nil)).Elem()
}

func (o GatewayApiMetadataPropertiesPtrOutput) ToGatewayApiMetadataPropertiesPtrOutput() GatewayApiMetadataPropertiesPtrOutput {
	return o
}

func (o GatewayApiMetadataPropertiesPtrOutput) ToGatewayApiMetadataPropertiesPtrOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesPtrOutput {
	return o
}

func (o GatewayApiMetadataPropertiesPtrOutput) Elem() GatewayApiMetadataPropertiesOutput {
	return o.ApplyT(func(v *GatewayApiMetadataProperties) GatewayApiMetadataProperties {
		if v != nil {
			return *v
		}
		var ret GatewayApiMetadataProperties
		return ret
	}).(GatewayApiMetadataPropertiesOutput)
}

// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
func (o GatewayApiMetadataPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Location of additional documentation for the APIs available on the Gateway instance
func (o GatewayApiMetadataPropertiesPtrOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.Documentation
	}).(pulumi.StringPtrOutput)
}

// Base URL that API consumers will use to access APIs on the Gateway instance.
func (o GatewayApiMetadataPropertiesPtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
func (o GatewayApiMetadataPropertiesPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Version of APIs available on this Gateway instance (default: `unspecified`).
func (o GatewayApiMetadataPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// API metadata property for Spring Cloud Gateway
type GatewayApiMetadataPropertiesResponse struct {
	// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
	Description *string `pulumi:"description"`
	// Location of additional documentation for the APIs available on the Gateway instance
	Documentation *string `pulumi:"documentation"`
	// Base URL that API consumers will use to access APIs on the Gateway instance.
	ServerUrl *string `pulumi:"serverUrl"`
	// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
	Title *string `pulumi:"title"`
	// Version of APIs available on this Gateway instance (default: `unspecified`).
	Version *string `pulumi:"version"`
}

// API metadata property for Spring Cloud Gateway
type GatewayApiMetadataPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayApiMetadataPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayApiMetadataPropertiesResponse)(nil)).Elem()
}

func (o GatewayApiMetadataPropertiesResponseOutput) ToGatewayApiMetadataPropertiesResponseOutput() GatewayApiMetadataPropertiesResponseOutput {
	return o
}

func (o GatewayApiMetadataPropertiesResponseOutput) ToGatewayApiMetadataPropertiesResponseOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesResponseOutput {
	return o
}

// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
func (o GatewayApiMetadataPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Location of additional documentation for the APIs available on the Gateway instance
func (o GatewayApiMetadataPropertiesResponseOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataPropertiesResponse) *string { return v.Documentation }).(pulumi.StringPtrOutput)
}

// Base URL that API consumers will use to access APIs on the Gateway instance.
func (o GatewayApiMetadataPropertiesResponseOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataPropertiesResponse) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
func (o GatewayApiMetadataPropertiesResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataPropertiesResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Version of APIs available on this Gateway instance (default: `unspecified`).
func (o GatewayApiMetadataPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiMetadataPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GatewayApiMetadataPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayApiMetadataPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayApiMetadataPropertiesResponse)(nil)).Elem()
}

func (o GatewayApiMetadataPropertiesResponsePtrOutput) ToGatewayApiMetadataPropertiesResponsePtrOutput() GatewayApiMetadataPropertiesResponsePtrOutput {
	return o
}

func (o GatewayApiMetadataPropertiesResponsePtrOutput) ToGatewayApiMetadataPropertiesResponsePtrOutputWithContext(ctx context.Context) GatewayApiMetadataPropertiesResponsePtrOutput {
	return o
}

func (o GatewayApiMetadataPropertiesResponsePtrOutput) Elem() GatewayApiMetadataPropertiesResponseOutput {
	return o.ApplyT(func(v *GatewayApiMetadataPropertiesResponse) GatewayApiMetadataPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GatewayApiMetadataPropertiesResponse
		return ret
	}).(GatewayApiMetadataPropertiesResponseOutput)
}

// Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)
func (o GatewayApiMetadataPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Location of additional documentation for the APIs available on the Gateway instance
func (o GatewayApiMetadataPropertiesResponsePtrOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Documentation
	}).(pulumi.StringPtrOutput)
}

// Base URL that API consumers will use to access APIs on the Gateway instance.
func (o GatewayApiMetadataPropertiesResponsePtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)
func (o GatewayApiMetadataPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Version of APIs available on this Gateway instance (default: `unspecified`).
func (o GatewayApiMetadataPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayApiMetadataPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// API route config of the Spring Cloud Gateway
type GatewayApiRoute struct {
	// A description, will be applied to methods in the generated OpenAPI documentation.
	Description *string `pulumi:"description"`
	// To modify the request before sending it to the target endpoint, or the received response.
	Filters []string `pulumi:"filters"`
	// Route processing order.
	Order *int `pulumi:"order"`
	// A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates []string `pulumi:"predicates"`
	// Enable sso validation.
	SsoEnabled *bool `pulumi:"ssoEnabled"`
	// Classification tags, will be applied to methods in the generated OpenAPI documentation.
	Tags []string `pulumi:"tags"`
	// A title, will be applied to methods in the generated OpenAPI documentation.
	Title *string `pulumi:"title"`
	// Pass currently-authenticated user's identity token to application service, default is 'false'
	TokenRelay *bool `pulumi:"tokenRelay"`
	// Full uri, will override `appName`.
	Uri *string `pulumi:"uri"`
}

// GatewayApiRouteInput is an input type that accepts GatewayApiRouteArgs and GatewayApiRouteOutput values.
// You can construct a concrete instance of `GatewayApiRouteInput` via:
//
//	GatewayApiRouteArgs{...}
type GatewayApiRouteInput interface {
	pulumi.Input

	ToGatewayApiRouteOutput() GatewayApiRouteOutput
	ToGatewayApiRouteOutputWithContext(context.Context) GatewayApiRouteOutput
}

// API route config of the Spring Cloud Gateway
type GatewayApiRouteArgs struct {
	// A description, will be applied to methods in the generated OpenAPI documentation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// To modify the request before sending it to the target endpoint, or the received response.
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// Route processing order.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates pulumi.StringArrayInput `pulumi:"predicates"`
	// Enable sso validation.
	SsoEnabled pulumi.BoolPtrInput `pulumi:"ssoEnabled"`
	// Classification tags, will be applied to methods in the generated OpenAPI documentation.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A title, will be applied to methods in the generated OpenAPI documentation.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Pass currently-authenticated user's identity token to application service, default is 'false'
	TokenRelay pulumi.BoolPtrInput `pulumi:"tokenRelay"`
	// Full uri, will override `appName`.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GatewayApiRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayApiRoute)(nil)).Elem()
}

func (i GatewayApiRouteArgs) ToGatewayApiRouteOutput() GatewayApiRouteOutput {
	return i.ToGatewayApiRouteOutputWithContext(context.Background())
}

func (i GatewayApiRouteArgs) ToGatewayApiRouteOutputWithContext(ctx context.Context) GatewayApiRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiRouteOutput)
}

// GatewayApiRouteArrayInput is an input type that accepts GatewayApiRouteArray and GatewayApiRouteArrayOutput values.
// You can construct a concrete instance of `GatewayApiRouteArrayInput` via:
//
//	GatewayApiRouteArray{ GatewayApiRouteArgs{...} }
type GatewayApiRouteArrayInput interface {
	pulumi.Input

	ToGatewayApiRouteArrayOutput() GatewayApiRouteArrayOutput
	ToGatewayApiRouteArrayOutputWithContext(context.Context) GatewayApiRouteArrayOutput
}

type GatewayApiRouteArray []GatewayApiRouteInput

func (GatewayApiRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayApiRoute)(nil)).Elem()
}

func (i GatewayApiRouteArray) ToGatewayApiRouteArrayOutput() GatewayApiRouteArrayOutput {
	return i.ToGatewayApiRouteArrayOutputWithContext(context.Background())
}

func (i GatewayApiRouteArray) ToGatewayApiRouteArrayOutputWithContext(ctx context.Context) GatewayApiRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiRouteArrayOutput)
}

// API route config of the Spring Cloud Gateway
type GatewayApiRouteOutput struct{ *pulumi.OutputState }

func (GatewayApiRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayApiRoute)(nil)).Elem()
}

func (o GatewayApiRouteOutput) ToGatewayApiRouteOutput() GatewayApiRouteOutput {
	return o
}

func (o GatewayApiRouteOutput) ToGatewayApiRouteOutputWithContext(ctx context.Context) GatewayApiRouteOutput {
	return o
}

// A description, will be applied to methods in the generated OpenAPI documentation.
func (o GatewayApiRouteOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiRoute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// To modify the request before sending it to the target endpoint, or the received response.
func (o GatewayApiRouteOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayApiRoute) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// Route processing order.
func (o GatewayApiRouteOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayApiRoute) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
func (o GatewayApiRouteOutput) Predicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayApiRoute) []string { return v.Predicates }).(pulumi.StringArrayOutput)
}

// Enable sso validation.
func (o GatewayApiRouteOutput) SsoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayApiRoute) *bool { return v.SsoEnabled }).(pulumi.BoolPtrOutput)
}

// Classification tags, will be applied to methods in the generated OpenAPI documentation.
func (o GatewayApiRouteOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayApiRoute) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A title, will be applied to methods in the generated OpenAPI documentation.
func (o GatewayApiRouteOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiRoute) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Pass currently-authenticated user's identity token to application service, default is 'false'
func (o GatewayApiRouteOutput) TokenRelay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayApiRoute) *bool { return v.TokenRelay }).(pulumi.BoolPtrOutput)
}

// Full uri, will override `appName`.
func (o GatewayApiRouteOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiRoute) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GatewayApiRouteArrayOutput struct{ *pulumi.OutputState }

func (GatewayApiRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayApiRoute)(nil)).Elem()
}

func (o GatewayApiRouteArrayOutput) ToGatewayApiRouteArrayOutput() GatewayApiRouteArrayOutput {
	return o
}

func (o GatewayApiRouteArrayOutput) ToGatewayApiRouteArrayOutputWithContext(ctx context.Context) GatewayApiRouteArrayOutput {
	return o
}

func (o GatewayApiRouteArrayOutput) Index(i pulumi.IntInput) GatewayApiRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayApiRoute {
		return vs[0].([]GatewayApiRoute)[vs[1].(int)]
	}).(GatewayApiRouteOutput)
}

// API route config of the Spring Cloud Gateway
type GatewayApiRouteResponse struct {
	// A description, will be applied to methods in the generated OpenAPI documentation.
	Description *string `pulumi:"description"`
	// To modify the request before sending it to the target endpoint, or the received response.
	Filters []string `pulumi:"filters"`
	// Route processing order.
	Order *int `pulumi:"order"`
	// A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates []string `pulumi:"predicates"`
	// Enable sso validation.
	SsoEnabled *bool `pulumi:"ssoEnabled"`
	// Classification tags, will be applied to methods in the generated OpenAPI documentation.
	Tags []string `pulumi:"tags"`
	// A title, will be applied to methods in the generated OpenAPI documentation.
	Title *string `pulumi:"title"`
	// Pass currently-authenticated user's identity token to application service, default is 'false'
	TokenRelay *bool `pulumi:"tokenRelay"`
	// Full uri, will override `appName`.
	Uri *string `pulumi:"uri"`
}

// API route config of the Spring Cloud Gateway
type GatewayApiRouteResponseOutput struct{ *pulumi.OutputState }

func (GatewayApiRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayApiRouteResponse)(nil)).Elem()
}

func (o GatewayApiRouteResponseOutput) ToGatewayApiRouteResponseOutput() GatewayApiRouteResponseOutput {
	return o
}

func (o GatewayApiRouteResponseOutput) ToGatewayApiRouteResponseOutputWithContext(ctx context.Context) GatewayApiRouteResponseOutput {
	return o
}

// A description, will be applied to methods in the generated OpenAPI documentation.
func (o GatewayApiRouteResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// To modify the request before sending it to the target endpoint, or the received response.
func (o GatewayApiRouteResponseOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// Route processing order.
func (o GatewayApiRouteResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
func (o GatewayApiRouteResponseOutput) Predicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) []string { return v.Predicates }).(pulumi.StringArrayOutput)
}

// Enable sso validation.
func (o GatewayApiRouteResponseOutput) SsoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) *bool { return v.SsoEnabled }).(pulumi.BoolPtrOutput)
}

// Classification tags, will be applied to methods in the generated OpenAPI documentation.
func (o GatewayApiRouteResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A title, will be applied to methods in the generated OpenAPI documentation.
func (o GatewayApiRouteResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Pass currently-authenticated user's identity token to application service, default is 'false'
func (o GatewayApiRouteResponseOutput) TokenRelay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) *bool { return v.TokenRelay }).(pulumi.BoolPtrOutput)
}

// Full uri, will override `appName`.
func (o GatewayApiRouteResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayApiRouteResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GatewayApiRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayApiRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayApiRouteResponse)(nil)).Elem()
}

func (o GatewayApiRouteResponseArrayOutput) ToGatewayApiRouteResponseArrayOutput() GatewayApiRouteResponseArrayOutput {
	return o
}

func (o GatewayApiRouteResponseArrayOutput) ToGatewayApiRouteResponseArrayOutputWithContext(ctx context.Context) GatewayApiRouteResponseArrayOutput {
	return o
}

func (o GatewayApiRouteResponseArrayOutput) Index(i pulumi.IntInput) GatewayApiRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayApiRouteResponse {
		return vs[0].([]GatewayApiRouteResponse)[vs[1].(int)]
	}).(GatewayApiRouteResponseOutput)
}

// Cross-Origin Resource Sharing property
type GatewayCorsProperties struct {
	// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Allowed origin patterns to make cross-site requests.
	AllowedOriginPatterns []string `pulumi:"allowedOriginPatterns"`
	// Allowed origins to make cross-site requests. The special value `*` allows all domains.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// HTTP response headers to expose for cross-site requests.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// How long, in seconds, the response from a pre-flight request can be cached by clients.
	MaxAge *int `pulumi:"maxAge"`
}

// GatewayCorsPropertiesInput is an input type that accepts GatewayCorsPropertiesArgs and GatewayCorsPropertiesOutput values.
// You can construct a concrete instance of `GatewayCorsPropertiesInput` via:
//
//	GatewayCorsPropertiesArgs{...}
type GatewayCorsPropertiesInput interface {
	pulumi.Input

	ToGatewayCorsPropertiesOutput() GatewayCorsPropertiesOutput
	ToGatewayCorsPropertiesOutputWithContext(context.Context) GatewayCorsPropertiesOutput
}

// Cross-Origin Resource Sharing property
type GatewayCorsPropertiesArgs struct {
	// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Allowed origin patterns to make cross-site requests.
	AllowedOriginPatterns pulumi.StringArrayInput `pulumi:"allowedOriginPatterns"`
	// Allowed origins to make cross-site requests. The special value `*` allows all domains.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// HTTP response headers to expose for cross-site requests.
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	// How long, in seconds, the response from a pre-flight request can be cached by clients.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
}

func (GatewayCorsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCorsProperties)(nil)).Elem()
}

func (i GatewayCorsPropertiesArgs) ToGatewayCorsPropertiesOutput() GatewayCorsPropertiesOutput {
	return i.ToGatewayCorsPropertiesOutputWithContext(context.Background())
}

func (i GatewayCorsPropertiesArgs) ToGatewayCorsPropertiesOutputWithContext(ctx context.Context) GatewayCorsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCorsPropertiesOutput)
}

func (i GatewayCorsPropertiesArgs) ToGatewayCorsPropertiesPtrOutput() GatewayCorsPropertiesPtrOutput {
	return i.ToGatewayCorsPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayCorsPropertiesArgs) ToGatewayCorsPropertiesPtrOutputWithContext(ctx context.Context) GatewayCorsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCorsPropertiesOutput).ToGatewayCorsPropertiesPtrOutputWithContext(ctx)
}

// GatewayCorsPropertiesPtrInput is an input type that accepts GatewayCorsPropertiesArgs, GatewayCorsPropertiesPtr and GatewayCorsPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayCorsPropertiesPtrInput` via:
//
//	        GatewayCorsPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayCorsPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayCorsPropertiesPtrOutput() GatewayCorsPropertiesPtrOutput
	ToGatewayCorsPropertiesPtrOutputWithContext(context.Context) GatewayCorsPropertiesPtrOutput
}

type gatewayCorsPropertiesPtrType GatewayCorsPropertiesArgs

func GatewayCorsPropertiesPtr(v *GatewayCorsPropertiesArgs) GatewayCorsPropertiesPtrInput {
	return (*gatewayCorsPropertiesPtrType)(v)
}

func (*gatewayCorsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCorsProperties)(nil)).Elem()
}

func (i *gatewayCorsPropertiesPtrType) ToGatewayCorsPropertiesPtrOutput() GatewayCorsPropertiesPtrOutput {
	return i.ToGatewayCorsPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayCorsPropertiesPtrType) ToGatewayCorsPropertiesPtrOutputWithContext(ctx context.Context) GatewayCorsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCorsPropertiesPtrOutput)
}

// Cross-Origin Resource Sharing property
type GatewayCorsPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayCorsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCorsProperties)(nil)).Elem()
}

func (o GatewayCorsPropertiesOutput) ToGatewayCorsPropertiesOutput() GatewayCorsPropertiesOutput {
	return o
}

func (o GatewayCorsPropertiesOutput) ToGatewayCorsPropertiesOutputWithContext(ctx context.Context) GatewayCorsPropertiesOutput {
	return o
}

func (o GatewayCorsPropertiesOutput) ToGatewayCorsPropertiesPtrOutput() GatewayCorsPropertiesPtrOutput {
	return o.ToGatewayCorsPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayCorsPropertiesOutput) ToGatewayCorsPropertiesPtrOutputWithContext(ctx context.Context) GatewayCorsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayCorsProperties) *GatewayCorsProperties {
		return &v
	}).(GatewayCorsPropertiesPtrOutput)
}

// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
func (o GatewayCorsPropertiesOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayCorsProperties) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
func (o GatewayCorsPropertiesOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsProperties) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
func (o GatewayCorsPropertiesOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsProperties) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Allowed origin patterns to make cross-site requests.
func (o GatewayCorsPropertiesOutput) AllowedOriginPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsProperties) []string { return v.AllowedOriginPatterns }).(pulumi.StringArrayOutput)
}

// Allowed origins to make cross-site requests. The special value `*` allows all domains.
func (o GatewayCorsPropertiesOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsProperties) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// HTTP response headers to expose for cross-site requests.
func (o GatewayCorsPropertiesOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsProperties) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// How long, in seconds, the response from a pre-flight request can be cached by clients.
func (o GatewayCorsPropertiesOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayCorsProperties) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type GatewayCorsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayCorsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCorsProperties)(nil)).Elem()
}

func (o GatewayCorsPropertiesPtrOutput) ToGatewayCorsPropertiesPtrOutput() GatewayCorsPropertiesPtrOutput {
	return o
}

func (o GatewayCorsPropertiesPtrOutput) ToGatewayCorsPropertiesPtrOutputWithContext(ctx context.Context) GatewayCorsPropertiesPtrOutput {
	return o
}

func (o GatewayCorsPropertiesPtrOutput) Elem() GatewayCorsPropertiesOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) GatewayCorsProperties {
		if v != nil {
			return *v
		}
		var ret GatewayCorsProperties
		return ret
	}).(GatewayCorsPropertiesOutput)
}

// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
func (o GatewayCorsPropertiesPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
func (o GatewayCorsPropertiesPtrOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) []string {
		if v == nil {
			return nil
		}
		return v.AllowedHeaders
	}).(pulumi.StringArrayOutput)
}

// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
func (o GatewayCorsPropertiesPtrOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) []string {
		if v == nil {
			return nil
		}
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

// Allowed origin patterns to make cross-site requests.
func (o GatewayCorsPropertiesPtrOutput) AllowedOriginPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOriginPatterns
	}).(pulumi.StringArrayOutput)
}

// Allowed origins to make cross-site requests. The special value `*` allows all domains.
func (o GatewayCorsPropertiesPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// HTTP response headers to expose for cross-site requests.
func (o GatewayCorsPropertiesPtrOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) []string {
		if v == nil {
			return nil
		}
		return v.ExposedHeaders
	}).(pulumi.StringArrayOutput)
}

// How long, in seconds, the response from a pre-flight request can be cached by clients.
func (o GatewayCorsPropertiesPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayCorsProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// Cross-Origin Resource Sharing property
type GatewayCorsPropertiesResponse struct {
	// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Allowed origin patterns to make cross-site requests.
	AllowedOriginPatterns []string `pulumi:"allowedOriginPatterns"`
	// Allowed origins to make cross-site requests. The special value `*` allows all domains.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// HTTP response headers to expose for cross-site requests.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// How long, in seconds, the response from a pre-flight request can be cached by clients.
	MaxAge *int `pulumi:"maxAge"`
}

// Cross-Origin Resource Sharing property
type GatewayCorsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayCorsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCorsPropertiesResponse)(nil)).Elem()
}

func (o GatewayCorsPropertiesResponseOutput) ToGatewayCorsPropertiesResponseOutput() GatewayCorsPropertiesResponseOutput {
	return o
}

func (o GatewayCorsPropertiesResponseOutput) ToGatewayCorsPropertiesResponseOutputWithContext(ctx context.Context) GatewayCorsPropertiesResponseOutput {
	return o
}

// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
func (o GatewayCorsPropertiesResponseOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
func (o GatewayCorsPropertiesResponseOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
func (o GatewayCorsPropertiesResponseOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Allowed origin patterns to make cross-site requests.
func (o GatewayCorsPropertiesResponseOutput) AllowedOriginPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) []string { return v.AllowedOriginPatterns }).(pulumi.StringArrayOutput)
}

// Allowed origins to make cross-site requests. The special value `*` allows all domains.
func (o GatewayCorsPropertiesResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// HTTP response headers to expose for cross-site requests.
func (o GatewayCorsPropertiesResponseOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// How long, in seconds, the response from a pre-flight request can be cached by clients.
func (o GatewayCorsPropertiesResponseOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayCorsPropertiesResponse) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type GatewayCorsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayCorsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCorsPropertiesResponse)(nil)).Elem()
}

func (o GatewayCorsPropertiesResponsePtrOutput) ToGatewayCorsPropertiesResponsePtrOutput() GatewayCorsPropertiesResponsePtrOutput {
	return o
}

func (o GatewayCorsPropertiesResponsePtrOutput) ToGatewayCorsPropertiesResponsePtrOutputWithContext(ctx context.Context) GatewayCorsPropertiesResponsePtrOutput {
	return o
}

func (o GatewayCorsPropertiesResponsePtrOutput) Elem() GatewayCorsPropertiesResponseOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) GatewayCorsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GatewayCorsPropertiesResponse
		return ret
	}).(GatewayCorsPropertiesResponseOutput)
}

// Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.
func (o GatewayCorsPropertiesResponsePtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.
func (o GatewayCorsPropertiesResponsePtrOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedHeaders
	}).(pulumi.StringArrayOutput)
}

// Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.
func (o GatewayCorsPropertiesResponsePtrOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

// Allowed origin patterns to make cross-site requests.
func (o GatewayCorsPropertiesResponsePtrOutput) AllowedOriginPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOriginPatterns
	}).(pulumi.StringArrayOutput)
}

// Allowed origins to make cross-site requests. The special value `*` allows all domains.
func (o GatewayCorsPropertiesResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// HTTP response headers to expose for cross-site requests.
func (o GatewayCorsPropertiesResponsePtrOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExposedHeaders
	}).(pulumi.StringArrayOutput)
}

// How long, in seconds, the response from a pre-flight request can be cached by clients.
func (o GatewayCorsPropertiesResponsePtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayCorsPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// The properties of custom domain for Spring Cloud Gateway
type GatewayCustomDomainProperties struct {
	// The thumbprint of bound certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// GatewayCustomDomainPropertiesInput is an input type that accepts GatewayCustomDomainPropertiesArgs and GatewayCustomDomainPropertiesOutput values.
// You can construct a concrete instance of `GatewayCustomDomainPropertiesInput` via:
//
//	GatewayCustomDomainPropertiesArgs{...}
type GatewayCustomDomainPropertiesInput interface {
	pulumi.Input

	ToGatewayCustomDomainPropertiesOutput() GatewayCustomDomainPropertiesOutput
	ToGatewayCustomDomainPropertiesOutputWithContext(context.Context) GatewayCustomDomainPropertiesOutput
}

// The properties of custom domain for Spring Cloud Gateway
type GatewayCustomDomainPropertiesArgs struct {
	// The thumbprint of bound certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (GatewayCustomDomainPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCustomDomainProperties)(nil)).Elem()
}

func (i GatewayCustomDomainPropertiesArgs) ToGatewayCustomDomainPropertiesOutput() GatewayCustomDomainPropertiesOutput {
	return i.ToGatewayCustomDomainPropertiesOutputWithContext(context.Background())
}

func (i GatewayCustomDomainPropertiesArgs) ToGatewayCustomDomainPropertiesOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomDomainPropertiesOutput)
}

func (i GatewayCustomDomainPropertiesArgs) ToGatewayCustomDomainPropertiesPtrOutput() GatewayCustomDomainPropertiesPtrOutput {
	return i.ToGatewayCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayCustomDomainPropertiesArgs) ToGatewayCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomDomainPropertiesOutput).ToGatewayCustomDomainPropertiesPtrOutputWithContext(ctx)
}

// GatewayCustomDomainPropertiesPtrInput is an input type that accepts GatewayCustomDomainPropertiesArgs, GatewayCustomDomainPropertiesPtr and GatewayCustomDomainPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayCustomDomainPropertiesPtrInput` via:
//
//	        GatewayCustomDomainPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayCustomDomainPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayCustomDomainPropertiesPtrOutput() GatewayCustomDomainPropertiesPtrOutput
	ToGatewayCustomDomainPropertiesPtrOutputWithContext(context.Context) GatewayCustomDomainPropertiesPtrOutput
}

type gatewayCustomDomainPropertiesPtrType GatewayCustomDomainPropertiesArgs

func GatewayCustomDomainPropertiesPtr(v *GatewayCustomDomainPropertiesArgs) GatewayCustomDomainPropertiesPtrInput {
	return (*gatewayCustomDomainPropertiesPtrType)(v)
}

func (*gatewayCustomDomainPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCustomDomainProperties)(nil)).Elem()
}

func (i *gatewayCustomDomainPropertiesPtrType) ToGatewayCustomDomainPropertiesPtrOutput() GatewayCustomDomainPropertiesPtrOutput {
	return i.ToGatewayCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayCustomDomainPropertiesPtrType) ToGatewayCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomDomainPropertiesPtrOutput)
}

// The properties of custom domain for Spring Cloud Gateway
type GatewayCustomDomainPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayCustomDomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCustomDomainProperties)(nil)).Elem()
}

func (o GatewayCustomDomainPropertiesOutput) ToGatewayCustomDomainPropertiesOutput() GatewayCustomDomainPropertiesOutput {
	return o
}

func (o GatewayCustomDomainPropertiesOutput) ToGatewayCustomDomainPropertiesOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesOutput {
	return o
}

func (o GatewayCustomDomainPropertiesOutput) ToGatewayCustomDomainPropertiesPtrOutput() GatewayCustomDomainPropertiesPtrOutput {
	return o.ToGatewayCustomDomainPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayCustomDomainPropertiesOutput) ToGatewayCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayCustomDomainProperties) *GatewayCustomDomainProperties {
		return &v
	}).(GatewayCustomDomainPropertiesPtrOutput)
}

// The thumbprint of bound certificate.
func (o GatewayCustomDomainPropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayCustomDomainProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type GatewayCustomDomainPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayCustomDomainPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCustomDomainProperties)(nil)).Elem()
}

func (o GatewayCustomDomainPropertiesPtrOutput) ToGatewayCustomDomainPropertiesPtrOutput() GatewayCustomDomainPropertiesPtrOutput {
	return o
}

func (o GatewayCustomDomainPropertiesPtrOutput) ToGatewayCustomDomainPropertiesPtrOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesPtrOutput {
	return o
}

func (o GatewayCustomDomainPropertiesPtrOutput) Elem() GatewayCustomDomainPropertiesOutput {
	return o.ApplyT(func(v *GatewayCustomDomainProperties) GatewayCustomDomainProperties {
		if v != nil {
			return *v
		}
		var ret GatewayCustomDomainProperties
		return ret
	}).(GatewayCustomDomainPropertiesOutput)
}

// The thumbprint of bound certificate.
func (o GatewayCustomDomainPropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayCustomDomainProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The properties of custom domain for Spring Cloud Gateway
type GatewayCustomDomainPropertiesResponse struct {
	// The thumbprint of bound certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// The properties of custom domain for Spring Cloud Gateway
type GatewayCustomDomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayCustomDomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCustomDomainPropertiesResponse)(nil)).Elem()
}

func (o GatewayCustomDomainPropertiesResponseOutput) ToGatewayCustomDomainPropertiesResponseOutput() GatewayCustomDomainPropertiesResponseOutput {
	return o
}

func (o GatewayCustomDomainPropertiesResponseOutput) ToGatewayCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) GatewayCustomDomainPropertiesResponseOutput {
	return o
}

// The thumbprint of bound certificate.
func (o GatewayCustomDomainPropertiesResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayCustomDomainPropertiesResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Collection of instances belong to the Spring Cloud Gateway
type GatewayInstanceResponse struct {
	// Name of the Spring Cloud Gateway instance
	Name string `pulumi:"name"`
	// Status of the Spring Cloud Gateway instance
	Status string `pulumi:"status"`
}

// Collection of instances belong to the Spring Cloud Gateway
type GatewayInstanceResponseOutput struct{ *pulumi.OutputState }

func (GatewayInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayInstanceResponse)(nil)).Elem()
}

func (o GatewayInstanceResponseOutput) ToGatewayInstanceResponseOutput() GatewayInstanceResponseOutput {
	return o
}

func (o GatewayInstanceResponseOutput) ToGatewayInstanceResponseOutputWithContext(ctx context.Context) GatewayInstanceResponseOutput {
	return o
}

// Name of the Spring Cloud Gateway instance
func (o GatewayInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the Spring Cloud Gateway instance
func (o GatewayInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type GatewayInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayInstanceResponse)(nil)).Elem()
}

func (o GatewayInstanceResponseArrayOutput) ToGatewayInstanceResponseArrayOutput() GatewayInstanceResponseArrayOutput {
	return o
}

func (o GatewayInstanceResponseArrayOutput) ToGatewayInstanceResponseArrayOutputWithContext(ctx context.Context) GatewayInstanceResponseArrayOutput {
	return o
}

func (o GatewayInstanceResponseArrayOutput) Index(i pulumi.IntInput) GatewayInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayInstanceResponse {
		return vs[0].([]GatewayInstanceResponse)[vs[1].(int)]
	}).(GatewayInstanceResponseOutput)
}

// Spring Cloud Gateway local response cache per instance properties.
type GatewayLocalResponseCachePerInstanceProperties struct {
	// The type of the response cache.
	// Expected value is 'LocalCachePerInstance'.
	ResponseCacheType string `pulumi:"responseCacheType"`
	// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
	Size *string `pulumi:"size"`
	// Time before a cached entry is expired (300s, 5m, 1h...)
	TimeToLive *string `pulumi:"timeToLive"`
}

// GatewayLocalResponseCachePerInstancePropertiesInput is an input type that accepts GatewayLocalResponseCachePerInstancePropertiesArgs and GatewayLocalResponseCachePerInstancePropertiesOutput values.
// You can construct a concrete instance of `GatewayLocalResponseCachePerInstancePropertiesInput` via:
//
//	GatewayLocalResponseCachePerInstancePropertiesArgs{...}
type GatewayLocalResponseCachePerInstancePropertiesInput interface {
	pulumi.Input

	ToGatewayLocalResponseCachePerInstancePropertiesOutput() GatewayLocalResponseCachePerInstancePropertiesOutput
	ToGatewayLocalResponseCachePerInstancePropertiesOutputWithContext(context.Context) GatewayLocalResponseCachePerInstancePropertiesOutput
}

// Spring Cloud Gateway local response cache per instance properties.
type GatewayLocalResponseCachePerInstancePropertiesArgs struct {
	// The type of the response cache.
	// Expected value is 'LocalCachePerInstance'.
	ResponseCacheType pulumi.StringInput `pulumi:"responseCacheType"`
	// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Time before a cached entry is expired (300s, 5m, 1h...)
	TimeToLive pulumi.StringPtrInput `pulumi:"timeToLive"`
}

func (GatewayLocalResponseCachePerInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocalResponseCachePerInstanceProperties)(nil)).Elem()
}

func (i GatewayLocalResponseCachePerInstancePropertiesArgs) ToGatewayLocalResponseCachePerInstancePropertiesOutput() GatewayLocalResponseCachePerInstancePropertiesOutput {
	return i.ToGatewayLocalResponseCachePerInstancePropertiesOutputWithContext(context.Background())
}

func (i GatewayLocalResponseCachePerInstancePropertiesArgs) ToGatewayLocalResponseCachePerInstancePropertiesOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocalResponseCachePerInstancePropertiesOutput)
}

func (i GatewayLocalResponseCachePerInstancePropertiesArgs) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutput() GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return i.ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayLocalResponseCachePerInstancePropertiesArgs) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocalResponseCachePerInstancePropertiesOutput).ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(ctx)
}

// GatewayLocalResponseCachePerInstancePropertiesPtrInput is an input type that accepts GatewayLocalResponseCachePerInstancePropertiesArgs, GatewayLocalResponseCachePerInstancePropertiesPtr and GatewayLocalResponseCachePerInstancePropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayLocalResponseCachePerInstancePropertiesPtrInput` via:
//
//	        GatewayLocalResponseCachePerInstancePropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayLocalResponseCachePerInstancePropertiesPtrInput interface {
	pulumi.Input

	ToGatewayLocalResponseCachePerInstancePropertiesPtrOutput() GatewayLocalResponseCachePerInstancePropertiesPtrOutput
	ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(context.Context) GatewayLocalResponseCachePerInstancePropertiesPtrOutput
}

type gatewayLocalResponseCachePerInstancePropertiesPtrType GatewayLocalResponseCachePerInstancePropertiesArgs

func GatewayLocalResponseCachePerInstancePropertiesPtr(v *GatewayLocalResponseCachePerInstancePropertiesArgs) GatewayLocalResponseCachePerInstancePropertiesPtrInput {
	return (*gatewayLocalResponseCachePerInstancePropertiesPtrType)(v)
}

func (*gatewayLocalResponseCachePerInstancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocalResponseCachePerInstanceProperties)(nil)).Elem()
}

func (i *gatewayLocalResponseCachePerInstancePropertiesPtrType) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutput() GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return i.ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayLocalResponseCachePerInstancePropertiesPtrType) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocalResponseCachePerInstancePropertiesPtrOutput)
}

// Spring Cloud Gateway local response cache per instance properties.
type GatewayLocalResponseCachePerInstancePropertiesOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocalResponseCachePerInstanceProperties)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerInstancePropertiesOutput) ToGatewayLocalResponseCachePerInstancePropertiesOutput() GatewayLocalResponseCachePerInstancePropertiesOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesOutput) ToGatewayLocalResponseCachePerInstancePropertiesOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesOutput) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutput() GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return o.ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayLocalResponseCachePerInstancePropertiesOutput) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayLocalResponseCachePerInstanceProperties) *GatewayLocalResponseCachePerInstanceProperties {
		return &v
	}).(GatewayLocalResponseCachePerInstancePropertiesPtrOutput)
}

// The type of the response cache.
// Expected value is 'LocalCachePerInstance'.
func (o GatewayLocalResponseCachePerInstancePropertiesOutput) ResponseCacheType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerInstanceProperties) string { return v.ResponseCacheType }).(pulumi.StringOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
func (o GatewayLocalResponseCachePerInstancePropertiesOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerInstanceProperties) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerInstancePropertiesOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerInstanceProperties) *string { return v.TimeToLive }).(pulumi.StringPtrOutput)
}

type GatewayLocalResponseCachePerInstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerInstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocalResponseCachePerInstanceProperties)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerInstancePropertiesPtrOutput) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutput() GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesPtrOutput) ToGatewayLocalResponseCachePerInstancePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesPtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesPtrOutput) Elem() GatewayLocalResponseCachePerInstancePropertiesOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstanceProperties) GatewayLocalResponseCachePerInstanceProperties {
		if v != nil {
			return *v
		}
		var ret GatewayLocalResponseCachePerInstanceProperties
		return ret
	}).(GatewayLocalResponseCachePerInstancePropertiesOutput)
}

// The type of the response cache.
// Expected value is 'LocalCachePerInstance'.
func (o GatewayLocalResponseCachePerInstancePropertiesPtrOutput) ResponseCacheType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResponseCacheType
	}).(pulumi.StringPtrOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
func (o GatewayLocalResponseCachePerInstancePropertiesPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerInstancePropertiesPtrOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeToLive
	}).(pulumi.StringPtrOutput)
}

// Spring Cloud Gateway local response cache per instance properties.
type GatewayLocalResponseCachePerInstancePropertiesResponse struct {
	// The type of the response cache.
	// Expected value is 'LocalCachePerInstance'.
	ResponseCacheType string `pulumi:"responseCacheType"`
	// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
	Size *string `pulumi:"size"`
	// Time before a cached entry is expired (300s, 5m, 1h...)
	TimeToLive *string `pulumi:"timeToLive"`
}

// Spring Cloud Gateway local response cache per instance properties.
type GatewayLocalResponseCachePerInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocalResponseCachePerInstancePropertiesResponse)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerInstancePropertiesResponseOutput) ToGatewayLocalResponseCachePerInstancePropertiesResponseOutput() GatewayLocalResponseCachePerInstancePropertiesResponseOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesResponseOutput) ToGatewayLocalResponseCachePerInstancePropertiesResponseOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesResponseOutput {
	return o
}

// The type of the response cache.
// Expected value is 'LocalCachePerInstance'.
func (o GatewayLocalResponseCachePerInstancePropertiesResponseOutput) ResponseCacheType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerInstancePropertiesResponse) string { return v.ResponseCacheType }).(pulumi.StringOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
func (o GatewayLocalResponseCachePerInstancePropertiesResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerInstancePropertiesResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerInstancePropertiesResponseOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerInstancePropertiesResponse) *string { return v.TimeToLive }).(pulumi.StringPtrOutput)
}

type GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocalResponseCachePerInstancePropertiesResponse)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) ToGatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput() GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) ToGatewayLocalResponseCachePerInstancePropertiesResponsePtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) Elem() GatewayLocalResponseCachePerInstancePropertiesResponseOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstancePropertiesResponse) GatewayLocalResponseCachePerInstancePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GatewayLocalResponseCachePerInstancePropertiesResponse
		return ret
	}).(GatewayLocalResponseCachePerInstancePropertiesResponseOutput)
}

// The type of the response cache.
// Expected value is 'LocalCachePerInstance'.
func (o GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) ResponseCacheType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResponseCacheType
	}).(pulumi.StringPtrOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries
func (o GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeToLive
	}).(pulumi.StringPtrOutput)
}

// Spring Cloud Gateway local response cache per route properties.
type GatewayLocalResponseCachePerRouteProperties struct {
	// The type of the response cache.
	// Expected value is 'LocalCachePerRoute'.
	ResponseCacheType string `pulumi:"responseCacheType"`
	// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
	Size *string `pulumi:"size"`
	// Time before a cached entry is expired (300s, 5m, 1h...)
	TimeToLive *string `pulumi:"timeToLive"`
}

// GatewayLocalResponseCachePerRoutePropertiesInput is an input type that accepts GatewayLocalResponseCachePerRoutePropertiesArgs and GatewayLocalResponseCachePerRoutePropertiesOutput values.
// You can construct a concrete instance of `GatewayLocalResponseCachePerRoutePropertiesInput` via:
//
//	GatewayLocalResponseCachePerRoutePropertiesArgs{...}
type GatewayLocalResponseCachePerRoutePropertiesInput interface {
	pulumi.Input

	ToGatewayLocalResponseCachePerRoutePropertiesOutput() GatewayLocalResponseCachePerRoutePropertiesOutput
	ToGatewayLocalResponseCachePerRoutePropertiesOutputWithContext(context.Context) GatewayLocalResponseCachePerRoutePropertiesOutput
}

// Spring Cloud Gateway local response cache per route properties.
type GatewayLocalResponseCachePerRoutePropertiesArgs struct {
	// The type of the response cache.
	// Expected value is 'LocalCachePerRoute'.
	ResponseCacheType pulumi.StringInput `pulumi:"responseCacheType"`
	// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Time before a cached entry is expired (300s, 5m, 1h...)
	TimeToLive pulumi.StringPtrInput `pulumi:"timeToLive"`
}

func (GatewayLocalResponseCachePerRoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocalResponseCachePerRouteProperties)(nil)).Elem()
}

func (i GatewayLocalResponseCachePerRoutePropertiesArgs) ToGatewayLocalResponseCachePerRoutePropertiesOutput() GatewayLocalResponseCachePerRoutePropertiesOutput {
	return i.ToGatewayLocalResponseCachePerRoutePropertiesOutputWithContext(context.Background())
}

func (i GatewayLocalResponseCachePerRoutePropertiesArgs) ToGatewayLocalResponseCachePerRoutePropertiesOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocalResponseCachePerRoutePropertiesOutput)
}

func (i GatewayLocalResponseCachePerRoutePropertiesArgs) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutput() GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return i.ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayLocalResponseCachePerRoutePropertiesArgs) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocalResponseCachePerRoutePropertiesOutput).ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(ctx)
}

// GatewayLocalResponseCachePerRoutePropertiesPtrInput is an input type that accepts GatewayLocalResponseCachePerRoutePropertiesArgs, GatewayLocalResponseCachePerRoutePropertiesPtr and GatewayLocalResponseCachePerRoutePropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayLocalResponseCachePerRoutePropertiesPtrInput` via:
//
//	        GatewayLocalResponseCachePerRoutePropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayLocalResponseCachePerRoutePropertiesPtrInput interface {
	pulumi.Input

	ToGatewayLocalResponseCachePerRoutePropertiesPtrOutput() GatewayLocalResponseCachePerRoutePropertiesPtrOutput
	ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(context.Context) GatewayLocalResponseCachePerRoutePropertiesPtrOutput
}

type gatewayLocalResponseCachePerRoutePropertiesPtrType GatewayLocalResponseCachePerRoutePropertiesArgs

func GatewayLocalResponseCachePerRoutePropertiesPtr(v *GatewayLocalResponseCachePerRoutePropertiesArgs) GatewayLocalResponseCachePerRoutePropertiesPtrInput {
	return (*gatewayLocalResponseCachePerRoutePropertiesPtrType)(v)
}

func (*gatewayLocalResponseCachePerRoutePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocalResponseCachePerRouteProperties)(nil)).Elem()
}

func (i *gatewayLocalResponseCachePerRoutePropertiesPtrType) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutput() GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return i.ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayLocalResponseCachePerRoutePropertiesPtrType) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocalResponseCachePerRoutePropertiesPtrOutput)
}

// Spring Cloud Gateway local response cache per route properties.
type GatewayLocalResponseCachePerRoutePropertiesOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerRoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocalResponseCachePerRouteProperties)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerRoutePropertiesOutput) ToGatewayLocalResponseCachePerRoutePropertiesOutput() GatewayLocalResponseCachePerRoutePropertiesOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesOutput) ToGatewayLocalResponseCachePerRoutePropertiesOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesOutput) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutput() GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return o.ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayLocalResponseCachePerRoutePropertiesOutput) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayLocalResponseCachePerRouteProperties) *GatewayLocalResponseCachePerRouteProperties {
		return &v
	}).(GatewayLocalResponseCachePerRoutePropertiesPtrOutput)
}

// The type of the response cache.
// Expected value is 'LocalCachePerRoute'.
func (o GatewayLocalResponseCachePerRoutePropertiesOutput) ResponseCacheType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerRouteProperties) string { return v.ResponseCacheType }).(pulumi.StringOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
func (o GatewayLocalResponseCachePerRoutePropertiesOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerRouteProperties) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerRoutePropertiesOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerRouteProperties) *string { return v.TimeToLive }).(pulumi.StringPtrOutput)
}

type GatewayLocalResponseCachePerRoutePropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerRoutePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocalResponseCachePerRouteProperties)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerRoutePropertiesPtrOutput) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutput() GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesPtrOutput) ToGatewayLocalResponseCachePerRoutePropertiesPtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesPtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesPtrOutput) Elem() GatewayLocalResponseCachePerRoutePropertiesOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRouteProperties) GatewayLocalResponseCachePerRouteProperties {
		if v != nil {
			return *v
		}
		var ret GatewayLocalResponseCachePerRouteProperties
		return ret
	}).(GatewayLocalResponseCachePerRoutePropertiesOutput)
}

// The type of the response cache.
// Expected value is 'LocalCachePerRoute'.
func (o GatewayLocalResponseCachePerRoutePropertiesPtrOutput) ResponseCacheType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRouteProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResponseCacheType
	}).(pulumi.StringPtrOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
func (o GatewayLocalResponseCachePerRoutePropertiesPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerRoutePropertiesPtrOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeToLive
	}).(pulumi.StringPtrOutput)
}

// Spring Cloud Gateway local response cache per route properties.
type GatewayLocalResponseCachePerRoutePropertiesResponse struct {
	// The type of the response cache.
	// Expected value is 'LocalCachePerRoute'.
	ResponseCacheType string `pulumi:"responseCacheType"`
	// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
	Size *string `pulumi:"size"`
	// Time before a cached entry is expired (300s, 5m, 1h...)
	TimeToLive *string `pulumi:"timeToLive"`
}

// Spring Cloud Gateway local response cache per route properties.
type GatewayLocalResponseCachePerRoutePropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerRoutePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocalResponseCachePerRoutePropertiesResponse)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerRoutePropertiesResponseOutput) ToGatewayLocalResponseCachePerRoutePropertiesResponseOutput() GatewayLocalResponseCachePerRoutePropertiesResponseOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesResponseOutput) ToGatewayLocalResponseCachePerRoutePropertiesResponseOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesResponseOutput {
	return o
}

// The type of the response cache.
// Expected value is 'LocalCachePerRoute'.
func (o GatewayLocalResponseCachePerRoutePropertiesResponseOutput) ResponseCacheType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerRoutePropertiesResponse) string { return v.ResponseCacheType }).(pulumi.StringOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
func (o GatewayLocalResponseCachePerRoutePropertiesResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerRoutePropertiesResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerRoutePropertiesResponseOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocalResponseCachePerRoutePropertiesResponse) *string { return v.TimeToLive }).(pulumi.StringPtrOutput)
}

type GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocalResponseCachePerRoutePropertiesResponse)(nil)).Elem()
}

func (o GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) ToGatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput() GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) ToGatewayLocalResponseCachePerRoutePropertiesResponsePtrOutputWithContext(ctx context.Context) GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput {
	return o
}

func (o GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) Elem() GatewayLocalResponseCachePerRoutePropertiesResponseOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRoutePropertiesResponse) GatewayLocalResponseCachePerRoutePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GatewayLocalResponseCachePerRoutePropertiesResponse
		return ret
	}).(GatewayLocalResponseCachePerRoutePropertiesResponseOutput)
}

// The type of the response cache.
// Expected value is 'LocalCachePerRoute'.
func (o GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) ResponseCacheType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResponseCacheType
	}).(pulumi.StringPtrOutput)
}

// Maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.
func (o GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Time before a cached entry is expired (300s, 5m, 1h...)
func (o GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocalResponseCachePerRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeToLive
	}).(pulumi.StringPtrOutput)
}

// Properties of the Spring Cloud Gateway Operator.
type GatewayOperatorPropertiesResponse struct {
	// Collection of instances belong to Spring Cloud Gateway operator.
	Instances []GatewayInstanceResponse `pulumi:"instances"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests GatewayOperatorResourceRequestsResponse `pulumi:"resourceRequests"`
}

// Properties of the Spring Cloud Gateway Operator.
type GatewayOperatorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayOperatorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOperatorPropertiesResponse)(nil)).Elem()
}

func (o GatewayOperatorPropertiesResponseOutput) ToGatewayOperatorPropertiesResponseOutput() GatewayOperatorPropertiesResponseOutput {
	return o
}

func (o GatewayOperatorPropertiesResponseOutput) ToGatewayOperatorPropertiesResponseOutputWithContext(ctx context.Context) GatewayOperatorPropertiesResponseOutput {
	return o
}

// Collection of instances belong to Spring Cloud Gateway operator.
func (o GatewayOperatorPropertiesResponseOutput) Instances() GatewayInstanceResponseArrayOutput {
	return o.ApplyT(func(v GatewayOperatorPropertiesResponse) []GatewayInstanceResponse { return v.Instances }).(GatewayInstanceResponseArrayOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o GatewayOperatorPropertiesResponseOutput) ResourceRequests() GatewayOperatorResourceRequestsResponseOutput {
	return o.ApplyT(func(v GatewayOperatorPropertiesResponse) GatewayOperatorResourceRequestsResponse {
		return v.ResourceRequests
	}).(GatewayOperatorResourceRequestsResponseOutput)
}

// Properties of the Spring Cloud Gateway Operator.
type GatewayOperatorResourceRequestsResponse struct {
	// Cpu allocated to each Spring Cloud Gateway Operator instance.
	Cpu string `pulumi:"cpu"`
	// Instance count of the Spring Cloud Gateway Operator.
	InstanceCount int `pulumi:"instanceCount"`
	// Memory allocated to each Spring Cloud Gateway Operator instance.
	Memory string `pulumi:"memory"`
}

// Properties of the Spring Cloud Gateway Operator.
type GatewayOperatorResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (GatewayOperatorResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOperatorResourceRequestsResponse)(nil)).Elem()
}

func (o GatewayOperatorResourceRequestsResponseOutput) ToGatewayOperatorResourceRequestsResponseOutput() GatewayOperatorResourceRequestsResponseOutput {
	return o
}

func (o GatewayOperatorResourceRequestsResponseOutput) ToGatewayOperatorResourceRequestsResponseOutputWithContext(ctx context.Context) GatewayOperatorResourceRequestsResponseOutput {
	return o
}

// Cpu allocated to each Spring Cloud Gateway Operator instance.
func (o GatewayOperatorResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayOperatorResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Instance count of the Spring Cloud Gateway Operator.
func (o GatewayOperatorResourceRequestsResponseOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayOperatorResourceRequestsResponse) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Memory allocated to each Spring Cloud Gateway Operator instance.
func (o GatewayOperatorResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayOperatorResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// Spring Cloud Gateway properties payload
type GatewayProperties struct {
	// Collection of addons for Spring Cloud Gateway
	AddonConfigs map[string]interface{} `pulumi:"addonConfigs"`
	// API metadata property for Spring Cloud Gateway
	ApiMetadataProperties *GatewayApiMetadataProperties `pulumi:"apiMetadataProperties"`
	// Collection of APM type used in Spring Cloud Gateway
	ApmTypes []string `pulumi:"apmTypes"`
	// Collection of ApmReferences in service level
	Apms []ApmReference `pulumi:"apms"`
	// Client-Certification Authentication.
	ClientAuth *GatewayPropertiesClientAuth `pulumi:"clientAuth"`
	// Cross-Origin Resource Sharing property
	CorsProperties *GatewayCorsProperties `pulumi:"corsProperties"`
	// Environment variables of Spring Cloud Gateway
	EnvironmentVariables *GatewayPropertiesEnvironmentVariables `pulumi:"environmentVariables"`
	// Indicate if only https is allowed.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	Public *bool `pulumi:"public"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests *GatewayResourceRequests `pulumi:"resourceRequests"`
	// The properties to configure different types of response cache for Spring Cloud Gateway.
	ResponseCacheProperties interface{} `pulumi:"responseCacheProperties"`
	// Single sign-on related configuration
	SsoProperties *SsoProperties `pulumi:"ssoProperties"`
}

// Defaults sets the appropriate defaults for GatewayProperties
func (val *GatewayProperties) Defaults() *GatewayProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ClientAuth = tmp.ClientAuth.Defaults()

	if tmp.HttpsOnly == nil {
		httpsOnly_ := false
		tmp.HttpsOnly = &httpsOnly_
	}
	if tmp.Public == nil {
		public_ := false
		tmp.Public = &public_
	}
	tmp.ResourceRequests = tmp.ResourceRequests.Defaults()

	return &tmp
}

// GatewayPropertiesInput is an input type that accepts GatewayPropertiesArgs and GatewayPropertiesOutput values.
// You can construct a concrete instance of `GatewayPropertiesInput` via:
//
//	GatewayPropertiesArgs{...}
type GatewayPropertiesInput interface {
	pulumi.Input

	ToGatewayPropertiesOutput() GatewayPropertiesOutput
	ToGatewayPropertiesOutputWithContext(context.Context) GatewayPropertiesOutput
}

// Spring Cloud Gateway properties payload
type GatewayPropertiesArgs struct {
	// Collection of addons for Spring Cloud Gateway
	AddonConfigs pulumi.MapInput `pulumi:"addonConfigs"`
	// API metadata property for Spring Cloud Gateway
	ApiMetadataProperties GatewayApiMetadataPropertiesPtrInput `pulumi:"apiMetadataProperties"`
	// Collection of APM type used in Spring Cloud Gateway
	ApmTypes pulumi.StringArrayInput `pulumi:"apmTypes"`
	// Collection of ApmReferences in service level
	Apms ApmReferenceArrayInput `pulumi:"apms"`
	// Client-Certification Authentication.
	ClientAuth GatewayPropertiesClientAuthPtrInput `pulumi:"clientAuth"`
	// Cross-Origin Resource Sharing property
	CorsProperties GatewayCorsPropertiesPtrInput `pulumi:"corsProperties"`
	// Environment variables of Spring Cloud Gateway
	EnvironmentVariables GatewayPropertiesEnvironmentVariablesPtrInput `pulumi:"environmentVariables"`
	// Indicate if only https is allowed.
	HttpsOnly pulumi.BoolPtrInput `pulumi:"httpsOnly"`
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests GatewayResourceRequestsPtrInput `pulumi:"resourceRequests"`
	// The properties to configure different types of response cache for Spring Cloud Gateway.
	ResponseCacheProperties pulumi.Input `pulumi:"responseCacheProperties"`
	// Single sign-on related configuration
	SsoProperties SsoPropertiesPtrInput `pulumi:"ssoProperties"`
}

// Defaults sets the appropriate defaults for GatewayPropertiesArgs
func (val *GatewayPropertiesArgs) Defaults() *GatewayPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.HttpsOnly == nil {
		tmp.HttpsOnly = pulumi.BoolPtr(false)
	}
	if tmp.Public == nil {
		tmp.Public = pulumi.BoolPtr(false)
	}

	return &tmp
}
func (GatewayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayProperties)(nil)).Elem()
}

func (i GatewayPropertiesArgs) ToGatewayPropertiesOutput() GatewayPropertiesOutput {
	return i.ToGatewayPropertiesOutputWithContext(context.Background())
}

func (i GatewayPropertiesArgs) ToGatewayPropertiesOutputWithContext(ctx context.Context) GatewayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesOutput)
}

func (i GatewayPropertiesArgs) ToGatewayPropertiesPtrOutput() GatewayPropertiesPtrOutput {
	return i.ToGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayPropertiesArgs) ToGatewayPropertiesPtrOutputWithContext(ctx context.Context) GatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesOutput).ToGatewayPropertiesPtrOutputWithContext(ctx)
}

// GatewayPropertiesPtrInput is an input type that accepts GatewayPropertiesArgs, GatewayPropertiesPtr and GatewayPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayPropertiesPtrInput` via:
//
//	        GatewayPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayPropertiesPtrOutput() GatewayPropertiesPtrOutput
	ToGatewayPropertiesPtrOutputWithContext(context.Context) GatewayPropertiesPtrOutput
}

type gatewayPropertiesPtrType GatewayPropertiesArgs

func GatewayPropertiesPtr(v *GatewayPropertiesArgs) GatewayPropertiesPtrInput {
	return (*gatewayPropertiesPtrType)(v)
}

func (*gatewayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayProperties)(nil)).Elem()
}

func (i *gatewayPropertiesPtrType) ToGatewayPropertiesPtrOutput() GatewayPropertiesPtrOutput {
	return i.ToGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayPropertiesPtrType) ToGatewayPropertiesPtrOutputWithContext(ctx context.Context) GatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesPtrOutput)
}

// Spring Cloud Gateway properties payload
type GatewayPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayProperties)(nil)).Elem()
}

func (o GatewayPropertiesOutput) ToGatewayPropertiesOutput() GatewayPropertiesOutput {
	return o
}

func (o GatewayPropertiesOutput) ToGatewayPropertiesOutputWithContext(ctx context.Context) GatewayPropertiesOutput {
	return o
}

func (o GatewayPropertiesOutput) ToGatewayPropertiesPtrOutput() GatewayPropertiesPtrOutput {
	return o.ToGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayPropertiesOutput) ToGatewayPropertiesPtrOutputWithContext(ctx context.Context) GatewayPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayProperties) *GatewayProperties {
		return &v
	}).(GatewayPropertiesPtrOutput)
}

// Collection of addons for Spring Cloud Gateway
func (o GatewayPropertiesOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v GatewayProperties) map[string]interface{} { return v.AddonConfigs }).(pulumi.MapOutput)
}

// API metadata property for Spring Cloud Gateway
func (o GatewayPropertiesOutput) ApiMetadataProperties() GatewayApiMetadataPropertiesPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *GatewayApiMetadataProperties { return v.ApiMetadataProperties }).(GatewayApiMetadataPropertiesPtrOutput)
}

// Collection of APM type used in Spring Cloud Gateway
func (o GatewayPropertiesOutput) ApmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayProperties) []string { return v.ApmTypes }).(pulumi.StringArrayOutput)
}

// Collection of ApmReferences in service level
func (o GatewayPropertiesOutput) Apms() ApmReferenceArrayOutput {
	return o.ApplyT(func(v GatewayProperties) []ApmReference { return v.Apms }).(ApmReferenceArrayOutput)
}

// Client-Certification Authentication.
func (o GatewayPropertiesOutput) ClientAuth() GatewayPropertiesClientAuthPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *GatewayPropertiesClientAuth { return v.ClientAuth }).(GatewayPropertiesClientAuthPtrOutput)
}

// Cross-Origin Resource Sharing property
func (o GatewayPropertiesOutput) CorsProperties() GatewayCorsPropertiesPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *GatewayCorsProperties { return v.CorsProperties }).(GatewayCorsPropertiesPtrOutput)
}

// Environment variables of Spring Cloud Gateway
func (o GatewayPropertiesOutput) EnvironmentVariables() GatewayPropertiesEnvironmentVariablesPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *GatewayPropertiesEnvironmentVariables { return v.EnvironmentVariables }).(GatewayPropertiesEnvironmentVariablesPtrOutput)
}

// Indicate if only https is allowed.
func (o GatewayPropertiesOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// Indicates whether the Spring Cloud Gateway exposes endpoint.
func (o GatewayPropertiesOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o GatewayPropertiesOutput) ResourceRequests() GatewayResourceRequestsPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *GatewayResourceRequests { return v.ResourceRequests }).(GatewayResourceRequestsPtrOutput)
}

// The properties to configure different types of response cache for Spring Cloud Gateway.
func (o GatewayPropertiesOutput) ResponseCacheProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v GatewayProperties) interface{} { return v.ResponseCacheProperties }).(pulumi.AnyOutput)
}

// Single sign-on related configuration
func (o GatewayPropertiesOutput) SsoProperties() SsoPropertiesPtrOutput {
	return o.ApplyT(func(v GatewayProperties) *SsoProperties { return v.SsoProperties }).(SsoPropertiesPtrOutput)
}

type GatewayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayProperties)(nil)).Elem()
}

func (o GatewayPropertiesPtrOutput) ToGatewayPropertiesPtrOutput() GatewayPropertiesPtrOutput {
	return o
}

func (o GatewayPropertiesPtrOutput) ToGatewayPropertiesPtrOutputWithContext(ctx context.Context) GatewayPropertiesPtrOutput {
	return o
}

func (o GatewayPropertiesPtrOutput) Elem() GatewayPropertiesOutput {
	return o.ApplyT(func(v *GatewayProperties) GatewayProperties {
		if v != nil {
			return *v
		}
		var ret GatewayProperties
		return ret
	}).(GatewayPropertiesOutput)
}

// Collection of addons for Spring Cloud Gateway
func (o GatewayPropertiesPtrOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v *GatewayProperties) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AddonConfigs
	}).(pulumi.MapOutput)
}

// API metadata property for Spring Cloud Gateway
func (o GatewayPropertiesPtrOutput) ApiMetadataProperties() GatewayApiMetadataPropertiesPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *GatewayApiMetadataProperties {
		if v == nil {
			return nil
		}
		return v.ApiMetadataProperties
	}).(GatewayApiMetadataPropertiesPtrOutput)
}

// Collection of APM type used in Spring Cloud Gateway
func (o GatewayPropertiesPtrOutput) ApmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayProperties) []string {
		if v == nil {
			return nil
		}
		return v.ApmTypes
	}).(pulumi.StringArrayOutput)
}

// Collection of ApmReferences in service level
func (o GatewayPropertiesPtrOutput) Apms() ApmReferenceArrayOutput {
	return o.ApplyT(func(v *GatewayProperties) []ApmReference {
		if v == nil {
			return nil
		}
		return v.Apms
	}).(ApmReferenceArrayOutput)
}

// Client-Certification Authentication.
func (o GatewayPropertiesPtrOutput) ClientAuth() GatewayPropertiesClientAuthPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *GatewayPropertiesClientAuth {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(GatewayPropertiesClientAuthPtrOutput)
}

// Cross-Origin Resource Sharing property
func (o GatewayPropertiesPtrOutput) CorsProperties() GatewayCorsPropertiesPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *GatewayCorsProperties {
		if v == nil {
			return nil
		}
		return v.CorsProperties
	}).(GatewayCorsPropertiesPtrOutput)
}

// Environment variables of Spring Cloud Gateway
func (o GatewayPropertiesPtrOutput) EnvironmentVariables() GatewayPropertiesEnvironmentVariablesPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *GatewayPropertiesEnvironmentVariables {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(GatewayPropertiesEnvironmentVariablesPtrOutput)
}

// Indicate if only https is allowed.
func (o GatewayPropertiesPtrOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsOnly
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the Spring Cloud Gateway exposes endpoint.
func (o GatewayPropertiesPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o GatewayPropertiesPtrOutput) ResourceRequests() GatewayResourceRequestsPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *GatewayResourceRequests {
		if v == nil {
			return nil
		}
		return v.ResourceRequests
	}).(GatewayResourceRequestsPtrOutput)
}

// The properties to configure different types of response cache for Spring Cloud Gateway.
func (o GatewayPropertiesPtrOutput) ResponseCacheProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v *GatewayProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ResponseCacheProperties
	}).(pulumi.AnyOutput)
}

// Single sign-on related configuration
func (o GatewayPropertiesPtrOutput) SsoProperties() SsoPropertiesPtrOutput {
	return o.ApplyT(func(v *GatewayProperties) *SsoProperties {
		if v == nil {
			return nil
		}
		return v.SsoProperties
	}).(SsoPropertiesPtrOutput)
}

// Client-Certification Authentication.
type GatewayPropertiesClientAuth struct {
	// Whether to enable certificate verification or not
	CertificateVerification *string `pulumi:"certificateVerification"`
	// Collection of certificate resource Ids in Azure Spring Apps.
	Certificates []string `pulumi:"certificates"`
}

// Defaults sets the appropriate defaults for GatewayPropertiesClientAuth
func (val *GatewayPropertiesClientAuth) Defaults() *GatewayPropertiesClientAuth {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CertificateVerification == nil {
		certificateVerification_ := "Disabled"
		tmp.CertificateVerification = &certificateVerification_
	}
	return &tmp
}

// GatewayPropertiesClientAuthInput is an input type that accepts GatewayPropertiesClientAuthArgs and GatewayPropertiesClientAuthOutput values.
// You can construct a concrete instance of `GatewayPropertiesClientAuthInput` via:
//
//	GatewayPropertiesClientAuthArgs{...}
type GatewayPropertiesClientAuthInput interface {
	pulumi.Input

	ToGatewayPropertiesClientAuthOutput() GatewayPropertiesClientAuthOutput
	ToGatewayPropertiesClientAuthOutputWithContext(context.Context) GatewayPropertiesClientAuthOutput
}

// Client-Certification Authentication.
type GatewayPropertiesClientAuthArgs struct {
	// Whether to enable certificate verification or not
	CertificateVerification pulumi.StringPtrInput `pulumi:"certificateVerification"`
	// Collection of certificate resource Ids in Azure Spring Apps.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
}

// Defaults sets the appropriate defaults for GatewayPropertiesClientAuthArgs
func (val *GatewayPropertiesClientAuthArgs) Defaults() *GatewayPropertiesClientAuthArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CertificateVerification == nil {
		tmp.CertificateVerification = pulumi.StringPtr("Disabled")
	}
	return &tmp
}
func (GatewayPropertiesClientAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesClientAuth)(nil)).Elem()
}

func (i GatewayPropertiesClientAuthArgs) ToGatewayPropertiesClientAuthOutput() GatewayPropertiesClientAuthOutput {
	return i.ToGatewayPropertiesClientAuthOutputWithContext(context.Background())
}

func (i GatewayPropertiesClientAuthArgs) ToGatewayPropertiesClientAuthOutputWithContext(ctx context.Context) GatewayPropertiesClientAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesClientAuthOutput)
}

func (i GatewayPropertiesClientAuthArgs) ToGatewayPropertiesClientAuthPtrOutput() GatewayPropertiesClientAuthPtrOutput {
	return i.ToGatewayPropertiesClientAuthPtrOutputWithContext(context.Background())
}

func (i GatewayPropertiesClientAuthArgs) ToGatewayPropertiesClientAuthPtrOutputWithContext(ctx context.Context) GatewayPropertiesClientAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesClientAuthOutput).ToGatewayPropertiesClientAuthPtrOutputWithContext(ctx)
}

// GatewayPropertiesClientAuthPtrInput is an input type that accepts GatewayPropertiesClientAuthArgs, GatewayPropertiesClientAuthPtr and GatewayPropertiesClientAuthPtrOutput values.
// You can construct a concrete instance of `GatewayPropertiesClientAuthPtrInput` via:
//
//	        GatewayPropertiesClientAuthArgs{...}
//
//	or:
//
//	        nil
type GatewayPropertiesClientAuthPtrInput interface {
	pulumi.Input

	ToGatewayPropertiesClientAuthPtrOutput() GatewayPropertiesClientAuthPtrOutput
	ToGatewayPropertiesClientAuthPtrOutputWithContext(context.Context) GatewayPropertiesClientAuthPtrOutput
}

type gatewayPropertiesClientAuthPtrType GatewayPropertiesClientAuthArgs

func GatewayPropertiesClientAuthPtr(v *GatewayPropertiesClientAuthArgs) GatewayPropertiesClientAuthPtrInput {
	return (*gatewayPropertiesClientAuthPtrType)(v)
}

func (*gatewayPropertiesClientAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPropertiesClientAuth)(nil)).Elem()
}

func (i *gatewayPropertiesClientAuthPtrType) ToGatewayPropertiesClientAuthPtrOutput() GatewayPropertiesClientAuthPtrOutput {
	return i.ToGatewayPropertiesClientAuthPtrOutputWithContext(context.Background())
}

func (i *gatewayPropertiesClientAuthPtrType) ToGatewayPropertiesClientAuthPtrOutputWithContext(ctx context.Context) GatewayPropertiesClientAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesClientAuthPtrOutput)
}

// Client-Certification Authentication.
type GatewayPropertiesClientAuthOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesClientAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesClientAuth)(nil)).Elem()
}

func (o GatewayPropertiesClientAuthOutput) ToGatewayPropertiesClientAuthOutput() GatewayPropertiesClientAuthOutput {
	return o
}

func (o GatewayPropertiesClientAuthOutput) ToGatewayPropertiesClientAuthOutputWithContext(ctx context.Context) GatewayPropertiesClientAuthOutput {
	return o
}

func (o GatewayPropertiesClientAuthOutput) ToGatewayPropertiesClientAuthPtrOutput() GatewayPropertiesClientAuthPtrOutput {
	return o.ToGatewayPropertiesClientAuthPtrOutputWithContext(context.Background())
}

func (o GatewayPropertiesClientAuthOutput) ToGatewayPropertiesClientAuthPtrOutputWithContext(ctx context.Context) GatewayPropertiesClientAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPropertiesClientAuth) *GatewayPropertiesClientAuth {
		return &v
	}).(GatewayPropertiesClientAuthPtrOutput)
}

// Whether to enable certificate verification or not
func (o GatewayPropertiesClientAuthOutput) CertificateVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPropertiesClientAuth) *string { return v.CertificateVerification }).(pulumi.StringPtrOutput)
}

// Collection of certificate resource Ids in Azure Spring Apps.
func (o GatewayPropertiesClientAuthOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPropertiesClientAuth) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

type GatewayPropertiesClientAuthPtrOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesClientAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPropertiesClientAuth)(nil)).Elem()
}

func (o GatewayPropertiesClientAuthPtrOutput) ToGatewayPropertiesClientAuthPtrOutput() GatewayPropertiesClientAuthPtrOutput {
	return o
}

func (o GatewayPropertiesClientAuthPtrOutput) ToGatewayPropertiesClientAuthPtrOutputWithContext(ctx context.Context) GatewayPropertiesClientAuthPtrOutput {
	return o
}

func (o GatewayPropertiesClientAuthPtrOutput) Elem() GatewayPropertiesClientAuthOutput {
	return o.ApplyT(func(v *GatewayPropertiesClientAuth) GatewayPropertiesClientAuth {
		if v != nil {
			return *v
		}
		var ret GatewayPropertiesClientAuth
		return ret
	}).(GatewayPropertiesClientAuthOutput)
}

// Whether to enable certificate verification or not
func (o GatewayPropertiesClientAuthPtrOutput) CertificateVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPropertiesClientAuth) *string {
		if v == nil {
			return nil
		}
		return v.CertificateVerification
	}).(pulumi.StringPtrOutput)
}

// Collection of certificate resource Ids in Azure Spring Apps.
func (o GatewayPropertiesClientAuthPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPropertiesClientAuth) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// Environment variables of Spring Cloud Gateway
type GatewayPropertiesEnvironmentVariables struct {
	// Non-sensitive properties
	Properties map[string]string `pulumi:"properties"`
	// Sensitive properties
	Secrets map[string]string `pulumi:"secrets"`
}

// GatewayPropertiesEnvironmentVariablesInput is an input type that accepts GatewayPropertiesEnvironmentVariablesArgs and GatewayPropertiesEnvironmentVariablesOutput values.
// You can construct a concrete instance of `GatewayPropertiesEnvironmentVariablesInput` via:
//
//	GatewayPropertiesEnvironmentVariablesArgs{...}
type GatewayPropertiesEnvironmentVariablesInput interface {
	pulumi.Input

	ToGatewayPropertiesEnvironmentVariablesOutput() GatewayPropertiesEnvironmentVariablesOutput
	ToGatewayPropertiesEnvironmentVariablesOutputWithContext(context.Context) GatewayPropertiesEnvironmentVariablesOutput
}

// Environment variables of Spring Cloud Gateway
type GatewayPropertiesEnvironmentVariablesArgs struct {
	// Non-sensitive properties
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Sensitive properties
	Secrets pulumi.StringMapInput `pulumi:"secrets"`
}

func (GatewayPropertiesEnvironmentVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesEnvironmentVariables)(nil)).Elem()
}

func (i GatewayPropertiesEnvironmentVariablesArgs) ToGatewayPropertiesEnvironmentVariablesOutput() GatewayPropertiesEnvironmentVariablesOutput {
	return i.ToGatewayPropertiesEnvironmentVariablesOutputWithContext(context.Background())
}

func (i GatewayPropertiesEnvironmentVariablesArgs) ToGatewayPropertiesEnvironmentVariablesOutputWithContext(ctx context.Context) GatewayPropertiesEnvironmentVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesEnvironmentVariablesOutput)
}

func (i GatewayPropertiesEnvironmentVariablesArgs) ToGatewayPropertiesEnvironmentVariablesPtrOutput() GatewayPropertiesEnvironmentVariablesPtrOutput {
	return i.ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(context.Background())
}

func (i GatewayPropertiesEnvironmentVariablesArgs) ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(ctx context.Context) GatewayPropertiesEnvironmentVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesEnvironmentVariablesOutput).ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(ctx)
}

// GatewayPropertiesEnvironmentVariablesPtrInput is an input type that accepts GatewayPropertiesEnvironmentVariablesArgs, GatewayPropertiesEnvironmentVariablesPtr and GatewayPropertiesEnvironmentVariablesPtrOutput values.
// You can construct a concrete instance of `GatewayPropertiesEnvironmentVariablesPtrInput` via:
//
//	        GatewayPropertiesEnvironmentVariablesArgs{...}
//
//	or:
//
//	        nil
type GatewayPropertiesEnvironmentVariablesPtrInput interface {
	pulumi.Input

	ToGatewayPropertiesEnvironmentVariablesPtrOutput() GatewayPropertiesEnvironmentVariablesPtrOutput
	ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(context.Context) GatewayPropertiesEnvironmentVariablesPtrOutput
}

type gatewayPropertiesEnvironmentVariablesPtrType GatewayPropertiesEnvironmentVariablesArgs

func GatewayPropertiesEnvironmentVariablesPtr(v *GatewayPropertiesEnvironmentVariablesArgs) GatewayPropertiesEnvironmentVariablesPtrInput {
	return (*gatewayPropertiesEnvironmentVariablesPtrType)(v)
}

func (*gatewayPropertiesEnvironmentVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPropertiesEnvironmentVariables)(nil)).Elem()
}

func (i *gatewayPropertiesEnvironmentVariablesPtrType) ToGatewayPropertiesEnvironmentVariablesPtrOutput() GatewayPropertiesEnvironmentVariablesPtrOutput {
	return i.ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(context.Background())
}

func (i *gatewayPropertiesEnvironmentVariablesPtrType) ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(ctx context.Context) GatewayPropertiesEnvironmentVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPropertiesEnvironmentVariablesPtrOutput)
}

// Environment variables of Spring Cloud Gateway
type GatewayPropertiesEnvironmentVariablesOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesEnvironmentVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesEnvironmentVariables)(nil)).Elem()
}

func (o GatewayPropertiesEnvironmentVariablesOutput) ToGatewayPropertiesEnvironmentVariablesOutput() GatewayPropertiesEnvironmentVariablesOutput {
	return o
}

func (o GatewayPropertiesEnvironmentVariablesOutput) ToGatewayPropertiesEnvironmentVariablesOutputWithContext(ctx context.Context) GatewayPropertiesEnvironmentVariablesOutput {
	return o
}

func (o GatewayPropertiesEnvironmentVariablesOutput) ToGatewayPropertiesEnvironmentVariablesPtrOutput() GatewayPropertiesEnvironmentVariablesPtrOutput {
	return o.ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(context.Background())
}

func (o GatewayPropertiesEnvironmentVariablesOutput) ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(ctx context.Context) GatewayPropertiesEnvironmentVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPropertiesEnvironmentVariables) *GatewayPropertiesEnvironmentVariables {
		return &v
	}).(GatewayPropertiesEnvironmentVariablesPtrOutput)
}

// Non-sensitive properties
func (o GatewayPropertiesEnvironmentVariablesOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GatewayPropertiesEnvironmentVariables) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Sensitive properties
func (o GatewayPropertiesEnvironmentVariablesOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v GatewayPropertiesEnvironmentVariables) map[string]string { return v.Secrets }).(pulumi.StringMapOutput)
}

type GatewayPropertiesEnvironmentVariablesPtrOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesEnvironmentVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPropertiesEnvironmentVariables)(nil)).Elem()
}

func (o GatewayPropertiesEnvironmentVariablesPtrOutput) ToGatewayPropertiesEnvironmentVariablesPtrOutput() GatewayPropertiesEnvironmentVariablesPtrOutput {
	return o
}

func (o GatewayPropertiesEnvironmentVariablesPtrOutput) ToGatewayPropertiesEnvironmentVariablesPtrOutputWithContext(ctx context.Context) GatewayPropertiesEnvironmentVariablesPtrOutput {
	return o
}

func (o GatewayPropertiesEnvironmentVariablesPtrOutput) Elem() GatewayPropertiesEnvironmentVariablesOutput {
	return o.ApplyT(func(v *GatewayPropertiesEnvironmentVariables) GatewayPropertiesEnvironmentVariables {
		if v != nil {
			return *v
		}
		var ret GatewayPropertiesEnvironmentVariables
		return ret
	}).(GatewayPropertiesEnvironmentVariablesOutput)
}

// Non-sensitive properties
func (o GatewayPropertiesEnvironmentVariablesPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GatewayPropertiesEnvironmentVariables) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Sensitive properties
func (o GatewayPropertiesEnvironmentVariablesPtrOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GatewayPropertiesEnvironmentVariables) map[string]string {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(pulumi.StringMapOutput)
}

// Spring Cloud Gateway properties payload
type GatewayPropertiesResponse struct {
	// Collection of addons for Spring Cloud Gateway
	AddonConfigs map[string]interface{} `pulumi:"addonConfigs"`
	// API metadata property for Spring Cloud Gateway
	ApiMetadataProperties *GatewayApiMetadataPropertiesResponse `pulumi:"apiMetadataProperties"`
	// Collection of APM type used in Spring Cloud Gateway
	ApmTypes []string `pulumi:"apmTypes"`
	// Collection of ApmReferences in service level
	Apms []ApmReferenceResponse `pulumi:"apms"`
	// Client-Certification Authentication.
	ClientAuth *GatewayPropertiesResponseClientAuth `pulumi:"clientAuth"`
	// Cross-Origin Resource Sharing property
	CorsProperties *GatewayCorsPropertiesResponse `pulumi:"corsProperties"`
	// Environment variables of Spring Cloud Gateway
	EnvironmentVariables *GatewayPropertiesResponseEnvironmentVariables `pulumi:"environmentVariables"`
	// Indicate if only https is allowed.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Collection of instances belong to Spring Cloud Gateway.
	Instances []GatewayInstanceResponse `pulumi:"instances"`
	// Properties of the Spring Cloud Gateway Operator.
	OperatorProperties GatewayOperatorPropertiesResponse `pulumi:"operatorProperties"`
	// State of the Spring Cloud Gateway.
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	Public *bool `pulumi:"public"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests *GatewayResourceRequestsResponse `pulumi:"resourceRequests"`
	// The properties to configure different types of response cache for Spring Cloud Gateway.
	ResponseCacheProperties interface{} `pulumi:"responseCacheProperties"`
	// Single sign-on related configuration
	SsoProperties *SsoPropertiesResponse `pulumi:"ssoProperties"`
	// URL of the Spring Cloud Gateway, exposed when 'public' is true.
	Url string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for GatewayPropertiesResponse
func (val *GatewayPropertiesResponse) Defaults() *GatewayPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ClientAuth = tmp.ClientAuth.Defaults()

	if tmp.HttpsOnly == nil {
		httpsOnly_ := false
		tmp.HttpsOnly = &httpsOnly_
	}
	if tmp.Public == nil {
		public_ := false
		tmp.Public = &public_
	}
	tmp.ResourceRequests = tmp.ResourceRequests.Defaults()

	return &tmp
}

// Spring Cloud Gateway properties payload
type GatewayPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesResponse)(nil)).Elem()
}

func (o GatewayPropertiesResponseOutput) ToGatewayPropertiesResponseOutput() GatewayPropertiesResponseOutput {
	return o
}

func (o GatewayPropertiesResponseOutput) ToGatewayPropertiesResponseOutputWithContext(ctx context.Context) GatewayPropertiesResponseOutput {
	return o
}

// Collection of addons for Spring Cloud Gateway
func (o GatewayPropertiesResponseOutput) AddonConfigs() pulumi.MapOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) map[string]interface{} { return v.AddonConfigs }).(pulumi.MapOutput)
}

// API metadata property for Spring Cloud Gateway
func (o GatewayPropertiesResponseOutput) ApiMetadataProperties() GatewayApiMetadataPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *GatewayApiMetadataPropertiesResponse {
		return v.ApiMetadataProperties
	}).(GatewayApiMetadataPropertiesResponsePtrOutput)
}

// Collection of APM type used in Spring Cloud Gateway
func (o GatewayPropertiesResponseOutput) ApmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) []string { return v.ApmTypes }).(pulumi.StringArrayOutput)
}

// Collection of ApmReferences in service level
func (o GatewayPropertiesResponseOutput) Apms() ApmReferenceResponseArrayOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) []ApmReferenceResponse { return v.Apms }).(ApmReferenceResponseArrayOutput)
}

// Client-Certification Authentication.
func (o GatewayPropertiesResponseOutput) ClientAuth() GatewayPropertiesResponseClientAuthPtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *GatewayPropertiesResponseClientAuth { return v.ClientAuth }).(GatewayPropertiesResponseClientAuthPtrOutput)
}

// Cross-Origin Resource Sharing property
func (o GatewayPropertiesResponseOutput) CorsProperties() GatewayCorsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *GatewayCorsPropertiesResponse { return v.CorsProperties }).(GatewayCorsPropertiesResponsePtrOutput)
}

// Environment variables of Spring Cloud Gateway
func (o GatewayPropertiesResponseOutput) EnvironmentVariables() GatewayPropertiesResponseEnvironmentVariablesPtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *GatewayPropertiesResponseEnvironmentVariables {
		return v.EnvironmentVariables
	}).(GatewayPropertiesResponseEnvironmentVariablesPtrOutput)
}

// Indicate if only https is allowed.
func (o GatewayPropertiesResponseOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// Collection of instances belong to Spring Cloud Gateway.
func (o GatewayPropertiesResponseOutput) Instances() GatewayInstanceResponseArrayOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) []GatewayInstanceResponse { return v.Instances }).(GatewayInstanceResponseArrayOutput)
}

// Properties of the Spring Cloud Gateway Operator.
func (o GatewayPropertiesResponseOutput) OperatorProperties() GatewayOperatorPropertiesResponseOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) GatewayOperatorPropertiesResponse { return v.OperatorProperties }).(GatewayOperatorPropertiesResponseOutput)
}

// State of the Spring Cloud Gateway.
func (o GatewayPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates whether the Spring Cloud Gateway exposes endpoint.
func (o GatewayPropertiesResponseOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o GatewayPropertiesResponseOutput) ResourceRequests() GatewayResourceRequestsResponsePtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *GatewayResourceRequestsResponse { return v.ResourceRequests }).(GatewayResourceRequestsResponsePtrOutput)
}

// The properties to configure different types of response cache for Spring Cloud Gateway.
func (o GatewayPropertiesResponseOutput) ResponseCacheProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) interface{} { return v.ResponseCacheProperties }).(pulumi.AnyOutput)
}

// Single sign-on related configuration
func (o GatewayPropertiesResponseOutput) SsoProperties() SsoPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) *SsoPropertiesResponse { return v.SsoProperties }).(SsoPropertiesResponsePtrOutput)
}

// URL of the Spring Cloud Gateway, exposed when 'public' is true.
func (o GatewayPropertiesResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayPropertiesResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Client-Certification Authentication.
type GatewayPropertiesResponseClientAuth struct {
	// Whether to enable certificate verification or not
	CertificateVerification *string `pulumi:"certificateVerification"`
	// Collection of certificate resource Ids in Azure Spring Apps.
	Certificates []string `pulumi:"certificates"`
}

// Defaults sets the appropriate defaults for GatewayPropertiesResponseClientAuth
func (val *GatewayPropertiesResponseClientAuth) Defaults() *GatewayPropertiesResponseClientAuth {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CertificateVerification == nil {
		certificateVerification_ := "Disabled"
		tmp.CertificateVerification = &certificateVerification_
	}
	return &tmp
}

// Client-Certification Authentication.
type GatewayPropertiesResponseClientAuthOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesResponseClientAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesResponseClientAuth)(nil)).Elem()
}

func (o GatewayPropertiesResponseClientAuthOutput) ToGatewayPropertiesResponseClientAuthOutput() GatewayPropertiesResponseClientAuthOutput {
	return o
}

func (o GatewayPropertiesResponseClientAuthOutput) ToGatewayPropertiesResponseClientAuthOutputWithContext(ctx context.Context) GatewayPropertiesResponseClientAuthOutput {
	return o
}

// Whether to enable certificate verification or not
func (o GatewayPropertiesResponseClientAuthOutput) CertificateVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPropertiesResponseClientAuth) *string { return v.CertificateVerification }).(pulumi.StringPtrOutput)
}

// Collection of certificate resource Ids in Azure Spring Apps.
func (o GatewayPropertiesResponseClientAuthOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPropertiesResponseClientAuth) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

type GatewayPropertiesResponseClientAuthPtrOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesResponseClientAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPropertiesResponseClientAuth)(nil)).Elem()
}

func (o GatewayPropertiesResponseClientAuthPtrOutput) ToGatewayPropertiesResponseClientAuthPtrOutput() GatewayPropertiesResponseClientAuthPtrOutput {
	return o
}

func (o GatewayPropertiesResponseClientAuthPtrOutput) ToGatewayPropertiesResponseClientAuthPtrOutputWithContext(ctx context.Context) GatewayPropertiesResponseClientAuthPtrOutput {
	return o
}

func (o GatewayPropertiesResponseClientAuthPtrOutput) Elem() GatewayPropertiesResponseClientAuthOutput {
	return o.ApplyT(func(v *GatewayPropertiesResponseClientAuth) GatewayPropertiesResponseClientAuth {
		if v != nil {
			return *v
		}
		var ret GatewayPropertiesResponseClientAuth
		return ret
	}).(GatewayPropertiesResponseClientAuthOutput)
}

// Whether to enable certificate verification or not
func (o GatewayPropertiesResponseClientAuthPtrOutput) CertificateVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPropertiesResponseClientAuth) *string {
		if v == nil {
			return nil
		}
		return v.CertificateVerification
	}).(pulumi.StringPtrOutput)
}

// Collection of certificate resource Ids in Azure Spring Apps.
func (o GatewayPropertiesResponseClientAuthPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPropertiesResponseClientAuth) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// Environment variables of Spring Cloud Gateway
type GatewayPropertiesResponseEnvironmentVariables struct {
	// Non-sensitive properties
	Properties map[string]string `pulumi:"properties"`
	// Sensitive properties
	Secrets map[string]string `pulumi:"secrets"`
}

// Environment variables of Spring Cloud Gateway
type GatewayPropertiesResponseEnvironmentVariablesOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesResponseEnvironmentVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPropertiesResponseEnvironmentVariables)(nil)).Elem()
}

func (o GatewayPropertiesResponseEnvironmentVariablesOutput) ToGatewayPropertiesResponseEnvironmentVariablesOutput() GatewayPropertiesResponseEnvironmentVariablesOutput {
	return o
}

func (o GatewayPropertiesResponseEnvironmentVariablesOutput) ToGatewayPropertiesResponseEnvironmentVariablesOutputWithContext(ctx context.Context) GatewayPropertiesResponseEnvironmentVariablesOutput {
	return o
}

// Non-sensitive properties
func (o GatewayPropertiesResponseEnvironmentVariablesOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GatewayPropertiesResponseEnvironmentVariables) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Sensitive properties
func (o GatewayPropertiesResponseEnvironmentVariablesOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v GatewayPropertiesResponseEnvironmentVariables) map[string]string { return v.Secrets }).(pulumi.StringMapOutput)
}

type GatewayPropertiesResponseEnvironmentVariablesPtrOutput struct{ *pulumi.OutputState }

func (GatewayPropertiesResponseEnvironmentVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPropertiesResponseEnvironmentVariables)(nil)).Elem()
}

func (o GatewayPropertiesResponseEnvironmentVariablesPtrOutput) ToGatewayPropertiesResponseEnvironmentVariablesPtrOutput() GatewayPropertiesResponseEnvironmentVariablesPtrOutput {
	return o
}

func (o GatewayPropertiesResponseEnvironmentVariablesPtrOutput) ToGatewayPropertiesResponseEnvironmentVariablesPtrOutputWithContext(ctx context.Context) GatewayPropertiesResponseEnvironmentVariablesPtrOutput {
	return o
}

func (o GatewayPropertiesResponseEnvironmentVariablesPtrOutput) Elem() GatewayPropertiesResponseEnvironmentVariablesOutput {
	return o.ApplyT(func(v *GatewayPropertiesResponseEnvironmentVariables) GatewayPropertiesResponseEnvironmentVariables {
		if v != nil {
			return *v
		}
		var ret GatewayPropertiesResponseEnvironmentVariables
		return ret
	}).(GatewayPropertiesResponseEnvironmentVariablesOutput)
}

// Non-sensitive properties
func (o GatewayPropertiesResponseEnvironmentVariablesPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GatewayPropertiesResponseEnvironmentVariables) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Sensitive properties
func (o GatewayPropertiesResponseEnvironmentVariablesPtrOutput) Secrets() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GatewayPropertiesResponseEnvironmentVariables) map[string]string {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(pulumi.StringMapOutput)
}

// Resource request payload of Spring Cloud Gateway.
type GatewayResourceRequests struct {
	// Cpu allocated to each Spring Cloud Gateway instance.
	Cpu *string `pulumi:"cpu"`
	// Memory allocated to each Spring Cloud Gateway instance.
	Memory *string `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for GatewayResourceRequests
func (val *GatewayResourceRequests) Defaults() *GatewayResourceRequests {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		cpu_ := "1"
		tmp.Cpu = &cpu_
	}
	if tmp.Memory == nil {
		memory_ := "2Gi"
		tmp.Memory = &memory_
	}
	return &tmp
}

// GatewayResourceRequestsInput is an input type that accepts GatewayResourceRequestsArgs and GatewayResourceRequestsOutput values.
// You can construct a concrete instance of `GatewayResourceRequestsInput` via:
//
//	GatewayResourceRequestsArgs{...}
type GatewayResourceRequestsInput interface {
	pulumi.Input

	ToGatewayResourceRequestsOutput() GatewayResourceRequestsOutput
	ToGatewayResourceRequestsOutputWithContext(context.Context) GatewayResourceRequestsOutput
}

// Resource request payload of Spring Cloud Gateway.
type GatewayResourceRequestsArgs struct {
	// Cpu allocated to each Spring Cloud Gateway instance.
	Cpu pulumi.StringPtrInput `pulumi:"cpu"`
	// Memory allocated to each Spring Cloud Gateway instance.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for GatewayResourceRequestsArgs
func (val *GatewayResourceRequestsArgs) Defaults() *GatewayResourceRequestsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		tmp.Cpu = pulumi.StringPtr("1")
	}
	if tmp.Memory == nil {
		tmp.Memory = pulumi.StringPtr("2Gi")
	}
	return &tmp
}
func (GatewayResourceRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayResourceRequests)(nil)).Elem()
}

func (i GatewayResourceRequestsArgs) ToGatewayResourceRequestsOutput() GatewayResourceRequestsOutput {
	return i.ToGatewayResourceRequestsOutputWithContext(context.Background())
}

func (i GatewayResourceRequestsArgs) ToGatewayResourceRequestsOutputWithContext(ctx context.Context) GatewayResourceRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayResourceRequestsOutput)
}

func (i GatewayResourceRequestsArgs) ToGatewayResourceRequestsPtrOutput() GatewayResourceRequestsPtrOutput {
	return i.ToGatewayResourceRequestsPtrOutputWithContext(context.Background())
}

func (i GatewayResourceRequestsArgs) ToGatewayResourceRequestsPtrOutputWithContext(ctx context.Context) GatewayResourceRequestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayResourceRequestsOutput).ToGatewayResourceRequestsPtrOutputWithContext(ctx)
}

// GatewayResourceRequestsPtrInput is an input type that accepts GatewayResourceRequestsArgs, GatewayResourceRequestsPtr and GatewayResourceRequestsPtrOutput values.
// You can construct a concrete instance of `GatewayResourceRequestsPtrInput` via:
//
//	        GatewayResourceRequestsArgs{...}
//
//	or:
//
//	        nil
type GatewayResourceRequestsPtrInput interface {
	pulumi.Input

	ToGatewayResourceRequestsPtrOutput() GatewayResourceRequestsPtrOutput
	ToGatewayResourceRequestsPtrOutputWithContext(context.Context) GatewayResourceRequestsPtrOutput
}

type gatewayResourceRequestsPtrType GatewayResourceRequestsArgs

func GatewayResourceRequestsPtr(v *GatewayResourceRequestsArgs) GatewayResourceRequestsPtrInput {
	return (*gatewayResourceRequestsPtrType)(v)
}

func (*gatewayResourceRequestsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayResourceRequests)(nil)).Elem()
}

func (i *gatewayResourceRequestsPtrType) ToGatewayResourceRequestsPtrOutput() GatewayResourceRequestsPtrOutput {
	return i.ToGatewayResourceRequestsPtrOutputWithContext(context.Background())
}

func (i *gatewayResourceRequestsPtrType) ToGatewayResourceRequestsPtrOutputWithContext(ctx context.Context) GatewayResourceRequestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayResourceRequestsPtrOutput)
}

// Resource request payload of Spring Cloud Gateway.
type GatewayResourceRequestsOutput struct{ *pulumi.OutputState }

func (GatewayResourceRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayResourceRequests)(nil)).Elem()
}

func (o GatewayResourceRequestsOutput) ToGatewayResourceRequestsOutput() GatewayResourceRequestsOutput {
	return o
}

func (o GatewayResourceRequestsOutput) ToGatewayResourceRequestsOutputWithContext(ctx context.Context) GatewayResourceRequestsOutput {
	return o
}

func (o GatewayResourceRequestsOutput) ToGatewayResourceRequestsPtrOutput() GatewayResourceRequestsPtrOutput {
	return o.ToGatewayResourceRequestsPtrOutputWithContext(context.Background())
}

func (o GatewayResourceRequestsOutput) ToGatewayResourceRequestsPtrOutputWithContext(ctx context.Context) GatewayResourceRequestsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayResourceRequests) *GatewayResourceRequests {
		return &v
	}).(GatewayResourceRequestsPtrOutput)
}

// Cpu allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayResourceRequests) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Memory allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayResourceRequests) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type GatewayResourceRequestsPtrOutput struct{ *pulumi.OutputState }

func (GatewayResourceRequestsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayResourceRequests)(nil)).Elem()
}

func (o GatewayResourceRequestsPtrOutput) ToGatewayResourceRequestsPtrOutput() GatewayResourceRequestsPtrOutput {
	return o
}

func (o GatewayResourceRequestsPtrOutput) ToGatewayResourceRequestsPtrOutputWithContext(ctx context.Context) GatewayResourceRequestsPtrOutput {
	return o
}

func (o GatewayResourceRequestsPtrOutput) Elem() GatewayResourceRequestsOutput {
	return o.ApplyT(func(v *GatewayResourceRequests) GatewayResourceRequests {
		if v != nil {
			return *v
		}
		var ret GatewayResourceRequests
		return ret
	}).(GatewayResourceRequestsOutput)
}

// Cpu allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayResourceRequests) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Memory allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayResourceRequests) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Resource request payload of Spring Cloud Gateway.
type GatewayResourceRequestsResponse struct {
	// Cpu allocated to each Spring Cloud Gateway instance.
	Cpu *string `pulumi:"cpu"`
	// Memory allocated to each Spring Cloud Gateway instance.
	Memory *string `pulumi:"memory"`
}

// Defaults sets the appropriate defaults for GatewayResourceRequestsResponse
func (val *GatewayResourceRequestsResponse) Defaults() *GatewayResourceRequestsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		cpu_ := "1"
		tmp.Cpu = &cpu_
	}
	if tmp.Memory == nil {
		memory_ := "2Gi"
		tmp.Memory = &memory_
	}
	return &tmp
}

// Resource request payload of Spring Cloud Gateway.
type GatewayResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (GatewayResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayResourceRequestsResponse)(nil)).Elem()
}

func (o GatewayResourceRequestsResponseOutput) ToGatewayResourceRequestsResponseOutput() GatewayResourceRequestsResponseOutput {
	return o
}

func (o GatewayResourceRequestsResponseOutput) ToGatewayResourceRequestsResponseOutputWithContext(ctx context.Context) GatewayResourceRequestsResponseOutput {
	return o
}

// Cpu allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsResponseOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayResourceRequestsResponse) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Memory allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsResponseOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayResourceRequestsResponse) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type GatewayResourceRequestsResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayResourceRequestsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayResourceRequestsResponse)(nil)).Elem()
}

func (o GatewayResourceRequestsResponsePtrOutput) ToGatewayResourceRequestsResponsePtrOutput() GatewayResourceRequestsResponsePtrOutput {
	return o
}

func (o GatewayResourceRequestsResponsePtrOutput) ToGatewayResourceRequestsResponsePtrOutputWithContext(ctx context.Context) GatewayResourceRequestsResponsePtrOutput {
	return o
}

func (o GatewayResourceRequestsResponsePtrOutput) Elem() GatewayResourceRequestsResponseOutput {
	return o.ApplyT(func(v *GatewayResourceRequestsResponse) GatewayResourceRequestsResponse {
		if v != nil {
			return *v
		}
		var ret GatewayResourceRequestsResponse
		return ret
	}).(GatewayResourceRequestsResponseOutput)
}

// Cpu allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsResponsePtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Memory allocated to each Spring Cloud Gateway instance.
func (o GatewayResourceRequestsResponsePtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// OpenAPI properties of Spring Cloud Gateway route config.
type GatewayRouteConfigOpenApiProperties struct {
	// The URI of OpenAPI specification.
	Uri *string `pulumi:"uri"`
}

// GatewayRouteConfigOpenApiPropertiesInput is an input type that accepts GatewayRouteConfigOpenApiPropertiesArgs and GatewayRouteConfigOpenApiPropertiesOutput values.
// You can construct a concrete instance of `GatewayRouteConfigOpenApiPropertiesInput` via:
//
//	GatewayRouteConfigOpenApiPropertiesArgs{...}
type GatewayRouteConfigOpenApiPropertiesInput interface {
	pulumi.Input

	ToGatewayRouteConfigOpenApiPropertiesOutput() GatewayRouteConfigOpenApiPropertiesOutput
	ToGatewayRouteConfigOpenApiPropertiesOutputWithContext(context.Context) GatewayRouteConfigOpenApiPropertiesOutput
}

// OpenAPI properties of Spring Cloud Gateway route config.
type GatewayRouteConfigOpenApiPropertiesArgs struct {
	// The URI of OpenAPI specification.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GatewayRouteConfigOpenApiPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigOpenApiProperties)(nil)).Elem()
}

func (i GatewayRouteConfigOpenApiPropertiesArgs) ToGatewayRouteConfigOpenApiPropertiesOutput() GatewayRouteConfigOpenApiPropertiesOutput {
	return i.ToGatewayRouteConfigOpenApiPropertiesOutputWithContext(context.Background())
}

func (i GatewayRouteConfigOpenApiPropertiesArgs) ToGatewayRouteConfigOpenApiPropertiesOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteConfigOpenApiPropertiesOutput)
}

func (i GatewayRouteConfigOpenApiPropertiesArgs) ToGatewayRouteConfigOpenApiPropertiesPtrOutput() GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return i.ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayRouteConfigOpenApiPropertiesArgs) ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteConfigOpenApiPropertiesOutput).ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(ctx)
}

// GatewayRouteConfigOpenApiPropertiesPtrInput is an input type that accepts GatewayRouteConfigOpenApiPropertiesArgs, GatewayRouteConfigOpenApiPropertiesPtr and GatewayRouteConfigOpenApiPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayRouteConfigOpenApiPropertiesPtrInput` via:
//
//	        GatewayRouteConfigOpenApiPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteConfigOpenApiPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayRouteConfigOpenApiPropertiesPtrOutput() GatewayRouteConfigOpenApiPropertiesPtrOutput
	ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(context.Context) GatewayRouteConfigOpenApiPropertiesPtrOutput
}

type gatewayRouteConfigOpenApiPropertiesPtrType GatewayRouteConfigOpenApiPropertiesArgs

func GatewayRouteConfigOpenApiPropertiesPtr(v *GatewayRouteConfigOpenApiPropertiesArgs) GatewayRouteConfigOpenApiPropertiesPtrInput {
	return (*gatewayRouteConfigOpenApiPropertiesPtrType)(v)
}

func (*gatewayRouteConfigOpenApiPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteConfigOpenApiProperties)(nil)).Elem()
}

func (i *gatewayRouteConfigOpenApiPropertiesPtrType) ToGatewayRouteConfigOpenApiPropertiesPtrOutput() GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return i.ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteConfigOpenApiPropertiesPtrType) ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteConfigOpenApiPropertiesPtrOutput)
}

// OpenAPI properties of Spring Cloud Gateway route config.
type GatewayRouteConfigOpenApiPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigOpenApiPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigOpenApiProperties)(nil)).Elem()
}

func (o GatewayRouteConfigOpenApiPropertiesOutput) ToGatewayRouteConfigOpenApiPropertiesOutput() GatewayRouteConfigOpenApiPropertiesOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesOutput) ToGatewayRouteConfigOpenApiPropertiesOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesOutput) ToGatewayRouteConfigOpenApiPropertiesPtrOutput() GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return o.ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayRouteConfigOpenApiPropertiesOutput) ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteConfigOpenApiProperties) *GatewayRouteConfigOpenApiProperties {
		return &v
	}).(GatewayRouteConfigOpenApiPropertiesPtrOutput)
}

// The URI of OpenAPI specification.
func (o GatewayRouteConfigOpenApiPropertiesOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigOpenApiProperties) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GatewayRouteConfigOpenApiPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigOpenApiPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteConfigOpenApiProperties)(nil)).Elem()
}

func (o GatewayRouteConfigOpenApiPropertiesPtrOutput) ToGatewayRouteConfigOpenApiPropertiesPtrOutput() GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesPtrOutput) ToGatewayRouteConfigOpenApiPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesPtrOutput) Elem() GatewayRouteConfigOpenApiPropertiesOutput {
	return o.ApplyT(func(v *GatewayRouteConfigOpenApiProperties) GatewayRouteConfigOpenApiProperties {
		if v != nil {
			return *v
		}
		var ret GatewayRouteConfigOpenApiProperties
		return ret
	}).(GatewayRouteConfigOpenApiPropertiesOutput)
}

// The URI of OpenAPI specification.
func (o GatewayRouteConfigOpenApiPropertiesPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteConfigOpenApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// OpenAPI properties of Spring Cloud Gateway route config.
type GatewayRouteConfigOpenApiPropertiesResponse struct {
	// The URI of OpenAPI specification.
	Uri *string `pulumi:"uri"`
}

// OpenAPI properties of Spring Cloud Gateway route config.
type GatewayRouteConfigOpenApiPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigOpenApiPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigOpenApiPropertiesResponse)(nil)).Elem()
}

func (o GatewayRouteConfigOpenApiPropertiesResponseOutput) ToGatewayRouteConfigOpenApiPropertiesResponseOutput() GatewayRouteConfigOpenApiPropertiesResponseOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesResponseOutput) ToGatewayRouteConfigOpenApiPropertiesResponseOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesResponseOutput {
	return o
}

// The URI of OpenAPI specification.
func (o GatewayRouteConfigOpenApiPropertiesResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigOpenApiPropertiesResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GatewayRouteConfigOpenApiPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigOpenApiPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteConfigOpenApiPropertiesResponse)(nil)).Elem()
}

func (o GatewayRouteConfigOpenApiPropertiesResponsePtrOutput) ToGatewayRouteConfigOpenApiPropertiesResponsePtrOutput() GatewayRouteConfigOpenApiPropertiesResponsePtrOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesResponsePtrOutput) ToGatewayRouteConfigOpenApiPropertiesResponsePtrOutputWithContext(ctx context.Context) GatewayRouteConfigOpenApiPropertiesResponsePtrOutput {
	return o
}

func (o GatewayRouteConfigOpenApiPropertiesResponsePtrOutput) Elem() GatewayRouteConfigOpenApiPropertiesResponseOutput {
	return o.ApplyT(func(v *GatewayRouteConfigOpenApiPropertiesResponse) GatewayRouteConfigOpenApiPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GatewayRouteConfigOpenApiPropertiesResponse
		return ret
	}).(GatewayRouteConfigOpenApiPropertiesResponseOutput)
}

// The URI of OpenAPI specification.
func (o GatewayRouteConfigOpenApiPropertiesResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteConfigOpenApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// API route config of the Spring Cloud Gateway
type GatewayRouteConfigProperties struct {
	// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
	AppResourceId *string `pulumi:"appResourceId"`
	// To modify the request before sending it to the target endpoint, or the received response in app level.
	Filters []string `pulumi:"filters"`
	// OpenAPI properties of Spring Cloud Gateway route config.
	OpenApi *GatewayRouteConfigOpenApiProperties `pulumi:"openApi"`
	// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates []string `pulumi:"predicates"`
	// Protocol of routed Azure Spring Apps applications.
	Protocol *string `pulumi:"protocol"`
	// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
	Routes []GatewayApiRoute `pulumi:"routes"`
	// Enable Single Sign-On in app level.
	SsoEnabled *bool `pulumi:"ssoEnabled"`
}

// Defaults sets the appropriate defaults for GatewayRouteConfigProperties
func (val *GatewayRouteConfigProperties) Defaults() *GatewayRouteConfigProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "HTTP"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// GatewayRouteConfigPropertiesInput is an input type that accepts GatewayRouteConfigPropertiesArgs and GatewayRouteConfigPropertiesOutput values.
// You can construct a concrete instance of `GatewayRouteConfigPropertiesInput` via:
//
//	GatewayRouteConfigPropertiesArgs{...}
type GatewayRouteConfigPropertiesInput interface {
	pulumi.Input

	ToGatewayRouteConfigPropertiesOutput() GatewayRouteConfigPropertiesOutput
	ToGatewayRouteConfigPropertiesOutputWithContext(context.Context) GatewayRouteConfigPropertiesOutput
}

// API route config of the Spring Cloud Gateway
type GatewayRouteConfigPropertiesArgs struct {
	// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
	AppResourceId pulumi.StringPtrInput `pulumi:"appResourceId"`
	// To modify the request before sending it to the target endpoint, or the received response in app level.
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// OpenAPI properties of Spring Cloud Gateway route config.
	OpenApi GatewayRouteConfigOpenApiPropertiesPtrInput `pulumi:"openApi"`
	// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates pulumi.StringArrayInput `pulumi:"predicates"`
	// Protocol of routed Azure Spring Apps applications.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
	Routes GatewayApiRouteArrayInput `pulumi:"routes"`
	// Enable Single Sign-On in app level.
	SsoEnabled pulumi.BoolPtrInput `pulumi:"ssoEnabled"`
}

// Defaults sets the appropriate defaults for GatewayRouteConfigPropertiesArgs
func (val *GatewayRouteConfigPropertiesArgs) Defaults() *GatewayRouteConfigPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("HTTP")
	}
	return &tmp
}
func (GatewayRouteConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigProperties)(nil)).Elem()
}

func (i GatewayRouteConfigPropertiesArgs) ToGatewayRouteConfigPropertiesOutput() GatewayRouteConfigPropertiesOutput {
	return i.ToGatewayRouteConfigPropertiesOutputWithContext(context.Background())
}

func (i GatewayRouteConfigPropertiesArgs) ToGatewayRouteConfigPropertiesOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteConfigPropertiesOutput)
}

func (i GatewayRouteConfigPropertiesArgs) ToGatewayRouteConfigPropertiesPtrOutput() GatewayRouteConfigPropertiesPtrOutput {
	return i.ToGatewayRouteConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayRouteConfigPropertiesArgs) ToGatewayRouteConfigPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteConfigPropertiesOutput).ToGatewayRouteConfigPropertiesPtrOutputWithContext(ctx)
}

// GatewayRouteConfigPropertiesPtrInput is an input type that accepts GatewayRouteConfigPropertiesArgs, GatewayRouteConfigPropertiesPtr and GatewayRouteConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayRouteConfigPropertiesPtrInput` via:
//
//	        GatewayRouteConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteConfigPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayRouteConfigPropertiesPtrOutput() GatewayRouteConfigPropertiesPtrOutput
	ToGatewayRouteConfigPropertiesPtrOutputWithContext(context.Context) GatewayRouteConfigPropertiesPtrOutput
}

type gatewayRouteConfigPropertiesPtrType GatewayRouteConfigPropertiesArgs

func GatewayRouteConfigPropertiesPtr(v *GatewayRouteConfigPropertiesArgs) GatewayRouteConfigPropertiesPtrInput {
	return (*gatewayRouteConfigPropertiesPtrType)(v)
}

func (*gatewayRouteConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteConfigProperties)(nil)).Elem()
}

func (i *gatewayRouteConfigPropertiesPtrType) ToGatewayRouteConfigPropertiesPtrOutput() GatewayRouteConfigPropertiesPtrOutput {
	return i.ToGatewayRouteConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteConfigPropertiesPtrType) ToGatewayRouteConfigPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteConfigPropertiesPtrOutput)
}

// API route config of the Spring Cloud Gateway
type GatewayRouteConfigPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigProperties)(nil)).Elem()
}

func (o GatewayRouteConfigPropertiesOutput) ToGatewayRouteConfigPropertiesOutput() GatewayRouteConfigPropertiesOutput {
	return o
}

func (o GatewayRouteConfigPropertiesOutput) ToGatewayRouteConfigPropertiesOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesOutput {
	return o
}

func (o GatewayRouteConfigPropertiesOutput) ToGatewayRouteConfigPropertiesPtrOutput() GatewayRouteConfigPropertiesPtrOutput {
	return o.ToGatewayRouteConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayRouteConfigPropertiesOutput) ToGatewayRouteConfigPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteConfigProperties) *GatewayRouteConfigProperties {
		return &v
	}).(GatewayRouteConfigPropertiesPtrOutput)
}

// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
func (o GatewayRouteConfigPropertiesOutput) AppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) *string { return v.AppResourceId }).(pulumi.StringPtrOutput)
}

// To modify the request before sending it to the target endpoint, or the received response in app level.
func (o GatewayRouteConfigPropertiesOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// OpenAPI properties of Spring Cloud Gateway route config.
func (o GatewayRouteConfigPropertiesOutput) OpenApi() GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) *GatewayRouteConfigOpenApiProperties { return v.OpenApi }).(GatewayRouteConfigOpenApiPropertiesPtrOutput)
}

// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
func (o GatewayRouteConfigPropertiesOutput) Predicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) []string { return v.Predicates }).(pulumi.StringArrayOutput)
}

// Protocol of routed Azure Spring Apps applications.
func (o GatewayRouteConfigPropertiesOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
func (o GatewayRouteConfigPropertiesOutput) Routes() GatewayApiRouteArrayOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) []GatewayApiRoute { return v.Routes }).(GatewayApiRouteArrayOutput)
}

// Enable Single Sign-On in app level.
func (o GatewayRouteConfigPropertiesOutput) SsoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigProperties) *bool { return v.SsoEnabled }).(pulumi.BoolPtrOutput)
}

type GatewayRouteConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteConfigProperties)(nil)).Elem()
}

func (o GatewayRouteConfigPropertiesPtrOutput) ToGatewayRouteConfigPropertiesPtrOutput() GatewayRouteConfigPropertiesPtrOutput {
	return o
}

func (o GatewayRouteConfigPropertiesPtrOutput) ToGatewayRouteConfigPropertiesPtrOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesPtrOutput {
	return o
}

func (o GatewayRouteConfigPropertiesPtrOutput) Elem() GatewayRouteConfigPropertiesOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) GatewayRouteConfigProperties {
		if v != nil {
			return *v
		}
		var ret GatewayRouteConfigProperties
		return ret
	}).(GatewayRouteConfigPropertiesOutput)
}

// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
func (o GatewayRouteConfigPropertiesPtrOutput) AppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppResourceId
	}).(pulumi.StringPtrOutput)
}

// To modify the request before sending it to the target endpoint, or the received response in app level.
func (o GatewayRouteConfigPropertiesPtrOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(pulumi.StringArrayOutput)
}

// OpenAPI properties of Spring Cloud Gateway route config.
func (o GatewayRouteConfigPropertiesPtrOutput) OpenApi() GatewayRouteConfigOpenApiPropertiesPtrOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) *GatewayRouteConfigOpenApiProperties {
		if v == nil {
			return nil
		}
		return v.OpenApi
	}).(GatewayRouteConfigOpenApiPropertiesPtrOutput)
}

// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
func (o GatewayRouteConfigPropertiesPtrOutput) Predicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.Predicates
	}).(pulumi.StringArrayOutput)
}

// Protocol of routed Azure Spring Apps applications.
func (o GatewayRouteConfigPropertiesPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
func (o GatewayRouteConfigPropertiesPtrOutput) Routes() GatewayApiRouteArrayOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) []GatewayApiRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(GatewayApiRouteArrayOutput)
}

// Enable Single Sign-On in app level.
func (o GatewayRouteConfigPropertiesPtrOutput) SsoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.SsoEnabled
	}).(pulumi.BoolPtrOutput)
}

// API route config of the Spring Cloud Gateway
type GatewayRouteConfigPropertiesResponse struct {
	// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
	AppResourceId *string `pulumi:"appResourceId"`
	// To modify the request before sending it to the target endpoint, or the received response in app level.
	Filters []string `pulumi:"filters"`
	// OpenAPI properties of Spring Cloud Gateway route config.
	OpenApi *GatewayRouteConfigOpenApiPropertiesResponse `pulumi:"openApi"`
	// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates []string `pulumi:"predicates"`
	// Protocol of routed Azure Spring Apps applications.
	Protocol *string `pulumi:"protocol"`
	// State of the Spring Cloud Gateway route config.
	ProvisioningState string `pulumi:"provisioningState"`
	// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
	Routes []GatewayApiRouteResponse `pulumi:"routes"`
	// Enable Single Sign-On in app level.
	SsoEnabled *bool `pulumi:"ssoEnabled"`
}

// Defaults sets the appropriate defaults for GatewayRouteConfigPropertiesResponse
func (val *GatewayRouteConfigPropertiesResponse) Defaults() *GatewayRouteConfigPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "HTTP"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// API route config of the Spring Cloud Gateway
type GatewayRouteConfigPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigPropertiesResponse)(nil)).Elem()
}

func (o GatewayRouteConfigPropertiesResponseOutput) ToGatewayRouteConfigPropertiesResponseOutput() GatewayRouteConfigPropertiesResponseOutput {
	return o
}

func (o GatewayRouteConfigPropertiesResponseOutput) ToGatewayRouteConfigPropertiesResponseOutputWithContext(ctx context.Context) GatewayRouteConfigPropertiesResponseOutput {
	return o
}

// The resource Id of the Azure Spring Apps app, required unless route defines `uri`.
func (o GatewayRouteConfigPropertiesResponseOutput) AppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) *string { return v.AppResourceId }).(pulumi.StringPtrOutput)
}

// To modify the request before sending it to the target endpoint, or the received response in app level.
func (o GatewayRouteConfigPropertiesResponseOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// OpenAPI properties of Spring Cloud Gateway route config.
func (o GatewayRouteConfigPropertiesResponseOutput) OpenApi() GatewayRouteConfigOpenApiPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) *GatewayRouteConfigOpenApiPropertiesResponse {
		return v.OpenApi
	}).(GatewayRouteConfigOpenApiPropertiesResponsePtrOutput)
}

// A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
func (o GatewayRouteConfigPropertiesResponseOutput) Predicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) []string { return v.Predicates }).(pulumi.StringArrayOutput)
}

// Protocol of routed Azure Spring Apps applications.
func (o GatewayRouteConfigPropertiesResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// State of the Spring Cloud Gateway route config.
func (o GatewayRouteConfigPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.
func (o GatewayRouteConfigPropertiesResponseOutput) Routes() GatewayApiRouteResponseArrayOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) []GatewayApiRouteResponse { return v.Routes }).(GatewayApiRouteResponseArrayOutput)
}

// Enable Single Sign-On in app level.
func (o GatewayRouteConfigPropertiesResponseOutput) SsoEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRouteConfigPropertiesResponse) *bool { return v.SsoEnabled }).(pulumi.BoolPtrOutput)
}

// Git repository property payload for config server
type GitPatternRepository struct {
	// Public sshKey of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label *string `pulumi:"label"`
	// Name of the repository
	Name string `pulumi:"name"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Collection of pattern of the repository
	Pattern []string `pulumi:"pattern"`
	// Private sshKey algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
	// Searching path of the repository
	SearchPaths []string `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking *bool `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri string `pulumi:"uri"`
	// Username of git repository basic auth.
	Username *string `pulumi:"username"`
}

// GitPatternRepositoryInput is an input type that accepts GitPatternRepositoryArgs and GitPatternRepositoryOutput values.
// You can construct a concrete instance of `GitPatternRepositoryInput` via:
//
//	GitPatternRepositoryArgs{...}
type GitPatternRepositoryInput interface {
	pulumi.Input

	ToGitPatternRepositoryOutput() GitPatternRepositoryOutput
	ToGitPatternRepositoryOutputWithContext(context.Context) GitPatternRepositoryOutput
}

// Git repository property payload for config server
type GitPatternRepositoryArgs struct {
	// Public sshKey of git repository.
	HostKey pulumi.StringPtrInput `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm pulumi.StringPtrInput `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Name of the repository
	Name pulumi.StringInput `pulumi:"name"`
	// Password of git repository basic auth.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Collection of pattern of the repository
	Pattern pulumi.StringArrayInput `pulumi:"pattern"`
	// Private sshKey algorithm of git repository.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// Searching path of the repository
	SearchPaths pulumi.StringArrayInput `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking pulumi.BoolPtrInput `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri pulumi.StringInput `pulumi:"uri"`
	// Username of git repository basic auth.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GitPatternRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitPatternRepository)(nil)).Elem()
}

func (i GitPatternRepositoryArgs) ToGitPatternRepositoryOutput() GitPatternRepositoryOutput {
	return i.ToGitPatternRepositoryOutputWithContext(context.Background())
}

func (i GitPatternRepositoryArgs) ToGitPatternRepositoryOutputWithContext(ctx context.Context) GitPatternRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitPatternRepositoryOutput)
}

// GitPatternRepositoryArrayInput is an input type that accepts GitPatternRepositoryArray and GitPatternRepositoryArrayOutput values.
// You can construct a concrete instance of `GitPatternRepositoryArrayInput` via:
//
//	GitPatternRepositoryArray{ GitPatternRepositoryArgs{...} }
type GitPatternRepositoryArrayInput interface {
	pulumi.Input

	ToGitPatternRepositoryArrayOutput() GitPatternRepositoryArrayOutput
	ToGitPatternRepositoryArrayOutputWithContext(context.Context) GitPatternRepositoryArrayOutput
}

type GitPatternRepositoryArray []GitPatternRepositoryInput

func (GitPatternRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitPatternRepository)(nil)).Elem()
}

func (i GitPatternRepositoryArray) ToGitPatternRepositoryArrayOutput() GitPatternRepositoryArrayOutput {
	return i.ToGitPatternRepositoryArrayOutputWithContext(context.Background())
}

func (i GitPatternRepositoryArray) ToGitPatternRepositoryArrayOutputWithContext(ctx context.Context) GitPatternRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitPatternRepositoryArrayOutput)
}

// Git repository property payload for config server
type GitPatternRepositoryOutput struct{ *pulumi.OutputState }

func (GitPatternRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitPatternRepository)(nil)).Elem()
}

func (o GitPatternRepositoryOutput) ToGitPatternRepositoryOutput() GitPatternRepositoryOutput {
	return o
}

func (o GitPatternRepositoryOutput) ToGitPatternRepositoryOutputWithContext(ctx context.Context) GitPatternRepositoryOutput {
	return o
}

// Public sshKey of git repository.
func (o GitPatternRepositoryOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o GitPatternRepositoryOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o GitPatternRepositoryOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Name of the repository
func (o GitPatternRepositoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GitPatternRepository) string { return v.Name }).(pulumi.StringOutput)
}

// Password of git repository basic auth.
func (o GitPatternRepositoryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Collection of pattern of the repository
func (o GitPatternRepositoryOutput) Pattern() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitPatternRepository) []string { return v.Pattern }).(pulumi.StringArrayOutput)
}

// Private sshKey algorithm of git repository.
func (o GitPatternRepositoryOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Searching path of the repository
func (o GitPatternRepositoryOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitPatternRepository) []string { return v.SearchPaths }).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o GitPatternRepositoryOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *bool { return v.StrictHostKeyChecking }).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o GitPatternRepositoryOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GitPatternRepository) string { return v.Uri }).(pulumi.StringOutput)
}

// Username of git repository basic auth.
func (o GitPatternRepositoryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepository) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitPatternRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GitPatternRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitPatternRepository)(nil)).Elem()
}

func (o GitPatternRepositoryArrayOutput) ToGitPatternRepositoryArrayOutput() GitPatternRepositoryArrayOutput {
	return o
}

func (o GitPatternRepositoryArrayOutput) ToGitPatternRepositoryArrayOutputWithContext(ctx context.Context) GitPatternRepositoryArrayOutput {
	return o
}

func (o GitPatternRepositoryArrayOutput) Index(i pulumi.IntInput) GitPatternRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitPatternRepository {
		return vs[0].([]GitPatternRepository)[vs[1].(int)]
	}).(GitPatternRepositoryOutput)
}

// Git repository property payload for config server
type GitPatternRepositoryResponse struct {
	// Public sshKey of git repository.
	HostKey *string `pulumi:"hostKey"`
	// SshKey algorithm of git repository.
	HostKeyAlgorithm *string `pulumi:"hostKeyAlgorithm"`
	// Label of the repository
	Label *string `pulumi:"label"`
	// Name of the repository
	Name string `pulumi:"name"`
	// Password of git repository basic auth.
	Password *string `pulumi:"password"`
	// Collection of pattern of the repository
	Pattern []string `pulumi:"pattern"`
	// Private sshKey algorithm of git repository.
	PrivateKey *string `pulumi:"privateKey"`
	// Searching path of the repository
	SearchPaths []string `pulumi:"searchPaths"`
	// Strict host key checking or not.
	StrictHostKeyChecking *bool `pulumi:"strictHostKeyChecking"`
	// URI of the repository
	Uri string `pulumi:"uri"`
	// Username of git repository basic auth.
	Username *string `pulumi:"username"`
}

// Git repository property payload for config server
type GitPatternRepositoryResponseOutput struct{ *pulumi.OutputState }

func (GitPatternRepositoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitPatternRepositoryResponse)(nil)).Elem()
}

func (o GitPatternRepositoryResponseOutput) ToGitPatternRepositoryResponseOutput() GitPatternRepositoryResponseOutput {
	return o
}

func (o GitPatternRepositoryResponseOutput) ToGitPatternRepositoryResponseOutputWithContext(ctx context.Context) GitPatternRepositoryResponseOutput {
	return o
}

// Public sshKey of git repository.
func (o GitPatternRepositoryResponseOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

// SshKey algorithm of git repository.
func (o GitPatternRepositoryResponseOutput) HostKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *string { return v.HostKeyAlgorithm }).(pulumi.StringPtrOutput)
}

// Label of the repository
func (o GitPatternRepositoryResponseOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Name of the repository
func (o GitPatternRepositoryResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Password of git repository basic auth.
func (o GitPatternRepositoryResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Collection of pattern of the repository
func (o GitPatternRepositoryResponseOutput) Pattern() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) []string { return v.Pattern }).(pulumi.StringArrayOutput)
}

// Private sshKey algorithm of git repository.
func (o GitPatternRepositoryResponseOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Searching path of the repository
func (o GitPatternRepositoryResponseOutput) SearchPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) []string { return v.SearchPaths }).(pulumi.StringArrayOutput)
}

// Strict host key checking or not.
func (o GitPatternRepositoryResponseOutput) StrictHostKeyChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *bool { return v.StrictHostKeyChecking }).(pulumi.BoolPtrOutput)
}

// URI of the repository
func (o GitPatternRepositoryResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Username of git repository basic auth.
func (o GitPatternRepositoryResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitPatternRepositoryResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitPatternRepositoryResponseArrayOutput struct{ *pulumi.OutputState }

func (GitPatternRepositoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitPatternRepositoryResponse)(nil)).Elem()
}

func (o GitPatternRepositoryResponseArrayOutput) ToGitPatternRepositoryResponseArrayOutput() GitPatternRepositoryResponseArrayOutput {
	return o
}

func (o GitPatternRepositoryResponseArrayOutput) ToGitPatternRepositoryResponseArrayOutputWithContext(ctx context.Context) GitPatternRepositoryResponseArrayOutput {
	return o
}

func (o GitPatternRepositoryResponseArrayOutput) Index(i pulumi.IntInput) GitPatternRepositoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitPatternRepositoryResponse {
		return vs[0].([]GitPatternRepositoryResponse)[vs[1].(int)]
	}).(GitPatternRepositoryResponseOutput)
}

// HTTPGetAction describes an action based on HTTP Get requests.
type HTTPGetAction struct {
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	//
	// Possible enum values:
	//  - `"HTTP"` means that the scheme used will be http://
	//  - `"HTTPS"` means that the scheme used will be https://
	Scheme *string `pulumi:"scheme"`
	// The type of the action to take to perform the health check.
	// Expected value is 'HTTPGetAction'.
	Type string `pulumi:"type"`
}

// HTTPGetActionInput is an input type that accepts HTTPGetActionArgs and HTTPGetActionOutput values.
// You can construct a concrete instance of `HTTPGetActionInput` via:
//
//	HTTPGetActionArgs{...}
type HTTPGetActionInput interface {
	pulumi.Input

	ToHTTPGetActionOutput() HTTPGetActionOutput
	ToHTTPGetActionOutputWithContext(context.Context) HTTPGetActionOutput
}

// HTTPGetAction describes an action based on HTTP Get requests.
type HTTPGetActionArgs struct {
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	//
	// Possible enum values:
	//  - `"HTTP"` means that the scheme used will be http://
	//  - `"HTTPS"` means that the scheme used will be https://
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// The type of the action to take to perform the health check.
	// Expected value is 'HTTPGetAction'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HTTPGetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPGetAction)(nil)).Elem()
}

func (i HTTPGetActionArgs) ToHTTPGetActionOutput() HTTPGetActionOutput {
	return i.ToHTTPGetActionOutputWithContext(context.Background())
}

func (i HTTPGetActionArgs) ToHTTPGetActionOutputWithContext(ctx context.Context) HTTPGetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPGetActionOutput)
}

func (i HTTPGetActionArgs) ToHTTPGetActionPtrOutput() HTTPGetActionPtrOutput {
	return i.ToHTTPGetActionPtrOutputWithContext(context.Background())
}

func (i HTTPGetActionArgs) ToHTTPGetActionPtrOutputWithContext(ctx context.Context) HTTPGetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPGetActionOutput).ToHTTPGetActionPtrOutputWithContext(ctx)
}

// HTTPGetActionPtrInput is an input type that accepts HTTPGetActionArgs, HTTPGetActionPtr and HTTPGetActionPtrOutput values.
// You can construct a concrete instance of `HTTPGetActionPtrInput` via:
//
//	        HTTPGetActionArgs{...}
//
//	or:
//
//	        nil
type HTTPGetActionPtrInput interface {
	pulumi.Input

	ToHTTPGetActionPtrOutput() HTTPGetActionPtrOutput
	ToHTTPGetActionPtrOutputWithContext(context.Context) HTTPGetActionPtrOutput
}

type httpgetActionPtrType HTTPGetActionArgs

func HTTPGetActionPtr(v *HTTPGetActionArgs) HTTPGetActionPtrInput {
	return (*httpgetActionPtrType)(v)
}

func (*httpgetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPGetAction)(nil)).Elem()
}

func (i *httpgetActionPtrType) ToHTTPGetActionPtrOutput() HTTPGetActionPtrOutput {
	return i.ToHTTPGetActionPtrOutputWithContext(context.Background())
}

func (i *httpgetActionPtrType) ToHTTPGetActionPtrOutputWithContext(ctx context.Context) HTTPGetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPGetActionPtrOutput)
}

// HTTPGetAction describes an action based on HTTP Get requests.
type HTTPGetActionOutput struct{ *pulumi.OutputState }

func (HTTPGetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPGetAction)(nil)).Elem()
}

func (o HTTPGetActionOutput) ToHTTPGetActionOutput() HTTPGetActionOutput {
	return o
}

func (o HTTPGetActionOutput) ToHTTPGetActionOutputWithContext(ctx context.Context) HTTPGetActionOutput {
	return o
}

func (o HTTPGetActionOutput) ToHTTPGetActionPtrOutput() HTTPGetActionPtrOutput {
	return o.ToHTTPGetActionPtrOutputWithContext(context.Background())
}

func (o HTTPGetActionOutput) ToHTTPGetActionPtrOutputWithContext(ctx context.Context) HTTPGetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPGetAction) *HTTPGetAction {
		return &v
	}).(HTTPGetActionPtrOutput)
}

// Path to access on the HTTP server.
func (o HTTPGetActionOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPGetAction) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
//
// Possible enum values:
//   - `"HTTP"` means that the scheme used will be http://
//   - `"HTTPS"` means that the scheme used will be https://
func (o HTTPGetActionOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPGetAction) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'HTTPGetAction'.
func (o HTTPGetActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HTTPGetAction) string { return v.Type }).(pulumi.StringOutput)
}

type HTTPGetActionPtrOutput struct{ *pulumi.OutputState }

func (HTTPGetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPGetAction)(nil)).Elem()
}

func (o HTTPGetActionPtrOutput) ToHTTPGetActionPtrOutput() HTTPGetActionPtrOutput {
	return o
}

func (o HTTPGetActionPtrOutput) ToHTTPGetActionPtrOutputWithContext(ctx context.Context) HTTPGetActionPtrOutput {
	return o
}

func (o HTTPGetActionPtrOutput) Elem() HTTPGetActionOutput {
	return o.ApplyT(func(v *HTTPGetAction) HTTPGetAction {
		if v != nil {
			return *v
		}
		var ret HTTPGetAction
		return ret
	}).(HTTPGetActionOutput)
}

// Path to access on the HTTP server.
func (o HTTPGetActionPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HTTPGetAction) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
//
// Possible enum values:
//   - `"HTTP"` means that the scheme used will be http://
//   - `"HTTPS"` means that the scheme used will be https://
func (o HTTPGetActionPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HTTPGetAction) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'HTTPGetAction'.
func (o HTTPGetActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HTTPGetAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// HTTPGetAction describes an action based on HTTP Get requests.
type HTTPGetActionResponse struct {
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	//
	// Possible enum values:
	//  - `"HTTP"` means that the scheme used will be http://
	//  - `"HTTPS"` means that the scheme used will be https://
	Scheme *string `pulumi:"scheme"`
	// The type of the action to take to perform the health check.
	// Expected value is 'HTTPGetAction'.
	Type string `pulumi:"type"`
}

// HTTPGetAction describes an action based on HTTP Get requests.
type HTTPGetActionResponseOutput struct{ *pulumi.OutputState }

func (HTTPGetActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPGetActionResponse)(nil)).Elem()
}

func (o HTTPGetActionResponseOutput) ToHTTPGetActionResponseOutput() HTTPGetActionResponseOutput {
	return o
}

func (o HTTPGetActionResponseOutput) ToHTTPGetActionResponseOutputWithContext(ctx context.Context) HTTPGetActionResponseOutput {
	return o
}

// Path to access on the HTTP server.
func (o HTTPGetActionResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPGetActionResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
//
// Possible enum values:
//   - `"HTTP"` means that the scheme used will be http://
//   - `"HTTPS"` means that the scheme used will be https://
func (o HTTPGetActionResponseOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPGetActionResponse) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'HTTPGetAction'.
func (o HTTPGetActionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HTTPGetActionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HTTPGetActionResponsePtrOutput struct{ *pulumi.OutputState }

func (HTTPGetActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPGetActionResponse)(nil)).Elem()
}

func (o HTTPGetActionResponsePtrOutput) ToHTTPGetActionResponsePtrOutput() HTTPGetActionResponsePtrOutput {
	return o
}

func (o HTTPGetActionResponsePtrOutput) ToHTTPGetActionResponsePtrOutputWithContext(ctx context.Context) HTTPGetActionResponsePtrOutput {
	return o
}

func (o HTTPGetActionResponsePtrOutput) Elem() HTTPGetActionResponseOutput {
	return o.ApplyT(func(v *HTTPGetActionResponse) HTTPGetActionResponse {
		if v != nil {
			return *v
		}
		var ret HTTPGetActionResponse
		return ret
	}).(HTTPGetActionResponseOutput)
}

// Path to access on the HTTP server.
func (o HTTPGetActionResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HTTPGetActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
//
// Possible enum values:
//   - `"HTTP"` means that the scheme used will be http://
//   - `"HTTPS"` means that the scheme used will be https://
func (o HTTPGetActionResponsePtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HTTPGetActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'HTTPGetAction'.
func (o HTTPGetActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HTTPGetActionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Azure Spring Apps App Instance Http scaling rule.
type HttpScaleRule struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Metadata properties to describe http scale rule.
	Metadata map[string]string `pulumi:"metadata"`
}

// HttpScaleRuleInput is an input type that accepts HttpScaleRuleArgs and HttpScaleRuleOutput values.
// You can construct a concrete instance of `HttpScaleRuleInput` via:
//
//	HttpScaleRuleArgs{...}
type HttpScaleRuleInput interface {
	pulumi.Input

	ToHttpScaleRuleOutput() HttpScaleRuleOutput
	ToHttpScaleRuleOutputWithContext(context.Context) HttpScaleRuleOutput
}

// Azure Spring Apps App Instance Http scaling rule.
type HttpScaleRuleArgs struct {
	// Authentication secrets for the custom scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Metadata properties to describe http scale rule.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
}

func (HttpScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpScaleRule)(nil)).Elem()
}

func (i HttpScaleRuleArgs) ToHttpScaleRuleOutput() HttpScaleRuleOutput {
	return i.ToHttpScaleRuleOutputWithContext(context.Background())
}

func (i HttpScaleRuleArgs) ToHttpScaleRuleOutputWithContext(ctx context.Context) HttpScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpScaleRuleOutput)
}

func (i HttpScaleRuleArgs) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return i.ToHttpScaleRulePtrOutputWithContext(context.Background())
}

func (i HttpScaleRuleArgs) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpScaleRuleOutput).ToHttpScaleRulePtrOutputWithContext(ctx)
}

// HttpScaleRulePtrInput is an input type that accepts HttpScaleRuleArgs, HttpScaleRulePtr and HttpScaleRulePtrOutput values.
// You can construct a concrete instance of `HttpScaleRulePtrInput` via:
//
//	        HttpScaleRuleArgs{...}
//
//	or:
//
//	        nil
type HttpScaleRulePtrInput interface {
	pulumi.Input

	ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput
	ToHttpScaleRulePtrOutputWithContext(context.Context) HttpScaleRulePtrOutput
}

type httpScaleRulePtrType HttpScaleRuleArgs

func HttpScaleRulePtr(v *HttpScaleRuleArgs) HttpScaleRulePtrInput {
	return (*httpScaleRulePtrType)(v)
}

func (*httpScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpScaleRule)(nil)).Elem()
}

func (i *httpScaleRulePtrType) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return i.ToHttpScaleRulePtrOutputWithContext(context.Background())
}

func (i *httpScaleRulePtrType) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpScaleRulePtrOutput)
}

// Azure Spring Apps App Instance Http scaling rule.
type HttpScaleRuleOutput struct{ *pulumi.OutputState }

func (HttpScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpScaleRule)(nil)).Elem()
}

func (o HttpScaleRuleOutput) ToHttpScaleRuleOutput() HttpScaleRuleOutput {
	return o
}

func (o HttpScaleRuleOutput) ToHttpScaleRuleOutputWithContext(ctx context.Context) HttpScaleRuleOutput {
	return o
}

func (o HttpScaleRuleOutput) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return o.ToHttpScaleRulePtrOutputWithContext(context.Background())
}

func (o HttpScaleRuleOutput) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpScaleRule) *HttpScaleRule {
		return &v
	}).(HttpScaleRulePtrOutput)
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v HttpScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRuleOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v HttpScaleRule) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type HttpScaleRulePtrOutput struct{ *pulumi.OutputState }

func (HttpScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpScaleRule)(nil)).Elem()
}

func (o HttpScaleRulePtrOutput) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return o
}

func (o HttpScaleRulePtrOutput) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return o
}

func (o HttpScaleRulePtrOutput) Elem() HttpScaleRuleOutput {
	return o.ApplyT(func(v *HttpScaleRule) HttpScaleRule {
		if v != nil {
			return *v
		}
		var ret HttpScaleRule
		return ret
	}).(HttpScaleRuleOutput)
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *HttpScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRulePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HttpScaleRule) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Azure Spring Apps App Instance Http scaling rule.
type HttpScaleRuleResponse struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Metadata properties to describe http scale rule.
	Metadata map[string]string `pulumi:"metadata"`
}

// Azure Spring Apps App Instance Http scaling rule.
type HttpScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (HttpScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpScaleRuleResponse)(nil)).Elem()
}

func (o HttpScaleRuleResponseOutput) ToHttpScaleRuleResponseOutput() HttpScaleRuleResponseOutput {
	return o
}

func (o HttpScaleRuleResponseOutput) ToHttpScaleRuleResponseOutputWithContext(ctx context.Context) HttpScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v HttpScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRuleResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v HttpScaleRuleResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type HttpScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpScaleRuleResponse)(nil)).Elem()
}

func (o HttpScaleRuleResponsePtrOutput) ToHttpScaleRuleResponsePtrOutput() HttpScaleRuleResponsePtrOutput {
	return o
}

func (o HttpScaleRuleResponsePtrOutput) ToHttpScaleRuleResponsePtrOutputWithContext(ctx context.Context) HttpScaleRuleResponsePtrOutput {
	return o
}

func (o HttpScaleRuleResponsePtrOutput) Elem() HttpScaleRuleResponseOutput {
	return o.ApplyT(func(v *HttpScaleRuleResponse) HttpScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret HttpScaleRuleResponse
		return ret
	}).(HttpScaleRuleResponseOutput)
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *HttpScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRuleResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HttpScaleRuleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Credential of the image registry
type ImageRegistryCredential struct {
	// The password of the image registry credential
	Password *string `pulumi:"password"`
	// The username of the image registry credential
	Username *string `pulumi:"username"`
}

// ImageRegistryCredentialInput is an input type that accepts ImageRegistryCredentialArgs and ImageRegistryCredentialOutput values.
// You can construct a concrete instance of `ImageRegistryCredentialInput` via:
//
//	ImageRegistryCredentialArgs{...}
type ImageRegistryCredentialInput interface {
	pulumi.Input

	ToImageRegistryCredentialOutput() ImageRegistryCredentialOutput
	ToImageRegistryCredentialOutputWithContext(context.Context) ImageRegistryCredentialOutput
}

// Credential of the image registry
type ImageRegistryCredentialArgs struct {
	// The password of the image registry credential
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username of the image registry credential
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ImageRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegistryCredential)(nil)).Elem()
}

func (i ImageRegistryCredentialArgs) ToImageRegistryCredentialOutput() ImageRegistryCredentialOutput {
	return i.ToImageRegistryCredentialOutputWithContext(context.Background())
}

func (i ImageRegistryCredentialArgs) ToImageRegistryCredentialOutputWithContext(ctx context.Context) ImageRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRegistryCredentialOutput)
}

func (i ImageRegistryCredentialArgs) ToImageRegistryCredentialPtrOutput() ImageRegistryCredentialPtrOutput {
	return i.ToImageRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i ImageRegistryCredentialArgs) ToImageRegistryCredentialPtrOutputWithContext(ctx context.Context) ImageRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRegistryCredentialOutput).ToImageRegistryCredentialPtrOutputWithContext(ctx)
}

// ImageRegistryCredentialPtrInput is an input type that accepts ImageRegistryCredentialArgs, ImageRegistryCredentialPtr and ImageRegistryCredentialPtrOutput values.
// You can construct a concrete instance of `ImageRegistryCredentialPtrInput` via:
//
//	        ImageRegistryCredentialArgs{...}
//
//	or:
//
//	        nil
type ImageRegistryCredentialPtrInput interface {
	pulumi.Input

	ToImageRegistryCredentialPtrOutput() ImageRegistryCredentialPtrOutput
	ToImageRegistryCredentialPtrOutputWithContext(context.Context) ImageRegistryCredentialPtrOutput
}

type imageRegistryCredentialPtrType ImageRegistryCredentialArgs

func ImageRegistryCredentialPtr(v *ImageRegistryCredentialArgs) ImageRegistryCredentialPtrInput {
	return (*imageRegistryCredentialPtrType)(v)
}

func (*imageRegistryCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRegistryCredential)(nil)).Elem()
}

func (i *imageRegistryCredentialPtrType) ToImageRegistryCredentialPtrOutput() ImageRegistryCredentialPtrOutput {
	return i.ToImageRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i *imageRegistryCredentialPtrType) ToImageRegistryCredentialPtrOutputWithContext(ctx context.Context) ImageRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRegistryCredentialPtrOutput)
}

// Credential of the image registry
type ImageRegistryCredentialOutput struct{ *pulumi.OutputState }

func (ImageRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegistryCredential)(nil)).Elem()
}

func (o ImageRegistryCredentialOutput) ToImageRegistryCredentialOutput() ImageRegistryCredentialOutput {
	return o
}

func (o ImageRegistryCredentialOutput) ToImageRegistryCredentialOutputWithContext(ctx context.Context) ImageRegistryCredentialOutput {
	return o
}

func (o ImageRegistryCredentialOutput) ToImageRegistryCredentialPtrOutput() ImageRegistryCredentialPtrOutput {
	return o.ToImageRegistryCredentialPtrOutputWithContext(context.Background())
}

func (o ImageRegistryCredentialOutput) ToImageRegistryCredentialPtrOutputWithContext(ctx context.Context) ImageRegistryCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRegistryCredential) *ImageRegistryCredential {
		return &v
	}).(ImageRegistryCredentialPtrOutput)
}

// The password of the image registry credential
func (o ImageRegistryCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username of the image registry credential
func (o ImageRegistryCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ImageRegistryCredentialPtrOutput struct{ *pulumi.OutputState }

func (ImageRegistryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRegistryCredential)(nil)).Elem()
}

func (o ImageRegistryCredentialPtrOutput) ToImageRegistryCredentialPtrOutput() ImageRegistryCredentialPtrOutput {
	return o
}

func (o ImageRegistryCredentialPtrOutput) ToImageRegistryCredentialPtrOutputWithContext(ctx context.Context) ImageRegistryCredentialPtrOutput {
	return o
}

func (o ImageRegistryCredentialPtrOutput) Elem() ImageRegistryCredentialOutput {
	return o.ApplyT(func(v *ImageRegistryCredential) ImageRegistryCredential {
		if v != nil {
			return *v
		}
		var ret ImageRegistryCredential
		return ret
	}).(ImageRegistryCredentialOutput)
}

// The password of the image registry credential
func (o ImageRegistryCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRegistryCredential) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username of the image registry credential
func (o ImageRegistryCredentialPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRegistryCredential) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Credential of the image registry
type ImageRegistryCredentialResponse struct {
	// The password of the image registry credential
	Password *string `pulumi:"password"`
	// The username of the image registry credential
	Username *string `pulumi:"username"`
}

// Credential of the image registry
type ImageRegistryCredentialResponseOutput struct{ *pulumi.OutputState }

func (ImageRegistryCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegistryCredentialResponse)(nil)).Elem()
}

func (o ImageRegistryCredentialResponseOutput) ToImageRegistryCredentialResponseOutput() ImageRegistryCredentialResponseOutput {
	return o
}

func (o ImageRegistryCredentialResponseOutput) ToImageRegistryCredentialResponseOutputWithContext(ctx context.Context) ImageRegistryCredentialResponseOutput {
	return o
}

// The password of the image registry credential
func (o ImageRegistryCredentialResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCredentialResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username of the image registry credential
func (o ImageRegistryCredentialResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCredentialResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ImageRegistryCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageRegistryCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRegistryCredentialResponse)(nil)).Elem()
}

func (o ImageRegistryCredentialResponsePtrOutput) ToImageRegistryCredentialResponsePtrOutput() ImageRegistryCredentialResponsePtrOutput {
	return o
}

func (o ImageRegistryCredentialResponsePtrOutput) ToImageRegistryCredentialResponsePtrOutputWithContext(ctx context.Context) ImageRegistryCredentialResponsePtrOutput {
	return o
}

func (o ImageRegistryCredentialResponsePtrOutput) Elem() ImageRegistryCredentialResponseOutput {
	return o.ApplyT(func(v *ImageRegistryCredentialResponse) ImageRegistryCredentialResponse {
		if v != nil {
			return *v
		}
		var ret ImageRegistryCredentialResponse
		return ret
	}).(ImageRegistryCredentialResponseOutput)
}

// The password of the image registry credential
func (o ImageRegistryCredentialResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRegistryCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username of the image registry credential
func (o ImageRegistryCredentialResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRegistryCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
type IngressConfig struct {
	// Ingress read time out in seconds.
	ReadTimeoutInSeconds *int `pulumi:"readTimeoutInSeconds"`
}

// IngressConfigInput is an input type that accepts IngressConfigArgs and IngressConfigOutput values.
// You can construct a concrete instance of `IngressConfigInput` via:
//
//	IngressConfigArgs{...}
type IngressConfigInput interface {
	pulumi.Input

	ToIngressConfigOutput() IngressConfigOutput
	ToIngressConfigOutputWithContext(context.Context) IngressConfigOutput
}

// Ingress configuration payload for Azure Spring Apps resource.
type IngressConfigArgs struct {
	// Ingress read time out in seconds.
	ReadTimeoutInSeconds pulumi.IntPtrInput `pulumi:"readTimeoutInSeconds"`
}

func (IngressConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressConfig)(nil)).Elem()
}

func (i IngressConfigArgs) ToIngressConfigOutput() IngressConfigOutput {
	return i.ToIngressConfigOutputWithContext(context.Background())
}

func (i IngressConfigArgs) ToIngressConfigOutputWithContext(ctx context.Context) IngressConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressConfigOutput)
}

func (i IngressConfigArgs) ToIngressConfigPtrOutput() IngressConfigPtrOutput {
	return i.ToIngressConfigPtrOutputWithContext(context.Background())
}

func (i IngressConfigArgs) ToIngressConfigPtrOutputWithContext(ctx context.Context) IngressConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressConfigOutput).ToIngressConfigPtrOutputWithContext(ctx)
}

// IngressConfigPtrInput is an input type that accepts IngressConfigArgs, IngressConfigPtr and IngressConfigPtrOutput values.
// You can construct a concrete instance of `IngressConfigPtrInput` via:
//
//	        IngressConfigArgs{...}
//
//	or:
//
//	        nil
type IngressConfigPtrInput interface {
	pulumi.Input

	ToIngressConfigPtrOutput() IngressConfigPtrOutput
	ToIngressConfigPtrOutputWithContext(context.Context) IngressConfigPtrOutput
}

type ingressConfigPtrType IngressConfigArgs

func IngressConfigPtr(v *IngressConfigArgs) IngressConfigPtrInput {
	return (*ingressConfigPtrType)(v)
}

func (*ingressConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressConfig)(nil)).Elem()
}

func (i *ingressConfigPtrType) ToIngressConfigPtrOutput() IngressConfigPtrOutput {
	return i.ToIngressConfigPtrOutputWithContext(context.Background())
}

func (i *ingressConfigPtrType) ToIngressConfigPtrOutputWithContext(ctx context.Context) IngressConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressConfigPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
type IngressConfigOutput struct{ *pulumi.OutputState }

func (IngressConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressConfig)(nil)).Elem()
}

func (o IngressConfigOutput) ToIngressConfigOutput() IngressConfigOutput {
	return o
}

func (o IngressConfigOutput) ToIngressConfigOutputWithContext(ctx context.Context) IngressConfigOutput {
	return o
}

func (o IngressConfigOutput) ToIngressConfigPtrOutput() IngressConfigPtrOutput {
	return o.ToIngressConfigPtrOutputWithContext(context.Background())
}

func (o IngressConfigOutput) ToIngressConfigPtrOutputWithContext(ctx context.Context) IngressConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressConfig) *IngressConfig {
		return &v
	}).(IngressConfigPtrOutput)
}

// Ingress read time out in seconds.
func (o IngressConfigOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressConfig) *int { return v.ReadTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type IngressConfigPtrOutput struct{ *pulumi.OutputState }

func (IngressConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressConfig)(nil)).Elem()
}

func (o IngressConfigPtrOutput) ToIngressConfigPtrOutput() IngressConfigPtrOutput {
	return o
}

func (o IngressConfigPtrOutput) ToIngressConfigPtrOutputWithContext(ctx context.Context) IngressConfigPtrOutput {
	return o
}

func (o IngressConfigPtrOutput) Elem() IngressConfigOutput {
	return o.ApplyT(func(v *IngressConfig) IngressConfig {
		if v != nil {
			return *v
		}
		var ret IngressConfig
		return ret
	}).(IngressConfigOutput)
}

// Ingress read time out in seconds.
func (o IngressConfigPtrOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressConfig) *int {
		if v == nil {
			return nil
		}
		return v.ReadTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
type IngressConfigResponse struct {
	// Ingress read time out in seconds.
	ReadTimeoutInSeconds *int `pulumi:"readTimeoutInSeconds"`
}

// Ingress configuration payload for Azure Spring Apps resource.
type IngressConfigResponseOutput struct{ *pulumi.OutputState }

func (IngressConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressConfigResponse)(nil)).Elem()
}

func (o IngressConfigResponseOutput) ToIngressConfigResponseOutput() IngressConfigResponseOutput {
	return o
}

func (o IngressConfigResponseOutput) ToIngressConfigResponseOutputWithContext(ctx context.Context) IngressConfigResponseOutput {
	return o
}

// Ingress read time out in seconds.
func (o IngressConfigResponseOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressConfigResponse) *int { return v.ReadTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type IngressConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (IngressConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressConfigResponse)(nil)).Elem()
}

func (o IngressConfigResponsePtrOutput) ToIngressConfigResponsePtrOutput() IngressConfigResponsePtrOutput {
	return o
}

func (o IngressConfigResponsePtrOutput) ToIngressConfigResponsePtrOutputWithContext(ctx context.Context) IngressConfigResponsePtrOutput {
	return o
}

func (o IngressConfigResponsePtrOutput) Elem() IngressConfigResponseOutput {
	return o.ApplyT(func(v *IngressConfigResponse) IngressConfigResponse {
		if v != nil {
			return *v
		}
		var ret IngressConfigResponse
		return ret
	}).(IngressConfigResponseOutput)
}

// Ingress read time out in seconds.
func (o IngressConfigResponsePtrOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReadTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// App ingress settings payload.
type IngressSettings struct {
	// How ingress should communicate with this app backend service.
	BackendProtocol *string `pulumi:"backendProtocol"`
	// Client-Certification Authentication.
	ClientAuth *IngressSettingsClientAuth `pulumi:"clientAuth"`
	// Ingress read time out in seconds.
	ReadTimeoutInSeconds *int `pulumi:"readTimeoutInSeconds"`
	// Ingress send time out in seconds.
	SendTimeoutInSeconds *int `pulumi:"sendTimeoutInSeconds"`
	// Type of the affinity, set this to Cookie to enable session affinity.
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// Time in seconds until the cookie expires.
	SessionCookieMaxAge *int `pulumi:"sessionCookieMaxAge"`
}

// IngressSettingsInput is an input type that accepts IngressSettingsArgs and IngressSettingsOutput values.
// You can construct a concrete instance of `IngressSettingsInput` via:
//
//	IngressSettingsArgs{...}
type IngressSettingsInput interface {
	pulumi.Input

	ToIngressSettingsOutput() IngressSettingsOutput
	ToIngressSettingsOutputWithContext(context.Context) IngressSettingsOutput
}

// App ingress settings payload.
type IngressSettingsArgs struct {
	// How ingress should communicate with this app backend service.
	BackendProtocol pulumi.StringPtrInput `pulumi:"backendProtocol"`
	// Client-Certification Authentication.
	ClientAuth IngressSettingsClientAuthPtrInput `pulumi:"clientAuth"`
	// Ingress read time out in seconds.
	ReadTimeoutInSeconds pulumi.IntPtrInput `pulumi:"readTimeoutInSeconds"`
	// Ingress send time out in seconds.
	SendTimeoutInSeconds pulumi.IntPtrInput `pulumi:"sendTimeoutInSeconds"`
	// Type of the affinity, set this to Cookie to enable session affinity.
	SessionAffinity pulumi.StringPtrInput `pulumi:"sessionAffinity"`
	// Time in seconds until the cookie expires.
	SessionCookieMaxAge pulumi.IntPtrInput `pulumi:"sessionCookieMaxAge"`
}

func (IngressSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressSettings)(nil)).Elem()
}

func (i IngressSettingsArgs) ToIngressSettingsOutput() IngressSettingsOutput {
	return i.ToIngressSettingsOutputWithContext(context.Background())
}

func (i IngressSettingsArgs) ToIngressSettingsOutputWithContext(ctx context.Context) IngressSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressSettingsOutput)
}

func (i IngressSettingsArgs) ToIngressSettingsPtrOutput() IngressSettingsPtrOutput {
	return i.ToIngressSettingsPtrOutputWithContext(context.Background())
}

func (i IngressSettingsArgs) ToIngressSettingsPtrOutputWithContext(ctx context.Context) IngressSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressSettingsOutput).ToIngressSettingsPtrOutputWithContext(ctx)
}

// IngressSettingsPtrInput is an input type that accepts IngressSettingsArgs, IngressSettingsPtr and IngressSettingsPtrOutput values.
// You can construct a concrete instance of `IngressSettingsPtrInput` via:
//
//	        IngressSettingsArgs{...}
//
//	or:
//
//	        nil
type IngressSettingsPtrInput interface {
	pulumi.Input

	ToIngressSettingsPtrOutput() IngressSettingsPtrOutput
	ToIngressSettingsPtrOutputWithContext(context.Context) IngressSettingsPtrOutput
}

type ingressSettingsPtrType IngressSettingsArgs

func IngressSettingsPtr(v *IngressSettingsArgs) IngressSettingsPtrInput {
	return (*ingressSettingsPtrType)(v)
}

func (*ingressSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressSettings)(nil)).Elem()
}

func (i *ingressSettingsPtrType) ToIngressSettingsPtrOutput() IngressSettingsPtrOutput {
	return i.ToIngressSettingsPtrOutputWithContext(context.Background())
}

func (i *ingressSettingsPtrType) ToIngressSettingsPtrOutputWithContext(ctx context.Context) IngressSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressSettingsPtrOutput)
}

// App ingress settings payload.
type IngressSettingsOutput struct{ *pulumi.OutputState }

func (IngressSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressSettings)(nil)).Elem()
}

func (o IngressSettingsOutput) ToIngressSettingsOutput() IngressSettingsOutput {
	return o
}

func (o IngressSettingsOutput) ToIngressSettingsOutputWithContext(ctx context.Context) IngressSettingsOutput {
	return o
}

func (o IngressSettingsOutput) ToIngressSettingsPtrOutput() IngressSettingsPtrOutput {
	return o.ToIngressSettingsPtrOutputWithContext(context.Background())
}

func (o IngressSettingsOutput) ToIngressSettingsPtrOutputWithContext(ctx context.Context) IngressSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressSettings) *IngressSettings {
		return &v
	}).(IngressSettingsPtrOutput)
}

// How ingress should communicate with this app backend service.
func (o IngressSettingsOutput) BackendProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressSettings) *string { return v.BackendProtocol }).(pulumi.StringPtrOutput)
}

// Client-Certification Authentication.
func (o IngressSettingsOutput) ClientAuth() IngressSettingsClientAuthPtrOutput {
	return o.ApplyT(func(v IngressSettings) *IngressSettingsClientAuth { return v.ClientAuth }).(IngressSettingsClientAuthPtrOutput)
}

// Ingress read time out in seconds.
func (o IngressSettingsOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressSettings) *int { return v.ReadTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Ingress send time out in seconds.
func (o IngressSettingsOutput) SendTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressSettings) *int { return v.SendTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Type of the affinity, set this to Cookie to enable session affinity.
func (o IngressSettingsOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressSettings) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

// Time in seconds until the cookie expires.
func (o IngressSettingsOutput) SessionCookieMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressSettings) *int { return v.SessionCookieMaxAge }).(pulumi.IntPtrOutput)
}

type IngressSettingsPtrOutput struct{ *pulumi.OutputState }

func (IngressSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressSettings)(nil)).Elem()
}

func (o IngressSettingsPtrOutput) ToIngressSettingsPtrOutput() IngressSettingsPtrOutput {
	return o
}

func (o IngressSettingsPtrOutput) ToIngressSettingsPtrOutputWithContext(ctx context.Context) IngressSettingsPtrOutput {
	return o
}

func (o IngressSettingsPtrOutput) Elem() IngressSettingsOutput {
	return o.ApplyT(func(v *IngressSettings) IngressSettings {
		if v != nil {
			return *v
		}
		var ret IngressSettings
		return ret
	}).(IngressSettingsOutput)
}

// How ingress should communicate with this app backend service.
func (o IngressSettingsPtrOutput) BackendProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressSettings) *string {
		if v == nil {
			return nil
		}
		return v.BackendProtocol
	}).(pulumi.StringPtrOutput)
}

// Client-Certification Authentication.
func (o IngressSettingsPtrOutput) ClientAuth() IngressSettingsClientAuthPtrOutput {
	return o.ApplyT(func(v *IngressSettings) *IngressSettingsClientAuth {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(IngressSettingsClientAuthPtrOutput)
}

// Ingress read time out in seconds.
func (o IngressSettingsPtrOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReadTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Ingress send time out in seconds.
func (o IngressSettingsPtrOutput) SendTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressSettings) *int {
		if v == nil {
			return nil
		}
		return v.SendTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Type of the affinity, set this to Cookie to enable session affinity.
func (o IngressSettingsPtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressSettings) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

// Time in seconds until the cookie expires.
func (o IngressSettingsPtrOutput) SessionCookieMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressSettings) *int {
		if v == nil {
			return nil
		}
		return v.SessionCookieMaxAge
	}).(pulumi.IntPtrOutput)
}

// Client-Certification Authentication.
type IngressSettingsClientAuth struct {
	// Collection of certificate resource id.
	Certificates []string `pulumi:"certificates"`
}

// IngressSettingsClientAuthInput is an input type that accepts IngressSettingsClientAuthArgs and IngressSettingsClientAuthOutput values.
// You can construct a concrete instance of `IngressSettingsClientAuthInput` via:
//
//	IngressSettingsClientAuthArgs{...}
type IngressSettingsClientAuthInput interface {
	pulumi.Input

	ToIngressSettingsClientAuthOutput() IngressSettingsClientAuthOutput
	ToIngressSettingsClientAuthOutputWithContext(context.Context) IngressSettingsClientAuthOutput
}

// Client-Certification Authentication.
type IngressSettingsClientAuthArgs struct {
	// Collection of certificate resource id.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
}

func (IngressSettingsClientAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressSettingsClientAuth)(nil)).Elem()
}

func (i IngressSettingsClientAuthArgs) ToIngressSettingsClientAuthOutput() IngressSettingsClientAuthOutput {
	return i.ToIngressSettingsClientAuthOutputWithContext(context.Background())
}

func (i IngressSettingsClientAuthArgs) ToIngressSettingsClientAuthOutputWithContext(ctx context.Context) IngressSettingsClientAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressSettingsClientAuthOutput)
}

func (i IngressSettingsClientAuthArgs) ToIngressSettingsClientAuthPtrOutput() IngressSettingsClientAuthPtrOutput {
	return i.ToIngressSettingsClientAuthPtrOutputWithContext(context.Background())
}

func (i IngressSettingsClientAuthArgs) ToIngressSettingsClientAuthPtrOutputWithContext(ctx context.Context) IngressSettingsClientAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressSettingsClientAuthOutput).ToIngressSettingsClientAuthPtrOutputWithContext(ctx)
}

// IngressSettingsClientAuthPtrInput is an input type that accepts IngressSettingsClientAuthArgs, IngressSettingsClientAuthPtr and IngressSettingsClientAuthPtrOutput values.
// You can construct a concrete instance of `IngressSettingsClientAuthPtrInput` via:
//
//	        IngressSettingsClientAuthArgs{...}
//
//	or:
//
//	        nil
type IngressSettingsClientAuthPtrInput interface {
	pulumi.Input

	ToIngressSettingsClientAuthPtrOutput() IngressSettingsClientAuthPtrOutput
	ToIngressSettingsClientAuthPtrOutputWithContext(context.Context) IngressSettingsClientAuthPtrOutput
}

type ingressSettingsClientAuthPtrType IngressSettingsClientAuthArgs

func IngressSettingsClientAuthPtr(v *IngressSettingsClientAuthArgs) IngressSettingsClientAuthPtrInput {
	return (*ingressSettingsClientAuthPtrType)(v)
}

func (*ingressSettingsClientAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressSettingsClientAuth)(nil)).Elem()
}

func (i *ingressSettingsClientAuthPtrType) ToIngressSettingsClientAuthPtrOutput() IngressSettingsClientAuthPtrOutput {
	return i.ToIngressSettingsClientAuthPtrOutputWithContext(context.Background())
}

func (i *ingressSettingsClientAuthPtrType) ToIngressSettingsClientAuthPtrOutputWithContext(ctx context.Context) IngressSettingsClientAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressSettingsClientAuthPtrOutput)
}

// Client-Certification Authentication.
type IngressSettingsClientAuthOutput struct{ *pulumi.OutputState }

func (IngressSettingsClientAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressSettingsClientAuth)(nil)).Elem()
}

func (o IngressSettingsClientAuthOutput) ToIngressSettingsClientAuthOutput() IngressSettingsClientAuthOutput {
	return o
}

func (o IngressSettingsClientAuthOutput) ToIngressSettingsClientAuthOutputWithContext(ctx context.Context) IngressSettingsClientAuthOutput {
	return o
}

func (o IngressSettingsClientAuthOutput) ToIngressSettingsClientAuthPtrOutput() IngressSettingsClientAuthPtrOutput {
	return o.ToIngressSettingsClientAuthPtrOutputWithContext(context.Background())
}

func (o IngressSettingsClientAuthOutput) ToIngressSettingsClientAuthPtrOutputWithContext(ctx context.Context) IngressSettingsClientAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressSettingsClientAuth) *IngressSettingsClientAuth {
		return &v
	}).(IngressSettingsClientAuthPtrOutput)
}

// Collection of certificate resource id.
func (o IngressSettingsClientAuthOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IngressSettingsClientAuth) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

type IngressSettingsClientAuthPtrOutput struct{ *pulumi.OutputState }

func (IngressSettingsClientAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressSettingsClientAuth)(nil)).Elem()
}

func (o IngressSettingsClientAuthPtrOutput) ToIngressSettingsClientAuthPtrOutput() IngressSettingsClientAuthPtrOutput {
	return o
}

func (o IngressSettingsClientAuthPtrOutput) ToIngressSettingsClientAuthPtrOutputWithContext(ctx context.Context) IngressSettingsClientAuthPtrOutput {
	return o
}

func (o IngressSettingsClientAuthPtrOutput) Elem() IngressSettingsClientAuthOutput {
	return o.ApplyT(func(v *IngressSettingsClientAuth) IngressSettingsClientAuth {
		if v != nil {
			return *v
		}
		var ret IngressSettingsClientAuth
		return ret
	}).(IngressSettingsClientAuthOutput)
}

// Collection of certificate resource id.
func (o IngressSettingsClientAuthPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IngressSettingsClientAuth) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// App ingress settings payload.
type IngressSettingsResponse struct {
	// How ingress should communicate with this app backend service.
	BackendProtocol *string `pulumi:"backendProtocol"`
	// Client-Certification Authentication.
	ClientAuth *IngressSettingsResponseClientAuth `pulumi:"clientAuth"`
	// Ingress read time out in seconds.
	ReadTimeoutInSeconds *int `pulumi:"readTimeoutInSeconds"`
	// Ingress send time out in seconds.
	SendTimeoutInSeconds *int `pulumi:"sendTimeoutInSeconds"`
	// Type of the affinity, set this to Cookie to enable session affinity.
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// Time in seconds until the cookie expires.
	SessionCookieMaxAge *int `pulumi:"sessionCookieMaxAge"`
}

// App ingress settings payload.
type IngressSettingsResponseOutput struct{ *pulumi.OutputState }

func (IngressSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressSettingsResponse)(nil)).Elem()
}

func (o IngressSettingsResponseOutput) ToIngressSettingsResponseOutput() IngressSettingsResponseOutput {
	return o
}

func (o IngressSettingsResponseOutput) ToIngressSettingsResponseOutputWithContext(ctx context.Context) IngressSettingsResponseOutput {
	return o
}

// How ingress should communicate with this app backend service.
func (o IngressSettingsResponseOutput) BackendProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressSettingsResponse) *string { return v.BackendProtocol }).(pulumi.StringPtrOutput)
}

// Client-Certification Authentication.
func (o IngressSettingsResponseOutput) ClientAuth() IngressSettingsResponseClientAuthPtrOutput {
	return o.ApplyT(func(v IngressSettingsResponse) *IngressSettingsResponseClientAuth { return v.ClientAuth }).(IngressSettingsResponseClientAuthPtrOutput)
}

// Ingress read time out in seconds.
func (o IngressSettingsResponseOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressSettingsResponse) *int { return v.ReadTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Ingress send time out in seconds.
func (o IngressSettingsResponseOutput) SendTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressSettingsResponse) *int { return v.SendTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Type of the affinity, set this to Cookie to enable session affinity.
func (o IngressSettingsResponseOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressSettingsResponse) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

// Time in seconds until the cookie expires.
func (o IngressSettingsResponseOutput) SessionCookieMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressSettingsResponse) *int { return v.SessionCookieMaxAge }).(pulumi.IntPtrOutput)
}

type IngressSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (IngressSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressSettingsResponse)(nil)).Elem()
}

func (o IngressSettingsResponsePtrOutput) ToIngressSettingsResponsePtrOutput() IngressSettingsResponsePtrOutput {
	return o
}

func (o IngressSettingsResponsePtrOutput) ToIngressSettingsResponsePtrOutputWithContext(ctx context.Context) IngressSettingsResponsePtrOutput {
	return o
}

func (o IngressSettingsResponsePtrOutput) Elem() IngressSettingsResponseOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) IngressSettingsResponse {
		if v != nil {
			return *v
		}
		var ret IngressSettingsResponse
		return ret
	}).(IngressSettingsResponseOutput)
}

// How ingress should communicate with this app backend service.
func (o IngressSettingsResponsePtrOutput) BackendProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackendProtocol
	}).(pulumi.StringPtrOutput)
}

// Client-Certification Authentication.
func (o IngressSettingsResponsePtrOutput) ClientAuth() IngressSettingsResponseClientAuthPtrOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) *IngressSettingsResponseClientAuth {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(IngressSettingsResponseClientAuthPtrOutput)
}

// Ingress read time out in seconds.
func (o IngressSettingsResponsePtrOutput) ReadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReadTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Ingress send time out in seconds.
func (o IngressSettingsResponsePtrOutput) SendTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SendTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Type of the affinity, set this to Cookie to enable session affinity.
func (o IngressSettingsResponsePtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

// Time in seconds until the cookie expires.
func (o IngressSettingsResponsePtrOutput) SessionCookieMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SessionCookieMaxAge
	}).(pulumi.IntPtrOutput)
}

// Client-Certification Authentication.
type IngressSettingsResponseClientAuth struct {
	// Collection of certificate resource id.
	Certificates []string `pulumi:"certificates"`
}

// Client-Certification Authentication.
type IngressSettingsResponseClientAuthOutput struct{ *pulumi.OutputState }

func (IngressSettingsResponseClientAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressSettingsResponseClientAuth)(nil)).Elem()
}

func (o IngressSettingsResponseClientAuthOutput) ToIngressSettingsResponseClientAuthOutput() IngressSettingsResponseClientAuthOutput {
	return o
}

func (o IngressSettingsResponseClientAuthOutput) ToIngressSettingsResponseClientAuthOutputWithContext(ctx context.Context) IngressSettingsResponseClientAuthOutput {
	return o
}

// Collection of certificate resource id.
func (o IngressSettingsResponseClientAuthOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IngressSettingsResponseClientAuth) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

type IngressSettingsResponseClientAuthPtrOutput struct{ *pulumi.OutputState }

func (IngressSettingsResponseClientAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressSettingsResponseClientAuth)(nil)).Elem()
}

func (o IngressSettingsResponseClientAuthPtrOutput) ToIngressSettingsResponseClientAuthPtrOutput() IngressSettingsResponseClientAuthPtrOutput {
	return o
}

func (o IngressSettingsResponseClientAuthPtrOutput) ToIngressSettingsResponseClientAuthPtrOutputWithContext(ctx context.Context) IngressSettingsResponseClientAuthPtrOutput {
	return o
}

func (o IngressSettingsResponseClientAuthPtrOutput) Elem() IngressSettingsResponseClientAuthOutput {
	return o.ApplyT(func(v *IngressSettingsResponseClientAuth) IngressSettingsResponseClientAuth {
		if v != nil {
			return *v
		}
		var ret IngressSettingsResponseClientAuth
		return ret
	}).(IngressSettingsResponseClientAuthOutput)
}

// Collection of certificate resource id.
func (o IngressSettingsResponseClientAuthPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IngressSettingsResponseClientAuth) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// Uploaded Jar binary for a deployment
type JarUploadedUserSourceInfo struct {
	// JVM parameter
	JvmOptions *string `pulumi:"jvmOptions"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the Jar file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'Jar'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// JarUploadedUserSourceInfoInput is an input type that accepts JarUploadedUserSourceInfoArgs and JarUploadedUserSourceInfoOutput values.
// You can construct a concrete instance of `JarUploadedUserSourceInfoInput` via:
//
//	JarUploadedUserSourceInfoArgs{...}
type JarUploadedUserSourceInfoInput interface {
	pulumi.Input

	ToJarUploadedUserSourceInfoOutput() JarUploadedUserSourceInfoOutput
	ToJarUploadedUserSourceInfoOutputWithContext(context.Context) JarUploadedUserSourceInfoOutput
}

// Uploaded Jar binary for a deployment
type JarUploadedUserSourceInfoArgs struct {
	// JVM parameter
	JvmOptions pulumi.StringPtrInput `pulumi:"jvmOptions"`
	// Relative path of the storage which stores the source
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// Runtime version of the Jar file
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'Jar'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (JarUploadedUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JarUploadedUserSourceInfo)(nil)).Elem()
}

func (i JarUploadedUserSourceInfoArgs) ToJarUploadedUserSourceInfoOutput() JarUploadedUserSourceInfoOutput {
	return i.ToJarUploadedUserSourceInfoOutputWithContext(context.Background())
}

func (i JarUploadedUserSourceInfoArgs) ToJarUploadedUserSourceInfoOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JarUploadedUserSourceInfoOutput)
}

func (i JarUploadedUserSourceInfoArgs) ToJarUploadedUserSourceInfoPtrOutput() JarUploadedUserSourceInfoPtrOutput {
	return i.ToJarUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i JarUploadedUserSourceInfoArgs) ToJarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JarUploadedUserSourceInfoOutput).ToJarUploadedUserSourceInfoPtrOutputWithContext(ctx)
}

// JarUploadedUserSourceInfoPtrInput is an input type that accepts JarUploadedUserSourceInfoArgs, JarUploadedUserSourceInfoPtr and JarUploadedUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `JarUploadedUserSourceInfoPtrInput` via:
//
//	        JarUploadedUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type JarUploadedUserSourceInfoPtrInput interface {
	pulumi.Input

	ToJarUploadedUserSourceInfoPtrOutput() JarUploadedUserSourceInfoPtrOutput
	ToJarUploadedUserSourceInfoPtrOutputWithContext(context.Context) JarUploadedUserSourceInfoPtrOutput
}

type jarUploadedUserSourceInfoPtrType JarUploadedUserSourceInfoArgs

func JarUploadedUserSourceInfoPtr(v *JarUploadedUserSourceInfoArgs) JarUploadedUserSourceInfoPtrInput {
	return (*jarUploadedUserSourceInfoPtrType)(v)
}

func (*jarUploadedUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JarUploadedUserSourceInfo)(nil)).Elem()
}

func (i *jarUploadedUserSourceInfoPtrType) ToJarUploadedUserSourceInfoPtrOutput() JarUploadedUserSourceInfoPtrOutput {
	return i.ToJarUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *jarUploadedUserSourceInfoPtrType) ToJarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JarUploadedUserSourceInfoPtrOutput)
}

// Uploaded Jar binary for a deployment
type JarUploadedUserSourceInfoOutput struct{ *pulumi.OutputState }

func (JarUploadedUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JarUploadedUserSourceInfo)(nil)).Elem()
}

func (o JarUploadedUserSourceInfoOutput) ToJarUploadedUserSourceInfoOutput() JarUploadedUserSourceInfoOutput {
	return o
}

func (o JarUploadedUserSourceInfoOutput) ToJarUploadedUserSourceInfoOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoOutput {
	return o
}

func (o JarUploadedUserSourceInfoOutput) ToJarUploadedUserSourceInfoPtrOutput() JarUploadedUserSourceInfoPtrOutput {
	return o.ToJarUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o JarUploadedUserSourceInfoOutput) ToJarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JarUploadedUserSourceInfo) *JarUploadedUserSourceInfo {
		return &v
	}).(JarUploadedUserSourceInfoPtrOutput)
}

// JVM parameter
func (o JarUploadedUserSourceInfoOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfo) *string { return v.JvmOptions }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o JarUploadedUserSourceInfoOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfo) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the Jar file
func (o JarUploadedUserSourceInfoOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfo) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Jar'.
func (o JarUploadedUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o JarUploadedUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type JarUploadedUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (JarUploadedUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JarUploadedUserSourceInfo)(nil)).Elem()
}

func (o JarUploadedUserSourceInfoPtrOutput) ToJarUploadedUserSourceInfoPtrOutput() JarUploadedUserSourceInfoPtrOutput {
	return o
}

func (o JarUploadedUserSourceInfoPtrOutput) ToJarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoPtrOutput {
	return o
}

func (o JarUploadedUserSourceInfoPtrOutput) Elem() JarUploadedUserSourceInfoOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfo) JarUploadedUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret JarUploadedUserSourceInfo
		return ret
	}).(JarUploadedUserSourceInfoOutput)
}

// JVM parameter
func (o JarUploadedUserSourceInfoPtrOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o JarUploadedUserSourceInfoPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the Jar file
func (o JarUploadedUserSourceInfoPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Jar'.
func (o JarUploadedUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o JarUploadedUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Uploaded Jar binary for a deployment
type JarUploadedUserSourceInfoResponse struct {
	// JVM parameter
	JvmOptions *string `pulumi:"jvmOptions"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the Jar file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'Jar'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Uploaded Jar binary for a deployment
type JarUploadedUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (JarUploadedUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JarUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o JarUploadedUserSourceInfoResponseOutput) ToJarUploadedUserSourceInfoResponseOutput() JarUploadedUserSourceInfoResponseOutput {
	return o
}

func (o JarUploadedUserSourceInfoResponseOutput) ToJarUploadedUserSourceInfoResponseOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoResponseOutput {
	return o
}

// JVM parameter
func (o JarUploadedUserSourceInfoResponseOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfoResponse) *string { return v.JvmOptions }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o JarUploadedUserSourceInfoResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfoResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the Jar file
func (o JarUploadedUserSourceInfoResponseOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfoResponse) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Jar'.
func (o JarUploadedUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o JarUploadedUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JarUploadedUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type JarUploadedUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (JarUploadedUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JarUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o JarUploadedUserSourceInfoResponsePtrOutput) ToJarUploadedUserSourceInfoResponsePtrOutput() JarUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o JarUploadedUserSourceInfoResponsePtrOutput) ToJarUploadedUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) JarUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o JarUploadedUserSourceInfoResponsePtrOutput) Elem() JarUploadedUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfoResponse) JarUploadedUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret JarUploadedUserSourceInfoResponse
		return ret
	}).(JarUploadedUserSourceInfoResponseOutput)
}

// JVM parameter
func (o JarUploadedUserSourceInfoResponsePtrOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o JarUploadedUserSourceInfoResponsePtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the Jar file
func (o JarUploadedUserSourceInfoResponsePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Jar'.
func (o JarUploadedUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o JarUploadedUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties of certificate imported from key vault.
type KeyVaultCertificateProperties struct {
	// Indicates whether to automatically synchronize certificate from key vault or not.
	AutoSync *string `pulumi:"autoSync"`
	// The certificate version of key vault.
	CertVersion *string `pulumi:"certVersion"`
	// Optional. If set to true, it will not import private key from key vault.
	ExcludePrivateKey *bool `pulumi:"excludePrivateKey"`
	// The certificate name of key vault.
	KeyVaultCertName string `pulumi:"keyVaultCertName"`
	// The type of the certificate source.
	// Expected value is 'KeyVaultCertificate'.
	Type string `pulumi:"type"`
	// The vault uri of user key vault.
	VaultUri string `pulumi:"vaultUri"`
}

// Defaults sets the appropriate defaults for KeyVaultCertificateProperties
func (val *KeyVaultCertificateProperties) Defaults() *KeyVaultCertificateProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoSync == nil {
		autoSync_ := "Disabled"
		tmp.AutoSync = &autoSync_
	}
	if tmp.ExcludePrivateKey == nil {
		excludePrivateKey_ := false
		tmp.ExcludePrivateKey = &excludePrivateKey_
	}
	return &tmp
}

// KeyVaultCertificatePropertiesInput is an input type that accepts KeyVaultCertificatePropertiesArgs and KeyVaultCertificatePropertiesOutput values.
// You can construct a concrete instance of `KeyVaultCertificatePropertiesInput` via:
//
//	KeyVaultCertificatePropertiesArgs{...}
type KeyVaultCertificatePropertiesInput interface {
	pulumi.Input

	ToKeyVaultCertificatePropertiesOutput() KeyVaultCertificatePropertiesOutput
	ToKeyVaultCertificatePropertiesOutputWithContext(context.Context) KeyVaultCertificatePropertiesOutput
}

// Properties of certificate imported from key vault.
type KeyVaultCertificatePropertiesArgs struct {
	// Indicates whether to automatically synchronize certificate from key vault or not.
	AutoSync pulumi.StringPtrInput `pulumi:"autoSync"`
	// The certificate version of key vault.
	CertVersion pulumi.StringPtrInput `pulumi:"certVersion"`
	// Optional. If set to true, it will not import private key from key vault.
	ExcludePrivateKey pulumi.BoolPtrInput `pulumi:"excludePrivateKey"`
	// The certificate name of key vault.
	KeyVaultCertName pulumi.StringInput `pulumi:"keyVaultCertName"`
	// The type of the certificate source.
	// Expected value is 'KeyVaultCertificate'.
	Type pulumi.StringInput `pulumi:"type"`
	// The vault uri of user key vault.
	VaultUri pulumi.StringInput `pulumi:"vaultUri"`
}

// Defaults sets the appropriate defaults for KeyVaultCertificatePropertiesArgs
func (val *KeyVaultCertificatePropertiesArgs) Defaults() *KeyVaultCertificatePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoSync == nil {
		tmp.AutoSync = pulumi.StringPtr("Disabled")
	}
	if tmp.ExcludePrivateKey == nil {
		tmp.ExcludePrivateKey = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (KeyVaultCertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificateProperties)(nil)).Elem()
}

func (i KeyVaultCertificatePropertiesArgs) ToKeyVaultCertificatePropertiesOutput() KeyVaultCertificatePropertiesOutput {
	return i.ToKeyVaultCertificatePropertiesOutputWithContext(context.Background())
}

func (i KeyVaultCertificatePropertiesArgs) ToKeyVaultCertificatePropertiesOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCertificatePropertiesOutput)
}

func (i KeyVaultCertificatePropertiesArgs) ToKeyVaultCertificatePropertiesPtrOutput() KeyVaultCertificatePropertiesPtrOutput {
	return i.ToKeyVaultCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultCertificatePropertiesArgs) ToKeyVaultCertificatePropertiesPtrOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCertificatePropertiesOutput).ToKeyVaultCertificatePropertiesPtrOutputWithContext(ctx)
}

// KeyVaultCertificatePropertiesPtrInput is an input type that accepts KeyVaultCertificatePropertiesArgs, KeyVaultCertificatePropertiesPtr and KeyVaultCertificatePropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultCertificatePropertiesPtrInput` via:
//
//	        KeyVaultCertificatePropertiesArgs{...}
//
//	or:
//
//	        nil
type KeyVaultCertificatePropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultCertificatePropertiesPtrOutput() KeyVaultCertificatePropertiesPtrOutput
	ToKeyVaultCertificatePropertiesPtrOutputWithContext(context.Context) KeyVaultCertificatePropertiesPtrOutput
}

type keyVaultCertificatePropertiesPtrType KeyVaultCertificatePropertiesArgs

func KeyVaultCertificatePropertiesPtr(v *KeyVaultCertificatePropertiesArgs) KeyVaultCertificatePropertiesPtrInput {
	return (*keyVaultCertificatePropertiesPtrType)(v)
}

func (*keyVaultCertificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCertificateProperties)(nil)).Elem()
}

func (i *keyVaultCertificatePropertiesPtrType) ToKeyVaultCertificatePropertiesPtrOutput() KeyVaultCertificatePropertiesPtrOutput {
	return i.ToKeyVaultCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultCertificatePropertiesPtrType) ToKeyVaultCertificatePropertiesPtrOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCertificatePropertiesPtrOutput)
}

// Properties of certificate imported from key vault.
type KeyVaultCertificatePropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificateProperties)(nil)).Elem()
}

func (o KeyVaultCertificatePropertiesOutput) ToKeyVaultCertificatePropertiesOutput() KeyVaultCertificatePropertiesOutput {
	return o
}

func (o KeyVaultCertificatePropertiesOutput) ToKeyVaultCertificatePropertiesOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesOutput {
	return o
}

func (o KeyVaultCertificatePropertiesOutput) ToKeyVaultCertificatePropertiesPtrOutput() KeyVaultCertificatePropertiesPtrOutput {
	return o.ToKeyVaultCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultCertificatePropertiesOutput) ToKeyVaultCertificatePropertiesPtrOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultCertificateProperties) *KeyVaultCertificateProperties {
		return &v
	}).(KeyVaultCertificatePropertiesPtrOutput)
}

// Indicates whether to automatically synchronize certificate from key vault or not.
func (o KeyVaultCertificatePropertiesOutput) AutoSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateProperties) *string { return v.AutoSync }).(pulumi.StringPtrOutput)
}

// The certificate version of key vault.
func (o KeyVaultCertificatePropertiesOutput) CertVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateProperties) *string { return v.CertVersion }).(pulumi.StringPtrOutput)
}

// Optional. If set to true, it will not import private key from key vault.
func (o KeyVaultCertificatePropertiesOutput) ExcludePrivateKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateProperties) *bool { return v.ExcludePrivateKey }).(pulumi.BoolPtrOutput)
}

// The certificate name of key vault.
func (o KeyVaultCertificatePropertiesOutput) KeyVaultCertName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateProperties) string { return v.KeyVaultCertName }).(pulumi.StringOutput)
}

// The type of the certificate source.
// Expected value is 'KeyVaultCertificate'.
func (o KeyVaultCertificatePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The vault uri of user key vault.
func (o KeyVaultCertificatePropertiesOutput) VaultUri() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateProperties) string { return v.VaultUri }).(pulumi.StringOutput)
}

type KeyVaultCertificatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCertificateProperties)(nil)).Elem()
}

func (o KeyVaultCertificatePropertiesPtrOutput) ToKeyVaultCertificatePropertiesPtrOutput() KeyVaultCertificatePropertiesPtrOutput {
	return o
}

func (o KeyVaultCertificatePropertiesPtrOutput) ToKeyVaultCertificatePropertiesPtrOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesPtrOutput {
	return o
}

func (o KeyVaultCertificatePropertiesPtrOutput) Elem() KeyVaultCertificatePropertiesOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) KeyVaultCertificateProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultCertificateProperties
		return ret
	}).(KeyVaultCertificatePropertiesOutput)
}

// Indicates whether to automatically synchronize certificate from key vault or not.
func (o KeyVaultCertificatePropertiesPtrOutput) AutoSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.AutoSync
	}).(pulumi.StringPtrOutput)
}

// The certificate version of key vault.
func (o KeyVaultCertificatePropertiesPtrOutput) CertVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. If set to true, it will not import private key from key vault.
func (o KeyVaultCertificatePropertiesPtrOutput) ExcludePrivateKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludePrivateKey
	}).(pulumi.BoolPtrOutput)
}

// The certificate name of key vault.
func (o KeyVaultCertificatePropertiesPtrOutput) KeyVaultCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultCertName
	}).(pulumi.StringPtrOutput)
}

// The type of the certificate source.
// Expected value is 'KeyVaultCertificate'.
func (o KeyVaultCertificatePropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The vault uri of user key vault.
func (o KeyVaultCertificatePropertiesPtrOutput) VaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VaultUri
	}).(pulumi.StringPtrOutput)
}

// Properties of certificate imported from key vault.
type KeyVaultCertificatePropertiesResponse struct {
	// The activate date of certificate.
	ActivateDate string `pulumi:"activateDate"`
	// Indicates whether to automatically synchronize certificate from key vault or not.
	AutoSync *string `pulumi:"autoSync"`
	// The certificate version of key vault.
	CertVersion *string `pulumi:"certVersion"`
	// The domain list of certificate.
	DnsNames []string `pulumi:"dnsNames"`
	// Optional. If set to true, it will not import private key from key vault.
	ExcludePrivateKey *bool `pulumi:"excludePrivateKey"`
	// The expiration date of certificate.
	ExpirationDate string `pulumi:"expirationDate"`
	// The issue date of certificate.
	IssuedDate string `pulumi:"issuedDate"`
	// The issuer of certificate.
	Issuer string `pulumi:"issuer"`
	// The certificate name of key vault.
	KeyVaultCertName string `pulumi:"keyVaultCertName"`
	// Provisioning state of the Certificate
	ProvisioningState string `pulumi:"provisioningState"`
	// The subject name of certificate.
	SubjectName string `pulumi:"subjectName"`
	// The thumbprint of certificate.
	Thumbprint string `pulumi:"thumbprint"`
	// The type of the certificate source.
	// Expected value is 'KeyVaultCertificate'.
	Type string `pulumi:"type"`
	// The vault uri of user key vault.
	VaultUri string `pulumi:"vaultUri"`
}

// Defaults sets the appropriate defaults for KeyVaultCertificatePropertiesResponse
func (val *KeyVaultCertificatePropertiesResponse) Defaults() *KeyVaultCertificatePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoSync == nil {
		autoSync_ := "Disabled"
		tmp.AutoSync = &autoSync_
	}
	if tmp.ExcludePrivateKey == nil {
		excludePrivateKey_ := false
		tmp.ExcludePrivateKey = &excludePrivateKey_
	}
	return &tmp
}

// Properties of certificate imported from key vault.
type KeyVaultCertificatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificatePropertiesResponse)(nil)).Elem()
}

func (o KeyVaultCertificatePropertiesResponseOutput) ToKeyVaultCertificatePropertiesResponseOutput() KeyVaultCertificatePropertiesResponseOutput {
	return o
}

func (o KeyVaultCertificatePropertiesResponseOutput) ToKeyVaultCertificatePropertiesResponseOutputWithContext(ctx context.Context) KeyVaultCertificatePropertiesResponseOutput {
	return o
}

// The activate date of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) ActivateDate() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.ActivateDate }).(pulumi.StringOutput)
}

// Indicates whether to automatically synchronize certificate from key vault or not.
func (o KeyVaultCertificatePropertiesResponseOutput) AutoSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) *string { return v.AutoSync }).(pulumi.StringPtrOutput)
}

// The certificate version of key vault.
func (o KeyVaultCertificatePropertiesResponseOutput) CertVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) *string { return v.CertVersion }).(pulumi.StringPtrOutput)
}

// The domain list of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// Optional. If set to true, it will not import private key from key vault.
func (o KeyVaultCertificatePropertiesResponseOutput) ExcludePrivateKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) *bool { return v.ExcludePrivateKey }).(pulumi.BoolPtrOutput)
}

// The expiration date of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The issue date of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) IssuedDate() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.IssuedDate }).(pulumi.StringOutput)
}

// The issuer of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.Issuer }).(pulumi.StringOutput)
}

// The certificate name of key vault.
func (o KeyVaultCertificatePropertiesResponseOutput) KeyVaultCertName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.KeyVaultCertName }).(pulumi.StringOutput)
}

// Provisioning state of the Certificate
func (o KeyVaultCertificatePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The subject name of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.SubjectName }).(pulumi.StringOutput)
}

// The thumbprint of certificate.
func (o KeyVaultCertificatePropertiesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The type of the certificate source.
// Expected value is 'KeyVaultCertificate'.
func (o KeyVaultCertificatePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The vault uri of user key vault.
func (o KeyVaultCertificatePropertiesResponseOutput) VaultUri() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificatePropertiesResponse) string { return v.VaultUri }).(pulumi.StringOutput)
}

// Loaded certificate payload
type LoadedCertificate struct {
	// Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.
	LoadTrustStore *bool `pulumi:"loadTrustStore"`
	// Resource Id of loaded certificate
	ResourceId string `pulumi:"resourceId"`
}

// Defaults sets the appropriate defaults for LoadedCertificate
func (val *LoadedCertificate) Defaults() *LoadedCertificate {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LoadTrustStore == nil {
		loadTrustStore_ := false
		tmp.LoadTrustStore = &loadTrustStore_
	}
	return &tmp
}

// LoadedCertificateInput is an input type that accepts LoadedCertificateArgs and LoadedCertificateOutput values.
// You can construct a concrete instance of `LoadedCertificateInput` via:
//
//	LoadedCertificateArgs{...}
type LoadedCertificateInput interface {
	pulumi.Input

	ToLoadedCertificateOutput() LoadedCertificateOutput
	ToLoadedCertificateOutputWithContext(context.Context) LoadedCertificateOutput
}

// Loaded certificate payload
type LoadedCertificateArgs struct {
	// Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.
	LoadTrustStore pulumi.BoolPtrInput `pulumi:"loadTrustStore"`
	// Resource Id of loaded certificate
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

// Defaults sets the appropriate defaults for LoadedCertificateArgs
func (val *LoadedCertificateArgs) Defaults() *LoadedCertificateArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LoadTrustStore == nil {
		tmp.LoadTrustStore = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (LoadedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadedCertificate)(nil)).Elem()
}

func (i LoadedCertificateArgs) ToLoadedCertificateOutput() LoadedCertificateOutput {
	return i.ToLoadedCertificateOutputWithContext(context.Background())
}

func (i LoadedCertificateArgs) ToLoadedCertificateOutputWithContext(ctx context.Context) LoadedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadedCertificateOutput)
}

// LoadedCertificateArrayInput is an input type that accepts LoadedCertificateArray and LoadedCertificateArrayOutput values.
// You can construct a concrete instance of `LoadedCertificateArrayInput` via:
//
//	LoadedCertificateArray{ LoadedCertificateArgs{...} }
type LoadedCertificateArrayInput interface {
	pulumi.Input

	ToLoadedCertificateArrayOutput() LoadedCertificateArrayOutput
	ToLoadedCertificateArrayOutputWithContext(context.Context) LoadedCertificateArrayOutput
}

type LoadedCertificateArray []LoadedCertificateInput

func (LoadedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadedCertificate)(nil)).Elem()
}

func (i LoadedCertificateArray) ToLoadedCertificateArrayOutput() LoadedCertificateArrayOutput {
	return i.ToLoadedCertificateArrayOutputWithContext(context.Background())
}

func (i LoadedCertificateArray) ToLoadedCertificateArrayOutputWithContext(ctx context.Context) LoadedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadedCertificateArrayOutput)
}

// Loaded certificate payload
type LoadedCertificateOutput struct{ *pulumi.OutputState }

func (LoadedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadedCertificate)(nil)).Elem()
}

func (o LoadedCertificateOutput) ToLoadedCertificateOutput() LoadedCertificateOutput {
	return o
}

func (o LoadedCertificateOutput) ToLoadedCertificateOutputWithContext(ctx context.Context) LoadedCertificateOutput {
	return o
}

// Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.
func (o LoadedCertificateOutput) LoadTrustStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadedCertificate) *bool { return v.LoadTrustStore }).(pulumi.BoolPtrOutput)
}

// Resource Id of loaded certificate
func (o LoadedCertificateOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadedCertificate) string { return v.ResourceId }).(pulumi.StringOutput)
}

type LoadedCertificateArrayOutput struct{ *pulumi.OutputState }

func (LoadedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadedCertificate)(nil)).Elem()
}

func (o LoadedCertificateArrayOutput) ToLoadedCertificateArrayOutput() LoadedCertificateArrayOutput {
	return o
}

func (o LoadedCertificateArrayOutput) ToLoadedCertificateArrayOutputWithContext(ctx context.Context) LoadedCertificateArrayOutput {
	return o
}

func (o LoadedCertificateArrayOutput) Index(i pulumi.IntInput) LoadedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadedCertificate {
		return vs[0].([]LoadedCertificate)[vs[1].(int)]
	}).(LoadedCertificateOutput)
}

// Loaded certificate payload
type LoadedCertificateResponse struct {
	// Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.
	LoadTrustStore *bool `pulumi:"loadTrustStore"`
	// Resource Id of loaded certificate
	ResourceId string `pulumi:"resourceId"`
}

// Defaults sets the appropriate defaults for LoadedCertificateResponse
func (val *LoadedCertificateResponse) Defaults() *LoadedCertificateResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LoadTrustStore == nil {
		loadTrustStore_ := false
		tmp.LoadTrustStore = &loadTrustStore_
	}
	return &tmp
}

// Loaded certificate payload
type LoadedCertificateResponseOutput struct{ *pulumi.OutputState }

func (LoadedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadedCertificateResponse)(nil)).Elem()
}

func (o LoadedCertificateResponseOutput) ToLoadedCertificateResponseOutput() LoadedCertificateResponseOutput {
	return o
}

func (o LoadedCertificateResponseOutput) ToLoadedCertificateResponseOutputWithContext(ctx context.Context) LoadedCertificateResponseOutput {
	return o
}

// Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.
func (o LoadedCertificateResponseOutput) LoadTrustStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadedCertificateResponse) *bool { return v.LoadTrustStore }).(pulumi.BoolPtrOutput)
}

// Resource Id of loaded certificate
func (o LoadedCertificateResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadedCertificateResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type LoadedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadedCertificateResponse)(nil)).Elem()
}

func (o LoadedCertificateResponseArrayOutput) ToLoadedCertificateResponseArrayOutput() LoadedCertificateResponseArrayOutput {
	return o
}

func (o LoadedCertificateResponseArrayOutput) ToLoadedCertificateResponseArrayOutputWithContext(ctx context.Context) LoadedCertificateResponseArrayOutput {
	return o
}

func (o LoadedCertificateResponseArrayOutput) Index(i pulumi.IntInput) LoadedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadedCertificateResponse {
		return vs[0].([]LoadedCertificateResponse)[vs[1].(int)]
	}).(LoadedCertificateResponseOutput)
}

// Managed identity properties retrieved from ARM request headers.
type ManagedIdentityProperties struct {
	// Principal Id of system-assigned managed identity.
	PrincipalId *string `pulumi:"principalId"`
	// Tenant Id of system-assigned managed identity.
	TenantId *string `pulumi:"tenantId"`
	// Type of the managed identity
	Type *string `pulumi:"type"`
	// Properties of user-assigned managed identities
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedIdentityPropertiesInput is an input type that accepts ManagedIdentityPropertiesArgs and ManagedIdentityPropertiesOutput values.
// You can construct a concrete instance of `ManagedIdentityPropertiesInput` via:
//
//	ManagedIdentityPropertiesArgs{...}
type ManagedIdentityPropertiesInput interface {
	pulumi.Input

	ToManagedIdentityPropertiesOutput() ManagedIdentityPropertiesOutput
	ToManagedIdentityPropertiesOutputWithContext(context.Context) ManagedIdentityPropertiesOutput
}

// Managed identity properties retrieved from ARM request headers.
type ManagedIdentityPropertiesArgs struct {
	// Principal Id of system-assigned managed identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Tenant Id of system-assigned managed identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Type of the managed identity
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Properties of user-assigned managed identities
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityProperties)(nil)).Elem()
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesOutput() ManagedIdentityPropertiesOutput {
	return i.ToManagedIdentityPropertiesOutputWithContext(context.Background())
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesOutputWithContext(ctx context.Context) ManagedIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPropertiesOutput)
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return i.ToManagedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPropertiesOutput).ToManagedIdentityPropertiesPtrOutputWithContext(ctx)
}

// ManagedIdentityPropertiesPtrInput is an input type that accepts ManagedIdentityPropertiesArgs, ManagedIdentityPropertiesPtr and ManagedIdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedIdentityPropertiesPtrInput` via:
//
//	        ManagedIdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityPropertiesPtrInput interface {
	pulumi.Input

	ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput
	ToManagedIdentityPropertiesPtrOutputWithContext(context.Context) ManagedIdentityPropertiesPtrOutput
}

type managedIdentityPropertiesPtrType ManagedIdentityPropertiesArgs

func ManagedIdentityPropertiesPtr(v *ManagedIdentityPropertiesArgs) ManagedIdentityPropertiesPtrInput {
	return (*managedIdentityPropertiesPtrType)(v)
}

func (*managedIdentityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityProperties)(nil)).Elem()
}

func (i *managedIdentityPropertiesPtrType) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return i.ToManagedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedIdentityPropertiesPtrType) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPropertiesPtrOutput)
}

// Managed identity properties retrieved from ARM request headers.
type ManagedIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityProperties)(nil)).Elem()
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesOutput() ManagedIdentityPropertiesOutput {
	return o
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesOutputWithContext(ctx context.Context) ManagedIdentityPropertiesOutput {
	return o
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return o.ToManagedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityProperties) *ManagedIdentityProperties {
		return &v
	}).(ManagedIdentityPropertiesPtrOutput)
}

// Principal Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Tenant Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Type of the managed identity
func (o ManagedIdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Properties of user-assigned managed identities
func (o ManagedIdentityPropertiesOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedIdentityProperties) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedIdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityProperties)(nil)).Elem()
}

func (o ManagedIdentityPropertiesPtrOutput) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return o
}

func (o ManagedIdentityPropertiesPtrOutput) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return o
}

func (o ManagedIdentityPropertiesPtrOutput) Elem() ManagedIdentityPropertiesOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) ManagedIdentityProperties {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityProperties
		return ret
	}).(ManagedIdentityPropertiesOutput)
}

// Principal Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of the managed identity
func (o ManagedIdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of user-assigned managed identities
func (o ManagedIdentityPropertiesPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed identity properties retrieved from ARM request headers.
type ManagedIdentityPropertiesResponse struct {
	// Principal Id of system-assigned managed identity.
	PrincipalId *string `pulumi:"principalId"`
	// Tenant Id of system-assigned managed identity.
	TenantId *string `pulumi:"tenantId"`
	// Type of the managed identity
	Type *string `pulumi:"type"`
	// Properties of user-assigned managed identities
	UserAssignedIdentities map[string]UserAssignedManagedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed identity properties retrieved from ARM request headers.
type ManagedIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityPropertiesResponse)(nil)).Elem()
}

func (o ManagedIdentityPropertiesResponseOutput) ToManagedIdentityPropertiesResponseOutput() ManagedIdentityPropertiesResponseOutput {
	return o
}

func (o ManagedIdentityPropertiesResponseOutput) ToManagedIdentityPropertiesResponseOutputWithContext(ctx context.Context) ManagedIdentityPropertiesResponseOutput {
	return o
}

// Principal Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Tenant Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Type of the managed identity
func (o ManagedIdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Properties of user-assigned managed identities
func (o ManagedIdentityPropertiesResponseOutput) UserAssignedIdentities() UserAssignedManagedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedIdentityPropertiesResponse) map[string]UserAssignedManagedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedManagedIdentityResponseMapOutput)
}

type ManagedIdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityPropertiesResponse)(nil)).Elem()
}

func (o ManagedIdentityPropertiesResponsePtrOutput) ToManagedIdentityPropertiesResponsePtrOutput() ManagedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o ManagedIdentityPropertiesResponsePtrOutput) ToManagedIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o ManagedIdentityPropertiesResponsePtrOutput) Elem() ManagedIdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) ManagedIdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityPropertiesResponse
		return ret
	}).(ManagedIdentityPropertiesResponseOutput)
}

// Principal Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant Id of system-assigned managed identity.
func (o ManagedIdentityPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of the managed identity
func (o ManagedIdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of user-assigned managed identities
func (o ManagedIdentityPropertiesResponsePtrOutput) UserAssignedIdentities() UserAssignedManagedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) map[string]UserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedManagedIdentityResponseMapOutput)
}

// Purchasing 3rd Party product for one Azure Spring Apps instance
type MarketplaceResource struct {
	// The plan id of the 3rd Party Artifact that is being procured.
	Plan *string `pulumi:"plan"`
	// The 3rd Party artifact that is being procured.
	Product *string `pulumi:"product"`
	// The publisher id of the 3rd Party Artifact that is being bought.
	Publisher *string `pulumi:"publisher"`
}

// MarketplaceResourceInput is an input type that accepts MarketplaceResourceArgs and MarketplaceResourceOutput values.
// You can construct a concrete instance of `MarketplaceResourceInput` via:
//
//	MarketplaceResourceArgs{...}
type MarketplaceResourceInput interface {
	pulumi.Input

	ToMarketplaceResourceOutput() MarketplaceResourceOutput
	ToMarketplaceResourceOutputWithContext(context.Context) MarketplaceResourceOutput
}

// Purchasing 3rd Party product for one Azure Spring Apps instance
type MarketplaceResourceArgs struct {
	// The plan id of the 3rd Party Artifact that is being procured.
	Plan pulumi.StringPtrInput `pulumi:"plan"`
	// The 3rd Party artifact that is being procured.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The publisher id of the 3rd Party Artifact that is being bought.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (MarketplaceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceResource)(nil)).Elem()
}

func (i MarketplaceResourceArgs) ToMarketplaceResourceOutput() MarketplaceResourceOutput {
	return i.ToMarketplaceResourceOutputWithContext(context.Background())
}

func (i MarketplaceResourceArgs) ToMarketplaceResourceOutputWithContext(ctx context.Context) MarketplaceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceResourceOutput)
}

func (i MarketplaceResourceArgs) ToMarketplaceResourcePtrOutput() MarketplaceResourcePtrOutput {
	return i.ToMarketplaceResourcePtrOutputWithContext(context.Background())
}

func (i MarketplaceResourceArgs) ToMarketplaceResourcePtrOutputWithContext(ctx context.Context) MarketplaceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceResourceOutput).ToMarketplaceResourcePtrOutputWithContext(ctx)
}

// MarketplaceResourcePtrInput is an input type that accepts MarketplaceResourceArgs, MarketplaceResourcePtr and MarketplaceResourcePtrOutput values.
// You can construct a concrete instance of `MarketplaceResourcePtrInput` via:
//
//	        MarketplaceResourceArgs{...}
//
//	or:
//
//	        nil
type MarketplaceResourcePtrInput interface {
	pulumi.Input

	ToMarketplaceResourcePtrOutput() MarketplaceResourcePtrOutput
	ToMarketplaceResourcePtrOutputWithContext(context.Context) MarketplaceResourcePtrOutput
}

type marketplaceResourcePtrType MarketplaceResourceArgs

func MarketplaceResourcePtr(v *MarketplaceResourceArgs) MarketplaceResourcePtrInput {
	return (*marketplaceResourcePtrType)(v)
}

func (*marketplaceResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceResource)(nil)).Elem()
}

func (i *marketplaceResourcePtrType) ToMarketplaceResourcePtrOutput() MarketplaceResourcePtrOutput {
	return i.ToMarketplaceResourcePtrOutputWithContext(context.Background())
}

func (i *marketplaceResourcePtrType) ToMarketplaceResourcePtrOutputWithContext(ctx context.Context) MarketplaceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketplaceResourcePtrOutput)
}

// Purchasing 3rd Party product for one Azure Spring Apps instance
type MarketplaceResourceOutput struct{ *pulumi.OutputState }

func (MarketplaceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceResource)(nil)).Elem()
}

func (o MarketplaceResourceOutput) ToMarketplaceResourceOutput() MarketplaceResourceOutput {
	return o
}

func (o MarketplaceResourceOutput) ToMarketplaceResourceOutputWithContext(ctx context.Context) MarketplaceResourceOutput {
	return o
}

func (o MarketplaceResourceOutput) ToMarketplaceResourcePtrOutput() MarketplaceResourcePtrOutput {
	return o.ToMarketplaceResourcePtrOutputWithContext(context.Background())
}

func (o MarketplaceResourceOutput) ToMarketplaceResourcePtrOutputWithContext(ctx context.Context) MarketplaceResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MarketplaceResource) *MarketplaceResource {
		return &v
	}).(MarketplaceResourcePtrOutput)
}

// The plan id of the 3rd Party Artifact that is being procured.
func (o MarketplaceResourceOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceResource) *string { return v.Plan }).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured.
func (o MarketplaceResourceOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceResource) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The publisher id of the 3rd Party Artifact that is being bought.
func (o MarketplaceResourceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceResource) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type MarketplaceResourcePtrOutput struct{ *pulumi.OutputState }

func (MarketplaceResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceResource)(nil)).Elem()
}

func (o MarketplaceResourcePtrOutput) ToMarketplaceResourcePtrOutput() MarketplaceResourcePtrOutput {
	return o
}

func (o MarketplaceResourcePtrOutput) ToMarketplaceResourcePtrOutputWithContext(ctx context.Context) MarketplaceResourcePtrOutput {
	return o
}

func (o MarketplaceResourcePtrOutput) Elem() MarketplaceResourceOutput {
	return o.ApplyT(func(v *MarketplaceResource) MarketplaceResource {
		if v != nil {
			return *v
		}
		var ret MarketplaceResource
		return ret
	}).(MarketplaceResourceOutput)
}

// The plan id of the 3rd Party Artifact that is being procured.
func (o MarketplaceResourcePtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceResource) *string {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured.
func (o MarketplaceResourcePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceResource) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The publisher id of the 3rd Party Artifact that is being bought.
func (o MarketplaceResourcePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceResource) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Purchasing 3rd Party product for one Azure Spring Apps instance
type MarketplaceResourceResponse struct {
	// The plan id of the 3rd Party Artifact that is being procured.
	Plan *string `pulumi:"plan"`
	// The 3rd Party artifact that is being procured.
	Product *string `pulumi:"product"`
	// The publisher id of the 3rd Party Artifact that is being bought.
	Publisher *string `pulumi:"publisher"`
}

// Purchasing 3rd Party product for one Azure Spring Apps instance
type MarketplaceResourceResponseOutput struct{ *pulumi.OutputState }

func (MarketplaceResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceResourceResponse)(nil)).Elem()
}

func (o MarketplaceResourceResponseOutput) ToMarketplaceResourceResponseOutput() MarketplaceResourceResponseOutput {
	return o
}

func (o MarketplaceResourceResponseOutput) ToMarketplaceResourceResponseOutputWithContext(ctx context.Context) MarketplaceResourceResponseOutput {
	return o
}

// The plan id of the 3rd Party Artifact that is being procured.
func (o MarketplaceResourceResponseOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceResourceResponse) *string { return v.Plan }).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured.
func (o MarketplaceResourceResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceResourceResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The publisher id of the 3rd Party Artifact that is being bought.
func (o MarketplaceResourceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceResourceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type MarketplaceResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (MarketplaceResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceResourceResponse)(nil)).Elem()
}

func (o MarketplaceResourceResponsePtrOutput) ToMarketplaceResourceResponsePtrOutput() MarketplaceResourceResponsePtrOutput {
	return o
}

func (o MarketplaceResourceResponsePtrOutput) ToMarketplaceResourceResponsePtrOutputWithContext(ctx context.Context) MarketplaceResourceResponsePtrOutput {
	return o
}

func (o MarketplaceResourceResponsePtrOutput) Elem() MarketplaceResourceResponseOutput {
	return o.ApplyT(func(v *MarketplaceResourceResponse) MarketplaceResourceResponse {
		if v != nil {
			return *v
		}
		var ret MarketplaceResourceResponse
		return ret
	}).(MarketplaceResourceResponseOutput)
}

// The plan id of the 3rd Party Artifact that is being procured.
func (o MarketplaceResourceResponsePtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured.
func (o MarketplaceResourceResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The publisher id of the 3rd Party Artifact that is being bought.
func (o MarketplaceResourceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Monitoring Setting properties payload
type MonitoringSettingProperties struct {
	// Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings
	AppInsightsInstrumentationKey *string `pulumi:"appInsightsInstrumentationKey"`
	// Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]
	AppInsightsSamplingRate *float64 `pulumi:"appInsightsSamplingRate"`
	// Error when apply Monitoring Setting changes.
	Error *Error `pulumi:"error"`
	// Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not
	TraceEnabled *bool `pulumi:"traceEnabled"`
}

// MonitoringSettingPropertiesInput is an input type that accepts MonitoringSettingPropertiesArgs and MonitoringSettingPropertiesOutput values.
// You can construct a concrete instance of `MonitoringSettingPropertiesInput` via:
//
//	MonitoringSettingPropertiesArgs{...}
type MonitoringSettingPropertiesInput interface {
	pulumi.Input

	ToMonitoringSettingPropertiesOutput() MonitoringSettingPropertiesOutput
	ToMonitoringSettingPropertiesOutputWithContext(context.Context) MonitoringSettingPropertiesOutput
}

// Monitoring Setting properties payload
type MonitoringSettingPropertiesArgs struct {
	// Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings
	AppInsightsInstrumentationKey pulumi.StringPtrInput `pulumi:"appInsightsInstrumentationKey"`
	// Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]
	AppInsightsSamplingRate pulumi.Float64PtrInput `pulumi:"appInsightsSamplingRate"`
	// Error when apply Monitoring Setting changes.
	Error ErrorPtrInput `pulumi:"error"`
	// Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not
	TraceEnabled pulumi.BoolPtrInput `pulumi:"traceEnabled"`
}

func (MonitoringSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettingProperties)(nil)).Elem()
}

func (i MonitoringSettingPropertiesArgs) ToMonitoringSettingPropertiesOutput() MonitoringSettingPropertiesOutput {
	return i.ToMonitoringSettingPropertiesOutputWithContext(context.Background())
}

func (i MonitoringSettingPropertiesArgs) ToMonitoringSettingPropertiesOutputWithContext(ctx context.Context) MonitoringSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingPropertiesOutput)
}

func (i MonitoringSettingPropertiesArgs) ToMonitoringSettingPropertiesPtrOutput() MonitoringSettingPropertiesPtrOutput {
	return i.ToMonitoringSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i MonitoringSettingPropertiesArgs) ToMonitoringSettingPropertiesPtrOutputWithContext(ctx context.Context) MonitoringSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingPropertiesOutput).ToMonitoringSettingPropertiesPtrOutputWithContext(ctx)
}

// MonitoringSettingPropertiesPtrInput is an input type that accepts MonitoringSettingPropertiesArgs, MonitoringSettingPropertiesPtr and MonitoringSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `MonitoringSettingPropertiesPtrInput` via:
//
//	        MonitoringSettingPropertiesArgs{...}
//
//	or:
//
//	        nil
type MonitoringSettingPropertiesPtrInput interface {
	pulumi.Input

	ToMonitoringSettingPropertiesPtrOutput() MonitoringSettingPropertiesPtrOutput
	ToMonitoringSettingPropertiesPtrOutputWithContext(context.Context) MonitoringSettingPropertiesPtrOutput
}

type monitoringSettingPropertiesPtrType MonitoringSettingPropertiesArgs

func MonitoringSettingPropertiesPtr(v *MonitoringSettingPropertiesArgs) MonitoringSettingPropertiesPtrInput {
	return (*monitoringSettingPropertiesPtrType)(v)
}

func (*monitoringSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettingProperties)(nil)).Elem()
}

func (i *monitoringSettingPropertiesPtrType) ToMonitoringSettingPropertiesPtrOutput() MonitoringSettingPropertiesPtrOutput {
	return i.ToMonitoringSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *monitoringSettingPropertiesPtrType) ToMonitoringSettingPropertiesPtrOutputWithContext(ctx context.Context) MonitoringSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingPropertiesPtrOutput)
}

// Monitoring Setting properties payload
type MonitoringSettingPropertiesOutput struct{ *pulumi.OutputState }

func (MonitoringSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettingProperties)(nil)).Elem()
}

func (o MonitoringSettingPropertiesOutput) ToMonitoringSettingPropertiesOutput() MonitoringSettingPropertiesOutput {
	return o
}

func (o MonitoringSettingPropertiesOutput) ToMonitoringSettingPropertiesOutputWithContext(ctx context.Context) MonitoringSettingPropertiesOutput {
	return o
}

func (o MonitoringSettingPropertiesOutput) ToMonitoringSettingPropertiesPtrOutput() MonitoringSettingPropertiesPtrOutput {
	return o.ToMonitoringSettingPropertiesPtrOutputWithContext(context.Background())
}

func (o MonitoringSettingPropertiesOutput) ToMonitoringSettingPropertiesPtrOutputWithContext(ctx context.Context) MonitoringSettingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringSettingProperties) *MonitoringSettingProperties {
		return &v
	}).(MonitoringSettingPropertiesPtrOutput)
}

// Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings
func (o MonitoringSettingPropertiesOutput) AppInsightsInstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringSettingProperties) *string { return v.AppInsightsInstrumentationKey }).(pulumi.StringPtrOutput)
}

// Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]
func (o MonitoringSettingPropertiesOutput) AppInsightsSamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitoringSettingProperties) *float64 { return v.AppInsightsSamplingRate }).(pulumi.Float64PtrOutput)
}

// Error when apply Monitoring Setting changes.
func (o MonitoringSettingPropertiesOutput) Error() ErrorPtrOutput {
	return o.ApplyT(func(v MonitoringSettingProperties) *Error { return v.Error }).(ErrorPtrOutput)
}

// Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not
func (o MonitoringSettingPropertiesOutput) TraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringSettingProperties) *bool { return v.TraceEnabled }).(pulumi.BoolPtrOutput)
}

type MonitoringSettingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MonitoringSettingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettingProperties)(nil)).Elem()
}

func (o MonitoringSettingPropertiesPtrOutput) ToMonitoringSettingPropertiesPtrOutput() MonitoringSettingPropertiesPtrOutput {
	return o
}

func (o MonitoringSettingPropertiesPtrOutput) ToMonitoringSettingPropertiesPtrOutputWithContext(ctx context.Context) MonitoringSettingPropertiesPtrOutput {
	return o
}

func (o MonitoringSettingPropertiesPtrOutput) Elem() MonitoringSettingPropertiesOutput {
	return o.ApplyT(func(v *MonitoringSettingProperties) MonitoringSettingProperties {
		if v != nil {
			return *v
		}
		var ret MonitoringSettingProperties
		return ret
	}).(MonitoringSettingPropertiesOutput)
}

// Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings
func (o MonitoringSettingPropertiesPtrOutput) AppInsightsInstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppInsightsInstrumentationKey
	}).(pulumi.StringPtrOutput)
}

// Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]
func (o MonitoringSettingPropertiesPtrOutput) AppInsightsSamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitoringSettingProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.AppInsightsSamplingRate
	}).(pulumi.Float64PtrOutput)
}

// Error when apply Monitoring Setting changes.
func (o MonitoringSettingPropertiesPtrOutput) Error() ErrorPtrOutput {
	return o.ApplyT(func(v *MonitoringSettingProperties) *Error {
		if v == nil {
			return nil
		}
		return v.Error
	}).(ErrorPtrOutput)
}

// Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not
func (o MonitoringSettingPropertiesPtrOutput) TraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringSettingProperties) *bool {
		if v == nil {
			return nil
		}
		return v.TraceEnabled
	}).(pulumi.BoolPtrOutput)
}

// Monitoring Setting properties payload
type MonitoringSettingPropertiesResponse struct {
	// Indicates the versions of application insight agent
	AppInsightsAgentVersions *ApplicationInsightsAgentVersionsResponse `pulumi:"appInsightsAgentVersions"`
	// Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings
	AppInsightsInstrumentationKey *string `pulumi:"appInsightsInstrumentationKey"`
	// Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]
	AppInsightsSamplingRate *float64 `pulumi:"appInsightsSamplingRate"`
	// Error when apply Monitoring Setting changes.
	Error *ErrorResponse `pulumi:"error"`
	// State of the Monitoring Setting.
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not
	TraceEnabled *bool `pulumi:"traceEnabled"`
}

// Monitoring Setting properties payload
type MonitoringSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MonitoringSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettingPropertiesResponse)(nil)).Elem()
}

func (o MonitoringSettingPropertiesResponseOutput) ToMonitoringSettingPropertiesResponseOutput() MonitoringSettingPropertiesResponseOutput {
	return o
}

func (o MonitoringSettingPropertiesResponseOutput) ToMonitoringSettingPropertiesResponseOutputWithContext(ctx context.Context) MonitoringSettingPropertiesResponseOutput {
	return o
}

// Indicates the versions of application insight agent
func (o MonitoringSettingPropertiesResponseOutput) AppInsightsAgentVersions() ApplicationInsightsAgentVersionsResponsePtrOutput {
	return o.ApplyT(func(v MonitoringSettingPropertiesResponse) *ApplicationInsightsAgentVersionsResponse {
		return v.AppInsightsAgentVersions
	}).(ApplicationInsightsAgentVersionsResponsePtrOutput)
}

// Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings
func (o MonitoringSettingPropertiesResponseOutput) AppInsightsInstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringSettingPropertiesResponse) *string { return v.AppInsightsInstrumentationKey }).(pulumi.StringPtrOutput)
}

// Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]
func (o MonitoringSettingPropertiesResponseOutput) AppInsightsSamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitoringSettingPropertiesResponse) *float64 { return v.AppInsightsSamplingRate }).(pulumi.Float64PtrOutput)
}

// Error when apply Monitoring Setting changes.
func (o MonitoringSettingPropertiesResponseOutput) Error() ErrorResponsePtrOutput {
	return o.ApplyT(func(v MonitoringSettingPropertiesResponse) *ErrorResponse { return v.Error }).(ErrorResponsePtrOutput)
}

// State of the Monitoring Setting.
func (o MonitoringSettingPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringSettingPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not
func (o MonitoringSettingPropertiesResponseOutput) TraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringSettingPropertiesResponse) *bool { return v.TraceEnabled }).(pulumi.BoolPtrOutput)
}

// Uploaded Jar binary for a deployment
type NetCoreZipUploadedUserSourceInfo struct {
	// The path to the .NET executable relative to zip root
	NetCoreMainEntryPath *string `pulumi:"netCoreMainEntryPath"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the .Net file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'NetCoreZip'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// NetCoreZipUploadedUserSourceInfoInput is an input type that accepts NetCoreZipUploadedUserSourceInfoArgs and NetCoreZipUploadedUserSourceInfoOutput values.
// You can construct a concrete instance of `NetCoreZipUploadedUserSourceInfoInput` via:
//
//	NetCoreZipUploadedUserSourceInfoArgs{...}
type NetCoreZipUploadedUserSourceInfoInput interface {
	pulumi.Input

	ToNetCoreZipUploadedUserSourceInfoOutput() NetCoreZipUploadedUserSourceInfoOutput
	ToNetCoreZipUploadedUserSourceInfoOutputWithContext(context.Context) NetCoreZipUploadedUserSourceInfoOutput
}

// Uploaded Jar binary for a deployment
type NetCoreZipUploadedUserSourceInfoArgs struct {
	// The path to the .NET executable relative to zip root
	NetCoreMainEntryPath pulumi.StringPtrInput `pulumi:"netCoreMainEntryPath"`
	// Relative path of the storage which stores the source
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// Runtime version of the .Net file
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'NetCoreZip'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (NetCoreZipUploadedUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetCoreZipUploadedUserSourceInfo)(nil)).Elem()
}

func (i NetCoreZipUploadedUserSourceInfoArgs) ToNetCoreZipUploadedUserSourceInfoOutput() NetCoreZipUploadedUserSourceInfoOutput {
	return i.ToNetCoreZipUploadedUserSourceInfoOutputWithContext(context.Background())
}

func (i NetCoreZipUploadedUserSourceInfoArgs) ToNetCoreZipUploadedUserSourceInfoOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetCoreZipUploadedUserSourceInfoOutput)
}

func (i NetCoreZipUploadedUserSourceInfoArgs) ToNetCoreZipUploadedUserSourceInfoPtrOutput() NetCoreZipUploadedUserSourceInfoPtrOutput {
	return i.ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i NetCoreZipUploadedUserSourceInfoArgs) ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetCoreZipUploadedUserSourceInfoOutput).ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(ctx)
}

// NetCoreZipUploadedUserSourceInfoPtrInput is an input type that accepts NetCoreZipUploadedUserSourceInfoArgs, NetCoreZipUploadedUserSourceInfoPtr and NetCoreZipUploadedUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `NetCoreZipUploadedUserSourceInfoPtrInput` via:
//
//	        NetCoreZipUploadedUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type NetCoreZipUploadedUserSourceInfoPtrInput interface {
	pulumi.Input

	ToNetCoreZipUploadedUserSourceInfoPtrOutput() NetCoreZipUploadedUserSourceInfoPtrOutput
	ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(context.Context) NetCoreZipUploadedUserSourceInfoPtrOutput
}

type netCoreZipUploadedUserSourceInfoPtrType NetCoreZipUploadedUserSourceInfoArgs

func NetCoreZipUploadedUserSourceInfoPtr(v *NetCoreZipUploadedUserSourceInfoArgs) NetCoreZipUploadedUserSourceInfoPtrInput {
	return (*netCoreZipUploadedUserSourceInfoPtrType)(v)
}

func (*netCoreZipUploadedUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetCoreZipUploadedUserSourceInfo)(nil)).Elem()
}

func (i *netCoreZipUploadedUserSourceInfoPtrType) ToNetCoreZipUploadedUserSourceInfoPtrOutput() NetCoreZipUploadedUserSourceInfoPtrOutput {
	return i.ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *netCoreZipUploadedUserSourceInfoPtrType) ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetCoreZipUploadedUserSourceInfoPtrOutput)
}

// Uploaded Jar binary for a deployment
type NetCoreZipUploadedUserSourceInfoOutput struct{ *pulumi.OutputState }

func (NetCoreZipUploadedUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetCoreZipUploadedUserSourceInfo)(nil)).Elem()
}

func (o NetCoreZipUploadedUserSourceInfoOutput) ToNetCoreZipUploadedUserSourceInfoOutput() NetCoreZipUploadedUserSourceInfoOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoOutput) ToNetCoreZipUploadedUserSourceInfoOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoOutput) ToNetCoreZipUploadedUserSourceInfoPtrOutput() NetCoreZipUploadedUserSourceInfoPtrOutput {
	return o.ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o NetCoreZipUploadedUserSourceInfoOutput) ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetCoreZipUploadedUserSourceInfo) *NetCoreZipUploadedUserSourceInfo {
		return &v
	}).(NetCoreZipUploadedUserSourceInfoPtrOutput)
}

// The path to the .NET executable relative to zip root
func (o NetCoreZipUploadedUserSourceInfoOutput) NetCoreMainEntryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfo) *string { return v.NetCoreMainEntryPath }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o NetCoreZipUploadedUserSourceInfoOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfo) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the .Net file
func (o NetCoreZipUploadedUserSourceInfoOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfo) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'NetCoreZip'.
func (o NetCoreZipUploadedUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o NetCoreZipUploadedUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type NetCoreZipUploadedUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (NetCoreZipUploadedUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetCoreZipUploadedUserSourceInfo)(nil)).Elem()
}

func (o NetCoreZipUploadedUserSourceInfoPtrOutput) ToNetCoreZipUploadedUserSourceInfoPtrOutput() NetCoreZipUploadedUserSourceInfoPtrOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoPtrOutput) ToNetCoreZipUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoPtrOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoPtrOutput) Elem() NetCoreZipUploadedUserSourceInfoOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfo) NetCoreZipUploadedUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret NetCoreZipUploadedUserSourceInfo
		return ret
	}).(NetCoreZipUploadedUserSourceInfoOutput)
}

// The path to the .NET executable relative to zip root
func (o NetCoreZipUploadedUserSourceInfoPtrOutput) NetCoreMainEntryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.NetCoreMainEntryPath
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o NetCoreZipUploadedUserSourceInfoPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the .Net file
func (o NetCoreZipUploadedUserSourceInfoPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'NetCoreZip'.
func (o NetCoreZipUploadedUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o NetCoreZipUploadedUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Uploaded Jar binary for a deployment
type NetCoreZipUploadedUserSourceInfoResponse struct {
	// The path to the .NET executable relative to zip root
	NetCoreMainEntryPath *string `pulumi:"netCoreMainEntryPath"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the .Net file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'NetCoreZip'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Uploaded Jar binary for a deployment
type NetCoreZipUploadedUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (NetCoreZipUploadedUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetCoreZipUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o NetCoreZipUploadedUserSourceInfoResponseOutput) ToNetCoreZipUploadedUserSourceInfoResponseOutput() NetCoreZipUploadedUserSourceInfoResponseOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoResponseOutput) ToNetCoreZipUploadedUserSourceInfoResponseOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoResponseOutput {
	return o
}

// The path to the .NET executable relative to zip root
func (o NetCoreZipUploadedUserSourceInfoResponseOutput) NetCoreMainEntryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfoResponse) *string { return v.NetCoreMainEntryPath }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o NetCoreZipUploadedUserSourceInfoResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfoResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the .Net file
func (o NetCoreZipUploadedUserSourceInfoResponseOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfoResponse) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'NetCoreZip'.
func (o NetCoreZipUploadedUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o NetCoreZipUploadedUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetCoreZipUploadedUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type NetCoreZipUploadedUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (NetCoreZipUploadedUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetCoreZipUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) ToNetCoreZipUploadedUserSourceInfoResponsePtrOutput() NetCoreZipUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) ToNetCoreZipUploadedUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) NetCoreZipUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) Elem() NetCoreZipUploadedUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfoResponse) NetCoreZipUploadedUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret NetCoreZipUploadedUserSourceInfoResponse
		return ret
	}).(NetCoreZipUploadedUserSourceInfoResponseOutput)
}

// The path to the .NET executable relative to zip root
func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) NetCoreMainEntryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetCoreMainEntryPath
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the .Net file
func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'NetCoreZip'.
func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o NetCoreZipUploadedUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetCoreZipUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Service network profile payload
type NetworkProfile struct {
	// Name of the resource group containing network resources for customer apps in Azure Spring Apps
	AppNetworkResourceGroup *string `pulumi:"appNetworkResourceGroup"`
	// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
	AppSubnetId *string `pulumi:"appSubnetId"`
	// Ingress configuration payload for Azure Spring Apps resource.
	IngressConfig *IngressConfig `pulumi:"ingressConfig"`
	// The egress traffic type of Azure Spring Apps VNet instances.
	OutboundType *string `pulumi:"outboundType"`
	// Azure Spring Apps service reserved CIDR
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
	ServiceRuntimeNetworkResourceGroup *string `pulumi:"serviceRuntimeNetworkResourceGroup"`
	// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
	ServiceRuntimeSubnetId *string `pulumi:"serviceRuntimeSubnetId"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//	NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// Service network profile payload
type NetworkProfileArgs struct {
	// Name of the resource group containing network resources for customer apps in Azure Spring Apps
	AppNetworkResourceGroup pulumi.StringPtrInput `pulumi:"appNetworkResourceGroup"`
	// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
	AppSubnetId pulumi.StringPtrInput `pulumi:"appSubnetId"`
	// Ingress configuration payload for Azure Spring Apps resource.
	IngressConfig IngressConfigPtrInput `pulumi:"ingressConfig"`
	// The egress traffic type of Azure Spring Apps VNet instances.
	OutboundType pulumi.StringPtrInput `pulumi:"outboundType"`
	// Azure Spring Apps service reserved CIDR
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
	ServiceRuntimeNetworkResourceGroup pulumi.StringPtrInput `pulumi:"serviceRuntimeNetworkResourceGroup"`
	// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
	ServiceRuntimeSubnetId pulumi.StringPtrInput `pulumi:"serviceRuntimeSubnetId"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//	        NetworkProfileArgs{...}
//
//	or:
//
//	        nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// Service network profile payload
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// Name of the resource group containing network resources for customer apps in Azure Spring Apps
func (o NetworkProfileOutput) AppNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.AppNetworkResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
func (o NetworkProfileOutput) AppSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.AppSubnetId }).(pulumi.StringPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
func (o NetworkProfileOutput) IngressConfig() IngressConfigPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *IngressConfig { return v.IngressConfig }).(IngressConfigPtrOutput)
}

// The egress traffic type of Azure Spring Apps VNet instances.
func (o NetworkProfileOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// Azure Spring Apps service reserved CIDR
func (o NetworkProfileOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
func (o NetworkProfileOutput) ServiceRuntimeNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.ServiceRuntimeNetworkResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
func (o NetworkProfileOutput) ServiceRuntimeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.ServiceRuntimeSubnetId }).(pulumi.StringPtrOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfile
		return ret
	}).(NetworkProfileOutput)
}

// Name of the resource group containing network resources for customer apps in Azure Spring Apps
func (o NetworkProfilePtrOutput) AppNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.AppNetworkResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
func (o NetworkProfilePtrOutput) AppSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.AppSubnetId
	}).(pulumi.StringPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
func (o NetworkProfilePtrOutput) IngressConfig() IngressConfigPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *IngressConfig {
		if v == nil {
			return nil
		}
		return v.IngressConfig
	}).(IngressConfigPtrOutput)
}

// The egress traffic type of Azure Spring Apps VNet instances.
func (o NetworkProfilePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// Azure Spring Apps service reserved CIDR
func (o NetworkProfilePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
func (o NetworkProfilePtrOutput) ServiceRuntimeNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRuntimeNetworkResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
func (o NetworkProfilePtrOutput) ServiceRuntimeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRuntimeSubnetId
	}).(pulumi.StringPtrOutput)
}

// Service network profile payload
type NetworkProfileResponse struct {
	// Name of the resource group containing network resources for customer apps in Azure Spring Apps
	AppNetworkResourceGroup *string `pulumi:"appNetworkResourceGroup"`
	// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
	AppSubnetId *string `pulumi:"appSubnetId"`
	// Ingress configuration payload for Azure Spring Apps resource.
	IngressConfig *IngressConfigResponse `pulumi:"ingressConfig"`
	// Desired outbound IP resources for Azure Spring Apps resource.
	OutboundIPs NetworkProfileResponseOutboundIPs `pulumi:"outboundIPs"`
	// The egress traffic type of Azure Spring Apps VNet instances.
	OutboundType *string `pulumi:"outboundType"`
	// Required inbound or outbound traffics for Azure Spring Apps resource.
	RequiredTraffics []RequiredTrafficResponse `pulumi:"requiredTraffics"`
	// Azure Spring Apps service reserved CIDR
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
	ServiceRuntimeNetworkResourceGroup *string `pulumi:"serviceRuntimeNetworkResourceGroup"`
	// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
	ServiceRuntimeSubnetId *string `pulumi:"serviceRuntimeSubnetId"`
}

// Service network profile payload
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

// Name of the resource group containing network resources for customer apps in Azure Spring Apps
func (o NetworkProfileResponseOutput) AppNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.AppNetworkResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
func (o NetworkProfileResponseOutput) AppSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.AppSubnetId }).(pulumi.StringPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
func (o NetworkProfileResponseOutput) IngressConfig() IngressConfigResponsePtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *IngressConfigResponse { return v.IngressConfig }).(IngressConfigResponsePtrOutput)
}

// Desired outbound IP resources for Azure Spring Apps resource.
func (o NetworkProfileResponseOutput) OutboundIPs() NetworkProfileResponseOutboundIPsOutput {
	return o.ApplyT(func(v NetworkProfileResponse) NetworkProfileResponseOutboundIPs { return v.OutboundIPs }).(NetworkProfileResponseOutboundIPsOutput)
}

// The egress traffic type of Azure Spring Apps VNet instances.
func (o NetworkProfileResponseOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// Required inbound or outbound traffics for Azure Spring Apps resource.
func (o NetworkProfileResponseOutput) RequiredTraffics() RequiredTrafficResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfileResponse) []RequiredTrafficResponse { return v.RequiredTraffics }).(RequiredTrafficResponseArrayOutput)
}

// Azure Spring Apps service reserved CIDR
func (o NetworkProfileResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
func (o NetworkProfileResponseOutput) ServiceRuntimeNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.ServiceRuntimeNetworkResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
func (o NetworkProfileResponseOutput) ServiceRuntimeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.ServiceRuntimeSubnetId }).(pulumi.StringPtrOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponse
		return ret
	}).(NetworkProfileResponseOutput)
}

// Name of the resource group containing network resources for customer apps in Azure Spring Apps
func (o NetworkProfileResponsePtrOutput) AppNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppNetworkResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
func (o NetworkProfileResponsePtrOutput) AppSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppSubnetId
	}).(pulumi.StringPtrOutput)
}

// Ingress configuration payload for Azure Spring Apps resource.
func (o NetworkProfileResponsePtrOutput) IngressConfig() IngressConfigResponsePtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *IngressConfigResponse {
		if v == nil {
			return nil
		}
		return v.IngressConfig
	}).(IngressConfigResponsePtrOutput)
}

// Desired outbound IP resources for Azure Spring Apps resource.
func (o NetworkProfileResponsePtrOutput) OutboundIPs() NetworkProfileResponseOutboundIPsPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *NetworkProfileResponseOutboundIPs {
		if v == nil {
			return nil
		}
		return &v.OutboundIPs
	}).(NetworkProfileResponseOutboundIPsPtrOutput)
}

// The egress traffic type of Azure Spring Apps VNet instances.
func (o NetworkProfileResponsePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// Required inbound or outbound traffics for Azure Spring Apps resource.
func (o NetworkProfileResponsePtrOutput) RequiredTraffics() RequiredTrafficResponseArrayOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) []RequiredTrafficResponse {
		if v == nil {
			return nil
		}
		return v.RequiredTraffics
	}).(RequiredTrafficResponseArrayOutput)
}

// Azure Spring Apps service reserved CIDR
func (o NetworkProfileResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Name of the resource group containing network resources of Azure Spring Apps Service Runtime
func (o NetworkProfileResponsePtrOutput) ServiceRuntimeNetworkResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRuntimeNetworkResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
func (o NetworkProfileResponsePtrOutput) ServiceRuntimeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRuntimeSubnetId
	}).(pulumi.StringPtrOutput)
}

// Desired outbound IP resources for Azure Spring Apps resource.
type NetworkProfileResponseOutboundIPs struct {
	// A list of public IP addresses.
	PublicIPs []string `pulumi:"publicIPs"`
}

// Desired outbound IP resources for Azure Spring Apps resource.
type NetworkProfileResponseOutboundIPsOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutboundIPsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponseOutboundIPs)(nil)).Elem()
}

func (o NetworkProfileResponseOutboundIPsOutput) ToNetworkProfileResponseOutboundIPsOutput() NetworkProfileResponseOutboundIPsOutput {
	return o
}

func (o NetworkProfileResponseOutboundIPsOutput) ToNetworkProfileResponseOutboundIPsOutputWithContext(ctx context.Context) NetworkProfileResponseOutboundIPsOutput {
	return o
}

// A list of public IP addresses.
func (o NetworkProfileResponseOutboundIPsOutput) PublicIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkProfileResponseOutboundIPs) []string { return v.PublicIPs }).(pulumi.StringArrayOutput)
}

type NetworkProfileResponseOutboundIPsPtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutboundIPsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponseOutboundIPs)(nil)).Elem()
}

func (o NetworkProfileResponseOutboundIPsPtrOutput) ToNetworkProfileResponseOutboundIPsPtrOutput() NetworkProfileResponseOutboundIPsPtrOutput {
	return o
}

func (o NetworkProfileResponseOutboundIPsPtrOutput) ToNetworkProfileResponseOutboundIPsPtrOutputWithContext(ctx context.Context) NetworkProfileResponseOutboundIPsPtrOutput {
	return o
}

func (o NetworkProfileResponseOutboundIPsPtrOutput) Elem() NetworkProfileResponseOutboundIPsOutput {
	return o.ApplyT(func(v *NetworkProfileResponseOutboundIPs) NetworkProfileResponseOutboundIPs {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponseOutboundIPs
		return ret
	}).(NetworkProfileResponseOutboundIPsOutput)
}

// A list of public IP addresses.
func (o NetworkProfileResponseOutboundIPsPtrOutput) PublicIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkProfileResponseOutboundIPs) []string {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(pulumi.StringArrayOutput)
}

// Persistent disk payload
type PersistentDisk struct {
	// Mount path of the persistent disk
	MountPath *string `pulumi:"mountPath"`
	// Size of the persistent disk in GB
	SizeInGB *int `pulumi:"sizeInGB"`
}

// PersistentDiskInput is an input type that accepts PersistentDiskArgs and PersistentDiskOutput values.
// You can construct a concrete instance of `PersistentDiskInput` via:
//
//	PersistentDiskArgs{...}
type PersistentDiskInput interface {
	pulumi.Input

	ToPersistentDiskOutput() PersistentDiskOutput
	ToPersistentDiskOutputWithContext(context.Context) PersistentDiskOutput
}

// Persistent disk payload
type PersistentDiskArgs struct {
	// Mount path of the persistent disk
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Size of the persistent disk in GB
	SizeInGB pulumi.IntPtrInput `pulumi:"sizeInGB"`
}

func (PersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistentDisk)(nil)).Elem()
}

func (i PersistentDiskArgs) ToPersistentDiskOutput() PersistentDiskOutput {
	return i.ToPersistentDiskOutputWithContext(context.Background())
}

func (i PersistentDiskArgs) ToPersistentDiskOutputWithContext(ctx context.Context) PersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentDiskOutput)
}

func (i PersistentDiskArgs) ToPersistentDiskPtrOutput() PersistentDiskPtrOutput {
	return i.ToPersistentDiskPtrOutputWithContext(context.Background())
}

func (i PersistentDiskArgs) ToPersistentDiskPtrOutputWithContext(ctx context.Context) PersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentDiskOutput).ToPersistentDiskPtrOutputWithContext(ctx)
}

// PersistentDiskPtrInput is an input type that accepts PersistentDiskArgs, PersistentDiskPtr and PersistentDiskPtrOutput values.
// You can construct a concrete instance of `PersistentDiskPtrInput` via:
//
//	        PersistentDiskArgs{...}
//
//	or:
//
//	        nil
type PersistentDiskPtrInput interface {
	pulumi.Input

	ToPersistentDiskPtrOutput() PersistentDiskPtrOutput
	ToPersistentDiskPtrOutputWithContext(context.Context) PersistentDiskPtrOutput
}

type persistentDiskPtrType PersistentDiskArgs

func PersistentDiskPtr(v *PersistentDiskArgs) PersistentDiskPtrInput {
	return (*persistentDiskPtrType)(v)
}

func (*persistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistentDisk)(nil)).Elem()
}

func (i *persistentDiskPtrType) ToPersistentDiskPtrOutput() PersistentDiskPtrOutput {
	return i.ToPersistentDiskPtrOutputWithContext(context.Background())
}

func (i *persistentDiskPtrType) ToPersistentDiskPtrOutputWithContext(ctx context.Context) PersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentDiskPtrOutput)
}

// Persistent disk payload
type PersistentDiskOutput struct{ *pulumi.OutputState }

func (PersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistentDisk)(nil)).Elem()
}

func (o PersistentDiskOutput) ToPersistentDiskOutput() PersistentDiskOutput {
	return o
}

func (o PersistentDiskOutput) ToPersistentDiskOutputWithContext(ctx context.Context) PersistentDiskOutput {
	return o
}

func (o PersistentDiskOutput) ToPersistentDiskPtrOutput() PersistentDiskPtrOutput {
	return o.ToPersistentDiskPtrOutputWithContext(context.Background())
}

func (o PersistentDiskOutput) ToPersistentDiskPtrOutputWithContext(ctx context.Context) PersistentDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersistentDisk) *PersistentDisk {
		return &v
	}).(PersistentDiskPtrOutput)
}

// Mount path of the persistent disk
func (o PersistentDiskOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PersistentDisk) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Size of the persistent disk in GB
func (o PersistentDiskOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PersistentDisk) *int { return v.SizeInGB }).(pulumi.IntPtrOutput)
}

type PersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (PersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistentDisk)(nil)).Elem()
}

func (o PersistentDiskPtrOutput) ToPersistentDiskPtrOutput() PersistentDiskPtrOutput {
	return o
}

func (o PersistentDiskPtrOutput) ToPersistentDiskPtrOutputWithContext(ctx context.Context) PersistentDiskPtrOutput {
	return o
}

func (o PersistentDiskPtrOutput) Elem() PersistentDiskOutput {
	return o.ApplyT(func(v *PersistentDisk) PersistentDisk {
		if v != nil {
			return *v
		}
		var ret PersistentDisk
		return ret
	}).(PersistentDiskOutput)
}

// Mount path of the persistent disk
func (o PersistentDiskPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Size of the persistent disk in GB
func (o PersistentDiskPtrOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PersistentDisk) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGB
	}).(pulumi.IntPtrOutput)
}

// Persistent disk payload
type PersistentDiskResponse struct {
	// Mount path of the persistent disk
	MountPath *string `pulumi:"mountPath"`
	// Size of the persistent disk in GB
	SizeInGB *int `pulumi:"sizeInGB"`
	// Size of the used persistent disk in GB
	UsedInGB int `pulumi:"usedInGB"`
}

// Persistent disk payload
type PersistentDiskResponseOutput struct{ *pulumi.OutputState }

func (PersistentDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistentDiskResponse)(nil)).Elem()
}

func (o PersistentDiskResponseOutput) ToPersistentDiskResponseOutput() PersistentDiskResponseOutput {
	return o
}

func (o PersistentDiskResponseOutput) ToPersistentDiskResponseOutputWithContext(ctx context.Context) PersistentDiskResponseOutput {
	return o
}

// Mount path of the persistent disk
func (o PersistentDiskResponseOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PersistentDiskResponse) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Size of the persistent disk in GB
func (o PersistentDiskResponseOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PersistentDiskResponse) *int { return v.SizeInGB }).(pulumi.IntPtrOutput)
}

// Size of the used persistent disk in GB
func (o PersistentDiskResponseOutput) UsedInGB() pulumi.IntOutput {
	return o.ApplyT(func(v PersistentDiskResponse) int { return v.UsedInGB }).(pulumi.IntOutput)
}

type PersistentDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (PersistentDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistentDiskResponse)(nil)).Elem()
}

func (o PersistentDiskResponsePtrOutput) ToPersistentDiskResponsePtrOutput() PersistentDiskResponsePtrOutput {
	return o
}

func (o PersistentDiskResponsePtrOutput) ToPersistentDiskResponsePtrOutputWithContext(ctx context.Context) PersistentDiskResponsePtrOutput {
	return o
}

func (o PersistentDiskResponsePtrOutput) Elem() PersistentDiskResponseOutput {
	return o.ApplyT(func(v *PersistentDiskResponse) PersistentDiskResponse {
		if v != nil {
			return *v
		}
		var ret PersistentDiskResponse
		return ret
	}).(PersistentDiskResponseOutput)
}

// Mount path of the persistent disk
func (o PersistentDiskResponsePtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PersistentDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Size of the persistent disk in GB
func (o PersistentDiskResponsePtrOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PersistentDiskResponse) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGB
	}).(pulumi.IntPtrOutput)
}

// Size of the used persistent disk in GB
func (o PersistentDiskResponsePtrOutput) UsedInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PersistentDiskResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UsedInGB
	}).(pulumi.IntPtrOutput)
}

// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
type Probe struct {
	// Indicate whether the probe is disabled.
	DisableProbe bool `pulumi:"disableProbe"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The action of the probe.
	ProbeAction interface{} `pulumi:"probeAction"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Minimum value is 1.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// Defaults sets the appropriate defaults for Probe
func (val *Probe) Defaults() *Probe {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DisableProbe) {
		tmp.DisableProbe = false
	}
	return &tmp
}

// ProbeInput is an input type that accepts ProbeArgs and ProbeOutput values.
// You can construct a concrete instance of `ProbeInput` via:
//
//	ProbeArgs{...}
type ProbeInput interface {
	pulumi.Input

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(context.Context) ProbeOutput
}

// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
type ProbeArgs struct {
	// Indicate whether the probe is disabled.
	DisableProbe pulumi.BoolInput `pulumi:"disableProbe"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The action of the probe.
	ProbeAction pulumi.Input `pulumi:"probeAction"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Minimum value is 1.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

// Defaults sets the appropriate defaults for ProbeArgs
func (val *ProbeArgs) Defaults() *ProbeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DisableProbe == nil {
		tmp.DisableProbe = pulumi.Bool(false)
	}
	return &tmp
}
func (ProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (i ProbeArgs) ToProbeOutput() ProbeOutput {
	return i.ToProbeOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput)
}

func (i ProbeArgs) ToProbePtrOutput() ProbePtrOutput {
	return i.ToProbePtrOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbePtrOutputWithContext(ctx context.Context) ProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput).ToProbePtrOutputWithContext(ctx)
}

// ProbePtrInput is an input type that accepts ProbeArgs, ProbePtr and ProbePtrOutput values.
// You can construct a concrete instance of `ProbePtrInput` via:
//
//	        ProbeArgs{...}
//
//	or:
//
//	        nil
type ProbePtrInput interface {
	pulumi.Input

	ToProbePtrOutput() ProbePtrOutput
	ToProbePtrOutputWithContext(context.Context) ProbePtrOutput
}

type probePtrType ProbeArgs

func ProbePtr(v *ProbeArgs) ProbePtrInput {
	return (*probePtrType)(v)
}

func (*probePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Probe)(nil)).Elem()
}

func (i *probePtrType) ToProbePtrOutput() ProbePtrOutput {
	return i.ToProbePtrOutputWithContext(context.Background())
}

func (i *probePtrType) ToProbePtrOutputWithContext(ctx context.Context) ProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePtrOutput)
}

// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
type ProbeOutput struct{ *pulumi.OutputState }

func (ProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (o ProbeOutput) ToProbeOutput() ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbePtrOutput() ProbePtrOutput {
	return o.ToProbePtrOutputWithContext(context.Background())
}

func (o ProbeOutput) ToProbePtrOutputWithContext(ctx context.Context) ProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Probe) *Probe {
		return &v
	}).(ProbePtrOutput)
}

// Indicate whether the probe is disabled.
func (o ProbeOutput) DisableProbe() pulumi.BoolOutput {
	return o.ApplyT(func(v Probe) bool { return v.DisableProbe }).(pulumi.BoolOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
func (o ProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Minimum value is 1.
func (o ProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The action of the probe.
func (o ProbeOutput) ProbeAction() pulumi.AnyOutput {
	return o.ApplyT(func(v Probe) interface{} { return v.ProbeAction }).(pulumi.AnyOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
func (o ProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Minimum value is 1.
func (o ProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ProbePtrOutput struct{ *pulumi.OutputState }

func (ProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Probe)(nil)).Elem()
}

func (o ProbePtrOutput) ToProbePtrOutput() ProbePtrOutput {
	return o
}

func (o ProbePtrOutput) ToProbePtrOutputWithContext(ctx context.Context) ProbePtrOutput {
	return o
}

func (o ProbePtrOutput) Elem() ProbeOutput {
	return o.ApplyT(func(v *Probe) Probe {
		if v != nil {
			return *v
		}
		var ret Probe
		return ret
	}).(ProbeOutput)
}

// Indicate whether the probe is disabled.
func (o ProbePtrOutput) DisableProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Probe) *bool {
		if v == nil {
			return nil
		}
		return &v.DisableProbe
	}).(pulumi.BoolPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
func (o ProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Probe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Probe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Minimum value is 1.
func (o ProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Probe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The action of the probe.
func (o ProbePtrOutput) ProbeAction() pulumi.AnyOutput {
	return o.ApplyT(func(v *Probe) interface{} {
		if v == nil {
			return nil
		}
		return v.ProbeAction
	}).(pulumi.AnyOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
func (o ProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Probe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Minimum value is 1.
func (o ProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Probe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
type ProbeResponse struct {
	// Indicate whether the probe is disabled.
	DisableProbe bool `pulumi:"disableProbe"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The action of the probe.
	ProbeAction interface{} `pulumi:"probeAction"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Minimum value is 1.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// Defaults sets the appropriate defaults for ProbeResponse
func (val *ProbeResponse) Defaults() *ProbeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DisableProbe) {
		tmp.DisableProbe = false
	}
	return &tmp
}

// Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.
type ProbeResponseOutput struct{ *pulumi.OutputState }

func (ProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseOutput) ToProbeResponseOutput() ProbeResponseOutput {
	return o
}

func (o ProbeResponseOutput) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return o
}

// Indicate whether the probe is disabled.
func (o ProbeResponseOutput) DisableProbe() pulumi.BoolOutput {
	return o.ApplyT(func(v ProbeResponse) bool { return v.DisableProbe }).(pulumi.BoolOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
func (o ProbeResponseOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ProbeResponseOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Minimum value is 1.
func (o ProbeResponseOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The action of the probe.
func (o ProbeResponseOutput) ProbeAction() pulumi.AnyOutput {
	return o.ApplyT(func(v ProbeResponse) interface{} { return v.ProbeAction }).(pulumi.AnyOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
func (o ProbeResponseOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Minimum value is 1.
func (o ProbeResponseOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ProbeResponsePtrOutput struct{ *pulumi.OutputState }

func (ProbeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeResponse)(nil)).Elem()
}

func (o ProbeResponsePtrOutput) ToProbeResponsePtrOutput() ProbeResponsePtrOutput {
	return o
}

func (o ProbeResponsePtrOutput) ToProbeResponsePtrOutputWithContext(ctx context.Context) ProbeResponsePtrOutput {
	return o
}

func (o ProbeResponsePtrOutput) Elem() ProbeResponseOutput {
	return o.ApplyT(func(v *ProbeResponse) ProbeResponse {
		if v != nil {
			return *v
		}
		var ret ProbeResponse
		return ret
	}).(ProbeResponseOutput)
}

// Indicate whether the probe is disabled.
func (o ProbeResponsePtrOutput) DisableProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProbeResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.DisableProbe
	}).(pulumi.BoolPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
func (o ProbeResponsePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeResponse) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ProbeResponsePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeResponse) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Minimum value is 1.
func (o ProbeResponsePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The action of the probe.
func (o ProbeResponsePtrOutput) ProbeAction() pulumi.AnyOutput {
	return o.ApplyT(func(v *ProbeResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProbeAction
	}).(pulumi.AnyOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.
func (o ProbeResponsePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeResponse) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Minimum value is 1.
func (o ProbeResponsePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Azure Spring Apps App Instance Azure Queue based scaling rule.
type QueueScaleRule struct {
	// Authentication secrets for the queue scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Queue length.
	QueueLength *int `pulumi:"queueLength"`
	// Queue name.
	QueueName *string `pulumi:"queueName"`
}

// QueueScaleRuleInput is an input type that accepts QueueScaleRuleArgs and QueueScaleRuleOutput values.
// You can construct a concrete instance of `QueueScaleRuleInput` via:
//
//	QueueScaleRuleArgs{...}
type QueueScaleRuleInput interface {
	pulumi.Input

	ToQueueScaleRuleOutput() QueueScaleRuleOutput
	ToQueueScaleRuleOutputWithContext(context.Context) QueueScaleRuleOutput
}

// Azure Spring Apps App Instance Azure Queue based scaling rule.
type QueueScaleRuleArgs struct {
	// Authentication secrets for the queue scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Queue length.
	QueueLength pulumi.IntPtrInput `pulumi:"queueLength"`
	// Queue name.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
}

func (QueueScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueScaleRule)(nil)).Elem()
}

func (i QueueScaleRuleArgs) ToQueueScaleRuleOutput() QueueScaleRuleOutput {
	return i.ToQueueScaleRuleOutputWithContext(context.Background())
}

func (i QueueScaleRuleArgs) ToQueueScaleRuleOutputWithContext(ctx context.Context) QueueScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueScaleRuleOutput)
}

func (i QueueScaleRuleArgs) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return i.ToQueueScaleRulePtrOutputWithContext(context.Background())
}

func (i QueueScaleRuleArgs) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueScaleRuleOutput).ToQueueScaleRulePtrOutputWithContext(ctx)
}

// QueueScaleRulePtrInput is an input type that accepts QueueScaleRuleArgs, QueueScaleRulePtr and QueueScaleRulePtrOutput values.
// You can construct a concrete instance of `QueueScaleRulePtrInput` via:
//
//	        QueueScaleRuleArgs{...}
//
//	or:
//
//	        nil
type QueueScaleRulePtrInput interface {
	pulumi.Input

	ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput
	ToQueueScaleRulePtrOutputWithContext(context.Context) QueueScaleRulePtrOutput
}

type queueScaleRulePtrType QueueScaleRuleArgs

func QueueScaleRulePtr(v *QueueScaleRuleArgs) QueueScaleRulePtrInput {
	return (*queueScaleRulePtrType)(v)
}

func (*queueScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueScaleRule)(nil)).Elem()
}

func (i *queueScaleRulePtrType) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return i.ToQueueScaleRulePtrOutputWithContext(context.Background())
}

func (i *queueScaleRulePtrType) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueScaleRulePtrOutput)
}

// Azure Spring Apps App Instance Azure Queue based scaling rule.
type QueueScaleRuleOutput struct{ *pulumi.OutputState }

func (QueueScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueScaleRule)(nil)).Elem()
}

func (o QueueScaleRuleOutput) ToQueueScaleRuleOutput() QueueScaleRuleOutput {
	return o
}

func (o QueueScaleRuleOutput) ToQueueScaleRuleOutputWithContext(ctx context.Context) QueueScaleRuleOutput {
	return o
}

func (o QueueScaleRuleOutput) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return o.ToQueueScaleRulePtrOutputWithContext(context.Background())
}

func (o QueueScaleRuleOutput) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueScaleRule) *QueueScaleRule {
		return &v
	}).(QueueScaleRulePtrOutput)
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v QueueScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Queue length.
func (o QueueScaleRuleOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueScaleRule) *int { return v.QueueLength }).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRuleOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueScaleRule) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type QueueScaleRulePtrOutput struct{ *pulumi.OutputState }

func (QueueScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueScaleRule)(nil)).Elem()
}

func (o QueueScaleRulePtrOutput) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return o
}

func (o QueueScaleRulePtrOutput) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return o
}

func (o QueueScaleRulePtrOutput) Elem() QueueScaleRuleOutput {
	return o.ApplyT(func(v *QueueScaleRule) QueueScaleRule {
		if v != nil {
			return *v
		}
		var ret QueueScaleRule
		return ret
	}).(QueueScaleRuleOutput)
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *QueueScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Queue length.
func (o QueueScaleRulePtrOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueScaleRule) *int {
		if v == nil {
			return nil
		}
		return v.QueueLength
	}).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRulePtrOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueScaleRule) *string {
		if v == nil {
			return nil
		}
		return v.QueueName
	}).(pulumi.StringPtrOutput)
}

// Azure Spring Apps App Instance Azure Queue based scaling rule.
type QueueScaleRuleResponse struct {
	// Authentication secrets for the queue scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Queue length.
	QueueLength *int `pulumi:"queueLength"`
	// Queue name.
	QueueName *string `pulumi:"queueName"`
}

// Azure Spring Apps App Instance Azure Queue based scaling rule.
type QueueScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (QueueScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueScaleRuleResponse)(nil)).Elem()
}

func (o QueueScaleRuleResponseOutput) ToQueueScaleRuleResponseOutput() QueueScaleRuleResponseOutput {
	return o
}

func (o QueueScaleRuleResponseOutput) ToQueueScaleRuleResponseOutputWithContext(ctx context.Context) QueueScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v QueueScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Queue length.
func (o QueueScaleRuleResponseOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueScaleRuleResponse) *int { return v.QueueLength }).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRuleResponseOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueScaleRuleResponse) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type QueueScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (QueueScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueScaleRuleResponse)(nil)).Elem()
}

func (o QueueScaleRuleResponsePtrOutput) ToQueueScaleRuleResponsePtrOutput() QueueScaleRuleResponsePtrOutput {
	return o
}

func (o QueueScaleRuleResponsePtrOutput) ToQueueScaleRuleResponsePtrOutputWithContext(ctx context.Context) QueueScaleRuleResponsePtrOutput {
	return o
}

func (o QueueScaleRuleResponsePtrOutput) Elem() QueueScaleRuleResponseOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) QueueScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret QueueScaleRuleResponse
		return ret
	}).(QueueScaleRuleResponseOutput)
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Queue length.
func (o QueueScaleRuleResponsePtrOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) *int {
		if v == nil {
			return nil
		}
		return v.QueueLength
	}).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRuleResponsePtrOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueueName
	}).(pulumi.StringPtrOutput)
}

// Required inbound or outbound traffic for Azure Spring Apps resource.
type RequiredTrafficResponse struct {
	// The direction of required traffic
	Direction string `pulumi:"direction"`
	// The FQDN list of required traffic
	Fqdns []string `pulumi:"fqdns"`
	// The ip list of required traffic
	Ips []string `pulumi:"ips"`
	// The port of required traffic
	Port int `pulumi:"port"`
	// The protocol of required traffic
	Protocol string `pulumi:"protocol"`
}

// Required inbound or outbound traffic for Azure Spring Apps resource.
type RequiredTrafficResponseOutput struct{ *pulumi.OutputState }

func (RequiredTrafficResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequiredTrafficResponse)(nil)).Elem()
}

func (o RequiredTrafficResponseOutput) ToRequiredTrafficResponseOutput() RequiredTrafficResponseOutput {
	return o
}

func (o RequiredTrafficResponseOutput) ToRequiredTrafficResponseOutputWithContext(ctx context.Context) RequiredTrafficResponseOutput {
	return o
}

// The direction of required traffic
func (o RequiredTrafficResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v RequiredTrafficResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// The FQDN list of required traffic
func (o RequiredTrafficResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequiredTrafficResponse) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// The ip list of required traffic
func (o RequiredTrafficResponseOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequiredTrafficResponse) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The port of required traffic
func (o RequiredTrafficResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v RequiredTrafficResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of required traffic
func (o RequiredTrafficResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v RequiredTrafficResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

type RequiredTrafficResponseArrayOutput struct{ *pulumi.OutputState }

func (RequiredTrafficResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequiredTrafficResponse)(nil)).Elem()
}

func (o RequiredTrafficResponseArrayOutput) ToRequiredTrafficResponseArrayOutput() RequiredTrafficResponseArrayOutput {
	return o
}

func (o RequiredTrafficResponseArrayOutput) ToRequiredTrafficResponseArrayOutputWithContext(ctx context.Context) RequiredTrafficResponseArrayOutput {
	return o
}

func (o RequiredTrafficResponseArrayOutput) Index(i pulumi.IntInput) RequiredTrafficResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequiredTrafficResponse {
		return vs[0].([]RequiredTrafficResponse)[vs[1].(int)]
	}).(RequiredTrafficResponseOutput)
}

// Deployment resource request payload
type ResourceRequests struct {
	// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
	Cpu *string `pulumi:"cpu"`
	// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
	Memory *string `pulumi:"memory"`
}

// ResourceRequestsInput is an input type that accepts ResourceRequestsArgs and ResourceRequestsOutput values.
// You can construct a concrete instance of `ResourceRequestsInput` via:
//
//	ResourceRequestsArgs{...}
type ResourceRequestsInput interface {
	pulumi.Input

	ToResourceRequestsOutput() ResourceRequestsOutput
	ToResourceRequestsOutputWithContext(context.Context) ResourceRequestsOutput
}

// Deployment resource request payload
type ResourceRequestsArgs struct {
	// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
	Cpu pulumi.StringPtrInput `pulumi:"cpu"`
	// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
}

func (ResourceRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRequests)(nil)).Elem()
}

func (i ResourceRequestsArgs) ToResourceRequestsOutput() ResourceRequestsOutput {
	return i.ToResourceRequestsOutputWithContext(context.Background())
}

func (i ResourceRequestsArgs) ToResourceRequestsOutputWithContext(ctx context.Context) ResourceRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRequestsOutput)
}

func (i ResourceRequestsArgs) ToResourceRequestsPtrOutput() ResourceRequestsPtrOutput {
	return i.ToResourceRequestsPtrOutputWithContext(context.Background())
}

func (i ResourceRequestsArgs) ToResourceRequestsPtrOutputWithContext(ctx context.Context) ResourceRequestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRequestsOutput).ToResourceRequestsPtrOutputWithContext(ctx)
}

// ResourceRequestsPtrInput is an input type that accepts ResourceRequestsArgs, ResourceRequestsPtr and ResourceRequestsPtrOutput values.
// You can construct a concrete instance of `ResourceRequestsPtrInput` via:
//
//	        ResourceRequestsArgs{...}
//
//	or:
//
//	        nil
type ResourceRequestsPtrInput interface {
	pulumi.Input

	ToResourceRequestsPtrOutput() ResourceRequestsPtrOutput
	ToResourceRequestsPtrOutputWithContext(context.Context) ResourceRequestsPtrOutput
}

type resourceRequestsPtrType ResourceRequestsArgs

func ResourceRequestsPtr(v *ResourceRequestsArgs) ResourceRequestsPtrInput {
	return (*resourceRequestsPtrType)(v)
}

func (*resourceRequestsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRequests)(nil)).Elem()
}

func (i *resourceRequestsPtrType) ToResourceRequestsPtrOutput() ResourceRequestsPtrOutput {
	return i.ToResourceRequestsPtrOutputWithContext(context.Background())
}

func (i *resourceRequestsPtrType) ToResourceRequestsPtrOutputWithContext(ctx context.Context) ResourceRequestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRequestsPtrOutput)
}

// Deployment resource request payload
type ResourceRequestsOutput struct{ *pulumi.OutputState }

func (ResourceRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRequests)(nil)).Elem()
}

func (o ResourceRequestsOutput) ToResourceRequestsOutput() ResourceRequestsOutput {
	return o
}

func (o ResourceRequestsOutput) ToResourceRequestsOutputWithContext(ctx context.Context) ResourceRequestsOutput {
	return o
}

func (o ResourceRequestsOutput) ToResourceRequestsPtrOutput() ResourceRequestsPtrOutput {
	return o.ToResourceRequestsPtrOutputWithContext(context.Background())
}

func (o ResourceRequestsOutput) ToResourceRequestsPtrOutputWithContext(ctx context.Context) ResourceRequestsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceRequests) *ResourceRequests {
		return &v
	}).(ResourceRequestsPtrOutput)
}

// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
func (o ResourceRequestsOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequests) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
func (o ResourceRequestsOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequests) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type ResourceRequestsPtrOutput struct{ *pulumi.OutputState }

func (ResourceRequestsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRequests)(nil)).Elem()
}

func (o ResourceRequestsPtrOutput) ToResourceRequestsPtrOutput() ResourceRequestsPtrOutput {
	return o
}

func (o ResourceRequestsPtrOutput) ToResourceRequestsPtrOutputWithContext(ctx context.Context) ResourceRequestsPtrOutput {
	return o
}

func (o ResourceRequestsPtrOutput) Elem() ResourceRequestsOutput {
	return o.ApplyT(func(v *ResourceRequests) ResourceRequests {
		if v != nil {
			return *v
		}
		var ret ResourceRequests
		return ret
	}).(ResourceRequestsOutput)
}

// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
func (o ResourceRequestsPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRequests) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
func (o ResourceRequestsPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRequests) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Deployment resource request payload
type ResourceRequestsResponse struct {
	// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
	Cpu *string `pulumi:"cpu"`
	// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
	Memory *string `pulumi:"memory"`
}

// Deployment resource request payload
type ResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (ResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRequestsResponse)(nil)).Elem()
}

func (o ResourceRequestsResponseOutput) ToResourceRequestsResponseOutput() ResourceRequestsResponseOutput {
	return o
}

func (o ResourceRequestsResponseOutput) ToResourceRequestsResponseOutputWithContext(ctx context.Context) ResourceRequestsResponseOutput {
	return o
}

// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
func (o ResourceRequestsResponseOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequestsResponse) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
func (o ResourceRequestsResponseOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequestsResponse) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type ResourceRequestsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceRequestsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRequestsResponse)(nil)).Elem()
}

func (o ResourceRequestsResponsePtrOutput) ToResourceRequestsResponsePtrOutput() ResourceRequestsResponsePtrOutput {
	return o
}

func (o ResourceRequestsResponsePtrOutput) ToResourceRequestsResponsePtrOutputWithContext(ctx context.Context) ResourceRequestsResponsePtrOutput {
	return o
}

func (o ResourceRequestsResponsePtrOutput) Elem() ResourceRequestsResponseOutput {
	return o.ApplyT(func(v *ResourceRequestsResponse) ResourceRequestsResponse {
		if v != nil {
			return *v
		}
		var ret ResourceRequestsResponse
		return ret
	}).(ResourceRequestsResponseOutput)
}

// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.
func (o ResourceRequestsResponsePtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.
func (o ResourceRequestsResponsePtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRequestsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Azure Spring Apps scaling configurations.
type Scale struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// Optional. Minimum number of container replicas.
	MinReplicas *int `pulumi:"minReplicas"`
	// Scaling rules.
	Rules []ScaleRule `pulumi:"rules"`
}

// Defaults sets the appropriate defaults for Scale
func (val *Scale) Defaults() *Scale {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxReplicas == nil {
		maxReplicas_ := 10
		tmp.MaxReplicas = &maxReplicas_
	}
	return &tmp
}

// ScaleInput is an input type that accepts ScaleArgs and ScaleOutput values.
// You can construct a concrete instance of `ScaleInput` via:
//
//	ScaleArgs{...}
type ScaleInput interface {
	pulumi.Input

	ToScaleOutput() ScaleOutput
	ToScaleOutputWithContext(context.Context) ScaleOutput
}

// Azure Spring Apps scaling configurations.
type ScaleArgs struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// Optional. Minimum number of container replicas.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// Scaling rules.
	Rules ScaleRuleArrayInput `pulumi:"rules"`
}

// Defaults sets the appropriate defaults for ScaleArgs
func (val *ScaleArgs) Defaults() *ScaleArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxReplicas == nil {
		tmp.MaxReplicas = pulumi.IntPtr(10)
	}
	return &tmp
}
func (ScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Scale)(nil)).Elem()
}

func (i ScaleArgs) ToScaleOutput() ScaleOutput {
	return i.ToScaleOutputWithContext(context.Background())
}

func (i ScaleArgs) ToScaleOutputWithContext(ctx context.Context) ScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutput)
}

func (i ScaleArgs) ToScalePtrOutput() ScalePtrOutput {
	return i.ToScalePtrOutputWithContext(context.Background())
}

func (i ScaleArgs) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutput).ToScalePtrOutputWithContext(ctx)
}

// ScalePtrInput is an input type that accepts ScaleArgs, ScalePtr and ScalePtrOutput values.
// You can construct a concrete instance of `ScalePtrInput` via:
//
//	        ScaleArgs{...}
//
//	or:
//
//	        nil
type ScalePtrInput interface {
	pulumi.Input

	ToScalePtrOutput() ScalePtrOutput
	ToScalePtrOutputWithContext(context.Context) ScalePtrOutput
}

type scalePtrType ScaleArgs

func ScalePtr(v *ScaleArgs) ScalePtrInput {
	return (*scalePtrType)(v)
}

func (*scalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Scale)(nil)).Elem()
}

func (i *scalePtrType) ToScalePtrOutput() ScalePtrOutput {
	return i.ToScalePtrOutputWithContext(context.Background())
}

func (i *scalePtrType) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalePtrOutput)
}

// Azure Spring Apps scaling configurations.
type ScaleOutput struct{ *pulumi.OutputState }

func (ScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Scale)(nil)).Elem()
}

func (o ScaleOutput) ToScaleOutput() ScaleOutput {
	return o
}

func (o ScaleOutput) ToScaleOutputWithContext(ctx context.Context) ScaleOutput {
	return o
}

func (o ScaleOutput) ToScalePtrOutput() ScalePtrOutput {
	return o.ToScalePtrOutputWithContext(context.Background())
}

func (o ScaleOutput) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Scale) *Scale {
		return &v
	}).(ScalePtrOutput)
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScaleOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Scale) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScaleOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Scale) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScaleOutput) Rules() ScaleRuleArrayOutput {
	return o.ApplyT(func(v Scale) []ScaleRule { return v.Rules }).(ScaleRuleArrayOutput)
}

type ScalePtrOutput struct{ *pulumi.OutputState }

func (ScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Scale)(nil)).Elem()
}

func (o ScalePtrOutput) ToScalePtrOutput() ScalePtrOutput {
	return o
}

func (o ScalePtrOutput) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return o
}

func (o ScalePtrOutput) Elem() ScaleOutput {
	return o.ApplyT(func(v *Scale) Scale {
		if v != nil {
			return *v
		}
		var ret Scale
		return ret
	}).(ScaleOutput)
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScalePtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Scale) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScalePtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Scale) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScalePtrOutput) Rules() ScaleRuleArrayOutput {
	return o.ApplyT(func(v *Scale) []ScaleRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ScaleRuleArrayOutput)
}

// Azure Spring Apps scaling configurations.
type ScaleResponse struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// Optional. Minimum number of container replicas.
	MinReplicas *int `pulumi:"minReplicas"`
	// Scaling rules.
	Rules []ScaleRuleResponse `pulumi:"rules"`
}

// Defaults sets the appropriate defaults for ScaleResponse
func (val *ScaleResponse) Defaults() *ScaleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxReplicas == nil {
		maxReplicas_ := 10
		tmp.MaxReplicas = &maxReplicas_
	}
	return &tmp
}

// Azure Spring Apps scaling configurations.
type ScaleResponseOutput struct{ *pulumi.OutputState }

func (ScaleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleResponse)(nil)).Elem()
}

func (o ScaleResponseOutput) ToScaleResponseOutput() ScaleResponseOutput {
	return o
}

func (o ScaleResponseOutput) ToScaleResponseOutputWithContext(ctx context.Context) ScaleResponseOutput {
	return o
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScaleResponseOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleResponse) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScaleResponseOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleResponse) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScaleResponseOutput) Rules() ScaleRuleResponseArrayOutput {
	return o.ApplyT(func(v ScaleResponse) []ScaleRuleResponse { return v.Rules }).(ScaleRuleResponseArrayOutput)
}

type ScaleResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleResponse)(nil)).Elem()
}

func (o ScaleResponsePtrOutput) ToScaleResponsePtrOutput() ScaleResponsePtrOutput {
	return o
}

func (o ScaleResponsePtrOutput) ToScaleResponsePtrOutputWithContext(ctx context.Context) ScaleResponsePtrOutput {
	return o
}

func (o ScaleResponsePtrOutput) Elem() ScaleResponseOutput {
	return o.ApplyT(func(v *ScaleResponse) ScaleResponse {
		if v != nil {
			return *v
		}
		var ret ScaleResponse
		return ret
	}).(ScaleResponseOutput)
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScaleResponsePtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScaleResponsePtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScaleResponsePtrOutput) Rules() ScaleRuleResponseArrayOutput {
	return o.ApplyT(func(v *ScaleResponse) []ScaleRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ScaleRuleResponseArrayOutput)
}

// Azure Spring Apps App Instance scaling rule.
type ScaleRule struct {
	// Azure Queue based scaling.
	AzureQueue *QueueScaleRule `pulumi:"azureQueue"`
	// Custom scale rule.
	Custom *CustomScaleRule `pulumi:"custom"`
	// HTTP requests based scaling.
	Http *HttpScaleRule `pulumi:"http"`
	// Scale Rule Name
	Name *string `pulumi:"name"`
	// Tcp requests based scaling.
	Tcp *TcpScaleRule `pulumi:"tcp"`
}

// ScaleRuleInput is an input type that accepts ScaleRuleArgs and ScaleRuleOutput values.
// You can construct a concrete instance of `ScaleRuleInput` via:
//
//	ScaleRuleArgs{...}
type ScaleRuleInput interface {
	pulumi.Input

	ToScaleRuleOutput() ScaleRuleOutput
	ToScaleRuleOutputWithContext(context.Context) ScaleRuleOutput
}

// Azure Spring Apps App Instance scaling rule.
type ScaleRuleArgs struct {
	// Azure Queue based scaling.
	AzureQueue QueueScaleRulePtrInput `pulumi:"azureQueue"`
	// Custom scale rule.
	Custom CustomScaleRulePtrInput `pulumi:"custom"`
	// HTTP requests based scaling.
	Http HttpScaleRulePtrInput `pulumi:"http"`
	// Scale Rule Name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tcp requests based scaling.
	Tcp TcpScaleRulePtrInput `pulumi:"tcp"`
}

func (ScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRule)(nil)).Elem()
}

func (i ScaleRuleArgs) ToScaleRuleOutput() ScaleRuleOutput {
	return i.ToScaleRuleOutputWithContext(context.Background())
}

func (i ScaleRuleArgs) ToScaleRuleOutputWithContext(ctx context.Context) ScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleOutput)
}

// ScaleRuleArrayInput is an input type that accepts ScaleRuleArray and ScaleRuleArrayOutput values.
// You can construct a concrete instance of `ScaleRuleArrayInput` via:
//
//	ScaleRuleArray{ ScaleRuleArgs{...} }
type ScaleRuleArrayInput interface {
	pulumi.Input

	ToScaleRuleArrayOutput() ScaleRuleArrayOutput
	ToScaleRuleArrayOutputWithContext(context.Context) ScaleRuleArrayOutput
}

type ScaleRuleArray []ScaleRuleInput

func (ScaleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRule)(nil)).Elem()
}

func (i ScaleRuleArray) ToScaleRuleArrayOutput() ScaleRuleArrayOutput {
	return i.ToScaleRuleArrayOutputWithContext(context.Background())
}

func (i ScaleRuleArray) ToScaleRuleArrayOutputWithContext(ctx context.Context) ScaleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleArrayOutput)
}

// Azure Spring Apps App Instance scaling rule.
type ScaleRuleOutput struct{ *pulumi.OutputState }

func (ScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRule)(nil)).Elem()
}

func (o ScaleRuleOutput) ToScaleRuleOutput() ScaleRuleOutput {
	return o
}

func (o ScaleRuleOutput) ToScaleRuleOutputWithContext(ctx context.Context) ScaleRuleOutput {
	return o
}

// Azure Queue based scaling.
func (o ScaleRuleOutput) AzureQueue() QueueScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *QueueScaleRule { return v.AzureQueue }).(QueueScaleRulePtrOutput)
}

// Custom scale rule.
func (o ScaleRuleOutput) Custom() CustomScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *CustomScaleRule { return v.Custom }).(CustomScaleRulePtrOutput)
}

// HTTP requests based scaling.
func (o ScaleRuleOutput) Http() HttpScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *HttpScaleRule { return v.Http }).(HttpScaleRulePtrOutput)
}

// Scale Rule Name
func (o ScaleRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tcp requests based scaling.
func (o ScaleRuleOutput) Tcp() TcpScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *TcpScaleRule { return v.Tcp }).(TcpScaleRulePtrOutput)
}

type ScaleRuleArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRule)(nil)).Elem()
}

func (o ScaleRuleArrayOutput) ToScaleRuleArrayOutput() ScaleRuleArrayOutput {
	return o
}

func (o ScaleRuleArrayOutput) ToScaleRuleArrayOutputWithContext(ctx context.Context) ScaleRuleArrayOutput {
	return o
}

func (o ScaleRuleArrayOutput) Index(i pulumi.IntInput) ScaleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRule {
		return vs[0].([]ScaleRule)[vs[1].(int)]
	}).(ScaleRuleOutput)
}

// Auth Secrets for Azure Spring Apps App Instance Scale Rule
type ScaleRuleAuth struct {
	// Name of the Azure Spring Apps App Instance secret from which to pull the auth params.
	SecretRef *string `pulumi:"secretRef"`
	// Trigger Parameter that uses the secret
	TriggerParameter *string `pulumi:"triggerParameter"`
}

// ScaleRuleAuthInput is an input type that accepts ScaleRuleAuthArgs and ScaleRuleAuthOutput values.
// You can construct a concrete instance of `ScaleRuleAuthInput` via:
//
//	ScaleRuleAuthArgs{...}
type ScaleRuleAuthInput interface {
	pulumi.Input

	ToScaleRuleAuthOutput() ScaleRuleAuthOutput
	ToScaleRuleAuthOutputWithContext(context.Context) ScaleRuleAuthOutput
}

// Auth Secrets for Azure Spring Apps App Instance Scale Rule
type ScaleRuleAuthArgs struct {
	// Name of the Azure Spring Apps App Instance secret from which to pull the auth params.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Trigger Parameter that uses the secret
	TriggerParameter pulumi.StringPtrInput `pulumi:"triggerParameter"`
}

func (ScaleRuleAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAuth)(nil)).Elem()
}

func (i ScaleRuleAuthArgs) ToScaleRuleAuthOutput() ScaleRuleAuthOutput {
	return i.ToScaleRuleAuthOutputWithContext(context.Background())
}

func (i ScaleRuleAuthArgs) ToScaleRuleAuthOutputWithContext(ctx context.Context) ScaleRuleAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAuthOutput)
}

// ScaleRuleAuthArrayInput is an input type that accepts ScaleRuleAuthArray and ScaleRuleAuthArrayOutput values.
// You can construct a concrete instance of `ScaleRuleAuthArrayInput` via:
//
//	ScaleRuleAuthArray{ ScaleRuleAuthArgs{...} }
type ScaleRuleAuthArrayInput interface {
	pulumi.Input

	ToScaleRuleAuthArrayOutput() ScaleRuleAuthArrayOutput
	ToScaleRuleAuthArrayOutputWithContext(context.Context) ScaleRuleAuthArrayOutput
}

type ScaleRuleAuthArray []ScaleRuleAuthInput

func (ScaleRuleAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAuth)(nil)).Elem()
}

func (i ScaleRuleAuthArray) ToScaleRuleAuthArrayOutput() ScaleRuleAuthArrayOutput {
	return i.ToScaleRuleAuthArrayOutputWithContext(context.Background())
}

func (i ScaleRuleAuthArray) ToScaleRuleAuthArrayOutputWithContext(ctx context.Context) ScaleRuleAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAuthArrayOutput)
}

// Auth Secrets for Azure Spring Apps App Instance Scale Rule
type ScaleRuleAuthOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAuth)(nil)).Elem()
}

func (o ScaleRuleAuthOutput) ToScaleRuleAuthOutput() ScaleRuleAuthOutput {
	return o
}

func (o ScaleRuleAuthOutput) ToScaleRuleAuthOutputWithContext(ctx context.Context) ScaleRuleAuthOutput {
	return o
}

// Name of the Azure Spring Apps App Instance secret from which to pull the auth params.
func (o ScaleRuleAuthOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuth) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Trigger Parameter that uses the secret
func (o ScaleRuleAuthOutput) TriggerParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuth) *string { return v.TriggerParameter }).(pulumi.StringPtrOutput)
}

type ScaleRuleAuthArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAuth)(nil)).Elem()
}

func (o ScaleRuleAuthArrayOutput) ToScaleRuleAuthArrayOutput() ScaleRuleAuthArrayOutput {
	return o
}

func (o ScaleRuleAuthArrayOutput) ToScaleRuleAuthArrayOutputWithContext(ctx context.Context) ScaleRuleAuthArrayOutput {
	return o
}

func (o ScaleRuleAuthArrayOutput) Index(i pulumi.IntInput) ScaleRuleAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAuth {
		return vs[0].([]ScaleRuleAuth)[vs[1].(int)]
	}).(ScaleRuleAuthOutput)
}

// Auth Secrets for Azure Spring Apps App Instance Scale Rule
type ScaleRuleAuthResponse struct {
	// Name of the Azure Spring Apps App Instance secret from which to pull the auth params.
	SecretRef *string `pulumi:"secretRef"`
	// Trigger Parameter that uses the secret
	TriggerParameter *string `pulumi:"triggerParameter"`
}

// Auth Secrets for Azure Spring Apps App Instance Scale Rule
type ScaleRuleAuthResponseOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAuthResponse)(nil)).Elem()
}

func (o ScaleRuleAuthResponseOutput) ToScaleRuleAuthResponseOutput() ScaleRuleAuthResponseOutput {
	return o
}

func (o ScaleRuleAuthResponseOutput) ToScaleRuleAuthResponseOutputWithContext(ctx context.Context) ScaleRuleAuthResponseOutput {
	return o
}

// Name of the Azure Spring Apps App Instance secret from which to pull the auth params.
func (o ScaleRuleAuthResponseOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuthResponse) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Trigger Parameter that uses the secret
func (o ScaleRuleAuthResponseOutput) TriggerParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuthResponse) *string { return v.TriggerParameter }).(pulumi.StringPtrOutput)
}

type ScaleRuleAuthResponseArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAuthResponse)(nil)).Elem()
}

func (o ScaleRuleAuthResponseArrayOutput) ToScaleRuleAuthResponseArrayOutput() ScaleRuleAuthResponseArrayOutput {
	return o
}

func (o ScaleRuleAuthResponseArrayOutput) ToScaleRuleAuthResponseArrayOutputWithContext(ctx context.Context) ScaleRuleAuthResponseArrayOutput {
	return o
}

func (o ScaleRuleAuthResponseArrayOutput) Index(i pulumi.IntInput) ScaleRuleAuthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAuthResponse {
		return vs[0].([]ScaleRuleAuthResponse)[vs[1].(int)]
	}).(ScaleRuleAuthResponseOutput)
}

// Azure Spring Apps App Instance scaling rule.
type ScaleRuleResponse struct {
	// Azure Queue based scaling.
	AzureQueue *QueueScaleRuleResponse `pulumi:"azureQueue"`
	// Custom scale rule.
	Custom *CustomScaleRuleResponse `pulumi:"custom"`
	// HTTP requests based scaling.
	Http *HttpScaleRuleResponse `pulumi:"http"`
	// Scale Rule Name
	Name *string `pulumi:"name"`
	// Tcp requests based scaling.
	Tcp *TcpScaleRuleResponse `pulumi:"tcp"`
}

// Azure Spring Apps App Instance scaling rule.
type ScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (ScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleResponse)(nil)).Elem()
}

func (o ScaleRuleResponseOutput) ToScaleRuleResponseOutput() ScaleRuleResponseOutput {
	return o
}

func (o ScaleRuleResponseOutput) ToScaleRuleResponseOutputWithContext(ctx context.Context) ScaleRuleResponseOutput {
	return o
}

// Azure Queue based scaling.
func (o ScaleRuleResponseOutput) AzureQueue() QueueScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *QueueScaleRuleResponse { return v.AzureQueue }).(QueueScaleRuleResponsePtrOutput)
}

// Custom scale rule.
func (o ScaleRuleResponseOutput) Custom() CustomScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *CustomScaleRuleResponse { return v.Custom }).(CustomScaleRuleResponsePtrOutput)
}

// HTTP requests based scaling.
func (o ScaleRuleResponseOutput) Http() HttpScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *HttpScaleRuleResponse { return v.Http }).(HttpScaleRuleResponsePtrOutput)
}

// Scale Rule Name
func (o ScaleRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tcp requests based scaling.
func (o ScaleRuleResponseOutput) Tcp() TcpScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *TcpScaleRuleResponse { return v.Tcp }).(TcpScaleRuleResponsePtrOutput)
}

type ScaleRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleResponse)(nil)).Elem()
}

func (o ScaleRuleResponseArrayOutput) ToScaleRuleResponseArrayOutput() ScaleRuleResponseArrayOutput {
	return o
}

func (o ScaleRuleResponseArrayOutput) ToScaleRuleResponseArrayOutputWithContext(ctx context.Context) ScaleRuleResponseArrayOutput {
	return o
}

func (o ScaleRuleResponseArrayOutput) Index(i pulumi.IntInput) ScaleRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleResponse {
		return vs[0].([]ScaleRuleResponse)[vs[1].(int)]
	}).(ScaleRuleResponseOutput)
}

// Secret definition.
type Secret struct {
	// Secret Name.
	Name *string `pulumi:"name"`
	// Secret Value.
	Value *string `pulumi:"value"`
}

// SecretInput is an input type that accepts SecretArgs and SecretOutput values.
// You can construct a concrete instance of `SecretInput` via:
//
//	SecretArgs{...}
type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(context.Context) SecretOutput
}

// Secret definition.
type SecretArgs struct {
	// Secret Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Secret Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (i SecretArgs) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i SecretArgs) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

// SecretArrayInput is an input type that accepts SecretArray and SecretArrayOutput values.
// You can construct a concrete instance of `SecretArrayInput` via:
//
//	SecretArray{ SecretArgs{...} }
type SecretArrayInput interface {
	pulumi.Input

	ToSecretArrayOutput() SecretArrayOutput
	ToSecretArrayOutputWithContext(context.Context) SecretArrayOutput
}

type SecretArray []SecretInput

func (SecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Secret)(nil)).Elem()
}

func (i SecretArray) ToSecretArrayOutput() SecretArrayOutput {
	return i.ToSecretArrayOutputWithContext(context.Background())
}

func (i SecretArray) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretArrayOutput)
}

// Secret definition.
type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// Secret Name.
func (o SecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Secret Value.
func (o SecretOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretArrayOutput struct{ *pulumi.OutputState }

func (SecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Secret)(nil)).Elem()
}

func (o SecretArrayOutput) ToSecretArrayOutput() SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) Index(i pulumi.IntInput) SecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Secret {
		return vs[0].([]Secret)[vs[1].(int)]
	}).(SecretOutput)
}

// Secret definition.
type SecretResponse struct {
	// Secret Name.
	Name *string `pulumi:"name"`
}

// Secret definition.
type SecretResponseOutput struct{ *pulumi.OutputState }

func (SecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretResponse)(nil)).Elem()
}

func (o SecretResponseOutput) ToSecretResponseOutput() SecretResponseOutput {
	return o
}

func (o SecretResponseOutput) ToSecretResponseOutputWithContext(ctx context.Context) SecretResponseOutput {
	return o
}

// Secret Name.
func (o SecretResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecretResponseArrayOutput struct{ *pulumi.OutputState }

func (SecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretResponse)(nil)).Elem()
}

func (o SecretResponseArrayOutput) ToSecretResponseArrayOutput() SecretResponseArrayOutput {
	return o
}

func (o SecretResponseArrayOutput) ToSecretResponseArrayOutputWithContext(ctx context.Context) SecretResponseArrayOutput {
	return o
}

func (o SecretResponseArrayOutput) Index(i pulumi.IntInput) SecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretResponse {
		return vs[0].([]SecretResponse)[vs[1].(int)]
	}).(SecretResponseOutput)
}

// Collection of instances belong to the Service Registry
type ServiceRegistryInstanceResponse struct {
	// Name of the Service Registry instance
	Name string `pulumi:"name"`
	// Status of the Service Registry instance
	Status string `pulumi:"status"`
}

// Collection of instances belong to the Service Registry
type ServiceRegistryInstanceResponseOutput struct{ *pulumi.OutputState }

func (ServiceRegistryInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistryInstanceResponse)(nil)).Elem()
}

func (o ServiceRegistryInstanceResponseOutput) ToServiceRegistryInstanceResponseOutput() ServiceRegistryInstanceResponseOutput {
	return o
}

func (o ServiceRegistryInstanceResponseOutput) ToServiceRegistryInstanceResponseOutputWithContext(ctx context.Context) ServiceRegistryInstanceResponseOutput {
	return o
}

// Name of the Service Registry instance
func (o ServiceRegistryInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRegistryInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Status of the Service Registry instance
func (o ServiceRegistryInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRegistryInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ServiceRegistryInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceRegistryInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRegistryInstanceResponse)(nil)).Elem()
}

func (o ServiceRegistryInstanceResponseArrayOutput) ToServiceRegistryInstanceResponseArrayOutput() ServiceRegistryInstanceResponseArrayOutput {
	return o
}

func (o ServiceRegistryInstanceResponseArrayOutput) ToServiceRegistryInstanceResponseArrayOutputWithContext(ctx context.Context) ServiceRegistryInstanceResponseArrayOutput {
	return o
}

func (o ServiceRegistryInstanceResponseArrayOutput) Index(i pulumi.IntInput) ServiceRegistryInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRegistryInstanceResponse {
		return vs[0].([]ServiceRegistryInstanceResponse)[vs[1].(int)]
	}).(ServiceRegistryInstanceResponseOutput)
}

// Service Registry properties payload
type ServiceRegistryPropertiesResponse struct {
	// Collection of instances belong to Service Registry.
	Instances []ServiceRegistryInstanceResponse `pulumi:"instances"`
	// State of the Service Registry.
	ProvisioningState string `pulumi:"provisioningState"`
	// The requested resource quantity for required CPU and Memory.
	ResourceRequests ServiceRegistryResourceRequestsResponse `pulumi:"resourceRequests"`
}

// Service Registry properties payload
type ServiceRegistryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServiceRegistryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistryPropertiesResponse)(nil)).Elem()
}

func (o ServiceRegistryPropertiesResponseOutput) ToServiceRegistryPropertiesResponseOutput() ServiceRegistryPropertiesResponseOutput {
	return o
}

func (o ServiceRegistryPropertiesResponseOutput) ToServiceRegistryPropertiesResponseOutputWithContext(ctx context.Context) ServiceRegistryPropertiesResponseOutput {
	return o
}

// Collection of instances belong to Service Registry.
func (o ServiceRegistryPropertiesResponseOutput) Instances() ServiceRegistryInstanceResponseArrayOutput {
	return o.ApplyT(func(v ServiceRegistryPropertiesResponse) []ServiceRegistryInstanceResponse { return v.Instances }).(ServiceRegistryInstanceResponseArrayOutput)
}

// State of the Service Registry.
func (o ServiceRegistryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRegistryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The requested resource quantity for required CPU and Memory.
func (o ServiceRegistryPropertiesResponseOutput) ResourceRequests() ServiceRegistryResourceRequestsResponseOutput {
	return o.ApplyT(func(v ServiceRegistryPropertiesResponse) ServiceRegistryResourceRequestsResponse {
		return v.ResourceRequests
	}).(ServiceRegistryResourceRequestsResponseOutput)
}

// Resource request payload of Service Registry
type ServiceRegistryResourceRequestsResponse struct {
	// Cpu allocated to each Service Registry instance
	Cpu string `pulumi:"cpu"`
	// Instance count of the Service Registry
	InstanceCount int `pulumi:"instanceCount"`
	// Memory allocated to each Service Registry instance
	Memory string `pulumi:"memory"`
}

// Resource request payload of Service Registry
type ServiceRegistryResourceRequestsResponseOutput struct{ *pulumi.OutputState }

func (ServiceRegistryResourceRequestsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistryResourceRequestsResponse)(nil)).Elem()
}

func (o ServiceRegistryResourceRequestsResponseOutput) ToServiceRegistryResourceRequestsResponseOutput() ServiceRegistryResourceRequestsResponseOutput {
	return o
}

func (o ServiceRegistryResourceRequestsResponseOutput) ToServiceRegistryResourceRequestsResponseOutputWithContext(ctx context.Context) ServiceRegistryResourceRequestsResponseOutput {
	return o
}

// Cpu allocated to each Service Registry instance
func (o ServiceRegistryResourceRequestsResponseOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRegistryResourceRequestsResponse) string { return v.Cpu }).(pulumi.StringOutput)
}

// Instance count of the Service Registry
func (o ServiceRegistryResourceRequestsResponseOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceRegistryResourceRequestsResponse) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Memory allocated to each Service Registry instance
func (o ServiceRegistryResourceRequestsResponseOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRegistryResourceRequestsResponse) string { return v.Memory }).(pulumi.StringOutput)
}

// Additional Service settings in vnet injection instance
type ServiceVNetAddons struct {
	// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
	DataPlanePublicEndpoint *bool `pulumi:"dataPlanePublicEndpoint"`
	// Indicates whether the log stream in vnet injection instance could be accessed from internet.
	LogStreamPublicEndpoint *bool `pulumi:"logStreamPublicEndpoint"`
}

// Defaults sets the appropriate defaults for ServiceVNetAddons
func (val *ServiceVNetAddons) Defaults() *ServiceVNetAddons {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataPlanePublicEndpoint == nil {
		dataPlanePublicEndpoint_ := false
		tmp.DataPlanePublicEndpoint = &dataPlanePublicEndpoint_
	}
	if tmp.LogStreamPublicEndpoint == nil {
		logStreamPublicEndpoint_ := false
		tmp.LogStreamPublicEndpoint = &logStreamPublicEndpoint_
	}
	return &tmp
}

// ServiceVNetAddonsInput is an input type that accepts ServiceVNetAddonsArgs and ServiceVNetAddonsOutput values.
// You can construct a concrete instance of `ServiceVNetAddonsInput` via:
//
//	ServiceVNetAddonsArgs{...}
type ServiceVNetAddonsInput interface {
	pulumi.Input

	ToServiceVNetAddonsOutput() ServiceVNetAddonsOutput
	ToServiceVNetAddonsOutputWithContext(context.Context) ServiceVNetAddonsOutput
}

// Additional Service settings in vnet injection instance
type ServiceVNetAddonsArgs struct {
	// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
	DataPlanePublicEndpoint pulumi.BoolPtrInput `pulumi:"dataPlanePublicEndpoint"`
	// Indicates whether the log stream in vnet injection instance could be accessed from internet.
	LogStreamPublicEndpoint pulumi.BoolPtrInput `pulumi:"logStreamPublicEndpoint"`
}

// Defaults sets the appropriate defaults for ServiceVNetAddonsArgs
func (val *ServiceVNetAddonsArgs) Defaults() *ServiceVNetAddonsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataPlanePublicEndpoint == nil {
		tmp.DataPlanePublicEndpoint = pulumi.BoolPtr(false)
	}
	if tmp.LogStreamPublicEndpoint == nil {
		tmp.LogStreamPublicEndpoint = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ServiceVNetAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVNetAddons)(nil)).Elem()
}

func (i ServiceVNetAddonsArgs) ToServiceVNetAddonsOutput() ServiceVNetAddonsOutput {
	return i.ToServiceVNetAddonsOutputWithContext(context.Background())
}

func (i ServiceVNetAddonsArgs) ToServiceVNetAddonsOutputWithContext(ctx context.Context) ServiceVNetAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVNetAddonsOutput)
}

func (i ServiceVNetAddonsArgs) ToServiceVNetAddonsPtrOutput() ServiceVNetAddonsPtrOutput {
	return i.ToServiceVNetAddonsPtrOutputWithContext(context.Background())
}

func (i ServiceVNetAddonsArgs) ToServiceVNetAddonsPtrOutputWithContext(ctx context.Context) ServiceVNetAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVNetAddonsOutput).ToServiceVNetAddonsPtrOutputWithContext(ctx)
}

// ServiceVNetAddonsPtrInput is an input type that accepts ServiceVNetAddonsArgs, ServiceVNetAddonsPtr and ServiceVNetAddonsPtrOutput values.
// You can construct a concrete instance of `ServiceVNetAddonsPtrInput` via:
//
//	        ServiceVNetAddonsArgs{...}
//
//	or:
//
//	        nil
type ServiceVNetAddonsPtrInput interface {
	pulumi.Input

	ToServiceVNetAddonsPtrOutput() ServiceVNetAddonsPtrOutput
	ToServiceVNetAddonsPtrOutputWithContext(context.Context) ServiceVNetAddonsPtrOutput
}

type serviceVNetAddonsPtrType ServiceVNetAddonsArgs

func ServiceVNetAddonsPtr(v *ServiceVNetAddonsArgs) ServiceVNetAddonsPtrInput {
	return (*serviceVNetAddonsPtrType)(v)
}

func (*serviceVNetAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVNetAddons)(nil)).Elem()
}

func (i *serviceVNetAddonsPtrType) ToServiceVNetAddonsPtrOutput() ServiceVNetAddonsPtrOutput {
	return i.ToServiceVNetAddonsPtrOutputWithContext(context.Background())
}

func (i *serviceVNetAddonsPtrType) ToServiceVNetAddonsPtrOutputWithContext(ctx context.Context) ServiceVNetAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVNetAddonsPtrOutput)
}

// Additional Service settings in vnet injection instance
type ServiceVNetAddonsOutput struct{ *pulumi.OutputState }

func (ServiceVNetAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVNetAddons)(nil)).Elem()
}

func (o ServiceVNetAddonsOutput) ToServiceVNetAddonsOutput() ServiceVNetAddonsOutput {
	return o
}

func (o ServiceVNetAddonsOutput) ToServiceVNetAddonsOutputWithContext(ctx context.Context) ServiceVNetAddonsOutput {
	return o
}

func (o ServiceVNetAddonsOutput) ToServiceVNetAddonsPtrOutput() ServiceVNetAddonsPtrOutput {
	return o.ToServiceVNetAddonsPtrOutputWithContext(context.Background())
}

func (o ServiceVNetAddonsOutput) ToServiceVNetAddonsPtrOutputWithContext(ctx context.Context) ServiceVNetAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceVNetAddons) *ServiceVNetAddons {
		return &v
	}).(ServiceVNetAddonsPtrOutput)
}

// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsOutput) DataPlanePublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceVNetAddons) *bool { return v.DataPlanePublicEndpoint }).(pulumi.BoolPtrOutput)
}

// Indicates whether the log stream in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsOutput) LogStreamPublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceVNetAddons) *bool { return v.LogStreamPublicEndpoint }).(pulumi.BoolPtrOutput)
}

type ServiceVNetAddonsPtrOutput struct{ *pulumi.OutputState }

func (ServiceVNetAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVNetAddons)(nil)).Elem()
}

func (o ServiceVNetAddonsPtrOutput) ToServiceVNetAddonsPtrOutput() ServiceVNetAddonsPtrOutput {
	return o
}

func (o ServiceVNetAddonsPtrOutput) ToServiceVNetAddonsPtrOutputWithContext(ctx context.Context) ServiceVNetAddonsPtrOutput {
	return o
}

func (o ServiceVNetAddonsPtrOutput) Elem() ServiceVNetAddonsOutput {
	return o.ApplyT(func(v *ServiceVNetAddons) ServiceVNetAddons {
		if v != nil {
			return *v
		}
		var ret ServiceVNetAddons
		return ret
	}).(ServiceVNetAddonsOutput)
}

// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsPtrOutput) DataPlanePublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceVNetAddons) *bool {
		if v == nil {
			return nil
		}
		return v.DataPlanePublicEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the log stream in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsPtrOutput) LogStreamPublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceVNetAddons) *bool {
		if v == nil {
			return nil
		}
		return v.LogStreamPublicEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Additional Service settings in vnet injection instance
type ServiceVNetAddonsResponse struct {
	// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
	DataPlanePublicEndpoint *bool `pulumi:"dataPlanePublicEndpoint"`
	// Indicates whether the log stream in vnet injection instance could be accessed from internet.
	LogStreamPublicEndpoint *bool `pulumi:"logStreamPublicEndpoint"`
}

// Defaults sets the appropriate defaults for ServiceVNetAddonsResponse
func (val *ServiceVNetAddonsResponse) Defaults() *ServiceVNetAddonsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataPlanePublicEndpoint == nil {
		dataPlanePublicEndpoint_ := false
		tmp.DataPlanePublicEndpoint = &dataPlanePublicEndpoint_
	}
	if tmp.LogStreamPublicEndpoint == nil {
		logStreamPublicEndpoint_ := false
		tmp.LogStreamPublicEndpoint = &logStreamPublicEndpoint_
	}
	return &tmp
}

// Additional Service settings in vnet injection instance
type ServiceVNetAddonsResponseOutput struct{ *pulumi.OutputState }

func (ServiceVNetAddonsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVNetAddonsResponse)(nil)).Elem()
}

func (o ServiceVNetAddonsResponseOutput) ToServiceVNetAddonsResponseOutput() ServiceVNetAddonsResponseOutput {
	return o
}

func (o ServiceVNetAddonsResponseOutput) ToServiceVNetAddonsResponseOutputWithContext(ctx context.Context) ServiceVNetAddonsResponseOutput {
	return o
}

// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsResponseOutput) DataPlanePublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceVNetAddonsResponse) *bool { return v.DataPlanePublicEndpoint }).(pulumi.BoolPtrOutput)
}

// Indicates whether the log stream in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsResponseOutput) LogStreamPublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceVNetAddonsResponse) *bool { return v.LogStreamPublicEndpoint }).(pulumi.BoolPtrOutput)
}

type ServiceVNetAddonsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceVNetAddonsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVNetAddonsResponse)(nil)).Elem()
}

func (o ServiceVNetAddonsResponsePtrOutput) ToServiceVNetAddonsResponsePtrOutput() ServiceVNetAddonsResponsePtrOutput {
	return o
}

func (o ServiceVNetAddonsResponsePtrOutput) ToServiceVNetAddonsResponsePtrOutputWithContext(ctx context.Context) ServiceVNetAddonsResponsePtrOutput {
	return o
}

func (o ServiceVNetAddonsResponsePtrOutput) Elem() ServiceVNetAddonsResponseOutput {
	return o.ApplyT(func(v *ServiceVNetAddonsResponse) ServiceVNetAddonsResponse {
		if v != nil {
			return *v
		}
		var ret ServiceVNetAddonsResponse
		return ret
	}).(ServiceVNetAddonsResponseOutput)
}

// Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsResponsePtrOutput) DataPlanePublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceVNetAddonsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DataPlanePublicEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the log stream in vnet injection instance could be accessed from internet.
func (o ServiceVNetAddonsResponsePtrOutput) LogStreamPublicEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceVNetAddonsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.LogStreamPublicEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Sku of Azure Spring Apps
type Sku struct {
	// Current capacity of the target resource
	Capacity *int `pulumi:"capacity"`
	// Name of the Sku
	Name *string `pulumi:"name"`
	// Tier of the Sku
	Tier *string `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for Sku
func (val *Sku) Defaults() *Sku {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := "S0"
		tmp.Name = &name_
	}
	if tmp.Tier == nil {
		tier_ := "Standard"
		tmp.Tier = &tier_
	}
	return &tmp
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Sku of Azure Spring Apps
type SkuArgs struct {
	// Current capacity of the target resource
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of the Sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the Sku
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for SkuArgs
func (val *SkuArgs) Defaults() *SkuArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("S0")
	}
	if tmp.Tier == nil {
		tmp.Tier = pulumi.StringPtr("Standard")
	}
	return &tmp
}
func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Sku of Azure Spring Apps
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Current capacity of the target resource
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of the Sku
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the Sku
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// Current capacity of the target resource
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of the Sku
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the Sku
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku of Azure Spring Apps
type SkuResponse struct {
	// Current capacity of the target resource
	Capacity *int `pulumi:"capacity"`
	// Name of the Sku
	Name *string `pulumi:"name"`
	// Tier of the Sku
	Tier *string `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for SkuResponse
func (val *SkuResponse) Defaults() *SkuResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := "S0"
		tmp.Name = &name_
	}
	if tmp.Tier == nil {
		tier_ := "Standard"
		tmp.Tier = &tier_
	}
	return &tmp
}

// Sku of Azure Spring Apps
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Current capacity of the target resource
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of the Sku
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the Sku
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// Current capacity of the target resource
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of the Sku
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the Sku
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Uploaded Java source code binary for a deployment
type SourceUploadedUserSourceInfo struct {
	// Selector for the artifact to be used for the deployment for multi-module projects. This should be
	// the relative path to the target module/project.
	ArtifactSelector *string `pulumi:"artifactSelector"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the source file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'Source'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// SourceUploadedUserSourceInfoInput is an input type that accepts SourceUploadedUserSourceInfoArgs and SourceUploadedUserSourceInfoOutput values.
// You can construct a concrete instance of `SourceUploadedUserSourceInfoInput` via:
//
//	SourceUploadedUserSourceInfoArgs{...}
type SourceUploadedUserSourceInfoInput interface {
	pulumi.Input

	ToSourceUploadedUserSourceInfoOutput() SourceUploadedUserSourceInfoOutput
	ToSourceUploadedUserSourceInfoOutputWithContext(context.Context) SourceUploadedUserSourceInfoOutput
}

// Uploaded Java source code binary for a deployment
type SourceUploadedUserSourceInfoArgs struct {
	// Selector for the artifact to be used for the deployment for multi-module projects. This should be
	// the relative path to the target module/project.
	ArtifactSelector pulumi.StringPtrInput `pulumi:"artifactSelector"`
	// Relative path of the storage which stores the source
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// Runtime version of the source file
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'Source'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SourceUploadedUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceUploadedUserSourceInfo)(nil)).Elem()
}

func (i SourceUploadedUserSourceInfoArgs) ToSourceUploadedUserSourceInfoOutput() SourceUploadedUserSourceInfoOutput {
	return i.ToSourceUploadedUserSourceInfoOutputWithContext(context.Background())
}

func (i SourceUploadedUserSourceInfoArgs) ToSourceUploadedUserSourceInfoOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceUploadedUserSourceInfoOutput)
}

func (i SourceUploadedUserSourceInfoArgs) ToSourceUploadedUserSourceInfoPtrOutput() SourceUploadedUserSourceInfoPtrOutput {
	return i.ToSourceUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i SourceUploadedUserSourceInfoArgs) ToSourceUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceUploadedUserSourceInfoOutput).ToSourceUploadedUserSourceInfoPtrOutputWithContext(ctx)
}

// SourceUploadedUserSourceInfoPtrInput is an input type that accepts SourceUploadedUserSourceInfoArgs, SourceUploadedUserSourceInfoPtr and SourceUploadedUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `SourceUploadedUserSourceInfoPtrInput` via:
//
//	        SourceUploadedUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type SourceUploadedUserSourceInfoPtrInput interface {
	pulumi.Input

	ToSourceUploadedUserSourceInfoPtrOutput() SourceUploadedUserSourceInfoPtrOutput
	ToSourceUploadedUserSourceInfoPtrOutputWithContext(context.Context) SourceUploadedUserSourceInfoPtrOutput
}

type sourceUploadedUserSourceInfoPtrType SourceUploadedUserSourceInfoArgs

func SourceUploadedUserSourceInfoPtr(v *SourceUploadedUserSourceInfoArgs) SourceUploadedUserSourceInfoPtrInput {
	return (*sourceUploadedUserSourceInfoPtrType)(v)
}

func (*sourceUploadedUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceUploadedUserSourceInfo)(nil)).Elem()
}

func (i *sourceUploadedUserSourceInfoPtrType) ToSourceUploadedUserSourceInfoPtrOutput() SourceUploadedUserSourceInfoPtrOutput {
	return i.ToSourceUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *sourceUploadedUserSourceInfoPtrType) ToSourceUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceUploadedUserSourceInfoPtrOutput)
}

// Uploaded Java source code binary for a deployment
type SourceUploadedUserSourceInfoOutput struct{ *pulumi.OutputState }

func (SourceUploadedUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceUploadedUserSourceInfo)(nil)).Elem()
}

func (o SourceUploadedUserSourceInfoOutput) ToSourceUploadedUserSourceInfoOutput() SourceUploadedUserSourceInfoOutput {
	return o
}

func (o SourceUploadedUserSourceInfoOutput) ToSourceUploadedUserSourceInfoOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoOutput {
	return o
}

func (o SourceUploadedUserSourceInfoOutput) ToSourceUploadedUserSourceInfoPtrOutput() SourceUploadedUserSourceInfoPtrOutput {
	return o.ToSourceUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o SourceUploadedUserSourceInfoOutput) ToSourceUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceUploadedUserSourceInfo) *SourceUploadedUserSourceInfo {
		return &v
	}).(SourceUploadedUserSourceInfoPtrOutput)
}

// Selector for the artifact to be used for the deployment for multi-module projects. This should be
// the relative path to the target module/project.
func (o SourceUploadedUserSourceInfoOutput) ArtifactSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfo) *string { return v.ArtifactSelector }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o SourceUploadedUserSourceInfoOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfo) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the source file
func (o SourceUploadedUserSourceInfoOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfo) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Source'.
func (o SourceUploadedUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o SourceUploadedUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SourceUploadedUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (SourceUploadedUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceUploadedUserSourceInfo)(nil)).Elem()
}

func (o SourceUploadedUserSourceInfoPtrOutput) ToSourceUploadedUserSourceInfoPtrOutput() SourceUploadedUserSourceInfoPtrOutput {
	return o
}

func (o SourceUploadedUserSourceInfoPtrOutput) ToSourceUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoPtrOutput {
	return o
}

func (o SourceUploadedUserSourceInfoPtrOutput) Elem() SourceUploadedUserSourceInfoOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfo) SourceUploadedUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret SourceUploadedUserSourceInfo
		return ret
	}).(SourceUploadedUserSourceInfoOutput)
}

// Selector for the artifact to be used for the deployment for multi-module projects. This should be
// the relative path to the target module/project.
func (o SourceUploadedUserSourceInfoPtrOutput) ArtifactSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactSelector
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o SourceUploadedUserSourceInfoPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the source file
func (o SourceUploadedUserSourceInfoPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Source'.
func (o SourceUploadedUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o SourceUploadedUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Uploaded Java source code binary for a deployment
type SourceUploadedUserSourceInfoResponse struct {
	// Selector for the artifact to be used for the deployment for multi-module projects. This should be
	// the relative path to the target module/project.
	ArtifactSelector *string `pulumi:"artifactSelector"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the source file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Type of the source uploaded
	// Expected value is 'Source'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Uploaded Java source code binary for a deployment
type SourceUploadedUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (SourceUploadedUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o SourceUploadedUserSourceInfoResponseOutput) ToSourceUploadedUserSourceInfoResponseOutput() SourceUploadedUserSourceInfoResponseOutput {
	return o
}

func (o SourceUploadedUserSourceInfoResponseOutput) ToSourceUploadedUserSourceInfoResponseOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoResponseOutput {
	return o
}

// Selector for the artifact to be used for the deployment for multi-module projects. This should be
// the relative path to the target module/project.
func (o SourceUploadedUserSourceInfoResponseOutput) ArtifactSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfoResponse) *string { return v.ArtifactSelector }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o SourceUploadedUserSourceInfoResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfoResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the source file
func (o SourceUploadedUserSourceInfoResponseOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfoResponse) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Source'.
func (o SourceUploadedUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o SourceUploadedUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceUploadedUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SourceUploadedUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceUploadedUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o SourceUploadedUserSourceInfoResponsePtrOutput) ToSourceUploadedUserSourceInfoResponsePtrOutput() SourceUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o SourceUploadedUserSourceInfoResponsePtrOutput) ToSourceUploadedUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) SourceUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o SourceUploadedUserSourceInfoResponsePtrOutput) Elem() SourceUploadedUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfoResponse) SourceUploadedUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret SourceUploadedUserSourceInfoResponse
		return ret
	}).(SourceUploadedUserSourceInfoResponseOutput)
}

// Selector for the artifact to be used for the deployment for multi-module projects. This should be
// the relative path to the target module/project.
func (o SourceUploadedUserSourceInfoResponsePtrOutput) ArtifactSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactSelector
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o SourceUploadedUserSourceInfoResponsePtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the source file
func (o SourceUploadedUserSourceInfoResponsePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'Source'.
func (o SourceUploadedUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o SourceUploadedUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Single sign-on related configuration
type SsoProperties struct {
	// The public identifier for the application
	ClientId *string `pulumi:"clientId"`
	// The secret known only to the application and the authorization server
	ClientSecret *string `pulumi:"clientSecret"`
	// The URI of Issuer Identifier
	IssuerUri *string `pulumi:"issuerUri"`
	// It defines the specific actions applications can be allowed to do on a user's behalf
	Scope []string `pulumi:"scope"`
}

// SsoPropertiesInput is an input type that accepts SsoPropertiesArgs and SsoPropertiesOutput values.
// You can construct a concrete instance of `SsoPropertiesInput` via:
//
//	SsoPropertiesArgs{...}
type SsoPropertiesInput interface {
	pulumi.Input

	ToSsoPropertiesOutput() SsoPropertiesOutput
	ToSsoPropertiesOutputWithContext(context.Context) SsoPropertiesOutput
}

// Single sign-on related configuration
type SsoPropertiesArgs struct {
	// The public identifier for the application
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The secret known only to the application and the authorization server
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// The URI of Issuer Identifier
	IssuerUri pulumi.StringPtrInput `pulumi:"issuerUri"`
	// It defines the specific actions applications can be allowed to do on a user's behalf
	Scope pulumi.StringArrayInput `pulumi:"scope"`
}

func (SsoPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoProperties)(nil)).Elem()
}

func (i SsoPropertiesArgs) ToSsoPropertiesOutput() SsoPropertiesOutput {
	return i.ToSsoPropertiesOutputWithContext(context.Background())
}

func (i SsoPropertiesArgs) ToSsoPropertiesOutputWithContext(ctx context.Context) SsoPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoPropertiesOutput)
}

func (i SsoPropertiesArgs) ToSsoPropertiesPtrOutput() SsoPropertiesPtrOutput {
	return i.ToSsoPropertiesPtrOutputWithContext(context.Background())
}

func (i SsoPropertiesArgs) ToSsoPropertiesPtrOutputWithContext(ctx context.Context) SsoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoPropertiesOutput).ToSsoPropertiesPtrOutputWithContext(ctx)
}

// SsoPropertiesPtrInput is an input type that accepts SsoPropertiesArgs, SsoPropertiesPtr and SsoPropertiesPtrOutput values.
// You can construct a concrete instance of `SsoPropertiesPtrInput` via:
//
//	        SsoPropertiesArgs{...}
//
//	or:
//
//	        nil
type SsoPropertiesPtrInput interface {
	pulumi.Input

	ToSsoPropertiesPtrOutput() SsoPropertiesPtrOutput
	ToSsoPropertiesPtrOutputWithContext(context.Context) SsoPropertiesPtrOutput
}

type ssoPropertiesPtrType SsoPropertiesArgs

func SsoPropertiesPtr(v *SsoPropertiesArgs) SsoPropertiesPtrInput {
	return (*ssoPropertiesPtrType)(v)
}

func (*ssoPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoProperties)(nil)).Elem()
}

func (i *ssoPropertiesPtrType) ToSsoPropertiesPtrOutput() SsoPropertiesPtrOutput {
	return i.ToSsoPropertiesPtrOutputWithContext(context.Background())
}

func (i *ssoPropertiesPtrType) ToSsoPropertiesPtrOutputWithContext(ctx context.Context) SsoPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoPropertiesPtrOutput)
}

// Single sign-on related configuration
type SsoPropertiesOutput struct{ *pulumi.OutputState }

func (SsoPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoProperties)(nil)).Elem()
}

func (o SsoPropertiesOutput) ToSsoPropertiesOutput() SsoPropertiesOutput {
	return o
}

func (o SsoPropertiesOutput) ToSsoPropertiesOutputWithContext(ctx context.Context) SsoPropertiesOutput {
	return o
}

func (o SsoPropertiesOutput) ToSsoPropertiesPtrOutput() SsoPropertiesPtrOutput {
	return o.ToSsoPropertiesPtrOutputWithContext(context.Background())
}

func (o SsoPropertiesOutput) ToSsoPropertiesPtrOutputWithContext(ctx context.Context) SsoPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsoProperties) *SsoProperties {
		return &v
	}).(SsoPropertiesPtrOutput)
}

// The public identifier for the application
func (o SsoPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o SsoPropertiesOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoProperties) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The URI of Issuer Identifier
func (o SsoPropertiesOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoProperties) *string { return v.IssuerUri }).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o SsoPropertiesOutput) Scope() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SsoProperties) []string { return v.Scope }).(pulumi.StringArrayOutput)
}

type SsoPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SsoPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoProperties)(nil)).Elem()
}

func (o SsoPropertiesPtrOutput) ToSsoPropertiesPtrOutput() SsoPropertiesPtrOutput {
	return o
}

func (o SsoPropertiesPtrOutput) ToSsoPropertiesPtrOutputWithContext(ctx context.Context) SsoPropertiesPtrOutput {
	return o
}

func (o SsoPropertiesPtrOutput) Elem() SsoPropertiesOutput {
	return o.ApplyT(func(v *SsoProperties) SsoProperties {
		if v != nil {
			return *v
		}
		var ret SsoProperties
		return ret
	}).(SsoPropertiesOutput)
}

// The public identifier for the application
func (o SsoPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o SsoPropertiesPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The URI of Issuer Identifier
func (o SsoPropertiesPtrOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoProperties) *string {
		if v == nil {
			return nil
		}
		return v.IssuerUri
	}).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o SsoPropertiesPtrOutput) Scope() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SsoProperties) []string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringArrayOutput)
}

// Single sign-on related configuration
type SsoPropertiesResponse struct {
	// The public identifier for the application
	ClientId *string `pulumi:"clientId"`
	// The secret known only to the application and the authorization server
	ClientSecret *string `pulumi:"clientSecret"`
	// The URI of Issuer Identifier
	IssuerUri *string `pulumi:"issuerUri"`
	// It defines the specific actions applications can be allowed to do on a user's behalf
	Scope []string `pulumi:"scope"`
}

// Single sign-on related configuration
type SsoPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SsoPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoPropertiesResponse)(nil)).Elem()
}

func (o SsoPropertiesResponseOutput) ToSsoPropertiesResponseOutput() SsoPropertiesResponseOutput {
	return o
}

func (o SsoPropertiesResponseOutput) ToSsoPropertiesResponseOutputWithContext(ctx context.Context) SsoPropertiesResponseOutput {
	return o
}

// The public identifier for the application
func (o SsoPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o SsoPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The URI of Issuer Identifier
func (o SsoPropertiesResponseOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoPropertiesResponse) *string { return v.IssuerUri }).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o SsoPropertiesResponseOutput) Scope() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SsoPropertiesResponse) []string { return v.Scope }).(pulumi.StringArrayOutput)
}

type SsoPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SsoPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoPropertiesResponse)(nil)).Elem()
}

func (o SsoPropertiesResponsePtrOutput) ToSsoPropertiesResponsePtrOutput() SsoPropertiesResponsePtrOutput {
	return o
}

func (o SsoPropertiesResponsePtrOutput) ToSsoPropertiesResponsePtrOutputWithContext(ctx context.Context) SsoPropertiesResponsePtrOutput {
	return o
}

func (o SsoPropertiesResponsePtrOutput) Elem() SsoPropertiesResponseOutput {
	return o.ApplyT(func(v *SsoPropertiesResponse) SsoPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SsoPropertiesResponse
		return ret
	}).(SsoPropertiesResponseOutput)
}

// The public identifier for the application
func (o SsoPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret known only to the application and the authorization server
func (o SsoPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The URI of Issuer Identifier
func (o SsoPropertiesResponsePtrOutput) IssuerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IssuerUri
	}).(pulumi.StringPtrOutput)
}

// It defines the specific actions applications can be allowed to do on a user's behalf
func (o SsoPropertiesResponsePtrOutput) Scope() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SsoPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringArrayOutput)
}

// KPack ClusterStack properties payload
type StackProperties struct {
	// Id of the ClusterStack.
	Id *string `pulumi:"id"`
	// Version of the ClusterStack
	Version *string `pulumi:"version"`
}

// StackPropertiesInput is an input type that accepts StackPropertiesArgs and StackPropertiesOutput values.
// You can construct a concrete instance of `StackPropertiesInput` via:
//
//	StackPropertiesArgs{...}
type StackPropertiesInput interface {
	pulumi.Input

	ToStackPropertiesOutput() StackPropertiesOutput
	ToStackPropertiesOutputWithContext(context.Context) StackPropertiesOutput
}

// KPack ClusterStack properties payload
type StackPropertiesArgs struct {
	// Id of the ClusterStack.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Version of the ClusterStack
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StackPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackProperties)(nil)).Elem()
}

func (i StackPropertiesArgs) ToStackPropertiesOutput() StackPropertiesOutput {
	return i.ToStackPropertiesOutputWithContext(context.Background())
}

func (i StackPropertiesArgs) ToStackPropertiesOutputWithContext(ctx context.Context) StackPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackPropertiesOutput)
}

func (i StackPropertiesArgs) ToStackPropertiesPtrOutput() StackPropertiesPtrOutput {
	return i.ToStackPropertiesPtrOutputWithContext(context.Background())
}

func (i StackPropertiesArgs) ToStackPropertiesPtrOutputWithContext(ctx context.Context) StackPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackPropertiesOutput).ToStackPropertiesPtrOutputWithContext(ctx)
}

// StackPropertiesPtrInput is an input type that accepts StackPropertiesArgs, StackPropertiesPtr and StackPropertiesPtrOutput values.
// You can construct a concrete instance of `StackPropertiesPtrInput` via:
//
//	        StackPropertiesArgs{...}
//
//	or:
//
//	        nil
type StackPropertiesPtrInput interface {
	pulumi.Input

	ToStackPropertiesPtrOutput() StackPropertiesPtrOutput
	ToStackPropertiesPtrOutputWithContext(context.Context) StackPropertiesPtrOutput
}

type stackPropertiesPtrType StackPropertiesArgs

func StackPropertiesPtr(v *StackPropertiesArgs) StackPropertiesPtrInput {
	return (*stackPropertiesPtrType)(v)
}

func (*stackPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackProperties)(nil)).Elem()
}

func (i *stackPropertiesPtrType) ToStackPropertiesPtrOutput() StackPropertiesPtrOutput {
	return i.ToStackPropertiesPtrOutputWithContext(context.Background())
}

func (i *stackPropertiesPtrType) ToStackPropertiesPtrOutputWithContext(ctx context.Context) StackPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackPropertiesPtrOutput)
}

// KPack ClusterStack properties payload
type StackPropertiesOutput struct{ *pulumi.OutputState }

func (StackPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackProperties)(nil)).Elem()
}

func (o StackPropertiesOutput) ToStackPropertiesOutput() StackPropertiesOutput {
	return o
}

func (o StackPropertiesOutput) ToStackPropertiesOutputWithContext(ctx context.Context) StackPropertiesOutput {
	return o
}

func (o StackPropertiesOutput) ToStackPropertiesPtrOutput() StackPropertiesPtrOutput {
	return o.ToStackPropertiesPtrOutputWithContext(context.Background())
}

func (o StackPropertiesOutput) ToStackPropertiesPtrOutputWithContext(ctx context.Context) StackPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackProperties) *StackProperties {
		return &v
	}).(StackPropertiesPtrOutput)
}

// Id of the ClusterStack.
func (o StackPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Version of the ClusterStack
func (o StackPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StackPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StackPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackProperties)(nil)).Elem()
}

func (o StackPropertiesPtrOutput) ToStackPropertiesPtrOutput() StackPropertiesPtrOutput {
	return o
}

func (o StackPropertiesPtrOutput) ToStackPropertiesPtrOutputWithContext(ctx context.Context) StackPropertiesPtrOutput {
	return o
}

func (o StackPropertiesPtrOutput) Elem() StackPropertiesOutput {
	return o.ApplyT(func(v *StackProperties) StackProperties {
		if v != nil {
			return *v
		}
		var ret StackProperties
		return ret
	}).(StackPropertiesOutput)
}

// Id of the ClusterStack.
func (o StackPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Version of the ClusterStack
func (o StackPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// KPack ClusterStack properties payload
type StackPropertiesResponse struct {
	// Id of the ClusterStack.
	Id *string `pulumi:"id"`
	// Version of the ClusterStack
	Version *string `pulumi:"version"`
}

// KPack ClusterStack properties payload
type StackPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StackPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackPropertiesResponse)(nil)).Elem()
}

func (o StackPropertiesResponseOutput) ToStackPropertiesResponseOutput() StackPropertiesResponseOutput {
	return o
}

func (o StackPropertiesResponseOutput) ToStackPropertiesResponseOutputWithContext(ctx context.Context) StackPropertiesResponseOutput {
	return o
}

// Id of the ClusterStack.
func (o StackPropertiesResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackPropertiesResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Version of the ClusterStack
func (o StackPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StackPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StackPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackPropertiesResponse)(nil)).Elem()
}

func (o StackPropertiesResponsePtrOutput) ToStackPropertiesResponsePtrOutput() StackPropertiesResponsePtrOutput {
	return o
}

func (o StackPropertiesResponsePtrOutput) ToStackPropertiesResponsePtrOutputWithContext(ctx context.Context) StackPropertiesResponsePtrOutput {
	return o
}

func (o StackPropertiesResponsePtrOutput) Elem() StackPropertiesResponseOutput {
	return o.ApplyT(func(v *StackPropertiesResponse) StackPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret StackPropertiesResponse
		return ret
	}).(StackPropertiesResponseOutput)
}

// Id of the ClusterStack.
func (o StackPropertiesResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Version of the ClusterStack
func (o StackPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// storage resource of type Azure Storage Account.
type StorageAccount struct {
	// The account key of the Azure Storage Account.
	AccountKey string `pulumi:"accountKey"`
	// The account name of the Azure Storage Account.
	AccountName string `pulumi:"accountName"`
	// The type of the storage.
	// Expected value is 'StorageAccount'.
	StorageType string `pulumi:"storageType"`
}

// StorageAccountInput is an input type that accepts StorageAccountArgs and StorageAccountOutput values.
// You can construct a concrete instance of `StorageAccountInput` via:
//
//	StorageAccountArgs{...}
type StorageAccountInput interface {
	pulumi.Input

	ToStorageAccountOutput() StorageAccountOutput
	ToStorageAccountOutputWithContext(context.Context) StorageAccountOutput
}

// storage resource of type Azure Storage Account.
type StorageAccountArgs struct {
	// The account key of the Azure Storage Account.
	AccountKey pulumi.StringInput `pulumi:"accountKey"`
	// The account name of the Azure Storage Account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The type of the storage.
	// Expected value is 'StorageAccount'.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (StorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (i StorageAccountArgs) ToStorageAccountOutput() StorageAccountOutput {
	return i.ToStorageAccountOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput)
}

func (i StorageAccountArgs) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return i.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput).ToStorageAccountPtrOutputWithContext(ctx)
}

// StorageAccountPtrInput is an input type that accepts StorageAccountArgs, StorageAccountPtr and StorageAccountPtrOutput values.
// You can construct a concrete instance of `StorageAccountPtrInput` via:
//
//	        StorageAccountArgs{...}
//
//	or:
//
//	        nil
type StorageAccountPtrInput interface {
	pulumi.Input

	ToStorageAccountPtrOutput() StorageAccountPtrOutput
	ToStorageAccountPtrOutputWithContext(context.Context) StorageAccountPtrOutput
}

type storageAccountPtrType StorageAccountArgs

func StorageAccountPtr(v *StorageAccountArgs) StorageAccountPtrInput {
	return (*storageAccountPtrType)(v)
}

func (*storageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccount)(nil)).Elem()
}

func (i *storageAccountPtrType) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return i.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (i *storageAccountPtrType) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPtrOutput)
}

// storage resource of type Azure Storage Account.
type StorageAccountOutput struct{ *pulumi.OutputState }

func (StorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (o StorageAccountOutput) ToStorageAccountOutput() StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return o.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (o StorageAccountOutput) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageAccount) *StorageAccount {
		return &v
	}).(StorageAccountPtrOutput)
}

// The account key of the Azure Storage Account.
func (o StorageAccountOutput) AccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccount) string { return v.AccountKey }).(pulumi.StringOutput)
}

// The account name of the Azure Storage Account.
func (o StorageAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The type of the storage.
// Expected value is 'StorageAccount'.
func (o StorageAccountOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccount) string { return v.StorageType }).(pulumi.StringOutput)
}

type StorageAccountPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccount)(nil)).Elem()
}

func (o StorageAccountPtrOutput) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return o
}

func (o StorageAccountPtrOutput) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return o
}

func (o StorageAccountPtrOutput) Elem() StorageAccountOutput {
	return o.ApplyT(func(v *StorageAccount) StorageAccount {
		if v != nil {
			return *v
		}
		var ret StorageAccount
		return ret
	}).(StorageAccountOutput)
}

// The account key of the Azure Storage Account.
func (o StorageAccountPtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The account name of the Azure Storage Account.
func (o StorageAccountPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// The type of the storage.
// Expected value is 'StorageAccount'.
func (o StorageAccountPtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.StorageType
	}).(pulumi.StringPtrOutput)
}

// storage resource of type Azure Storage Account.
type StorageAccountResponse struct {
	// The account name of the Azure Storage Account.
	AccountName string `pulumi:"accountName"`
	// The type of the storage.
	// Expected value is 'StorageAccount'.
	StorageType string `pulumi:"storageType"`
}

// storage resource of type Azure Storage Account.
type StorageAccountResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return o
}

// The account name of the Azure Storage Account.
func (o StorageAccountResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// The type of the storage.
// Expected value is 'StorageAccount'.
func (o StorageAccountResponseOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountResponse) string { return v.StorageType }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource modification (UTC).
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource modification (UTC).
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// TCPSocketAction describes an action based on opening a socket
type TCPSocketAction struct {
	// The type of the action to take to perform the health check.
	// Expected value is 'TCPSocketAction'.
	Type string `pulumi:"type"`
}

// TCPSocketActionInput is an input type that accepts TCPSocketActionArgs and TCPSocketActionOutput values.
// You can construct a concrete instance of `TCPSocketActionInput` via:
//
//	TCPSocketActionArgs{...}
type TCPSocketActionInput interface {
	pulumi.Input

	ToTCPSocketActionOutput() TCPSocketActionOutput
	ToTCPSocketActionOutputWithContext(context.Context) TCPSocketActionOutput
}

// TCPSocketAction describes an action based on opening a socket
type TCPSocketActionArgs struct {
	// The type of the action to take to perform the health check.
	// Expected value is 'TCPSocketAction'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TCPSocketActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPSocketAction)(nil)).Elem()
}

func (i TCPSocketActionArgs) ToTCPSocketActionOutput() TCPSocketActionOutput {
	return i.ToTCPSocketActionOutputWithContext(context.Background())
}

func (i TCPSocketActionArgs) ToTCPSocketActionOutputWithContext(ctx context.Context) TCPSocketActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPSocketActionOutput)
}

func (i TCPSocketActionArgs) ToTCPSocketActionPtrOutput() TCPSocketActionPtrOutput {
	return i.ToTCPSocketActionPtrOutputWithContext(context.Background())
}

func (i TCPSocketActionArgs) ToTCPSocketActionPtrOutputWithContext(ctx context.Context) TCPSocketActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPSocketActionOutput).ToTCPSocketActionPtrOutputWithContext(ctx)
}

// TCPSocketActionPtrInput is an input type that accepts TCPSocketActionArgs, TCPSocketActionPtr and TCPSocketActionPtrOutput values.
// You can construct a concrete instance of `TCPSocketActionPtrInput` via:
//
//	        TCPSocketActionArgs{...}
//
//	or:
//
//	        nil
type TCPSocketActionPtrInput interface {
	pulumi.Input

	ToTCPSocketActionPtrOutput() TCPSocketActionPtrOutput
	ToTCPSocketActionPtrOutputWithContext(context.Context) TCPSocketActionPtrOutput
}

type tcpsocketActionPtrType TCPSocketActionArgs

func TCPSocketActionPtr(v *TCPSocketActionArgs) TCPSocketActionPtrInput {
	return (*tcpsocketActionPtrType)(v)
}

func (*tcpsocketActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPSocketAction)(nil)).Elem()
}

func (i *tcpsocketActionPtrType) ToTCPSocketActionPtrOutput() TCPSocketActionPtrOutput {
	return i.ToTCPSocketActionPtrOutputWithContext(context.Background())
}

func (i *tcpsocketActionPtrType) ToTCPSocketActionPtrOutputWithContext(ctx context.Context) TCPSocketActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPSocketActionPtrOutput)
}

// TCPSocketAction describes an action based on opening a socket
type TCPSocketActionOutput struct{ *pulumi.OutputState }

func (TCPSocketActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPSocketAction)(nil)).Elem()
}

func (o TCPSocketActionOutput) ToTCPSocketActionOutput() TCPSocketActionOutput {
	return o
}

func (o TCPSocketActionOutput) ToTCPSocketActionOutputWithContext(ctx context.Context) TCPSocketActionOutput {
	return o
}

func (o TCPSocketActionOutput) ToTCPSocketActionPtrOutput() TCPSocketActionPtrOutput {
	return o.ToTCPSocketActionPtrOutputWithContext(context.Background())
}

func (o TCPSocketActionOutput) ToTCPSocketActionPtrOutputWithContext(ctx context.Context) TCPSocketActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TCPSocketAction) *TCPSocketAction {
		return &v
	}).(TCPSocketActionPtrOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'TCPSocketAction'.
func (o TCPSocketActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TCPSocketAction) string { return v.Type }).(pulumi.StringOutput)
}

type TCPSocketActionPtrOutput struct{ *pulumi.OutputState }

func (TCPSocketActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPSocketAction)(nil)).Elem()
}

func (o TCPSocketActionPtrOutput) ToTCPSocketActionPtrOutput() TCPSocketActionPtrOutput {
	return o
}

func (o TCPSocketActionPtrOutput) ToTCPSocketActionPtrOutputWithContext(ctx context.Context) TCPSocketActionPtrOutput {
	return o
}

func (o TCPSocketActionPtrOutput) Elem() TCPSocketActionOutput {
	return o.ApplyT(func(v *TCPSocketAction) TCPSocketAction {
		if v != nil {
			return *v
		}
		var ret TCPSocketAction
		return ret
	}).(TCPSocketActionOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'TCPSocketAction'.
func (o TCPSocketActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPSocketAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// TCPSocketAction describes an action based on opening a socket
type TCPSocketActionResponse struct {
	// The type of the action to take to perform the health check.
	// Expected value is 'TCPSocketAction'.
	Type string `pulumi:"type"`
}

// TCPSocketAction describes an action based on opening a socket
type TCPSocketActionResponseOutput struct{ *pulumi.OutputState }

func (TCPSocketActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPSocketActionResponse)(nil)).Elem()
}

func (o TCPSocketActionResponseOutput) ToTCPSocketActionResponseOutput() TCPSocketActionResponseOutput {
	return o
}

func (o TCPSocketActionResponseOutput) ToTCPSocketActionResponseOutputWithContext(ctx context.Context) TCPSocketActionResponseOutput {
	return o
}

// The type of the action to take to perform the health check.
// Expected value is 'TCPSocketAction'.
func (o TCPSocketActionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TCPSocketActionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type TCPSocketActionResponsePtrOutput struct{ *pulumi.OutputState }

func (TCPSocketActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPSocketActionResponse)(nil)).Elem()
}

func (o TCPSocketActionResponsePtrOutput) ToTCPSocketActionResponsePtrOutput() TCPSocketActionResponsePtrOutput {
	return o
}

func (o TCPSocketActionResponsePtrOutput) ToTCPSocketActionResponsePtrOutputWithContext(ctx context.Context) TCPSocketActionResponsePtrOutput {
	return o
}

func (o TCPSocketActionResponsePtrOutput) Elem() TCPSocketActionResponseOutput {
	return o.ApplyT(func(v *TCPSocketActionResponse) TCPSocketActionResponse {
		if v != nil {
			return *v
		}
		var ret TCPSocketActionResponse
		return ret
	}).(TCPSocketActionResponseOutput)
}

// The type of the action to take to perform the health check.
// Expected value is 'TCPSocketAction'.
func (o TCPSocketActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPSocketActionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Azure Spring Apps App Instance Tcp scaling rule.
type TcpScaleRule struct {
	// Authentication secrets for the tcp scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Metadata properties to describe tcp scale rule.
	Metadata map[string]string `pulumi:"metadata"`
}

// TcpScaleRuleInput is an input type that accepts TcpScaleRuleArgs and TcpScaleRuleOutput values.
// You can construct a concrete instance of `TcpScaleRuleInput` via:
//
//	TcpScaleRuleArgs{...}
type TcpScaleRuleInput interface {
	pulumi.Input

	ToTcpScaleRuleOutput() TcpScaleRuleOutput
	ToTcpScaleRuleOutputWithContext(context.Context) TcpScaleRuleOutput
}

// Azure Spring Apps App Instance Tcp scaling rule.
type TcpScaleRuleArgs struct {
	// Authentication secrets for the tcp scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Metadata properties to describe tcp scale rule.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
}

func (TcpScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TcpScaleRule)(nil)).Elem()
}

func (i TcpScaleRuleArgs) ToTcpScaleRuleOutput() TcpScaleRuleOutput {
	return i.ToTcpScaleRuleOutputWithContext(context.Background())
}

func (i TcpScaleRuleArgs) ToTcpScaleRuleOutputWithContext(ctx context.Context) TcpScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TcpScaleRuleOutput)
}

func (i TcpScaleRuleArgs) ToTcpScaleRulePtrOutput() TcpScaleRulePtrOutput {
	return i.ToTcpScaleRulePtrOutputWithContext(context.Background())
}

func (i TcpScaleRuleArgs) ToTcpScaleRulePtrOutputWithContext(ctx context.Context) TcpScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TcpScaleRuleOutput).ToTcpScaleRulePtrOutputWithContext(ctx)
}

// TcpScaleRulePtrInput is an input type that accepts TcpScaleRuleArgs, TcpScaleRulePtr and TcpScaleRulePtrOutput values.
// You can construct a concrete instance of `TcpScaleRulePtrInput` via:
//
//	        TcpScaleRuleArgs{...}
//
//	or:
//
//	        nil
type TcpScaleRulePtrInput interface {
	pulumi.Input

	ToTcpScaleRulePtrOutput() TcpScaleRulePtrOutput
	ToTcpScaleRulePtrOutputWithContext(context.Context) TcpScaleRulePtrOutput
}

type tcpScaleRulePtrType TcpScaleRuleArgs

func TcpScaleRulePtr(v *TcpScaleRuleArgs) TcpScaleRulePtrInput {
	return (*tcpScaleRulePtrType)(v)
}

func (*tcpScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TcpScaleRule)(nil)).Elem()
}

func (i *tcpScaleRulePtrType) ToTcpScaleRulePtrOutput() TcpScaleRulePtrOutput {
	return i.ToTcpScaleRulePtrOutputWithContext(context.Background())
}

func (i *tcpScaleRulePtrType) ToTcpScaleRulePtrOutputWithContext(ctx context.Context) TcpScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TcpScaleRulePtrOutput)
}

// Azure Spring Apps App Instance Tcp scaling rule.
type TcpScaleRuleOutput struct{ *pulumi.OutputState }

func (TcpScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TcpScaleRule)(nil)).Elem()
}

func (o TcpScaleRuleOutput) ToTcpScaleRuleOutput() TcpScaleRuleOutput {
	return o
}

func (o TcpScaleRuleOutput) ToTcpScaleRuleOutputWithContext(ctx context.Context) TcpScaleRuleOutput {
	return o
}

func (o TcpScaleRuleOutput) ToTcpScaleRulePtrOutput() TcpScaleRulePtrOutput {
	return o.ToTcpScaleRulePtrOutputWithContext(context.Background())
}

func (o TcpScaleRuleOutput) ToTcpScaleRulePtrOutputWithContext(ctx context.Context) TcpScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TcpScaleRule) *TcpScaleRule {
		return &v
	}).(TcpScaleRulePtrOutput)
}

// Authentication secrets for the tcp scale rule.
func (o TcpScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v TcpScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe tcp scale rule.
func (o TcpScaleRuleOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v TcpScaleRule) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type TcpScaleRulePtrOutput struct{ *pulumi.OutputState }

func (TcpScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TcpScaleRule)(nil)).Elem()
}

func (o TcpScaleRulePtrOutput) ToTcpScaleRulePtrOutput() TcpScaleRulePtrOutput {
	return o
}

func (o TcpScaleRulePtrOutput) ToTcpScaleRulePtrOutputWithContext(ctx context.Context) TcpScaleRulePtrOutput {
	return o
}

func (o TcpScaleRulePtrOutput) Elem() TcpScaleRuleOutput {
	return o.ApplyT(func(v *TcpScaleRule) TcpScaleRule {
		if v != nil {
			return *v
		}
		var ret TcpScaleRule
		return ret
	}).(TcpScaleRuleOutput)
}

// Authentication secrets for the tcp scale rule.
func (o TcpScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *TcpScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe tcp scale rule.
func (o TcpScaleRulePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TcpScaleRule) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Azure Spring Apps App Instance Tcp scaling rule.
type TcpScaleRuleResponse struct {
	// Authentication secrets for the tcp scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Metadata properties to describe tcp scale rule.
	Metadata map[string]string `pulumi:"metadata"`
}

// Azure Spring Apps App Instance Tcp scaling rule.
type TcpScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (TcpScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TcpScaleRuleResponse)(nil)).Elem()
}

func (o TcpScaleRuleResponseOutput) ToTcpScaleRuleResponseOutput() TcpScaleRuleResponseOutput {
	return o
}

func (o TcpScaleRuleResponseOutput) ToTcpScaleRuleResponseOutputWithContext(ctx context.Context) TcpScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the tcp scale rule.
func (o TcpScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v TcpScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe tcp scale rule.
func (o TcpScaleRuleResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v TcpScaleRuleResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type TcpScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (TcpScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TcpScaleRuleResponse)(nil)).Elem()
}

func (o TcpScaleRuleResponsePtrOutput) ToTcpScaleRuleResponsePtrOutput() TcpScaleRuleResponsePtrOutput {
	return o
}

func (o TcpScaleRuleResponsePtrOutput) ToTcpScaleRuleResponsePtrOutputWithContext(ctx context.Context) TcpScaleRuleResponsePtrOutput {
	return o
}

func (o TcpScaleRuleResponsePtrOutput) Elem() TcpScaleRuleResponseOutput {
	return o.ApplyT(func(v *TcpScaleRuleResponse) TcpScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret TcpScaleRuleResponse
		return ret
	}).(TcpScaleRuleResponseOutput)
}

// Authentication secrets for the tcp scale rule.
func (o TcpScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *TcpScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe tcp scale rule.
func (o TcpScaleRuleResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TcpScaleRuleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Temporary disk payload
type TemporaryDisk struct {
	// Mount path of the temporary disk
	MountPath *string `pulumi:"mountPath"`
	// Size of the temporary disk in GB
	SizeInGB *int `pulumi:"sizeInGB"`
}

// Defaults sets the appropriate defaults for TemporaryDisk
func (val *TemporaryDisk) Defaults() *TemporaryDisk {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountPath == nil {
		mountPath_ := "/tmp"
		tmp.MountPath = &mountPath_
	}
	return &tmp
}

// TemporaryDiskInput is an input type that accepts TemporaryDiskArgs and TemporaryDiskOutput values.
// You can construct a concrete instance of `TemporaryDiskInput` via:
//
//	TemporaryDiskArgs{...}
type TemporaryDiskInput interface {
	pulumi.Input

	ToTemporaryDiskOutput() TemporaryDiskOutput
	ToTemporaryDiskOutputWithContext(context.Context) TemporaryDiskOutput
}

// Temporary disk payload
type TemporaryDiskArgs struct {
	// Mount path of the temporary disk
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Size of the temporary disk in GB
	SizeInGB pulumi.IntPtrInput `pulumi:"sizeInGB"`
}

// Defaults sets the appropriate defaults for TemporaryDiskArgs
func (val *TemporaryDiskArgs) Defaults() *TemporaryDiskArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountPath == nil {
		tmp.MountPath = pulumi.StringPtr("/tmp")
	}
	return &tmp
}
func (TemporaryDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemporaryDisk)(nil)).Elem()
}

func (i TemporaryDiskArgs) ToTemporaryDiskOutput() TemporaryDiskOutput {
	return i.ToTemporaryDiskOutputWithContext(context.Background())
}

func (i TemporaryDiskArgs) ToTemporaryDiskOutputWithContext(ctx context.Context) TemporaryDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemporaryDiskOutput)
}

func (i TemporaryDiskArgs) ToTemporaryDiskPtrOutput() TemporaryDiskPtrOutput {
	return i.ToTemporaryDiskPtrOutputWithContext(context.Background())
}

func (i TemporaryDiskArgs) ToTemporaryDiskPtrOutputWithContext(ctx context.Context) TemporaryDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemporaryDiskOutput).ToTemporaryDiskPtrOutputWithContext(ctx)
}

// TemporaryDiskPtrInput is an input type that accepts TemporaryDiskArgs, TemporaryDiskPtr and TemporaryDiskPtrOutput values.
// You can construct a concrete instance of `TemporaryDiskPtrInput` via:
//
//	        TemporaryDiskArgs{...}
//
//	or:
//
//	        nil
type TemporaryDiskPtrInput interface {
	pulumi.Input

	ToTemporaryDiskPtrOutput() TemporaryDiskPtrOutput
	ToTemporaryDiskPtrOutputWithContext(context.Context) TemporaryDiskPtrOutput
}

type temporaryDiskPtrType TemporaryDiskArgs

func TemporaryDiskPtr(v *TemporaryDiskArgs) TemporaryDiskPtrInput {
	return (*temporaryDiskPtrType)(v)
}

func (*temporaryDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemporaryDisk)(nil)).Elem()
}

func (i *temporaryDiskPtrType) ToTemporaryDiskPtrOutput() TemporaryDiskPtrOutput {
	return i.ToTemporaryDiskPtrOutputWithContext(context.Background())
}

func (i *temporaryDiskPtrType) ToTemporaryDiskPtrOutputWithContext(ctx context.Context) TemporaryDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemporaryDiskPtrOutput)
}

// Temporary disk payload
type TemporaryDiskOutput struct{ *pulumi.OutputState }

func (TemporaryDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemporaryDisk)(nil)).Elem()
}

func (o TemporaryDiskOutput) ToTemporaryDiskOutput() TemporaryDiskOutput {
	return o
}

func (o TemporaryDiskOutput) ToTemporaryDiskOutputWithContext(ctx context.Context) TemporaryDiskOutput {
	return o
}

func (o TemporaryDiskOutput) ToTemporaryDiskPtrOutput() TemporaryDiskPtrOutput {
	return o.ToTemporaryDiskPtrOutputWithContext(context.Background())
}

func (o TemporaryDiskOutput) ToTemporaryDiskPtrOutputWithContext(ctx context.Context) TemporaryDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemporaryDisk) *TemporaryDisk {
		return &v
	}).(TemporaryDiskPtrOutput)
}

// Mount path of the temporary disk
func (o TemporaryDiskOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemporaryDisk) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Size of the temporary disk in GB
func (o TemporaryDiskOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TemporaryDisk) *int { return v.SizeInGB }).(pulumi.IntPtrOutput)
}

type TemporaryDiskPtrOutput struct{ *pulumi.OutputState }

func (TemporaryDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemporaryDisk)(nil)).Elem()
}

func (o TemporaryDiskPtrOutput) ToTemporaryDiskPtrOutput() TemporaryDiskPtrOutput {
	return o
}

func (o TemporaryDiskPtrOutput) ToTemporaryDiskPtrOutputWithContext(ctx context.Context) TemporaryDiskPtrOutput {
	return o
}

func (o TemporaryDiskPtrOutput) Elem() TemporaryDiskOutput {
	return o.ApplyT(func(v *TemporaryDisk) TemporaryDisk {
		if v != nil {
			return *v
		}
		var ret TemporaryDisk
		return ret
	}).(TemporaryDiskOutput)
}

// Mount path of the temporary disk
func (o TemporaryDiskPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemporaryDisk) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Size of the temporary disk in GB
func (o TemporaryDiskPtrOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TemporaryDisk) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGB
	}).(pulumi.IntPtrOutput)
}

// Temporary disk payload
type TemporaryDiskResponse struct {
	// Mount path of the temporary disk
	MountPath *string `pulumi:"mountPath"`
	// Size of the temporary disk in GB
	SizeInGB *int `pulumi:"sizeInGB"`
}

// Defaults sets the appropriate defaults for TemporaryDiskResponse
func (val *TemporaryDiskResponse) Defaults() *TemporaryDiskResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountPath == nil {
		mountPath_ := "/tmp"
		tmp.MountPath = &mountPath_
	}
	return &tmp
}

// Temporary disk payload
type TemporaryDiskResponseOutput struct{ *pulumi.OutputState }

func (TemporaryDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemporaryDiskResponse)(nil)).Elem()
}

func (o TemporaryDiskResponseOutput) ToTemporaryDiskResponseOutput() TemporaryDiskResponseOutput {
	return o
}

func (o TemporaryDiskResponseOutput) ToTemporaryDiskResponseOutputWithContext(ctx context.Context) TemporaryDiskResponseOutput {
	return o
}

// Mount path of the temporary disk
func (o TemporaryDiskResponseOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemporaryDiskResponse) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Size of the temporary disk in GB
func (o TemporaryDiskResponseOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TemporaryDiskResponse) *int { return v.SizeInGB }).(pulumi.IntPtrOutput)
}

type TemporaryDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (TemporaryDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemporaryDiskResponse)(nil)).Elem()
}

func (o TemporaryDiskResponsePtrOutput) ToTemporaryDiskResponsePtrOutput() TemporaryDiskResponsePtrOutput {
	return o
}

func (o TemporaryDiskResponsePtrOutput) ToTemporaryDiskResponsePtrOutputWithContext(ctx context.Context) TemporaryDiskResponsePtrOutput {
	return o
}

func (o TemporaryDiskResponsePtrOutput) Elem() TemporaryDiskResponseOutput {
	return o.ApplyT(func(v *TemporaryDiskResponse) TemporaryDiskResponse {
		if v != nil {
			return *v
		}
		var ret TemporaryDiskResponse
		return ret
	}).(TemporaryDiskResponseOutput)
}

// Mount path of the temporary disk
func (o TemporaryDiskResponsePtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemporaryDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// Size of the temporary disk in GB
func (o TemporaryDiskResponsePtrOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TemporaryDiskResponse) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGB
	}).(pulumi.IntPtrOutput)
}

// The build result triggered by a build
type TriggeredBuildResultResponse struct {
	// The unique build id of this build result
	Id *string `pulumi:"id"`
	// The container image of this build result
	Image *string `pulumi:"image"`
	// The last transition reason of this build result
	LastTransitionReason *string `pulumi:"lastTransitionReason"`
	// The last transition status of this build result
	LastTransitionStatus *string `pulumi:"lastTransitionStatus"`
	// The last transition time of this build result
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// The provisioning state of this build result
	ProvisioningState string `pulumi:"provisioningState"`
}

// The build result triggered by a build
type TriggeredBuildResultResponseOutput struct{ *pulumi.OutputState }

func (TriggeredBuildResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggeredBuildResultResponse)(nil)).Elem()
}

func (o TriggeredBuildResultResponseOutput) ToTriggeredBuildResultResponseOutput() TriggeredBuildResultResponseOutput {
	return o
}

func (o TriggeredBuildResultResponseOutput) ToTriggeredBuildResultResponseOutputWithContext(ctx context.Context) TriggeredBuildResultResponseOutput {
	return o
}

// The unique build id of this build result
func (o TriggeredBuildResultResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggeredBuildResultResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The container image of this build result
func (o TriggeredBuildResultResponseOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggeredBuildResultResponse) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// The last transition reason of this build result
func (o TriggeredBuildResultResponseOutput) LastTransitionReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggeredBuildResultResponse) *string { return v.LastTransitionReason }).(pulumi.StringPtrOutput)
}

// The last transition status of this build result
func (o TriggeredBuildResultResponseOutput) LastTransitionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggeredBuildResultResponse) *string { return v.LastTransitionStatus }).(pulumi.StringPtrOutput)
}

// The last transition time of this build result
func (o TriggeredBuildResultResponseOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggeredBuildResultResponse) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// The provisioning state of this build result
func (o TriggeredBuildResultResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TriggeredBuildResultResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Source with uploaded location
type UploadedUserSourceInfo struct {
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Type of the source uploaded
	// Expected value is 'UploadedUserSourceInfo'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// UploadedUserSourceInfoInput is an input type that accepts UploadedUserSourceInfoArgs and UploadedUserSourceInfoOutput values.
// You can construct a concrete instance of `UploadedUserSourceInfoInput` via:
//
//	UploadedUserSourceInfoArgs{...}
type UploadedUserSourceInfoInput interface {
	pulumi.Input

	ToUploadedUserSourceInfoOutput() UploadedUserSourceInfoOutput
	ToUploadedUserSourceInfoOutputWithContext(context.Context) UploadedUserSourceInfoOutput
}

// Source with uploaded location
type UploadedUserSourceInfoArgs struct {
	// Relative path of the storage which stores the source
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// Type of the source uploaded
	// Expected value is 'UploadedUserSourceInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (UploadedUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadedUserSourceInfo)(nil)).Elem()
}

func (i UploadedUserSourceInfoArgs) ToUploadedUserSourceInfoOutput() UploadedUserSourceInfoOutput {
	return i.ToUploadedUserSourceInfoOutputWithContext(context.Background())
}

func (i UploadedUserSourceInfoArgs) ToUploadedUserSourceInfoOutputWithContext(ctx context.Context) UploadedUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadedUserSourceInfoOutput)
}

func (i UploadedUserSourceInfoArgs) ToUploadedUserSourceInfoPtrOutput() UploadedUserSourceInfoPtrOutput {
	return i.ToUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i UploadedUserSourceInfoArgs) ToUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) UploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadedUserSourceInfoOutput).ToUploadedUserSourceInfoPtrOutputWithContext(ctx)
}

// UploadedUserSourceInfoPtrInput is an input type that accepts UploadedUserSourceInfoArgs, UploadedUserSourceInfoPtr and UploadedUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `UploadedUserSourceInfoPtrInput` via:
//
//	        UploadedUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type UploadedUserSourceInfoPtrInput interface {
	pulumi.Input

	ToUploadedUserSourceInfoPtrOutput() UploadedUserSourceInfoPtrOutput
	ToUploadedUserSourceInfoPtrOutputWithContext(context.Context) UploadedUserSourceInfoPtrOutput
}

type uploadedUserSourceInfoPtrType UploadedUserSourceInfoArgs

func UploadedUserSourceInfoPtr(v *UploadedUserSourceInfoArgs) UploadedUserSourceInfoPtrInput {
	return (*uploadedUserSourceInfoPtrType)(v)
}

func (*uploadedUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadedUserSourceInfo)(nil)).Elem()
}

func (i *uploadedUserSourceInfoPtrType) ToUploadedUserSourceInfoPtrOutput() UploadedUserSourceInfoPtrOutput {
	return i.ToUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *uploadedUserSourceInfoPtrType) ToUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) UploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UploadedUserSourceInfoPtrOutput)
}

// Source with uploaded location
type UploadedUserSourceInfoOutput struct{ *pulumi.OutputState }

func (UploadedUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadedUserSourceInfo)(nil)).Elem()
}

func (o UploadedUserSourceInfoOutput) ToUploadedUserSourceInfoOutput() UploadedUserSourceInfoOutput {
	return o
}

func (o UploadedUserSourceInfoOutput) ToUploadedUserSourceInfoOutputWithContext(ctx context.Context) UploadedUserSourceInfoOutput {
	return o
}

func (o UploadedUserSourceInfoOutput) ToUploadedUserSourceInfoPtrOutput() UploadedUserSourceInfoPtrOutput {
	return o.ToUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o UploadedUserSourceInfoOutput) ToUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) UploadedUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UploadedUserSourceInfo) *UploadedUserSourceInfo {
		return &v
	}).(UploadedUserSourceInfoPtrOutput)
}

// Relative path of the storage which stores the source
func (o UploadedUserSourceInfoOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadedUserSourceInfo) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'UploadedUserSourceInfo'.
func (o UploadedUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UploadedUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o UploadedUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadedUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type UploadedUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (UploadedUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadedUserSourceInfo)(nil)).Elem()
}

func (o UploadedUserSourceInfoPtrOutput) ToUploadedUserSourceInfoPtrOutput() UploadedUserSourceInfoPtrOutput {
	return o
}

func (o UploadedUserSourceInfoPtrOutput) ToUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) UploadedUserSourceInfoPtrOutput {
	return o
}

func (o UploadedUserSourceInfoPtrOutput) Elem() UploadedUserSourceInfoOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfo) UploadedUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret UploadedUserSourceInfo
		return ret
	}).(UploadedUserSourceInfoOutput)
}

// Relative path of the storage which stores the source
func (o UploadedUserSourceInfoPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'UploadedUserSourceInfo'.
func (o UploadedUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o UploadedUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Source with uploaded location
type UploadedUserSourceInfoResponse struct {
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Type of the source uploaded
	// Expected value is 'UploadedUserSourceInfo'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Source with uploaded location
type UploadedUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (UploadedUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o UploadedUserSourceInfoResponseOutput) ToUploadedUserSourceInfoResponseOutput() UploadedUserSourceInfoResponseOutput {
	return o
}

func (o UploadedUserSourceInfoResponseOutput) ToUploadedUserSourceInfoResponseOutputWithContext(ctx context.Context) UploadedUserSourceInfoResponseOutput {
	return o
}

// Relative path of the storage which stores the source
func (o UploadedUserSourceInfoResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadedUserSourceInfoResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'UploadedUserSourceInfo'.
func (o UploadedUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UploadedUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o UploadedUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UploadedUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type UploadedUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (UploadedUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o UploadedUserSourceInfoResponsePtrOutput) ToUploadedUserSourceInfoResponsePtrOutput() UploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o UploadedUserSourceInfoResponsePtrOutput) ToUploadedUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) UploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o UploadedUserSourceInfoResponsePtrOutput) Elem() UploadedUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfoResponse) UploadedUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret UploadedUserSourceInfoResponse
		return ret
	}).(UploadedUserSourceInfoResponseOutput)
}

// Relative path of the storage which stores the source
func (o UploadedUserSourceInfoResponsePtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'UploadedUserSourceInfo'.
func (o UploadedUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o UploadedUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The details of the user-assigned managed identity assigned to an App.
type UserAssignedManagedIdentityResponse struct {
	// Client Id of user-assigned managed identity.
	ClientId string `pulumi:"clientId"`
	// Principal Id of user-assigned managed identity.
	PrincipalId string `pulumi:"principalId"`
}

// The details of the user-assigned managed identity assigned to an App.
type UserAssignedManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityResponseOutput) ToUserAssignedManagedIdentityResponseOutput() UserAssignedManagedIdentityResponseOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseOutput) ToUserAssignedManagedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseOutput {
	return o
}

// Client Id of user-assigned managed identity.
func (o UserAssignedManagedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user-assigned managed identity.
func (o UserAssignedManagedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedManagedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityResponseMapOutput) ToUserAssignedManagedIdentityResponseMapOutput() UserAssignedManagedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseMapOutput) ToUserAssignedManagedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedManagedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedManagedIdentityResponse {
		return vs[0].(map[string]UserAssignedManagedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedManagedIdentityResponseOutput)
}

// Uploaded War binary for a deployment
type WarUploadedUserSourceInfo struct {
	// JVM parameter
	JvmOptions *string `pulumi:"jvmOptions"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the war file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Server version, currently only Apache Tomcat is supported
	ServerVersion *string `pulumi:"serverVersion"`
	// Type of the source uploaded
	// Expected value is 'War'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// WarUploadedUserSourceInfoInput is an input type that accepts WarUploadedUserSourceInfoArgs and WarUploadedUserSourceInfoOutput values.
// You can construct a concrete instance of `WarUploadedUserSourceInfoInput` via:
//
//	WarUploadedUserSourceInfoArgs{...}
type WarUploadedUserSourceInfoInput interface {
	pulumi.Input

	ToWarUploadedUserSourceInfoOutput() WarUploadedUserSourceInfoOutput
	ToWarUploadedUserSourceInfoOutputWithContext(context.Context) WarUploadedUserSourceInfoOutput
}

// Uploaded War binary for a deployment
type WarUploadedUserSourceInfoArgs struct {
	// JVM parameter
	JvmOptions pulumi.StringPtrInput `pulumi:"jvmOptions"`
	// Relative path of the storage which stores the source
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// Runtime version of the war file
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// Server version, currently only Apache Tomcat is supported
	ServerVersion pulumi.StringPtrInput `pulumi:"serverVersion"`
	// Type of the source uploaded
	// Expected value is 'War'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the source
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (WarUploadedUserSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarUploadedUserSourceInfo)(nil)).Elem()
}

func (i WarUploadedUserSourceInfoArgs) ToWarUploadedUserSourceInfoOutput() WarUploadedUserSourceInfoOutput {
	return i.ToWarUploadedUserSourceInfoOutputWithContext(context.Background())
}

func (i WarUploadedUserSourceInfoArgs) ToWarUploadedUserSourceInfoOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarUploadedUserSourceInfoOutput)
}

func (i WarUploadedUserSourceInfoArgs) ToWarUploadedUserSourceInfoPtrOutput() WarUploadedUserSourceInfoPtrOutput {
	return i.ToWarUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i WarUploadedUserSourceInfoArgs) ToWarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarUploadedUserSourceInfoOutput).ToWarUploadedUserSourceInfoPtrOutputWithContext(ctx)
}

// WarUploadedUserSourceInfoPtrInput is an input type that accepts WarUploadedUserSourceInfoArgs, WarUploadedUserSourceInfoPtr and WarUploadedUserSourceInfoPtrOutput values.
// You can construct a concrete instance of `WarUploadedUserSourceInfoPtrInput` via:
//
//	        WarUploadedUserSourceInfoArgs{...}
//
//	or:
//
//	        nil
type WarUploadedUserSourceInfoPtrInput interface {
	pulumi.Input

	ToWarUploadedUserSourceInfoPtrOutput() WarUploadedUserSourceInfoPtrOutput
	ToWarUploadedUserSourceInfoPtrOutputWithContext(context.Context) WarUploadedUserSourceInfoPtrOutput
}

type warUploadedUserSourceInfoPtrType WarUploadedUserSourceInfoArgs

func WarUploadedUserSourceInfoPtr(v *WarUploadedUserSourceInfoArgs) WarUploadedUserSourceInfoPtrInput {
	return (*warUploadedUserSourceInfoPtrType)(v)
}

func (*warUploadedUserSourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarUploadedUserSourceInfo)(nil)).Elem()
}

func (i *warUploadedUserSourceInfoPtrType) ToWarUploadedUserSourceInfoPtrOutput() WarUploadedUserSourceInfoPtrOutput {
	return i.ToWarUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (i *warUploadedUserSourceInfoPtrType) ToWarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarUploadedUserSourceInfoPtrOutput)
}

// Uploaded War binary for a deployment
type WarUploadedUserSourceInfoOutput struct{ *pulumi.OutputState }

func (WarUploadedUserSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarUploadedUserSourceInfo)(nil)).Elem()
}

func (o WarUploadedUserSourceInfoOutput) ToWarUploadedUserSourceInfoOutput() WarUploadedUserSourceInfoOutput {
	return o
}

func (o WarUploadedUserSourceInfoOutput) ToWarUploadedUserSourceInfoOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoOutput {
	return o
}

func (o WarUploadedUserSourceInfoOutput) ToWarUploadedUserSourceInfoPtrOutput() WarUploadedUserSourceInfoPtrOutput {
	return o.ToWarUploadedUserSourceInfoPtrOutputWithContext(context.Background())
}

func (o WarUploadedUserSourceInfoOutput) ToWarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarUploadedUserSourceInfo) *WarUploadedUserSourceInfo {
		return &v
	}).(WarUploadedUserSourceInfoPtrOutput)
}

// JVM parameter
func (o WarUploadedUserSourceInfoOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfo) *string { return v.JvmOptions }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o WarUploadedUserSourceInfoOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfo) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the war file
func (o WarUploadedUserSourceInfoOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfo) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Server version, currently only Apache Tomcat is supported
func (o WarUploadedUserSourceInfoOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfo) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'War'.
func (o WarUploadedUserSourceInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfo) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o WarUploadedUserSourceInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type WarUploadedUserSourceInfoPtrOutput struct{ *pulumi.OutputState }

func (WarUploadedUserSourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarUploadedUserSourceInfo)(nil)).Elem()
}

func (o WarUploadedUserSourceInfoPtrOutput) ToWarUploadedUserSourceInfoPtrOutput() WarUploadedUserSourceInfoPtrOutput {
	return o
}

func (o WarUploadedUserSourceInfoPtrOutput) ToWarUploadedUserSourceInfoPtrOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoPtrOutput {
	return o
}

func (o WarUploadedUserSourceInfoPtrOutput) Elem() WarUploadedUserSourceInfoOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) WarUploadedUserSourceInfo {
		if v != nil {
			return *v
		}
		var ret WarUploadedUserSourceInfo
		return ret
	}).(WarUploadedUserSourceInfoOutput)
}

// JVM parameter
func (o WarUploadedUserSourceInfoPtrOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o WarUploadedUserSourceInfoPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the war file
func (o WarUploadedUserSourceInfoPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Server version, currently only Apache Tomcat is supported
func (o WarUploadedUserSourceInfoPtrOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.ServerVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'War'.
func (o WarUploadedUserSourceInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o WarUploadedUserSourceInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Uploaded War binary for a deployment
type WarUploadedUserSourceInfoResponse struct {
	// JVM parameter
	JvmOptions *string `pulumi:"jvmOptions"`
	// Relative path of the storage which stores the source
	RelativePath *string `pulumi:"relativePath"`
	// Runtime version of the war file
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Server version, currently only Apache Tomcat is supported
	ServerVersion *string `pulumi:"serverVersion"`
	// Type of the source uploaded
	// Expected value is 'War'.
	Type string `pulumi:"type"`
	// Version of the source
	Version *string `pulumi:"version"`
}

// Uploaded War binary for a deployment
type WarUploadedUserSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (WarUploadedUserSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o WarUploadedUserSourceInfoResponseOutput) ToWarUploadedUserSourceInfoResponseOutput() WarUploadedUserSourceInfoResponseOutput {
	return o
}

func (o WarUploadedUserSourceInfoResponseOutput) ToWarUploadedUserSourceInfoResponseOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoResponseOutput {
	return o
}

// JVM parameter
func (o WarUploadedUserSourceInfoResponseOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfoResponse) *string { return v.JvmOptions }).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o WarUploadedUserSourceInfoResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfoResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// Runtime version of the war file
func (o WarUploadedUserSourceInfoResponseOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfoResponse) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// Server version, currently only Apache Tomcat is supported
func (o WarUploadedUserSourceInfoResponseOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfoResponse) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'War'.
func (o WarUploadedUserSourceInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the source
func (o WarUploadedUserSourceInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarUploadedUserSourceInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type WarUploadedUserSourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (WarUploadedUserSourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarUploadedUserSourceInfoResponse)(nil)).Elem()
}

func (o WarUploadedUserSourceInfoResponsePtrOutput) ToWarUploadedUserSourceInfoResponsePtrOutput() WarUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o WarUploadedUserSourceInfoResponsePtrOutput) ToWarUploadedUserSourceInfoResponsePtrOutputWithContext(ctx context.Context) WarUploadedUserSourceInfoResponsePtrOutput {
	return o
}

func (o WarUploadedUserSourceInfoResponsePtrOutput) Elem() WarUploadedUserSourceInfoResponseOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) WarUploadedUserSourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret WarUploadedUserSourceInfoResponse
		return ret
	}).(WarUploadedUserSourceInfoResponseOutput)
}

// JVM parameter
func (o WarUploadedUserSourceInfoResponsePtrOutput) JvmOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(pulumi.StringPtrOutput)
}

// Relative path of the storage which stores the source
func (o WarUploadedUserSourceInfoResponsePtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Runtime version of the war file
func (o WarUploadedUserSourceInfoResponsePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Server version, currently only Apache Tomcat is supported
func (o WarUploadedUserSourceInfoResponsePtrOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerVersion
	}).(pulumi.StringPtrOutput)
}

// Type of the source uploaded
// Expected value is 'War'.
func (o WarUploadedUserSourceInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Version of the source
func (o WarUploadedUserSourceInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarUploadedUserSourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Weekly planned maintenance
type WeeklyMaintenanceScheduleConfiguration struct {
	// The day to run the maintenance job
	Day string `pulumi:"day"`
	// The frequency to run the maintenance job
	// Expected value is 'Weekly'.
	Frequency string `pulumi:"frequency"`
	// The hour to run the maintenance job
	Hour int `pulumi:"hour"`
}

// WeeklyMaintenanceScheduleConfigurationInput is an input type that accepts WeeklyMaintenanceScheduleConfigurationArgs and WeeklyMaintenanceScheduleConfigurationOutput values.
// You can construct a concrete instance of `WeeklyMaintenanceScheduleConfigurationInput` via:
//
//	WeeklyMaintenanceScheduleConfigurationArgs{...}
type WeeklyMaintenanceScheduleConfigurationInput interface {
	pulumi.Input

	ToWeeklyMaintenanceScheduleConfigurationOutput() WeeklyMaintenanceScheduleConfigurationOutput
	ToWeeklyMaintenanceScheduleConfigurationOutputWithContext(context.Context) WeeklyMaintenanceScheduleConfigurationOutput
}

// Weekly planned maintenance
type WeeklyMaintenanceScheduleConfigurationArgs struct {
	// The day to run the maintenance job
	Day pulumi.StringInput `pulumi:"day"`
	// The frequency to run the maintenance job
	// Expected value is 'Weekly'.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The hour to run the maintenance job
	Hour pulumi.IntInput `pulumi:"hour"`
}

func (WeeklyMaintenanceScheduleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyMaintenanceScheduleConfiguration)(nil)).Elem()
}

func (i WeeklyMaintenanceScheduleConfigurationArgs) ToWeeklyMaintenanceScheduleConfigurationOutput() WeeklyMaintenanceScheduleConfigurationOutput {
	return i.ToWeeklyMaintenanceScheduleConfigurationOutputWithContext(context.Background())
}

func (i WeeklyMaintenanceScheduleConfigurationArgs) ToWeeklyMaintenanceScheduleConfigurationOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyMaintenanceScheduleConfigurationOutput)
}

func (i WeeklyMaintenanceScheduleConfigurationArgs) ToWeeklyMaintenanceScheduleConfigurationPtrOutput() WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return i.ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (i WeeklyMaintenanceScheduleConfigurationArgs) ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyMaintenanceScheduleConfigurationOutput).ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(ctx)
}

// WeeklyMaintenanceScheduleConfigurationPtrInput is an input type that accepts WeeklyMaintenanceScheduleConfigurationArgs, WeeklyMaintenanceScheduleConfigurationPtr and WeeklyMaintenanceScheduleConfigurationPtrOutput values.
// You can construct a concrete instance of `WeeklyMaintenanceScheduleConfigurationPtrInput` via:
//
//	        WeeklyMaintenanceScheduleConfigurationArgs{...}
//
//	or:
//
//	        nil
type WeeklyMaintenanceScheduleConfigurationPtrInput interface {
	pulumi.Input

	ToWeeklyMaintenanceScheduleConfigurationPtrOutput() WeeklyMaintenanceScheduleConfigurationPtrOutput
	ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(context.Context) WeeklyMaintenanceScheduleConfigurationPtrOutput
}

type weeklyMaintenanceScheduleConfigurationPtrType WeeklyMaintenanceScheduleConfigurationArgs

func WeeklyMaintenanceScheduleConfigurationPtr(v *WeeklyMaintenanceScheduleConfigurationArgs) WeeklyMaintenanceScheduleConfigurationPtrInput {
	return (*weeklyMaintenanceScheduleConfigurationPtrType)(v)
}

func (*weeklyMaintenanceScheduleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyMaintenanceScheduleConfiguration)(nil)).Elem()
}

func (i *weeklyMaintenanceScheduleConfigurationPtrType) ToWeeklyMaintenanceScheduleConfigurationPtrOutput() WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return i.ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (i *weeklyMaintenanceScheduleConfigurationPtrType) ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyMaintenanceScheduleConfigurationPtrOutput)
}

// Weekly planned maintenance
type WeeklyMaintenanceScheduleConfigurationOutput struct{ *pulumi.OutputState }

func (WeeklyMaintenanceScheduleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyMaintenanceScheduleConfiguration)(nil)).Elem()
}

func (o WeeklyMaintenanceScheduleConfigurationOutput) ToWeeklyMaintenanceScheduleConfigurationOutput() WeeklyMaintenanceScheduleConfigurationOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationOutput) ToWeeklyMaintenanceScheduleConfigurationOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationOutput) ToWeeklyMaintenanceScheduleConfigurationPtrOutput() WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return o.ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (o WeeklyMaintenanceScheduleConfigurationOutput) ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyMaintenanceScheduleConfiguration) *WeeklyMaintenanceScheduleConfiguration {
		return &v
	}).(WeeklyMaintenanceScheduleConfigurationPtrOutput)
}

// The day to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfiguration) string { return v.Day }).(pulumi.StringOutput)
}

// The frequency to run the maintenance job
// Expected value is 'Weekly'.
func (o WeeklyMaintenanceScheduleConfigurationOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfiguration) string { return v.Frequency }).(pulumi.StringOutput)
}

// The hour to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationOutput) Hour() pulumi.IntOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfiguration) int { return v.Hour }).(pulumi.IntOutput)
}

type WeeklyMaintenanceScheduleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WeeklyMaintenanceScheduleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyMaintenanceScheduleConfiguration)(nil)).Elem()
}

func (o WeeklyMaintenanceScheduleConfigurationPtrOutput) ToWeeklyMaintenanceScheduleConfigurationPtrOutput() WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationPtrOutput) ToWeeklyMaintenanceScheduleConfigurationPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationPtrOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationPtrOutput) Elem() WeeklyMaintenanceScheduleConfigurationOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfiguration) WeeklyMaintenanceScheduleConfiguration {
		if v != nil {
			return *v
		}
		var ret WeeklyMaintenanceScheduleConfiguration
		return ret
	}).(WeeklyMaintenanceScheduleConfigurationOutput)
}

// The day to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationPtrOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(pulumi.StringPtrOutput)
}

// The frequency to run the maintenance job
// Expected value is 'Weekly'.
func (o WeeklyMaintenanceScheduleConfigurationPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The hour to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationPtrOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Hour
	}).(pulumi.IntPtrOutput)
}

// Weekly planned maintenance
type WeeklyMaintenanceScheduleConfigurationResponse struct {
	// The day to run the maintenance job
	Day string `pulumi:"day"`
	// The duration time to run the maintenance job, specified in ISO8601 format, e.g. PT8H
	Duration string `pulumi:"duration"`
	// The frequency to run the maintenance job
	// Expected value is 'Weekly'.
	Frequency string `pulumi:"frequency"`
	// The hour to run the maintenance job
	Hour int `pulumi:"hour"`
}

// Weekly planned maintenance
type WeeklyMaintenanceScheduleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WeeklyMaintenanceScheduleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyMaintenanceScheduleConfigurationResponse)(nil)).Elem()
}

func (o WeeklyMaintenanceScheduleConfigurationResponseOutput) ToWeeklyMaintenanceScheduleConfigurationResponseOutput() WeeklyMaintenanceScheduleConfigurationResponseOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationResponseOutput) ToWeeklyMaintenanceScheduleConfigurationResponseOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationResponseOutput {
	return o
}

// The day to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationResponseOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfigurationResponse) string { return v.Day }).(pulumi.StringOutput)
}

// The duration time to run the maintenance job, specified in ISO8601 format, e.g. PT8H
func (o WeeklyMaintenanceScheduleConfigurationResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfigurationResponse) string { return v.Duration }).(pulumi.StringOutput)
}

// The frequency to run the maintenance job
// Expected value is 'Weekly'.
func (o WeeklyMaintenanceScheduleConfigurationResponseOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfigurationResponse) string { return v.Frequency }).(pulumi.StringOutput)
}

// The hour to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationResponseOutput) Hour() pulumi.IntOutput {
	return o.ApplyT(func(v WeeklyMaintenanceScheduleConfigurationResponse) int { return v.Hour }).(pulumi.IntOutput)
}

type WeeklyMaintenanceScheduleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyMaintenanceScheduleConfigurationResponse)(nil)).Elem()
}

func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) ToWeeklyMaintenanceScheduleConfigurationResponsePtrOutput() WeeklyMaintenanceScheduleConfigurationResponsePtrOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) ToWeeklyMaintenanceScheduleConfigurationResponsePtrOutputWithContext(ctx context.Context) WeeklyMaintenanceScheduleConfigurationResponsePtrOutput {
	return o
}

func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) Elem() WeeklyMaintenanceScheduleConfigurationResponseOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfigurationResponse) WeeklyMaintenanceScheduleConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyMaintenanceScheduleConfigurationResponse
		return ret
	}).(WeeklyMaintenanceScheduleConfigurationResponseOutput)
}

// The day to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(pulumi.StringPtrOutput)
}

// The duration time to run the maintenance job, specified in ISO8601 format, e.g. PT8H
func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// The frequency to run the maintenance job
// Expected value is 'Weekly'.
func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The hour to run the maintenance job
func (o WeeklyMaintenanceScheduleConfigurationResponsePtrOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceScheduleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Hour
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AcceleratorBasicAuthSettingOutput{})
	pulumi.RegisterOutputType(AcceleratorBasicAuthSettingPtrOutput{})
	pulumi.RegisterOutputType(AcceleratorBasicAuthSettingResponseOutput{})
	pulumi.RegisterOutputType(AcceleratorGitRepositoryOutput{})
	pulumi.RegisterOutputType(AcceleratorGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(AcceleratorGitRepositoryResponseOutput{})
	pulumi.RegisterOutputType(AcceleratorPublicSettingOutput{})
	pulumi.RegisterOutputType(AcceleratorPublicSettingPtrOutput{})
	pulumi.RegisterOutputType(AcceleratorPublicSettingResponseOutput{})
	pulumi.RegisterOutputType(AcceleratorSshSettingOutput{})
	pulumi.RegisterOutputType(AcceleratorSshSettingPtrOutput{})
	pulumi.RegisterOutputType(AcceleratorSshSettingResponseOutput{})
	pulumi.RegisterOutputType(ApiPortalCustomDomainPropertiesOutput{})
	pulumi.RegisterOutputType(ApiPortalCustomDomainPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiPortalCustomDomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiPortalInstanceResponseOutput{})
	pulumi.RegisterOutputType(ApiPortalInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiPortalPropertiesOutput{})
	pulumi.RegisterOutputType(ApiPortalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiPortalPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiPortalResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(ApmPropertiesOutput{})
	pulumi.RegisterOutputType(ApmPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApmPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApmReferenceOutput{})
	pulumi.RegisterOutputType(ApmReferenceArrayOutput{})
	pulumi.RegisterOutputType(ApmReferenceResponseOutput{})
	pulumi.RegisterOutputType(ApmReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(AppResourcePropertiesOutput{})
	pulumi.RegisterOutputType(AppResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AppResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AppVNetAddonsOutput{})
	pulumi.RegisterOutputType(AppVNetAddonsPtrOutput{})
	pulumi.RegisterOutputType(AppVNetAddonsResponseOutput{})
	pulumi.RegisterOutputType(AppVNetAddonsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorComponentResponseOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorComponentResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorInstanceResponseOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationAcceleratorResourceRequestsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsAgentVersionsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsAgentVersionsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationLiveViewComponentResponseOutput{})
	pulumi.RegisterOutputType(ApplicationLiveViewComponentResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLiveViewInstanceResponseOutput{})
	pulumi.RegisterOutputType(ApplicationLiveViewInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLiveViewPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationLiveViewResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(AzureFileVolumeOutput{})
	pulumi.RegisterOutputType(AzureFileVolumePtrOutput{})
	pulumi.RegisterOutputType(AzureFileVolumeResponseOutput{})
	pulumi.RegisterOutputType(AzureFileVolumeResponsePtrOutput{})
	pulumi.RegisterOutputType(BindingResourcePropertiesOutput{})
	pulumi.RegisterOutputType(BindingResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(BindingResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildPropertiesOutput{})
	pulumi.RegisterOutputType(BuildPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BuildPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildResourceRequestsOutput{})
	pulumi.RegisterOutputType(BuildResourceRequestsPtrOutput{})
	pulumi.RegisterOutputType(BuildResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(BuildResourceRequestsResponsePtrOutput{})
	pulumi.RegisterOutputType(BuildResultUserSourceInfoOutput{})
	pulumi.RegisterOutputType(BuildResultUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(BuildResultUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(BuildResultUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolPropertiesOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolSizePropertiesOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolSizePropertiesPtrOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolSizePropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildServiceAgentPoolSizePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BuilderPropertiesOutput{})
	pulumi.RegisterOutputType(BuilderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BuilderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildpackBindingLaunchPropertiesOutput{})
	pulumi.RegisterOutputType(BuildpackBindingLaunchPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BuildpackBindingLaunchPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildpackBindingLaunchPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BuildpackBindingPropertiesOutput{})
	pulumi.RegisterOutputType(BuildpackBindingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BuildpackBindingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildpackPropertiesOutput{})
	pulumi.RegisterOutputType(BuildpackPropertiesArrayOutput{})
	pulumi.RegisterOutputType(BuildpackPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildpackPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(BuildpacksGroupPropertiesOutput{})
	pulumi.RegisterOutputType(BuildpacksGroupPropertiesArrayOutput{})
	pulumi.RegisterOutputType(BuildpacksGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BuildpacksGroupPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(CertificateReferenceOutput{})
	pulumi.RegisterOutputType(CertificateReferenceArrayOutput{})
	pulumi.RegisterOutputType(CertificateReferenceResponseOutput{})
	pulumi.RegisterOutputType(CertificateReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterResourcePropertiesOutput{})
	pulumi.RegisterOutputType(ClusterResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConfigServerGitPropertyOutput{})
	pulumi.RegisterOutputType(ConfigServerGitPropertyPtrOutput{})
	pulumi.RegisterOutputType(ConfigServerGitPropertyResponseOutput{})
	pulumi.RegisterOutputType(ConfigServerGitPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConfigServerPropertiesOutput{})
	pulumi.RegisterOutputType(ConfigServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConfigServerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConfigServerSettingsOutput{})
	pulumi.RegisterOutputType(ConfigServerSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConfigServerSettingsResponseOutput{})
	pulumi.RegisterOutputType(ConfigServerSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitPropertyOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitPropertyPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitPropertyResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitRepositoryOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitRepositoryArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitRepositoryResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGitRepositoryResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceInstanceResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationServicePropertiesOutput{})
	pulumi.RegisterOutputType(ConfigurationServicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationServicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceSettingsOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerProbeSettingsOutput{})
	pulumi.RegisterOutputType(ContainerProbeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ContainerProbeSettingsResponseOutput{})
	pulumi.RegisterOutputType(ContainerProbeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerRegistryBasicCredentialsOutput{})
	pulumi.RegisterOutputType(ContainerRegistryBasicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ContainerRegistryBasicCredentialsResponseOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContentCertificatePropertiesOutput{})
	pulumi.RegisterOutputType(ContentCertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContentCertificatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CustomContainerOutput{})
	pulumi.RegisterOutputType(CustomContainerPtrOutput{})
	pulumi.RegisterOutputType(CustomContainerResponseOutput{})
	pulumi.RegisterOutputType(CustomContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomContainerUserSourceInfoOutput{})
	pulumi.RegisterOutputType(CustomContainerUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(CustomContainerUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(CustomContainerUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainPropertiesOutput{})
	pulumi.RegisterOutputType(CustomDomainPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CustomPersistentDiskResourceOutput{})
	pulumi.RegisterOutputType(CustomPersistentDiskResourceArrayOutput{})
	pulumi.RegisterOutputType(CustomPersistentDiskResourceResponseOutput{})
	pulumi.RegisterOutputType(CustomPersistentDiskResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomScaleRuleOutput{})
	pulumi.RegisterOutputType(CustomScaleRulePtrOutput{})
	pulumi.RegisterOutputType(CustomScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomizedAcceleratorPropertiesOutput{})
	pulumi.RegisterOutputType(CustomizedAcceleratorPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CustomizedAcceleratorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeploymentInstanceResponseOutput{})
	pulumi.RegisterOutputType(DeploymentInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentResourcePropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeploymentResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsResponseOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalComponentResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalComponentResponseArrayOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureDetailOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureDetailPtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureDetailResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureDetailResponsePtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureSettingsOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureSettingsPtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureSettingsResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalInstanceResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(DevToolPortalPropertiesOutput{})
	pulumi.RegisterOutputType(DevToolPortalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalSsoPropertiesOutput{})
	pulumi.RegisterOutputType(DevToolPortalSsoPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalSsoPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevToolPortalSsoPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorOutput{})
	pulumi.RegisterOutputType(ErrorPtrOutput{})
	pulumi.RegisterOutputType(ErrorResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(ExecActionOutput{})
	pulumi.RegisterOutputType(ExecActionPtrOutput{})
	pulumi.RegisterOutputType(ExecActionResponseOutput{})
	pulumi.RegisterOutputType(ExecActionResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayApiMetadataPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayApiMetadataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayApiMetadataPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayApiMetadataPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayApiRouteOutput{})
	pulumi.RegisterOutputType(GatewayApiRouteArrayOutput{})
	pulumi.RegisterOutputType(GatewayApiRouteResponseOutput{})
	pulumi.RegisterOutputType(GatewayApiRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayCorsPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayCorsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayCorsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayCorsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayCustomDomainPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayCustomDomainPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayCustomDomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayInstanceResponseOutput{})
	pulumi.RegisterOutputType(GatewayInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerInstancePropertiesOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerInstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerInstancePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerRoutePropertiesOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerRoutePropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerRoutePropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayLocalResponseCachePerRoutePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayOperatorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayOperatorResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesClientAuthOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesClientAuthPtrOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesEnvironmentVariablesOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesEnvironmentVariablesPtrOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesResponseClientAuthOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesResponseClientAuthPtrOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesResponseEnvironmentVariablesOutput{})
	pulumi.RegisterOutputType(GatewayPropertiesResponseEnvironmentVariablesPtrOutput{})
	pulumi.RegisterOutputType(GatewayResourceRequestsOutput{})
	pulumi.RegisterOutputType(GatewayResourceRequestsPtrOutput{})
	pulumi.RegisterOutputType(GatewayResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(GatewayResourceRequestsResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigOpenApiPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigOpenApiPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigOpenApiPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigOpenApiPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GitPatternRepositoryOutput{})
	pulumi.RegisterOutputType(GitPatternRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GitPatternRepositoryResponseOutput{})
	pulumi.RegisterOutputType(GitPatternRepositoryResponseArrayOutput{})
	pulumi.RegisterOutputType(HTTPGetActionOutput{})
	pulumi.RegisterOutputType(HTTPGetActionPtrOutput{})
	pulumi.RegisterOutputType(HTTPGetActionResponseOutput{})
	pulumi.RegisterOutputType(HTTPGetActionResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpScaleRuleOutput{})
	pulumi.RegisterOutputType(HttpScaleRulePtrOutput{})
	pulumi.RegisterOutputType(HttpScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(HttpScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageRegistryCredentialOutput{})
	pulumi.RegisterOutputType(ImageRegistryCredentialPtrOutput{})
	pulumi.RegisterOutputType(ImageRegistryCredentialResponseOutput{})
	pulumi.RegisterOutputType(ImageRegistryCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressConfigOutput{})
	pulumi.RegisterOutputType(IngressConfigPtrOutput{})
	pulumi.RegisterOutputType(IngressConfigResponseOutput{})
	pulumi.RegisterOutputType(IngressConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressSettingsOutput{})
	pulumi.RegisterOutputType(IngressSettingsPtrOutput{})
	pulumi.RegisterOutputType(IngressSettingsClientAuthOutput{})
	pulumi.RegisterOutputType(IngressSettingsClientAuthPtrOutput{})
	pulumi.RegisterOutputType(IngressSettingsResponseOutput{})
	pulumi.RegisterOutputType(IngressSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressSettingsResponseClientAuthOutput{})
	pulumi.RegisterOutputType(IngressSettingsResponseClientAuthPtrOutput{})
	pulumi.RegisterOutputType(JarUploadedUserSourceInfoOutput{})
	pulumi.RegisterOutputType(JarUploadedUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(JarUploadedUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(JarUploadedUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificatePropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(LoadedCertificateOutput{})
	pulumi.RegisterOutputType(LoadedCertificateArrayOutput{})
	pulumi.RegisterOutputType(LoadedCertificateResponseOutput{})
	pulumi.RegisterOutputType(LoadedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MarketplaceResourceOutput{})
	pulumi.RegisterOutputType(MarketplaceResourcePtrOutput{})
	pulumi.RegisterOutputType(MarketplaceResourceResponseOutput{})
	pulumi.RegisterOutputType(MarketplaceResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitoringSettingPropertiesOutput{})
	pulumi.RegisterOutputType(MonitoringSettingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MonitoringSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetCoreZipUploadedUserSourceInfoOutput{})
	pulumi.RegisterOutputType(NetCoreZipUploadedUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(NetCoreZipUploadedUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(NetCoreZipUploadedUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutboundIPsOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutboundIPsPtrOutput{})
	pulumi.RegisterOutputType(PersistentDiskOutput{})
	pulumi.RegisterOutputType(PersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(PersistentDiskResponseOutput{})
	pulumi.RegisterOutputType(PersistentDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeOutput{})
	pulumi.RegisterOutputType(ProbePtrOutput{})
	pulumi.RegisterOutputType(ProbeResponseOutput{})
	pulumi.RegisterOutputType(ProbeResponsePtrOutput{})
	pulumi.RegisterOutputType(QueueScaleRuleOutput{})
	pulumi.RegisterOutputType(QueueScaleRulePtrOutput{})
	pulumi.RegisterOutputType(QueueScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(QueueScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(RequiredTrafficResponseOutput{})
	pulumi.RegisterOutputType(RequiredTrafficResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceRequestsOutput{})
	pulumi.RegisterOutputType(ResourceRequestsPtrOutput{})
	pulumi.RegisterOutputType(ResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(ResourceRequestsResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleOutput{})
	pulumi.RegisterOutputType(ScalePtrOutput{})
	pulumi.RegisterOutputType(ScaleResponseOutput{})
	pulumi.RegisterOutputType(ScaleResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleRuleOutput{})
	pulumi.RegisterOutputType(ScaleRuleArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthResponseOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthResponseArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(ScaleRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SecretOutput{})
	pulumi.RegisterOutputType(SecretArrayOutput{})
	pulumi.RegisterOutputType(SecretResponseOutput{})
	pulumi.RegisterOutputType(SecretResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceRegistryInstanceResponseOutput{})
	pulumi.RegisterOutputType(ServiceRegistryInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceRegistryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceRegistryResourceRequestsResponseOutput{})
	pulumi.RegisterOutputType(ServiceVNetAddonsOutput{})
	pulumi.RegisterOutputType(ServiceVNetAddonsPtrOutput{})
	pulumi.RegisterOutputType(ServiceVNetAddonsResponseOutput{})
	pulumi.RegisterOutputType(ServiceVNetAddonsResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceUploadedUserSourceInfoOutput{})
	pulumi.RegisterOutputType(SourceUploadedUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(SourceUploadedUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(SourceUploadedUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(SsoPropertiesOutput{})
	pulumi.RegisterOutputType(SsoPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SsoPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SsoPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StackPropertiesOutput{})
	pulumi.RegisterOutputType(StackPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StackPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StackPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountOutput{})
	pulumi.RegisterOutputType(StorageAccountPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TCPSocketActionOutput{})
	pulumi.RegisterOutputType(TCPSocketActionPtrOutput{})
	pulumi.RegisterOutputType(TCPSocketActionResponseOutput{})
	pulumi.RegisterOutputType(TCPSocketActionResponsePtrOutput{})
	pulumi.RegisterOutputType(TcpScaleRuleOutput{})
	pulumi.RegisterOutputType(TcpScaleRulePtrOutput{})
	pulumi.RegisterOutputType(TcpScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(TcpScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(TemporaryDiskOutput{})
	pulumi.RegisterOutputType(TemporaryDiskPtrOutput{})
	pulumi.RegisterOutputType(TemporaryDiskResponseOutput{})
	pulumi.RegisterOutputType(TemporaryDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(TriggeredBuildResultResponseOutput{})
	pulumi.RegisterOutputType(UploadedUserSourceInfoOutput{})
	pulumi.RegisterOutputType(UploadedUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(UploadedUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(UploadedUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(WarUploadedUserSourceInfoOutput{})
	pulumi.RegisterOutputType(WarUploadedUserSourceInfoPtrOutput{})
	pulumi.RegisterOutputType(WarUploadedUserSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(WarUploadedUserSourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyMaintenanceScheduleConfigurationOutput{})
	pulumi.RegisterOutputType(WeeklyMaintenanceScheduleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WeeklyMaintenanceScheduleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WeeklyMaintenanceScheduleConfigurationResponsePtrOutput{})
}
