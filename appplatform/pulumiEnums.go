// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Type of application performance monitoring
type ApmType string

const (
	ApmTypeApplicationInsights = ApmType("ApplicationInsights")
	ApmTypeAppDynamics         = ApmType("AppDynamics")
	ApmTypeDynatrace           = ApmType("Dynatrace")
	ApmTypeNewRelic            = ApmType("NewRelic")
	ApmTypeElasticAPM          = ApmType("ElasticAPM")
)

func (ApmType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmType)(nil)).Elem()
}

func (e ApmType) ToApmTypeOutput() ApmTypeOutput {
	return pulumi.ToOutput(e).(ApmTypeOutput)
}

func (e ApmType) ToApmTypeOutputWithContext(ctx context.Context) ApmTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApmTypeOutput)
}

func (e ApmType) ToApmTypePtrOutput() ApmTypePtrOutput {
	return e.ToApmTypePtrOutputWithContext(context.Background())
}

func (e ApmType) ToApmTypePtrOutputWithContext(ctx context.Context) ApmTypePtrOutput {
	return ApmType(e).ToApmTypeOutputWithContext(ctx).ToApmTypePtrOutputWithContext(ctx)
}

func (e ApmType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApmType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApmType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApmType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApmTypeOutput struct{ *pulumi.OutputState }

func (ApmTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmType)(nil)).Elem()
}

func (o ApmTypeOutput) ToApmTypeOutput() ApmTypeOutput {
	return o
}

func (o ApmTypeOutput) ToApmTypeOutputWithContext(ctx context.Context) ApmTypeOutput {
	return o
}

func (o ApmTypeOutput) ToApmTypePtrOutput() ApmTypePtrOutput {
	return o.ToApmTypePtrOutputWithContext(context.Background())
}

func (o ApmTypeOutput) ToApmTypePtrOutputWithContext(ctx context.Context) ApmTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApmType) *ApmType {
		return &v
	}).(ApmTypePtrOutput)
}

func (o ApmTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApmTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApmType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApmTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApmTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApmType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApmTypePtrOutput struct{ *pulumi.OutputState }

func (ApmTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApmType)(nil)).Elem()
}

func (o ApmTypePtrOutput) ToApmTypePtrOutput() ApmTypePtrOutput {
	return o
}

func (o ApmTypePtrOutput) ToApmTypePtrOutputWithContext(ctx context.Context) ApmTypePtrOutput {
	return o
}

func (o ApmTypePtrOutput) Elem() ApmTypeOutput {
	return o.ApplyT(func(v *ApmType) ApmType {
		if v != nil {
			return *v
		}
		var ret ApmType
		return ret
	}).(ApmTypeOutput)
}

func (o ApmTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApmTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApmType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApmTypeInput is an input type that accepts values of the ApmType enum
// A concrete instance of `ApmTypeInput` can be one of the following:
//
//	ApmTypeApplicationInsights
//	ApmTypeAppDynamics
//	ApmTypeDynatrace
//	ApmTypeNewRelic
//	ApmTypeElasticAPM
type ApmTypeInput interface {
	pulumi.Input

	ToApmTypeOutput() ApmTypeOutput
	ToApmTypeOutputWithContext(context.Context) ApmTypeOutput
}

var apmTypePtrType = reflect.TypeOf((**ApmType)(nil)).Elem()

type ApmTypePtrInput interface {
	pulumi.Input

	ToApmTypePtrOutput() ApmTypePtrOutput
	ToApmTypePtrOutputWithContext(context.Context) ApmTypePtrOutput
}

type apmTypePtr string

func ApmTypePtr(v string) ApmTypePtrInput {
	return (*apmTypePtr)(&v)
}

func (*apmTypePtr) ElementType() reflect.Type {
	return apmTypePtrType
}

func (in *apmTypePtr) ToApmTypePtrOutput() ApmTypePtrOutput {
	return pulumi.ToOutput(in).(ApmTypePtrOutput)
}

func (in *apmTypePtr) ToApmTypePtrOutputWithContext(ctx context.Context) ApmTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApmTypePtrOutput)
}

// How ingress should communicate with this app backend service.
type BackendProtocol string

const (
	BackendProtocolGRPC    = BackendProtocol("GRPC")
	BackendProtocolDefault = BackendProtocol("Default")
)

func (BackendProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProtocol)(nil)).Elem()
}

func (e BackendProtocol) ToBackendProtocolOutput() BackendProtocolOutput {
	return pulumi.ToOutput(e).(BackendProtocolOutput)
}

func (e BackendProtocol) ToBackendProtocolOutputWithContext(ctx context.Context) BackendProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendProtocolOutput)
}

func (e BackendProtocol) ToBackendProtocolPtrOutput() BackendProtocolPtrOutput {
	return e.ToBackendProtocolPtrOutputWithContext(context.Background())
}

func (e BackendProtocol) ToBackendProtocolPtrOutputWithContext(ctx context.Context) BackendProtocolPtrOutput {
	return BackendProtocol(e).ToBackendProtocolOutputWithContext(ctx).ToBackendProtocolPtrOutputWithContext(ctx)
}

func (e BackendProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendProtocolOutput struct{ *pulumi.OutputState }

func (BackendProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProtocol)(nil)).Elem()
}

func (o BackendProtocolOutput) ToBackendProtocolOutput() BackendProtocolOutput {
	return o
}

func (o BackendProtocolOutput) ToBackendProtocolOutputWithContext(ctx context.Context) BackendProtocolOutput {
	return o
}

func (o BackendProtocolOutput) ToBackendProtocolPtrOutput() BackendProtocolPtrOutput {
	return o.ToBackendProtocolPtrOutputWithContext(context.Background())
}

func (o BackendProtocolOutput) ToBackendProtocolPtrOutputWithContext(ctx context.Context) BackendProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendProtocol) *BackendProtocol {
		return &v
	}).(BackendProtocolPtrOutput)
}

func (o BackendProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendProtocolPtrOutput struct{ *pulumi.OutputState }

func (BackendProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProtocol)(nil)).Elem()
}

func (o BackendProtocolPtrOutput) ToBackendProtocolPtrOutput() BackendProtocolPtrOutput {
	return o
}

func (o BackendProtocolPtrOutput) ToBackendProtocolPtrOutputWithContext(ctx context.Context) BackendProtocolPtrOutput {
	return o
}

func (o BackendProtocolPtrOutput) Elem() BackendProtocolOutput {
	return o.ApplyT(func(v *BackendProtocol) BackendProtocol {
		if v != nil {
			return *v
		}
		var ret BackendProtocol
		return ret
	}).(BackendProtocolOutput)
}

func (o BackendProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendProtocolInput is an input type that accepts values of the BackendProtocol enum
// A concrete instance of `BackendProtocolInput` can be one of the following:
//
//	BackendProtocolGRPC
//	BackendProtocolDefault
type BackendProtocolInput interface {
	pulumi.Input

	ToBackendProtocolOutput() BackendProtocolOutput
	ToBackendProtocolOutputWithContext(context.Context) BackendProtocolOutput
}

var backendProtocolPtrType = reflect.TypeOf((**BackendProtocol)(nil)).Elem()

type BackendProtocolPtrInput interface {
	pulumi.Input

	ToBackendProtocolPtrOutput() BackendProtocolPtrOutput
	ToBackendProtocolPtrOutputWithContext(context.Context) BackendProtocolPtrOutput
}

type backendProtocolPtr string

func BackendProtocolPtr(v string) BackendProtocolPtrInput {
	return (*backendProtocolPtr)(&v)
}

func (*backendProtocolPtr) ElementType() reflect.Type {
	return backendProtocolPtrType
}

func (in *backendProtocolPtr) ToBackendProtocolPtrOutput() BackendProtocolPtrOutput {
	return pulumi.ToOutput(in).(BackendProtocolPtrOutput)
}

func (in *backendProtocolPtr) ToBackendProtocolPtrOutputWithContext(ctx context.Context) BackendProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendProtocolPtrOutput)
}

// Buildpack Binding Type
type BindingType string

const (
	BindingTypeApplicationInsights = BindingType("ApplicationInsights")
	BindingTypeApacheSkyWalking    = BindingType("ApacheSkyWalking")
	BindingTypeAppDynamics         = BindingType("AppDynamics")
	BindingTypeDynatrace           = BindingType("Dynatrace")
	BindingTypeNewRelic            = BindingType("NewRelic")
	BindingTypeElasticAPM          = BindingType("ElasticAPM")
	BindingTypeCACertificates      = BindingType("CACertificates")
)

func (BindingType) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingType)(nil)).Elem()
}

func (e BindingType) ToBindingTypeOutput() BindingTypeOutput {
	return pulumi.ToOutput(e).(BindingTypeOutput)
}

func (e BindingType) ToBindingTypeOutputWithContext(ctx context.Context) BindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BindingTypeOutput)
}

func (e BindingType) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return e.ToBindingTypePtrOutputWithContext(context.Background())
}

func (e BindingType) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return BindingType(e).ToBindingTypeOutputWithContext(ctx).ToBindingTypePtrOutputWithContext(ctx)
}

func (e BindingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BindingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BindingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BindingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BindingTypeOutput struct{ *pulumi.OutputState }

func (BindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingType)(nil)).Elem()
}

func (o BindingTypeOutput) ToBindingTypeOutput() BindingTypeOutput {
	return o
}

func (o BindingTypeOutput) ToBindingTypeOutputWithContext(ctx context.Context) BindingTypeOutput {
	return o
}

func (o BindingTypeOutput) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return o.ToBindingTypePtrOutputWithContext(context.Background())
}

func (o BindingTypeOutput) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BindingType) *BindingType {
		return &v
	}).(BindingTypePtrOutput)
}

func (o BindingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BindingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BindingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BindingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BindingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BindingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BindingTypePtrOutput struct{ *pulumi.OutputState }

func (BindingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingType)(nil)).Elem()
}

func (o BindingTypePtrOutput) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return o
}

func (o BindingTypePtrOutput) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return o
}

func (o BindingTypePtrOutput) Elem() BindingTypeOutput {
	return o.ApplyT(func(v *BindingType) BindingType {
		if v != nil {
			return *v
		}
		var ret BindingType
		return ret
	}).(BindingTypeOutput)
}

func (o BindingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BindingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BindingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BindingTypeInput is an input type that accepts values of the BindingType enum
// A concrete instance of `BindingTypeInput` can be one of the following:
//
//	BindingTypeApplicationInsights
//	BindingTypeApacheSkyWalking
//	BindingTypeAppDynamics
//	BindingTypeDynatrace
//	BindingTypeNewRelic
//	BindingTypeElasticAPM
//	BindingTypeCACertificates
type BindingTypeInput interface {
	pulumi.Input

	ToBindingTypeOutput() BindingTypeOutput
	ToBindingTypeOutputWithContext(context.Context) BindingTypeOutput
}

var bindingTypePtrType = reflect.TypeOf((**BindingType)(nil)).Elem()

type BindingTypePtrInput interface {
	pulumi.Input

	ToBindingTypePtrOutput() BindingTypePtrOutput
	ToBindingTypePtrOutputWithContext(context.Context) BindingTypePtrOutput
}

type bindingTypePtr string

func BindingTypePtr(v string) BindingTypePtrInput {
	return (*bindingTypePtr)(&v)
}

func (*bindingTypePtr) ElementType() reflect.Type {
	return bindingTypePtrType
}

func (in *bindingTypePtr) ToBindingTypePtrOutput() BindingTypePtrOutput {
	return pulumi.ToOutput(in).(BindingTypePtrOutput)
}

func (in *bindingTypePtr) ToBindingTypePtrOutputWithContext(ctx context.Context) BindingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BindingTypePtrOutput)
}

// Enabled state of the config server. This is only used in Consumption tier.
type ConfigServerEnabledState string

const (
	// Enable the config server.
	ConfigServerEnabledStateEnabled = ConfigServerEnabledState("Enabled")
	// Disable the config server.
	ConfigServerEnabledStateDisabled = ConfigServerEnabledState("Disabled")
)

func (ConfigServerEnabledState) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerEnabledState)(nil)).Elem()
}

func (e ConfigServerEnabledState) ToConfigServerEnabledStateOutput() ConfigServerEnabledStateOutput {
	return pulumi.ToOutput(e).(ConfigServerEnabledStateOutput)
}

func (e ConfigServerEnabledState) ToConfigServerEnabledStateOutputWithContext(ctx context.Context) ConfigServerEnabledStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigServerEnabledStateOutput)
}

func (e ConfigServerEnabledState) ToConfigServerEnabledStatePtrOutput() ConfigServerEnabledStatePtrOutput {
	return e.ToConfigServerEnabledStatePtrOutputWithContext(context.Background())
}

func (e ConfigServerEnabledState) ToConfigServerEnabledStatePtrOutputWithContext(ctx context.Context) ConfigServerEnabledStatePtrOutput {
	return ConfigServerEnabledState(e).ToConfigServerEnabledStateOutputWithContext(ctx).ToConfigServerEnabledStatePtrOutputWithContext(ctx)
}

func (e ConfigServerEnabledState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigServerEnabledState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigServerEnabledState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigServerEnabledState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigServerEnabledStateOutput struct{ *pulumi.OutputState }

func (ConfigServerEnabledStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigServerEnabledState)(nil)).Elem()
}

func (o ConfigServerEnabledStateOutput) ToConfigServerEnabledStateOutput() ConfigServerEnabledStateOutput {
	return o
}

func (o ConfigServerEnabledStateOutput) ToConfigServerEnabledStateOutputWithContext(ctx context.Context) ConfigServerEnabledStateOutput {
	return o
}

func (o ConfigServerEnabledStateOutput) ToConfigServerEnabledStatePtrOutput() ConfigServerEnabledStatePtrOutput {
	return o.ToConfigServerEnabledStatePtrOutputWithContext(context.Background())
}

func (o ConfigServerEnabledStateOutput) ToConfigServerEnabledStatePtrOutputWithContext(ctx context.Context) ConfigServerEnabledStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigServerEnabledState) *ConfigServerEnabledState {
		return &v
	}).(ConfigServerEnabledStatePtrOutput)
}

func (o ConfigServerEnabledStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigServerEnabledStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigServerEnabledState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigServerEnabledStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigServerEnabledStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigServerEnabledState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigServerEnabledStatePtrOutput struct{ *pulumi.OutputState }

func (ConfigServerEnabledStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServerEnabledState)(nil)).Elem()
}

func (o ConfigServerEnabledStatePtrOutput) ToConfigServerEnabledStatePtrOutput() ConfigServerEnabledStatePtrOutput {
	return o
}

func (o ConfigServerEnabledStatePtrOutput) ToConfigServerEnabledStatePtrOutputWithContext(ctx context.Context) ConfigServerEnabledStatePtrOutput {
	return o
}

func (o ConfigServerEnabledStatePtrOutput) Elem() ConfigServerEnabledStateOutput {
	return o.ApplyT(func(v *ConfigServerEnabledState) ConfigServerEnabledState {
		if v != nil {
			return *v
		}
		var ret ConfigServerEnabledState
		return ret
	}).(ConfigServerEnabledStateOutput)
}

func (o ConfigServerEnabledStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigServerEnabledStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigServerEnabledState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigServerEnabledStateInput is an input type that accepts values of the ConfigServerEnabledState enum
// A concrete instance of `ConfigServerEnabledStateInput` can be one of the following:
//
//	ConfigServerEnabledStateEnabled
//	ConfigServerEnabledStateDisabled
type ConfigServerEnabledStateInput interface {
	pulumi.Input

	ToConfigServerEnabledStateOutput() ConfigServerEnabledStateOutput
	ToConfigServerEnabledStateOutputWithContext(context.Context) ConfigServerEnabledStateOutput
}

var configServerEnabledStatePtrType = reflect.TypeOf((**ConfigServerEnabledState)(nil)).Elem()

type ConfigServerEnabledStatePtrInput interface {
	pulumi.Input

	ToConfigServerEnabledStatePtrOutput() ConfigServerEnabledStatePtrOutput
	ToConfigServerEnabledStatePtrOutputWithContext(context.Context) ConfigServerEnabledStatePtrOutput
}

type configServerEnabledStatePtr string

func ConfigServerEnabledStatePtr(v string) ConfigServerEnabledStatePtrInput {
	return (*configServerEnabledStatePtr)(&v)
}

func (*configServerEnabledStatePtr) ElementType() reflect.Type {
	return configServerEnabledStatePtrType
}

func (in *configServerEnabledStatePtr) ToConfigServerEnabledStatePtrOutput() ConfigServerEnabledStatePtrOutput {
	return pulumi.ToOutput(in).(ConfigServerEnabledStatePtrOutput)
}

func (in *configServerEnabledStatePtr) ToConfigServerEnabledStatePtrOutputWithContext(ctx context.Context) ConfigServerEnabledStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigServerEnabledStatePtrOutput)
}

// The generation of the Application Configuration Service.
type ConfigurationServiceGeneration string

const (
	ConfigurationServiceGenerationGen1 = ConfigurationServiceGeneration("Gen1")
	ConfigurationServiceGenerationGen2 = ConfigurationServiceGeneration("Gen2")
)

func (ConfigurationServiceGeneration) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGeneration)(nil)).Elem()
}

func (e ConfigurationServiceGeneration) ToConfigurationServiceGenerationOutput() ConfigurationServiceGenerationOutput {
	return pulumi.ToOutput(e).(ConfigurationServiceGenerationOutput)
}

func (e ConfigurationServiceGeneration) ToConfigurationServiceGenerationOutputWithContext(ctx context.Context) ConfigurationServiceGenerationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigurationServiceGenerationOutput)
}

func (e ConfigurationServiceGeneration) ToConfigurationServiceGenerationPtrOutput() ConfigurationServiceGenerationPtrOutput {
	return e.ToConfigurationServiceGenerationPtrOutputWithContext(context.Background())
}

func (e ConfigurationServiceGeneration) ToConfigurationServiceGenerationPtrOutputWithContext(ctx context.Context) ConfigurationServiceGenerationPtrOutput {
	return ConfigurationServiceGeneration(e).ToConfigurationServiceGenerationOutputWithContext(ctx).ToConfigurationServiceGenerationPtrOutputWithContext(ctx)
}

func (e ConfigurationServiceGeneration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigurationServiceGeneration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigurationServiceGeneration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigurationServiceGeneration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigurationServiceGenerationOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGenerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationServiceGeneration)(nil)).Elem()
}

func (o ConfigurationServiceGenerationOutput) ToConfigurationServiceGenerationOutput() ConfigurationServiceGenerationOutput {
	return o
}

func (o ConfigurationServiceGenerationOutput) ToConfigurationServiceGenerationOutputWithContext(ctx context.Context) ConfigurationServiceGenerationOutput {
	return o
}

func (o ConfigurationServiceGenerationOutput) ToConfigurationServiceGenerationPtrOutput() ConfigurationServiceGenerationPtrOutput {
	return o.ToConfigurationServiceGenerationPtrOutputWithContext(context.Background())
}

func (o ConfigurationServiceGenerationOutput) ToConfigurationServiceGenerationPtrOutputWithContext(ctx context.Context) ConfigurationServiceGenerationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationServiceGeneration) *ConfigurationServiceGeneration {
		return &v
	}).(ConfigurationServiceGenerationPtrOutput)
}

func (o ConfigurationServiceGenerationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigurationServiceGenerationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigurationServiceGeneration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigurationServiceGenerationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigurationServiceGenerationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigurationServiceGeneration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigurationServiceGenerationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationServiceGenerationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationServiceGeneration)(nil)).Elem()
}

func (o ConfigurationServiceGenerationPtrOutput) ToConfigurationServiceGenerationPtrOutput() ConfigurationServiceGenerationPtrOutput {
	return o
}

func (o ConfigurationServiceGenerationPtrOutput) ToConfigurationServiceGenerationPtrOutputWithContext(ctx context.Context) ConfigurationServiceGenerationPtrOutput {
	return o
}

func (o ConfigurationServiceGenerationPtrOutput) Elem() ConfigurationServiceGenerationOutput {
	return o.ApplyT(func(v *ConfigurationServiceGeneration) ConfigurationServiceGeneration {
		if v != nil {
			return *v
		}
		var ret ConfigurationServiceGeneration
		return ret
	}).(ConfigurationServiceGenerationOutput)
}

func (o ConfigurationServiceGenerationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigurationServiceGenerationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigurationServiceGeneration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigurationServiceGenerationInput is an input type that accepts values of the ConfigurationServiceGeneration enum
// A concrete instance of `ConfigurationServiceGenerationInput` can be one of the following:
//
//	ConfigurationServiceGenerationGen1
//	ConfigurationServiceGenerationGen2
type ConfigurationServiceGenerationInput interface {
	pulumi.Input

	ToConfigurationServiceGenerationOutput() ConfigurationServiceGenerationOutput
	ToConfigurationServiceGenerationOutputWithContext(context.Context) ConfigurationServiceGenerationOutput
}

var configurationServiceGenerationPtrType = reflect.TypeOf((**ConfigurationServiceGeneration)(nil)).Elem()

type ConfigurationServiceGenerationPtrInput interface {
	pulumi.Input

	ToConfigurationServiceGenerationPtrOutput() ConfigurationServiceGenerationPtrOutput
	ToConfigurationServiceGenerationPtrOutputWithContext(context.Context) ConfigurationServiceGenerationPtrOutput
}

type configurationServiceGenerationPtr string

func ConfigurationServiceGenerationPtr(v string) ConfigurationServiceGenerationPtrInput {
	return (*configurationServiceGenerationPtr)(&v)
}

func (*configurationServiceGenerationPtr) ElementType() reflect.Type {
	return configurationServiceGenerationPtrType
}

func (in *configurationServiceGenerationPtr) ToConfigurationServiceGenerationPtrOutput() ConfigurationServiceGenerationPtrOutput {
	return pulumi.ToOutput(in).(ConfigurationServiceGenerationPtrOutput)
}

func (in *configurationServiceGenerationPtr) ToConfigurationServiceGenerationPtrOutputWithContext(ctx context.Context) ConfigurationServiceGenerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigurationServiceGenerationPtrOutput)
}

// State of the plugin
type DevToolPortalFeatureState string

const (
	// Enable the plugin in Dev Tool Portal.
	DevToolPortalFeatureStateEnabled = DevToolPortalFeatureState("Enabled")
	// Disable the plugin in Dev Tool Portal.
	DevToolPortalFeatureStateDisabled = DevToolPortalFeatureState("Disabled")
)

func (DevToolPortalFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureState)(nil)).Elem()
}

func (e DevToolPortalFeatureState) ToDevToolPortalFeatureStateOutput() DevToolPortalFeatureStateOutput {
	return pulumi.ToOutput(e).(DevToolPortalFeatureStateOutput)
}

func (e DevToolPortalFeatureState) ToDevToolPortalFeatureStateOutputWithContext(ctx context.Context) DevToolPortalFeatureStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DevToolPortalFeatureStateOutput)
}

func (e DevToolPortalFeatureState) ToDevToolPortalFeatureStatePtrOutput() DevToolPortalFeatureStatePtrOutput {
	return e.ToDevToolPortalFeatureStatePtrOutputWithContext(context.Background())
}

func (e DevToolPortalFeatureState) ToDevToolPortalFeatureStatePtrOutputWithContext(ctx context.Context) DevToolPortalFeatureStatePtrOutput {
	return DevToolPortalFeatureState(e).ToDevToolPortalFeatureStateOutputWithContext(ctx).ToDevToolPortalFeatureStatePtrOutputWithContext(ctx)
}

func (e DevToolPortalFeatureState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DevToolPortalFeatureState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DevToolPortalFeatureState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DevToolPortalFeatureState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DevToolPortalFeatureStateOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevToolPortalFeatureState)(nil)).Elem()
}

func (o DevToolPortalFeatureStateOutput) ToDevToolPortalFeatureStateOutput() DevToolPortalFeatureStateOutput {
	return o
}

func (o DevToolPortalFeatureStateOutput) ToDevToolPortalFeatureStateOutputWithContext(ctx context.Context) DevToolPortalFeatureStateOutput {
	return o
}

func (o DevToolPortalFeatureStateOutput) ToDevToolPortalFeatureStatePtrOutput() DevToolPortalFeatureStatePtrOutput {
	return o.ToDevToolPortalFeatureStatePtrOutputWithContext(context.Background())
}

func (o DevToolPortalFeatureStateOutput) ToDevToolPortalFeatureStatePtrOutputWithContext(ctx context.Context) DevToolPortalFeatureStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevToolPortalFeatureState) *DevToolPortalFeatureState {
		return &v
	}).(DevToolPortalFeatureStatePtrOutput)
}

func (o DevToolPortalFeatureStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DevToolPortalFeatureStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DevToolPortalFeatureState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DevToolPortalFeatureStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DevToolPortalFeatureStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DevToolPortalFeatureState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DevToolPortalFeatureStatePtrOutput struct{ *pulumi.OutputState }

func (DevToolPortalFeatureStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevToolPortalFeatureState)(nil)).Elem()
}

func (o DevToolPortalFeatureStatePtrOutput) ToDevToolPortalFeatureStatePtrOutput() DevToolPortalFeatureStatePtrOutput {
	return o
}

func (o DevToolPortalFeatureStatePtrOutput) ToDevToolPortalFeatureStatePtrOutputWithContext(ctx context.Context) DevToolPortalFeatureStatePtrOutput {
	return o
}

func (o DevToolPortalFeatureStatePtrOutput) Elem() DevToolPortalFeatureStateOutput {
	return o.ApplyT(func(v *DevToolPortalFeatureState) DevToolPortalFeatureState {
		if v != nil {
			return *v
		}
		var ret DevToolPortalFeatureState
		return ret
	}).(DevToolPortalFeatureStateOutput)
}

func (o DevToolPortalFeatureStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DevToolPortalFeatureStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DevToolPortalFeatureState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DevToolPortalFeatureStateInput is an input type that accepts values of the DevToolPortalFeatureState enum
// A concrete instance of `DevToolPortalFeatureStateInput` can be one of the following:
//
//	DevToolPortalFeatureStateEnabled
//	DevToolPortalFeatureStateDisabled
type DevToolPortalFeatureStateInput interface {
	pulumi.Input

	ToDevToolPortalFeatureStateOutput() DevToolPortalFeatureStateOutput
	ToDevToolPortalFeatureStateOutputWithContext(context.Context) DevToolPortalFeatureStateOutput
}

var devToolPortalFeatureStatePtrType = reflect.TypeOf((**DevToolPortalFeatureState)(nil)).Elem()

type DevToolPortalFeatureStatePtrInput interface {
	pulumi.Input

	ToDevToolPortalFeatureStatePtrOutput() DevToolPortalFeatureStatePtrOutput
	ToDevToolPortalFeatureStatePtrOutputWithContext(context.Context) DevToolPortalFeatureStatePtrOutput
}

type devToolPortalFeatureStatePtr string

func DevToolPortalFeatureStatePtr(v string) DevToolPortalFeatureStatePtrInput {
	return (*devToolPortalFeatureStatePtr)(&v)
}

func (*devToolPortalFeatureStatePtr) ElementType() reflect.Type {
	return devToolPortalFeatureStatePtrType
}

func (in *devToolPortalFeatureStatePtr) ToDevToolPortalFeatureStatePtrOutput() DevToolPortalFeatureStatePtrOutput {
	return pulumi.ToOutput(in).(DevToolPortalFeatureStatePtrOutput)
}

func (in *devToolPortalFeatureStatePtr) ToDevToolPortalFeatureStatePtrOutputWithContext(ctx context.Context) DevToolPortalFeatureStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DevToolPortalFeatureStatePtrOutput)
}

// Whether to enable certificate verification or not
type GatewayCertificateVerification string

const (
	// Enable certificate verification in Spring Cloud Gateway.
	GatewayCertificateVerificationEnabled = GatewayCertificateVerification("Enabled")
	// Disable certificate verification in Spring Cloud Gateway.
	GatewayCertificateVerificationDisabled = GatewayCertificateVerification("Disabled")
)

func (GatewayCertificateVerification) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCertificateVerification)(nil)).Elem()
}

func (e GatewayCertificateVerification) ToGatewayCertificateVerificationOutput() GatewayCertificateVerificationOutput {
	return pulumi.ToOutput(e).(GatewayCertificateVerificationOutput)
}

func (e GatewayCertificateVerification) ToGatewayCertificateVerificationOutputWithContext(ctx context.Context) GatewayCertificateVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GatewayCertificateVerificationOutput)
}

func (e GatewayCertificateVerification) ToGatewayCertificateVerificationPtrOutput() GatewayCertificateVerificationPtrOutput {
	return e.ToGatewayCertificateVerificationPtrOutputWithContext(context.Background())
}

func (e GatewayCertificateVerification) ToGatewayCertificateVerificationPtrOutputWithContext(ctx context.Context) GatewayCertificateVerificationPtrOutput {
	return GatewayCertificateVerification(e).ToGatewayCertificateVerificationOutputWithContext(ctx).ToGatewayCertificateVerificationPtrOutputWithContext(ctx)
}

func (e GatewayCertificateVerification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayCertificateVerification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayCertificateVerification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GatewayCertificateVerification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GatewayCertificateVerificationOutput struct{ *pulumi.OutputState }

func (GatewayCertificateVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCertificateVerification)(nil)).Elem()
}

func (o GatewayCertificateVerificationOutput) ToGatewayCertificateVerificationOutput() GatewayCertificateVerificationOutput {
	return o
}

func (o GatewayCertificateVerificationOutput) ToGatewayCertificateVerificationOutputWithContext(ctx context.Context) GatewayCertificateVerificationOutput {
	return o
}

func (o GatewayCertificateVerificationOutput) ToGatewayCertificateVerificationPtrOutput() GatewayCertificateVerificationPtrOutput {
	return o.ToGatewayCertificateVerificationPtrOutputWithContext(context.Background())
}

func (o GatewayCertificateVerificationOutput) ToGatewayCertificateVerificationPtrOutputWithContext(ctx context.Context) GatewayCertificateVerificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayCertificateVerification) *GatewayCertificateVerification {
		return &v
	}).(GatewayCertificateVerificationPtrOutput)
}

func (o GatewayCertificateVerificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GatewayCertificateVerificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayCertificateVerification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GatewayCertificateVerificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayCertificateVerificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayCertificateVerification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GatewayCertificateVerificationPtrOutput struct{ *pulumi.OutputState }

func (GatewayCertificateVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCertificateVerification)(nil)).Elem()
}

func (o GatewayCertificateVerificationPtrOutput) ToGatewayCertificateVerificationPtrOutput() GatewayCertificateVerificationPtrOutput {
	return o
}

func (o GatewayCertificateVerificationPtrOutput) ToGatewayCertificateVerificationPtrOutputWithContext(ctx context.Context) GatewayCertificateVerificationPtrOutput {
	return o
}

func (o GatewayCertificateVerificationPtrOutput) Elem() GatewayCertificateVerificationOutput {
	return o.ApplyT(func(v *GatewayCertificateVerification) GatewayCertificateVerification {
		if v != nil {
			return *v
		}
		var ret GatewayCertificateVerification
		return ret
	}).(GatewayCertificateVerificationOutput)
}

func (o GatewayCertificateVerificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayCertificateVerificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GatewayCertificateVerification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GatewayCertificateVerificationInput is an input type that accepts values of the GatewayCertificateVerification enum
// A concrete instance of `GatewayCertificateVerificationInput` can be one of the following:
//
//	GatewayCertificateVerificationEnabled
//	GatewayCertificateVerificationDisabled
type GatewayCertificateVerificationInput interface {
	pulumi.Input

	ToGatewayCertificateVerificationOutput() GatewayCertificateVerificationOutput
	ToGatewayCertificateVerificationOutputWithContext(context.Context) GatewayCertificateVerificationOutput
}

var gatewayCertificateVerificationPtrType = reflect.TypeOf((**GatewayCertificateVerification)(nil)).Elem()

type GatewayCertificateVerificationPtrInput interface {
	pulumi.Input

	ToGatewayCertificateVerificationPtrOutput() GatewayCertificateVerificationPtrOutput
	ToGatewayCertificateVerificationPtrOutputWithContext(context.Context) GatewayCertificateVerificationPtrOutput
}

type gatewayCertificateVerificationPtr string

func GatewayCertificateVerificationPtr(v string) GatewayCertificateVerificationPtrInput {
	return (*gatewayCertificateVerificationPtr)(&v)
}

func (*gatewayCertificateVerificationPtr) ElementType() reflect.Type {
	return gatewayCertificateVerificationPtrType
}

func (in *gatewayCertificateVerificationPtr) ToGatewayCertificateVerificationPtrOutput() GatewayCertificateVerificationPtrOutput {
	return pulumi.ToOutput(in).(GatewayCertificateVerificationPtrOutput)
}

func (in *gatewayCertificateVerificationPtr) ToGatewayCertificateVerificationPtrOutputWithContext(ctx context.Context) GatewayCertificateVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GatewayCertificateVerificationPtrOutput)
}

// Protocol of routed Azure Spring Apps applications.
type GatewayRouteConfigProtocol string

const (
	GatewayRouteConfigProtocolHTTP  = GatewayRouteConfigProtocol("HTTP")
	GatewayRouteConfigProtocolHTTPS = GatewayRouteConfigProtocol("HTTPS")
)

func (GatewayRouteConfigProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigProtocol)(nil)).Elem()
}

func (e GatewayRouteConfigProtocol) ToGatewayRouteConfigProtocolOutput() GatewayRouteConfigProtocolOutput {
	return pulumi.ToOutput(e).(GatewayRouteConfigProtocolOutput)
}

func (e GatewayRouteConfigProtocol) ToGatewayRouteConfigProtocolOutputWithContext(ctx context.Context) GatewayRouteConfigProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GatewayRouteConfigProtocolOutput)
}

func (e GatewayRouteConfigProtocol) ToGatewayRouteConfigProtocolPtrOutput() GatewayRouteConfigProtocolPtrOutput {
	return e.ToGatewayRouteConfigProtocolPtrOutputWithContext(context.Background())
}

func (e GatewayRouteConfigProtocol) ToGatewayRouteConfigProtocolPtrOutputWithContext(ctx context.Context) GatewayRouteConfigProtocolPtrOutput {
	return GatewayRouteConfigProtocol(e).ToGatewayRouteConfigProtocolOutputWithContext(ctx).ToGatewayRouteConfigProtocolPtrOutputWithContext(ctx)
}

func (e GatewayRouteConfigProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayRouteConfigProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayRouteConfigProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GatewayRouteConfigProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GatewayRouteConfigProtocolOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteConfigProtocol)(nil)).Elem()
}

func (o GatewayRouteConfigProtocolOutput) ToGatewayRouteConfigProtocolOutput() GatewayRouteConfigProtocolOutput {
	return o
}

func (o GatewayRouteConfigProtocolOutput) ToGatewayRouteConfigProtocolOutputWithContext(ctx context.Context) GatewayRouteConfigProtocolOutput {
	return o
}

func (o GatewayRouteConfigProtocolOutput) ToGatewayRouteConfigProtocolPtrOutput() GatewayRouteConfigProtocolPtrOutput {
	return o.ToGatewayRouteConfigProtocolPtrOutputWithContext(context.Background())
}

func (o GatewayRouteConfigProtocolOutput) ToGatewayRouteConfigProtocolPtrOutputWithContext(ctx context.Context) GatewayRouteConfigProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteConfigProtocol) *GatewayRouteConfigProtocol {
		return &v
	}).(GatewayRouteConfigProtocolPtrOutput)
}

func (o GatewayRouteConfigProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GatewayRouteConfigProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayRouteConfigProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GatewayRouteConfigProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayRouteConfigProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayRouteConfigProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteConfigProtocolPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteConfigProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteConfigProtocol)(nil)).Elem()
}

func (o GatewayRouteConfigProtocolPtrOutput) ToGatewayRouteConfigProtocolPtrOutput() GatewayRouteConfigProtocolPtrOutput {
	return o
}

func (o GatewayRouteConfigProtocolPtrOutput) ToGatewayRouteConfigProtocolPtrOutputWithContext(ctx context.Context) GatewayRouteConfigProtocolPtrOutput {
	return o
}

func (o GatewayRouteConfigProtocolPtrOutput) Elem() GatewayRouteConfigProtocolOutput {
	return o.ApplyT(func(v *GatewayRouteConfigProtocol) GatewayRouteConfigProtocol {
		if v != nil {
			return *v
		}
		var ret GatewayRouteConfigProtocol
		return ret
	}).(GatewayRouteConfigProtocolOutput)
}

func (o GatewayRouteConfigProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayRouteConfigProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GatewayRouteConfigProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GatewayRouteConfigProtocolInput is an input type that accepts values of the GatewayRouteConfigProtocol enum
// A concrete instance of `GatewayRouteConfigProtocolInput` can be one of the following:
//
//	GatewayRouteConfigProtocolHTTP
//	GatewayRouteConfigProtocolHTTPS
type GatewayRouteConfigProtocolInput interface {
	pulumi.Input

	ToGatewayRouteConfigProtocolOutput() GatewayRouteConfigProtocolOutput
	ToGatewayRouteConfigProtocolOutputWithContext(context.Context) GatewayRouteConfigProtocolOutput
}

var gatewayRouteConfigProtocolPtrType = reflect.TypeOf((**GatewayRouteConfigProtocol)(nil)).Elem()

type GatewayRouteConfigProtocolPtrInput interface {
	pulumi.Input

	ToGatewayRouteConfigProtocolPtrOutput() GatewayRouteConfigProtocolPtrOutput
	ToGatewayRouteConfigProtocolPtrOutputWithContext(context.Context) GatewayRouteConfigProtocolPtrOutput
}

type gatewayRouteConfigProtocolPtr string

func GatewayRouteConfigProtocolPtr(v string) GatewayRouteConfigProtocolPtrInput {
	return (*gatewayRouteConfigProtocolPtr)(&v)
}

func (*gatewayRouteConfigProtocolPtr) ElementType() reflect.Type {
	return gatewayRouteConfigProtocolPtrType
}

func (in *gatewayRouteConfigProtocolPtr) ToGatewayRouteConfigProtocolPtrOutput() GatewayRouteConfigProtocolPtrOutput {
	return pulumi.ToOutput(in).(GatewayRouteConfigProtocolPtrOutput)
}

func (in *gatewayRouteConfigProtocolPtr) ToGatewayRouteConfigProtocolPtrOutputWithContext(ctx context.Context) GatewayRouteConfigProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GatewayRouteConfigProtocolPtrOutput)
}

// Git libraries used to support various repository providers
type GitImplementation string

const (
	GitImplementation_Go_Git = GitImplementation("go-git")
	GitImplementationLibgit2 = GitImplementation("libgit2")
)

func (GitImplementation) ElementType() reflect.Type {
	return reflect.TypeOf((*GitImplementation)(nil)).Elem()
}

func (e GitImplementation) ToGitImplementationOutput() GitImplementationOutput {
	return pulumi.ToOutput(e).(GitImplementationOutput)
}

func (e GitImplementation) ToGitImplementationOutputWithContext(ctx context.Context) GitImplementationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GitImplementationOutput)
}

func (e GitImplementation) ToGitImplementationPtrOutput() GitImplementationPtrOutput {
	return e.ToGitImplementationPtrOutputWithContext(context.Background())
}

func (e GitImplementation) ToGitImplementationPtrOutputWithContext(ctx context.Context) GitImplementationPtrOutput {
	return GitImplementation(e).ToGitImplementationOutputWithContext(ctx).ToGitImplementationPtrOutputWithContext(ctx)
}

func (e GitImplementation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GitImplementation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GitImplementation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GitImplementation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GitImplementationOutput struct{ *pulumi.OutputState }

func (GitImplementationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitImplementation)(nil)).Elem()
}

func (o GitImplementationOutput) ToGitImplementationOutput() GitImplementationOutput {
	return o
}

func (o GitImplementationOutput) ToGitImplementationOutputWithContext(ctx context.Context) GitImplementationOutput {
	return o
}

func (o GitImplementationOutput) ToGitImplementationPtrOutput() GitImplementationPtrOutput {
	return o.ToGitImplementationPtrOutputWithContext(context.Background())
}

func (o GitImplementationOutput) ToGitImplementationPtrOutputWithContext(ctx context.Context) GitImplementationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitImplementation) *GitImplementation {
		return &v
	}).(GitImplementationPtrOutput)
}

func (o GitImplementationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GitImplementationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GitImplementation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GitImplementationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GitImplementationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GitImplementation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GitImplementationPtrOutput struct{ *pulumi.OutputState }

func (GitImplementationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitImplementation)(nil)).Elem()
}

func (o GitImplementationPtrOutput) ToGitImplementationPtrOutput() GitImplementationPtrOutput {
	return o
}

func (o GitImplementationPtrOutput) ToGitImplementationPtrOutputWithContext(ctx context.Context) GitImplementationPtrOutput {
	return o
}

func (o GitImplementationPtrOutput) Elem() GitImplementationOutput {
	return o.ApplyT(func(v *GitImplementation) GitImplementation {
		if v != nil {
			return *v
		}
		var ret GitImplementation
		return ret
	}).(GitImplementationOutput)
}

func (o GitImplementationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GitImplementationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GitImplementation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GitImplementationInput is an input type that accepts values of the GitImplementation enum
// A concrete instance of `GitImplementationInput` can be one of the following:
//
//	GitImplementation_Go_Git
//	GitImplementationLibgit2
type GitImplementationInput interface {
	pulumi.Input

	ToGitImplementationOutput() GitImplementationOutput
	ToGitImplementationOutputWithContext(context.Context) GitImplementationOutput
}

var gitImplementationPtrType = reflect.TypeOf((**GitImplementation)(nil)).Elem()

type GitImplementationPtrInput interface {
	pulumi.Input

	ToGitImplementationPtrOutput() GitImplementationPtrOutput
	ToGitImplementationPtrOutputWithContext(context.Context) GitImplementationPtrOutput
}

type gitImplementationPtr string

func GitImplementationPtr(v string) GitImplementationPtrInput {
	return (*gitImplementationPtr)(&v)
}

func (*gitImplementationPtr) ElementType() reflect.Type {
	return gitImplementationPtrType
}

func (in *gitImplementationPtr) ToGitImplementationPtrOutput() GitImplementationPtrOutput {
	return pulumi.ToOutput(in).(GitImplementationPtrOutput)
}

func (in *gitImplementationPtr) ToGitImplementationPtrOutputWithContext(ctx context.Context) GitImplementationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GitImplementationPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
//
// Possible enum values:
//   - `"HTTP"` means that the scheme used will be http://
//   - `"HTTPS"` means that the scheme used will be https://
type HTTPSchemeType string

const (
	HTTPSchemeTypeHTTP  = HTTPSchemeType("HTTP")
	HTTPSchemeTypeHTTPS = HTTPSchemeType("HTTPS")
)

func (HTTPSchemeType) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSchemeType)(nil)).Elem()
}

func (e HTTPSchemeType) ToHTTPSchemeTypeOutput() HTTPSchemeTypeOutput {
	return pulumi.ToOutput(e).(HTTPSchemeTypeOutput)
}

func (e HTTPSchemeType) ToHTTPSchemeTypeOutputWithContext(ctx context.Context) HTTPSchemeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPSchemeTypeOutput)
}

func (e HTTPSchemeType) ToHTTPSchemeTypePtrOutput() HTTPSchemeTypePtrOutput {
	return e.ToHTTPSchemeTypePtrOutputWithContext(context.Background())
}

func (e HTTPSchemeType) ToHTTPSchemeTypePtrOutputWithContext(ctx context.Context) HTTPSchemeTypePtrOutput {
	return HTTPSchemeType(e).ToHTTPSchemeTypeOutputWithContext(ctx).ToHTTPSchemeTypePtrOutputWithContext(ctx)
}

func (e HTTPSchemeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSchemeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSchemeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPSchemeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPSchemeTypeOutput struct{ *pulumi.OutputState }

func (HTTPSchemeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSchemeType)(nil)).Elem()
}

func (o HTTPSchemeTypeOutput) ToHTTPSchemeTypeOutput() HTTPSchemeTypeOutput {
	return o
}

func (o HTTPSchemeTypeOutput) ToHTTPSchemeTypeOutputWithContext(ctx context.Context) HTTPSchemeTypeOutput {
	return o
}

func (o HTTPSchemeTypeOutput) ToHTTPSchemeTypePtrOutput() HTTPSchemeTypePtrOutput {
	return o.ToHTTPSchemeTypePtrOutputWithContext(context.Background())
}

func (o HTTPSchemeTypeOutput) ToHTTPSchemeTypePtrOutputWithContext(ctx context.Context) HTTPSchemeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPSchemeType) *HTTPSchemeType {
		return &v
	}).(HTTPSchemeTypePtrOutput)
}

func (o HTTPSchemeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPSchemeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSchemeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPSchemeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSchemeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSchemeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPSchemeTypePtrOutput struct{ *pulumi.OutputState }

func (HTTPSchemeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPSchemeType)(nil)).Elem()
}

func (o HTTPSchemeTypePtrOutput) ToHTTPSchemeTypePtrOutput() HTTPSchemeTypePtrOutput {
	return o
}

func (o HTTPSchemeTypePtrOutput) ToHTTPSchemeTypePtrOutputWithContext(ctx context.Context) HTTPSchemeTypePtrOutput {
	return o
}

func (o HTTPSchemeTypePtrOutput) Elem() HTTPSchemeTypeOutput {
	return o.ApplyT(func(v *HTTPSchemeType) HTTPSchemeType {
		if v != nil {
			return *v
		}
		var ret HTTPSchemeType
		return ret
	}).(HTTPSchemeTypeOutput)
}

func (o HTTPSchemeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSchemeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPSchemeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPSchemeTypeInput is an input type that accepts values of the HTTPSchemeType enum
// A concrete instance of `HTTPSchemeTypeInput` can be one of the following:
//
//	HTTPSchemeTypeHTTP
//	HTTPSchemeTypeHTTPS
type HTTPSchemeTypeInput interface {
	pulumi.Input

	ToHTTPSchemeTypeOutput() HTTPSchemeTypeOutput
	ToHTTPSchemeTypeOutputWithContext(context.Context) HTTPSchemeTypeOutput
}

var httpschemeTypePtrType = reflect.TypeOf((**HTTPSchemeType)(nil)).Elem()

type HTTPSchemeTypePtrInput interface {
	pulumi.Input

	ToHTTPSchemeTypePtrOutput() HTTPSchemeTypePtrOutput
	ToHTTPSchemeTypePtrOutputWithContext(context.Context) HTTPSchemeTypePtrOutput
}

type httpschemeTypePtr string

func HTTPSchemeTypePtr(v string) HTTPSchemeTypePtrInput {
	return (*httpschemeTypePtr)(&v)
}

func (*httpschemeTypePtr) ElementType() reflect.Type {
	return httpschemeTypePtrType
}

func (in *httpschemeTypePtr) ToHTTPSchemeTypePtrOutput() HTTPSchemeTypePtrOutput {
	return pulumi.ToOutput(in).(HTTPSchemeTypePtrOutput)
}

func (in *httpschemeTypePtr) ToHTTPSchemeTypePtrOutputWithContext(ctx context.Context) HTTPSchemeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPSchemeTypePtrOutput)
}

// Type of the managed identity
type ManagedIdentityType string

const (
	ManagedIdentityTypeNone                         = ManagedIdentityType("None")
	ManagedIdentityTypeSystemAssigned               = ManagedIdentityType("SystemAssigned")
	ManagedIdentityTypeUserAssigned                 = ManagedIdentityType("UserAssigned")
	ManagedIdentityType_SystemAssigned_UserAssigned = ManagedIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return e.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return ManagedIdentityType(e).ToManagedIdentityTypeOutputWithContext(ctx).ToManagedIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityType) *ManagedIdentityType {
		return &v
	}).(ManagedIdentityTypePtrOutput)
}

func (o ManagedIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) Elem() ManagedIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedIdentityType) ManagedIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityType
		return ret
	}).(ManagedIdentityTypeOutput)
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedIdentityTypeInput is an input type that accepts values of the ManagedIdentityType enum
// A concrete instance of `ManagedIdentityTypeInput` can be one of the following:
//
//	ManagedIdentityTypeNone
//	ManagedIdentityTypeSystemAssigned
//	ManagedIdentityTypeUserAssigned
//	ManagedIdentityType_SystemAssigned_UserAssigned
type ManagedIdentityTypeInput interface {
	pulumi.Input

	ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput
	ToManagedIdentityTypeOutputWithContext(context.Context) ManagedIdentityTypeOutput
}

var managedIdentityTypePtrType = reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()

type ManagedIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput
	ToManagedIdentityTypePtrOutputWithContext(context.Context) ManagedIdentityTypePtrOutput
}

type managedIdentityTypePtr string

func ManagedIdentityTypePtr(v string) ManagedIdentityTypePtrInput {
	return (*managedIdentityTypePtr)(&v)
}

func (*managedIdentityTypePtr) ElementType() reflect.Type {
	return managedIdentityTypePtrType
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedIdentityTypePtrOutput)
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedIdentityTypePtrOutput)
}

// The type of the action to take to perform the health check.
type ProbeActionType string

const (
	ProbeActionTypeHTTPGetAction   = ProbeActionType("HTTPGetAction")
	ProbeActionTypeTCPSocketAction = ProbeActionType("TCPSocketAction")
	ProbeActionTypeExecAction      = ProbeActionType("ExecAction")
)

// Type of the affinity, set this to Cookie to enable session affinity.
type SessionAffinity string

const (
	SessionAffinityCookie = SessionAffinity("Cookie")
	SessionAffinityNone   = SessionAffinity("None")
)

func (SessionAffinity) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionAffinity)(nil)).Elem()
}

func (e SessionAffinity) ToSessionAffinityOutput() SessionAffinityOutput {
	return pulumi.ToOutput(e).(SessionAffinityOutput)
}

func (e SessionAffinity) ToSessionAffinityOutputWithContext(ctx context.Context) SessionAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SessionAffinityOutput)
}

func (e SessionAffinity) ToSessionAffinityPtrOutput() SessionAffinityPtrOutput {
	return e.ToSessionAffinityPtrOutputWithContext(context.Background())
}

func (e SessionAffinity) ToSessionAffinityPtrOutputWithContext(ctx context.Context) SessionAffinityPtrOutput {
	return SessionAffinity(e).ToSessionAffinityOutputWithContext(ctx).ToSessionAffinityPtrOutputWithContext(ctx)
}

func (e SessionAffinity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SessionAffinity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SessionAffinity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SessionAffinity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SessionAffinityOutput struct{ *pulumi.OutputState }

func (SessionAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionAffinity)(nil)).Elem()
}

func (o SessionAffinityOutput) ToSessionAffinityOutput() SessionAffinityOutput {
	return o
}

func (o SessionAffinityOutput) ToSessionAffinityOutputWithContext(ctx context.Context) SessionAffinityOutput {
	return o
}

func (o SessionAffinityOutput) ToSessionAffinityPtrOutput() SessionAffinityPtrOutput {
	return o.ToSessionAffinityPtrOutputWithContext(context.Background())
}

func (o SessionAffinityOutput) ToSessionAffinityPtrOutputWithContext(ctx context.Context) SessionAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionAffinity) *SessionAffinity {
		return &v
	}).(SessionAffinityPtrOutput)
}

func (o SessionAffinityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SessionAffinityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SessionAffinity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SessionAffinityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SessionAffinityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SessionAffinity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SessionAffinityPtrOutput struct{ *pulumi.OutputState }

func (SessionAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionAffinity)(nil)).Elem()
}

func (o SessionAffinityPtrOutput) ToSessionAffinityPtrOutput() SessionAffinityPtrOutput {
	return o
}

func (o SessionAffinityPtrOutput) ToSessionAffinityPtrOutputWithContext(ctx context.Context) SessionAffinityPtrOutput {
	return o
}

func (o SessionAffinityPtrOutput) Elem() SessionAffinityOutput {
	return o.ApplyT(func(v *SessionAffinity) SessionAffinity {
		if v != nil {
			return *v
		}
		var ret SessionAffinity
		return ret
	}).(SessionAffinityOutput)
}

func (o SessionAffinityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SessionAffinityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SessionAffinity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SessionAffinityInput is an input type that accepts values of the SessionAffinity enum
// A concrete instance of `SessionAffinityInput` can be one of the following:
//
//	SessionAffinityCookie
//	SessionAffinityNone
type SessionAffinityInput interface {
	pulumi.Input

	ToSessionAffinityOutput() SessionAffinityOutput
	ToSessionAffinityOutputWithContext(context.Context) SessionAffinityOutput
}

var sessionAffinityPtrType = reflect.TypeOf((**SessionAffinity)(nil)).Elem()

type SessionAffinityPtrInput interface {
	pulumi.Input

	ToSessionAffinityPtrOutput() SessionAffinityPtrOutput
	ToSessionAffinityPtrOutputWithContext(context.Context) SessionAffinityPtrOutput
}

type sessionAffinityPtr string

func SessionAffinityPtr(v string) SessionAffinityPtrInput {
	return (*sessionAffinityPtr)(&v)
}

func (*sessionAffinityPtr) ElementType() reflect.Type {
	return sessionAffinityPtrType
}

func (in *sessionAffinityPtr) ToSessionAffinityPtrOutput() SessionAffinityPtrOutput {
	return pulumi.ToOutput(in).(SessionAffinityPtrOutput)
}

func (in *sessionAffinityPtr) ToSessionAffinityPtrOutputWithContext(ctx context.Context) SessionAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SessionAffinityPtrOutput)
}

// The type of the storage.
type StorageType string

const (
	StorageTypeStorageAccount = StorageType("StorageAccount")
)

// Type of job trigger
type TriggerType string

const (
	TriggerTypeManual = TriggerType("Manual")
)

// The type of the underlying resource to mount as a persistent disk.
type Type string

const (
	TypeAzureFileVolume = Type("AzureFileVolume")
)

func init() {
	pulumi.RegisterOutputType(ApmTypeOutput{})
	pulumi.RegisterOutputType(ApmTypePtrOutput{})
	pulumi.RegisterOutputType(BackendProtocolOutput{})
	pulumi.RegisterOutputType(BackendProtocolPtrOutput{})
	pulumi.RegisterOutputType(BindingTypeOutput{})
	pulumi.RegisterOutputType(BindingTypePtrOutput{})
	pulumi.RegisterOutputType(ConfigServerEnabledStateOutput{})
	pulumi.RegisterOutputType(ConfigServerEnabledStatePtrOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGenerationOutput{})
	pulumi.RegisterOutputType(ConfigurationServiceGenerationPtrOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureStateOutput{})
	pulumi.RegisterOutputType(DevToolPortalFeatureStatePtrOutput{})
	pulumi.RegisterOutputType(GatewayCertificateVerificationOutput{})
	pulumi.RegisterOutputType(GatewayCertificateVerificationPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigProtocolOutput{})
	pulumi.RegisterOutputType(GatewayRouteConfigProtocolPtrOutput{})
	pulumi.RegisterOutputType(GitImplementationOutput{})
	pulumi.RegisterOutputType(GitImplementationPtrOutput{})
	pulumi.RegisterOutputType(HTTPSchemeTypeOutput{})
	pulumi.RegisterOutputType(HTTPSchemeTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SessionAffinityOutput{})
	pulumi.RegisterOutputType(SessionAffinityPtrOutput{})
}
