// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// APM Resource object
type Apm struct {
	pulumi.CustomResourceState

	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of an APM
	Properties ApmPropertiesResponseOutput `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewApm registers a new resource with the given unique name, arguments, and options.
func NewApm(ctx *pulumi.Context,
	name string, args *ApmArgs, opts ...pulumi.ResourceOption) (*Apm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:appplatform:Apm"),
		},
		{
			Type: pulumi.String("azure-native:appplatform/v20230501preview:Apm"),
		},
		{
			Type: pulumi.String("azure-native:appplatform/v20230901preview:Apm"),
		},
		{
			Type: pulumi.String("azure-native:appplatform/v20231101preview:Apm"),
		},
		{
			Type: pulumi.String("azure-native:appplatform/v20231201:Apm"),
		},
		{
			Type: pulumi.String("azure-native:appplatform/v20240101preview:Apm"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Apm
	err := ctx.RegisterResource("azure-native:appplatform/v20230701preview:Apm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApm gets an existing Apm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApmState, opts ...pulumi.ResourceOption) (*Apm, error) {
	var resource Apm
	err := ctx.ReadResource("azure-native:appplatform/v20230701preview:Apm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Apm resources.
type apmState struct {
}

type ApmState struct {
}

func (ApmState) ElementType() reflect.Type {
	return reflect.TypeOf((*apmState)(nil)).Elem()
}

type apmArgs struct {
	// The name of the APM
	ApmName *string `pulumi:"apmName"`
	// Properties of an APM
	Properties *ApmProperties `pulumi:"properties"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Service resource.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a Apm resource.
type ApmArgs struct {
	// The name of the APM
	ApmName pulumi.StringPtrInput
	// Properties of an APM
	Properties ApmPropertiesPtrInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// The name of the Service resource.
	ServiceName pulumi.StringInput
}

func (ApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apmArgs)(nil)).Elem()
}

type ApmInput interface {
	pulumi.Input

	ToApmOutput() ApmOutput
	ToApmOutputWithContext(ctx context.Context) ApmOutput
}

func (*Apm) ElementType() reflect.Type {
	return reflect.TypeOf((**Apm)(nil)).Elem()
}

func (i *Apm) ToApmOutput() ApmOutput {
	return i.ToApmOutputWithContext(context.Background())
}

func (i *Apm) ToApmOutputWithContext(ctx context.Context) ApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmOutput)
}

type ApmOutput struct{ *pulumi.OutputState }

func (ApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Apm)(nil)).Elem()
}

func (o ApmOutput) ToApmOutput() ApmOutput {
	return o
}

func (o ApmOutput) ToApmOutputWithContext(ctx context.Context) ApmOutput {
	return o
}

// The name of the resource.
func (o ApmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Apm) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of an APM
func (o ApmOutput) Properties() ApmPropertiesResponseOutput {
	return o.ApplyT(func(v *Apm) ApmPropertiesResponseOutput { return v.Properties }).(ApmPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o ApmOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Apm) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource.
func (o ApmOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Apm) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ApmOutput{})
}
