// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package education

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Student Role
type StudentRole string

const (
	StudentRoleStudent = StudentRole("Student")
	StudentRoleAdmin   = StudentRole("Admin")
)

func (StudentRole) ElementType() reflect.Type {
	return reflect.TypeOf((*StudentRole)(nil)).Elem()
}

func (e StudentRole) ToStudentRoleOutput() StudentRoleOutput {
	return pulumi.ToOutput(e).(StudentRoleOutput)
}

func (e StudentRole) ToStudentRoleOutputWithContext(ctx context.Context) StudentRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StudentRoleOutput)
}

func (e StudentRole) ToStudentRolePtrOutput() StudentRolePtrOutput {
	return e.ToStudentRolePtrOutputWithContext(context.Background())
}

func (e StudentRole) ToStudentRolePtrOutputWithContext(ctx context.Context) StudentRolePtrOutput {
	return StudentRole(e).ToStudentRoleOutputWithContext(ctx).ToStudentRolePtrOutputWithContext(ctx)
}

func (e StudentRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudentRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudentRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StudentRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StudentRoleOutput struct{ *pulumi.OutputState }

func (StudentRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudentRole)(nil)).Elem()
}

func (o StudentRoleOutput) ToStudentRoleOutput() StudentRoleOutput {
	return o
}

func (o StudentRoleOutput) ToStudentRoleOutputWithContext(ctx context.Context) StudentRoleOutput {
	return o
}

func (o StudentRoleOutput) ToStudentRolePtrOutput() StudentRolePtrOutput {
	return o.ToStudentRolePtrOutputWithContext(context.Background())
}

func (o StudentRoleOutput) ToStudentRolePtrOutputWithContext(ctx context.Context) StudentRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StudentRole) *StudentRole {
		return &v
	}).(StudentRolePtrOutput)
}

func (o StudentRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StudentRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudentRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StudentRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudentRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudentRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StudentRolePtrOutput struct{ *pulumi.OutputState }

func (StudentRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StudentRole)(nil)).Elem()
}

func (o StudentRolePtrOutput) ToStudentRolePtrOutput() StudentRolePtrOutput {
	return o
}

func (o StudentRolePtrOutput) ToStudentRolePtrOutputWithContext(ctx context.Context) StudentRolePtrOutput {
	return o
}

func (o StudentRolePtrOutput) Elem() StudentRoleOutput {
	return o.ApplyT(func(v *StudentRole) StudentRole {
		if v != nil {
			return *v
		}
		var ret StudentRole
		return ret
	}).(StudentRoleOutput)
}

func (o StudentRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudentRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StudentRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StudentRoleInput is an input type that accepts values of the StudentRole enum
// A concrete instance of `StudentRoleInput` can be one of the following:
//
//	StudentRoleStudent
//	StudentRoleAdmin
type StudentRoleInput interface {
	pulumi.Input

	ToStudentRoleOutput() StudentRoleOutput
	ToStudentRoleOutputWithContext(context.Context) StudentRoleOutput
}

var studentRolePtrType = reflect.TypeOf((**StudentRole)(nil)).Elem()

type StudentRolePtrInput interface {
	pulumi.Input

	ToStudentRolePtrOutput() StudentRolePtrOutput
	ToStudentRolePtrOutputWithContext(context.Context) StudentRolePtrOutput
}

type studentRolePtr string

func StudentRolePtr(v string) StudentRolePtrInput {
	return (*studentRolePtr)(&v)
}

func (*studentRolePtr) ElementType() reflect.Type {
	return studentRolePtrType
}

func (in *studentRolePtr) ToStudentRolePtrOutput() StudentRolePtrOutput {
	return pulumi.ToOutput(in).(StudentRolePtrOutput)
}

func (in *studentRolePtr) ToStudentRolePtrOutputWithContext(ctx context.Context) StudentRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StudentRolePtrOutput)
}

func (in *studentRolePtr) ToOutput(ctx context.Context) pulumix.Output[*StudentRole] {
	return pulumix.Output[*StudentRole]{
		OutputState: in.ToStudentRolePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(StudentRoleOutput{})
	pulumi.RegisterOutputType(StudentRolePtrOutput{})
}
