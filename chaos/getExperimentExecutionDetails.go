// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chaos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Execution details of an experiment resource.
// Azure REST API version: 2023-11-01.
//
// Other available API versions: 2024-01-01.
func GetExperimentExecutionDetails(ctx *pulumi.Context, args *GetExperimentExecutionDetailsArgs, opts ...pulumi.InvokeOption) (*GetExperimentExecutionDetailsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetExperimentExecutionDetailsResult
	err := ctx.Invoke("azure-native:chaos:getExperimentExecutionDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetExperimentExecutionDetailsArgs struct {
	// GUID that represents a Experiment execution detail.
	ExecutionId string `pulumi:"executionId"`
	// String that represents a Experiment resource name.
	ExperimentName string `pulumi:"experimentName"`
	// String that represents an Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Model that represents the execution details of an Experiment.
type GetExperimentExecutionDetailsResult struct {
	// The reason why the execution failed.
	FailureReason string `pulumi:"failureReason"`
	// String of the fully qualified resource ID.
	Id string `pulumi:"id"`
	// String that represents the last action date time.
	LastActionAt string `pulumi:"lastActionAt"`
	// String of the resource name.
	Name string `pulumi:"name"`
	// The information of the experiment run.
	RunInformation ExperimentExecutionDetailsPropertiesResponseRunInformation `pulumi:"runInformation"`
	// String that represents the start date time.
	StartedAt string `pulumi:"startedAt"`
	// The status of the execution.
	Status string `pulumi:"status"`
	// String that represents the stop date time.
	StoppedAt string `pulumi:"stoppedAt"`
	// String of the resource type.
	Type string `pulumi:"type"`
}

func GetExperimentExecutionDetailsOutput(ctx *pulumi.Context, args GetExperimentExecutionDetailsOutputArgs, opts ...pulumi.InvokeOption) GetExperimentExecutionDetailsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExperimentExecutionDetailsResult, error) {
			args := v.(GetExperimentExecutionDetailsArgs)
			r, err := GetExperimentExecutionDetails(ctx, &args, opts...)
			var s GetExperimentExecutionDetailsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExperimentExecutionDetailsResultOutput)
}

type GetExperimentExecutionDetailsOutputArgs struct {
	// GUID that represents a Experiment execution detail.
	ExecutionId pulumi.StringInput `pulumi:"executionId"`
	// String that represents a Experiment resource name.
	ExperimentName pulumi.StringInput `pulumi:"experimentName"`
	// String that represents an Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetExperimentExecutionDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperimentExecutionDetailsArgs)(nil)).Elem()
}

// Model that represents the execution details of an Experiment.
type GetExperimentExecutionDetailsResultOutput struct{ *pulumi.OutputState }

func (GetExperimentExecutionDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperimentExecutionDetailsResult)(nil)).Elem()
}

func (o GetExperimentExecutionDetailsResultOutput) ToGetExperimentExecutionDetailsResultOutput() GetExperimentExecutionDetailsResultOutput {
	return o
}

func (o GetExperimentExecutionDetailsResultOutput) ToGetExperimentExecutionDetailsResultOutputWithContext(ctx context.Context) GetExperimentExecutionDetailsResultOutput {
	return o
}

// The reason why the execution failed.
func (o GetExperimentExecutionDetailsResultOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.FailureReason }).(pulumi.StringOutput)
}

// String of the fully qualified resource ID.
func (o GetExperimentExecutionDetailsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.Id }).(pulumi.StringOutput)
}

// String that represents the last action date time.
func (o GetExperimentExecutionDetailsResultOutput) LastActionAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.LastActionAt }).(pulumi.StringOutput)
}

// String of the resource name.
func (o GetExperimentExecutionDetailsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.Name }).(pulumi.StringOutput)
}

// The information of the experiment run.
func (o GetExperimentExecutionDetailsResultOutput) RunInformation() ExperimentExecutionDetailsPropertiesResponseRunInformationOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) ExperimentExecutionDetailsPropertiesResponseRunInformation {
		return v.RunInformation
	}).(ExperimentExecutionDetailsPropertiesResponseRunInformationOutput)
}

// String that represents the start date time.
func (o GetExperimentExecutionDetailsResultOutput) StartedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.StartedAt }).(pulumi.StringOutput)
}

// The status of the execution.
func (o GetExperimentExecutionDetailsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.Status }).(pulumi.StringOutput)
}

// String that represents the stop date time.
func (o GetExperimentExecutionDetailsResultOutput) StoppedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.StoppedAt }).(pulumi.StringOutput)
}

// String of the resource type.
func (o GetExperimentExecutionDetailsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetExperimentExecutionDetailsResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExperimentExecutionDetailsResultOutput{})
}
